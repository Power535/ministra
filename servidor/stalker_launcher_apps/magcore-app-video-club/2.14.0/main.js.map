{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/stb-keys/index.js","webpack:///./node_modules/spa-component/index.js","webpack:///./node_modules/spa-app/lib/core.js","webpack:///./node_modules/stb-component/index.js","webpack:///./node_modules/mag-app/index.js","webpack:///./node_modules/cjs-emitter/index.js","webpack:///./node_modules/spa-dom/index.js","webpack:///./node_modules/mag-component-layout/index.js","webpack:///./node_modules/mag-component-layout-list/index.js","webpack:///./node_modules/mag-component-modal/index.js","webpack:///./node_modules/stb-component-scrollbar/index.js","webpack:///./src/js/utils/sort.quality.js","webpack:///./node_modules/spa-keys/index.js","webpack:///./node_modules/spa-app/lib/events.js","webpack:///./node_modules/stb-app/lib/css.js","webpack:///./node_modules/stb-component-page/index.js","webpack:///./node_modules/mag-component-footer/index.js","webpack:///./node_modules/mag-component-panel-set/index.js","webpack:///./node_modules/mag-component-panel/index.js","webpack:///./node_modules/mag-component-list/index.js","webpack:///./src/js/utils/select.file.js","webpack:///./src/js/utils/parse.time.js","webpack:///./node_modules/mag-component-scroll-area/index.js","webpack:///./src/js/main.js","webpack:///./node_modules/mag-app/lib/main.js","webpack:///./node_modules/cjs-query/index.js","webpack:///./src/js/config.js","webpack:///./node_modules/stb-shim-classlist/index.js","webpack:///./node_modules/stb-app/lib/metrics.js","webpack:///./src/js/metrics.js","webpack:///./node_modules/mag-app/lib/css.js","webpack:///../helpers/longpress.js","webpack:///./node_modules/spa-gettext/index.js","webpack:///./node_modules/cjs-gettext/index.js","webpack:///./src/js/pages/main.js","webpack:///./node_modules/spa-component-page/index.js","webpack:///./node_modules/mag-data-cacher/index.js","webpack:///./node_modules/stb-component-modal/index.js","webpack:///./node_modules/spa-component-modal/index.js","webpack:///./node_modules/mag-component-radio-list/index.js","webpack:///./node_modules/spa-component-checkbox/index.js","webpack:///./node_modules/spa-component-scrollbar/index.js","webpack:///./src/js/utils/app.exit.js","webpack:///./src/js/utils/prepare.movies.js","webpack:///./src/js/components/info.panel.js","webpack:///./src/js/utils/list.item.render.js","webpack:///./src/js/pages/info.js","webpack:///./node_modules/spa-component-tab/index.js","webpack:///./src/js/utils/prepare.seasons.js","webpack:///./src/js/utils/prepare.files.js","webpack:///./node_modules/cjs-iso-639/index.js","webpack:///./node_modules/langs/data.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","keys","back","backspace","channelNext","tab","channelPrev","ok","enter","exit","escape","volumeUp","volumeDown","f1","f2","f3","f4","refresh","frame","phone","set","tv","menu","app","rewind","forward","audio","standby","keyboard","usbMounted","usbUnmounted","playPause","play","pause","stop","power","record","info","mute","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","Emitter","counter","Component","config","self","this","visible","focusable","$node","$body","parent","children","propagate","document","createElement","className","id","add","hide","defaultEvents","events","forEach","eventName","addListener","apply","addEventListener","event","focus","emit","stopPropagation","constructor","child","index","arguments","length","push","parentNode","appendChild","item","remove","activePage","activeComponent","blur","splice","indexOf","removeChild","data","activeItem","classList","show","callback","setTimeout","parse","query","location","search","substring","route","pageTo","page","pageFrom","active","showPage","from","to","once","onceWrapper","removeListener","addListeners","callbacks","filter","fn","undefined","Array","slice","dom","tag","tagName","attrList","content","node","createTextNode","fragment","createDocumentFragment","tagDst","Node","nodes","count","clear","lastChild","Layout","focusIndex","links","init","code","right","left","$parentItem","focusItem","$wrapper","HTMLElement","wrap","normalize","firstChild","componentClickHandler","textContent","List","LayoutList","handlers","$noData","fixedData","$item","layout","inner","renderItemDefault","layoutConfig","currentNode","currentData","ready","items","childNodes","innerText","click","setData","$wrap","noData","innerHTML","Element","renderItem","StbComponentModal","Modal","$overlay","onkeydown","keydown","$header","$text","title","icon","$icon","video","list","subtitleList","getSubtitleUri","uri","getUrl","type","lang","languages","url","getUri","sort","itemA","itemB","quality","width","subtitles","space","pageUp","pageDown","end","home","up","down","insert","del","DOMContentLoaded","load","unload","error","eventLocal","keyCode","ctrlKey","altKey","shiftKey","keypress","mousewheel","link","rel","href","metrics","height","head","classes","Footer","currentTab","tabs","codes","$table","insertRow","rows","insertCell","$left","cells","$right","currTab","action","$tab","$tabChildren","addClick","ind","middle","disabled","style","visibility","onclick","PanelSet","keydownHandler","panels","main","Panel","size","shadows","isArray","$focusItem","viewIndex","TYPE_VERTICAL","cycle","scroll","provider","TYPE_HORIZONTAL","wheelDeltaY","move","wheelDeltaX","idx","currSize","onClick","render","blocked","realSize","maxCount","viewSize","pos","blurItem","renderView","itemData","prevIndex","currIndex","mark","scrollTo","direction","force","previousSibling","nextSibling","$prev","$curr","markItem","state","language","file","languageCode0","languageCode1","selected","time","min","hour","Math","floor","ScrollArea","step","realHeight","viewHeight","topPosition","screen","delta","top","ceil","offsetHeight","api","core","plugins","videoBackend","genreId","categoryId","favorite","limit","environment","pages","window","getCoreInstance","platform","body","setAttribute","contextmenu","preventDefault","split","part","decodeURIComponent","stringify","params","encodeURIComponent","join","documentElement","DOMTokenList","el","_element","_classCache","replace","token","contains","toString","toggle","screenHeight","availHeight","availTop","availBottom","availWidth","availLeft","availRight","480","leftList","576","720","1080","linkCSS","theme","path","longClick","timer","pressed","fired","LONG_CLICK_TIMEOUT","keyToChange","emitKeyCode","emitCode","emitKeydown","redefine","eventType","clearTimeout","Gettext","loader","prepare","gettext","_","pgettext","ngettext","defaultLanguage","xhr","ext","XMLHttpRequest","onload","JSON","responseText","onerror","ontimeout","open","send","meta","msgId","context","plural","evalResult","eval","panelSet","resetFilters","actionModalReset","filmList","actionItems","actionModal","categoriesList","actionModalNotEnded","scrollbarList","genreList","modalScrollbar","selectGenre","selectCategories","sortFilm","listAction","listActionNotEnded","getElementById","Provider","ModalMessage","RadioList","Scrollbar","sortQuality","selectFile","prepareMovies","parseTime","infoPanel","footer","leftPanel","$headerAmount","filmPanel","rightPanel","censored","category","accessControl","request","textArea","checkTime","providerConfig","translations","inputConfig","placeholder","timers","changeFavorite","$favorite","changeFlags","prepareToPlay","continueWatch","previousHandler","nextHandler","playerContext","intent","checkFile","series","seasons","indexes","position","season","original_name","number","files","getEpisode","seasonId","episodeId","mime","movie","mediaId","saveVideo","close","next","prev","metadata","audioLang","getSeasons","getSeries","seriesData","filmGetter","getList","showActionModal","sortby","offset","pageSize","cacheSize","$checkedData","categories","genres","watched","watched_status","status","$status","videoData","watchAgain","linksFavorite","linksWatchedStatus","watchedStatus","$title","click:item","select","duration","progress","statusData","episode","refreshList","watched_time","changeWatchedFile","check","onFocusItem","leftListData","done","goExit","label","focus:item","showLock","showInfo","fill","onFocusDebounceTimeout","move:view","data:error","getCategories","result","getGenres","ids","goBack","source","SOURCES","LAUNCHER","imit","tail","headItem","Page","DataCacher","stepSize","botEmptyLine","lastChecked","receivedData","Date","unshift","getTime","goEnd","checkNext","refreshData","checkPrev","goHome","cb","concat","CheckBox","group","checkBox","$last","table","tr","td","groups","ScrollBar","thumbRect","trackRect","$thumb","getBoundingClientRect","marginTop","marginLeft","curr","exitModal","previousFocus","mainPanelSet","titleText","dateText","map","genre","$titleWrap","htmlInstance","realValue","$infoContainer","$lockContainer","$poster","$rating","$director","$actors","backgroundImage","display","cover","backend","host","actors","director","domLinks","$genre","descriptionItem","playItem","$info","$description","playText","seasonTitle","playList","playModal","refreshPlayList","pressOk","modalPlayList","playHistory","TabItem","prepareSeasons","prepareFiles","scrollList","types","configRequest","historyStack","infoTable","infoData","moveBack","pop","$name","hasNext","hasPrevios","previosHandler","selectNextFile","needTitle","closeIntent","startPlay","noRefresh","externalSubtitles","last_watched_season_id","selectedIndex","last_watched_episode_id","last_watched_file_id","configData","$tr","$tdTitle","$tdDescription","tableNames","line","text","year","year_end","country","rating_mpaa","age","description","Tab","iso639","tempLanguage","langs","1","2T","2B","local","2","3"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,YAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,mCCnEA,IAAAC,EAAWpC,EAAQ,IAInBoC,EAAAC,KAAAD,EAAAE,UACAF,EAAAG,YAAAH,EAAAI,IACAJ,EAAAK,YAAAL,EAAAI,IAAA,IACAJ,EAAAM,GAAAN,EAAAO,MACAP,EAAAQ,KAAAR,EAAAS,OACAT,EAAAU,SAAA,IACAV,EAAAW,WAAA,IACAX,EAAAY,GAAA,OACAZ,EAAAa,GAAA,OACAb,EAAAc,GAAA,OACAd,EAAAe,GAAA,OACAf,EAAAgB,QAAA,OACAhB,EAAAiB,MAAA,OACAjB,EAAAkB,MAAA,OACAlB,EAAAmB,IAAA,OACAnB,EAAAoB,GAAA,OACApB,EAAAqB,KAAA,OACArB,EAAAsB,IAAA,OACAtB,EAAAuB,OAAA,MACAvB,EAAAwB,QAAA,MACAxB,EAAAyB,MAAA,MACAzB,EAAA0B,QAAA,MACA1B,EAAA2B,SAAA,MACA3B,EAAA4B,WAAA,MACA5B,EAAA6B,aAAA,MACA7B,EAAA8B,UAAA,MACA9B,EAAA+B,MAAA,EACA/B,EAAAgC,OAAA,EACAhC,EAAAiC,KAAA,MACAjC,EAAAkC,MAAA,MACAlC,EAAAmC,OAAA,MACAnC,EAAAoC,KAAA,MACApC,EAAAqC,KAAA,OACArC,EAAAsC,OAAA,GACAtC,EAAAuC,OAAA,GACAvC,EAAAwC,OAAA,GACAxC,EAAAyC,OAAA,GACAzC,EAAA0C,OAAA,GACA1C,EAAA2C,OAAA,GACA3C,EAAA4C,OAAA,GACA5C,EAAA6C,OAAA,GACA7C,EAAA8C,OAAA,GACA9C,EAAA+C,OAAA,GAIAhF,EAAAD,QAAAkC,gCCxDA,IAAAsB,EAAc1D,EAAQ,GACtBoF,EAAcpF,EAAQ,GACtBqF,EAAA,EAuCA,SAAAC,EAAAC,GAEA,IACA5E,EADA6E,EAAAC,KAyHA,GArHAF,KAAA,GAmCAE,KAAAC,SAAA,EAOAD,KAAAE,WAAA,EAOAF,KAAAG,MAAA,KAQAH,KAAAI,MAAA,KAOAJ,KAAAK,OAAA,KAOAL,KAAAM,SAAA,GAQAN,KAAAO,YAAAT,EAAAS,UAGAZ,EAAA7E,KAAAkF,MAGAA,KAAAG,MAAAL,EAAAK,OAAAK,SAAAC,cAAA,OAGAT,KAAAI,MAAAN,EAAAM,OAAAJ,KAAAG,MAKAH,KAAAG,MAAAO,UAAAV,KAAA9E,KAAA,KAAA4E,EAAAY,WAAA,IAGAV,KAAAW,GAAAb,EAAAa,IAAAX,KAAAG,MAAAQ,IAAA,MAAAf,IAGAE,EAAAO,QAEAP,EAAAO,OAAAO,IAAAZ,OAIA,IAAAF,EAAAG,SAEAD,KAAAa,QAIA,IAAAf,EAAAI,YAEAF,KAAAE,WAAA,GAIAF,KAAAc,cAaA,IAAA5F,KAXA4E,EAAAiB,OAAAjB,EAAAiB,QAAA,GAWAf,KAAAc,cAEAhB,EAAAiB,OAAA7F,GAAA4E,EAAAiB,OAAA7F,IAAA8E,KAAAc,cAAA5F,GAIA4E,EAAAiB,QAEA1F,OAAAsB,KAAAmD,EAAAiB,QAAAC,QAAA,SAAAC,GACAlB,EAAAmB,YAAAD,EAAAnB,EAAAiB,OAAAE,MAKAnB,EAAAQ,UAEAN,KAAAY,IAAAO,MAAAnB,KAAAF,EAAAQ,UAIAN,KAAAG,MAAAiB,iBAAA,iBAAAC,GAIAtB,EAAAuB,QAGAvB,EAAAgB,OAAA,UASAhB,EAAAwB,KAAA,QAAAF,GAcAA,EAAAG,oBAaAxB,KAAA9E,KAAA8E,KAAAW,GACAX,KAAA9E,KAAA8E,KAAAW,GAMAd,EAAAtD,UAAAlB,OAAAY,OAAA0D,EAAApD,WACAsD,EAAAtD,UAAAkF,YAAA5B,EAQAA,EAAAtD,UAAAuE,cAAA,KAgBAjB,EAAAtD,UAAAqE,IAAA,SAAAc,GACA,IAAAC,EAGA,IAAAA,EAAA,EAAoBA,EAAAC,UAAAC,OAA0BF,IAC9CD,EAAAE,UAAAD,GASA3B,KAAAM,SAAAwB,KAAAJ,GACAA,EAAArB,OAAAL,KAGA0B,EAAAvB,OAAA,OAAAuB,EAAAvB,MAAA4B,YACA/B,KAAAI,MAAA4B,YAAAN,EAAAvB,OAGAuB,EAAAxG,KAAAwG,EAAAf,GAAAX,KAAA9E,KAAA8E,KAAAW,GACAX,KAAA9E,KAAA8E,KAAAW,GAAAe,EAAAxG,KAAAwG,EAAAf,GAIAX,KAAAe,OAAA,QASAf,KAAAuB,KAAA,OAA8BU,KAAAP,KA8C9B7B,EAAAtD,UAAA2F,OAAA,WAEAlC,KAAAK,SAQApC,EAAAkE,WAAAC,kBAAApC,OACAA,KAAAqC,OACArC,KAAAK,OAAAiB,SAEAtB,KAAAK,OAAAC,SAAAgC,OAAAtC,KAAAK,OAAAC,SAAAiC,QAAAvC,MAAA,IAIAA,KAAAM,SAAAU,QAAA,SAAAU,GAOAA,EAAAQ,WAGAlC,KAAAG,MAAA4B,WAAAS,YAAAxC,KAAAG,OAGAH,KAAAe,OAAA,WAMAf,KAAAuB,KAAA,UAIAvB,KAAAe,OAAA,GAGAf,KAAA9E,KAAA8E,KAAAW,GACAX,KAAA9E,KAAA8E,KAAAW,IAeAd,EAAAtD,UAAA+E,MAAA,SAAAmB,GACA,IAAAN,EAAAlE,EAAAkE,WACAO,EAAAP,EAAAC,gBAIA,SAAApC,KAAAE,WAAAF,OAAA0C,KAEAA,GAA2BA,EAAAL,OAK3BF,EAAAC,gBAAAM,EAAA1C,KACA0C,EAAAvC,MAAAwC,UAAA/B,IAAA,SAGAZ,KAAA9E,KAAA8E,KAAAW,GACAX,KAAA9E,KAAA8E,KAAAW,GAIA+B,EAAA3B,OAAA,UAMA2B,EAAAnB,KAAA,QAAAkB,IAGA,IAgBA5C,EAAAtD,UAAA8F,KAAA,WACA,IAAAF,EAAAlE,EAAAkE,WACAO,EAAAP,EAAAC,gBAMA,OAHApC,KAAAG,MAAAwC,UAAAT,OAAA,SAGAlC,OAAA0C,GACAP,EAAAC,gBAAA,KAGApC,KAAA9E,KAAA8E,KAAAW,GACAX,KAAA9E,KAAA8E,KAAAW,GAIAX,KAAAe,OAAA,SAMAf,KAAAuB,KAAA,SAGA,IAGAvB,KAAA9E,KAAA8E,KAAAW,GACAX,KAAA9E,KAAA8E,KAAAW,IAIA,IAmCAd,EAAAtD,UAAAqG,KAAA,SAAAH,EAAAI,GAIA,OAAA7C,KAAAC,UAaAD,KAAAG,MAAAwC,UAAAT,OAAA,UAEAlC,KAAAC,SAAA,EAEAD,KAAA9E,KAAA8E,KAAAW,GACAX,KAAA9E,KAAA8E,KAAAW,GAIAX,KAAAe,OAAA,SAMAf,KAAAuB,KAAA,OAAAkB,GAIA,mBAAAI,GAEAC,WAAAD,IAGA,IAiBAhD,EAAAtD,UAAAsE,KAAA,SAAAgC,GAEA,QAAA7C,KAAAC,UAEAD,KAAAG,MAAAwC,UAAA/B,IAAA,UAEAZ,KAAAC,SAAA,EAEAD,KAAA9E,KAAA8E,KAAAW,GACAX,KAAA9E,KAAA8E,KAAAW,GAIAX,KAAAe,OAAA,SAMAf,KAAAuB,KAAA,QAIA,mBAAAsB,GAEAC,WAAAD,IAGA,IASAnI,EAAAD,QAAAoF,gCCjnBA,IAAAF,EAAcpF,EAAQ,GACtBwI,EAAcxI,EAAQ,IAAWwI,MACjC9E,EAAA,IAAA0B,EA0EA1B,EAAA+E,MAAAD,EAAAvC,SAAAyC,SAAAC,OAAAC,UAAA,IAKAlF,EAAA6B,OAAavF,EAAQ,IAIrB0D,EAAAkE,WAAA,KAYAlE,EAAAmF,MAAA,SAAAC,EAAAZ,GACA,IAlDAa,EAkDAC,EAAAtF,EAAAkE,WAcA,SAAAkB,KAAAG,UAEAH,EAAAnI,KAAAmI,EAAA1C,GAAyE0C,EAAAnI,KAAAmI,EAAA1C,IAlEzE2C,EAwEArF,EAAAkE,aAtEAmB,EAAAE,SAEAF,EAAAnD,MAAAwC,UAAAT,OAAA,UACAoB,EAAAE,QAAA,EACAvF,EAAAkE,WAAA,KAEAmB,EAAApI,KAAAoI,EAAA3C,GACA2C,EAAApI,KAAAoI,EAAA3C,GAKA2C,EAAAvC,OAAA,SAEAuC,EAAA/B,KAAA,SAlDA,SAAA+B,EAAAb,IAEAa,KAAAE,SAEAF,EAAAnD,MAAAwC,UAAA/B,IAAA,UACA0C,EAAAE,QAAA,EACAvF,EAAAkE,WAAAmB,EAEAA,EAAApI,KAAAoI,EAAA3C,GACA2C,EAAApI,KAAAoI,EAAA3C,GAKA2C,EAAAvC,OAAA,SAEAuC,EAAA/B,KAAA,QAA+BkB,UA2F/BgB,CAAAJ,EAAAZ,GAGAzC,KAAAe,OAAA,UAEAf,KAAAuB,KAAA,SAAgCmC,KAAAH,EAAAI,GAAAN,KAMhC,IAYA3I,EAAAD,QAAAwD,gCCjJAvD,EAAAD,QAAiBF,EAAQ,iCCDzB,IAAA0D,EAAU1D,EAAQ,IAGlBG,EAAAD,QAAAwD,gCCSA,SAAA0B,IAwBAK,KAAAe,OAAA,GAIApB,EAAApD,UAAA,CAaA2E,YAAA,SAAAhG,EAAA2H,GAaA7C,KAAAe,OAAA7F,GAAA8E,KAAAe,OAAA7F,IAAA,GAEA8E,KAAAe,OAAA7F,GAAA4G,KAAAe,IAcAe,KAAA,SAAA1I,EAAA2H,GAEA,IAAA9C,EAAAC,KAeAA,KAAAe,OAAA7F,GAAA8E,KAAAe,OAAA7F,IAAA,GAEA8E,KAAAe,OAAA7F,GAAA4G,KAAA,SAAA+B,IACA9D,EAAA+D,eAAA5I,EAAA2I,GACAhB,EAAA1B,MAAApB,EAAA6B,cAgBAmC,aAAA,SAAAC,GACA,IAAA9I,EAcA,IAAAA,KAAA8I,EACAA,EAAAxH,eAAAtB,IACA8E,KAAAkB,YAAAhG,EAAA8I,EAAA9I,KAeA4I,eAAA,SAAA5I,EAAA2H,GAiBA7C,KAAAe,OAAA7F,KAEA8E,KAAAe,OAAA7F,GAAA8E,KAAAe,OAAA7F,GAAA+I,OAAA,SAAAC,GAA0F,OAAAA,IAAArB,IAE1F,IAAA7C,KAAAe,OAAA7F,GAAA2G,SAEA7B,KAAAe,OAAA7F,QAAAiJ,KAwDA5C,KAAA,SAAArG,GACA,IACAyG,EADAN,EAAArB,KAAAe,OAAA7F,GAaA,GAAAmG,EAOA,IAAAM,EAAA,EAA4BA,EAAAN,EAAAQ,OAAsBF,IAQlDN,EAAAM,GAAAR,MAAAnB,KAAAoE,MAAA7H,UAAA8H,MAAAvJ,KAAA8G,UAAA,MAQAjC,EAAApD,UAAAkF,YAAA9B,EAIAjF,EAAAD,QAAAkF,gCCxQA,IAAA2E,EAAA,CAiBAC,IAAA,SAAAC,EAAAC,EAAAC,GACA,IACA/C,EAAAzG,EADAyJ,EAAA,KAIA,GAAAH,EAAA,CAKA,GAHAG,EAAAnE,SAAAC,cAAA+D,GAGAC,GAAA,iBAAAA,EACA,IAAAvJ,KAAAuJ,EAEAE,EAAAzJ,GAAAuJ,EAAAvJ,GAKA,IAAAyG,EAAA,EAAwBA,EAAAC,UAAAC,OAA0BF,IAElDC,UAAAD,IAEAgD,EAAA3C,YACA,iBAAAJ,UAAAD,GAAAC,UAAAD,GAAAnB,SAAAoE,eAAAhD,UAAAD,KAOA,OAAAgD,GAkBAE,SAAA,SAAAF,GAEA,IACAhD,EADAkD,EAAArE,SAAAsE,yBAIA,IAAAnD,EAAA,EAAoBA,EAAAC,UAAAC,OAA0BF,KAC9CgD,EAAA/C,UAAAD,KAIAkD,EAAA7C,YAAA,iBAAA2C,IAAAnE,SAAAoE,eAAAD,IAIA,OAAAE,GAqBAjE,IAAA,SAAAmE,EAAAL,GACA,IAAA/C,EAGA,GAAAoD,aAAAC,KAAA,CAEA,IAAArD,EAAA,EAAwBA,EAAAC,UAAAC,OAA0BF,IAElDC,UAAAD,IAEAoD,EAAA/C,YACA,iBAAAJ,UAAAD,GAAAC,UAAAD,GAAAnB,SAAAoE,eAAAhD,UAAAD,KAKA,OAAAoD,EAGA,aAcA7C,OAAA,SAAA+C,GAEA,IACAtD,EADAuD,EAAA,EAIA,IAAAvD,EAAA,EAAoBA,EAAAC,UAAAC,OAA0BF,IAE9CC,UAAAD,IAAAC,UAAAD,GAAAI,YACAH,UAAAD,GAAAI,WAAAS,YAAAZ,UAAAD,MAAAC,UAAAD,IACAuD,IAKA,OAAAtD,UAAAC,OAAA,GAAAqD,IAAAtD,UAAAC,QAIAsD,MAAA,SAAAR,GACA,KAAAA,EAAAS,WACAT,EAAAnC,YAAAmC,EAAAS,aAMA1K,EAAAD,QAAA6J,gCCtKA,IAAAzE,EAAgBtF,EAAQ,GACxBoC,EAAgBpC,EAAQ,GAWxB,SAAA8K,EAAAvF,GACA,IAAAC,EAAAC,KAGAF,KAAA,GAMAE,KAAAsF,WAAA,EAkBAtF,KAAAyC,KAAA,GAKAzC,KAAAuF,MAAA,GAEA1F,EAAA/E,KAAAkF,KAAAF,GAEAE,KAAAwF,KAAA1F,GAGAE,KAAAkB,YAAA,mBAAAG,GACA,OAAAA,EAAAoE,MACA,KAAA9I,EAAA+I,MACA3F,EAAAO,SAAAuB,QAAA9B,EAAAuF,WAAAvF,EAAAO,SAAAuB,OAAA,GACA9B,EAAAO,WAAAP,EAAAuF,YAAAhE,QAEA,MACA,KAAA3E,EAAAgJ,KACA5F,EAAAO,SAAAuB,QAAA9B,EAAAuF,WAAA,GACAvF,EAAAO,WAAAP,EAAAuF,YAAAhE,QAEA,MACA,KAAA3E,EAAAC,KAEAmD,EAAAM,SACAN,EAAAM,OAAAiB,QACAvB,EAAA6F,aACA7F,EAAAM,OAAAwF,UAAA9F,EAAA6F,iBASAP,EAAA9I,UAAAlB,OAAAY,OAAA4D,EAAAtD,WACA8I,EAAA9I,UAAAkF,YAAA4D,EAGAA,EAAA9I,UAAArB,KAAA,uBAuDAmK,EAAA9I,UAAAiJ,KAAA,SAAA1F,GAMA,IALA,IAEAmC,EAAA6D,EAAAnE,EAFA5B,EAAAC,KACAyC,EA/CA,SAAAA,GACA,IAAAd,EAAAM,EAYA,IAAAN,EAAA,EAAoBA,EAAAc,EAAAZ,OAAqBF,IAIzC,iBAFAM,EAAAQ,EAAAd,IAIAM,aAAApC,GAAAoC,aAAA8D,YACAtD,EAAAd,GAAA,CACA/F,MAAAqG,EACA+D,MAAA,GAGAvD,EAAAd,GAAAqE,MAAA,EAIAvD,EAAAd,GAAA,CACA/F,MAAA6G,EAAAd,GACAqE,MAAA,GAKA,OAAAvD,EAWAwD,CAAAnG,EAAA2C,MAIAzC,KAAAG,MAAA+F,YACAlG,KAAAG,MAAAqC,YAAAxC,KAAAG,MAAA+F,YAQA,SAAAC,IACApG,EAAAuF,WAAAtF,KAAA2B,MAGA,IATA3B,KAAAyC,OASAd,EAAA,EAAoBA,EAAAc,EAAAZ,OAAqBF,IAGzC,iBAFAM,EAAAQ,EAAAd,IAEA/F,QACAkK,EAAAtF,SAAAC,cAAA,QACA2F,YAAAnE,EAAArG,MACAqG,EAAAvB,YAAmCoF,EAAApF,UAAAuB,EAAAvB,WACnCV,KAAAG,MAAA6B,YAAA8D,GACA7D,EAAA/G,OACA8E,KAAAuF,MAAAtD,EAAA/G,MAAA4K,IAES7D,EAAArG,iBAAAmK,YAIT9D,EAAA+D,MACAF,EAAAtF,SAAAC,cAAA,OACAwB,EAAAvB,YAAuCoF,EAAApF,UAAAuB,EAAAvB,WACvCoF,EAAA9D,YAAAC,EAAArG,OACAoE,KAAAG,MAAA6B,YAAA8D,GACA7D,EAAA/G,OACA8E,KAAAuF,MAAAtD,EAAA/G,MAAA4K,KAIA9F,KAAAG,MAAA6B,YAAAC,EAAArG,OACAqG,EAAA/G,OACA8E,KAAAuF,MAAAtD,EAAA/G,MAAA+G,EAAArG,QAGSqG,EAAArG,iBAAAiE,GAGToC,EAAArG,MAAA2E,WAAA,EAGA0B,EAAArG,MAAA+F,MAAA3B,KAAAM,SAAAuB,OAGAI,EAAArG,MAAAsF,YAAA,QAAAiF,GAGAlE,EAAA+D,MAEAF,EAAAtF,SAAAC,cAAA,OACAwB,EAAAvB,YAAuCoF,EAAApF,UAAAuB,EAAAvB,WACvCoF,EAAA9D,YAAAC,EAAArG,MAAAuE,OACAH,KAAAG,MAAA6B,YAAA8D,GACA9F,KAAAM,SAAAwB,KAAAG,EAAArG,OACAqG,EAAArG,MAAAyE,OAAAL,KACAiC,EAAA/G,OACA8E,KAAAuF,MAAAtD,EAAA/G,MAAA4K,KAIA9F,KAAAY,IAAAqB,EAAArG,OACAqG,EAAA/G,OACA8E,KAAAuF,MAAAtD,EAAA/G,MAAA+G,EAAArG,UAIAkK,EAAAtF,SAAAC,cAAA,OACAwB,EAAAvB,YAAmCoF,EAAApF,UAAAuB,EAAAvB,WACnCV,KAAAG,MAAA6B,YAAA8D,GACA7D,EAAA/G,OACA8E,KAAAuF,MAAAtD,EAAA/G,MAAA4K,KAOApL,EAAAD,QAAA4K,gCCpOA,IAAAgB,EAAW9L,EAAQ,IACnB8K,EAAa9K,EAAQ,GAqErB,SAAA+L,EAAAxG,GACA,IAAAC,EAAAC,KAEAF,KAAA,GAKAE,KAAAuG,SAAA,GAKAvG,KAAAuF,MAAA,GAOAvF,KAAAwG,QAAA,KAIA1G,EAAAS,eAAA4D,IAAArE,EAAAS,WAAAT,EAAAS,UAOAP,KAAAyG,UAAA3G,EAAA2G,YAAA,EAIA3G,EAAAM,MAAAI,SAAAC,cAAA,OACAX,EAAAM,MAAAM,UAAA,OAEAV,KAAAwG,QAAAhG,SAAAC,cAAA,OACAT,KAAAwG,QAAA9F,UAAA,gBAEA2F,EAAAvL,KAAAkF,KAAAF,GAEAE,KAAAG,MAAA6B,YAAAhC,KAAAI,OACAJ,KAAAG,MAAA6B,YAAAhC,KAAAwG,SAGAxG,KAAAkB,YAAA,sBAAAG,GAEAA,EAAAqF,MAAAC,OAAArG,SAAAuB,SAAAR,EAAAuF,OACAvF,EAAAqF,MAAAC,OAAArG,SAAAe,EAAAqF,MAAAC,OAAArB,YAAAhE,QAIAD,EAAAuF,QACA7G,EAAAuB,QACAvB,EAAA8F,UAAAxE,EAAAqF,QAGA3G,EAAAwG,SAAAlF,EAAAqF,MAAA/E,QACA5B,EAAAwG,SAAAlF,EAAAqF,MAAA/E,OAAAN,EAAAqF,SAMAJ,EAAA/J,UAAAlB,OAAAY,OAAAoK,EAAA9J,WACA+J,EAAA/J,UAAAkF,YAAA6E,EAGAA,EAAA/J,UAAArB,KAAA,4BAUAoL,EAAA/J,UAAAsK,kBAAA,SAAAH,EAAA5G,GACA,IAAA6G,EAAAG,EACAC,EACAC,EACArM,EAEA,GAAA+L,EAAAO,OAAAjH,KAAAyG,UACA,IAAA9L,EAAA,EAAoBA,EAAAmF,EAAAoH,MAAArF,OAAyBlH,IAE7C,iBADAqM,EAAAlH,EAAAoH,MAAAvM,IACAiB,YAAAuI,IAAA6C,EAAApL,SACAmL,EAAAL,EAAAC,OAAAxG,MAAAgH,WAAAxM,IACAyM,UAAAJ,EAAApL,OAAA,GACAmL,EAAArG,UAAAsG,EAAAtG,WAAA,QAGK,CAEL,KAAAgG,EAAAR,YACAQ,EAAAlE,YAAAkE,EAAAR,YAGAY,EAAA,CACA5G,WAAA,EACAuC,KAAA3C,EAAAoH,OAGApH,EAAAY,YACAoG,EAAApG,UAAAZ,EAAAY,WAGAiG,EAAA,IAAAtB,EAAAyB,GAEAhH,EAAA5E,OACA8E,KAAAuF,MAAAzF,EAAA5E,MAAAyL,GAGAD,EAAA1E,YAAA2E,EAAAxG,OACAuG,EAAAC,SACAA,EAAAtG,OAAAL,KACA2G,EAAAf,YAAAc,EAGAC,EAAAzF,YAAA,mBAEAyF,EAAAtG,OAAAkB,KAAA,cAA8CmF,QAAAE,OAAA,MAG9C9G,EAAAuH,QACArH,KAAAuG,SAAAG,EAAA/E,OAAA7B,EAAAuH,OAGAX,EAAAO,OAAA,EAEAP,EAAA9K,MAAAkE,EAAAlE,OAAA,IAIA0K,EAAA/J,UAAA+K,QAAA,SAAAxH,GACAE,KAAAuF,MAAA,GACAc,EAAA9J,UAAA+K,QAAAxM,KAAAkF,KAAAF,GAEAA,EAAA2C,MAAA3C,EAAA2C,KAAAZ,OACA7B,KAAAwG,QAAA7D,UAAA/B,IAAA,UAEAZ,KAAAwG,QAAA7D,UAAAT,OAAA,WAKAoE,EAAA/J,UAAAiJ,KAAA,SAAA1F,GACA,IAAAyH,EAEAlB,EAAA9J,UAAAiJ,KAAA1K,KAAAkF,KAAAF,GACAA,EAAA0H,SAOAxH,KAAAwG,QAAAiB,UAAA,GACA3H,EAAA0H,kBAAAE,QACA1H,KAAAwG,QAAAxE,YAAAlC,EAAA0H,QACS,iBAAA1H,EAAA0H,UACTD,EAAA/G,SAAAC,cAAA,QACA2G,UAAAtH,EAAA0H,OACAxH,KAAAwG,QAAAxE,YAAAuF,KAIAzH,EAAA2C,MAAA3C,EAAA2C,KAAAZ,OACA7B,KAAAwG,QAAA7D,UAAA/B,IAAA,UAEAZ,KAAAwG,QAAA7D,UAAAT,OAAA,WAIAoE,EAAA/J,UAAAoL,WAAArB,EAAA/J,UAAAsK,kBAGAnM,EAAAD,QAAA6L,gCCzPA,IAAAsB,EAAwBrN,EAAQ,IAChCsF,EAAwBtF,EAAQ,GAChCoC,EAAwBpC,EAAQ,GAgChC,SAAAsN,EAAA/H,GACA,IACAgI,EAAA1H,EAAA2H,EADAhI,EAAAC,MAIAF,KAAA,IACAiB,OAAAjB,EAAAiB,QAAA,GAsBAjB,EAAAI,UAAAJ,EAAAI,YAAA,EAEAJ,EAAAG,QAAAH,EAAAG,UAAA,EAEAH,EAAAiB,OAAAsG,MAAAvH,EAAAiB,OAAAsG,OAAA,WAA8DtH,EAAAc,QAE9DkH,EAAAjI,EAAAiB,OAAAiH,QACAlI,EAAAiB,OAAAiH,QAAA,SAAA3G,GACA0G,GACAA,EAAAjN,KAAAkF,KAAAqB,GAEAA,EAAAoE,OAAA9I,EAAAC,MAAAyE,EAAAoE,OAAA9I,EAAAqB,OACAqD,EAAAzC,MAAA,EACAmB,EAAAc,SAKA+G,EAAA9M,KAAAkF,KAAAF,GAGAE,KAAAG,MAAA6B,YAAAxB,SAAAC,cAAA,QACAT,KAAAG,MAAA+F,WAAAvD,UAAA/B,IAAA,YACAZ,KAAAG,MAAA+F,WAAAlE,YAAAxB,SAAAC,cAAA,QAGAT,KAAAiI,QAAAzH,SAAAC,cAAA,OACAT,KAAAiI,QAAAvH,UAAA,SAGAV,KAAAkI,MAAAlI,KAAAiI,QAAAjG,YAAAxB,SAAAC,cAAA,QACAT,KAAAkI,MAAAvF,UAAA/B,IAAA,QACAZ,KAAAkI,MAAAd,UAAAtH,EAAAqI,OAAA,GAGArI,EAAAsI,OACApI,KAAAqI,MAAArI,KAAAiI,QAAAjG,YAAAxB,SAAAC,cAAA,QACAT,KAAAqI,MAAA3H,UAAA,QAAAZ,EAAAsI,OAGAN,EAAAtH,SAAAC,cAAA,QACAC,UAAA,UAIAN,EAAAJ,KAAAI,MAAA2B,WAAAS,YAAAxC,KAAAI,OACAJ,KAAAG,MAAA+F,sBAAAlE,YAAAhC,KAAAiI,SACAjI,KAAAG,MAAA+F,sBAAAlE,YAAA5B,GACAJ,KAAAG,MAAA+F,sBAAAlE,YAAA8F,GAKAD,EAAAtL,UAAAlB,OAAAY,OAAA2L,EAAArL,WACAsL,EAAAtL,UAAAkF,YAAAoG,EAGAA,EAAAtL,UAAArB,KAAA,sBAMA2M,EAAAtL,UAAA+E,MAAA,WACAtB,KAAAG,MAAAwC,UAAA/B,IAAA,UACAgH,EAAArL,UAAA+E,MAAAxG,KAAAkF,MACAA,KAAAM,SAAA,IAAAN,KAAAM,SAAA,aAAAT,GACAG,KAAAM,SAAA,GAAAgB,SAQAuG,EAAAtL,UAAA8F,KAAA,WACArC,KAAAG,MAAAwC,UAAAT,OAAA,UACA0F,EAAArL,UAAA8F,KAAAvH,KAAAkF,OAKAtF,EAAAD,QAAAoN,gCClJAnN,EAAAD,QAAiBF,EAAQ,IAGzBG,EAAAD,QAAA8B,UAAArB,KAAA,wDCTAR,EAAAD,QAAA,SAAA6N,EAAA7F,GACA,IAAA8F,EAAA,GACAC,EAAA,GASA,SAAAC,EAAA5F,GACA7C,KAAA0I,IACA7F,GAAA,EAAA7C,KAAA0I,KAEAJ,EAAAK,OAAA3I,KAAAW,GAAAkC,GAiCA,OA7BAJ,EAAAzB,QAAA,SAAAiB,GACA,OAAAA,EAAA2G,MACA,YACAL,EAAAzG,KAAAG,GACA,MACA,UACAuG,EAAA1G,KAAA,CACAnB,GAAAsB,EAAAtB,GACAwH,MAAAlG,EAAA/G,KACA2N,KAAA5G,EAAA6G,UAAA,OACAJ,IAAAzG,EAAA8G,IACAC,OAAAP,OAMAF,EAAAU,KAAA,SAAAC,EAAAC,GACA,OAAAA,EAAAC,QAIAF,EAAAE,QAIAD,EAAAC,QAAAC,MAAAH,EAAAE,QAAAC,OAHA,EAJA,IAUA,CAAYf,MAAAC,EAAAe,UAAAd,kCCxCZ9N,EAAAD,QAAA,CACAoC,UAAA,EACAE,IAAA,EACAG,MAAA,GACAE,OAAA,GACAmM,MAAA,GACAC,OAAA,GACAC,SAAA,GACAC,IAAA,GACAC,KAAA,GACAhE,KAAA,GACAiE,GAAA,GACAlE,MAAA,GACAmE,KAAA,GACAC,OAAA,GAEAC,IAAA,kCCjBA,IAAA9L,EAAU1D,EAAQ,GAIlBG,EAAAD,QAAA,CACAuP,iBAAA,SAAA3I,GAQApD,EAAA8C,OAAA,QAEA9C,EAAAsD,KAAA,MAAAF,IAiBA4I,KAAA,SAAA5I,GAcApD,EAAA8C,OAAAM,EAAAuH,OAEA3K,EAAAsD,KAAAF,EAAAuH,KAAAvH,IAoCA6I,OAAA,SAAA7I,GASApD,EAAA8C,OAAAM,EAAAuH,OAEA3K,EAAAsD,KAAAF,EAAAuH,KAAAvH,IAsBA8I,MAAA,SAAA9I,KAoBA2G,QAAA,SAAA3G,GACA,IAKAe,EALAkB,EAAArF,EAAAkE,WACAiI,EAAA,CACA3E,KAAApE,EAAAgJ,QACAzL,MAAA,GAiBAyC,EAAAiJ,UAA+BF,EAAA3E,MAAA,KAC/BpE,EAAAkJ,SAA+BH,EAAA3E,MAAA,KAC/BpE,EAAAmJ,WAA+BJ,EAAA3E,MAAA,MAQ/BrD,EAAAkB,EAAAlB,kBAGAA,IAAAkB,IAEAlB,EAAArB,OAAAM,EAAAuH,OAEAxG,EAAAb,KAAAF,EAAAuH,KAAAwB,EAAA/I,IAMA+I,EAAAxL,MACAwD,EAAA7B,WACA6B,EAAA/B,QACA+B,EAAA/B,OAAAU,OAAAM,EAAAuH,OAEAxG,EAAA/B,OAAAkB,KAAAF,EAAAuH,KAAAwB,EAAA/I,IAKA+I,EAAAxL,OAEA0E,EAAAvC,OAAAM,EAAAuH,OAEAtF,EAAA/B,KAAAF,EAAAuH,KAAAwB,EAAA/I,GAIAA,EAAAzC,MAEAX,EAAA8C,OAAAM,EAAAuH,OAEA3K,EAAAsD,KAAAF,EAAAuH,KAAAwB,EAAA/I,KAoBAoJ,SAAA,SAAApJ,GACA,IAAAiC,EAAArF,EAAAkE,WAcAmB,EAAAlB,iBAAAkB,EAAAlB,kBAAAkB,GAEAA,EAAAlB,gBAAArB,OAAAM,EAAAuH,OAEAtF,EAAAlB,gBAAAb,KAAAF,EAAAuH,KAAAvH,IAmEAqJ,WAAA,SAAArJ,GACA,IAAAiC,EAAArF,EAAAkE,WAcAmB,EAAAlB,iBAAAkB,EAAAlB,kBAAAkB,GAEAA,EAAAlB,gBAAArB,OAAAM,EAAAuH,OAEAtF,EAAAlB,gBAAAb,KAAAF,EAAAuH,KAAAvH,GAKAA,EAAAzC,MAEA0E,EAAAvC,OAAAM,EAAAuH,OAEAtF,EAAA/B,KAAAF,EAAAuH,KAAAvH,mCCjVA,IAAApD,EAAU1D,EAAQ,GAwBlBG,EAAAD,QAAA,SAAAS,GACA,IAAAyP,EAAAnK,SAAAC,cAAA,QAEAkK,EAAAC,IAAA,aACAD,EAAAE,KAAA,OAAA3P,EAAA,IAAA+C,EAAA6M,QAAAC,OAAA,OACAvK,SAAAwK,KAAAhJ,YAAA2I,kCC9BAjQ,EAAAD,QAAiBF,EAAQ,IAGzBG,EAAAD,QAAA8B,UAAArB,KAAA,mDCFA,IAAA2E,EAAgBtF,EAAQ,GACxBoC,EAAgBpC,EAAQ,GACxB0Q,EAAA,GA+DA,SAAAC,EAAApL,GACA,IAEAM,EAFA+K,EAAA,EACApL,EAAAC,MAIAF,KAAA,IAEAI,WAAA,EAEAJ,EAAAG,QAAAH,EAAAG,UAAA,EAEAH,EAAAM,MAAAI,SAAAC,cAAA,OACAX,EAAAM,MAAAM,UAAA,OAGAb,EAAA/E,KAAAkF,KAAAF,GAEAE,KAAAoL,KAAA,CACA,CAASC,MAAA,IACT,CAASA,MAAA,IACT,CAASA,MAAA,IACT,CAASA,MAAA,KAGTrL,KAAAjD,IAAA,EAEAiD,KAAAsL,OAAAtL,KAAAG,MAAA6B,YAAAxB,SAAAC,cAAA,UACAT,KAAAsL,OAAAC,YACAvL,KAAAsL,OAAAE,KAAA,GAAAC,YAAA,GAGAzL,KAAAsL,OAAAE,KAAA,GAAAC,YAAA,GACAzL,KAAAsL,OAAAE,KAAA,GAAAC,YAAA,GAEAzL,KAAA0L,MAAA1L,KAAAsL,OAAAE,KAAA,GAAAG,MAAA,GAAA3J,YAAAxB,SAAAC,cAAA,QACAT,KAAA0L,MAAAhL,UAAA,aAEAV,KAAAsL,OAAAE,KAAA,GAAAG,MAAA,GAAAjL,UAAA,WACAN,EAAAJ,KAAAoL,KAAAD,GAAA/K,MAAAJ,KAAAsL,OAAAE,KAAA,GAAAG,MAAA,GAAA3J,YAAAxB,SAAAC,cAAA,SAMAC,UAAA,iBACAN,EAAA4B,YAAAxB,SAAAC,cAAA,QACAL,EAAAgF,UAAA1E,UAAA,SACAN,EAAAgF,UAAApD,YAAAxB,SAAAC,cAAA,QAGAL,EAAAgF,UAAApD,YAAAxB,SAAAC,cAAA,QACAL,EAAAgF,oBAAA1E,UAAA,SACAN,EAAAJ,KAAAoL,OAAAD,GAAA/K,MAAAJ,KAAAsL,OAAAE,KAAA,GAAAG,MAAA,GAAA3J,YAAAxB,SAAAC,cAAA,SACAC,UAAA,iBACAN,EAAA4B,YAAAxB,SAAAC,cAAA,QACAL,EAAAgF,UAAA1E,UAAA,SACAN,EAAAgF,UAAApD,YAAAxB,SAAAC,cAAA,QACAL,EAAAgF,UAAApD,YAAAxB,SAAAC,cAAA,QACAL,EAAAgF,oBAAA1E,UAAA,QACAN,EAAA4B,YAAAxB,SAAAC,cAAA,QACAL,EAAAgF,UAAA1E,UAAA,SACAN,EAAAgF,UAAApD,YAAAxB,SAAAC,cAAA,QACAL,EAAAgF,UAAApD,YAAAxB,SAAAC,cAAA,QACAL,EAAAgF,oBAAA1E,UAAA,SAEAN,EAAAJ,KAAAoL,OAAAD,GAAA/K,MAAAJ,KAAAsL,OAAAE,KAAA,GAAAG,MAAA,GAAA3J,YAAAxB,SAAAC,cAAA,SACAC,UAAA,iBACAN,EAAA4B,YAAAxB,SAAAC,cAAA,QACAL,EAAAgF,UAAA1E,UAAA,SACAN,EAAAgF,UAAApD,YAAAxB,SAAAC,cAAA,QACAL,EAAAgF,UAAApD,YAAAxB,SAAAC,cAAA,QACAL,EAAAgF,oBAAA1E,UAAA,QACAN,EAAA4B,YAAAxB,SAAAC,cAAA,QACAL,EAAAgF,UAAA1E,UAAA,SACAN,EAAAgF,UAAApD,YAAAxB,SAAAC,cAAA,QACAL,EAAAgF,UAAApD,YAAAxB,SAAAC,cAAA,QACAL,EAAAgF,oBAAA1E,UAAA,QACAN,EAAA4B,YAAAxB,SAAAC,cAAA,QACAL,EAAAgF,UAAA1E,UAAA,SACAN,EAAAgF,UAAApD,YAAAxB,SAAAC,cAAA,QACAL,EAAAgF,UAAApD,YAAAxB,SAAAC,cAAA,QACAL,EAAAgF,oBAAA1E,UAAA,SAEAN,EAAAJ,KAAAoL,OAAAD,GAAA/K,MAAAJ,KAAAsL,OAAAE,KAAA,GAAAG,MAAA,GAAA3J,YAAAxB,SAAAC,cAAA,SACAC,UAAA,iBACAN,EAAA4B,YAAAxB,SAAAC,cAAA,QACAL,EAAAgF,UAAA1E,UAAA,SACAN,EAAAgF,UAAApD,YAAAxB,SAAAC,cAAA,QACAL,EAAAgF,UAAApD,YAAAxB,SAAAC,cAAA,QACAL,EAAAgF,oBAAA1E,UAAA,QACAN,EAAA4B,YAAAxB,SAAAC,cAAA,QACAL,EAAAgF,UAAA1E,UAAA,SACAN,EAAAgF,UAAApD,YAAAxB,SAAAC,cAAA,QACAL,EAAAgF,UAAApD,YAAAxB,SAAAC,cAAA,QACAL,EAAAgF,oBAAA1E,UAAA,QACAN,EAAA4B,YAAAxB,SAAAC,cAAA,QACAL,EAAAgF,UAAA1E,UAAA,SACAN,EAAAgF,UAAApD,YAAAxB,SAAAC,cAAA,QACAL,EAAAgF,UAAApD,YAAAxB,SAAAC,cAAA,QACAL,EAAAgF,oBAAA1E,UAAA,QACAN,EAAA4B,YAAAxB,SAAAC,cAAA,QACAL,EAAAgF,UAAA1E,UAAA,SACAN,EAAAgF,UAAApD,YAAAxB,SAAAC,cAAA,QACAL,EAAAgF,UAAApD,YAAAxB,SAAAC,cAAA,QACAL,EAAAgF,oBAAA1E,UAAA,QAGAV,KAAA4L,OAAA5L,KAAAsL,OAAAE,KAAA,GAAAG,MAAA,GAAA3J,YAAAxB,SAAAC,cAAA,QACAT,KAAA4L,OAAAlL,UAAA,aAKAV,KAAAwF,KAAA1F,EAAA2C,MAEAzC,KAAAK,OAAAa,YAAA,mBAAAG,GACA,IAAAwK,EAAA9L,EAAAqL,KAAArL,EAAAhD,KAEAgD,EAAAE,SACA4L,EAAAR,MAAAhK,EAAAoE,OAAA,mBAAAoG,EAAAR,MAAAhK,EAAAoE,MAAAqG,QACAD,EAAAR,MAAAhK,EAAAoE,MAAAqG,WApLAb,EAAAtO,EAAAY,IAAA,mBACA0N,EAAAtO,EAAAa,IAAA,mBACAyN,EAAAtO,EAAAc,IAAA,mBACAwN,EAAAtO,EAAAe,IAAA,mBACAuN,EAAAtO,EAAAqB,MAAA,qBACAiN,EAAAtO,EAAAM,IAAA,mBACAgO,EAAAtO,EAAAoC,MAAA,qBACAkM,EAAAtO,EAAA8B,WAAA,2BACAwM,EAAAtO,EAAAC,MAAA,qBACAqO,EAAAtO,EAAAQ,MAAA,qBACA8N,EAAAtO,EAAA2B,UAAA,mBACA2M,EAAAtO,EAAAgB,SAAA,wBACAsN,EAAAtO,EAAAiB,OAAA,uBAgLAsN,EAAA3O,UAAAlB,OAAAY,OAAA4D,EAAAtD,WACA2O,EAAA3O,UAAAkF,YAAAyJ,EAGAA,EAAA3O,UAAArB,KAAA,uBA0CAgQ,EAAA3O,UAAAiJ,KAAA,SAAA1F,GACA,IAAA6B,EAAAoK,EAAAC,EAoEA,SAAAC,EAAAC,GACA,kBACA,mBAAApM,EAAAqM,OAAAD,GAAAJ,QACAhM,EAAAqM,OAAAD,GAAAJ,UAMA,GA3EAhM,KAAA,GAuBAE,KAAAoL,KAAApL,KAAAjD,KAAAqD,MAAAuC,UAAA/B,IAAA,UACAZ,KAAAjD,IAAA+C,EAAAqM,QAAArM,EAAAqM,OAAAtK,OAAA/B,EAAAqM,OAAAtK,OAAA,KAEAkK,EAAA/L,KAAAoL,KAAApL,KAAAjD,MAEAsO,MAAA,GAGAvL,EAAA6F,MACA3F,KAAA0L,MAAAhL,UAAAZ,EAAA6F,KAAAjF,WAAA,eAAAuK,EAAAnL,EAAA6F,KAAAF,OAAA,sBACA3F,EAAA6F,KAAAyG,SACApM,KAAA0L,MAAA/I,UAAA/B,IAAA,aAEAmL,EAAAV,MAAAvL,EAAA6F,KAAAF,MAAA,CAAgDqG,OAAAhM,EAAA6F,KAAAmG,QAChD9L,KAAA0L,MAAAW,MAAAC,WAAA,UACAtM,KAAA0L,MAAAa,QAAA,WACA,mBAAAzM,EAAA6F,KAAAmG,QACAhM,EAAA6F,KAAAmG,YAIS,WAAA9L,KAAA0L,MAAAW,MAAAC,aACTtM,KAAA0L,MAAAW,MAAAC,WAAA,UAIAxM,EAAA4F,OACA1F,KAAA4L,OAAAlL,UAAAZ,EAAA4F,MAAAhF,WAAA,eAAAuK,EAAAnL,EAAA4F,MAAAD,OAAA,sBACA3F,EAAA4F,MAAA0G,SACApM,KAAA4L,OAAAjJ,UAAA/B,IAAA,aAEAmL,EAAAV,MAAAvL,EAAA4F,MAAAD,MAAA,CAAiDqG,OAAAhM,EAAA4F,MAAAoG,QACjD9L,KAAA4L,OAAAS,MAAAC,WAAA,UACAtM,KAAA4L,OAAAW,QAAA,WACA,mBAAAzM,EAAA4F,MAAAoG,QACAhM,EAAA4F,MAAAoG,YAIS,WAAA9L,KAAA4L,OAAAS,MAAAC,aACTtM,KAAA4L,OAAAS,MAAAC,WAAA,UAYAxM,EAAAqM,QAAArM,EAAAqM,OAAAtK,OAAA,CACA,IAAAF,EAAA,EAA4BA,EAAA7B,EAAAqM,OAAAtK,OAA8BF,IAC1DoK,EAAAV,MAAAvL,EAAAqM,OAAAxK,GAAA8D,MAAA,CAAyDqG,OAAAhM,EAAAqM,OAAAxK,GAAAmK,QACzDhM,EAAAqM,OAAAxK,GAAAyK,SACAL,EAAA3L,MAAAE,SAAAqB,GAAAgB,UAAA/B,IAAA,aAEAmL,EAAA3L,MAAAE,SAAAqB,GAAAgB,UAAAT,OAAA,YACA6J,EAAA3L,MAAAE,SAAAqB,GAAA4K,QAAAN,EAAAtK,KAGAqK,EAAAD,EAAA3L,MAAAE,SAAAqB,GAAArB,UACA,GAAAI,UAAA,YACAZ,EAAAqM,OAAAxK,GAAAjB,WAAA,eAAAuK,EAAAnL,EAAAqM,OAAAxK,GAAA8D,OAAA,uBAEAuG,EAAA,GAAA5E,UAAAtH,EAAAqM,OAAAxK,GAAAwG,OAAA,GAEA4D,EAAA3L,MAAAuC,UAAAT,OAAA,YAiDAxH,EAAAD,QAAAyQ,gCC/XA,IAAArL,EAAgBtF,EAAQ,GACxBoC,EAAgBpC,EAAQ,GAWxB,SAAAiS,EAAA1M,GACA,IACA6B,EADA5B,EAAAC,KA0DA,SAAAyM,EAAApL,GACA,OAAAA,EAAAoE,MACA,KAAA9I,EAAAgJ,KACA5F,EAAAuF,WAAA,GACAvF,EAAA2M,OAAA3M,EAAAuF,WAAA,GAAAhE,QAEA,MACA,KAAA3E,EAAA+I,MACA3F,EAAAuF,WAAAvF,EAAA2M,OAAA7K,OAAA,GACA9B,EAAA2M,OAAA3M,EAAAuF,WAAA,GAAAhE,SAOA,KAvEAxB,KAAA,IAgBAI,UAAAJ,EAAAI,YAAA,EAMAL,EAAA/E,KAAAkF,KAAAF,GAEAE,KAAA0M,OAAA5M,EAAA4M,OAOA1M,KAAAsF,WAAA,EAGAxF,EAAA4M,SAAA5M,EAAA4M,OAAA,GAAAC,OACA7M,EAAA4M,OAAA,GAAAvM,MAAAwC,UAAA/B,IAAA,QAEAd,EAAA4M,OAAA,GAAAvM,MAAAwC,UAAA/B,IAAA,WAGAd,EAAA4M,QAAA5M,EAAA4M,OAAA,IAAA5M,EAAA4M,OAAA,GAAAC,MAEA7M,EAAA4M,OAAA,GAAAvM,MAAAwC,UAAA/B,IAAA,kBAGAd,EAAA4M,QAAA5M,EAAA4M,OAAA,IAAA5M,EAAA4M,OAAA,GAAAC,MACA7M,EAAA4M,OAAA,GAAAvM,MAAAwC,UAAA/B,IAAA,SAIAd,EAAA4M,QACA1M,KAAAY,IAAAO,MAAAnB,KAAAF,EAAA4M,QAoBA/K,EAAA,EAAoBA,EAAA3B,KAAA0M,OAAA7K,OAA4BF,IAChD3B,KAAA0M,OAAA/K,GAAAoC,aAAA,CACAiE,QAAAyE,IAGAzM,KAAA0M,OAAA/K,WAcA6K,EAAAjQ,UAAAlB,OAAAY,OAAA4D,EAAAtD,WACAiQ,EAAAjQ,UAAAkF,YAAA+K,EAGAA,EAAAjQ,UAAArB,KAAA,0BAMAsR,EAAAjQ,UAAA+E,MAAA,WACAzB,EAAAtD,UAAA+E,MAAAxG,KAAAkF,MACAA,KAAA0M,OAAA1M,KAAAsF,YAAAhE,SAMAkL,EAAAjQ,UAAA8F,KAAA,WACArC,KAAA0M,OAAA1M,KAAAsF,YAAAjD,QAGA3H,EAAAD,QAAA+R,gCChIA,IAAA3M,EAAgBtF,EAAQ,GACxB8K,EAAa9K,EAAQ,GAyBrB,SAAAqS,EAAA9M,GACA,IAAAgI,EAEAhI,KAAA,GAOAE,KAAA6M,KAAA,EAOA7M,KAAA2M,MAAA,EAOA3M,KAAA2B,MAAA,EAeA7B,EAAAM,MAAAI,SAAAC,cAAA,OACAX,EAAAM,MAAAM,UAAA,OAGAb,EAAA/E,KAAAkF,KAAAF,GAMAA,EAAA+M,OACA7M,KAAA6M,KAAA/M,EAAA+M,KACA7M,KAAAG,MAAAwC,UAAA/B,IAAA,OAAAd,EAAA+M,OAIA/M,EAAA6M,OACA3M,KAAA2M,MAAA,EACA3M,KAAAG,MAAAwC,UAAA/B,IAAA,SAIAZ,KAAA8M,QAAA,CACApB,MAAAlL,SAAAC,cAAA,OACAmL,OAAApL,SAAAC,cAAA,QAGAT,KAAA8M,QAAApB,MAAAhL,UAAA,cACAV,KAAAG,MAAA6B,YAAAhC,KAAA8M,QAAApB,OAEA1L,KAAA8M,QAAAlB,OAAAlL,UAAA,eACAV,KAAAG,MAAA6B,YAAAhC,KAAA8M,QAAAlB,QAGA9L,EAAAqI,QACA/D,MAAA2I,QAAAjN,EAAAqI,SACArI,EAAAqI,MAAA,CAAArI,EAAAqI,QAGAnI,KAAAmI,MAAA,IAAA9C,EAAA,CAEA3E,UAAA,QACA+B,KAAA3C,EAAAqI,MACAjI,WAAA,IAEAF,KAAAG,MAAA6B,YAAAhC,KAAAmI,MAAAhI,QAGAH,KAAAG,MAAA6B,YAAAhC,KAAAI,QAEA0H,EAAAtH,SAAAC,cAAA,QACAC,UAAA,UACAV,KAAAG,MAAA6B,YAAA8F,GAKA8E,EAAArQ,UAAAlB,OAAAY,OAAA4D,EAAAtD,WACAqQ,EAAArQ,UAAAkF,YAAAmL,EAGAA,EAAArQ,UAAArB,KAAA,sBAQA0R,EAAArQ,UAAAuE,cAAA,CACAQ,MAAA,WACAtB,KAAAM,SAAAuB,QACA7B,KAAAM,SAAA,GAAAgB,UASAsL,EAAArQ,UAAA+E,MAAA,WACAtB,KAAAE,YACAF,KAAAK,OAAAqM,OAAA1M,KAAAK,OAAAiF,YAAAnF,MAAAwC,UAAAT,OAAA,UACAlC,KAAAK,OAAAqM,OAAA1M,KAAAK,OAAAiF,YAAAnF,MAAAwC,UAAAT,OAAA,OAEArC,EAAAtD,UAAA+E,MAAAxG,KAAAkF,MAEAA,KAAAK,OAAAiF,WAAAtF,KAAA2B,MACA3B,KAAAG,MAAAwC,UAAA/B,IAAA,UACAZ,KAAAG,MAAAwC,UAAA/B,IAAA,OAEA,IAAAZ,KAAA2B,OAAA3B,KAAAK,OAAAqM,OAAA,IAAA1M,KAAAK,OAAAqM,OAAA,GAAAC,MACA3M,KAAAK,OAAAqM,OAAA,GAAAvM,MAAAwC,UAAAT,OAAA,iBACAlC,KAAAK,OAAAqM,OAAA,GAAAvM,MAAAwC,UAAA/B,IAAA,kBAEAZ,KAAAK,OAAAqM,OAAA,IACA1M,KAAAK,OAAAqM,OAAA,GAAAvM,MAAAwC,UAAAT,OAAA,UAGAlC,KAAAG,MAAAwC,UAAA/B,IAAA,WACS,IAAAZ,KAAA2B,OAAA3B,KAAAK,OAAAqM,OAAA,GAAAC,OACT3M,KAAAK,OAAAqM,OAAA,GAAAvM,MAAAwC,UAAAT,OAAA,kBACAlC,KAAAK,OAAAqM,OAAA,GAAAvM,MAAAwC,UAAA/B,IAAA,iBACAZ,KAAAK,OAAAqM,OAAA,GAAAvM,MAAAwC,UAAAT,OAAA,UACAlC,KAAAG,MAAAwC,UAAA/B,IAAA,aASAgM,EAAArQ,UAAA8F,KAAA,WACArC,KAAAK,OAAAqM,OAAA1M,KAAAK,OAAAiF,YAAAnF,MAAAwC,UAAAT,OAAA,UACArC,EAAAtD,UAAA8F,KAAAvH,KAAAkF,OAKAtF,EAAAD,QAAAmS,gCCtLA,IAAA/M,EAAgBtF,EAAQ,GACxBoC,EAAgBpC,EAAQ,GAwCxB,SAAA8L,EAAAvG,GAKAA,KAAA,GAkBAE,KAAAgN,WAAA,KAOAhN,KAAAiN,UAAA,KAOAjN,KAAAyC,KAAA,GAOAzC,KAAA4I,KAAA5I,KAAAkN,cAOAlN,KAAA6M,KAAA,EAOA7M,KAAAmN,OAAA,EAOAnN,KAAAoN,OAAA,KAGAtN,EAAA8I,OAEA5I,KAAA4I,KAAA9I,EAAA8I,MAQA5I,KAAAqN,SAAA,KAEArN,KAAA4I,OAAA5I,KAAAsN,kBACAxN,EAAAY,WAAA,eAMAb,EAAA/E,KAAAkF,KAAAF,GAGAE,KAAAwF,KAAA1F,GA8BAuG,EAAA9J,UAAAlB,OAAAY,OAAA4D,EAAAtD,WACA8J,EAAA9J,UAAAkF,YAAA4E,EAGAA,EAAA9J,UAAArB,KAAA,qBAEAmL,EAAA9J,UAAA2Q,cAAA,EACA7G,EAAA9J,UAAA+Q,gBAAA,EASAjH,EAAA9J,UAAAsK,kBAAA,SAAAH,EAAAjE,GACAiE,EAAAU,UAAA3E,EAAA7G,OAUAyK,EAAA9J,UAAAoL,WAAAtB,EAAA9J,UAAAsK,kBAQAR,EAAA9J,UAAAuE,cAAA,CAMA4J,WAAA,SAAArJ,GAEArB,KAAA4I,OAAA5I,KAAAkN,eAAA7L,EAAAkM,aACAvN,KAAAwN,KAAAnM,EAAAkM,YAAA,EAAA5Q,EAAAiN,GAAAjN,EAAAkN,MAIA7J,KAAA4I,OAAA5I,KAAAsN,iBAAAjM,EAAAoM,aACAzN,KAAAwN,KAAAnM,EAAAoM,YAAA,EAAA9Q,EAAAgJ,KAAAhJ,EAAA+I,QASAsC,QAAA,SAAA3G,GACA,OAAAA,EAAAoE,MACA,KAAA9I,EAAAiN,GACA,KAAAjN,EAAAkN,KACA,KAAAlN,EAAA+I,MACA,KAAA/I,EAAAgJ,KACA,KAAAhJ,EAAA6M,OACA,KAAA7M,EAAA8M,SACA,KAAA9M,EAAAgN,KACA,KAAAhN,EAAA+M,IAEA1J,KAAAwN,KAAAnM,EAAAoE,MACA,MACA,KAAA9I,EAAAO,MAEA8C,KAAAe,OAAA,eAAAf,KAAAgN,YAEAhN,KAAAuB,KAAA,cAA6CmF,MAAA1G,KAAAgN,WAAA3L,aA8F7CgF,EAAA9J,UAAAiJ,KAAA,SAAA1F,GACA,IAsBAmC,EAAAyL,EAtBA3N,EAAAC,KACA2N,EAAA3N,KAAAI,MAAAE,SAAAuB,OAUA+L,EAAA,SAAAvM,GACArB,KAAAyC,OACA1C,EAAA8F,UAAA7F,MAGAD,EAAAgB,OAAA,eAEAhB,EAAAwB,KAAA,cAA6CmF,MAAA1G,KAAAqB,YA6D7C,QA7CA8C,IAAArE,EAAAqN,QAAuCnN,KAAAmN,MAAArN,EAAAqN,OAGvCrN,EAAAsN,SAA0BpN,KAAAoN,OAAAtN,EAAAsN,QAG1BtN,EAAAuN,WAA4BrN,KAAAqN,SAAAvN,EAAAuN,UAI5BvN,EAAA+N,SAQA7N,KAAA2H,WAAA7H,EAAA+N,QAIA/N,EAAA+M,OAWA7M,KAAA6M,KAAA/M,EAAA+M,MAGA/M,EAAAiB,QAEA1F,OAAAsB,KAAAmD,EAAAiB,QAAAC,QAAA,SAAA9F,GACA6E,EAAAgB,OAAA7F,GAAA,KACA6E,EAAAmB,YAAAhG,EAAA4E,EAAAiB,OAAA7F,MAKA8E,KAAA6M,OAAAc,EAQA,IANAA,EAAA,IAEA3N,KAAAI,MAAAgH,UAAA,MAIAsG,EAAA,EAAsBA,EAAA1N,KAAA6M,KAAiBa,KACvCzL,EAAAzB,SAAAC,cAAA,QACAkB,MAAA+L,EAEAzL,EAAAvB,UAAA,OAEAuB,EAAAb,iBAAA,QAAAwM,GACA5N,KAAAI,MAAA4B,YAAAC,GAIA,GAAAjC,KAAAqN,SAAA,CACA,GAAArN,KAAAqN,SAAAS,QACA,OAGA9N,KAAAqN,SAAA7R,IAAA,cAAA2O,EAAA1H,GACA0H,EACApK,EAAAgB,OAAA,eAMAhB,EAAAwB,KAAA,aAAA4I,IAGA1H,IACA3C,EAAA2C,OACA1C,EAAAuH,QAAAxH,GACAC,EAAAqN,QACArN,EAAAqN,OAAA5H,KAAA,CACAuI,SAAAhO,EAAAsN,SAAAW,SACAC,SAAAlO,EAAAsN,SAAAR,KACAjR,MAAAmE,EAAAsN,SAAArC,KAAAjL,EAAAsN,SAAAa,OAIAnO,EAAAgB,OAAA,aAQAhB,EAAAwB,KAAA,oBAIKzB,EAAA2C,MACLzC,KAAAsH,QAAAxH,IASAuG,EAAA9J,UAAA+K,QAAA,SAAAxH,GAGAA,EAAA2C,OAKAzC,KAAAyC,KArMA,SAAAA,GACA,IAAAiL,EAYA,IAAAA,EAAA,EAAkBA,EAAAjL,EAAAZ,OAAmB6L,IAIrC,iBAFAjL,EAAAiL,KAIAjL,EAAAiL,GAAA,CACA9R,MAAA6G,EAAAiL,KAYA,OAAAjL,EAqKAwD,CAAAnG,EAAA2C,OAgBAzC,KAAAiN,UAAA,KAEAjN,KAAAgN,YACAhN,KAAAmO,SAAAnO,KAAAgN,YAGAhN,KAAAoN,SACApN,KAAAqN,SACArN,KAAAoN,OAAAW,WAAA/N,KAAAqN,SAAAW,UACAhO,KAAAoN,OAAA5H,KAAA,CACAuI,SAAA/N,KAAAqN,SAAAW,SACAC,SAAAjO,KAAAqN,SAAAR,KACAjR,MAAAoE,KAAAqN,SAAArC,KAAAhL,KAAAqN,SAAAa,MAIAlO,KAAAoN,OAAA5H,KAAA,CACAuI,SAAA/N,KAAAyC,KAAAZ,OACAoM,SAAAjO,KAAA6M,KACAjR,MAAAkE,EAAAmN,WAAA,UAMA9I,IAAArE,EAAAwF,YAAAtF,KAAAyC,KAAAZ,OAcA7B,KAAAsF,WAAAxF,EAAAwF,YAGAtF,KAAAoO,WAAAtO,EAAAmN,WAAA,IAyBA5G,EAAA9J,UAAA6R,WAAA,SAAAzM,GACA,IAAA+E,EAAAgH,EAAAW,EAAAC,EAAAC,EAkBA,GAAAvO,KAAAiN,YAAAtL,EAAA,CAOA,IALA2M,EAAAtO,KAAAiN,UAEAjN,KAAAiN,UAAAsB,EAAA5M,EAGA+L,EAAA,EAAsBA,EAAA1N,KAAA6M,KAAiBa,IAEvChH,EAAA1G,KAAAI,MAAAE,SAAAoN,IACAW,EAAArO,KAAAyC,KAAAd,KAKA+E,EAAAjE,KAAA4L,EACA3H,EAAA/E,QACA3B,KAAA2H,WAAAjB,EAAA2H,GAGAA,EAAAG,KACA9H,EAAA/D,UAAA/B,IAAA,QAEA8F,EAAA/D,UAAAT,OAAA,UAIAwE,EAAAjE,KAAAiE,EAAA/E,WAAAwC,EACAuC,EAAAe,UAAA,SACAf,EAAAO,OAAA,GAEAtF,IAoBA,OAhBA3B,KAAAe,OAAA,cAEAf,KAAAuB,KAAA,aAAoC+M,YAAAC,cAIpCvO,KAAAe,OAAA,gBACAf,KAAAuB,KAAA,eAAsCmF,UAItC1G,KAAAoN,QACApN,KAAAoN,OAAAqB,SAAAzO,KAAAqN,SAAArN,KAAAqN,SAAArC,KAAAhL,KAAAqN,SAAAa,IAAAlO,KAAAiN,YAIA,EAIA,UAYA5G,EAAA9J,UAAAiR,KAAA,SAAAkB,GACA,IAAA3O,EAAAC,KACA2O,GAAA,EAaA,GAAA3O,KAAAyC,KAAAZ,OAIA,OAAA6M,GACA,KAAA/R,EAAAgJ,KACA,GAAA3F,KAAA4I,OAAA5I,KAAAsN,gBAGA,MAFAqB,GAAA,EAIA,KAAAhS,EAAAiN,GACA,GAAA+E,GAAA3O,KAAA4I,OAAA5I,KAAAkN,cACA,GAAAlN,KAAAgN,YAAAhN,KAAAgN,WAAArL,MAAA,EACA3B,KAAAgN,aAAAhN,KAAAI,MAAA8F,WACAlG,KAAAoO,WAAApO,KAAAiN,UAAA,GAEAjN,KAAA6F,UAAA7F,KAAAgN,WAAA4B,sBAEiB,GAAA5O,KAAAqN,SAAA,CACjB,GAAArN,KAAAqN,SAAAS,QACA,OAGA9N,KAAAqN,SAAA7R,IAAAkT,EAAA,SAAAvE,EAAA1H,EAAAyL,GACA/D,EACApK,EAAAgB,OAAA,eAMAhB,EAAAwB,KAAA,aAAA4I,GAEyB1H,GACzB1C,EAAAuH,QAAA,CAA0C7E,OAAA6C,WAAA4I,GAAA,IAAAA,IAAAnO,EAAAiN,WAAArL,eAK1C3B,KAAAmN,OAEAnN,KAAAwN,KAAA7Q,EAAA+M,KAEA1J,KAAAe,OAAA,aAEAf,KAAAuB,KAAA,YAA+CmN,YAAAvB,MAAAnN,KAAAmN,QAI/C,MACA,KAAAxQ,EAAA+I,MACA,GAAA1F,KAAA4I,OAAA5I,KAAAsN,gBAGA,MAFAqB,GAAA,EAIA,KAAAhS,EAAAkN,KACA,GAAA8E,GAAA3O,KAAA4I,OAAA5I,KAAAkN,cACA,GAAAlN,KAAAgN,YAAAhN,KAAAgN,WAAArL,MAAA3B,KAAAyC,KAAAZ,OAAA,EACA7B,KAAAgN,aAAAhN,KAAAI,MAAAgF,UACApF,KAAAoO,WAAApO,KAAAiN,UAAA,GAEAjN,KAAA6F,UAAA7F,KAAAgN,WAAA6B,kBAEiB,GAAA7O,KAAAqN,SAAA,CACjB,GAAArN,KAAAqN,SAAAS,QACA,OAGA9N,KAAAqN,SAAA7R,IAAAkT,EAAA,SAAAvE,EAAA1H,EAAAyL,GACA/D,EACApK,EAAAgB,OAAA,eAMAhB,EAAAwB,KAAA,aAAA4I,GAEyB1H,GACzB1C,EAAAuH,QAAA,CAA0C7E,OAAA6C,WAAA4I,GAAA,IAAAA,IAAAnO,EAAAiN,WAAArL,eAK1C3B,KAAAmN,OAEAnN,KAAAwN,KAAA7Q,EAAAgN,MAEA3J,KAAAe,OAAA,aAEAf,KAAAuB,KAAA,YAA+CmN,YAAAvB,MAAAnN,KAAAmN,QAI/C,MACA,KAAAxQ,EAAA6M,OACA,GAAAxJ,KAAAqN,SAAA,CACA,GAAArN,KAAAqN,SAAAS,QACA,OAkBA,YAfA9N,KAAAqN,SAAA7R,IAAAkT,EAAA,SAAAvE,EAAA1H,EAAAyL,GACA/D,EACApK,EAAAgB,OAAA,eAMAhB,EAAAwB,KAAA,aAAA4I,GAEqB1H,GACrB1C,EAAAuH,QAAA,CAAsC7E,OAAA6C,WAAA4I,GAAA,MAMtClO,KAAAiN,UAAAjN,KAAA6M,KAEA7M,KAAAoO,WAAA,GAGApO,KAAAoO,WAAApO,KAAAiN,UAAAjN,KAAA6M,KAAA,GAGA7M,KAAA6F,UAAA7F,KAAAI,MAAA8F,YACA,MACA,KAAAvJ,EAAA8M,SACA,GAAAzJ,KAAAqN,SAAA,CACA,GAAArN,KAAAqN,SAAAS,QACA,OAGA9N,KAAAqN,SAAA7R,IAAAkT,EAAA,SAAAvE,EAAA1H,EAAAyL,GACA,IAAA5I,EAEA6E,EACApK,EAAAgB,OAAA,eAMAhB,EAAAwB,KAAA,aAAA4I,GAEqB1H,IAErB6C,EADA4I,GAAA,IAAAA,EACAA,EAEAzL,EAAAZ,OAAA9B,EAAA8M,KAAApK,EAAAZ,OAAA,EAAA9B,EAAA8M,KAAA,EAGA9M,EAAAuH,QAAA,CAAsC7E,OAAA6C,kBAGtC,MAGAtF,KAAAyC,KAAAZ,OAAA7B,KAAA6M,MAEA7M,KAAAiN,UAAAjN,KAAAyC,KAAAZ,OAAA,EAAA7B,KAAA6M,KAEA7M,KAAAoO,WAAApO,KAAAyC,KAAAZ,OAAA7B,KAAA6M,MAGA7M,KAAAoO,WAAApO,KAAAiN,UAAAjN,KAAA6M,KAAA,GAEA7M,KAAA6F,UAAA7F,KAAAI,MAAAgF,YAGApF,KAAA6F,UAAA7F,KAAAI,MAAAE,SAAAN,KAAAyC,KAAAZ,OAAA,IAEA,MACA,KAAAlF,EAAAgN,KACA,GAAA3J,KAAAqN,SAAA,CACA,GAAArN,KAAAqN,SAAAS,QACA,OAGA9N,KAAAqN,SAAA7R,IAAAkT,EAAA,SAAAvE,EAAA1H,EAAAyL,GACA/D,EACApK,EAAAgB,OAAA,eAMAhB,EAAAwB,KAAA,aAAA4I,GAEqB1H,GACrB1C,EAAAuH,QAAA,CAAsC7E,OAAA6C,WAAA4I,GAAA,MAGtC,MAEAlO,KAAAoO,WAAA,GACApO,KAAA6F,UAAA7F,KAAAI,MAAA8F,YACA,MACA,KAAAvJ,EAAA+M,IACA,GAAA1J,KAAAqN,SAAA,CACA,GAAArN,KAAAqN,SAAAS,QACA,OAGA9N,KAAAqN,SAAA7R,IAAAkT,EAAA,SAAAvE,EAAA1H,EAAAyL,GACA,IAAA5I,EAEA6E,EACApK,EAAAgB,OAAA,eAMAhB,EAAAwB,KAAA,aAAA4I,GAEqB1H,IAErB6C,EADA4I,GAAA,IAAAA,EACAA,EAEAzL,EAAAZ,OAAA9B,EAAA8M,KAAApK,EAAAZ,OAAA,EAAA9B,EAAA8M,KAAA,EAGA9M,EAAAuH,QAAA,CAAsC7E,OAAA6C,kBAGtC,MAEAtF,KAAAyC,KAAAZ,OAAA7B,KAAA6M,MACA7M,KAAAoO,WAAApO,KAAAyC,KAAAZ,OAAA7B,KAAA6M,MACA7M,KAAA6F,UAAA7F,KAAAI,MAAAgF,YAGApF,KAAA6F,UAAA7F,KAAAI,MAAAE,SAAAN,KAAAyC,KAAAZ,OAAA,MAkBAwE,EAAA9J,UAAAsJ,UAAA,SAAAa,GACA,IAAAoI,EAAA9O,KAAAgN,WASA,SAAAtG,GAAAoI,IAAApI,KAWA,OAAAoI,IAQAA,EAAAnM,UAAAT,OAAA,SAIAlC,KAAAe,OAAA,cASAf,KAAAuB,KAAA,aAAwCmF,MAAAoI,KAIxC9O,KAAAgN,WAAAtG,EAEA1G,KAAAgN,WAAAvK,KAAAzC,KAAAyC,KAAAzC,KAAAgN,WAAArL,OAGA+E,EAAA/D,UAAA/B,IAAA,SAIAZ,KAAAe,OAAA,eAUAf,KAAAuB,KAAA,cAAqCuN,QAAAC,MAAArI,IAIrC1G,KAAAe,OAAA,gBASAf,KAAAuB,KAAA,eAAsCmF,WAGtC,IAkBAL,EAAA9J,UAAA4R,SAAA,SAAAzH,GAMA,QAAAA,IACAA,IAAA1G,KAAAgN,aACAhN,KAAAgN,WAAA,MAGAtG,EAAA/D,UAAAT,OAAA,SAIAlC,KAAAe,OAAA,cASAf,KAAAuB,KAAA,aAAoCmF,WAGpC,IAYAL,EAAA9J,UAAA+I,WAAA,SAAA3D,GACA,IAAAsL,EAAAjN,KAAAiN,WAAA,EAeAtL,GAAAsL,EAAAjN,KAAA6M,MAEAlL,IAAA3B,KAAAyC,KAAAZ,OAAA,EAAAF,EAAA3B,KAAAyC,KAAAZ,OAAA,EAEA7B,KAAAoO,WAAAzM,EAAA3B,KAAA6M,KAAA,GACA7M,KAAA6F,UAAA7F,KAAAI,MAAAgF,YACKzD,EAAAsL,GAELtL,IAAA,EAAAA,EAAA,EAEA3B,KAAAoO,WAAAzM,GACA3B,KAAA6F,UAAA7F,KAAAI,MAAA8F,cAGA,OAAAlG,KAAAiN,WAEAjN,KAAAoO,WAAA,GAEApO,KAAA6F,UAAA7F,KAAAI,MAAAE,SAAAqB,EAAAsL,MAWA5G,EAAA9J,UAAAyS,SAAA,SAAAtI,EAAAuI,GAiBAA,EACAvI,EAAA/D,UAAA/B,IAAA,QAEA8F,EAAA/D,UAAAT,OAAA,QAIAwE,EAAAjE,KAAA+L,KAAAS,GAKAvU,EAAAD,QAAA4L,gCC1nCA3L,EAAAD,QAAA,SAAA8N,EAAA2G,EAAAC,GACA,IACAxN,EAAAyN,EAAAC,EADAC,EAAA,KAGA,GAAA/G,GAAA,IAAAA,EAAA1G,OACA,OAAA0G,EAAA1G,OACAyN,EAAA/G,EAAA,QAgBA,IAdA2G,EAAArN,QACAqN,EAAArN,OAAA,IACAwN,EAAAH,EAAA,IAGA,MADAE,EAAAF,EAAA,KACAG,GAAA,KAAAA,GACAF,EAAArG,UAAAjH,SACAuN,EAAAD,EAAArG,UAAA,KAGaqG,EAAArG,UAAAjH,SACbuN,EAAAD,EAAArG,UAAA,IAGAnH,EAAA,EAA4BA,EAAA4G,EAAA1G,OAAqBF,IACjD,GAAA4G,EAAA5G,GAAA/F,SAEA,IAAA2M,EAAA5G,GAAA/F,MAAAkN,UAAAvG,QAAA6M,IACAC,IAAA,IAAA9G,EAAA5G,GAAA/F,MAAAkN,UAAAvG,QAAA8M,IACA,CACA,GAAA9G,EAAA5G,GAAA/F,MAAAwN,QAAAC,QAAA8F,EAAA/F,QAAAC,MAAA,CACAiG,EAAA/G,EAAA5G,GACA,MAGA,GAAA4G,EAAA5G,GAAA/F,MAAAwN,QAAAC,MAAA8F,EAAA/F,QAAAC,MAAA,CACAiG,EAAA,CACA1T,MAAA2M,EAAA5G,GAAA/F,MACA+F,SAEA,SAGA2N,EAAA,CACA1T,MAAA2M,EAAA5G,GAAA/F,MACA+F,SAEA,MAOA,OAAA2N,iCCrDA5U,EAAAD,QAAA,SAAA8U,GACA,IAAAC,EAAAC,EAeA,OAZAF,GAAA,MADAE,EAAAC,KAAAC,MAAAJ,EAAA,OAGAA,GAAA,IADAC,EAAAE,KAAAC,MAAAJ,EAAA,MAGAE,KAAA,KAQA,KANAD,EADAA,EACAA,EAAA,EAAAA,EAAA,IAAAA,EAEA,MAIA,KAFAD,IAAA,EAAAA,EAAA,IAAAA,kCCPA,IAAA1P,EAAgBtF,EAAQ,GACxBoC,EAAgBpC,EAAQ,GAYxB,SAAAqV,EAAA9P,IAEAA,KAAA,IAYAM,MAAAI,SAAAC,cAAA,OACAX,EAAAM,MAAAM,UAAA,OAOAV,KAAA6P,KAAA,EAOA7P,KAAA8P,WAAA,EAOA9P,KAAA+P,WAAA,EAOA/P,KAAAgQ,YAAA,EAOAhQ,KAAAoN,OAAA,KAEAvN,EAAA/E,KAAAkF,KAAAF,GAEAE,KAAAG,MAAA6B,YAAAhC,KAAAI,OAGAJ,KAAAwF,KAAA1F,GAIA8P,EAAArT,UAAAlB,OAAAY,OAAA4D,EAAAtD,WACAqT,EAAArT,UAAAkF,YAAAmO,EAGAA,EAAArT,UAAArB,KAAA,4BAQA0U,EAAArT,UAAAuE,cAAA,CAMAkH,QAAA,SAAA3G,GACA,OAAAA,EAAAoE,MACA,KAAA9I,EAAAiN,GACA,KAAAjN,EAAAkN,KACA7J,KAAAwN,KAAAnM,EAAAoE,QAIAiF,WAAA,SAAArJ,GAEArB,KAAAwN,KAAAnM,EAAAkM,YAAA,EAAA5Q,EAAAiN,GAAAjN,EAAAkN,QAoBA+F,EAAArT,UAAAiR,KAAA,SAAAkB,GACA,IAAA3D,EAAAkF,OAAAlF,OACAmF,EAAAlQ,KAAA+P,WAAA/P,KAAA8P,WAGA,GAAAI,EAAA,EACA,OAAAxB,GACA,KAAA/R,EAAAkN,KACA,GAAA7J,KAAAgQ,YAAAhQ,KAAA6P,KAAA9E,EAAA,IAAAmF,EAKA,OAJAlQ,KAAAoN,OAAAqB,UAAAyB,GACAlQ,KAAAI,MAAAiM,MAAA8D,IAAAD,EAAA,UACAlQ,KAAAuB,KAAA,YAA2CmN,cAK3C1O,KAAAgQ,aAAAN,KAAAU,KAAApQ,KAAA6P,KAAA9E,EAAA,KAEA/K,KAAAoN,QACApN,KAAAoN,OAAAqB,UAAAzO,KAAAgQ,aAEAhQ,KAAAI,MAAAiM,MAAA8D,IAAAnQ,KAAAgQ,YAAA,KACA,MACA,KAAArT,EAAAiN,GACA,GAAA5J,KAAAgQ,YAAAhQ,KAAA6P,KAAA9E,EAAA,MAKA,OAJA/K,KAAAoN,OAAAqB,SAAA,GACAzO,KAAAI,MAAAiM,MAAA8D,IAAA,WACAnQ,KAAAuB,KAAA,YAA2CmN,cAI3C1O,KAAAgQ,aAAAN,KAAAU,KAAApQ,KAAA6P,KAAA9E,EAAA,KAEA/K,KAAAoN,QACApN,KAAAoN,OAAAqB,UAAAzO,KAAAgQ,aAEAhQ,KAAAI,MAAAiM,MAAA8D,IAAAnQ,KAAAgQ,YAAA,UAIAhQ,KAAAuB,KAAA,YAA+BmN,eAU/BkB,EAAArT,UAAAiJ,KAAA,SAAA1F,GAEAA,KAAA,GAEAE,KAAA8P,WAAA9P,KAAAI,MAAAiQ,aACArQ,KAAA+P,WAAA/P,KAAAG,MAAAkQ,aACArQ,KAAAgQ,YAAA,EACAhQ,KAAAI,MAAAiM,MAAA8D,IAAAnQ,KAAAgQ,YAAA,KAEAlQ,EAAAsN,SACApN,KAAAoN,OAAAtN,EAAAsN,QAGAtN,EAAA+P,OACA7P,KAAA6P,KAAA/P,EAAA+P,MAGA7P,KAAAoN,QACApN,KAAAoN,OAAA5H,KAAA,CACAuI,SAAA/N,KAAA8P,WACA7B,SAAAjO,KAAA+P,WACAnU,MAAAoE,KAAAgQ,eAKAtV,EAAAD,QAAAmV,gCCzMWrV,EAAQ,GAAnB,IACA0D,EAAU1D,EAAQ,GAOlB0D,EAAA2F,KAAA,kBACA3F,EAAAqS,IAAAC,KAAAC,QAAAC,aAEAxS,EAAAqS,IAAAxQ,OAAA,CACAmJ,KAAA,GACAyH,QAAA,GACAC,WAAA,GACAC,UAAA,EACA1N,OAAA,GACA2N,MAAA,GAGItW,EAAQ,IAAa0P,KAAA,CAAQ/O,KAAAqV,KAAAO,YAAA5B,UAAgC,SAAA/E,GAMjElM,EAAA8S,MAAA,CACApE,KAAkBpS,EAAQ,IAC1BwE,KAAkBxE,EAAQ,KAI1B0D,EAAAmF,MAAAnF,EAAA8S,MAAApE,wCC7BA,IAAA1O,EAAa1D,EAAQ,GACrBwG,EAAaxG,EAAQ,IAIrByW,OAAAT,KAAAS,OAAA3Q,OAAA4Q,gBAAAD,OAAA/S,GAGA1D,EAAQ,IAGRA,EAAQ,IAGRA,EAAQ,GAARA,CAAyB,OAGzBA,EAAQ,IAGRA,EAAQ,GAARA,CAAyB,OAOzB0D,EAAAiT,SAAA,MAKAjT,EAAAgJ,MAAA,WAIA+J,OAAAT,KAAAzV,KAAA,cAWAmD,EAAAd,KAAA,WACAc,EAAA8C,OAAA,SACA9C,EAAAsD,KAAA,QAGAgP,KAAAzV,KAAA,SAIAiG,EAAAkJ,KAAA,SAAA5I,GAEAb,SAAA2Q,KAAAC,aAAA,WAAAnT,EAAAiT,UAEAX,KAAAtJ,MACAhJ,EAAA8C,OAAA,SAEA9C,EAAAsD,KAAA,WAGAgP,KAAA3M,KAAA,kBAEA3F,EAAA8C,OAAAM,EAAAuH,OAEA3K,EAAAsD,KAAAF,EAAAuH,KAAAvH,MAaAN,EAAAsQ,YAAA,SAAAhQ,GACAA,EAAAiQ,kBAMAjW,OAAAsB,KAAAoE,GAAAC,QAAA,SAAA9F,GACA8V,OAAA5P,iBAAAlG,EAAA6F,EAAA7F,MAaAR,EAAAD,QAAAwD,gCC1GAvD,EAAAD,QAAA,CAQAsI,MAAA,SAAAC,GACA,IAAAP,EAAA,GAWA,OARAO,EAAAuO,MAAA,KAAAvQ,QAAA,SAAAwQ,GAGA,KAFAA,IAAAD,MAAA,MAEA1P,SACAY,EAAA+O,EAAA,IAAAC,mBAAAD,EAAA,OAIA/O,GAWAiP,UAAA,SAAAC,GACA,IAAAlP,EAAA,GAMA,OAJApH,OAAAsB,KAAAgV,GAAA3Q,QAAA,SAAA9F,GACAuH,EAAAX,KAAA5G,EAAA,IAAA0W,mBAAAD,EAAAzW,OAGAuH,EAAAoP,KAAA,qCCpCAnX,EAAAD,QAAA,iCCCA,IAAA+F,SAAAsR,gBAAAnP,UAAA,CACA,IAAApG,EAAA6H,MAAA7H,UACAgG,EAAAhG,EAAAgG,QACA8B,EAAA9H,EAAA8H,MACAvC,EAAAvF,EAAAuF,KACAQ,EAAA/F,EAAA+F,OACAuP,EAAAtV,EAAAsV,KAEAb,OAAAe,aAAA,SAAAC,GAEA,GADAhS,KAAAiS,SAAAD,EACAA,EAAAtR,YAAAV,KAAAkS,YAAA,CAEA,GADAlS,KAAAkS,YAAAF,EAAAtR,WACAV,KAAAkS,YAAoC,OACpC,IACAvX,EADAsQ,EAAAjL,KAAAkS,YAAAC,QAAA,iBAAAZ,MAAA,OAEA,IAAA5W,EAAA,EAAuBA,EAAAsQ,EAAApJ,OAAoBlH,IAC3CmH,EAAAhH,KAAAkF,KAAAiL,EAAAtQ,MAKAqW,OAAAe,aAAAxV,UAAA,CACAqE,IAAA,SAAAwR,GACApS,KAAAqS,SAAAD,KACAtQ,EAAAhH,KAAAkF,KAAAoS,GACApS,KAAAiS,SAAAvR,UAAA2D,EAAAvJ,KAAAkF,KAAA,GAAA6R,KAAA,OAGAQ,SAAA,SAAAD,GACA,WAAA7P,EAAAzH,KAAAkF,KAAAoS,IAGAnQ,KAAA,SAAAN,GACA,OAAA3B,KAAA2B,IAAA,MAGAO,OAAA,SAAAkQ,GACA,IAAAzX,EAAA4H,EAAAzH,KAAAkF,KAAAoS,IACA,IAAAzX,IAGA2H,EAAAxH,KAAAkF,KAAArF,EAAA,GACAqF,KAAAiS,SAAAvR,UAAA2D,EAAAvJ,KAAAkF,KAAA,GAAA6R,KAAA,OAGAS,SAAA,WACA,OAAAT,EAAA/W,KAAAkF,KAAA,MAGAuS,OAAA,SAAAH,GAMA,OALApS,KAAAqS,SAAAD,GAGApS,KAAAkC,OAAAkQ,GAFApS,KAAAY,IAAAwR,GAIApS,KAAAqS,SAAAD,KAIA/W,OAAAC,eAAAoM,QAAAnL,UAAA,aACAf,IAAA,WACA,WAAAwV,OAAAe,aAAA/R,wCC9DA,IAAA/B,EAAc1D,EAAQ,GACtBuQ,EAAcvQ,EAAQ,IAItB0D,EAAA6M,UAAA7M,EAAA+E,MAAAwP,eAAA1H,EAAAmF,OAAAlF,SAAAD,EAAA,KAGA7M,EAAA6M,QAAA2H,YAAAxU,EAAA6M,QAAAC,QAAA9M,EAAA6M,QAAA4H,SAAAzU,EAAA6M,QAAA6H,aACA1U,EAAA6M,QAAA8H,WAAA3U,EAAA6M,QAAAzB,OAAApL,EAAA6M,QAAA+H,UAAA5U,EAAA6M,QAAAgI,0CCVApY,EAAAD,QAAA,CACAsY,IAAA,CAEAhI,OAAA,IACA1B,MAAA,IAEAqJ,SAAA,GACAC,YAAA,GACAG,WAAA,GACAD,UAAA,GAEAG,SAAA,GAGAC,IAAA,CAEAlI,OAAA,IACA1B,MAAA,IAEAqJ,SAAA,GACAC,YAAA,GACAG,WAAA,GACAD,UAAA,GAEAG,SAAA,GAGAE,IAAA,CAEAnI,OAAA,IACA1B,MAAA,KAEAqJ,SAAA,GACAC,YAAA,GACAG,WAAA,GACAD,UAAA,GAEAG,SAAA,GAGAG,KAAA,CAEApI,OAAA,KACA1B,MAAA,KAEAqJ,SAAA,GACAC,YAAA,GACAG,WAAA,GACAD,UAAA,GAEAG,SAAA,kCCjDA,IAEAI,EAFAnV,EAAU1D,EAAQ,IAQlB6Y,EAAA5S,SAAAC,cAAA,SACAmK,IAAA,aACAwI,EAAAvI,KAAAmG,OAAAT,KAAA8C,MAAAC,KAAArV,EAAA6M,QAAAC,OAAA,OACAvK,SAAAwK,KAAAhJ,YAAAoR,GAIA1Y,EAAAD,QAAA2Y,gCCjBA,IAAAG,EAAA,CACAC,MAAA,EACAC,SAAA,EACAC,OAAA,GAEAC,EAAA,IAGAjZ,EAAAD,QAAA,SAAAwD,EAAA6B,GACA,IAAA8T,EAAA9T,EAAA2F,KACAoO,EAAA/T,EAAAgU,SAGA,SAAAC,EAAA1S,EAAA2S,GACA,IAKAC,EACA7R,EANAkB,EAAArF,EAAAkE,WACAiI,EAAA,CACA3E,KAAApE,EAAAgJ,QACAzL,MAAA,GAOAqV,GAFAD,KAAA,IAEApL,MAAAvH,EAAAuH,KAGAvH,EAAAiJ,UAA+BF,EAAA3E,MAAA,KAC/BpE,EAAAkJ,SAA+BH,EAAA3E,MAAA,KAC/BpE,EAAAmJ,WAA+BJ,EAAA3E,MAAA,KAC/BuO,EAAAvO,OAA+B2E,EAAA3E,KAAAuO,EAAAvO,OAK/BrD,EAAAkB,EAAAlB,kBAGAA,IAAAkB,IAEAlB,EAAArB,OAAAkT,IAEA7R,EAAAb,KAAA0S,EAAA7J,EAAA/I,IAMA+I,EAAAxL,MACAwD,EAAA7B,WACA6B,EAAA/B,QACA+B,EAAA/B,OAAAU,OAAAM,EAAAuH,OAEAxG,EAAA/B,OAAAkB,KAAA0S,EAAA7J,EAAA/I,IAKA+I,EAAAxL,OAEA0E,EAAAvC,OAAAkT,IAEA3Q,EAAA/B,KAAA0S,EAAA7J,EAAA/I,GAIAA,EAAAzC,MAEAX,EAAA8C,OAAAkT,IAEAhW,EAAAsD,KAAA0S,EAAA7J,EAAA/I,IAyCA2P,OAAA5P,iBAAA,UAnCA,SAAAC,GACApD,EAAAkE,WAQAd,EAAAgJ,UAAAuJ,GAAAL,EAAAE,QAWSpS,EAAAgJ,UAAAuJ,GACTG,EAAA1S,IAXAkS,EAAAG,QACAH,EAAAG,OAAA,GAEAH,EAAAE,SAAA,EACAS,aAAAX,EAAAC,OACAD,EAAAC,MAAA1Q,WAAA,WACAiR,EAAA1S,EAAA,CAAoCoE,KAAAoO,IACpCN,EAAAG,OAAA,GAEaC,MAiBb3C,OAAA5P,iBAAA,QAXA,SAAAC,GACAA,EAAAgJ,UAAAuJ,KACAL,EAAAG,OAAAH,EAAAE,UACAS,aAAAX,EAAAC,OACAO,EAAA1S,EAAA,CAAoCuH,KAAA,aAEpC2K,EAAAE,SAAA,oCCzGA,IAAA9T,EAAcpF,EAAQ,GACtB4Z,EAAc5Z,EAAQ,IACtB6Z,EAAA,IAAAzU,EAWA,SAAA0U,EAAA5R,GACA,IAAA6R,EAAA,IAAAH,EAAA1R,GAOA,OAJAuO,OAAAsD,QAAAtD,OAAAuD,EAAAD,UACAtD,OAAAwD,SAAAF,EAAAE,SACAxD,OAAAyD,SAAAH,EAAAG,SAEAH,EAOAF,EAAAM,gBAAA,KAcAN,EAAAnK,KAAA,SAAAnK,EAAA+C,GACA,IAAA8R,EAgBA,OAJA7U,EAAA8U,IAAA9U,EAAA8U,KAAA,OACA9U,EAAAwT,KAAAxT,EAAAwT,MAAA,OAGAxT,EAAA5E,OAAAkZ,EAAAM,iBAEAL,IACAxR,EAAA,OAEA,KAIA8R,EAAA,IAAAE,gBAEAC,OAAA,WAGA,IAGAT,EAFAU,KAAAhS,MAAA4R,EAAAK,eAGAnS,EAAA,MAGAuR,EAAArT,OAAA,SAEAqT,EAAA7S,KAAA,QAES,MAAA4I,GACTwK,EAAAM,QAAA9K,KAIAwK,EAAAO,UAAAP,EAAAM,QAAA,SAAA9K,GACAkK,IACAxR,EAAAsH,GAGAiK,EAAArT,OAAA,UAEAqT,EAAA7S,KAAA,QAAA4I,IAIAwK,EAAAQ,KAAA,MAAArV,EAAAwT,KAAA,IAAAxT,EAAA5E,KAAA,IAAA4E,EAAA8U,KAAA,GACAD,EAAAS,KAAA,OAEA,IAKA1a,EAAAD,QAAA2Z,6DCpGA,SAAAD,QAAArU,QACA,IAAA2C,KAAA4S,KAGAvV,eAAA,GACA2C,KAAA3C,OAAA2C,MAAA,GACAA,KAAA,IAAAA,KAAA,QAGA4S,KAAAvV,OAAAuV,KASArV,KAAAsU,QAAA,SAAAgB,GACA,OAAA7S,KAAA,IAAA6S,OAYAtV,KAAAwU,SAAA,SAAAe,EAAAD,GACA,OAAA7S,KAAA8S,IAAA9S,KAAA8S,GAAAD,OAaAtV,KAAAyU,SAAA,SAAAa,MAAAE,OAAA5Z,OAIA,IAAAQ,EAAAqZ,WAQA,OAAAhT,MAAA4S,MAAA5S,KAAA,IAAA6S,QACAG,WAAAC,KAAA,OAAA9Z,MAAA,KAAiDyZ,KAAAG,QAEjD,kBAAAC,aACAA,wBAIAhT,KAAA,IAAA6S,OAAAG,aAIA,IAAA7Z,MAAA0Z,MAAAE,QAMArB,QAAA5X,UAAAkF,YAAA0S,QAIAzZ,OAAAD,QAAA0Z,sCC1FA,IAyCAwB,EAAAC,EAAAC,EAAAC,EA0GAC,EACAC,EAAAC,EAAAC,EACAC,EAAAC,EAAAC,EACAC,EAAAC,EAAAC,EACAC,EAAAC,EAtJApT,EAAA,IADkB/I,EAAQ,IAC1B,EAA4B4F,MAAAK,SAAAmW,eAAA,cAE5BrS,EAAkB/J,EAAQ,GAC1BoC,EAAkBpC,EAAQ,GAE1B2Q,EAAsB3Q,EAAQ,IAC9BiS,EAAsBjS,EAAQ,IAC9BqS,EAAsBrS,EAAQ,IAC9B+L,EAAsB/L,EAAQ,GAC9Bqc,EAAsBrc,EAAQ,IAC9B0D,EAAsB1D,EAAQ,GAC9Bsc,EAAsBtc,EAAQ,GAC9Buc,EAAsBvc,EAAQ,IAC9Bwc,EAAsBxc,EAAQ,IAE9B4C,EAAsB5C,EAAQ,IAC9Byc,EAAsBzc,EAAQ,IAC9B0c,EAAsB1c,EAAQ,IAC9B2c,EAAsB3c,EAAQ,IAC9B4c,EAAsB5c,EAAQ,IAC9B6c,EAAsB7c,EAAQ,IAE9B8c,EAAA,IAAAnM,EAAA,CAAyBjL,SAAA,EAAAI,OAAAiD,IAEzB0P,EAAA,IAAA1M,EAAA,CACA6G,OAAA,EACA1K,KAAA,GACAgE,WAAA,EACAoG,KAAA5O,EAAA6M,QAAAkI,SACAjS,OAAA,CACAsB,KAAA,WACAiE,EAAA/J,UAAA8F,KAAAvH,KAAAkF,MACAqX,EAAAxW,QAEAS,MAAA,WACA+V,EAAAzU,WAOA0U,EAAA,IAAA1K,EAAA,CACAzE,MAAA,CACA,CACAvM,MAAA0Y,QAAA,QACA5T,UAAA,SAGAK,OAAA,CACAO,MAAA,WACAsL,EAAArQ,UAAAuE,cAAAQ,MAAAxG,KAAAkF,MAIAqX,EAAA7R,KAAA,CACAG,KAAA,CACAF,KAAA9I,EAAAqB,KACA8N,OAAA,WACA6J,EAAAjJ,OAAAiJ,EAAArQ,cAAAgS,IACA3B,EAAAtT,OACAgV,EAAAxW,OACAgV,EAAAjT,OACAiT,EAAAvU,WAIA6K,OAAA,CACA,CACA1G,KAAA9I,EAAAY,GACA4K,MAAAmM,QAAA,iBACAxI,OAAA8J,QAOAtV,SAAA,CAAA0S,KAGAuE,EAAAjT,EAAAC,IAAA,OAAoC7D,UAAA,UAAoB,KACxD8W,EAAA,IAAA5K,EAAA,CACAzE,MAAA,CACA,CACAvM,MAAA0Y,QAAA,SACA5T,UAAA,QAEA4D,EAAAC,IACA,MACA,CAAiB7D,UAAA,mBACjB6W,IAGA5K,MAAA,IAGA8K,EAAA,IAAA7K,EAAA,CACAzE,MAAA,CACA,CACAvM,MAAA0Y,QAAA,QACA5T,UAAA,SAGAK,OAAA,CACAiH,QAAA,SAAA3G,GACA,OAAAA,EAAAoE,MACA,KAAA9I,EAAAM,GACA6Y,EAAA9I,WAAAvK,KAAA7G,MAAA8b,UAAA5B,EAAA9I,WAAAvK,KAAA7G,MAAA+b,SAAAD,SACAnH,KAAAqH,cAAAC,QAAA,SAAA1N,GACAA,GACAlM,EAAAmF,MAAAnF,EAAA8S,MAAAhS,KAAA,CAA+DA,KAAA+W,EAAA9I,WAAAvK,KAAA7G,OAAA,OAI/DqC,EAAAmF,MAAAnF,EAAA8S,MAAAhS,KAAA,CAAuDA,KAAA+W,EAAA9I,WAAAvK,KAAA7G,OAAA,OAKvD0F,MAAA,WACAsL,EAAArQ,UAAAuE,cAAAQ,MAAAxG,KAAAkF,MACAqX,EAAAxW,SAGAP,SAAA,CAAA8W,EAAAU,SAAAV,EAAAU,SAAA1K,UAGA2K,EAAA,MACAC,EAAA,CACAnL,KAAA,EACAkE,MAAA,GAEAkH,EAAA,CACA3D,QAAA,WACAA,QAAA,aACAA,QAAA,kBACAA,QAAA,uBACAA,QAAA,YAEA4D,EAAA,CACAC,YAAA7D,QAAA,UACA1Y,MAAA,IAGAwc,EAAA,GAcA,SAAAC,EAAA/P,EAAAzF,GACA,IAAAH,EAAAoT,EAAA9I,WAEA3E,EAAA3F,EAAAiE,OAAApB,MAAA+S,UAEAhQ,IAAA5F,EAAAD,KAAA7G,QACA0M,EAAAsI,UACAvI,EAAA1F,UAAA/B,IAAA,UACA8B,EAAAD,KAAAyE,MAAA,GAAAxG,UAAA,wDAEA2H,EAAA1F,UAAAT,OAAA,UACAQ,EAAAD,KAAAyE,MAAA,GAAAxG,UAAA,iDAIA4H,EAAAiQ,YACA,CACA3H,UAAAtI,EAAAsI,UAQA,SAAAzG,EAAA1H,GACA0H,GAAA7B,IAAA5F,EAAAD,KAAA7G,QACA0M,EAAAsI,UACAvI,EAAA1F,UAAAT,OAAA,UACAQ,EAAAD,KAAAyE,MAAA,GAAAxG,UAAA,iDAEA2H,EAAA1F,UAAA/B,IAAA,UACA8B,EAAAD,KAAAyE,MAAA,GAAAxG,UAAA,wDAGAmC,GACAA,EAAAsH,EAAA1H,KAYA,SAAA+V,EAAAC,GACA,IASAC,EAAAC,EACAC,EAAAC,EACAvP,EAAA6F,EAAA2J,EAXAxQ,EAAAwN,EAAA9I,WAAApR,MACA+F,EAAA,EACAzG,EAAAoN,EAAApN,KACA6d,EAAA,GACAC,EAAA,GACAC,EAAA,CACAF,OAAA,EACAC,QAAA,GAOA,SAAAta,EAAAyL,EAAApB,GAEA,IAAAmQ,EAkDA/O,IAGAwO,EAAA,KACAD,EAAA,KACApQ,EAAA,kBACA2Q,EAAAF,OAAA,EAAAA,EAAAlX,SACA8W,EAAA,WACA,IAAAQ,EAAAH,EAAAC,EAAAD,SAEArX,IAAAsX,EAAAF,OAEAI,EAAAje,KAAAie,EAAAje,KACAie,EAAAje,MAAAie,EAAAC,cAAA,MAAAD,EAAAC,cAAA,SACA9E,QAAA,cAAA6E,EAAAE,OAEAne,EAAAoN,EAAApN,KAAA,IAAAie,EAAAje,KAAA,KACA6d,EAAApX,GAAAzG,KAAA6d,EAAApX,GAAAzG,MACA6d,EAAApX,GAAAyX,cACA,MAAAL,EAAApX,GAAAyX,cAAA,SAAA9E,QAAA,cAAAyE,EAAApX,GAAA0X,QAEAN,EAAApX,GAAA2X,OAAAP,EAAApX,GAAA2X,MAAAzX,OACAiX,EAAAC,EAAApX,GAAA2X,OAEAhR,EAAAiR,WAAA,CAA0CC,SAAAL,EAAAxY,GAAA8Y,UAAAV,EAAApX,GAAAhB,IAAiD,SAAAwJ,EAAA1H,GAC3F0H,GACA2O,EAAArW,EAAA6W,WAOAL,EAAAF,OAAA,IACAL,EAAA,WACA,IAAAS,EAAAH,EAAAC,EAAAD,SAEArX,IAAAsX,EAAAF,OAEAI,EAAAje,KAAAie,EAAAje,KACAie,EAAAje,MAAAie,EAAAC,cAAA,MAAAD,EAAAC,cAAA,SACA9E,QAAA,cAAA6E,EAAAE,OAEAne,EAAAoN,EAAApN,KAAA,IAAAie,EAAAje,KAAA,KACA6d,EAAApX,GAAAzG,KACA6d,EAAApX,GAAAzG,MAAA6d,EAAApX,GAAA,uBAAAoX,EAAApX,GAAA,0BACA2S,QAAA,cAAAyE,EAAApX,GAAA0X,QAEAN,EAAApX,GAAA2X,OAAAP,EAAApX,GAAA2X,MAAAzX,OACAiX,EAAAC,EAAApX,GAAA2X,OAEAhR,EAAAiR,WAAA,CAA0CC,SAAAL,EAAAxY,GAAA8Y,UAAAV,EAAApX,GAAAhB,IAAiD,SAAAwJ,EAAA1H,GAC3F0H,GACA2O,EAAArW,EAAA6W,YAvGAJ,EA+GAT,GAAA,EA9GAI,EAAAtI,KAAAsI,OAAA,CACA/M,OAAA,OACA4N,KAAA,gBACAjX,KAAA,CACA0F,MAAAjN,EACAwN,IAAAK,EACA4Q,MAAArR,EACA6G,OACA+J,WACA5P,YACAsQ,QAAAzK,EAAAxO,IAEAI,OAAA,CACAF,KAAA,WACAyC,EAAAuW,UAAA,MAA8ChB,SAAAD,kBAA6C,GAC3FA,EAAA,KACAC,EAAAiB,SAEApQ,IAAA,WACApG,EAAAuW,UAAA,MAA8ChB,SAAAD,kBAA6C,GAC3FD,EACAA,KAIAC,EAAA,KACAC,EAAAiB,UAEA3P,MAAA,WACAyO,EAAA,KACAC,EAAAiB,SAEAlb,KAAA,WACAga,EAAA,KACAC,EAAAiB,SAEAC,KAAApB,EACAqB,KAAAtB,EACAoB,MAAA,WACAxW,EAAAuW,UAAA,MAA8ChB,SAAAD,oBAG9CrD,QAAAqD,GACa,SAAAzO,EAAAoL,GAEbqD,EAAArD,KAoEAuD,EAAA,SAAArW,GACA,IAAA6W,EAAAtC,EAAA1O,EAAA7F,GAKA,GAHA6G,EAAAgQ,EAAAhQ,WACAgQ,IAAAhR,OAEAzG,OAAA,CAIA,GAAA+W,IAAAH,EAAA,CAEA,KADAtJ,EAAA8H,EAAAqC,EAAAV,EAAAqB,SAAAC,UAAArB,EAAApW,KAAA0M,OAOA,OAHAyJ,EAAA,UACAC,EAAAiB,QAHA3K,IAAAvT,WASA,GADAuT,EAAAmK,EAAA,GACAhR,EAAA,yBAAAmQ,EACA,IAAA9W,EAAA,EAAgCA,EAAA2X,EAAAzX,OAAsBF,IACtD,GAAA2X,EAAA3X,GAAAhB,KAAA2H,EAAA,yBACA6G,EAAAmK,EAAA3X,GACA,MAKAwN,EAAApG,IACArK,GAAA,EAAAyQ,EAAApG,KAEAT,EAAAK,OAAAwG,EAAAxO,GAAAjC,KAIA4J,EAAA,gBACAA,EAAA6R,WAAA,SAAAhQ,EAAA1H,GACA,IAAA0W,EAEA,IAAAhP,GAAA1H,EAAAZ,OAAA,CAGA,GAFAsX,EAAA1W,EAAA,GACAuW,EAAAvW,EACA6F,EAAA,2BAAAmQ,GACA,IAAA9W,EAAA,EAAoCA,EAAAc,EAAAZ,OAAqBF,IACzD,GAAAc,EAAAd,GAAAhB,KAAA2H,EAAA,2BACA6Q,EAAA1W,EAAAd,GACAsX,EAAAD,QAAArX,EACA,YAIAsX,EAAAD,QAAA,EAEA1Q,EAAA8R,UAAAjB,EAAAxY,GAAA,SAAAwJ,EAAAkQ,GACA,IAAAlQ,GAAAkQ,EAAAxY,OAAA,CAEA,GADAkX,EAAAsB,EACA/R,EAAA,4BAAAmQ,GACA,IAAA9W,EAAA,EAA4CA,EAAA0Y,EAAAxY,OAA2BF,IACvE,GAAA0Y,EAAA1Y,GAAAhB,KAAA2H,EAAA,4BACA2Q,EAAAF,OAAApX,EACA,YAIAsX,EAAAF,OAAA,EAGAI,EAAAje,KAAAie,EAAAje,KACAie,EAAAje,MAAAie,EAAAC,cAAA,MAAAD,EAAAC,cAAA,SACA9E,QAAA,cAAA6E,EAAAE,OAEAne,EAAAoN,EAAApN,KAAA,IAAAie,EAAAje,KAAA,KACA6d,EAAApX,GAAAzG,KACA6d,EAAApX,GAAAzG,MAAA6d,EAAApX,GAAAyX,cAAA,MAAAL,EAAApX,GAAAyX,cAAA,SACA9E,QAAA,cAAAyE,EAAApX,GAAA0X,QAEAN,EAAApX,GAAA2X,OAAAP,EAAApX,GAAA2X,MAAAzX,OACAiX,EAAAC,EAAApX,GAAA2X,OAEAhR,EAAAiR,WAAA,CAA8CC,SAAAL,EAAAxY,GAAA8Y,UAAAV,EAAApX,GAAAhB,IAAiD,SAAAwJ,EAAA5B,GAC/F4B,GACA2O,EAAAvQ,EAAA+Q,eAWAR,EAAAxQ,EAAAgR,OAWA,SAAAgB,EAAAzX,EAAA/C,GACAsX,EAAAjS,QAEAlH,EAAAqS,IAAAiK,QAAAza,EAAA,SAAAqK,EAAA1H,EAAAyC,GACAqS,EAAA9P,UAAA0C,EAAA,EAAAjF,EACArC,EAAAsH,EAAA+M,EAAAzU,GAAAyC,KAkDA,SAAAsV,IACA,IAAA/X,EAAAqT,EAAA9I,WAAAvK,KAAA7G,MAEA,cAAA6G,EAAA,mBACAyT,EAAAtT,KAAAH,GACAyT,EAAA5U,UAEA0U,EAAApT,OACAoT,EAAA1U,SAuWAsU,EAAA,YAEA,KAAA3X,EAAAqS,IAAAxQ,OAAA4Q,SACA,KAAAzS,EAAAqS,IAAAxQ,OAAA6Q,YACA,KAAA1S,EAAAqS,IAAAxQ,OAAAoD,QACAjF,EAAAqS,IAAAxQ,OAAA8Q,YAEA3S,EAAAqS,IAAAxQ,OAAA,CACA2a,OAAAxc,EAAAqS,IAAAxQ,OAAA2a,OACA/J,QAAA,GACAC,WAAA,GACAC,UAAA,EACA1N,OAAA,GACA2N,MAAA,EACA6J,OAAA,GAIA5E,EAAAxO,QAAA,CAA0B7E,KAAA,KAC1BqT,EAAAtQ,KAAA,CACA6H,SAAA,IAAAuJ,EAAA,CACA+D,SAAA3C,EAAAnL,KACA+N,UAAA5C,EAAAjH,MACA8G,QAAA5Z,EAAAqS,IAAAxQ,OACA3E,OAAAmf,EACAvC,YACA5K,OAAA,IAEA7H,WAAA,IAGA8Q,EAAAyE,eACAzE,EAAAyE,aAAA5L,OAAA,EACAmH,EAAA3T,KAAA,GAAAwM,OAAA,GAEAmH,EAAA9O,QAAA,CAA2B7E,KAAA2T,EAAA3T,KAAA6C,WAAA,IAC3B2Q,EAAA4E,eACA5E,EAAA4E,aAAA5L,OAAA,EACAgH,EAAAxT,KAAA,GAAAwM,OAAA,GAGA+D,EAAAzN,MAAAuV,WAAAvV,MAAA2C,MAAAd,UAAAkN,QAAA,kBACAtB,EAAAzN,MAAAuV,WAAAvV,MAAA8C,MAAA1F,UAAAT,OAAA,UAEA8Q,EAAAzN,MAAAwV,OAAAxV,MAAA2C,MAAAd,UAAAkN,QAAA,cACAtB,EAAAzN,MAAAwV,OAAAxV,MAAA8C,MAAA1F,UAAAT,OAAA,UAEAgW,EAAAtc,MAAA,GACAoX,EAAAzN,MAAArC,OAAAqC,MAAA2C,MAAAd,UAAA8Q,EAAAC,YACAnF,EAAAzN,MAAArC,OAAAqC,MAAA8C,MAAA1F,UAAAT,OAAA,UAEA8Q,EAAAzN,MAAAqL,SAAArL,MAAA8C,MAAA3H,UAAA,iCAEAuV,EAAA3O,QAAA,CAAgC7E,KAAAwT,EAAAxT,KAAA6C,WAAA,MAKhCqQ,EAAA,IAAAnJ,EAAA,CACAvM,SAAA,EACAyM,OAAA,CAAA4K,EAAAE,EAAAC,KAEAnU,EAAA1C,IAAA+U,GAGAI,EAAA,CACArX,KAAA,CACAwI,MAAA,CACA,CACAxG,UAAA,8BAEA,CACAA,UAAA,QACA9E,MAAA0Y,QAAA,UAGAjN,MAAA,WACA2O,EAAAnV,OACAiV,EAAA9I,WAAAvK,KAAA7G,MAAA8b,UAAA5B,EAAA9I,WAAAvK,KAAA7G,MAAA+b,SAAAD,SACAnH,KAAAqH,cAAAC,QAAA,SAAA1N,GACAA,GACAqO,MAIAA,MAIA5H,SAAA,CACA1V,KAAA,WACAgM,MAAA,CACA,CACAhM,KAAA,QACAwF,UAAA,kCAEA,CACAxF,KAAA,SACAwF,UAAA,QACA9E,MAAA0Y,QAAA,qBAGAjN,MAAA,WACA2O,EAAAnV,OACAqV,EAAArV,OACAwX,EAAAvC,EAAA9I,WAAAvK,KAAA7G,SAGAof,QAAA,CACA9f,KAAA,gBACAgM,MAAA,CACA,CACAhM,KAAA,QACAwF,UAAA,4BAEA,CACAxF,KAAA,SACAwF,UAAA,QACA9E,MAAA0Y,QAAA,qBAGAjN,MAAA,WA9fA,IAAAzG,EACA0H,EACA5F,EA6fAsT,EAAAnV,OACAqV,EAAArV,OAhgBAD,EAigBA,YAAAkV,EAAA9I,WAAAvK,KAAA7G,MAAA,kBAhgBA0M,EAAAwN,EAAA9I,WAAAvK,KAAA7G,MACA8G,EAAAoT,EAAA9I,WAEA1E,EAAAiQ,YAAA,CAAuB0C,iBAAAra,EAAA,yBAAkD,SAAAuJ,EAAA1H,GACzE,IAAAyY,GAEA/Q,GAAA1H,IACA6F,EAAA,kBAAA4S,EAAAta,EAAA,wBACA8B,EAAAD,KAAAyE,MAAA,GAAAxG,UAAAE,EAAA,6DACA8B,EAAAiE,OAAApB,MAAA4V,QAAAza,UAAAgC,EAAAD,KAAAyE,MAAA,GAAAxG,UAEA4H,EAAA,iBACAA,EAAAgR,MAAAtY,QAAA,SAAAiB,GACAA,EAAA,kBAAAiZ,SAsfAzC,cAAA,CACAvd,KAAA,gBACAgM,MAAA,CACA,CACAxG,UAAA,cAEA,CACAxF,KAAA,SACAwF,UAAA,QACA9E,MAAA0Y,QAAA,4BAGAjN,MAAA,WACA6O,EAAArV,OACAqV,EAAAkF,UAAA1D,UACAxB,EAAAkF,UAAAzD,UAAAzB,EAAAkF,UAAAzD,SAAAD,SACAnH,KAAAqH,cAAAC,QAAA,SAAA1N,GACAA,GACAqO,EAAAtC,EAAAkF,UAAA,sBAIA5C,EAAAtC,EAAAkF,UAAA,sBAKAC,WAAA,CACAnU,MAAA,CACA,CACAxG,UAAA,cAEA,CACAxF,KAAA,SACAwF,UAAA,QACA9E,MAAA0Y,QAAA,iBAGAjN,MAAA,WACA6O,EAAArV,OACAiV,EAAA9I,WAAAvK,KAAA7G,MAAA8b,UAAA5B,EAAA9I,WAAAvK,KAAA7G,MAAA+b,SAAAD,SACAnH,KAAAqH,cAAAC,QAAA,SAAA1N,GACAA,GACAqO,MAIAA,OAOAxC,EAAA,IAAAa,EAAA,CACA1O,MAAAmM,QAAA,WACA5T,UAAA,UACAK,OAAA,CACA6B,KAAA,WACA,IAAAH,EAAAqT,EAAA9I,WAAAvK,KAAA7G,MACA0f,EAAA7E,EAAAlR,MAAAqL,SAAArL,MACAgW,EAAA9E,EAAAlR,MAAAiW,cAAAjW,MAEA9C,EAAAmO,UACA0K,EAAAjT,MAAA3H,UAAA,+CACA4a,EAAAG,OAAArU,UAAAkN,QAAA,2BAEAgH,EAAAjT,MAAA3H,UAAA,iCACA4a,EAAAG,OAAArU,UAAAkN,QAAA,oBAGA,YAAA7R,EAAA,mBACA8Y,EAAAlT,MAAA3H,UAAA,aACA6a,EAAAE,OAAArU,UAAAkN,QAAA,yBAEAiH,EAAAlT,MAAA3H,UAAA,2BACA6a,EAAAE,OAAArU,UAAAkN,QAAA,qBAGAzT,KAAA,WACA8U,EAAArU,UAGAhB,SAAA,CACAmW,EAAA,IAAAnQ,EAAA,CACAuG,KAAA,EACAvH,WAAA,EACA6H,OAAA,EACA1G,WAAA,EACAhE,KAAA,CACAsT,EAAArX,KACAqX,EAAAnF,SACAmF,EAAAiF,SAEAja,OAAA,CACAiH,QAAA,SAAA3G,GAEA,OADAiF,EAAA/J,UAAAuE,cAAAkH,QAAAlN,KAAAkF,KAAAqB,GACAA,EAAAoE,MACA,KAAA9I,EAAAqB,KACA,KAAArB,EAAAC,KACAoZ,EAAAnV,OACAQ,EAAAzC,MAAA,UAQA0E,EAAA1C,IAAAoV,GAIAE,EAAA,IAAAW,EAAA,CACA1O,MAAAmM,QAAA,WACA5T,UAAA,UACAK,OAAA,CACA6B,KAAA,SAAAH,GACA,IAAA6Y,EAAA5E,EAAAnR,MAAAqL,SAAArL,MACAgW,EAAA7E,EAAAnR,MAAAiW,cAAAjW,MAEAvF,KAAAob,UAAA3Y,EACAzC,KAAAM,SAAA,GAAAgB,QACAtB,KAAAkI,MAAAd,UAAA3E,EAAAvH,KACAwb,EAAAnR,MAAAkT,cAAAlT,MAAAkW,OAAArU,UAAAkN,QAAA,8BACA6C,EAAA1U,EAAA,oBAEAA,EAAAmO,UACA0K,EAAAjT,MAAA3H,UAAA,+CACA4a,EAAAG,OAAArU,UAAAkN,QAAA,2BAEAgH,EAAAjT,MAAA3H,UAAA,iCACA4a,EAAAG,OAAArU,UAAAkN,QAAA,oBAGA,YAAA7R,EAAA,mBACA8Y,EAAAlT,MAAA3H,UAAA,aACA6a,EAAAE,OAAArU,UAAAkN,QAAA,yBAEAiH,EAAAlT,MAAA3H,UAAA,2BACA6a,EAAAE,OAAArU,UAAAkN,QAAA,qBAGAzT,KAAA,WACA8U,EAAArU,UAGAhB,SAAA,CACAoW,EAAA,IAAApQ,EAAA,CACAuG,KAAA,EACAvH,WAAA,EACA6H,OAAA,EACA1G,WAAA,EACAhE,KAAA,CACAsT,EAAA0C,cACA1C,EAAAsF,WACAtF,EAAAnF,SACAmF,EAAAiF,SAEAja,OAAA,CACAiH,QAAA,SAAA3G,GAEA,OADAiF,EAAA/J,UAAAuE,cAAAkH,QAAAlN,KAAAkF,KAAAqB,GACAA,EAAAoE,MACA,KAAA9I,EAAAqB,KACA,KAAArB,EAAAC,KACAsZ,EAAArV,OACAQ,EAAAzC,MAAA,UAQA0E,EAAA1C,IAAAsV,GAIAM,EAAA,IAAAK,EAAA,CACA5W,SAAA,EACAkI,MAAAmM,QAAA,QACAvT,OAAA,CACA6B,KAAA,WACA5C,KAAAM,SAAA,GAAAgB,UAGAhB,SAAA,CACA,IAAAwW,EAAA,CACAxR,WAAA,EACAuH,KAAA,EACAM,OAAA,EACA1K,KAAA,CACA,CACAwM,OAAA,EACA9G,MAAAmM,QAAA,WACA1Y,MAAA,SAEA,CACAqT,OAAA,EACA9G,MAAAmM,QAAA,WACA1Y,MAAA,QAEA,CACAqT,OAAA,EACA9G,MAAAmM,QAAA,aACA1Y,MAAA,WAGAmF,OAAA,CACA2a,aAAA,WACAlF,EAAA3V,OACA8U,EAAArU,SAEAqa,OAAA,SAAAlZ,GACAuQ,EAAAzN,MAAA0D,KAAA1D,MAAA2C,MAAAd,UAAA3E,EAAAsM,MAAAtM,KAAA0F,MACA2N,EAAAxO,QAAA,CAAsC7E,KAAA,KACtCxE,EAAAqS,IAAAxQ,OAAA2a,OAAAhY,EAAAsM,MAAAtM,KAAA7G,MACAqC,EAAAqS,IAAAxQ,OAAA4a,OAAA,EACAzc,EAAAqS,IAAAxQ,OAAA+Q,MAAA,EACAiF,EAAAtQ,KAAA,CACA6H,SAAA,IAAAuJ,EAAA,CACA+D,SAAA3C,EAAAnL,KACA+N,UAAA5C,EAAAjH,MACA8G,QAAA5Z,EAAAqS,IAAAxQ,OACA3E,OAAAmf,EACAvC,YACA5K,OAAA,IAEA7H,WAAA,KAGA0C,QAAA,SAAA3G,GAEA,OADAyV,EAAAva,UAAAuE,cAAAkH,QAAAlN,KAAAkF,KAAAqB,GACAA,EAAAoE,MACA,KAAA9I,EAAAC,KACA4Z,EAAA3V,OACA8U,EAAArU,QACAD,EAAAzC,MAAA,UAQA0E,EAAA1C,IAAA4V,GAIAD,EAAA,IAAAM,EAAA,CACA5W,SAAA,EACAkI,MAAAmM,QAAA,cACAvT,OAAA,CACA6B,KAAA,WACA5C,KAAAM,SAAA,GAAAgB,UAGAhB,SAAA,CACA2V,EAAA,IAAAa,EAAA,CACAxR,WAAA,EACAuH,KAAA,EACAM,OAAA,EACAC,OAAAiJ,EAAA,IAAAU,EACAhW,OAAA,CACA2a,aAAA,WACAnF,EAAA1V,OACA8U,EAAArU,SAEAqa,OAAA,SAAAlZ,GACAuQ,EAAAzN,MAAAuV,WAAAvV,MAAA2C,MAAAd,UAAA3E,EAAAsM,MAAAtM,KAAA0F,MACA1F,EAAAsM,MAAAtM,KAAA7G,MACAoX,EAAAzN,MAAAuV,WAAAvV,MAAA8C,MAAA1F,UAAA/B,IAAA,UAEAoS,EAAAzN,MAAAuV,WAAAvV,MAAA8C,MAAA1F,UAAAT,OAAA,UAEA4T,EAAAxO,QAAA,CAAsC7E,KAAA,KACtCxE,EAAAqS,IAAAxQ,OAAA6Q,WAAAlO,EAAAsM,MAAAtM,KAAA7G,MACAqC,EAAAqS,IAAAxQ,OAAA4a,OAAA,EACAzc,EAAAqS,IAAAxQ,OAAA+Q,MAAA,EACAiF,EAAAtQ,KAAA,CACA6H,SAAA,IAAAuJ,EAAA,CACA+D,SAAA3C,EAAAnL,KACA+N,UAAA5C,EAAAjH,MACA8G,QAAA5Z,EAAAqS,IAAAxQ,OACA3E,OAAAmf,EACAvC,YACA5K,OAAA,IAEA7H,WAAA,KAGA0C,QAAA,SAAA3G,GAEA,OADAyV,EAAAva,UAAAuE,cAAAkH,QAAAlN,KAAAkF,KAAAqB,GACAA,EAAAoE,MACA,KAAA9I,EAAAC,KACA2Z,EAAA1V,OACA8U,EAAArU,QACAD,EAAAzC,MAAA,OAMAyX,KAGA/S,EAAA1C,IAAA2V,GAGAD,EAAA,IAAAO,EAAA,CACA5W,SAAA,EACAkI,MAAAmM,QAAA,UACAvT,OAAA,CACA6B,KAAA,WACA5C,KAAAM,SAAA,GAAAgB,UAGAhB,SAAA,CACA8V,EAAA,IAAAU,EAAA,CACAxR,WAAA,EACAuH,KAAA,EACAM,OAAA,EACAC,OAAAiJ,EAAA,IAAAU,EACAhW,OAAA,CACA2a,aAAA,WACApF,EAAAzV,OACA8U,EAAArU,SAEAqa,OAAA,SAAAlZ,GACAuQ,EAAAzN,MAAAwV,OAAAxV,MAAA2C,MAAAd,UAAA3E,EAAAsM,MAAAtM,KAAA0F,MACA1F,EAAAsM,MAAAtM,KAAA7G,MACAoX,EAAAzN,MAAAwV,OAAAxV,MAAA8C,MAAA1F,UAAA/B,IAAA,UAEAoS,EAAAzN,MAAAwV,OAAAxV,MAAA8C,MAAA1F,UAAAT,OAAA,UAEA4T,EAAAxO,QAAA,CAAsC7E,KAAA,KACtCxE,EAAAqS,IAAAxQ,OAAA4Q,QAAAjO,EAAAsM,MAAAtM,KAAA7G,MACAqC,EAAAqS,IAAAxQ,OAAA4a,OAAA,EACAzc,EAAAqS,IAAAxQ,OAAA+Q,MAAA,EACAiF,EAAAtQ,KAAA,CACA6H,SAAA,IAAAuJ,EAAA,CACA+D,SAAA3C,EAAAnL,KACA+N,UAAA5C,EAAAjH,MACA8G,QAAA5Z,EAAAqS,IAAAxQ,OACA3E,OAAAmf,EACAvC,YACA5K,OAAA,IAEA7H,WAAA,KAGA0C,QAAA,SAAA3G,GAEA,OADAyV,EAAAva,UAAAuE,cAAAkH,QAAAlN,KAAAkF,KAAAqB,GACAA,EAAAoE,MACA,KAAA9I,EAAAC,KACA0Z,EAAAzV,OACA8U,EAAArU,QACAD,EAAAzC,MAAA,OAMAyX,KAGA/S,EAAA1C,IAAA0V,GAKAT,EAAA,IAAAgB,EAAA,CACA1O,MAAAmM,QAAA,WACA5T,UAAA,UACAK,OAAA,CACAF,KAAA,WACA8U,EAAArU,UAGAhB,SAAA,CACA,IAAAgG,EAAA,CACAuG,KAAA,EACAvH,WAAA,EACA6H,OAAA,EACA1G,WAAA,EACAhE,KAAA,CACA,CACAyE,MAAA,CACA,CACAxG,UAAA,+BAEA,CACA9E,MAAA0Y,QAAA,mBAGAjN,MAAA,WACAwO,EAAAhV,OACA+U,OAIA7U,OAAA,CACAiH,QAAA,SAAA3G,GAEA,OADAiF,EAAA/J,UAAAuE,cAAAkH,QAAAlN,KAAAkF,KAAAqB,GACAA,EAAAoE,MACA,KAAA9I,EAAAqB,KACA,KAAArB,EAAAC,KACAiZ,EAAAhV,OACAQ,EAAAzC,MAAA,UAQA0E,EAAA1C,IAAAiV,GAIAvS,EAAAuW,UAAA,SAAAhX,EAAAJ,EAAAiH,GACA,IACAzH,EAAAiX,EAAA0C,EACAC,EAAA/b,EAFA4C,EAAAoT,EAAA9I,WAAAvK,KAIA,SAAA7B,EAAAuJ,EAAA2R,GACA,IAAAna,EAEA,IAAAwI,GAAA2R,KAAAZ,OAAA,CAGA,OAFAjZ,EAAAkN,KAAA,kBAAArP,EAAA,kBACAmC,EAAA0X,MAAA,kBAAAmC,EAAA,wBACA7Z,EAAA0X,MAAA,mBACA,cACAjX,EAAAwE,MAAA,GAAAxG,UAAA,2BACAuB,EAAA8Z,UACA9Z,EAAA8Z,QAAA7U,MAAA,GAAAxG,UAAA,4BAEA,MAEA,kBACAgC,EAAAwE,MAAA,GAAAxG,UAAA,kCACAuB,EAAA8Z,UACA9Z,EAAA8Z,QAAA7U,MAAA,GAAAxG,UAAA,mCAEA,MAEA,gBACAgC,EAAAwE,MAAA,GAAAxG,UAAA,oCACAuB,EAAA8Z,UACA9Z,EAAA8Z,QAAA7U,MAAA,GAAAxG,UAAA,qCAKA,GAAAob,EAAA,0BAAA7Z,EAAAkX,OAEA,OADAlX,EAAAkX,OAAAvd,MAAA,kBAAAkgB,EAAA,yBACA7Z,EAAAkX,OAAAvd,MAAA,mBACA,cACAqG,EAAAkX,OAAAjS,MAAA,GAAAxG,UAAA,2BACA,MAEA,kBACAuB,EAAAkX,OAAAjS,MAAA,GAAAxG,UAAA,kCACA,MAEA,gBACAuB,EAAAkX,OAAAjS,MAAA,GAAAxG,UAAA,oCAKA,GAAAuB,EAAA8Z,QACA,IAAApa,EAAA,EAAgCA,EAAAM,EAAA8Z,QAAAngB,MAAA0d,MAAAzX,OAAyCF,IACzE,GAAAM,EAAA8Z,QAAAngB,MAAA0d,MAAA3X,GAAAhB,KAAAsB,EAAAkN,KAAAxO,GAAA,CAMA,OALAsB,EAAA8Z,QAAAngB,MAAA0d,MAAA3X,GAAA,kBAAA7B,EAAA,kBACAA,EAAA,kBACAmC,EAAA8Z,QAAAngB,MAAA0d,MAAA3X,GAAA,gBAAA7B,EAAA,iBAEAmC,EAAA8Z,QAAAngB,MAAA,kBAAAkE,EAAA,kBACAA,EAAA,mBACA,cACAmC,EAAA8Z,QAAA7U,MAAA,GAAAxG,UAAA,2BACA,MAEA,kBACAuB,EAAA8Z,QAAA7U,MAAA,GAAAxG,UAAA,kCACA,MAEA,gBACAuB,EAAA8Z,QAAA7U,MAAA,GAAAxG,UAAA,oCAGA,MAKAZ,EAAA,kBACAmC,EAAAkN,KAAA,gBAAArP,EAAA,iBAGAwD,EAAA0Y,cACAnZ,GACAA,KAMAJ,EAAAoW,OAAApW,QAAAmW,gBACAM,EAAAzW,EAAAmW,cAAAqB,SAAAf,SACA0C,EAAAnZ,EAAAmW,cAAAqB,SAAA2B,SACA3Z,EAAAQ,EAAAoW,OAAApW,KACAiH,GACA5J,EAAA,CACAmb,iBAAA,UACAgB,eAAAL,EAAA,IAEA3Z,EAAA0X,MAAAuC,kBAAAja,EAAAkN,KAAAxO,GAAAb,EAAAc,IACSsY,EAAA,IACTA,GAAA0C,KACAC,EAAA3C,EAAA0C,EAAA,KACA,GACA9b,EAAA,CACAmb,iBAAA,UACAgB,eAAA/C,EAAA,IAEiB2C,EAAA,IACjB/b,EAAA,CACAmb,iBAAA,YACAgB,eAAA/C,EAAA,KAGAjX,EAAA0X,MAAAuC,kBAAAja,EAAAkN,KAAAxO,GAAAb,EAAAc,MAQA0C,EAAA0Y,YAAA,SAAAG,GACA,IAAAla,EAEA,GAAAka,EAEA,QADAla,EAAA6T,EAAA9I,WAAAvK,MACA7G,MAAA,mBACA,cACAqG,EAAAiF,MAAA,GAAAxG,UAAA,2BACA,MACA,kBACAuB,EAAAiF,MAAA,GAAAxG,UAAA,kCACA,MACA,gBACAuB,EAAAiF,MAAA,GAAAxG,UAAA,oCAKAoV,EAAArT,KAAAZ,QAAAiU,EAAA9I,YACA8I,EAAAxO,QAAA,CAA0B7E,KAAAqT,EAAArT,KAAA6C,WAAAwQ,EAAA9I,WAAArL,SAK1B2B,EAAAM,KAAA,OAnhCA,WACA,IAAAwY,EACAC,EAAA,CACA,CACAnhB,KAAA,SACAgM,MAAA,CACA,CACAhM,KAAA,QACAwF,UAAA,gCAEA,CACAxF,KAAA,QACAU,MAAA0Y,QAAA,UACA5T,UAAA,qBAGA2G,MAAA,SAAAX,GACA6J,KAAAsI,OAAA,CACA/M,OAAA,WACArJ,KAAA,CACA7G,MAAAsc,EAAAtc,MACAuM,MAAAmM,QAAA,iBAEAvT,OAAA,CACAub,KAAA,SAAA7Z,GACAyV,EAAAtc,MAAA6G,EAAA7G,MACA6G,EAAA7G,OACA8K,EAAAC,OAAApB,MAAA2C,MAAAd,UAAA3E,EAAA7G,MACA8K,EAAAC,OAAApB,MAAA8C,MAAA1F,UAAA/B,IAAA,YAEA8F,EAAAC,OAAApB,MAAA2C,MAAAd,UAAA8Q,EAAAC,YACAzR,EAAAC,OAAApB,MAAA8C,MAAA1F,UAAAT,OAAA,WAEAjE,EAAAqS,IAAAxQ,OAAAoD,SAAAT,EAAA7G,QACAqC,EAAAqS,IAAAxQ,OAAAoD,OAAAT,EAAA7G,MACAqC,EAAAqS,IAAAxQ,OAAA4a,OAAA,EACAzc,EAAAqS,IAAAxQ,OAAA+Q,MAAA,EACAiF,EAAAtQ,KAAA,CACA6H,SAAA,IAAAuJ,EAAA,CACA+D,SAAA3C,EAAAnL,KACA+N,UAAA5C,EAAAjH,MACA8G,QAAA5Z,EAAAqS,IAAAxQ,OACA3E,OAAAmf,EACAvC,UAAA,EACA5K,OAAA,IAEA7H,WAAA,QAMqB,SAAA6E,QAKrB,CACAjP,KAAA,WACAgM,MAAA,CACA,CACAhM,KAAA,QACAwF,UAAA,kCAEA,CACA9E,MAAA0Y,QAAA,cAGAjN,MAAA,SAAAX,GACAzI,EAAAqS,IAAAxQ,OAAA8Q,SACAlK,EAAAC,OAAApB,MAAA8C,MAAA3H,UAAA,iCAEAgG,EAAAC,OAAApB,MAAA8C,MAAA3H,UAAA,+CAEAoV,EAAAxO,QAAA,CAAsC7E,KAAA,KACtCxE,EAAAqS,IAAAxQ,OAAA8Q,UAAA3S,EAAAqS,IAAAxQ,OAAA8Q,SACA3S,EAAAqS,IAAAxQ,OAAA4a,OAAA,EACAzc,EAAAqS,IAAAxQ,OAAA+Q,MAAA,EACAiF,EAAAtQ,KAAA,CACA6H,SAAA,IAAAuJ,EAAA,CACA+D,SAAA3C,EAAAnL,KACA+N,UAAA5C,EAAAjH,MACA8G,QAAA5Z,EAAAqS,IAAAxQ,OACA3E,OAAAmf,EACAvC,YACA5K,OAAA,IAEA7H,WAAA,MAIA,CACApK,KAAA,SACAgM,MAAA,CACA,CACAhM,KAAA,QACAwF,UAAA,gCAEA,CACAxF,KAAA,QACAU,MAAA0Y,QAAA,cACA5T,UAAA,oBAGA2G,MAAA,WACAsO,EAAAtT,OACAiU,EAAA1T,OACA0T,EAAAhV,UAGA,CACApG,KAAA,aACAgM,MAAA,CACA,CACAhM,KAAA,QACAwF,UAAA,oCAEA,CACAxF,KAAA,QACAU,MAAA0Y,QAAA,kBACA5T,UAAA,oBAGA2G,MAAA,WACAsO,EAAAtT,OACAkU,EAAA3T,OACA2T,EAAAjV,UAGA,CACApG,KAAA,OACAgM,MAAA,CACA,CACAhM,KAAA,QACAwF,UAAA,iCAEA,CACAxF,KAAA,QACAU,MAAAqc,EAAAha,EAAAqS,IAAAxQ,OAAA2a,SAAAnG,QAAA,WACA5T,UAAA,oBAGA2G,MAAA,WACAsO,EAAAtT,OACAmU,EAAA5T,OACA4T,EAAAlV,WAKArD,EAAAqS,IAAAxQ,OAAA4a,OAAA,EACAzc,EAAAqS,IAAAxQ,OAAA+Q,MAAA,EAgBAwL,EAAAva,KAAA,CACAoF,MAAA,CACA,CACAxG,UAAA,8BAEA,CACA9E,MAAA0Y,QAAA,UAGAjN,MAAAlK,EAAAof,SAGAvJ,EAAA1L,QAAA,CACAhC,WAAA0N,EAAAhG,WAAAgG,EAAAhG,WAAArL,MAAA,EACAc,KAAA4Z,KAGAvG,EAAA,IAAAxP,EAAA,CACA+G,SAAA,IAAAuJ,EAAA,CACA+D,SAAA3C,EAAAnL,KACA+N,UAAA5C,EAAAjH,MACA8G,QAAA5Z,EAAAqS,IAAAxQ,OACA3E,OAAAmf,EACAvC,YACA5K,OAAA,IAEApM,OAAA,CACAO,MAAA,WACA+V,EAAA7R,KAAA,CACAG,KAAA,CACAF,KAAA9I,EAAAqB,KACA8N,OAAA,WACA6J,EAAAjJ,OAAAiJ,EAAArQ,cAAAkS,IACA7B,EAAAtT,OACAgV,EAAAxW,OACA2Z,OAIArO,OAAA,CACA,CACA1G,KAAA9I,EAAAc,GACA0K,MAAAmM,QAAA,YACAxI,OAAA,WACA6J,EAAAjJ,OAAAiJ,EAAArQ,cAAAkS,GACAa,EAAAvC,EAAA9I,WAAAvK,KAAA7G,UAKA4gB,MAAA,CACA/W,KAAA9I,EAAAqB,KACAmK,MAAAmM,QAAA,uCACAxI,OAAA,WACA6J,EAAAjJ,OAAAiJ,EAAArQ,cAAAkS,IACA7B,EAAAtT,OACAgV,EAAAxW,OACA2Z,SAKAnD,EAAAzU,QAEA6Z,aAAAL,EAAA,SAAA/a,GACA+W,EAAArZ,MACAmV,aAAAkE,EAAArZ,MAGAqZ,EAAArZ,KAAA+D,WAAA,WACA,IAAAiM,EAAA1N,EAAA0N,MAEAA,IAEAA,EAAAtM,KAAA7G,QACAmT,EAAAtM,KAAA7G,MAAA8b,UAAA3I,EAAAtM,KAAA7G,MAAA+b,UAAA5I,EAAAtM,KAAA7G,MAAA+b,SAAAD,YACAnH,KAAAqH,cAAA3I,MAEAmI,EAAAsF,YAEAtF,EAAAuF,WACAvF,EAAAwF,KAAA7N,EAAAtM,KAAA7G,UAGiB2U,KAAAO,YAAA+L,yBAEjBC,YAAAV,EACAV,aAAA,SAAAra,GAEAA,EAAAqF,MAAAjE,KAAA7G,QACAyF,EAAAqF,MAAAjE,KAAA7G,MAAA8b,UACArW,EAAAqF,MAAAjE,KAAA7G,MAAA+b,UAAAtW,EAAAqF,MAAAjE,KAAA7G,MAAA+b,SAAAD,UAEAnH,KAAAqH,cAAAC,QAAA,SAAA1N,GACAA,GACAlM,EAAAmF,MAAAnF,EAAA8S,MAAAhS,KAAA,CAAuDA,KAAAsC,EAAAqF,MAAAjE,KAAA7G,UAIvDqC,EAAAmF,MAAAnF,EAAA8S,MAAAhS,KAAA,CAA+CA,KAAAsC,EAAAqF,MAAAjE,KAAA7G,OAAA,MAK/CmhB,aAAA,SAAA5S,MAIA0C,KAAAmL,EAAAnL,KACAgB,OAAgBtT,EAAQ,IACxBkM,WAAA,EACA/F,UAAA,mBACA8G,OAAA8M,QAAA,YACAhP,WAAA,EACA8H,OAAA+I,EAAA,IAAAY,EAAA,OAGAnT,KAAA,wBACAkS,EAAAxU,QACArD,EAAAgJ,UAGA6O,EAAAlS,KAAA,sBACAkS,EAAAxU,QACArD,EAAAqS,IAAA0M,cAAA,SAAA7S,EAAA1H,GACA,IACAd,EADAsb,EAAA,GAWA,IAPAxa,UAAA,GACAwa,EAAAnb,KAAA,CACAmN,OAAA,EACA9G,MAAAmM,QAAA,kBACA1Y,MAAA,KAGA+F,EAAA,EAA4BA,EAAAc,EAAAZ,OAAqBF,IACjDsb,EAAAnb,KAAA,CACAmN,OAAA,EACA9G,MAAA1F,EAAAd,GAAAzG,KACAU,MAAA6G,EAAAd,GAAAhB,KAGAsV,EAAA3O,QAAA,CAAoC7E,KAAAwa,EAAA3X,WAAA,IAEpCrH,EAAAqS,IAAA4M,UAAA,SAAA/S,EAAA4Q,GAWA,IAVAkC,EAAA,GAGAlC,IAAAtY,MAAA,GACAwa,EAAAnb,KAAA,CACAmN,OAAA,EACA9G,MAAAmM,QAAA,cACA1Y,MAAA,KAGA+F,EAAA,EAAgCA,EAAAoZ,EAAAlZ,OAAuBF,IACvDsb,EAAAnb,KAAA,CACAmN,OAAA,EACA9G,MAAA4S,EAAApZ,GAAAzG,KACAU,MAAAmf,EAAApZ,GAAAwb,IAAAtL,KAAA,OAGAuE,EAAA9O,QAAA,CAAmC7E,KAAAwa,EAAA3X,WAAA,QAGnCrH,EAAAgJ,UAEAuQ,EAAA5W,IAAAkV,GACA0B,EAAA5W,IAAAuV,GACAqB,EAAAlW,UAssBAgC,EAAAS,aAAA,CACAnB,KAAA,WACA+S,EAAA/S,OACA+S,EAAArU,SAIA0G,QAAA,SAAA3G,GACA,OAAAA,EAAAoE,MACA,KAAA9I,EAAAC,KAEA+Y,EAAAtT,OACAlF,EAAAigB,aA0BAnf,EAAAiD,YAAA,2BAAAuB,GAEA4V,GADA5V,KAAA,IACA6F,MAAA7F,EAAAI,YAIA0N,KAAAxM,aAAA,CACAnB,KAAA,SAAAvB,GACA,OAAAA,EAAAgc,QACA,KAAA9M,KAAA+M,QAAAC,SACA,GAAAtf,EAAAqS,IAAAxQ,OAAAoD,OACA,OAjoCA4S,EAAAxO,QAAA,CAAsB7E,KAAA,KACtBxE,EAAAqS,IAAAxQ,OAAA4a,OAAA5E,EAAAzI,SAAArC,KACA/M,EAAAqS,IAAAxQ,OAAA0d,KAAA1H,EAAAzI,SAAAoQ,KAAA3H,EAAAzI,SAAArC,KACA8K,EAAAtQ,KAAA,CACA6H,SAAA,IAAAuJ,EAAA,CACA+D,SAAA3C,EAAAnL,KACA+N,UAAA5C,EAAAjH,MACAgH,YACA7J,IAAA4H,EAAAzI,SAAAa,IACA2J,QAAA5Z,EAAAqS,IAAAxQ,OACA3E,OAAAmf,EACAnN,OAAA,EACAuQ,SAAA5H,EAAAzI,SAAAqQ,WAEApY,WAAAwQ,EAAA9I,WAAA8I,EAAA9I,WAAArL,MAAA,MA4nCAkX,OAAA,SAAAA,EAAAhW,GACA,iBAAAgW,EAAA/M,OACA,OAAA+M,EAAAa,MACA,WACAb,EAAApW,MACAxE,EAAA8S,MAAAhS,OAAAd,EAAAkE,WACAlE,EAAA8S,MAAAhS,KAAAwC,KAAA,QACAkB,KAAA,CACA1D,KAAA8Z,EAAApW,KACAmG,KAAA,SACA/F,cAIA5E,EAAAmF,MAAAnF,EAAA8S,MAAAhS,KAAA,CACAA,KAAA8Z,EAAApW,KACAmG,KAAA,SACA/F,aAGAA,GAAA,SAEAA,GAAA,QAGA,MAEA,QACA5E,EAAAmF,MAAAnF,EAAA8S,MAAApE,MACA9J,GAAA,YAQAnI,EAAAD,QAAA6I,gCCvnDA,IAAAzD,EAAgBtF,EAAQ,GAwBxB,SAAAojB,EAAA7d,GAEAA,KAAA,GAoBAE,KAAAwD,QAAA,EAQAxD,KAAAoC,gBAAA,KAMAvC,EAAA/E,KAAAkF,KAAAF,GAGAE,KAAAwD,OAAAxD,KAAAG,MAAAwC,UAAA0P,SAAA,UAGA,OAAArS,KAAAG,MAAA4B,YACAvB,SAAA2Q,KAAAnP,YAAAhC,KAAAG,OAIAH,KAAAsD,KAAAtD,KAKA2d,EAAAphB,UAAAlB,OAAAY,OAAA4D,EAAAtD,WACAohB,EAAAphB,UAAAkF,YAAAkc,EAGAA,EAAAphB,UAAArB,KAAA,qBAIAR,EAAAD,QAAAkjB,gCCpFA,IAAAhhB,EAAcpC,EAAQ,GACtB2V,EAAA,EA8BA,SAAA0N,EAAA9d,GACAA,KAAA,GACAE,KAAA6M,KAAA/M,EAAA6a,SACA3a,KAAA6d,SAAA/d,EAAA+d,UAAA,EACA7d,KAAAyC,KAAA,GACAzC,KAAAgL,KAAA,EACAhL,KAAAyd,KAAA,EACAzd,KAAAkO,IAAApO,EAAAoO,KAAA,EACAlO,KAAA4a,WAAA9a,EAAA8a,WAAA,GAAA5a,KAAA6M,KACA7M,KAAAF,SAAA+X,SAAA,GACA7X,KAAA8d,cAAA,EACA9d,KAAAgO,SAAAlO,EAAAoF,OAAA,EACAlF,KAAA0d,SAAA5d,EAAA4d,SACA1d,KAAA+d,YAAA,EACA/d,KAAA+X,UAAA,IAAAjY,EAAAiY,WAAA,EAEA/X,KAAAmN,MAAArN,EAAAqN,MACAnN,KAAA7E,OAAA2E,EAAA3E,OACA6E,KAAA8N,SAAA,EAEAoC,EAAA,EAIA0N,EAAArhB,UAAAkF,YAAAmc,EASAA,EAAArhB,UAAAf,IAAA,SAAAkT,EAAA7L,GACA,IAAA9C,EAAAC,KAEAge,EAAA,GACAzO,EAAA,IAAA0O,KAEA,IAAAje,KAAA8N,QAIA,OAAAY,GACA,UACA1O,KAAA8N,SAAA,EAEA9N,KAAAF,OAAA4a,QACA1a,KAAAgL,KAAAhL,KAAAF,OAAA4a,SACA1a,KAAAF,OAAA+Q,OAAA7Q,KAAAF,OAAA+Q,MAAA,KACA7Q,KAAAF,OAAA+Q,MAAA,EAAA7Q,KAAA4a,cAEa5a,KAAAF,OAAA+Q,OAAA7Q,KAAAF,OAAA+Q,MAAA,KACb7Q,KAAAF,OAAA+Q,MAAA7Q,KAAA4a,WAEA5a,KAAA7E,OAAA,SAAAgP,EAAA1H,EAAAuL,GAMA,GALAjO,EAAA2d,WAAA3d,EAAAD,OAAA4a,SACAjY,EAAAyb,QAAAne,EAAA2d,UACAxN,EAAA,GAEAnQ,EAAAge,YAAAxO,EAAA4O,UACAhU,EACAtH,GAAA,EAAAJ,OACiB,CAIjB,GAHA1C,EAAAiO,WACAjO,EAAA0C,OACA1C,EAAA0d,KAAA1d,EAAAiL,KAAAvI,EAAAZ,OACA9B,EAAAiO,UAAAjO,EAAAiL,MAAAjL,EAAAiO,SAGA,YAFAjO,EAAAqe,MAAAvb,GAAA,GAIAJ,EAAAZ,OAAA9B,EAAAD,OAAA+Q,QACA9Q,EAAA+d,cAAA,GAEA/d,EAAAmO,IAAAnO,EAAA8M,KAAA9M,EAAA0C,KAAAZ,QACAmc,EAAAje,EAAA0C,KAAA4B,MAAAtE,EAAAmO,IAAAnO,EAAAmO,IAAAnO,EAAA8M,MACAhK,EAAAsH,EAAA6T,GACAje,EAAAse,aAEAte,EAAAse,UAAAxb,GAIA9C,EAAA+N,SAAA,GACa9N,KAAAF,QACb,MAEA,KAAAnD,EAAA+I,MACA,KAAA/I,EAAAkN,KAEA,GADA7J,KAAAkO,KAAAlO,KAAA6d,SACA7d,KAAA+X,WAAAxI,EAAA4O,UAAAne,KAAA+d,YAAA/d,KAAA+X,UAGA,YAFA/X,KAAAse,YAAAzb,GAIA7C,KAAAkO,IAAAlO,KAAA6M,KAAA7M,KAAAyC,KAAAZ,QACAmc,EAAAhe,KAAAyC,KAAA4B,MAAArE,KAAAkO,IAAAlO,KAAAkO,IAAAlO,KAAA6M,MACAhK,GA/DA,EA+DAmb,GACAhe,KAAAqe,aAEAre,KAAAqe,UAAAxb,GAEA,MAEA,KAAAlG,EAAA8M,SAEA,GADAzJ,KAAAkO,KAAAlO,KAAA6M,KAAA,EACA7M,KAAA+X,WAAAxI,EAAA4O,UAAAne,KAAA+d,YAAA/d,KAAA+X,UAGA,YAFA/X,KAAAse,YAAAzb,GAIA7C,KAAAkO,IAAAlO,KAAA6M,KAAA7M,KAAAyC,KAAAZ,QACAmc,EAAAhe,KAAAyC,KAAA4B,MAAArE,KAAAkO,IAAAlO,KAAAkO,IAAAlO,KAAA6M,MACAhK,GA/EA,EA+EAmb,GACAhe,KAAAqe,aAEAre,KAAAqe,UAAAxb,GAEA,MAEA,KAAAlG,EAAAgJ,KACA,KAAAhJ,EAAAiN,GAEA,GADA5J,KAAAkO,KAAAlO,KAAA6d,SACA7d,KAAA+X,WAAAxI,EAAA4O,UAAAne,KAAA+d,YAAA/d,KAAA+X,UAGA,YAFA/X,KAAAse,YAAAzb,GAIA7C,KAAAkO,KAAA,GACA8P,EAAAhe,KAAAyC,KAAA4B,MAAArE,KAAAkO,IAAAlO,KAAAkO,IAAAlO,KAAA6M,MACAhK,GAhGA,EAgGAmb,GACAhe,KAAAue,aAEAve,KAAAue,UAAA1b,GAEA,MAEA,KAAAlG,EAAA6M,OAEA,GADAxJ,KAAAkO,KAAAlO,KAAA6M,KAAA,EACA7M,KAAA+X,WAAAxI,EAAA4O,UAAAne,KAAA+d,YAAA/d,KAAA+X,UAGA,YAFA/X,KAAAse,YAAAzb,GAIA7C,KAAAkO,IAAA,GACA8P,EAAAhe,KAAAyC,KAAA4B,MAAArE,KAAAkO,IAAAlO,KAAAkO,IAAAlO,KAAA6M,MACAhK,GAhHA,EAgHAmb,GACAhe,KAAAue,aAEAve,KAAAue,UAAA1b,GAEA,MACA,KAAAlG,EAAAgN,KACA3J,KAAAwe,OAAA3b,GACA,MACA,KAAAlG,EAAA+M,IACA1J,KAAAoe,MAAAvb,KAWA+a,EAAArhB,UAAA8hB,UAAA,SAAAI,GACA,IAAAvZ,EAAAlF,KAAA4a,UAAA5a,KAAAkO,IAAAlO,KAAAyC,KAAAZ,OACA9B,EAAAC,KACAuP,EAAA,IAAA0O,KAEA,GAAAje,KAAA8d,aAAA,CACA,GAAA9d,KAAAkO,IAAAlO,KAAAyC,KAAAZ,OAAA7B,KAAA6M,KAAA,CACA,GAAA7M,KAAAmN,MAGA,YAFAnN,KAAAwe,OAAAC,GAKAze,KAAAkO,IAAAlO,KAAAyC,KAAAZ,OAAA7B,KAAA6M,KACA7M,KAAAkO,IAAA,IACAlO,KAAAkO,IAAA,GAGAuQ,GACAA,GAAA,EAAAze,KAAAyC,KAAA4B,MAAArE,KAAAkO,IAAAlO,KAAAkO,IAAAlO,KAAA6M,YAMA,GAAA3H,GAAAlF,KAAA6M,KAAA,CACA,GAAA7M,KAAAgO,UAAA9I,EAAAlF,KAAAyd,KAAAzd,KAAAgO,WACA9I,EAAAlF,KAAAgO,SAAAhO,KAAAyd,OACA,EAYA,OAXA1d,EAAAmO,IAAAnO,EAAA0C,KAAAZ,OAAA9B,EAAA8M,OACA9M,EAAAmO,IAAAnO,EAAA0C,KAAAZ,OAAA9B,EAAA8M,KACA9M,EAAAmO,IAAA,IACAnO,EAAAmO,IAAA,IAGAuQ,GACAA,GAAA,EAAA1e,EAAA0C,KAAA4B,MAAAtE,EAAAmO,IAAAnO,EAAAmO,IAAAnO,EAAA8M,YAEA7M,KAAA8d,cAAA,GAKA9d,KAAAF,OAAA+Q,MAAA3L,EACAlF,KAAAF,OAAA4a,OAAA1a,KAAAyd,KAAAvN,EACAlQ,KAAA8N,SAAA,EACA9N,KAAA7E,OAAA,SAAAgP,EAAA1H,EAAAuL,GACA7D,IACApK,EAAAiO,WACAvL,EAAAZ,OAAAqD,IACAnF,EAAA+d,cAAA,GAEArb,EAAAZ,SACA9B,EAAA0C,KAAA1C,EAAA0C,KAAAic,OAAAjc,GACAyC,EAAAnF,EAAA0C,KAAAZ,OAAA,EAAA9B,EAAA6a,UACA7a,EAAA0d,MAAAhb,EAAAZ,OACAqD,EAAA,IACAnF,EAAA0C,KAAAH,OAAA,EAAA4C,GACAnF,EAAAmO,KAAAhJ,EACAnF,EAAAiL,MAAA9F,IAGAnF,EAAAmO,IAAAnO,EAAA0C,KAAAZ,OAAA9B,EAAA8M,OACA9M,EAAAmO,IAAAnO,EAAA0C,KAAAZ,OAAA9B,EAAA8M,KACA9M,EAAAmO,IAAA,IACAnO,EAAAmO,IAAA,KAIAnO,EAAAge,YAAAxO,EAAA4O,UACApe,EAAA+N,SAAA,EACA2Q,GACAA,EAAAtU,EAAApK,EAAA0C,KAAA4B,MAAAtE,EAAAmO,IAAAnO,EAAAmO,IAAAnO,EAAA8M,QAES7M,KAAAF,UAUT8d,EAAArhB,UAAAgiB,UAAA,SAAAE,GACA,IAAAvZ,EAAAlF,KAAA4a,UAAA5a,KAAAkO,IACAnO,EAAAC,KACAuP,EAAA,IAAA0O,KAEA,GAAAje,KAAAgL,KAAA,EACA9F,GAAAlF,KAAA6M,OACA3H,EAAAlF,KAAAgL,OACA9F,EAAAlF,KAAAgL,MAEAhL,KAAAF,OAAA4a,OAAA1a,KAAAgL,KAAA9F,EAAAgL,EACAlQ,KAAAF,OAAA4a,OAAA,IACA1a,KAAAF,OAAA4a,OAAA,EACAxV,GAAAgL,GAEAlQ,KAAAF,OAAA+Q,MAAA3L,EAEAlF,KAAA8N,SAAA,EACA9N,KAAA7E,OAAA,SAAAgP,EAAA1H,EAAAuL,GACA7D,IACApK,EAAAiO,WACAjO,EAAA0C,OAAAic,OAAA3e,EAAA0C,MACA,IAAA1C,EAAAD,OAAA4a,QAAA3a,EAAA2d,UAAA3d,EAAA0C,KAAA,KAAA1C,EAAA2d,UACA3d,EAAA0C,KAAAyb,QAAAne,EAAA2d,UAEA3d,EAAA0d,MAAAhb,EAAAZ,OACA9B,EAAAmO,KAAAzL,EAAAZ,OACAqD,EAAAnF,EAAA0C,KAAAZ,OAAA,EAAA9B,EAAA6a,UACA7a,EAAAiL,MAAA9F,EACAA,EAAA,IACAnF,EAAA0C,KAAAH,QAAA4C,GACAnF,EAAA+d,cAAA,IAGA/d,EAAAge,YAAAxO,EAAA4O,UACApe,EAAA+N,SAAA,EACA2Q,GACAA,EAAAtU,EAAApK,EAAA0C,KAAA4B,MAAAtE,EAAAmO,IAAAnO,EAAAmO,IAAAnO,EAAA8M,QAEa7M,KAAAF,aAER,CAKL,GAJAE,KAAA0d,UAAA1d,KAAAyC,KAAA,KAAAzC,KAAA0d,UACA1d,KAAAyC,KAAAyb,QAAAle,KAAA0d,UAGA1d,KAAAkO,IAAA,GACA,GAAAlO,KAAAmN,MAGA,YAFAnN,KAAAoe,MAAAK,GAIAze,KAAAkO,IAAA,EAEAuQ,GACAA,GAAA,EAAA1e,EAAA0C,KAAA4B,MAAAtE,EAAAmO,IAAAnO,EAAAmO,IAAAnO,EAAA8M,SAYA+Q,EAAArhB,UAAAiiB,OAAA,SAAA3b,EAAAlF,GACA,IAAAqgB,EAAA,GACAje,EAAAC,KACAuP,EAAA,IAAA0O,KAEA,OAAAje,KAAAgL,MAAArN,EAUAqC,KAAA8N,SAAA,EACA9N,KAAAkO,IAAA,EACAlO,KAAAgL,KAAA,EACAhL,KAAAF,OAAA4a,OAAA,EACA1a,KAAAF,OAAA+Q,MAAA7Q,KAAA4a,UACA5a,KAAA7E,OAAA,SAAAgP,EAAA1H,EAAAuL,GACA7D,IACApK,EAAAiO,WACAjO,EAAA0C,OACA1C,EAAA2d,UAAA3d,EAAA0C,KAAA,KAAA1C,EAAA2d,UACA3d,EAAA0C,KAAAyb,QAAAne,EAAA2d,UAEA3d,EAAA0d,KAAA1d,EAAA0C,KAAAZ,OACAmc,EAAAje,EAAA0C,KAAA4B,MAAAtE,EAAAmO,IAAAnO,EAAAmO,IAAAnO,EAAA8M,MACA9M,EAAA+d,cAAA,GAEA/d,EAAAge,YAAAxO,EAAA4O,UACApe,EAAA+N,SAAA,EACAjL,EAAAsH,EAAA6T,EAAA,IACShe,KAAAF,YA7BT,CAEA,GADAE,KAAAkO,IAAA,EACAlO,KAAA+X,WAAAxI,EAAA4O,UAAAne,KAAA+d,YAAA/d,KAAA+X,UAGA,YAFA/X,KAAAse,YAAAzb,GAIAmb,EAAAhe,KAAAyC,KAAA4B,MAAArE,KAAAkO,IAAAlO,KAAAkO,IAAAlO,KAAA6M,MACAhK,GAAA,EAAAmb,EAAA,KAgCAJ,EAAArhB,UAAA6hB,MAAA,SAAAvb,EAAAlF,GACA,IAEAuQ,EAFA8P,EAAA,GACAje,EAAAC,KAEAuP,EAAA,IAAA0O,KAEA,GAAAje,KAAAgO,SACA,GAAAhO,KAAAyd,OAAAzd,KAAAgO,UAAArQ,EAsBAqC,KAAA8N,SAAA,EACA9N,KAAAgL,KAAAhL,KAAAgO,SAAA,EAAAhO,KAAA4a,UACA5a,KAAAgL,KAAA,IACAhL,KAAAgL,KAAA,GAEAhL,KAAAF,OAAA4a,OAAA1a,KAAAgL,KACAhL,KAAAF,OAAA+Q,MAAA,EAAA7Q,KAAA4a,UACA5a,KAAA7E,OAAA,SAAAgP,EAAA1H,EAAAuL,GACA7D,IACApK,EAAAiO,WACAjO,EAAA0C,OACA1C,EAAAmO,IAAAnO,EAAA0C,KAAAZ,OAAA9B,EAAA8M,KACA9M,EAAA0d,KAAA1d,EAAAiL,KAAAvI,EAAAZ,OACA9B,EAAAmO,IAAA,IACAnO,EAAAmO,IAAA,GAEA8P,EAAAje,EAAA0C,KAAA4B,MAAAtE,EAAAmO,IAAAnO,EAAAmO,IAAAnO,EAAA8M,OACAqB,EAAA8P,EAAAnc,OAAA,GACA,IACAqM,EAAA,GAEAnO,EAAA+d,cAAA,GAEA/d,EAAA+N,SAAA,EACA/N,EAAAge,YAAAxO,EAAA4O,UACAtb,EAAAsH,EAAA6T,EAAA9P,IACalO,KAAAF,YAhDb,CACA,GAAAE,KAAA+X,WAAAxI,EAAA4O,UAAAne,KAAA+d,YAAA/d,KAAA+X,UAOA,YANA/X,KAAAse,YAAA,SAAAnU,GACAA,GACApK,EAAAqe,MAAAvb,KAMA9C,EAAAmO,IAAAnO,EAAA0C,KAAAZ,OAAA9B,EAAA8M,KACA9M,EAAAmO,IAAA,IACAnO,EAAAmO,IAAA,GAEA8P,EAAAje,EAAA0C,KAAA4B,MAAAtE,EAAAmO,IAAAnO,EAAAmO,IAAAnO,EAAA8M,OACAqB,EAAA8P,EAAAnc,OAAA,GACA,IACAqM,EAAA,GAEAnO,EAAA+d,cAAA,EACAjb,GAAA,EAAAmb,EAAA9P,QA+BArL,GAAA,IAUA+a,EAAArhB,UAAA+hB,YAAA,SAAAzb,GACA,IAAA9C,EAAAC,KACAge,EAAA,GACAzO,EAAA,IAAA0O,KAEAje,KAAAkO,IAAA,IACAlO,KAAAkO,IAAA,GAGAlO,KAAAF,OAAA4a,OAAA1a,KAAAgL,KACAhL,KAAAF,OAAA+Q,MAAA7Q,KAAAyd,KAAAzd,KAAAgL,KACAhL,KAAAF,OAAA+Q,OAAA,IACA7Q,KAAAF,OAAA+Q,MAAA,IAAA7Q,KAAAF,OAAA4a,OAAA1a,KAAA4a,UAAA,EAAA5a,KAAA4a,WAGA5a,KAAA8N,SAAA,EACA9N,KAAA7E,OAAA,SAAAgP,EAAA1H,EAAAuL,GAKA,GAJAjO,EAAA2d,WAAA3d,EAAAD,OAAA4a,SACAjY,EAAAyb,QAAAne,EAAA2d,UACAxN,EAAA,GAEA/F,EACAtH,EAAAsH,EAAA1H,OACS,CAKT,GAJA1C,EAAAge,YAAAxO,EAAA4O,UACApe,EAAAiO,WACAjO,EAAA0C,OACA1C,EAAA0d,KAAA1d,EAAAiL,KAAAvI,EAAAZ,OACA9B,EAAAiO,UAAAjO,EAAAiL,MAAAjL,EAAAiO,SAGA,YAFAjO,EAAAqe,MAAAvb,GAAA,GAIAJ,EAAAZ,OAAA9B,EAAAD,OAAA+Q,QACA9Q,EAAA+d,cAAA,GAEA/d,EAAAmO,IAAAnO,EAAA8M,KAAA9M,EAAA0C,KAAAZ,QACAmc,EAAAje,EAAA0C,KAAA4B,MAAAtE,EAAAmO,IAAAnO,EAAAmO,IAAAnO,EAAA8M,MACAhK,EAAAsH,EAAA6T,GACAje,EAAAse,aAEAte,EAAAse,UAAAxb,GAGA9C,EAAA+N,SAAA,GACK9N,KAAAF,SAMLpF,EAAAD,QAAAmjB,gCCngBAljB,EAAAD,QAAiBF,EAAQ,IAGzBG,EAAAD,QAAA8B,UAAArB,KAAA,oDCFA,IAAA2E,EAAgBtF,EAAQ,GAWxB,SAAAsN,EAAA/H,IAEAA,KAAA,IAgBAM,MAAAI,SAAAC,cAAA,OACAX,EAAAM,MAAAM,UAAA,OAGAb,EAAA/E,KAAAkF,KAAAF,GAGAE,KAAAG,MAAA6B,YAAAxB,SAAAC,cAAA,OAAAuB,YAAAhC,KAAAI,OAAA2B,YAKA8F,EAAAtL,UAAAlB,OAAAY,OAAA4D,EAAAtD,WACAsL,EAAAtL,UAAAkF,YAAAoG,EAGAA,EAAAtL,UAAArB,KAAA,sBAIAR,EAAAD,QAAAoN,gCCjDA,IAAAxB,EAAW9L,EAAQ,IACnBokB,EAAepkB,EAAQ,IACvBqF,EAAA,EAWA,SAAAkX,EAAAhX,GACA,IAAAC,EAAAC,KAOAA,KAAA4e,MAAA,SAAAhf,IAOAI,KAAA6a,aAAA,KAIAxU,EAAAvL,KAAAkF,KAAAF,GAEAE,KAAAkB,YAAA,sBAAAG,GACA,IAAAY,EAAAZ,EAAAqF,MAEAzE,EAAA4c,SAAA/gB,KAAA,GACAmE,EAAAgN,MAAAhN,EAAA4c,SAAAjjB,MACAqG,EAAAQ,KAAAwM,MAAAhN,EAAA4c,SAAAjjB,MAEAmE,EAAA8a,eAAA5Y,EAAAQ,OAUA1C,EAAAwB,KAAA,UACAud,MAAA/e,EAAA8a,aACA9L,MAAA9M,IAEAlC,EAAA8a,eAAsC9a,EAAA8a,aAAA5L,OAAA,GACtClP,EAAA8a,aAAA5Y,EAAAQ,QAMAqU,EAAAva,UAAAlB,OAAAY,OAAAoK,EAAA9J,WACAua,EAAAva,UAAAkF,YAAAqV,EAGAA,EAAAva,UAAArB,KAAA,2BAEA4b,EAAAva,UAAAqiB,MAAA,EAYA9H,EAAAva,UAAAsK,kBAAA,SAAAH,EAAAjE,GACA,IAAAsc,EAAAve,SAAAC,cAAA,SACAue,EAAAxe,SAAAC,cAAA,MACAwe,EAAAze,SAAAC,cAAA,MACA0b,EAAA,IAAAwC,EAAA,CACAC,MAAA5e,KAAA4e,QAGAlY,EAAAe,UAAA,GAGAhF,EAAAwM,QACAkN,EAAAre,KAAA,GAEAkC,KAAA6a,aAAApY,GAGAsc,EAAA/c,YAAAgd,GAEAC,EAAAjd,YAAAma,EAAAhc,OACA8e,EAAAve,UAAA,kBACAse,EAAAhd,YAAAid,IAEAA,EAAAze,SAAAC,cAAA,OACAC,UAAA,QACAue,EAAA7X,UAAA3E,EAAA0F,OAAA,GACA6W,EAAAhd,YAAAid,GAEAvY,EAAAmY,SAAA1C,EAEAzV,EAAAuI,MAAAkN,EAAAvgB,MACA8K,EAAA9K,MAAA6G,EAAA7G,MAGA8K,EAAA1E,YAAA+c,IAiBAjI,EAAAva,UAAAoL,WAAAmP,EAAAva,UAAAsK,kBAGAnM,EAAAD,QAAAqc,gCCtIA,IAAAjX,EAAgBtF,EAAQ,GACxBoC,EAAgBpC,EAAQ,IAExB2kB,EAAA,GAoBA,SAAAP,EAAA7e,GAEAA,KAAA,GAqBAE,KAAApE,QAAAkE,EAAAlE,MAGAoE,KAAApE,QACAkE,EAAAY,WAAA,YAIAV,KAAA4e,MAAA,KAGA9e,EAAA8e,QAEA9e,EAAAY,WAAA,WAGAV,KAAA4e,MAAA9e,EAAA8e,WAGAza,IAAA+a,EAAApf,EAAA8e,OACAM,EAAApf,EAAA8e,OAAA,CAAA5e,MAEAkf,EAAApf,EAAA8e,OAAA9c,KAAA9B,OAKAH,EAAA/E,KAAAkF,KAAAF,GAKA6e,EAAApiB,UAAAlB,OAAAY,OAAA4D,EAAAtD,WACAoiB,EAAApiB,UAAAkF,YAAAkd,EAGAA,EAAApiB,UAAArB,KAAA,yBAQAyjB,EAAApiB,UAAAuE,cAAA,CAIAuG,MAAA,WAEArH,KAAAlC,KAAAkC,KAAApE,QAQAoM,QAAA,SAAA3G,GAEAA,EAAAoE,OAAA9I,EAAAO,OACA8C,KAAAlC,KAAAkC,KAAApE,SAeA+iB,EAAApiB,UAAAuB,IAAA,SAAAlC,GACA,IAAA+F,EAAAE,EAQA,GAAA7B,KAAApE,UAAA,CAEA,IAAAoE,KAAApE,OAAA,OAAAoE,KAAA4e,MAEA,IAAAjd,EAAA,EAAAE,EAAAqd,EAAAlf,KAAA4e,OAAA/c,OAAgEF,EAAAE,EAAgBF,IAChFud,EAAAlf,KAAA4e,OAAAjd,GAAA7D,KAAA,GAuBA,OAlBAkC,KAAApE,OAAAoE,KAAApE,MAGAoE,KAAAG,MAAAwC,UAAA4P,OAAA,WAGAvS,KAAAe,OAAA,WASAf,KAAAuB,KAAA,UAAiC3F,MAAAoE,KAAApE,SAGjC,EAIA,UAKAlB,EAAAD,QAAAkkB,gCCxKA,IAAA9e,EAAgBtF,EAAQ,GA8BxB,SAAA4kB,EAAArf,GAEAA,KAAA,GAoBAE,KAAAiO,SAAA,GAOAjO,KAAA+N,SAAA,IAOA/N,KAAApE,MAAA,EAOAoE,KAAA4I,KAAA5I,KAAAkN,cAOAlN,KAAAof,UAAA,KAOApf,KAAAqf,UAAA,KAGAvf,EAAAI,UAAAJ,EAAAI,YAAA,EAMAJ,EAAA8I,OAEA5I,KAAA4I,KAAA9I,EAAA8I,MAGA5I,KAAA4I,OAAA5I,KAAAsN,kBACAxN,EAAAY,WAAA,eAIAb,EAAA/E,KAAAkF,KAAAF,GAGAE,KAAAsf,OAAAtf,KAAAI,MAAA4B,YAAAxB,SAAAC,cAAA,QAGAT,KAAAsf,OAAA5e,UAAA,QAGAV,KAAAwF,KAAA1F,GAKAqf,EAAA5iB,UAAAlB,OAAAY,OAAA4D,EAAAtD,WACA4iB,EAAA5iB,UAAAkF,YAAA0d,EAGAA,EAAA5iB,UAAArB,KAAA,0BAEAikB,EAAA5iB,UAAA2Q,cAAA,EACAiS,EAAA5iB,UAAA+Q,gBAAA,EAQA6R,EAAA5iB,UAAAiJ,KAAA,SAAA1F,QAaAqE,KAZArE,KAAA,IAYAiO,WAQA/N,KAAA+N,SAAAjO,EAAAiO,eAIA5J,IAAArE,EAAAmO,WAWAjO,KAAAiO,SAAAnO,EAAAmO,UAIAjO,KAAAiO,UAAAjO,KAAA+N,SACA/N,KAAAsf,OAAA3c,UAAA/B,IAAA,UAEAZ,KAAAsf,OAAA3c,UAAAT,OAAA,eAIAiC,IAAArE,EAAAlE,OAEAoE,KAAAyO,SAAA3O,EAAAlE,OAIAoE,KAAA4I,OAAA5I,KAAAkN,cACAlN,KAAAsf,OAAAjT,MAAAtB,OAAA/K,KAAAiO,SAAAjO,KAAA+N,SAAA,QAEA/N,KAAAsf,OAAAjT,MAAAhD,MAAArJ,KAAAiO,SAAAjO,KAAA+N,SAAA,QAIA/N,KAAAof,UAAApf,KAAAsf,OAAAC,wBACAvf,KAAAqf,UAAArf,KAAAG,MAAAof,yBAcAJ,EAAA5iB,UAAAkS,SAAA,SAAA7S,GAiBA,OAAAoE,KAAApE,YAEA,IAAAoE,KAAAof,UAAArU,QAAA,IAAA/K,KAAAof,UAAA/V,QAEArJ,KAAAqf,UAAArf,KAAAG,MAAAof,wBACAvf,KAAAof,UAAApf,KAAAsf,OAAAC,yBAIAvf,KAAA4I,OAAA5I,KAAAkN,cACAlN,KAAAsf,OAAAjT,MAAAmT,WAAAxf,KAAAqf,UAAAtU,OAAA/K,KAAAof,UAAArU,QAAAnP,GAAAoE,KAAA+N,SAAA/N,KAAAiO,UAAA,KAEAjO,KAAAsf,OAAAjT,MAAAoT,YAAAzf,KAAAqf,UAAAhW,MAAArJ,KAAAof,UAAA/V,OAAAzN,GAAAoE,KAAA+N,SAAA/N,KAAAiO,UAAA,KAIAjO,KAAAe,OAAA,WAUAf,KAAAuB,KAAA,UAAiCme,KAAA9jB,EAAAoe,KAAAha,KAAApE,QAIjCA,GAAAoE,KAAA+N,WACAnS,EAAAoE,KAAA+N,SAGA/N,KAAAe,OAAA,SAMAf,KAAAuB,KAAA,SAKAvB,KAAApE,SAEA,IASAlB,EAAAD,QAAA0kB,gCC3RA,IAAAlhB,EAAY1D,EAAQ,GACpB4C,EAAA,CAMAigB,OAAA,WACA7M,KAAAzV,KAAA,SAUAyhB,OAAA,SAAA1Z,GACA,IAIA8c,EAJA9I,EAAwBtc,EAAQ,GAChC+L,EAAwB/L,EAAQ,GAChCoC,EAAwBpC,EAAQ,GAChCqlB,EAAA3hB,EAAAkE,WAAAC,gBAGAnE,EAAAkE,WAAAvB,IAAA+e,EAAA,IAAA9I,EAAA,CACA1O,MAAAmM,QAAA,QACAvT,OAAA,CACA6B,KAAA,WACA5C,KAAAM,SAAA,GAAAgB,SAEAT,KAAA,WACA+e,EAAAte,UAGAhB,SAAA,CACA,IAAAgG,EAAA,CACA5F,UAAA,SACAmM,KAAA,EACAvH,WAAA,EACA7C,KAAA,CACA,CACAyE,MAAA,CACA,CACAtL,MAAA0Y,QAAA,SAGAjN,MAAA,WACA,sBAAAxE,GACAA,GAAA,GAIA,OAHA8c,EAAA9e,YACA8e,EAAAzd,SAMAyd,EAAA9e,OACA8e,EAAAzd,SAEAjE,EAAAd,SAGA,CACA+J,MAAA,CACA,CACAtL,MAAA0Y,QAAA,QAGAjN,MAAA,WACA,mBAAAxE,GACAA,GAAA,GAEA8c,EAAA9e,OACA8e,EAAAzd,SACAjE,EAAA4hB,aAAAve,WAIAP,OAAA,CACAiH,QAAA,SAAA3G,GACAiF,EAAA/J,UAAAuE,cAAAkH,QAAAlN,KAAAkF,KAAAqB,GACAA,EAAAoE,OAAA9I,EAAAC,OACAyE,EAAAzC,MAAA,EACA,mBAAAiE,GACAA,GAAA,GAEA8c,EAAA9e,OACA8e,EAAAzd,SACAjE,EAAA4hB,aAAAve,iBAQAqe,EAAA/c,OACA+c,EAAAre,UAIA5G,EAAAD,QAAA0C,gCCtGAzC,EAAAD,QAAA,SAAAgI,GACA,IACAqd,EAAAC,EACArf,EAFAuc,EAAA,GA+DA,OA3DAxa,KAAA,IAEAzB,QAAA,SAAAiB,GACA,IAAA8Y,EAAA9Y,EAAA8Y,OAAAiF,IAAA,SAAAC,GACA,OAAAA,EAAA/kB,OAGAglB,EAAA1f,SAAAC,cAAA,OACAgb,EAAAjb,SAAAC,cAAA,OACAyH,EAAA1H,SAAAC,cAAA,OAUA,OARAgb,EAAA/a,UAAA,OACAwH,EAAAxH,UAAA,+BAAAqa,EAAAlZ,OAAA,eACA4Z,EAAArU,UAAA0Y,EAAA7d,EAAA/G,MAAA+G,EAAA,iBACAiG,EAAAd,UAAA2Y,EAAAhF,EAAAlJ,KAAA,MAEAqO,EAAAle,YAAAyZ,GACAyE,EAAAle,YAAAkG,GAEAjG,EAAA,mBACA,cACAvB,EAAA,2BACA,MACA,kBACAA,EAAA,kCACA,MACA,gBACAA,EAAA,oCAIAuc,EAAAnb,KAAA,CACAoF,MAAA,CACA,CACAhM,KAAA,SACAwF,UAAA,QACA9E,MAAAskB,EACAC,cAAA,EACAC,UAAA,CAAgCjY,MAAA2X,EAAAG,MAAAF,IAEhC,CACA7kB,KAAA,QACAwF,UAAAuB,EAAAyV,UAAAzV,EAAA0V,UAAA1V,EAAA0V,SAAAD,SACA,oFAEA,CACAxc,KAAA,YACAwF,UAAAuB,EAAA2O,SACA,sGAEA,CACA1V,KAAA,UACAwF,cAGA9E,MAAAqG,MAIAgb,iCCvEA,IAaAoD,EAbA/b,EAAiB/J,EAAQ,GACzBwc,EAAiBxc,EAAQ,IACzBqV,EAAiBrV,EAAQ,IAEzB6c,EAAA,GAEA7S,EAAAD,EAAAC,IAEA+b,EAAA/b,EAAA,OAAiC7D,UAAA,oCACjC6f,EAAAhc,EAAA,OAA0B7D,UAAA,gBAC1B8f,EAAAjc,EAAA,OAA0B7D,UAAA,gBAC1B+f,EAAAlc,EAAA,OAA4B7D,UAAA,kBAC5BggB,EAAAnc,EAAA,OAA0B7D,UAAA,gBAI1B2f,EAAA9b,EACA,MACA,GACAgc,EACAhc,EAAA,OAAgB7D,UAAA,kCAA4C4T,QAAA,YAC5DkM,EACAjc,EAAA,OAAgB7D,UAAA,kCAA4C4T,QAAA,cAC5DmM,EACAlc,EAAA,OAAgB7D,UAAA,kCAA4C4T,QAAA,YAC5DoM,GAGAtJ,EAAAU,SAAA,IAAAlI,EAAA,CACArP,WAAA,EACAsP,KAAA,EACAzC,OAAA,IAAA2J,EAAA,MAGAK,EAAAU,SAAA1X,MAAA4B,YAAAqe,GACAjJ,EAAAU,SAAA1X,MAAA4B,YAAAse,GAEAlJ,EAAAjS,MAAA,WACAob,EAAAlU,MAAAsU,gBAAA,GACAN,EAAAhU,MAAAuU,QAAA,OACAF,EAAAtZ,UAAA,GACAoZ,EAAApZ,UAAA,GACAqZ,EAAArZ,UAAA,GACApH,KAAA8X,SAAAtS,QAGA4R,EAAAuF,SAAA,WACA0D,EAAAhU,MAAAuU,QAAA,QACAN,EAAAjU,MAAAuU,QAAA,OACA5gB,KAAA8X,SAAAtS,QAGA4R,EAAAsF,SAAA,WACA2D,EAAAhU,MAAAuU,QAAA,OACAN,EAAAjU,MAAAuU,QAAA,QACA5gB,KAAA8X,SAAAtS,QAGA4R,EAAAwF,KAAA,SAAAhhB,GACAA,EAAAilB,MACAN,EAAAlU,MAAAsU,gBAAA,OAAApQ,KAAAuQ,QAAAC,KAAAnlB,EAAAilB,MAAA,IAEAN,EAAAlU,MAAAsU,gBAAA,GAEAH,EAAApZ,UAAAxL,EAAA,gBAAAA,EAAA,oBAEA8kB,EAAAtZ,UAAAxL,EAAAolB,OACAP,EAAArZ,UAAAxL,EAAAqlB,SACA7J,EAAAU,SAAAtS,QAIA9K,EAAAD,QAAA2c,gCCvEA,IAAA/R,EAAa9K,EAAQ,GASrBG,EAAAD,QAAA,SAAAiM,EAAA5G,GACA,IAAA6G,EAAAG,EACAC,EAAAC,EAAArF,EAEA,GAAA+E,EAAAO,MACA,IAAAtF,EAAA,EAAwBA,EAAA7B,EAAAoH,MAAArF,OAA6BF,IAGrD,iBAFAqF,EAAAlH,EAAAoH,MAAAvF,IAEA/F,YAAAuI,IAAA6C,EAAApL,QACAmL,EAAAL,EAAAC,OAAAxG,MAAAgH,WAAAxF,IACAyF,UAAAJ,EAAApL,OAAA,GACAmL,EAAArG,UAAAsG,EAAAtG,WAAA,IACasG,EAAAmZ,eACbpZ,EAAAL,EAAAC,OAAAxG,MAAAgH,WAAAxF,GACA+E,EAAAwa,SAAAzF,OAAArU,UAAAJ,EAAAoZ,UAAAjY,MACAzB,EAAAwa,SAAAC,OAAA/Z,UAAAJ,EAAAoZ,UAAAH,OAAA,QAGK,CAEL,KAAAvZ,EAAAR,YACAQ,EAAAlE,YAAAkE,EAAAR,YAGAY,EAAA,CACA5G,WAAA,EACAuC,KAAA3C,EAAAoH,OAGApH,EAAAY,YACAoG,EAAApG,UAAAZ,EAAAY,WAGAiG,EAAA,IAAAtB,EAAAyB,GAGAJ,EAAAwa,SAAA,CACAzF,OAAA3b,EAAAoH,MAAA,GAAAtL,MAAAsK,WACAib,OAAArhB,EAAAoH,MAAA,GAAAtL,MAAAsK,WAAA2I,aAGAnI,EAAA1E,YAAA2E,EAAAxG,OACAuG,EAAAC,SACAA,EAAAtG,OAAAL,KACA2G,EAAAf,YAAAc,EAGAC,EAAAzF,YAAA,QAIA,WAEAlB,KAAAK,OAAAkB,KAAA,cAAgDmF,QAAAE,OAAA,MAGhD9G,EAAAuH,QACArH,KAAAuG,SAAAG,EAAA/E,OAAA7B,EAAAuH,OAIAX,EAAAO,OAAA,EAGAP,EAAA9K,MAAAkE,EAAAlE,OAAA,kCCtEA,IAsBAkc,EAAA9B,EAeAS,EAAAzD,EAAAqE,EAAAnM,EACAyK,EAAAyB,EAAAE,EACA8J,EAAAC,EACAd,EAAAe,EAAAC,EAAAjJ,EACAlL,EAAAoU,EAAAC,EACAC,EACAC,EAAArD,EAAAsD,EACAC,EAAAC,EACAC,EAAA1F,EA7CAsB,EAAqBpjB,EAAQ,IAC7B0D,EAAqB1D,EAAQ,GAE7B+J,EAAqB/J,EAAQ,GAC7BoC,EAAqBpC,EAAQ,GAE7BiS,EAAqBjS,EAAQ,IAC7BqS,EAAqBrS,EAAQ,IAC7BynB,EAAqBznB,EAAQ,IAE7Bsc,EAAqBtc,EAAQ,GAC7B+L,EAAqB/L,EAAQ,GAC7BqV,EAAqBrV,EAAQ,IAC7Bwc,EAAqBxc,EAAQ,IAE7B0nB,EAAqB1nB,EAAQ,IAC7B2nB,EAAqB3nB,EAAQ,IAC7Byc,EAAqBzc,EAAQ,IAC7B4c,EAAqB5c,EAAQ,IAE7B+I,EAAA,IAAAqa,EAAA,CAAqBxd,MAAAK,SAAAmW,eAAA,cAIrBwL,EAAA,IAAApL,EAAA,IACAqL,EAAA,CACA5e,OAAA,EACA2L,KAAA,EACAgK,OAAA,EACAJ,OAAA,GAEAsJ,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,KACAje,EAAAD,EAAAC,IAsBA,SAAAke,IACA,IAAAxgB,EAEA,IAAAqgB,EAAAzgB,QAMAI,EAAAqgB,EAAAI,MACAN,EAAA5e,OAAAvB,EAAA2G,KACA8Y,EAAApa,QAAA,CAAsBhC,WAAArD,EAAAX,MAAAmB,KAAAR,EAAAQ,OACtB+e,EAAAvf,EAAAkG,MACAiP,EAAAjP,MAAA5C,MAAAod,MAAAvb,UAAAoa,GATAvjB,EAAAmF,MAAAnF,EAAA8S,MAAApE,MAmBA,SAAA6L,EAAA/V,EAAA3C,GACA,IAWAmC,EAXAgV,EAAqB1c,EAAQ,IAE7BmI,EAAAD,GAAAif,EAAA1U,WAAApR,MACAV,EAAAsnB,EAAAtnB,KACA4N,EAAA,GACA8Z,GAAA,EACAC,GAAA,EACAC,EAAA,KACAnK,EAAA,KAOA,SAAAG,IACA,IAAA3J,GAEAA,EAAA8H,EAAAyK,EAAAjf,KAAA4B,MAAA,GAAAyE,EAAAhJ,EAAA+Y,OAAApW,KAAA0M,QAGAuS,EAAApc,WAAA6J,EAAAxN,OACA6W,EAAArJ,EAAAvT,MAAAkE,KAEAA,EAAA8Y,cAAA,KACA9Y,EAAA+Y,OAAAiB,SAIA,SAAAiJ,EAAAtd,GACA,IAAAud,GAAA,EAOA,OALAla,EAAAhJ,EAAA8Y,cAAAqB,SAAAC,UACAjc,EAAA8S,MAAApE,KAAAkN,UAAA,WACAyE,GAAA,IACSxe,GAAA,GAETsiB,EAAA5e,QACA,KAAA4e,EAAAjT,KACAsT,IACAO,GAAA,EAEA,KAAAZ,EAAArJ,OACA2I,EAAAlU,KAAA/H,GACAud,IACAxB,EAAAc,IAAAzgB,OAAA,GAAAsG,OAEA0Z,EAAA/I,IAMA,SAAAmK,IACAhlB,EAAA8S,MAAApE,KAAAkN,UAAAyE,EAAAxe,GACAA,EAAA8Y,cAAA,KACA9Y,EAAA+Y,OAAAiB,QAGA,GA9CAha,KAAA,GA8CA0iB,EAAA,iBACA,OAAAJ,EAAA5e,QACA,KAAA4e,EAAAjT,KAEAyT,GADA3gB,EAAAqgB,IAAAzgB,OAAA,IACAP,MAAA,EAAAW,EAAAQ,KAAAZ,OACAghB,EAAA5gB,EAAAX,MAAA,EACA,MACA,KAAA8gB,EAAArJ,OACA6J,EAAAlB,EAAA1U,WAAArL,MAAA,EAAA+f,EAAAjf,KAAAZ,OACAghB,EAAAnB,EAAA1U,WAAArL,MAAA,EAIAihB,IACAjK,EAAA,WACAoK,EAAApmB,EAAAkN,QAGAgZ,IACAC,EAAA,WACAC,EAAApmB,EAAAiN,MAiBA,SAAAlL,EAAAyL,EAAAzB,GACA,IAAAyB,EAAA,CAmEA,GA/DAqY,EAAA,iBAAAF,EAAAzgB,SACA3G,GAAA,IAAAumB,EAAA,IAAAD,GA8DA9e,EAAAuZ,cAAA,cAAAvZ,EAAAuY,iBAAAnb,EAAA8Y,cAQA,OAPAjD,EAAAtT,OACAsf,EAAA/e,KAAA,CAA4BuM,KAAAzM,EAAAiX,MAAA6I,EAAA3f,SAAAqgB,EAAAhoB,cAE5B4E,EAAA+Y,QACA/Y,EAAA+Y,OAAAiB,SAMAoJ,EAAA,GArEA,SAAAA,EAAAhK,GACA,IAAAC,EAAA4C,EAEAyG,EAAA,iBAAAF,EAAAzgB,SAEAka,GADAA,EAAAuG,IAAAzgB,OAAA,IACAY,KAAAsZ,EAAAza,OAEA6X,GADAA,EAAAmJ,EAAA,IACA7f,KAAA0W,EAAA7X,QAGAxB,EAAA+Y,OAAAtI,KAAAsI,OAAA,CACA/M,OAAA,OACA4N,KAAA,gBACAjX,KAAA,CACA0F,MAAAjN,EACAwN,MACAiR,MAAA6I,EACArT,KAAAzM,EACAyW,SACA4C,UACA7C,WACA5P,UAAA5G,EAAA8F,aACAoR,QAAAlX,EAAA/B,IAEAI,OAAA,CACA2I,IAAA,WACAzL,EAAA8S,MAAApE,KAAAkN,UAAAyE,EAAAxe,GAAA,GAEA6Y,EACAA,KAIA7Y,EAAA8Y,cAAA,KACA9Y,EAAA+Y,OAAAiB,UAEA3P,MAAA8Y,EACArkB,KAAAqkB,EACApiB,KAAAoiB,EACAlJ,KAAApB,EACAqB,KAAA8I,EACAhJ,MAAA,WACAha,EAAA8Y,gBACA3a,EAAA8S,MAAApE,KAAAkN,UAAAyE,EAAAxe,GACAA,EAAA8Y,cAAA,QAIArD,QAAAzV,EAAA8Y,eACa,SAAAzO,EAAAoL,GAEbzV,EAAA8Y,cAAArD,KAzEAwM,EAAA,CACAtf,KAAAif,EAAAjf,KACAnB,MAAAogB,EAAA1U,WAAArL,MACAiH,KAAAwZ,EAAA5e,QA2FAd,EAAAqG,IACArK,GAAA,EAAAgE,EAAAqG,KAEAyZ,EAAA7Z,OAAAjG,EAAA/B,GAAAjC,GAQA,SAAAkS,KAOA4R,EAAA5R,SACA0H,EAAAjM,MAAAuU,QAAA,OAMAtI,EAAAjM,MAAAuU,QAAA,QAOA3iB,EAAAsD,KAAA,mBACA+G,MAAAka,EACA3f,SAAA,SAAAsH,GACAA,IACAqY,EAAA5R,SACA0H,EAAAjM,MAAAuU,QAAA,QAMAtI,EAAAjM,MAAAuU,QAAA,WA7PA1V,EAAa3Q,EAAQ,IACrB8c,EAAA,IAAAnM,EAAA,CAAyBjL,SAAA,EAAAI,OAAAiD,IA2XzBue,EAAA,SAAAhf,GACA,IAAAH,EAAAgf,EAAA1U,WAAApR,MACA2M,EAAA,GAKA,OAAA6Z,EAAA5e,QACA,KAAA4e,EAAAjT,KACAqJ,IACA,MAEA,KAAA4J,EAAAjJ,OACAmJ,EAAAxgB,KAAA,CACA8G,KAAAwZ,EAAAjJ,OACA1W,KAAAif,EAAAjf,KACA0F,MAAAqZ,EACAlgB,MAAAogB,EAAA1U,WAAArL,QAEA6f,EAAAE,EAAA1U,WAAAvK,KAAAyE,MAAA,GAAAtL,MACA6lB,EAAAD,EACApK,EAAAjP,MAAA5C,MAAAod,MAAAvb,UAAAqa,EACAY,EAAA7I,SAAA9W,EAAA/B,GACA6hB,EAAApI,UAAA1X,EAAA/B,GAAA,SAAAwJ,EAAA1H,IACA8F,EAAA4B,EAAA,GAAA8X,EAAAxf,GAAA,IACAyb,QAAA,CACAhX,MAAA,CACA,CACAxG,UAAA,8BAEA,CACAA,UAAA,QACA9E,MAAA,QAIAA,MAAA,OAEAwmB,EAAA5e,OAAA4e,EAAArJ,OACA2I,EAAApa,QAAA,CAAkChC,WAAA,EAAA7C,KAAA8F,IAClC1F,GACAA,MAGA,MAEA,KAAAuf,EAAArJ,OACAuJ,EAAAxgB,KAAA,CACA8G,KAAAwZ,EAAArJ,OACAtW,KAAAif,EAAAjf,KACA0F,MAAAsZ,EACAngB,MAAAogB,EAAA1U,WAAArL,QAEA0gB,EAAA5I,UAAA/W,EAAA/B,GACA6gB,EAAAE,EAAA1U,WAAAvK,KAAAyE,MAAA,GAAAtL,MACA4mB,EAAAjJ,WAAA8I,EAAA,SAAAlY,EAAA1H,GAGA,QAFA8F,EAAA4B,EAAA,GAAA+X,EAAAM,EAAA/f,EAAA6W,QAEAzX,SAAAgB,EAIA,OAHA2V,EAAAjQ,EAAA,GAAA3M,YACA0mB,EAAAI,MAKAtL,EAAAjP,MAAA5C,MAAAod,MAAAvb,UAAAoa,EACAjZ,EAAA2V,QAAA,CACAhX,MAAA,CACA,CACAxG,UAAA,8BAEA,CACAA,UAAA,QACA9E,MAAA,QAIAA,MAAA,OAEAwmB,EAAA5e,OAAA4e,EAAAjT,KACAuS,EAAApa,QAAA,CAAkChC,WAAA,EAAA7C,KAAA8F,IAClC1F,GACAA,QAQAyb,EAAA,SAAA6E,GACA,IAAAlhB,EAEA,OAAAmgB,EAAA5e,QACA,KAAA4e,EAAAjT,KACA,GAAA4S,EAAAnZ,OAAAwZ,EAAA5e,QAAAue,EAAAtf,OAAAif,EAAAjf,MAAA0gB,EACA,OAIA,QADAlhB,EAAA8f,EAAAtf,KAAAsf,EAAAzgB,QACA1F,MAAAqf,gBACA,cACAhZ,EAAAiF,MAAA,GAAAxG,UAAA,2BACA,MACA,kBACAuB,EAAAiF,MAAA,GAAAxG,UAAA,kCACA,MACA,gBACAuB,EAAAiF,MAAA,GAAAxG,UAAA,qCAIAqhB,EAAA,KACAH,KAIAA,EAAA,WACAF,EAAAjf,KAAAZ,QAAA6f,EAAA1U,YACA0U,EAAApa,QAAA,CAA0B7E,KAAAif,EAAAjf,KAAA6C,WAAAoc,EAAA1U,WAAArL,SAK1Byf,EAAA,IAAAY,EAAA,CACAzhB,WAAA,EACAL,WAAA,EACAa,OAAA,CACAO,MAAA,WACAwW,EAAAxW,SAEA0G,QAAA,SAAA3G,GACA,IAEA8N,EAAAmK,EAAAT,EAAAD,EAAAjX,EAFAzG,EAAAsnB,EAAAtnB,KACAsN,EAAA,GAIA,SAAA9J,EAAAyL,EAAApB,GAEA,SAAAka,IACAhlB,EAAA8S,MAAApE,KAAAkN,UAAA,MAAoDhB,SAAAD,kBACpDA,EAAA,KACAC,EAAAiB,QAGA,SAAAoJ,EAAAhK,GACAL,EAAAtI,KAAAsI,OAAA,CACA/M,OAAA,OACA4N,KAAA,gBACAjX,KAAA,CACA0F,MAAAjN,EACAwN,IAAAK,EACA4Q,MAAA6I,EACArT,OACA+J,WACAkK,kBAAA5a,EACAoR,QAAAzK,EAAAxO,IAEAI,OAAA,CACA2I,IAAA,WACAzL,EAAA8S,MAAApE,KAAAkN,UAAA,MAAgEhB,SAAAD,kBAA6C,GAC7GA,EAAA,KACAC,EAAAiB,SAEA3P,MAAA8Y,EACArkB,KAAAqkB,EACApiB,KAAAoiB,EACAlJ,KAAA,KACAC,KAAA,KACAF,MAAA,WACAlB,GACA3a,EAAA8S,MAAApE,KAAAkN,UAAA,MAAoEhB,SAAAD,oBAIpErD,QAAAqD,GACqB,SAAAzO,EAAAoL,GAErBqD,EAAArD,IAIA,IAAApL,EAKA,oBAAAgF,EAAA8L,gBAAA9L,EAAA8M,cACAtG,EAAAtT,OACAsf,EAAA/e,KAAA,CAAoCuM,OAAAwK,MAAA6I,EAAA3f,SAAAqgB,SAEpCrK,GACAA,EAAAiB,eAMAoJ,EAAA,GAGA,OAAA7hB,EAAAoE,MACA,KAAA9I,EAAAM,GACA+V,EAAA1N,WAAA,GACA8R,EAAAjP,MAAA5C,MAAAod,MAAAvb,UAAAoa,EACAH,EAAAze,OACAwU,EAAA9V,QACAkhB,EAAA,qBAAAd,EAAAjf,KAAAZ,QACA2W,IAEA,MAEA,KAAA7b,EAAA8B,UACA,GAAA+jB,EAAA,iBACA,GAAAd,EAAAjf,KAAAZ,OAAA,CACA,GAAA2gB,EAAAa,uBACA,IAAA1hB,EAAA,EAAgDA,EAAA+f,EAAAjf,KAAAZ,OAA8BF,IAC9E,GAAA6gB,EAAAa,yBAAA3B,EAAAjf,KAAAd,GAAA/F,MAAA+E,GAAA,CACA+gB,EAAApc,WAAA3D,GACA,MAIAkgB,EAAA,WACA,IAAAyB,EAAA,EAEA,GAAA5B,EAAAjf,KAAAZ,OAAA,GACA,GAAA2gB,EAAAe,wBACA,IAAA5hB,EAAA,EAAwDA,EAAA+f,EAAAjf,KAAAZ,OAA8BF,IACtF,GAAA6gB,EAAAe,0BAAA7B,EAAAjf,KAAAd,GAAA/F,MAAA+E,GAAA,CACA2iB,EAAA3hB,EACA,MAIA+f,EAAApc,WAAAge,GAEAzB,EAAA,WACA,GAAAH,EAAAjf,KAAAZ,OAAA,GAEA,GADAyhB,EAAA,EACAd,EAAAgB,qBACA,IAAA7hB,EAAA,EAAgEA,EAAA+f,EAAAjf,KAAAZ,OAA8BF,IAC9F,GAAA6gB,EAAAgB,uBAAA9B,EAAAjf,KAAAd,GAAA/F,MAAA+E,GAAA,CACA2iB,EAAA3hB,EACA,MAIA+f,EAAApc,WAAAge,GACAjC,EAAAze,OACAwU,EAAA9V,QACAugB,SAEAR,EAAAze,OACAwU,EAAA9V,eAKA+f,EAAAze,OACAwU,EAAA9V,eAIqB,CACrB,GAAAkhB,EAAA,wBACA,IAAA7gB,EAAA,EAA4CA,EAAA6gB,EAAAlJ,MAAAzX,OAA+BF,IAC3E,GAAA6gB,EAAA,0BAAAA,EAAAlJ,MAAA3X,GAAAhB,GAQA,aAPAwO,EAAAqT,EAAAlJ,MAAA3X,IACAoH,IACArK,GAAA,EAAAyQ,EAAApG,KAEAyZ,EAAA7Z,OAAAwG,EAAAxO,GAAAjC,IAUA,GAHA4a,EAAAtC,EAAAwL,IAAAlJ,OACA9Q,EAAA8Q,EAAAhQ,YACAgQ,IAAAhR,OACAzG,OAGA,QAFAsN,EAAAmK,EAAA,IAIAvQ,IACArK,GAAA,EAAAyQ,EAAApG,KAEAyZ,EAAA7Z,OAAAwG,EAAAxO,GAAAjC,SAUAgjB,EAAA,IAAApb,EAAA,CACAhB,WAAA,EACAuH,KAAA,EACAnM,UAAA,kBACAH,WAAA,EACAL,WAAA,EACAuG,WAAA,EACA0G,OAAA,EACApM,OAAA,CACA2a,aAAA,SAAAra,GACAA,EAAAqF,MAAAjE,KAAA7G,QAAA0mB,EAAAzgB,OAKAggB,IAJAY,MAyBArV,OAAA+U,IAIAd,EAAA,IAAAW,EAAA,CACAzhB,WAAA,EACAL,WAAA,EACAI,SAAA,CAAAohB,EAAAS,GACAphB,OAAA,CACAO,MAAA,WACAogB,EAAApgB,YA2DA+a,EAAA,CACA,CACAnV,MAAA,CACA,CACAxG,UAAA,oCAEA,CACA9E,MAAA0Y,QAAA,iBAGAjN,MAAA,WACA+Z,EAAAxe,OACAwU,EAAAjP,MAAA5C,MAAAod,MAAAvb,UAAAkN,QAAA,eACA8C,EAAA9V,UAIA,CACApG,KAAA,OACAgM,MAAA,CACA,CACAxG,UAAA,8BAEA,CACAxF,KAAA,SACAU,MAAA0Y,QAAA,UAGAjN,MAAA,WACA+P,EAAAjP,MAAA5C,MAAAod,MAAAvb,UAAAoa,EACAH,EAAAze,OACAwU,EAAA9V,QACAkhB,EAAA,qBAAAd,EAAAjf,KAAAZ,QACA2W,OAOAlB,EAAA,IAAA1K,EAAA,CACAzE,MAAA,CACA,CACAvM,MAAA0Y,QAAA,WACA5T,UAAA,SAGAJ,SAAA,CACA0S,EAAA,IAAA1M,EAAA,CACAhB,WAAA,EACAuH,KAAA,EAEApG,WAAA,EACA0G,OAAA,EACA1K,KAAA4Z,OAMAjF,EAAA,IAAAxK,EAAA,CACAzE,MAAA,CACA,CACAjN,KAAA,QACAU,MAAA0Y,QAAA,eACA5T,UAAA,SAGAiM,MAAA,EACAE,KAAA,EACAvM,SAAA,CAAA8gB,EAAAC,GACAtgB,OAAA,CACAO,MAAA,WACAtB,KAAAmL,WACAnL,KAAAmL,WAAA7J,QAEAsL,EAAArQ,UAAAuE,cAAAQ,MAAAxG,KAAAkF,UAOA2V,EAAA,IAAAnJ,EAAA,CACAvM,SAAA,EACAyM,OAAA,CAAA4K,EAAAF,KAEA9T,EAAA1C,IAAA+U,GAIAK,EAAA,IAAAa,EAAA,CACA1O,MAAAmM,QAAA,WACA5T,UAAA,UACAK,OAAA,CACA6B,KAAA,WACA,IAAA0Y,EAAA7E,EAAAlR,MAAAqL,SAAArL,MAGAid,EAAA5R,UACA0K,EAAAjT,MAAA3H,UAAA,+CACA4a,EAAAG,OAAArU,UAAAkN,QAAA,2BAEAgH,EAAAjT,MAAA3H,UAAA,iCACA4a,EAAAG,OAAArU,UAAAkN,QAAA,qBAWAzT,KAAA,WACA8U,EAAArU,UAGAhB,SAAA,CACAmW,EAAA,IAAAnQ,EAAA,CACAuG,KAAA,EACAvH,WAAA,EACA6H,OAAA,EACA1G,WAAA,EACAhE,KAAA,CACA,CACAvH,KAAA,WACAgM,MAAA,CACA,CACAhM,KAAA,QACAwF,UAAA,kCAEA,CACAxF,KAAA,SACAwF,UAAA,QACA9E,MAAA0Y,QAAA,qBAGAjN,MAAA,WACA2O,EAAAnV,OACA+P,QAsBA7P,OAAA,CACAiH,QAAA,SAAA3G,GAEA,OADAiF,EAAA/J,UAAAuE,cAAAkH,QAAAlN,KAAAkF,KAAAqB,GACAA,EAAAoE,MACA,KAAA9I,EAAAqB,KACA,KAAArB,EAAAC,KACAoZ,EAAAnV,OACAQ,EAAAzC,MAAA,EACA,MACA,KAAAjC,EAAAgJ,KACA,KAAAhJ,EAAA+I,MACArE,EAAAzC,MAAA,UAQA0E,EAAA1C,IAAAoV,GAsEA2L,EAAA,IAAA9K,EAAA,CACA5W,SAAA,EACAkI,MAAAmM,QAAA,QACA5T,UAAA,UACAK,OAAA,CACA6B,KAAA,SAAAH,GACAzC,KAAAyjB,WAAAhhB,EACAzC,KAAAM,SAAA,GAAAgB,QACAtB,KAAAkI,MAAAd,UAAA3E,EAAAvH,KACA4mB,EAAAvc,MAAAkT,cAAAlT,MAAAkW,OAAArU,UAAAkN,QAAA,8BACA6C,EAAA1U,EAAA0M,KAAA8M,gBAGA3b,SAAA,CACAwhB,EAAA,IAAAxb,EAAA,CACAhB,WAAA,EACAuH,KAAA,EACAM,OAAA,EACA1G,WAAA,EACA/F,UAAA,SACA+B,KAAA,CACA,CACAvH,KAAA,gBACAgM,MAAA,CACA,CACAhM,KAAA,SACAwF,UAAA,QACA9E,MAAA0Y,QAAA,4BAGAjN,MAAA,WACAsa,EAAA8B,WAAA5gB,UACA8e,EAAA8B,WAAA5gB,SAAA8e,EAAA8B,WAAAtU,KAAA8M,gBAIA,CACA/U,MAAA,CACA,CACAxG,UAAA,QACA9E,MAAA0Y,QAAA,iBAGAjN,MAAA,WACAsa,EAAA8B,WAAA5gB,UACA8e,EAAA8B,WAAA5gB,SAAA,MAKA9B,OAAA,CACA2a,aAAA,WACAiG,EAAA9gB,OACA8U,EAAArU,SAEA0G,QAAA,SAAA3G,GAEA,OADAiF,EAAA/J,UAAAuE,cAAAkH,QAAAlN,KAAAkF,KAAAqB,GACAA,EAAAoE,MACA,KAAA9I,EAAAgJ,KACAtE,EAAAzC,MAAA,EACA,MACA,KAAAjC,EAAAC,KACA+kB,EAAA9gB,OACA8U,EAAArU,QACAD,EAAAzC,MAAA,UAQA0E,EAAA1C,IAAA+gB,GAaAre,EAAAM,KAAA,kBACA,IAUA8f,EAAAC,EAAAC,EAAAtY,EACA3J,EAXAkiB,EAAA,CACAvP,QAAA,SACAA,QAAA,UACAA,QAAA,aACAA,QAAA,SACAA,QAAA,YACAA,QAAA,aACAA,QAAA,WACAA,QAAA,cAmCA,IA7BA+C,EAAA7R,KAAA,CACAG,KAAA,CACAF,KAAA9I,EAAAqB,KACA8N,OAAA,WACA6J,EAAAtT,OACAgV,EAAAxW,OACAmV,EAAApT,OACAoT,EAAA1U,UAGA6K,OAAA,CACA,CACA1G,KAAA9I,EAAAc,GACA0K,MAAAmM,QAAA,YACAxI,OAAA8E,OAIAyG,EAAAxW,OAIAygB,EAAA/c,EAAA,OAAwB7D,UAAA,SACxB6f,EAAAhc,EAAA,OAA0B7D,UAAA,WAC1B6gB,EAAAhd,EAAA,OAA+B7D,UAAA,SAC/B4X,EAAA/T,EAAA,OAA4B7D,UAAA,QAC5B4K,EAAA/G,EAAA,SACAgc,EAAAve,YAAAsW,GAEA3W,EAAA,EAAoBA,EAAAkiB,EAAAhiB,OAA2BF,IAC/CgiB,EAAApf,EAAA,MAA8B7D,UAAA,4BAAsCmjB,EAAAliB,IACpEiiB,EAAArf,EAAA,MAEAmf,EAAAnf,EAAA,QAA0Bof,EAAAC,GAC1BtY,EAAAtJ,YAAA0hB,GACAnB,EAAAzgB,KAAA,CAAwBgiB,KAAAJ,EAAAK,KAAAH,IAExBrC,EAAAvf,YAAAsJ,IAEAwM,EAAA,IAAAlI,EAAA,CACArP,WAAA,EACAL,WAAA,EACA2P,KAAA,EACAzC,SAAA,IAAA2J,EACAhW,OAAA,CACAO,MAAA,WAEA+V,EAAA7R,KAAA,CACAG,KAAA,CACAF,KAAA9I,EAAAqB,KACA8N,OAAA,WACA6J,EAAAtT,OACAgV,EAAAxW,OACAmV,EAAApT,OACAoT,EAAA1U,UAGA6K,OAAA,CACA,CACA1G,KAAA9I,EAAAc,GACA0K,MAAAmM,QAAA,YACAxI,OAAA8E,OAIAyG,EAAAzU,QAIAP,KAAA,WAEAgV,EAAAxW,YAMAT,MAAA4B,YAAAue,GACAzI,EAAA1X,MAAA4B,YAAAuf,GACAzJ,EAAA1X,MAAA4B,YAAAsf,GAEAF,EAAAxgB,IAAAkX,GACAsJ,EAAAxgB,IAAAwM,GACAgU,EAAAxe,SAOAU,EAAAS,aAAA,CACAnB,KAAA,SAAAH,GACA,IAEAd,EAFA4G,EAAA,GACAwS,EAAA,GAGA,GAAAtY,UAAA,CAqBA,KAjBA+f,EAAA/f,OAAA1D,MAKA8hB,MACAN,EAAAlU,MAAAsU,gBAAA,OAAApQ,KAAAuQ,QAAAC,KAAAyB,EAAA3B,MAAA,IAEAN,EAAAlU,MAAAsU,gBAAA,GAGA6B,EAAA5R,SACA0H,EAAAjM,MAAAuU,QAAA,QAEAtI,EAAAjM,MAAAuU,QAAA,OAEA2B,EAAA,GAAAwB,KAAA3c,UAAAob,EAAAtnB,KACAyG,EAAA,EAAwBA,EAAA6gB,EAAAzH,OAAAlZ,OAAgCF,IACxDoZ,EAAAjZ,KAAA0gB,EAAAzH,OAAApZ,GAAAzG,MAGAqnB,EAAA,GAAAwB,KAAA3c,UAAA2T,EAAAlJ,KAAA,MACA0Q,EAAA,GAAAwB,KAAA3c,UAAAob,EAAA5G,SAAA,IAAAtH,QAAA,QACAiO,EAAA,GAAAwB,KAAA3c,UAAAob,EAAAwB,MAAAxB,EAAAyB,UAAA,MAAAzB,EAAAyB,SAAA,MAAAzB,EAAAyB,SAAA,IACA1B,EAAA,GAAAwB,KAAA3c,UAAAob,EAAA0B,QACA3B,EAAA,GAAAwB,KAAA3c,UAAAob,EAAAvB,SACAsB,EAAA,GAAAwB,KAAA3c,UAAAob,EAAAxB,OACAwB,EAAA2B,aAAA3B,EAAA4B,KAGA7B,EAAA,GAAAuB,KAAAzX,MAAAuU,QAAA,GACA2B,EAAA,GAAAwB,KAAA3c,UAAA,GACAob,EAAA4B,MACA7B,EAAA,GAAAwB,KAAA3c,WAAAob,EAAA4B,KAEA5B,EAAA2B,cACA5B,EAAA,GAAAwB,KAAA3c,WAAAob,EAAA4B,IAAA,KAAA5B,EAAA2B,YAAA,IAAA3B,EAAA2B,cARA5B,EAAA,GAAAuB,KAAAzX,MAAAuU,QAAA,OAWAU,EAAAla,UAAAob,EAAA6B,YAEA7B,EAAA,iBACAhB,EAAAlN,QAAA,WACA8N,EAAA5e,OAAA4e,EAAAjJ,OACAqJ,EAAArI,WAAA,SAAAhQ,EAAA6O,GAEAzQ,EAAA0Z,EAAAjJ,GACA0I,EAAApa,QAAA,CAAkChC,WAAA,EAAA7C,KAAA8F,QAGlCiZ,EAAAlN,QAAA,QACA8N,EAAA5e,OAAA4e,EAAAjT,KACA5G,EAAA2Z,EAAAM,IAAAlJ,OACAoI,EAAApa,QAAA,CAA8BhC,WAAA,EAAA7C,KAAA8F,KAG9B6Y,EAAAxe,OACAwU,EAAAjP,MAAA5C,MAAAod,MAAAvb,UAAAkN,QAAA,eAUAtB,EAAA1N,WAAA,GACAqQ,EAAA/S,OACAwU,EAAA9V,QACAwW,EAAAtS,SAGAwC,QAAA,SAAA3G,GACA,OAAAA,EAAAoE,MACA,KAAA9I,EAAAC,KACA6lB,IACA,MACA,KAAA9lB,EAAAgJ,KACAyR,EAAA7V,KAAA,UAAAF,OAOA3G,EAAAD,QAAA6I,gCCz1CA,IAAAzD,EAAgBtF,EAAQ,GAkCxB,SAAA+pB,EAAAxkB,IAEAA,KAAA,IAYAI,UAAAJ,EAAAI,YAAA,EAKAJ,EAAAY,WAAA,UAGAZ,EAAAG,QAAA,KAGAJ,EAAA/E,KAAAkF,KAAAF,GAEAE,KAAAC,SAAA,EAKAqkB,EAAA/nB,UAAAlB,OAAAY,OAAA4D,EAAAtD,WACA+nB,EAAA/nB,UAAAkF,YAAA6iB,EAGAA,EAAA/nB,UAAArB,KAAA,oBAaAopB,EAAA/nB,UAAAqG,KAAA,SAAAH,GAgBA,QAAAzC,KAAAC,UAEAD,KAAAK,OAAA8K,YACAnL,KAAAK,OAAA8K,WACAtK,KAAA4B,GAGA5C,EAAAtD,UAAAqG,KAAA9H,KAAAkF,KAAAyC,GACAzC,KAAAK,OAAA8K,WAAAnL,MAOA,IAeAskB,EAAA/nB,UAAAsE,KAAA,WAaA,OAAAhB,EAAAtD,UAAAsE,KAAA/F,KAAAkF,QACAA,KAAAK,OAAA8K,WAAA,MAEA,IASAzQ,EAAAD,QAAA6pB,gCCzJA5pB,EAAAD,QAAA,SAAAgI,EAAAsW,GACA,IACA7d,EAAAyG,EACAjB,EAFAuc,EAAA,GAyDA,OArDAxa,EAAAzB,QAAA,SAAAiB,GACA,GAAA8W,EAAA,CAOA,IANA7d,EAAA+G,EAAA/G,KACA+G,EAAA/G,MAAA+G,EAAA,uBAAAA,EAAA,0BACAqS,QAAA,cAAArS,EAAAoX,OAEA3Y,EAAA,kCAEAiB,EAAA,EAA4BA,EAAAM,EAAAqX,MAAAzX,OAA2BF,IACvD,iBAAAM,EAAAqX,MAAA3X,GAAA,mBACAjB,EAAA,oCACA,MAIA,IAAAiB,EAAA,EAA4BA,EAAAM,EAAAqX,MAAAzX,OAA2BF,IACvD,eAAAM,EAAAqX,MAAA3X,GAAA,mBACAjB,EAAA,2BACA,YAQA,OAJAxF,EAAA+G,EAAA/G,KACA+G,EAAA/G,MAAA+G,EAAA,uBAAAA,EAAA,0BACAqS,QAAA,cAAArS,EAAAoX,OAEApX,EAAAgZ,gBACA,cACAva,EAAA,2BACA,MACA,kBACAA,EAAA,kCACA,MACA,gBACAA,EAAA,oCAIAuc,EAAAnb,KAAA,CACAoF,MAAA,CACA,CACAxG,UAAA,QACA9E,MAAAV,GAEA,CACAwF,cAIA9E,MAAAqG,MAIAgb,iCClEA,IAAAsH,EAAkBhqB,EAAQ,IAC1Byc,EAAkBzc,EAAQ,IAU1BG,EAAAD,QAAA,SAAA6N,EAAA7F,GACA,IAAA+F,EAEAtN,EAAAspB,EACA1b,EAAApI,EAFAuc,EAAA,GA8DA,OA1DAxa,EAAAuU,EAAA1O,EAAA7F,GACA+F,EAAA/F,EAAA6G,WACA7G,IAAA6F,OAEAtH,QAAA,SAAAiB,GAqBA,OApBA6G,EAAA,GACA7G,EAAAuG,eACAvG,EAAA6G,UAAAjH,QACAI,EAAA6G,UAAA9H,QAAA,SAAAkO,IACAsV,EAAAD,EAAA,KAAArV,IACAqV,EAAA,MAAArV,IACAqV,EAAA,MAAArV,IAGApG,EAAAhH,KAAA0iB,EAAA,IAEA1b,EAAAhH,KAAAoN,GAAAoF,QAAA,uBAIAxL,IAAA+I,KAAA,OAEA/I,EAAAwL,QAAA,oBAGArS,EAAA,mBACA,cACAvB,EAAA,2BACA,MACA,kBACAA,EAAA,kCACA,MACA,gBACAA,EAAA,oCAKAxF,EADA+G,EAAAmH,SACAnH,EAAAmH,QAAA3D,KAAAxD,EAAAmH,QAAA3D,KAAA,WACAxD,EAAAmH,QAAAlO,MAAAoZ,QAAA,wBAEA,IAAAA,QAAA,uBAGA2I,EAAAnb,KAAA,CACAoF,MAAA,CACA,CACAxG,UAAA,QACA9E,MAAAkN,EAAA,IAAA5N,GAEA,CACAwF,cAGA9E,MAAAqG,MAIAgb,iCCtEA,IAMAtb,EAAAkL,EAAAhE,EANA4b,EAAYlqB,EAAQ,IACpB8Q,EAAA,CACAqZ,EAAA,GACAC,KAAA,GACAC,KAAA,IAMA,IAAAjjB,EAAA,EAAAkL,EAAA4X,EAAA5iB,OAAqCF,EAAAkL,EAAclL,IACnDkH,EAAA4b,EAAA9iB,GAGA0J,EAAA,KAAAxC,EAAA,MAAAwC,EAAA,MAAAxC,EAAA,OAAAwC,EAAA,MAAAxC,EAAA,QAAAA,EAAA3N,KAAA2N,EAAAgc,OAIAJ,EAAA,KAIA/pB,EAAAD,QAAA4Q,iBC7BA3Q,EAAAD,QAAA,CACA,CAAKS,OAAA,SAAA2pB,QAAA,QAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,OAAA2pB,QAAA,SAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,YAAA2pB,QAAA,YAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,OAAA2pB,QAAA,OAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,WAAA2pB,QAAA,QAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,OAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,YAAA2pB,QAAA,WAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,WAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,WAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,OAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,SAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,QAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,cAAA2pB,QAAA,eAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,aAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,YAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,aAAA2pB,QAAA,aAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,QAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,WAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,YAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,YAAA2pB,QAAA,YAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,aAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,SAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,WAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,WAAA2pB,QAAA,WAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,KAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,WAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,WAAA2pB,QAAA,QAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,OAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,WAAA2pB,QAAA,WAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,QAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,QAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,SAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,QAAA2pB,QAAA,aAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,WAAA2pB,QAAA,SAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,YAAA2pB,QAAA,YAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,WAAA2pB,QAAA,QAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,MAAA2pB,QAAA,SAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,WAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,oBAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,QAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,WAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,OAAA2pB,QAAA,WAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,WAAA2pB,QAAA,SAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,WAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,QAAA2pB,QAAA,WAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,WAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,iBAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,QAAA2pB,QAAA,SAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,QAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,aAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,QAAA2pB,QAAA,SAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,YAAA2pB,QAAA,YAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,YAAA2pB,QAAA,SAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,cAAA2pB,QAAA,cAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,aAAA2pB,QAAA,mBAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,cAAA2pB,QAAA,cAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,QAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,OAAA2pB,QAAA,OAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,MAAA2pB,QAAA,MAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,YAAA2pB,QAAA,WAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,WAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,YAAA2pB,QAAA,SAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,WAAA2pB,QAAA,MAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,WAAA2pB,QAAA,YAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,cAAA2pB,QAAA,cAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,QAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,SAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,WAAA2pB,QAAA,SAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,QAAA2pB,QAAA,YAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,SAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,cAAA2pB,QAAA,cAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,WAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,OAAA2pB,QAAA,OAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,QAAA2pB,QAAA,QAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,MAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,QAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,WAAA2pB,QAAA,WAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,QAAA2pB,QAAA,SAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,gBAAA2pB,QAAA,iBAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,QAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,aAAA2pB,QAAA,WAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,MAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,aAAA2pB,QAAA,WAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,eAAA2pB,QAAA,WAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,WAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,OAAA2pB,QAAA,QAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,aAAA2pB,QAAA,aAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,WAAA2pB,QAAA,WAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,QAAA2pB,QAAA,gBAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,YAAA2pB,QAAA,SAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,QAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,QAAA2pB,QAAA,QAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,QAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,cAAA2pB,QAAA,eAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,YAAA2pB,QAAA,SAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,QAAA2pB,QAAA,iBAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,cAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,mBAAA2pB,QAAA,aAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,SAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,SAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,mBAAA2pB,QAAA,iBAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,oBAAA2pB,QAAA,kBAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,YAAA2pB,QAAA,QAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,QAAA2pB,QAAA,gBAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,mBAAA2pB,QAAA,aAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,WAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,sBAAA2pB,QAAA,cAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,QAAA2pB,QAAA,eAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,QAAA2pB,QAAA,QAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,WAAA2pB,QAAA,aAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,SAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,OAAA2pB,QAAA,OAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,QAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,SAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,OAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,aAAA2pB,QAAA,YAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,YAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,YAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,WAAA2pB,QAAA,SAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,WAAA2pB,QAAA,YAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,YAAA2pB,QAAA,QAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,QAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,gBAAA2pB,QAAA,aAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,eAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,QAAA2pB,QAAA,QAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,SAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,WAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,QAAA2pB,QAAA,WAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,QAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,aAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,cAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,aAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,iBAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,YAAA2pB,QAAA,aAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,YAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,QAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,QAAA2pB,QAAA,QAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,SAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,QAAA2pB,QAAA,SAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,OAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,WAAA2pB,QAAA,OAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,mBAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,YAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,WAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,QAAA2pB,QAAA,aAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,SAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,WAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,QAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,MAAA2pB,QAAA,MAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,WAAA2pB,QAAA,aAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,WAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,YAAA2pB,QAAA,aAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,OAAA2pB,QAAA,OAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,QAAA2pB,QAAA,SAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,QAAA2pB,QAAA,YAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,aAAA2pB,QAAA,aAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,QAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,QAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,QAAA2pB,QAAA,QAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,kBAAA2pB,QAAA,QAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,QAAA2pB,QAAA,WAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,UAAA2pB,QAAA,SAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,SAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,SAAA2pB,QAAA,SAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA,OACL,CAAK7pB,OAAA,OAAA2pB,QAAA,UAAAH,EAAA,KAAAI,EAAA,MAAAH,KAAA,MAAAC,KAAA,MAAAG,EAAA","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n","/**\n * Global list of non-printable control key codes.\n *\n * At the moment `keypress` and `keydown` events are emitted for the same keys (for both printable and non-printable characters).\n *\n * WARNING!!! All codes in this file (except 'volumeUp' and 'volumeDown')\n * are used in window 'keydown' handler to prevent wrong 'keypress' firings.\n * If you add new code to this file 'keypress' event with this code will never fire.\n *\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar keys = require('spa-keys');\n\n\n// extend with additional codes\nkeys.back         = keys.backspace;\nkeys.channelNext  = keys.tab;        // Tab\nkeys.channelPrev  = keys.tab + 's';  // Shift+Tab\nkeys.ok           = keys.enter;      // Enter\nkeys.exit         = keys.escape;     // Esc\nkeys.volumeUp     = 107;             // NUMPAD +\nkeys.volumeDown   = 109;             // NUMPAD -\nkeys.f1           = 112 + 'c';       // Ctrl+F1\nkeys.f2           = 113 + 'c';       // Ctrl+F2\nkeys.f3           = 114 + 'c';       // Ctrl+F3\nkeys.f4           = 115 + 'c';       // Ctrl+F4\nkeys.refresh      = 116 + 'c';       // Ctrl+F5\nkeys.frame        = 117 + 'c';       // Ctrl+F6\nkeys.phone        = 119 + 'c';       // Ctrl+F8\nkeys.set          = 120 + 'c';       // Ctrl+F9\nkeys.tv           = 121 + 'c';       // Ctrl+F10\nkeys.menu         = 122 + 'c';       // Ctrl+F11\nkeys.app          = 123 + 'c';       // Ctrl+F12\nkeys.rewind       = 66  + 'a';       // Alt+B\nkeys.forward      = 70  + 'a';       // Alt+F\nkeys.audio        = 71  + 'a';       // Alt+G\nkeys.standby      = 74  + 'a';       // Alt+J\nkeys.keyboard     = 76  + 'a';       // Alt+L\nkeys.usbMounted   = 80  + 'a';       // Alt+P\nkeys.usbUnmounted = 81  + 'a';       // Alt+Q\nkeys.playPause    = 82  + 'a';       // Alt+R\nkeys.play         = -1;              // should be redefined on some platforms\nkeys.pause        = -1;              // should be redefined on some platforms\nkeys.stop         = 83  + 'a';       // Alt+S\nkeys.power        = 85  + 'a';       // Alt+U\nkeys.record       = 87  + 'a';       // Alt+W\nkeys.info         = 89  + 'a';       // Alt+Y\nkeys.mute         = 192 + 'a';\nkeys.digit0       = 48;\nkeys.digit1       = 49;\nkeys.digit2       = 50;\nkeys.digit3       = 51;\nkeys.digit4       = 52;\nkeys.digit5       = 53;\nkeys.digit6       = 54;\nkeys.digit7       = 55;\nkeys.digit8       = 56;\nkeys.digit9       = 57;\n\n\n// public\nmodule.exports = keys;\n\n// public\n// module.exports = {\n//     getCode: function ( event ) {\n//         var code = event.keyCode;\n//\n//         // apply key modifiers\n//         if ( event.shiftKey ) { code += 1000; }\n//         if ( event.altKey )   { code += 2000; }\n//\n//         return code;\n//     },\n//\n//     codes: {\n//         back:         8,    // Backspace\n//         channelPrev:  1009, // Shift+Tab\n//         channelNext:  9,    // Tab\n//         ok:           13,   // Enter\n//         exit:         27,   // Esc\n//         pageUp:       33,\n//         pageDown:     34,\n//         end:          35,\n//         home:         36,\n//         left:         37,\n//         up:           38,\n//         right:        39,\n//         down:         40,\n//         'delete':     46,\n//         volumeUp:     107,  // NUMPAD +\n//         volumeDown:   109,  // NUMPAD -\n//         f1:           112,  // F1\n//         f2:           113,  // F2\n//         f3:           114,  // F3\n//         f4:           115,  // F4\n//         refresh:      116,  // F5\n//         frame:        117,  // F6\n//         phone:        119,  // F8\n//         set:          120,  // F9\n//         tv:           121,  // F10\n//         menu:         122,  // F11\n//         app:          123,  // F12\n//         rewind:       2066, // Alt+B\n//         forward:      2070, // Alt+F\n//         audio:        2071, // Alt+G\n//         standby:      2074, // Alt+J\n//         keyboard:     2076, // Alt+L\n//         usbMounted:   2080, // Alt+P\n//         usbUnmounted: 2081, // Alt+Q\n//         playPause:    2082, // Alt+R\n//         stop:         2083, // Alt+S\n//         power:        2085, // Alt+U\n//         record:       2087, // Alt+W\n//         info:         2089, // Alt+Y\n//         mute:         2192\n//     }\n// };\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    Emitter = require('cjs-emitter'),\n    counter = 0;\n\n\n/**\n * Base component implementation.\n *\n * Visual element that can handle sub-components.\n * Each component has a DOM element container $node with a set of classes:\n * \"component\" and some specific component class names depending on the hierarchy, for example \"page\".\n * Each component has a unique ID given either from $node.id or from data.id. If not given will generate automatically.\n *\n * @constructor\n * @extends Emitter\n *\n * @param {Object} [config={}] init parameters\n * @param {Element} [config.id] component unique identifier (generated if not set)\n * @param {string} [config.className] space-separated list of classes for \"className\" property of this.$node\n * @param {Element} [config.$node] DOM element/fragment to be a component outer container\n * @param {Element} [config.$body] DOM element/fragment to be a component inner container (by default is the same as $node)\n * @param {Component} [config.parent] link to the parent component which has this component as a child\n * @param {Array.<Component>} [config.children=[]] list of components in this component\n * @param {Object.<string, function>} [config.events={}] list of event callbacks\n * @param {boolean} [config.visible=true] component initial visibility state flag\n * @param {boolean} [config.focusable=true] component can accept focus or not\n * @param {boolean} [config.propagate=false] allow to emit events to the parent component\n *\n * @fires module:stb/component~Component#click\n *\n * @example\n * var component = new Component({\n *     $node: document.getElementById(id),\n *     className: 'bootstrap responsive',\n *     events: {\n *         click: function () { ... }\n *     }\n * });\n * component.add( ... );\n * component.focus();\n */\nfunction Component ( config ) {\n    // current execution context\n    var self = this,\n        name;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.id && typeof config.id !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.id');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$node && !(config.$node instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$node type');\n        }\n        if ( config.$body && !(config.$body instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$body type');\n        }\n        if ( config.parent && !(config.parent instanceof Component) ) {\n            throw new Error(__filename + ': wrong config.parent type');\n        }\n        if ( config.children && !Array.isArray(config.children) ) {\n            throw new Error(__filename + ': wrong config.children type');\n        }\n    }\n\n    /**\n     * Component visibility state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.visible = true;\n\n    /**\n     * Component can accept focus or not.\n     *\n     * @type {boolean}\n     */\n    this.focusable = true;\n\n    /**\n     * DOM outer handle.\n     *\n     * @type {Element}\n     */\n    this.$node = null;\n\n    /**\n     * DOM inner handle.\n     * In simple cases is the same as $node.\n     *\n     * @type {Element}\n     */\n    this.$body = null;\n\n    /**\n     * Link to the parent component which has this component as a child.\n     *\n     * @type {Component}\n     */\n    this.parent = null;\n\n    /**\n     * List of all children components.\n     *\n     * @type {Component[]}\n     */\n    this.children = [];\n\n    /**\n     * allow to emit events to the parent component\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.propagate = !!config.propagate;\n\n    // parent constructor call\n    Emitter.call(this);\n\n    // outer handle - empty div in case nothing is given\n    this.$node = config.$node || document.createElement('div');\n\n    // inner handle - the same as outer handler in case nothing is given\n    this.$body = config.$body || this.$node;\n\n    // set CSS class names\n    //this.$node.className += ' component ' + (config.className || '');\n    // previous approach is not good as it mess with components hierarchy\n    this.$node.className = this.name + ' ' + (config.className || '');\n\n    // apply component id if given, generate otherwise\n    this.id = config.id || this.$node.id || 'cid' + counter++;\n\n    // apply hierarchy\n    if ( config.parent ) {\n        // add to parent component\n        config.parent.add(this);\n    }\n\n    // apply given visibility\n    if ( config.visible === false ) {\n        // default state is visible\n        this.hide();\n    }\n\n    // apply focus handling method\n    if ( config.focusable === false ) {\n        // can't accept focus\n        this.focusable = false;\n    }\n\n    // a descendant defined own events\n    if ( this.defaultEvents ) {\n        // sanitize\n        config.events = config.events || {};\n\n        if ( DEVELOP ) {\n            if ( typeof config.events !== 'object' ) {\n                throw new Error(__filename + ': wrong config.events type');\n            }\n            if ( typeof this.defaultEvents !== 'object' ) {\n                throw new Error(__filename + ': wrong this.defaultEvents type');\n            }\n        }\n\n        for ( name in this.defaultEvents ) {\n            // overwrite default events with user-defined\n            config.events[name] = config.events[name] || this.defaultEvents[name];\n        }\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( eventName ) {\n            self.addListener(eventName, config.events[eventName]);\n        });\n    }\n\n    // apply the given children components\n    if ( config.children ) {\n        // apply\n        this.add.apply(this, config.children);\n    }\n\n    // component activation by mouse\n    this.$node.addEventListener('click', function ( event ) {\n        // left mouse button\n        //if ( event.button === 0 ) {\n        // activate if possible\n        self.focus();\n\n        // there are some listeners\n        if ( self.events['click'] ) {\n            /**\n             * Mouse click event.\n             *\n             * @event module:stb/component~Component#click\n             *\n             * @type {Object}\n             * @property {Event} event click event data\n             */\n            self.emit('click', event);\n        }\n        //}\n\n        if ( DEVELOP ) {\n            // middle mouse button\n            if ( event.button === 1 ) {\n                //debug.inspect(self, 0);\n                debug.info('\"window.link\" or \"' + self.id + '.component\"', 'this component is now available in global scope');\n                window.link = self;\n                self.$node.classList.toggle('wired');\n            }\n        }\n\n        event.stopPropagation();\n    });\n\n    if ( DEVELOP ) {\n        // expose inner ID to global scope\n        window[self.id] = self.$node;\n\n        // expose a link\n        this.$node.component = this.$body.component = this;\n        this.$node.title = this.name + '#' + this.id + ' (outer)';\n        this.$body.title = this.name + '#' + this.id + ' (inner)';\n    }\n\n    debug.info('create component ' + this.name + '#' + this.id, null, {\n        tags: ['create', 'component', this.name, this.id]\n    });\n}\n\n\n// inheritance\nComponent.prototype = Object.create(Emitter.prototype);\nComponent.prototype.constructor = Component;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nComponent.prototype.defaultEvents = null;\n\n\n/**\n * Add a new component as a child.\n *\n * @param {...Component} [child] variable number of elements to append\n *\n * @files Component#add\n *\n * @example\n * panel.add(\n *     new Button( ... ),\n *     new Button( ... )\n * );\n */\nComponent.prototype.add = function ( child ) {\n    var index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        child = arguments[index];\n\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        // apply\n        this.children.push(child);\n        child.parent = this;\n\n        // correct DOM parent/child connection if necessary\n        if ( child.$node && child.$node.parentNode === null ) {\n            this.$body.appendChild(child.$node);\n        }\n\n        debug.info('add component ' + child.name + '#' + child.id + ' to ' + this.name + '#' + this.id, null, {\n            tags: ['add', 'component', this.name, this.id, child.name, child.id]\n        });\n\n        // there are some listeners\n        if ( this.events['add'] ) {\n            /**\n             * A child component is added.\n             *\n             * @event module:stb/component~Component#add\n             *\n             * @type {Object}\n             * @property {Component} item new component added\n             */\n            this.emit('add', {item: child});\n        }\n\n        //debug.log('component ' + this.name + '#' + this.id + ' new child: ' + child.name + '#' + child.id);\n    }\n};\n\n\n/* @todo: consider activation in future */\n///**\n// * Insert component into the specific position.\n// *\n// * @param {Component} child component instance to insert\n// * @param {number} index insertion position\n// */\n//Component.prototype.insert = function ( child, index ) {\n//    var prevIndex = this.children.indexOf(child);\n//\n//    if ( DEVELOP ) {\n//        if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n//        if ( !(child instanceof Component) ) { throw new Error(__filename + ': wrong child type'); }\n//    }\n//\n//    if ( prevIndex !== -1 ) {\n//        this.children.splice(prevIndex, 1);\n//        this.$body.removeChild(child.$node);\n//    }\n//\n//    if ( index === this.children.length ) {\n//        this.$body.appendChild(child.$node);\n//    } else {\n//        this.$body.insertBefore(child.$node, this.$body.children[index]);\n//    }\n//    this.children.splice(index, 0, child);\n//\n//    if ( !child.parent ) {\n//        child.parent = this;\n//    }\n//};\n\n\n/**\n * Delete this component and clear all associated events.\n *\n * @fires module:stb/component~Component#remove\n */\nComponent.prototype.remove = function () {\n    // really inserted somewhere\n    if ( this.parent ) {\n        if ( DEVELOP ) {\n            if ( !(this.parent instanceof Component) ) {\n                throw new Error(__filename + ': wrong this.parent type');\n            }\n        }\n\n        // active at the moment\n        if ( app.activePage.activeComponent === this ) {\n            this.blur();\n            this.parent.focus();\n        }\n        this.parent.children.splice(this.parent.children.indexOf(this), 1);\n    }\n\n    // remove all children\n    this.children.forEach(function ( child ) {\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        child.remove();\n    });\n\n    this.$node.parentNode.removeChild(this.$node);\n\n    // there are some listeners\n    if ( this.events['remove'] ) {\n        /**\n         * Delete this component.\n         *\n         * @event module:stb/component~Component#remove\n         */\n        this.emit('remove');\n    }\n\n    // remove all listeners\n    this.events = {};\n\n    //debug.log('component ' + this.name + '#' + this.id + ' remove', 'red');\n    debug.info('remove component ' + this.name + '#' + this.id, null, {\n        tags: ['remove', 'component', this.name, this.id]\n    });\n};\n\n\n/**\n * Activate the component.\n * Notify the owner-page and apply CSS class.\n *\n * @param {Object} [data] custom data which passed into handlers\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#focus\n */\nComponent.prototype.focus = function ( data ) {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // this is a visual component on a page\n    // not already focused and can accept focus\n    if ( this.focusable && this !== activeItem ) {\n        // notify the current active component\n        if ( activeItem ) { activeItem.blur(); }\n\n        /* eslint consistent-this: 0 */\n\n        // apply\n        activePage.activeComponent = activeItem = this;\n        activeItem.$node.classList.add('focus');\n\n        //debug.log('component ' + this.name + '#' + this.id + ' focus');\n        debug.info('focus component ' + this.name + '#' + this.id, null, {\n            tags: ['focus', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( activeItem.events['focus'] ) {\n            /**\n             * Make this component focused.\n             *\n             * @event module:stb/component~Component#focus\n             */\n            activeItem.emit('focus', data);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Remove focus.\n * Change page.activeComponent and notify subscribers.\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#blur\n */\nComponent.prototype.blur = function () {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // apply visuals anyway\n    this.$node.classList.remove('focus');\n\n    // this is the active component\n    if ( this === activeItem ) {\n        activePage.activeComponent = null;\n\n        //debug.log('component ' + this.name + '#' + this.id + ' blur', 'grey');\n        debug.info('blur component ' + this.name + '#' + this.id, null, {\n            tags: ['blur', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['blur'] ) {\n            /**\n             * Remove focus from this component.\n             *\n             * @event module:stb/component~Component#blur\n             */\n            this.emit('blur');\n        }\n\n        return true;\n    }\n\n    debug.warn('component ' + this.name + '#' + this.id + ' attempt to blur without link to a page', null, {\n        tags: ['blur', 'component', this.name, this.id]\n    });\n\n    // nothing was done\n    return false;\n};\n\n\n/*function show ( self, data ) {\n    // correct style\n    self.$node.classList.remove('hidden');\n    // flag\n    self.visible = true;\n\n    debug.info('show component ' + self.name + '#' + self.id, null, {\n        tags: ['show', 'component', self.name, self.id]\n    });\n\n    // there are some listeners\n    if ( self.events['show'] ) {\n        /!**\n         * Make the component visible.\n         *\n         * @event module:stb/component~Component#show\n         *!/\n        self.emit('show', data);\n    }\n}*/\n\n/**\n * Make the component visible and notify subscribers.\n *\n * @param {Object} [data] custom data which passed into handlers\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#show\n */\nComponent.prototype.show = function ( data, callback ) {\n    //var self = this;\n\n    // is it hidden\n    if ( !this.visible ) {\n        /*if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(function () {\n                show(self, data);\n                callback();\n            });\n        } else {\n            // sync call\n            show(this, data);\n        }*/\n\n        // correct style\n        this.$node.classList.remove('hidden');\n        // flag\n        this.visible = true;\n\n        debug.info('show component ' + this.name + '#' + this.id, null, {\n            tags: ['show', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['show'] ) {\n            /**\n             * Make the component visible.\n             *\n             * @event module:stb/component~Component#show\n             */\n            this.emit('show', data);\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Make the component hidden and notify subscribers.\n *\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#hide\n */\nComponent.prototype.hide = function ( callback ) {\n    // is it visible\n    if ( this.visible ) {\n        // correct style\n        this.$node.classList.add('hidden');\n        // flag\n        this.visible = false;\n\n        debug.info('hide component ' + this.name + '#' + this.id, null, {\n            tags: ['hide', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['hide'] ) {\n            /**\n             * Make the component hidden.\n             *\n             * @event module:stb/component~Component#hide\n             */\n            this.emit('hide');\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = Component;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    parse   = require('cjs-query').parse,\n    app     = new Emitter();\n\n\n/**\n * Make the given inactive/hidden page active/visible.\n * Pass some data to the page and trigger the corresponding event.\n *\n * @param {Page} page item to show\n * @param {*} [data] data to send to page\n *\n * @return {boolean} operation status\n */\nfunction showPage ( page, data ) {\n    // page available and can be hidden\n    if ( page && !page.active ) {\n        // apply visibility\n        page.$node.classList.add('active');\n        page.active = true;\n        app.activePage = page;\n\n        debug.info('show component ' + page.name + '#' + page.id, null, {\n            tags: ['show', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' show', 'green');\n\n        // there are some listeners\n        if ( page.events['show'] ) {\n            // notify listeners\n            page.emit('show', {data: data});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n/**\n * Make the given active/visible page inactive/hidden and trigger the corresponding event.\n *\n * @param {Page} page item to hide\n *\n * @return {boolean} operation status\n */\nfunction hidePage ( page ) {\n    // page available and can be hidden\n    if ( page && page.active ) {\n        // apply visibility\n        page.$node.classList.remove('active');\n        page.active  = false;\n        app.activePage = null;\n\n        debug.info('hide component ' + page.name + '#' + page.id, null, {\n            tags: ['hide', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' hide', 'grey');\n\n        // there are some listeners\n        if ( page.events['hide'] ) {\n            // notify listeners\n            page.emit('hide');\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n// url request params\napp.query = parse(document.location.search.substring(1));\n\n\n// global application configuration\n// in config.js file in js root\napp.config = require('app:config');\n\n\n// the only visible page\napp.activePage = null;\n\n\n/**\n * Browse to a given page.\n * Do nothing if the link is invalid. Otherwise hide the current, show new and update the \"previous\" link.\n *\n * @param {Page} pageTo instance of the page to show\n * @param {*} [data] options to pass to the page on show\n *\n * @return {boolean} operation status\n */\napp.route = function ( pageTo, data ) {\n    var pageFrom = app.activePage;\n\n    if ( DEVELOP ) {\n        //if ( router.pages.length > 0 ) {\n        if ( !pageTo || typeof pageTo !== 'object' ) {\n            throw new Error(__filename + ': wrong pageTo type');\n        }\n        if ( !('active' in pageTo) ) {\n            throw new Error(__filename + ': missing field \"active\" in pageTo');\n        }\n        //}\n    }\n\n    // valid not already active page\n    if ( pageTo && !pageTo.active ) {\n        //debug.log('router.navigate: ' + pageTo.id, pageTo === pageFrom ? 'grey' : 'green');\n        debug.info('app route: ' + pageTo.name + '#' + pageTo.id, null, {tags: ['route', pageTo.name, pageTo.id]});\n\n        // update url\n        //location.hash = this.stringify(name, data);\n\n        // apply visibility\n        hidePage(app.activePage);\n        showPage(pageTo, data);\n\n        // there are some listeners\n        if ( this.events['route'] ) {\n            // notify listeners\n            this.emit('route', {from: pageFrom, to: pageTo});\n        }\n\n        // store\n        //this.history.push(pageTo);\n\n        return true;\n    }\n\n    //debug.warn('invalid page to route: ' + pageTo.id, null, {tags: ['route', 'page', pageTo.id]});\n    console.warn('invalid page to route: ' + pageTo.id);\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component');\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar app = require('./lib/main');\n\n\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Base Events Emitter implementation.\n *\n * @see http://nodejs.org/api/events.html\n * @constructor\n *\n * @example\n * var emitter = new Emitter();\n */\nfunction Emitter () {\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // if ( DEVELOP ) {\n    //     if ( typeof this !== 'object' ) { throw new Error(__filename + ': must be constructed via new'); }\n    // }\n\n    /**\n     * Inner hash table for event names and linked callbacks.\n     * Manual editing should be avoided.\n     *\n     * @member {Object.<string, function[]>}\n     *\n     * @example\n     * {\n     *     click: [\n     *         function click1 () { ... },\n     *         function click2 () { ... }\n     *     ],\n     *     keydown: [\n     *         function () { ... }\n     *     ]\n     * }\n     **/\n    this.events = {};\n}\n\n\nEmitter.prototype = {\n    /**\n     * Bind an event to the given callback function.\n     * The same callback function can be added multiple times for the same event name.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.addListener('click', function ( data ) { ... });\n     * // one more click handler\n     * emitter.addListener('click', function ( data ) { ... });\n     */\n    addListener: function ( name, callback ) {\n        console.assert(arguments.length === 2, 'wrong arguments number');\n        console.assert(typeof name === 'string', 'wrong name type');\n        console.assert(name.length > 0, 'empty name');\n        console.assert(typeof callback === 'function', 'callback should be a function');\n\n        // if ( DEVELOP ) {\n        //     if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        //     if ( typeof name !== 'string' || name.length === 0 ) { throw new Error(__filename + ': wrong or empty name'); }\n        //     if ( typeof callback !== 'function' ) { throw new Error(__filename + ': wrong callback type'); }\n        // }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(callback);\n    },\n\n\n    /**\n     * Add a one time listener for the event.\n     * This listener is invoked only the next time the event is fired, after which it is removed.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.once('click', function ( data ) { ... });\n     */\n    once: function ( name, callback ) {\n        // current execution context\n        var self = this;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n        }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(function onceWrapper () {\n            self.removeListener(name, onceWrapper);\n            callback.apply(self, arguments);\n        });\n    },\n\n\n    /**\n     * Apply multiple listeners at once.\n     *\n     * @param {Object} callbacks event names with callbacks\n     *\n     * @example\n     * emitter.addListeners({\n     *     click: function ( data ) {},\n     *     close: function ( data ) {}\n     * });\n     */\n    addListeners: function ( callbacks ) {\n        var name;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof callbacks !== 'object' ) {\n                throw new Error(__filename + ': wrong callbacks type');\n            }\n            if ( Object.keys(callbacks).length === 0 ) {\n                throw new Error(__filename + ': no callbacks given');\n            }\n        }\n\n        for ( name in callbacks ) {\n            if ( callbacks.hasOwnProperty(name) ) {\n                this.addListener(name, callbacks[name]);\n            }\n        }\n    },\n\n\n    /**\n     * Remove all instances of the given callback.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to remove\n     *\n     * @example\n     * emitter.removeListener('click', func1);\n     */\n    removeListener: function ( name, callback ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n            if ( this.events[name] && !Array.isArray(this.events[name]) ) {\n                throw new Error(__filename + ': corrupted inner data');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( this.events[name] ) {\n            // rework the callback list to exclude the given one\n            this.events[name] = this.events[name].filter(function callbacksFilter ( fn ) { return fn !== callback; });\n            // event has no more callbacks so clean it\n            if ( this.events[name].length === 0 ) {\n                // as if there were no listeners at all\n                this.events[name] = undefined;\n            }\n        }\n    },\n\n\n    /**\n     * Remove all callbacks for the given event name.\n     * Without event name clears all events.\n     *\n     * @param {string} [name] event identifier\n     *\n     * @example\n     * emitter.removeAllListeners('click');\n     * emitter.removeAllListeners();\n     *\n     * @deprecated\n     */\n    /*removeAllListeners: function ( name ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 0 && (typeof name !== 'string' || name.length === 0) ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // check input\n        if ( arguments.length === 0 ) {\n            // no arguments so remove everything\n            this.events = {};\n        } else if ( name ) {\n            if ( DEVELOP ) {\n                if ( this.events[name] ) { throw new Error(__filename + ': event is not removed'); }\n            }\n\n            // only name is given so remove all callbacks for the given event\n            // but object structure modification should be avoided\n            this.events[name] = undefined;\n        }\n    },*/\n\n\n    /**\n     * Execute each of the listeners in the given order with the supplied arguments.\n     *\n     * @param {string} name event identifier\n     *\n     * @example\n     * emitter.emit('init');\n     * emitter.emit('click', {src: panel1, dst: panel2});\n     * emitter.emit('load', error, data);\n     *\n     * // it's a good idea to emit event only when there are some listeners\n     * if ( this.events['click'] ) {\n     *     this.emit('click', {event: event});\n     * }\n     */\n    emit: function ( name ) {\n        var event = this.events[name],\n            index;\n\n        if ( DEVELOP ) {\n            if ( arguments.length < 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( event ) {\n            if ( DEVELOP ) {\n                if ( !Array.isArray(event) ) {\n                    throw new Error(__filename + ': wrong event type');\n                }\n            }\n\n            for ( index = 0; index < event.length; index++ ) {\n                if ( DEVELOP ) {\n                    if ( typeof event[index] !== 'function' ) {\n                        throw new Error(__filename + ': wrong event callback type');\n                    }\n                }\n\n                // invoke the callback with parameters\n                event[index].apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n    }\n};\n\n\n// correct constructor name\nEmitter.prototype.constructor = Emitter;\n\n\n// public\nmodule.exports = Emitter;\n","/**\n * HTML elements low-level handling.\n *\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n/* eslint no-unused-vars: 0 */\n\n/**\n * DOM manipulation module\n */\nvar dom = {};\n\n\n/**\n * Create a new HTML element.\n *\n * @param {string} tagName mandatory tag name\n * @param {Object|null} [attrList] element attributes\n * @param {...*} [content] element content (primitive value/values or other nodes)\n * @return {Node|null} HTML element or null on failure\n *\n * @example\n * dom.tag('table');\n * dom.tag('div', {}, 'some text');\n * dom.tag('div', {className:'top'}, dom.tag('span'), dom.tag('br'));\n * dom.tag('link', {rel:'stylesheet', type:'text/css', href:'http://some.url/'});\n */\ndom.tag = function ( tagName, attrList, content ) {\n    var node = null,\n        index, name;\n\n    // minimal param is given\n    if ( tagName ) {\n        // empty element\n        node = document.createElement(tagName);\n\n        // optional attribute list is given\n        if ( attrList && typeof attrList === 'object' ) {\n            for ( name in attrList ) {\n                // extend a new node with the given attributes\n                node[name] = attrList[name];\n            }\n        }\n\n        // content (arguments except the first two)\n        for ( index = 2; index < arguments.length; index++ ) {\n            // some data is given\n            if ( arguments[index] ) {\n                // regular HTML tag or plain data\n                node.appendChild(\n                    typeof arguments[index] === 'object' ? arguments[index] : document.createTextNode(arguments[index])\n                );\n            }\n        }\n\n    }\n\n    return node;\n};\n\n\n/**\n * Create a new DocumentFragment filled with the given non-empty elements if any.\n *\n * @param {...*} [node] fragment content (primitive value/values or other nodes)\n * @return {DocumentFragment} new placeholder\n *\n * @example\n * // gives an empty fragment element\n * dom.fragment();\n * // gives a fragment element with 3 div element inside\n * dom.fragment(dom.tag('div'), div2, div3);\n * // mixed case\n * dom.fragment('some text', 123, div3);\n */\ndom.fragment = function ( node ) {\n    // prepare placeholder\n    var fragment = document.createDocumentFragment(),\n        index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        node = arguments[index];\n        // some data is given\n        if ( node ) {\n            // regular HTML tag or plain data\n            fragment.appendChild(typeof node === 'object' ? node : document.createTextNode(node));\n        }\n    }\n\n    return fragment;\n};\n\n\n/**\n * Add the given non-empty data (HTML element/text or list) to the destination element.\n *\n * @param {Node} tagDst element to receive children\n * @param {...*} [content] element content (primitive value/values or other nodes)\n * @return {Node|null} the destination element - owner of all added data\n *\n * @example\n * // simple text value\n * add(some_div, 'Hello world');\n * // single DOM Element\n * add(some_div, some_other_div);\n * // DOM Element list\n * add(some_div, div1, div2, div3);\n * // mixed case\n * add(some_div, div1, 'hello', 'world');\n */\ndom.add = function ( tagDst, content ) {\n    var index;\n\n    // valid HTML tag as the destination\n    if ( tagDst instanceof Node ) {\n        // append all except the first one\n        for ( index = 1; index < arguments.length; index++ ) {\n            // some data is given\n            if ( arguments[index] ) {\n                // regular HTML tag or plain data\n                tagDst.appendChild(\n                    typeof arguments[index] === 'object' ? arguments[index] : document.createTextNode(arguments[index])\n                );\n            }\n        }\n\n        return tagDst;\n    }\n\n    return null;\n};\n\n\n/**\n * Remove the given elements from the DOM.\n *\n * @param {...Node} [nodes] element to be removed\n * @return {boolean} operation status (true - all given elements removed)\n *\n * @example\n * dom.remove(document.querySelector('div.test'));\n * dom.remove(div1, div2, div3);\n */\ndom.remove = function ( nodes ) {\n    // amount of successfully removed nodes\n    var count = 0,\n        index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        // valid non-empty tag\n        if ( arguments[index] && arguments[index].parentNode ) {\n            if ( arguments[index].parentNode.removeChild(arguments[index]) === arguments[index] ) {\n                count++;\n            }\n        }\n    }\n\n    return arguments.length > 0 && count === arguments.length;\n};\n\n\ndom.clear = function ( node ) {\n    while ( node.lastChild ) {\n        node.removeChild(node.lastChild);\n    }\n};\n\n\n// public\nmodule.exports = dom;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n/**\n * Layout component implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array} [config.data] array of items to add to layout\n */\nfunction Layout ( config ) {\n    var self = this;\n\n    // sanitize\n    config = config || {};\n\n    /**\n     * Index of focused child component\n     * @type {number}\n     */\n    this.focusIndex = 0;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && config.className !== undefined && typeof config.className !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    //config.className = 'layout ' + (config.className || '');\n\n    /**\n     * Component data\n     * @type {Array}\n     */\n    this.data = [];\n\n    /**\n     *  Hash map of item links\n     */\n    this.links = {};\n\n    Component.call(this, config);\n\n    this.init(config);\n\n    // add listener to move focus between children\n    this.addListener('keydown', function ( event ) {\n        switch ( event.code ) {\n            case keys.right:\n                if ( self.children.length && self.focusIndex < self.children.length - 1 ) {\n                    self.children[++self.focusIndex].focus();\n                }\n                break;\n            case keys.left:\n                if ( self.children.length && self.focusIndex > 0 ) {\n                    self.children[--self.focusIndex].focus();\n                }\n                break;\n            case keys.back:\n                // focus parent focused item if parent is layout list\n                if ( self.parent ) {\n                    self.parent.focus();\n                    if ( self.$parentItem ) {\n                        self.parent.focusItem(self.$parentItem);\n                    }\n                }\n                break;\n        }\n    });\n}\n\n\nLayout.prototype = Object.create(Component.prototype);\nLayout.prototype.constructor = Layout;\n\n// set component name\nLayout.prototype.name = 'mag-component-layout';\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var index, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( index = 0; index < data.length; index++ ) {\n        // cell value\n        item = data[index];\n        // plain text\n        if ( typeof item === 'object' ) {\n            // HTML element or component\n            if ( item instanceof Component || item instanceof HTMLElement ) {\n                data[index] = {\n                    value: item,\n                    wrap: false\n                };\n            } else {\n                data[index].wrap = true;\n            }\n        } else {\n            // wrap with defaults\n            data[index] = {\n                value: data[index],\n                wrap: true\n            };\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nLayout.prototype.init = function ( config ) {\n    var self = this,\n        data = normalize(config.data),\n        item, $wrapper, index;\n\n    // clear element if reinit\n    while (this.$node.firstChild) {\n        this.$node.removeChild(this.$node.firstChild);\n    }\n\n    this.data = data;\n\n    /**\n     * @this Component\n     */\n    function componentClickHandler () {\n        self.focusIndex = this.index;\n    }\n\n    for ( index = 0; index < data.length; index++ ) {\n        item = data[index];\n        // plain text\n        if ( typeof item.value === 'string' ) {\n            $wrapper = document.createElement('div');\n            $wrapper.textContent = item.value;\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n            if ( item.name ) {\n                this.links[item.name] = $wrapper;\n            }\n        } else if ( item.value instanceof HTMLElement ) {\n            // HTML Element\n\n            // if with wrapper\n            if ( item.wrap ) {\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value);\n                this.$node.appendChild($wrapper);\n                if ( item.name ) {\n                    this.links[item.name] = $wrapper;\n                }\n            } else {\n                // without wrapper\n                this.$node.appendChild(item.value);\n                if ( item.name ) {\n                    this.links[item.name] = item.value;\n                }\n            }\n        } else if ( item.value instanceof Component ) {\n            // component\n            // force propagate events\n            item.value.propagate = true;\n\n            // set index to current component\n            item.value.index = this.children.length;\n\n            // change layout focus index if click component\n            item.value.addListener('click', componentClickHandler);\n\n            // append component\n            if ( item.wrap ) {\n                // with wrapper\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value.$node);\n                this.$node.appendChild($wrapper);\n                this.children.push(item.value);\n                item.value.parent = this;\n                if ( item.name ) {\n                    this.links[item.name] = $wrapper;\n                }\n            } else {\n                // without wrapper\n                this.add(item.value);\n                if ( item.name ) {\n                    this.links[item.name] = item.value;\n                }\n            }\n        } else {\n            $wrapper = document.createElement('div');\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n            if ( item.name ) {\n                this.links[item.name] = $wrapper;\n            }\n        }\n    }\n};\n\n\nmodule.exports = Layout;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar List = require('mag-component-list'),\n    Layout = require('mag-component-layout');\n\n/**\n *  Layout list contains array of layout components\n *\n * @constructor\n * @extends List\n *\n * @param {Object} config object\n * @param {Element} [config.noData=''] element or string to display if set empty data\n *\n * @example\n * var LayoutList = require('mag-component-layout-list'),\n *     list = new LayoutList({\n *         propagate: true,\n *         size: 7,\n *         focusIndex: 0,\n *         noData: 'No channels'\n *         data: [\n *                 {\n *                     items: [\n *                         {\n *                             className: 'star',\n *                             name: '$text'\n *                         },\n *                         'Some text'\n *                     ],\n *                     click: function () {\n *                         // do something\n *                     },\n *                     name: 'starItem'\n *                 },\n *                 {\n *                     items: [\n *                         'Hello world',\n *                         {\n *                             value: 'hi',\n *                             className: 'status'\n *                         }\n *                     ],\n *                     value:{\n *                         uri: 'http://55.55.55.55/some'\n *                     },\n *                     click: someHandler\n *                 },\n *                 {\n *                     items: [\n *                         {\n *                             className: 'big',\n *                             value: ' Some'\n *                         },\n *                         {\n *                             value: new Input()\n *                         }\n *                     ]\n *                 },\n *                 {\n *                     items: [\n *                         new Button({value: 'Ok'}),\n *                         new Button({value: 'Cancel'}),\n *                         new Button({value: 'Exit'})\n *                     ]\n *                 }\n *             ]\n * });\n *\n * list.links.starItem.links.$text.innerText = 'new Text';\n *\n */\nfunction LayoutList ( config ) {\n    var self = this;\n\n    config = config || {};\n\n    /**\n     * Elements handlers\n     */\n    this.handlers = {};\n\n    /**\n     * Hash map of layouts links\n     */\n    this.links = {};\n\n    /**\n     * No data placeholder\n     *\n     * @type {Element}\n     */\n    this.$noData = null;\n\n    //config.className = 'layoutList ' + (config.className || '');\n\n    config.propagate = config.propagate === undefined ? true : config.propagate;\n\n    /**\n     * Set data layout to be fixed to cache HTML elements\n     *\n     * @type {boolean|*}\n     */\n    this.fixedData = config.fixedData || false;\n\n    //config.$body = document.createElement('div');\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    this.$noData = document.createElement('div');\n    this.$noData.className = 'noData hidden';\n\n    List.call(this, config);\n\n    this.$node.appendChild(this.$body);\n    this.$node.appendChild(this.$noData);\n\n    // add handler to focus inner layout\n    this.addListener('click:item', function ( event ) {\n        // focus inner layout of item\n        if ( event.$item.layout.children.length && !event.inner ) {\n            event.$item.layout.children[event.$item.layout.focusIndex].focus();\n        }\n\n        // only focus item if we click mouse\n        if ( event.inner ) {\n            self.focus();\n            self.focusItem(event.$item);\n        }\n        // do click callback if it present\n        if ( self.handlers[event.$item.index] ) {\n            self.handlers[event.$item.index](event.$item);\n        }\n    });\n}\n\n\nLayoutList.prototype = Object.create(List.prototype);\nLayoutList.prototype.constructor = LayoutList;\n\n// set component name\nLayoutList.prototype.name = 'mag-component-layout-list';\n\n\n/*eslint id-length:0*/\n/**\n * Default render function\n *\n * @param {Element} $item in list\n * @param {Object} config to render layout element\n */\nLayoutList.prototype.renderItemDefault = function ( $item, config ) {\n    var layout, layoutConfig,\n        currentNode,\n        currentData,\n        i;\n\n    if ( $item.ready && this.fixedData ) {\n        for ( i = 0; i < config.items.length; i++ ) {\n            currentData = config.items[i];\n            if ( typeof currentData.value === 'string' || currentData.value === undefined ) {\n                currentNode = $item.layout.$node.childNodes[i];\n                currentNode.innerText = currentData.value || '';\n                currentNode.className = currentData.className || '';\n            }\n        }\n    } else {\n        // clear inner content\n        while ( $item.firstChild ) {\n            $item.removeChild($item.firstChild);\n        }\n\n        layoutConfig = {\n            focusable: false,\n            data: config.items\n        };\n\n        if ( config.className ) {\n            layoutConfig.className = config.className;\n        }\n\n        layout = new Layout(layoutConfig);\n\n        if ( config.name ) {\n            this.links[config.name] = layout;\n        }\n\n        $item.appendChild(layout.$node);\n        $item.layout = layout;\n        layout.parent = this;\n        layout.$parentItem = $item;\n\n        // focus layoutList if click on layout\n        layout.addListener('click', function () {\n            // add inner property to set that event comes from inner component\n            layout.parent.emit('click:item', {$item: $item, inner: true});\n        });\n\n        if ( config.click ) {\n            this.handlers[$item.index] = config.click;\n        }\n        // item is rendered\n        $item.ready = true;\n    }\n    $item.value = config.value || {};\n};\n\n\nLayoutList.prototype.setData = function ( config ) {\n    this.links = {};\n    List.prototype.setData.call(this, config);\n\n    if ( config.data && config.data.length ) {\n        this.$noData.classList.add('hidden');\n    } else {\n        this.$noData.classList.remove('hidden');\n    }\n};\n\n\nLayoutList.prototype.init = function ( config ) {\n    var $wrap;\n\n    List.prototype.init.call(this, config);\n    if ( config.noData ) {\n        if ( DEVELOP ) {\n            if ( typeof config.noData !== 'string' && !(config.noData instanceof Element) ) {\n                throw new Error(__filename + ': wrong config.$noData type');\n            }\n        }\n\n        this.$noData.innerHTML = '';\n        if ( config.noData instanceof Element ) {\n            this.$noData.appendChild(config.noData);\n        } else if ( typeof config.noData === 'string' ) {\n            $wrap = document.createElement('div');\n            $wrap.innerText = config.noData;\n            this.$noData.appendChild($wrap);\n        }\n    }\n\n    if ( config.data && config.data.length ) {\n        this.$noData.classList.add('hidden');\n    } else {\n        this.$noData.classList.remove('hidden');\n    }\n};\n\nLayoutList.prototype.renderItem = LayoutList.prototype.renderItemDefault;\n\n\nmodule.exports = LayoutList;\n","/**\n * @license The MIT License (MIT)\n * @copyright Dmitry Fedotov <bas.jsdev@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\nvar StbComponentModal = require('stb-component-modal'),\n    Component         = require('stb-component'),\n    keys              = require('stb-keys');\n\n\n/**\n * Modal window implementation.\n *\n * @constructor\n * @extends StbComponentModal\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {Object} [config.title] message title\n * @param {Object} [config.className] message classname\n * @param {Object} [config.icon] icon at header\n * @param {Object} [config.visible] visibility flag\n * @param {Object} [config.children] content (inherited from the parent)\n *\n * @example\n * var modalSort = new Modal({\n *     visible: false,\n *     title: 'sort',\n *     events: {\n *         show: function () {\n *             list.focus();\n *         },\n *         hide: function () {\n *             page.panelSet.focus();\n *         }\n *     },\n *     children: [list = new RadioList({})]\n * });\n * page.add(modalSort);\n */\nfunction Modal ( config ) {\n    var self = this,\n        $overlay, $body, onkeydown;\n\n    // sanitize\n    config = config || {};\n    config.events = config.events || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.icon && typeof config.icon !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.icon');\n        }\n        if ( config.title && typeof config.title !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.title');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body ) {\n            throw new Error(__filename + ': config.$body should not be provided in Modal manually');\n        }\n    }\n\n    // usually can't accept focus\n    config.focusable = config.focusable || false;\n    // hide by default\n    config.visible = config.visible || false;\n    // add default close by click\n    config.events.click = config.events.click || function () { self.hide(); };\n    // add close window behavior, when pushed a back button or a menu button\n    onkeydown = config.events.keydown;\n    config.events.keydown = function ( event ) {\n        if ( onkeydown ) {\n            onkeydown.call(this, event);\n        }\n        if ( event.code === keys.back || event.code === keys.menu ) {\n            event.stop = true;\n            self.hide();\n        }\n    };\n\n    // parent constructor call\n    StbComponentModal.call(this, config);\n\n    // add table-cell wrappers\n    this.$node.appendChild(document.createElement('div'));\n    this.$node.firstChild.classList.add('alignBox');\n    this.$node.firstChild.appendChild(document.createElement('div'));\n\n    // add header div\n    this.$header = document.createElement('div');\n    this.$header.className = 'header';\n\n    // insert caption placeholder\n    this.$text = this.$header.appendChild(document.createElement('div'));\n    this.$text.classList.add('text');\n    this.$text.innerText = config.title || '';\n\n    // optional icon\n    if ( config.icon ) {\n        this.$icon = this.$header.appendChild(document.createElement('div'));\n        this.$icon.className = 'icon ' + config.icon;\n    }\n\n    $overlay = document.createElement('div');\n    $overlay.className = 'overlay';\n\n    // add to dom\n    // add body wrapper\n    $body = this.$body.parentNode.removeChild(this.$body);\n    this.$node.firstChild.firstChild.appendChild(this.$header);\n    this.$node.firstChild.firstChild.appendChild($body);\n    this.$node.firstChild.firstChild.appendChild($overlay);\n}\n\n\n// inheritance\nModal.prototype = Object.create(StbComponentModal.prototype);\nModal.prototype.constructor = Modal;\n\n// set component name\nModal.prototype.name = 'mag-component-modal';\n\n\n/**\n * Redefine default component focus to set additional css\n */\nModal.prototype.focus = function () {\n    this.$node.classList.add('active');\n    StbComponentModal.prototype.focus.call(this);\n    if ( this.children[0] && this.children[0] instanceof Component ) {\n        this.children[0].focus();\n    }\n};\n\n\n/**\n * Blur message\n */\nModal.prototype.blur = function () {\n    this.$node.classList.remove('active');\n    StbComponentModal.prototype.blur.call(this);\n};\n\n\n// public\nmodule.exports = Modal;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-scrollbar');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-scrollbar';\n","'use strict';\n\nmodule.exports = function ( video, data ) {\n    var list = [],\n        subtitleList = [];\n\n    /**\n     * Get subtitle uri.\n     *\n     * @param {Function} callback - result handler\n     *\n     * @this subtitleList\n     */\n    function getSubtitleUri ( callback ) {\n        if ( this.uri ) {\n            callback(false, this.uri);\n        } else {\n            video.getUrl(this.id, callback);\n        }\n    }\n\n    data.forEach(function ( item ) {\n        switch ( item.type ) {\n            case 'video':\n                list.push(item);\n                break;\n            case 'sub':\n                subtitleList.push({\n                    id: item.id,\n                    title: item.name,\n                    lang: item.languages[0] || '',\n                    uri: item.url,\n                    getUri: getSubtitleUri\n                });\n                break;\n        }\n    });\n\n    list.sort(function ( itemA, itemB ) {\n        if ( !itemB.quality ) {\n            return 0;\n        }\n\n        if ( !itemA.quality ) {\n            return -1;\n        }\n\n        return itemB.quality.width - itemA.quality.width;\n    });\n\n    return {video: list, subtitles: subtitleList};\n};\n","/**\n * Global list of non-printable control key codes.\n *\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    backspace: 8,\n    tab:       9,\n    enter:     13,\n    escape:    27,\n    space:     32,\n    pageUp:    33,\n    pageDown:  34,\n    end:       35,\n    home:      36,\n    left:      37,\n    up:        38,\n    right:     39,\n    down:      40,\n    insert:    45,\n    // not \"delete\" because of old browsers issue\n    del:       46\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('./core');\n\n\n// public\nmodule.exports = {\n    DOMContentLoaded: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // there are some listeners\n        if ( app.events['dom'] ) {\n            // notify listeners\n            app.emit('dom', event);\n            //console.log('DOMContentLoaded');\n        }\n    },\n\n    /**\n     * The load event is fired when a resource and its dependent resources have finished loading.\n     *\n     * Control flow:\n     *   1. Global handler.\n     *   2. Each page handler.\n     *   3. Application DONE event.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/load\n     *\n     * @param {Event} event generated object with event data\n     */\n    load: function ( event ) {\n        //var path;\n\n        //debug.event(event);\n        //console.log(event);\n\n        // time mark\n        //app.data.time.load = event.timeStamp;\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' load', 'green');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n\n        // time mark\n        //app.data.time.done = +new Date();\n\n        // everything is ready\n        // and there are some listeners\n        // if ( app.events['done'] ) {\n        //     // notify listeners\n        //     app.emit('done', event);\n        // }\n    },\n\n    /**\n     * The unload event is fired when the document or a child resource is being unloaded.\n     *\n     * Control flow:\n     *   1. Each page handler.\n     *   2. Global handler.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/unload\n     *\n     * @param {Event} event generated object with event data\n     */\n    unload: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' unload', 'red');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n    },\n\n    /**\n     * The error event is fired when a resource failed to load.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/error\n     *\n     * @param {Event} event generated object with event data\n     */\n    error: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n        //debug.fail('app event: ' + event.message, event, {tags: [event.type, 'event']});\n        console.error('app event: ' + event.message, event);\n    },\n\n    /**\n     * The keydown event is fired when a key is pressed down.\n     * Set event.stop to true in order to prevent bubbling.\n     *\n     * Control flow:\n     *   1. Current active component on the active page.\n     *   2. Current active page itself.\n     *   3. Application.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keydown\n     *\n     * @param {Event} event generated object with event data\n     */\n    keydown: function ( event ) {\n        var page = app.activePage,\n            eventLocal = {\n                code: event.keyCode,\n                stop: false\n            },\n            activeComponent;\n\n        if ( DEVELOP ) {\n            if ( !page ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        // filter phantoms\n        //if ( event.keyCode === 0 ) { return; }\n\n        // combined key code\n        //event.code = event.keyCode;\n\n        // apply key modifiers\n        if ( event.ctrlKey )  { eventLocal.code += 'c'; }\n        if ( event.altKey )   { eventLocal.code += 'a'; }\n        if ( event.shiftKey ) { eventLocal.code += 's'; }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + eventLocal.code, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + eventLocal.code, event);\n\n        // page.activeComponent can be set to null in event handles\n        activeComponent = page.activeComponent;\n\n        // current component handler\n        if ( activeComponent && activeComponent !== page ) {\n            // component is available and not page itself\n            if ( activeComponent.events[event.type] ) {\n                // there are some listeners\n                activeComponent.emit(event.type, eventLocal, event);\n            }\n\n            // todo: bubble event recursively\n            // bubbling\n            if (\n                !eventLocal.stop &&\n                activeComponent.propagate &&\n                activeComponent.parent &&\n                activeComponent.parent.events[event.type]\n            ) {\n                activeComponent.parent.emit(event.type, eventLocal, event);\n            }\n        }\n\n        // page handler\n        if ( !eventLocal.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, eventLocal, event);\n            }\n\n            // global app handler\n            if ( !event.stop ) {\n                // not prevented\n                if ( app.events[event.type] ) {\n                    // there are some listeners\n                    app.emit(event.type, eventLocal, event);\n                }\n            }\n        }\n\n        //// suppress non-printable keys in stb device (not in your browser)\n        //if ( app.data.host && keyCodes[event.code] ) {\n        //    event.preventDefault();\n        //}\n    },\n\n    /**\n     * The keypress event is fired when press a printable character.\n     * Delivers the event only to activeComponent at active page.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keypress\n     *\n     * @param {Event} event generated object with event data\n     * @param {string} event.char entered character\n     */\n    keypress: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + event.key, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + event.key, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n    },\n\n    /**\n     * The click event is fired when a pointing device button (usually a mouse button) is pressed and released on a single element.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/click\n     *\n     * @param {Event} event generated object with event data\n     */\n    /*click: function ( event ) {\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n     },*/\n\n    /**\n     * The contextmenu event is fired when the right button of the mouse is clicked (before the context menu is displayed),\n     * or when the context menu key is pressed (in which case the context menu is displayed at the bottom left of the focused\n     * element, unless the element is a tree, in which case the context menu is displayed at the bottom left of the current row).\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/contextmenu\n     *\n     * @param {Event} event generated object with event data\n     */\n    // contextmenu: function ( event ) {\n    //     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n    //\n    //     if ( !DEVELOP ) {\n    //         // disable right click in release mode\n    //         event.preventDefault();\n    //     }\n    // },\n\n    /*contextmenu: function ( event ) {\n     //var kbEvent = {}; //Object.create(document.createEvent('KeyboardEvent'));\n\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n\n     //kbEvent.type    = 'keydown';\n     //kbEvent.keyCode = 8;\n\n     //debug.log(kbEvent.type);\n\n     //globalEventListenerKeydown(kbEvent);\n     //var event = document.createEvent('KeyboardEvent');\n     //event.initEvent('keydown', true, true);\n\n     //document.dispatchEvent(kbEvent);\n\n     if ( !DEVELOP ) {\n     // disable right click in release mode\n     event.preventDefault();\n     }\n     },*/\n\n    /**\n     * The wheel event is fired when a wheel button of a pointing device (usually a mouse) is rotated.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel\n     *\n     * @param {Event} event generated object with event data\n     */\n    mousewheel: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n\n        // page handler\n        if ( !event.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, event);\n            }\n        }\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core');\n//    metrics = require('app:metrics'),\n//    linkCSS;\n\n\n// global link\n//app.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\n//app.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\n//app.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n// // set max browser window size\n// window.moveTo(0, 0);\n// window.resizeTo(metrics.width, metrics.height);\n\n// load CSS file base on resolution\n/*linkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = 'css/' + (DEVELOP ? 'develop.' : 'release.') + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);*/\n\n\n// public\nmodule.exports = function ( name ) {\n    var link = document.createElement('link');\n\n    link.rel  = 'stylesheet';\n    link.href = 'css/' + name + '.' + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\n    document.head.appendChild(link);\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-page');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-page';\n","/**\n * @license The MIT License (MIT)\n * @copyright Dmitry Fedotov <bas.jsdev@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys'),\n    classes   = {};\n\n\n// initialize classes\nclasses[keys.f1] = 'theme-icon-rc-f1';\nclasses[keys.f2] = 'theme-icon-rc-f2';\nclasses[keys.f3] = 'theme-icon-rc-f3';\nclasses[keys.f4] = 'theme-icon-rc-f4';\nclasses[keys.menu] = 'theme-icon-rc-menu';\nclasses[keys.ok] = 'theme-icon-rc-ok';\nclasses[keys.info] = 'theme-icon-rc-info';\nclasses[keys.playPause] = 'theme-icon-rc-play-pause';\nclasses[keys.back] = 'theme-icon-rc-back';\nclasses[keys.exit] = 'theme-icon-rc-home';\nclasses[keys.keyboard] = 'theme-icon-rc-vk';\nclasses[keys.refresh] = 'theme-icon-rc-refresh';\nclasses[keys.frame] = 'theme-icon-rc-aspect';\n\n/**\n * Footer.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}  config={} - init parameters\n * @param {Object}  config.parent - parent page\n * @param {boolean} [config.visible] - visibility flag\n * @param {Object}  [config.data] - footer buttons config\n * @param {Object}  [config.data.left] - left button config\n * @param {Object}  [config.data.middle] - middle buttons config\n * @param {Object}  [config.data.right] - right button config\n * @param {number}  [config.data.middle.code] - button key code\n * @param {Object}  [config.data.middle.title] - button title\n * @param {Object}  [config.data.middle.action] - button press (click) action\n * @param {Object}  [config.data.label] - button config (for remote control with long press)\n * @param {number}  [config.data.label.code] - button key code\n * @param {Object}  [config.data.label.title] - button title\n * @param {Object}  [config.data.label.action] - button press (click) action\n *\n * @example\n * page.footer = new Footer({\n *     parent: page,\n *     data: {\n *         left: {\n *             code: keys.menu, action: function () {}\n *         },\n *         middle: [\n *             {code: 55, action: function () {}},\n *             {code: keys.f1, title: 'stop', action: function () {}},\n *             {code: 9000, className: 'customIcon', title: 'start', action: function () {}},\n *             {code: keys.f4, title: 'end', action: function () {}}\n *         ],\n *         right: {\n *             code: 65, action: function () {}\n *         },\n *         label: {\n *             code: keys.menu, title: 'Hold OK button to open the task options', action: function () {}\n *         }\n *     }\n * });\n */\n\n/* eslint max-statements: 0 */\nfunction Footer ( config ) {\n    var currentTab = 0,\n        self       = this,\n        $body;\n\n    // sanitize\n    config = config || {};\n    // can't accept focus\n    config.focusable = false;\n    // hide by default\n    config.visible = config.visible || false;\n    // create centered div\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    this.tabs = [\n        {codes: {}},\n        {codes: {}},\n        {codes: {}},\n        {codes: {}}\n    ];\n\n    this.tab = 0;\n\n    this.$table = this.$node.appendChild(document.createElement('table'));\n    this.$table.insertRow();\n    this.$table.rows[0].insertCell(-1);\n\n    if ( TARGET !== 'android-stb' && TARGET !== 'android-app' ) {\n        this.$table.rows[0].insertCell(-1);\n        this.$table.rows[0].insertCell(-1);\n\n        this.$left = this.$table.rows[0].cells[0].appendChild(document.createElement('div'));\n        this.$left.className = 'theme-icon';\n\n        this.$table.rows[0].cells[1].className = 'central';\n        $body = this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    } else {\n        this.$table.rows[0].cells[0].className = 'central noButtons';\n        $body = this.tabs[currentTab].$body = this.$table.rows[0].cells[0].appendChild(document.createElement('div'));\n    }\n\n    $body.className = 'wrapper hidden';\n    $body.appendChild(document.createElement('div'));\n    $body.lastChild.className = 'button';\n    $body.lastChild.appendChild(document.createElement('div'));\n\n    if ( TARGET !== 'android-stb' && TARGET !== 'android-app' ) {\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n        $body = this.tabs[++currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n        $body.className = 'wrapper hidden';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n\n        $body = this.tabs[++currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n        $body.className = 'wrapper hidden';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n\n        $body = this.tabs[++currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n        $body.className = 'wrapper hidden';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n\n\n        this.$right = this.$table.rows[0].cells[2].appendChild(document.createElement('div'));\n        this.$right.className = 'theme-icon';\n    } else {\n        $body.lastChild.lastChild.className = 'title label';\n    }\n\n    this.init(config.data);\n\n    this.parent.addListener('keydown', function ( event ) {\n        var currTab = self.tabs[self.tab];\n\n        if ( self.visible ) {\n            if ( currTab.codes[event.code] && typeof currTab.codes[event.code].action === 'function' ) {\n                currTab.codes[event.code].action();\n            }\n        }\n    });\n}\n\n\n// inheritance\nFooter.prototype = Object.create(Component.prototype);\nFooter.prototype.constructor = Footer;\n\n// set component name\nFooter.prototype.name = 'mag-component-footer';\n\n\nif ( TARGET !== 'android-stb' && TARGET !== 'android-app' ) {\n    /**\n     * Redefine buttons\n     *\n     * @param {Object} [config] - footer buttons config\n     * @param {Object} [config.left] - left button config\n     * @param {number} [config.left.code] - left button key code\n     * @param {boolean} [config.left.disabled] - left button is disabled\n     * @param {Object} [config.left.action] - left button press (click) action\n     * @param {Object} [config.middle] - middle buttons config\n     * @param {Object} [config.right] - right button config\n     * @param {number} [config.right.code] - right button key code\n     * @param {boolean} [config.right.disabled] - right button is disabled\n     * @param {Object} [config.right.action] - right button press (click) action\n     * @param {number} [config.middle.code] - button key code\n     * @param {Object} [config.middle.title] - button title\n     * @param {boolean} [config.middle.disabled] - button is disabled\n     * @param {Object} [config.middle.action] - button press (click) action\n     * @param {Object} [config.label] - button config\n     * @param {number} [config.label.code] - button key code\n     * @param {Object} [config.label.title] - button title\n     * @param {Object} [config.label.action] - button press (click) action\n     *\n     * page.Footer.init({\n     *     left: {\n     *         code: keys.menu, action: function () {}\n     *     },\n     *     middle: [\n     *         {code: 55, action: function () {}},\n     *         {code: keys.f1, title: 'stop', action: function () {}},\n     *         {code: 9000, className: 'customIcon', title: 'start', action: function () {}},\n     *         {code: keys.f4, title: 'end', disabled: true}\n     *     ],\n     *     right: {\n     *         code: 65, action: function () {}\n     *     }\n     * });\n     *\n     */\n    Footer.prototype.init = function ( config ) {\n        var index, $tab, $tabChildren;\n\n        config = config || {};\n\n        if ( DEVELOP ) {\n            if ( config.middle && config.middle.length > 4 ) {\n                throw new Error(__filename + ': only 4 buttons allowed in footer');\n            }\n            if ( config.middle && Array.isArray(config.middle) ) {\n                for ( index = 0; index < config.middle.length; index++ ) {\n                    if ( typeof config.middle[index].action !== 'function' && !config.middle[index].disabled ) {\n                        throw new Error(__filename + ': action must be a function');\n                    }\n                    ++index;\n                }\n            }\n            if ( config.left && typeof config.left.action !== 'function' && !config.left.disabled ) {\n                throw new Error(__filename + ': action must be a function');\n            }\n            if ( config.right && typeof config.right.action !== 'function' && !config.right.disabled ) {\n                throw new Error(__filename + ': action must be a function');\n            }\n        }\n\n        // hide old tab\n        this.tabs[this.tab].$body.classList.add('hidden');\n        this.tab = config.middle && config.middle.length ? config.middle.length - 1 : 0;\n        // current tab shortcut\n        $tab = this.tabs[this.tab];\n        // reset all actions\n        $tab.codes = {};\n\n        // left button\n        if ( config.left ) {\n            this.$left.className = config.left.className || ('theme-icon ' + (classes[config.left.code] || 'theme-icon-warning'));\n            if ( config.left.disabled ) {\n                this.$left.classList.add('disabled');\n            } else {\n                $tab.codes[config.left.code] = {action: config.left.action};\n                this.$left.style.visibility = 'inherit';\n                this.$left.onclick = function () {\n                    if ( typeof config.left.action === 'function' ) {\n                        config.left.action();\n                    }\n                };\n            }\n        } else if ( this.$left.style.visibility !== 'hidden' ) {\n            this.$left.style.visibility = 'hidden';\n        }\n\n        // right button\n        if ( config.right ) {\n            this.$right.className = config.right.className || ('theme-icon ' + (classes[config.right.code] || 'theme-icon-warning'));\n            if ( config.right.disabled ) {\n                this.$right.classList.add('disabled');\n            } else {\n                $tab.codes[config.right.code] = {action: config.right.action};\n                this.$right.style.visibility = 'inherit';\n                this.$right.onclick = function () {\n                    if ( typeof config.right.action === 'function' ) {\n                        config.right.action();\n                    }\n                };\n            }\n        } else if ( this.$right.style.visibility !== 'hidden' ) {\n            this.$right.style.visibility = 'hidden';\n        }\n\n        function addClick ( ind ) {\n            return function () {\n                if ( typeof config.middle[ind].action === 'function' ) {\n                    config.middle[ind].action();\n                }\n            };\n        }\n\n        // middle buttons\n        if ( config.middle && config.middle.length ) {\n            for ( index = 0; index < config.middle.length; index++ ) {\n                $tab.codes[config.middle[index].code] = {action: config.middle[index].action};\n                if ( config.middle[index].disabled ) {\n                    $tab.$body.children[index].classList.add('disabled');\n                } else {\n                    $tab.$body.children[index].classList.remove('disabled');\n                    $tab.$body.children[index].onclick = addClick(index);\n                }\n                // shortcut\n                $tabChildren = $tab.$body.children[index].children;\n                $tabChildren[0].className = 'iconImg ' +\n                    (config.middle[index].className || ('theme-icon ' + (classes[config.middle[index].code] || 'theme-icon-warning')));\n\n                $tabChildren[1].innerText = config.middle[index].title || '';\n            }\n            $tab.$body.classList.remove('hidden');\n        }\n    };\n} else {\n    /**\n     * Redefine buttons for android\n     *\n     * @param {Object} [config] - footer config\n     * @param {Object} [config.label] - button config\n     * @param {number} [config.label.code] - button key code\n     * @param {Object} [config.label.title] - button title\n     * @param {Object} [config.label.action] - button press (click) action\n     *\n     * initLongPressMode({\n     *     label: {code: keys.menu, title: 'Hold OK button to open the task options', action: function () {}}\n     * });\n     *\n     */\n    Footer.prototype.init = function ( config ) {\n        var $tab, $tabChildren;\n\n        config = config || {};\n\n        // current tab shortcut\n        $tab = this.tabs[0];\n        // reset\n        $tab.codes = {};\n        $tab.$body.classList.add('hidden');\n\n        if ( config.label && typeof config.label.action === 'function' ) {\n            // label button\n            $tab.codes[config.label.code] = {action: config.label.action};\n            $tab.$body.children[0].onclick = function () {\n                if ( typeof config.label.action === 'function' ) {\n                    config.label.action();\n                }\n            };\n            // shortcut\n            $tabChildren = $tab.$body.children[0].children;\n            // $tabChildren[0].className = '';\n            $tabChildren[0].innerText = config.label.title || '';\n\n            $tab.$body.classList.remove('hidden');\n        }\n    };\n}\n\n\n// public\nmodule.exports = Footer;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n/**\n * Magsdk panel set implementation\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {Array} [config.panels] array of panels to use\n * @param {Array} [config.focusIndex=0] focus panel index\n * @constructor\n * @extends Component\n */\nfunction PanelSet ( config ) {\n    var self = this,\n        index;\n\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.panels && !Array.isArray(config.panels) || !config.panels.length ) {\n            throw new Error(__filename + ': wrong config.panels type');\n        }\n    }\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'panelSet ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    this.panels = config.panels;\n\n    /**\n     * Index of current active panel\n     *\n     * @type {number}\n     */\n    this.focusIndex = 0;\n\n    // set special panels classes\n    if ( config.panels && !config.panels[0].main ) {\n        config.panels[0].$node.classList.add('left');\n        // small resolution special class\n        config.panels[0].$node.classList.add('expand');\n    }\n\n    if (  config.panels && config.panels[1] && config.panels[1].main ) {\n        // small resolution special class\n        config.panels[1].$node.classList.add('position-right');\n    }\n\n    if ( config.panels && config.panels[2] && config.panels[1].main ) {\n        config.panels[2].$node.classList.add('right');\n    }\n\n    // add panels\n    if ( config.panels ) {\n        this.add.apply(this, config.panels);\n    }\n\n    // panel keydown handler to set focus panel\n    function keydownHandler ( event ) {\n        switch ( event.code ) {\n            case keys.left:\n                if ( self.focusIndex > 0 ) {\n                    self.panels[self.focusIndex - 1].focus();\n                }\n                break;\n            case keys.right:\n                if ( self.focusIndex < self.panels.length - 1 ) {\n                    self.panels[self.focusIndex + 1].focus();\n                }\n                break;\n        }\n    }\n\n    // add special listener\n    for ( index = 0; index < this.panels.length; index++ ) {\n        this.panels[index].addListeners({\n            keydown: keydownHandler\n        });\n        // set panels indexes\n        this.panels[index].index = index;\n    }\n\n    /*if ( config.focusIndex && config.focusIndex < this.panels.length ) {\n     this.panels[config.focusIndex].focus();\n     } else {\n     if ( config.panels.length > 1 ) {\n     this.panels[1].focus();\n     } else {\n     this.panels[0].focus();\n     }\n     }*/\n}\n\nPanelSet.prototype = Object.create(Component.prototype);\nPanelSet.prototype.constructor = PanelSet;\n\n// set component name\nPanelSet.prototype.name = 'mag-component-panel-set';\n\n\n/**\n *\n */\nPanelSet.prototype.focus = function () {\n    Component.prototype.focus.call(this);\n    this.panels[this.focusIndex].focus();\n};\n\n/**\n *\n */\nPanelSet.prototype.blur = function () {\n    this.panels[this.focusIndex].blur();\n};\n\nmodule.exports = PanelSet;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    Layout = require('mag-component-layout');\n\n\n/**\n * Extended panel implementation.\n *\n * @constructor\n * @extends Component\n * @param {Object} [config={}] - init parameters (all inherited from the parent)\n * @param {boolean} [config.main=false] - set panel as main\n * @param {boolean} [config.size=1] - size of panel width\n *\n * @example\n * main = new Panel({\n *     size: 1,\n *     title: ['Left Panel', {className: 'info'}],\n *     main: true,\n *     children: [\n *         new List({\n *             data: ['1 bla', '2 bro', '3 car', '4 hoho', 'Search'],\n *             size: 5\n *         })\n *     ]\n * });\n */\nfunction Panel ( config ) {\n    var $overlay;\n\n    config = config || {};\n\n    /**\n     * Size of panel.\n     *\n     * @type {number}\n     */\n    this.size = 1;\n\n    /**\n     * Set panel as main.\n     *\n     * @type {boolean}\n     */\n    this.main = false;\n\n    /**\n     * Index in panel set.\n     *\n     * @type {number}\n     */\n    this.index = 0;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    // set default className if classList property empty or undefined\n    //config.className = 'Panel ' + (config.className || '');\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    //this.$node.classList.add('theme-main');\n    //this.$node.classList.add('theme-panel');\n\n    // add special class to set component size\n    if ( config.size ) {\n        this.size = config.size;\n        this.$node.classList.add('size' + config.size);\n    }\n\n    // add special class to set main panel\n    if ( config.main ) {\n        this.main = true;\n        this.$node.classList.add('main');\n    }\n\n    // create elements to set as component shadows\n    this.shadows = {\n        $left: document.createElement('div'),\n        $right: document.createElement('div')\n    };\n\n    this.shadows.$left.className = 'shadow left';\n    this.$node.appendChild(this.shadows.$left);\n\n    this.shadows.$right.className = 'shadow right';\n    this.$node.appendChild(this.shadows.$right);\n\n    // add title to panel\n    if ( config.title ) {\n        if ( !Array.isArray(config.title) ) {\n            config.title = [config.title];\n        }\n\n        this.title = new Layout({\n            //className: 'title theme-header theme-title',\n            className: 'title',\n            data: config.title,\n            focusable: false\n        });\n        this.$node.appendChild(this.title.$node);\n    }\n\n    this.$node.appendChild(this.$body);\n\n    $overlay = document.createElement('div');\n    $overlay.className = 'overlay';\n    this.$node.appendChild($overlay);\n}\n\n\n// inheritance\nPanel.prototype = Object.create(Component.prototype);\nPanel.prototype.constructor = Panel;\n\n// set component name\nPanel.prototype.name = 'mag-component-panel';\n\n\n/**\n * Define default events.\n *\n * @type {{focus: Function}} try to focus first child component if it present\n */\nPanel.prototype.defaultEvents = {\n    focus: function () {\n        if ( this.children.length ) {\n            this.children[0].focus();\n        }\n    }\n};\n\n\n/**\n * Redefine default component focus to set panel as active even when give focus to children components.\n */\nPanel.prototype.focus = function () {\n    if ( this.focusable ) {\n        this.parent.panels[this.parent.focusIndex].$node.classList.remove('active');\n        this.parent.panels[this.parent.focusIndex].$node.classList.remove('top');\n\n        Component.prototype.focus.call(this);\n\n        this.parent.focusIndex = this.index;\n        this.$node.classList.add('active');\n        this.$node.classList.add('top');\n\n        if ( this.index === 0 && this.parent.panels[1] && this.parent.panels[1].main ) {\n            this.parent.panels[1].$node.classList.remove('position-left');\n            this.parent.panels[1].$node.classList.add('position-right');\n\n            if ( this.parent.panels[2] ) {\n                this.parent.panels[2].$node.classList.remove('expand');\n            }\n\n            this.$node.classList.add('expand');\n        } else if ( this.index === 2 && this.parent.panels[1].main ) {\n            this.parent.panels[1].$node.classList.remove('position-right');\n            this.parent.panels[1].$node.classList.add('position-left');\n            this.parent.panels[0].$node.classList.remove('expand');\n            this.$node.classList.add('expand');\n        }\n    }\n};\n\n\n/**\n * Blur panel.\n */\nPanel.prototype.blur = function () {\n    this.parent.panels[this.parent.focusIndex].$node.classList.remove('active');\n    Component.prototype.blur.call(this);\n};\n\n\n// public\nmodule.exports = Panel;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n/* eslint complexity: [error, 37] */\n/* eslint max-lines-per-function: 1 */\n/* eslint no-fallthrough: 1 */\n/* eslint complexity: 1 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n\n/**\n * Mouse click event.\n *\n * @event module:stb/ui/list~List#click:item\n *\n * @type {Object}\n * @property {Element} $item clicked HTML item\n * @property {Event} event click event data\n */\n\n\n/**\n * Base list implementation.\n *\n * Each data item can be either a primitive value or an object with these fields:\n *\n *  Name    | Description\n * ---------|-------------\n *  value   | actual cell value to render\n *  mark    | is it necessary or not to render this cell as marked\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array}    [config.data=[]]     component data to visualize\n * @param {function} [config.render]      method to build each grid cell content\n * @param {function} [config.navigate]    method to move focus according to pressed keys\n * @param {number}   [config.size=5]      amount of visible items on a page\n * @param {number}   [config.viewIndex=0] move view window to this position on init\n * @param {number}   [config.focusIndex]  list item index to make item focused (move view window to this position)\n * @param {boolean}  [config.cycle=true]  allow or not to jump to the opposite side of a list when there is nowhere to go next\n * @param {boolean}  [config.scroll=null] associated ScrollBar component link\n * @param {Object}   [config.provider]    data provider\n *\n * @fires module:stb/ui/list~List#click:item\n */\nfunction List ( config ) {\n    // current execution context\n    //var self = this;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Link to the currently focused DOM element.\n     *\n     * @type {Element}\n     */\n    this.$focusItem = null;\n\n    /**\n     * Position of the visible window to render.\n     *\n     * @type {number}\n     */\n    this.viewIndex = null;\n\n    /**\n     * Component data to visualize.\n     *\n     * @type {Array}\n     */\n    this.data = [];\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Amount of visible items on a page.\n     *\n     * @type {number}\n     */\n    this.size = 5;\n\n    /**\n     * Allow or not to jump to the opposite side of a list when there is nowhere to go next.\n     *\n     * @type {boolean}\n     */\n    this.cycle = false;\n\n    /**\n     * Associated ScrollBar component link.\n     *\n     * @type {ScrollBar}\n     */\n    this.scroll = null;\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    /**\n     * Associated data provider\n     *\n     * @type {Provider}\n     */\n    this.provider = null;\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    //config.className += ' theme-main';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // component setup\n    this.init(config);\n\n    // custom navigation method\n    //if ( config.navigate ) {\n    //    if ( DEVELOP ) {\n    //        if ( typeof config.navigate !== 'function' ) { throw new Error(__filename + ': wrong config.navigate type'); }\n    //    }\n    //    // apply\n    //    this.navigate = config.navigate;\n    //}\n\n    // navigation by keyboard\n    //this.addListener('keydown', this.navigate);\n\n    // navigation by mouse\n    //this.$body.addEventListener('mousewheel', function ( event ) {\n    //    // scrolling by Y axis\n    //    if ( self.type === self.TYPE_VERTICAL && event.wheelDeltaY ) {\n    //        self.move(event.wheelDeltaY > 0 ? 38 : keys.down);\n    //    }\n    //\n    //    // scrolling by X axis\n    //    if ( self.type === self.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n    //        self.move(event.wheelDeltaX > 0 ? 37 : 39);\n    //    }\n    //});\n}\n\n\n// inheritance\nList.prototype = Object.create(Component.prototype);\nList.prototype.constructor = List;\n\n// set component name\nList.prototype.name = 'mag-component-list';\n\nList.prototype.TYPE_VERTICAL   = 1;\nList.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Fill the given item with data.\n *\n * @param {Element} $item item DOM link\n * @param {*} data associated with this item data\n */\nList.prototype.renderItemDefault = function ( $item, data ) {\n    $item.innerText = data.value;\n};\n\n\n/**\n * Method to build each list item content.\n * Can be redefined to provide custom rendering.\n *\n * @type {function}\n */\nList.prototype.renderItem = List.prototype.renderItemDefault;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nList.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse wheel events.\n     *\n     * @param {Event} event generated event\n     */\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        if ( this.type === this.TYPE_VERTICAL && event.wheelDeltaY ) {\n            this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n        }\n\n        // scrolling by X axis\n        if ( this.type === this.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n            this.move(event.wheelDeltaX > 0 ? keys.left : keys.right);\n        }\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n            case keys.right:\n            case keys.left:\n            case keys.pageUp:\n            case keys.pageDown:\n            case keys.home:\n            case keys.end:\n                // cursor move only on arrow keys\n                this.move(event.code);\n                break;\n            case keys.enter:\n                // there are some listeners\n                if ( this.events['click:item'] && this.$focusItem ) {\n                    // notify listeners\n                    this.emit('click:item', {$item: this.$focusItem, event: event});\n                }\n                break;\n        }\n    }\n};\n\n\n/**\n * Default method to move focus according to pressed keys.\n *\n * @param {Object} event generated event source of movement\n */\n//List.prototype.navigateDefault = function ( event ) {\n//    switch ( event.code ) {\n//        case 38:\n//        case 40:\n//        case 39:\n//        case 37:\n//        case 33:\n//        case 34:\n//        case 36:\n//        case 35:\n//            // cursor move only on arrow keys\n//            this.move(event.code);\n//            break;\n//        case 13:\n//            // there are some listeners\n//            if ( this.events['click:item'] ) {\n//                // notify listeners\n//                this.emit('click:item', {$item: this.$focusItem, event: event});\n//            }\n//            break;\n//    }\n//};\n\n\n/**\n * Current active method to move focus according to pressed keys.\n * Can be redefined to provide custom navigation.\n *\n * @type {function}\n */\n//List.prototype.navigate = List.prototype.navigateDefault;\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var idx, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( idx = 0; idx < data.length; idx++ ) {\n        // cell value\n        item = data[idx];\n        // primitive value\n        if ( typeof item !== 'object' ) {\n            // wrap with defaults\n            item = data[idx] = {\n                value: data[idx]\n            };\n        }\n\n        if ( DEVELOP ) {\n            //if ( !('value' in item) ) { throw new Error(__filename + ': field \"value\" is missing'); }\n            if ( ('mark' in item) && Boolean(item.mark) !== item.mark ) {\n                throw new Error(__filename + ': item.mark must be boolean');\n            }\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.init = function ( config ) {\n    var self     = this,\n        currSize = this.$body.children.length,\n        /**\n         * Item mouse click handler.\n         *\n         * @param {Event} event click event data\n         *\n         * @this Element\n         *\n         * @fires module:stb/ui/list~List#click:item\n         */\n        onClick = function ( event ) {\n            if ( this.data ) {\n                self.focusItem(this);\n\n                // there are some listeners\n                if ( self.events['click:item'] ) {\n                    // notify listeners\n                    self.emit('click:item', {$item: this, event: event});\n                }\n            }\n        },\n        item, idx;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // apply cycle behaviour\n    if ( config.cycle !== undefined ) { this.cycle = config.cycle; }\n\n    // apply ScrollBar link\n    if ( config.scroll ) { this.scroll = config.scroll; }\n\n    // apply data provider\n    if ( config.provider ) { this.provider = config.provider; }\n\n\n    // custom render method\n    if ( config.render ) {\n        if ( DEVELOP ) {\n            if ( typeof config.render !== 'function' ) {\n                throw new Error(__filename + ': wrong config.render type');\n            }\n        }\n\n        // apply\n        this.renderItem = config.render;\n    }\n\n    // list items amount on page\n    if ( config.size ) {\n        if ( DEVELOP ) {\n            if ( Number(config.size) !== config.size ) {\n                throw new Error(__filename + ': config.size must be a number');\n            }\n            if ( config.size <= 0 ) {\n                throw new Error(__filename + ': config.size should be positive');\n            }\n        }\n\n        // apply\n        this.size = config.size;\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( name ) {\n            self.events[name] = null;\n            self.addListener(name, config.events[name]);\n        });\n    }\n\n    // geometry has changed or initial draw\n    if ( this.size !== currSize ) {\n        // non-empty list\n        if ( currSize > 0 ) {\n            // clear old items\n            this.$body.innerText = null;\n        }\n\n        // create new items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            item = document.createElement('div');\n            item.index = idx;\n            //item.className = 'item theme-list-item';\n            item.className = 'item';\n\n            item.addEventListener('click', onClick);\n            this.$body.appendChild(item);\n        }\n    }\n\n    if ( this.provider ) {\n        if ( this.provider.blocked ) {\n            return;\n        }\n\n        this.provider.get( null, function ( error, data ) {\n            if ( error ) {\n                if ( self.events['data:error'] ) {\n                    /**\n                     * Provider get error while take new data\n                     *\n                     * @event module:stb/ui/list~List#data:error\n                     */\n                    self.emit('data:error', error);\n                }\n            } else {\n                if ( data ) {\n                    config.data = data;\n                    self.setData(config);\n                    if ( self.scroll ) {\n                        self.scroll.init({\n                            realSize: self.provider.maxCount,\n                            viewSize: self.provider.size,\n                            value: self.provider.head + self.provider.pos\n                        });\n                    }\n                }\n                if ( self.events['data:get'] ) {\n                    /**\n                     * Provider request new data\n                     *\n                     * @event module:stb/ui/list~List#data:get\n                     *\n                     * @type {Object}\n                     */\n                    self.emit('data:get');\n                }\n            }\n        });\n    } else if ( config.data ) {\n        this.setData(config);\n    }\n};\n\n/**\n * Set data and render inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.setData = function ( config ) {\n    // apply list of items\n\n    if ( config.data ) {\n        if ( DEVELOP ) {\n            if ( !Array.isArray(config.data) ) { throw new Error(__filename + ': wrong config.data type'); }\n        }\n        // prepare user data\n        this.data = normalize(config.data);\n    }\n\n    // view window position\n    if ( DEVELOP ) {\n        if ( config.viewIndex !== undefined ) {\n            if ( Number(config.viewIndex) !== config.viewIndex ) {\n                throw new Error(__filename + ': config.viewIndex must be a number');\n            }\n            if ( config.viewIndex < 0 ) {\n                throw new Error(__filename + ': config.viewIndex should be positive');\n            }\n        }\n    }\n\n    // reset current view window position\n    this.viewIndex = null;\n\n    if ( this.$focusItem ) {\n        this.blurItem(this.$focusItem);\n    }\n\n    if ( this.scroll ) {\n        if ( this.provider ) {\n            if ( this.scroll.realSize !== this.provider.maxCount ) {\n                this.scroll.init({\n                    realSize: this.provider.maxCount,\n                    viewSize: this.provider.size,\n                    value: this.provider.head + this.provider.pos\n                });\n            }\n        } else {\n            this.scroll.init({\n                realSize: this.data.length,\n                viewSize: this.size,\n                value: config.viewIndex || 0\n            });\n        }\n    }\n\n    // set focus item\n    if ( config.focusIndex !== undefined && this.data.length ) {\n        if ( DEVELOP ) {\n            if ( Number(config.focusIndex) !== config.focusIndex ) {\n                throw new Error(__filename + ': config.focusIndex must be a number');\n            }\n            if ( config.focusIndex < 0 ) {\n                throw new Error(__filename + ': config.focusIndex should be positive');\n            }\n            // if ( config.focusIndex > this.data.length - 1 ) {\n            //     throw new Error(__filename + ': config.focusIndex should be less than data size');\n            // }\n        }\n\n        // jump to the necessary item\n        this.focusIndex(config.focusIndex);\n    } else {\n        // go to the first page\n        this.renderView(config.viewIndex || 0);\n    }\n};\n\n\n/**\n * Shift the visible view window event.\n *\n * @event module:stb/ui/list~List#move:view\n *\n * @type {Object}\n * @property {number} prevIndex previous view window position\n * @property {number} currIndex current view window position\n */\n\n\n/**\n * Draw the visible window.\n *\n * @param {number} index start position to render\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#move:view\n */\nList.prototype.renderView = function ( index ) {\n    var $item, idx, itemData, prevIndex, currIndex;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be more than zero');\n        }\n        // if ( index >= this.data.length ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // has the view window position changed\n    if ( this.viewIndex !== index ) {\n        // save for emit\n        prevIndex = this.viewIndex;\n        // sync global pointer\n        this.viewIndex = currIndex = index;\n\n        // rebuild all visible items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            // shortcuts\n            $item    = this.$body.children[idx];\n            itemData = this.data[index];\n\n            // real item or stub\n            if ( itemData ) {\n                // correct inner data/index and render\n                $item.data  = itemData;\n                $item.index = index;\n                this.renderItem($item, itemData);\n\n                // apply CSS\n                if ( itemData.mark ) {\n                    $item.classList.add('mark');\n                } else {\n                    $item.classList.remove('mark');\n                }\n            } else {\n                // nothing to render\n                $item.data = $item.index = undefined;\n                $item.innerHTML = '&nbsp;';\n                $item.ready = false;\n            }\n            index++;\n        }\n\n        // there are some listeners\n        if ( this.events['move:view'] ) {\n            // notify listeners\n            this.emit('move:view', {prevIndex: prevIndex, currIndex: currIndex});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            this.emit('select:item', {$item: $item});\n        }\n\n        // update a linked scroll component\n        if ( this.scroll ) {\n            this.scroll.scrollTo(this.provider ? this.provider.head + this.provider.pos : this.viewIndex);\n        }\n\n        // full rebuild\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Move focus to the given direction.\n *\n * @param {number} direction arrow key code\n *\n * @fires module:stb/ui/list~List#cycle\n * @fires module:stb/ui/list~List#overflow\n */\nList.prototype.move = function ( direction ) {\n    var self = this,\n        force = false;\n\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(direction) !== direction ) {\n            throw new Error(__filename + ': direction must be a number');\n        }\n    }\n\n    // empty list\n    if ( !this.data.length ) {\n        return;\n    }\n\n    switch ( direction ) {\n        case keys.left:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.up:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index > 0 ) {\n                    if ( this.$focusItem === this.$body.firstChild ) {\n                        this.renderView(this.viewIndex - 1);\n                    } else {\n                        this.focusItem(this.$focusItem.previousSibling);\n                    }\n                } else if ( this.provider ) {\n                    if ( this.provider.blocked ) {\n                        return;\n                    }\n\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the end of the list\n                        this.move(keys.end);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.right:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.down:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index < this.data.length - 1 ) {\n                    if ( this.$focusItem === this.$body.lastChild ) {\n                        this.renderView(this.viewIndex + 1);\n                    } else {\n                        this.focusItem(this.$focusItem.nextSibling);\n                    }\n                } else if ( this.provider ) {\n                    if ( this.provider.blocked ) {\n                        return;\n                    }\n\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the beginning of the list\n                        this.move(keys.home);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.pageUp:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n\n                return;\n            }\n            if ( this.viewIndex < this.size ) {\n                // first page\n                this.renderView(0);\n            } else {\n                // second page and further\n                this.renderView(this.viewIndex - this.size + 1);\n            }\n\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.pageDown:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            // data is bigger then one page\n            if ( this.data.length > this.size ) {\n                // determine jump size\n                if ( this.viewIndex > this.data.length - this.size * 2 ) {\n                    // last page\n                    this.renderView(this.data.length - this.size);\n                } else {\n                    // before the last page\n                    this.renderView(this.viewIndex + this.size - 1);\n                }\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n        case keys.home:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n                break;\n            }\n            this.renderView(0);\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.end:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            if ( this.data.length > this.size ) {\n                this.renderView(this.data.length - this.size);\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n    }\n};\n\n\n/**\n * Highlight the given DOM element as focused.\n * Remove focus from the previously focused item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.focusItem = function ( $item ) {\n    var $prev = this.$focusItem;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n    }\n\n    // different element\n    if ( $item && $prev !== $item ) {\n        if ( DEVELOP ) {\n            if ( !($item instanceof Element) ) {\n                throw new Error(__filename + ': wrong $item type');\n            }\n            if ( $item.parentNode !== this.$body ) {\n                throw new Error(__filename + ': wrong $item parent element');\n            }\n        }\n\n        // some item is focused already\n        if ( $prev !== null ) {\n            if ( DEVELOP ) {\n                if ( !($prev instanceof Element) ) {\n                    throw new Error(__filename + ': wrong $prev type');\n                }\n            }\n\n            // style\n            $prev.classList.remove('focus');\n            //$prev.classList.remove('theme-focus');\n\n            // there are some listeners\n            if ( this.events['blur:item'] ) {\n                /**\n                 * Remove focus from an element.\n                 *\n                 * @event module:stb/ui/list~List#blur:item\n                 *\n                 * @type {Object}\n                 * @property {Element} $item previously focused HTML element\n                 */\n                this.emit('blur:item', {$item: $prev});\n            }\n        }\n        // reassign\n        this.$focusItem = $item;\n\n        this.$focusItem.data = this.data[this.$focusItem.index];\n\n        // correct CSS\n        $item.classList.add('focus');\n        //$item.classList.add('theme-focus');\n\n        // there are some listeners\n        if ( this.events['focus:item'] ) {\n            /**\n             * Set focus to a DOM element.\n             *\n             * @event module:stb/ui/list~List#focus:item\n             *\n             * @type {Object}\n             * @property {Element} $prev old/previous focused HTML element\n             * @property {Element} $curr new/current focused HTML element\n             */\n            this.emit('focus:item', {$prev: $prev, $curr: $item});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            /**\n             * Set focus to a list item.\n             *\n             * @event module:stb/ui/list~List#select:item\n             *\n             * @type {Object}\n             * @property {Element} $item new/current focused item\n             */\n            this.emit('select:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Highlight the given DOM element as blur.\n * Remove focus from the item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.blurItem = function ( $item ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) { throw new Error(__filename + ': wrong arguments number'); }\n    }\n\n    // different element\n    if ( $item ) {\n        if ( $item === this.$focusItem ) {\n            this.$focusItem = null;\n        }\n\n        $item.classList.remove('focus');\n        //$item.classList.remove('theme-focus');\n\n        // there are some listeners\n        if ( this.events['blur:item'] ) {\n            /**\n             * Remove focus from an element.\n             *\n             * @event module:stb/ui/list~List#blur:item\n             *\n             * @type {Object}\n             * @property {Element} $item previously focused HTML element\n             */\n            this.emit('blur:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Set the given item focused by item index.\n *\n * @param {number} index item data index\n */\nList.prototype.focusIndex = function ( index ) {\n    var viewIndex = this.viewIndex || 0;\n\n    if ( DEVELOP ) {\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be positive');\n        }\n        // if ( index > this.data.length - 1 ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // determine direction\n    if ( index >= viewIndex + this.size ) {\n        // check range\n        index = index < this.data.length - 1 ? index : this.data.length - 1;\n        // move down\n        this.renderView(index - this.size + 1);\n        this.focusItem(this.$body.lastChild);\n    } else if ( index < viewIndex ) {\n        // check range\n        index = index > 0 ? index : 0;\n        // move up\n        this.renderView(index);\n        this.focusItem(this.$body.firstChild);\n    } else {\n        // no move\n        if ( this.viewIndex === null ) {\n            // first attempt\n            this.renderView(0);\n        }\n        this.focusItem(this.$body.children[index - viewIndex]);\n    }\n};\n\n\n/**\n * Set item state and appearance as marked.\n *\n * @param {Node|Element} $item element to focus\n * @param {boolean} state true - marked, false - not marked\n */\nList.prototype.markItem = function ( $item, state ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 2 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !($item instanceof Element) ) {\n            throw new Error(__filename + ': wrong $item type');\n        }\n        if ( $item.parentNode !== this.$body ) {\n            throw new Error(__filename + ': wrong $item parent element');\n        }\n        if ( Boolean(state) !== state ) {\n            throw new Error(__filename + ': state must be boolean');\n        }\n    }\n\n    // correct CSS\n    if ( state ) {\n        $item.classList.add('mark');\n    } else {\n        $item.classList.remove('mark');\n    }\n\n    // apply flag\n    $item.data.mark = state;\n};\n\n\n// public\nmodule.exports = List;\n","'use strict';\n\n/* eslint no-continue: 0 */\nmodule.exports = function ( list, language, file ) {\n    var selected = null,\n        index, languageCode0, languageCode1;\n\n    if ( list && list.length !== 0 ) {\n        if ( list.length === 1 ) {\n            selected = list[0];\n        } else {\n            if ( language.length ) {\n                if ( language.length > 1 ) {\n                    languageCode1 = language[1];\n                }\n                languageCode0 = language[0];\n                if ( languageCode0 === '' && (!languageCode1 || languageCode1 === '') ) {\n                    if ( file.languages.length ) {\n                        languageCode0 = file.languages[0];\n                    }\n                }\n            } else if ( file.languages.length ) {\n                languageCode0 = file.languages[0];\n            }\n\n            for ( index = 0; index < list.length; index++ ) {\n                if ( list[index].value ) {\n                    if (\n                        list[index].value.languages.indexOf(languageCode0) !== -1\n                        || (languageCode1 && list[index].value.languages.indexOf(languageCode1) !== -1)\n                    ) {\n                        if ( list[index].value.quality.width === file.quality.width ) {\n                            selected = list[index];\n                            break;\n                        }\n\n                        if ( list[index].value.quality.width > file.quality.width ) {\n                            selected = {\n                                value: list[index].value,\n                                index: index\n                            };\n                            continue;\n                        }\n\n                        selected = {\n                            value: list[index].value,\n                            index: index\n                        };\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    return selected;\n};\n","'use strict';\n\nmodule.exports = function ( time ) {\n    var min, hour;\n\n    hour = Math.floor(time / 3600);\n    time -= hour * 3600;\n    min = Math.floor(time / 60);\n    time -= 60 * min;\n\n    hour = hour || '0';\n    if ( min ) {\n        min = min > 9 ? min : '0' + min;\n    } else {\n        min = '00';\n    }\n    time = time > 9 ? time : '0' + time;\n\n    return hour + ':' + min + ':' + time;\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component'),\n    keys      = require('stb-keys');\n\n\n/**\n * Scroll area implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} config object\n * @param {number} [config.step] step in % of screen height to scroll area\n */\nfunction ScrollArea ( config ) {\n\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    /**\n     * Step to scroll area in % of screen height\n     *\n     * @type {number}\n     */\n    this.step = 5;\n\n    /**\n     * Real height of scroll area\n     *\n     * @type {number}\n     */\n    this.realHeight = 0;\n\n    /**\n     * Visible height of area\n     *\n     * @type {number}\n     */\n    this.viewHeight = 0;\n\n    /**\n     * Top position of scroll container\n     *\n     * @type {number}\n     */\n    this.topPosition = 0;\n\n    /**\n     * Associated ScrollBar component link.\n     *\n     * @type {ScrollBar}\n     */\n    this.scroll = null;\n\n    Component.call(this, config);\n\n    this.$node.appendChild(this.$body);\n\n    // component setup\n    this.init(config);\n}\n\n\nScrollArea.prototype = Object.create(Component.prototype);\nScrollArea.prototype.constructor = ScrollArea;\n\n// set component name\nScrollArea.prototype.name = 'mag-component-scroll-area';\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nScrollArea.prototype.defaultEvents = {\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n                this.move(event.code);\n                break;\n        }\n    },\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n    }\n};\n\n\n/**\n * Attempt to go beyond the edge of the list.\n *\n * @event\n *\n * @type {Object}\n * @property {number} direction key code initiator of movement\n */\n\n\n/**\n * Move ScrollArea content\n *\n * @param {number} direction to move\n */\nScrollArea.prototype.move = function ( direction ) {\n    var height = screen.height,\n        delta  = this.viewHeight - this.realHeight;\n\n    // run logic only if it's reasonable to navigate\n    if ( delta < 0 ) {\n        switch ( direction ) {\n            case keys.down:\n                if ( this.topPosition - this.step * height / 100 < delta ) {\n                    this.scroll.scrollTo(-delta);\n                    this.$body.style.top = delta + 'px';\n                    this.emit('overflow', {direction: direction});\n\n                    return;\n                }\n\n                this.topPosition -= Math.ceil(this.step * height / 100);\n\n                if ( this.scroll ) {\n                    this.scroll.scrollTo(-this.topPosition);\n                }\n                this.$body.style.top = this.topPosition + 'px';\n                break;\n            case keys.up:\n                if ( this.topPosition + this.step * height / 100 > 0 ) {\n                    this.scroll.scrollTo(0);\n                    this.$body.style.top = '0px';\n                    this.emit('overflow', {direction: direction});\n\n                    return;\n                }\n                this.topPosition += Math.ceil(this.step * height / 100);\n\n                if ( this.scroll ) {\n                    this.scroll.scrollTo(-this.topPosition);\n                }\n                this.$body.style.top = this.topPosition + 'px';\n                break;\n        }\n    } else {\n        this.emit('overflow', {direction: direction});\n    }\n};\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nScrollArea.prototype.init = function ( config ) {\n\n    config = config || {};\n\n    this.realHeight = this.$body.offsetHeight;\n    this.viewHeight = this.$node.offsetHeight;\n    this.topPosition = 0;\n    this.$body.style.top = this.topPosition + 'px';\n\n    if ( config.scroll ) {\n        this.scroll = config.scroll;\n    }\n\n    if ( config.step ) {\n        this.step = config.step;\n    }\n\n    if ( this.scroll ) {\n        this.scroll.init({\n            realSize: this.realHeight,\n            viewSize: this.viewHeight,\n            value: this.topPosition\n        });\n    }\n};\n\nmodule.exports = ScrollArea;\n","/**\n * Main application entry point.\n */\n\n'use strict';\n\nvar keys = require('stb-keys'),\n    app = require('mag-app');\n\nif ( TARGET === 'android-stb' || TARGET === 'android-app' ) {\n    window.removeEventListener('keydown', require('spa-app/lib/events').keydown);\n    require('../../../helpers/longpress.js')(app, {code: keys.ok, emitCode: keys.menu});\n}\n\napp.once('load', function () {\n    app.api = core.plugins.videoBackend;\n\n    app.api.config = {\n        sort: '',\n        genreId: '',\n        categoryId: '',\n        favorite: false,\n        search: '',\n        limit: 0\n    };\n\n    require('spa-gettext').load({name: core.environment.language}, function ( error ) {\n        if ( error ) {\n            debug.inspect(error);\n        }\n\n        // load pages\n        app.pages = {\n            main: require('./pages/main'),\n            info: require('./pages/info')\n        };\n\n        // show main page\n        app.route(app.pages.main);\n    });\n});\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app    = require('spa-app/lib/core'),\n    events = require('spa-app/lib/events');\n\n\n// get instance\nwindow.core = window.parent.getCoreInstance(window, app);\n\n// shims\nrequire('stb-shim-classlist');\n\n// apply geometry\nrequire('stb-app/lib/metrics');\n\n// load sdk css\nrequire('stb-app/lib/css')('sdk');\n\n// load theme css\nrequire('./css');\n\n// load app css\nrequire('stb-app/lib/css')('app');\n\n/**\n * Specify platform name\n *\n * @type {string}\n */\napp.platform = 'mag';\n\n/**\n * Show app.\n */\napp.ready = function () {\n    // if ( this.events['show'] ) {\n    //     this.emit('show');\n    // }\n    window.core.call('app:ready');\n};\n\n\n/**\n * Exit from app.\n * Destroy all application instance.\n * If callback function provided, and callback returns boolean 'true', application will stay alive.\n *\n * @fires module:/stb/app#exit\n */\napp.exit = function () {\n    if ( app.events['exit'] ) {\n        app.emit('exit');\n    }\n\n    core.call('exit');\n};\n\n\nevents.load = function ( event ) {\n    //window.core = window.parent.getCoreInstanse(window, app);\n    document.body.setAttribute('platform', app.platform);\n\n    if ( core.ready ) {\n        if ( app.events['load'] ) {\n            // notify listeners\n            app.emit('load', {});\n        }\n    } else {\n        core.once('load', function () {\n            //core.ready = true;\n            if ( app.events[event.type] ) {\n                // notify listeners\n                app.emit(event.type, event);\n            }\n        });\n    }\n};\n\n\n// activate development mechanisms and tools\nif ( DEVELOP ) {\n    //require('stb-develop');\n    require('./develop/main');\n} else {\n    // disable context menu\n    events.contextmenu = function ( event ) {\n        event.preventDefault();\n    };\n}\n\n\n//apply DOM events\nObject.keys(events).forEach(function ( name ) {\n    window.addEventListener(name, events[name]);\n});\n\n\n// new way of string handling\n// all strings are in UTF-16\n// since stbapp 2.18\n// if ( window.gSTB && gSTB.SetNativeStringMode ) {\n//     /* eslint new-cap: 0 */\n//     gSTB.SetNativeStringMode(true);\n// }\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nmodule.exports = {\n    /**\n     * Parse the given location search string into object.\n     *\n     * @param {string} query string to parse\n     *\n     * @return {Object.<string, string>} result data\n     */\n    parse: function ( query ) {\n        var data = {};\n\n        // parse and fill the data\n        query.split('&').forEach(function ( part ) {\n            part = part.split('=');\n            // valid number on params\n            if ( part.length === 2 ) {\n                data[part[0]] = decodeURIComponent(part[1]);\n            }\n        });\n\n        return data;\n    },\n\n\n    /**\n     * Make uri query part in a string form.\n     *\n     * @param {Object} params data to stringify\n     *\n     * @return {string} query string\n     */\n    stringify: function ( params ) {\n        var data = [];\n\n        Object.keys(params).forEach(function ( name ) {\n            data.push(name + '=' + encodeURIComponent(params[name]));\n        });\n\n        return data.join('&');\n    }\n};\n","/**\n * Global application configuration.\n * Can store run-time options, API urls, paths, execution flags and so on.\n * Automatically loaded on application initialization and available as app.config.\n */\n\n'use strict';\n\n// public\nmodule.exports = {};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint-disable */\n\n'use strict';\n\n\nif ( !document.documentElement.classList ) {\n    var prototype = Array.prototype,\n        indexOf   = prototype.indexOf,\n        slice     = prototype.slice,\n        push      = prototype.push,\n        splice    = prototype.splice,\n        join      = prototype.join;\n\n    window.DOMTokenList = function ( el ) {\n        this._element = el;\n        if (el.className !== this._classCache) {\n            this._classCache = el.className;\n            if (!this._classCache) { return; }\n            var classes = this._classCache.replace(/^\\s+|\\s+$/g,'').split(/\\s+/),\n                i;\n            for (i = 0; i < classes.length; i++) {\n                push.call(this, classes[i]);\n            }\n        }\n    };\n\n    window.DOMTokenList.prototype = {\n        add: function ( token ) {\n            if(this.contains(token)) { return; }\n            push.call(this, token);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        contains: function ( token ) {\n            return indexOf.call(this, token) !== -1;\n        },\n\n        item: function ( index ) {\n            return this[index] || null;\n        },\n\n        remove: function ( token ) {\n            var i = indexOf.call(this, token);\n            if (i === -1) {\n                return;\n            }\n            splice.call(this, i, 1);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        toString: function () {\n            return join.call(this, ' ');\n        },\n\n        toggle: function ( token ) {\n            if (!this.contains(token)) {\n                this.add(token);\n            } else {\n                this.remove(token);\n            }\n            return this.contains(token);\n        }\n    };\n\n    Object.defineProperty(Element.prototype, 'classList', {\n        get: function () {\n            return new window.DOMTokenList(this);\n        }\n    });\n}\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    metrics = require('app:metrics');\n\n\n// global link\napp.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\napp.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\napp.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n\n// public\n//module.exports = app;\n","/**\n * Application geometry options.\n * Automatically loaded on application initialization and available as app.metrics.\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    480: {\n        // screen base dimension\n        height: 480,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  32,\n        availLeft:   48,\n\n        leftList: 6\n    },\n\n    576: {\n        // screen base dimension\n        height: 576,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  26,\n        availLeft:   54,\n\n        leftList: 6\n    },\n\n    720: {\n        // screen base dimension\n        height: 720,\n        width:  1280,\n        // safe zone margins\n        availTop:    30,\n        availBottom: 30,\n        availRight:  40,\n        availLeft:   40,\n\n        leftList: 7\n    },\n\n    1080: {\n        // screen base dimension\n        height: 1080,\n        width:  1920,\n        // safe zone margins\n        availTop:    45,\n        availBottom: 45,\n        availRight:  60,\n        availLeft:   60,\n\n        leftList: 7\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core'),\n    //metrics = require('app:metrics'),\n    linkCSS;\n\n\n//window.core = window.parent.getCoreInstance(window, app);\n\n\nlinkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = window.core.theme.path + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);\n\n\n// public\nmodule.exports = linkCSS;\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar longClick = {\n        timer: 0,\n        pressed: false,\n        fired: false\n    },\n    LONG_CLICK_TIMEOUT = 600;\n\n\nmodule.exports = function ( app, config ) {\n    var keyToChange = config.code,\n        emitKeyCode = config.emitCode;\n\n\n    function emitKeydown ( event, redefine ) {\n        var page = app.activePage,\n            eventLocal = {\n                code: event.keyCode,\n                stop: false\n            },\n            eventType,\n            activeComponent;\n\n        redefine = redefine || {};\n\n        eventType = redefine.type || event.type;\n\n        // apply key modifiers\n        if ( event.ctrlKey )  { eventLocal.code += 'c'; }\n        if ( event.altKey )   { eventLocal.code += 'a'; }\n        if ( event.shiftKey ) { eventLocal.code += 's'; }\n        if ( redefine.code )  { eventLocal.code = redefine.code; }\n\n        console.log('app event: ' + eventType + ' - ' + eventLocal.code, event);\n\n        // page.activeComponent can be set to null in event handles\n        activeComponent = page.activeComponent;\n\n        // current component handler\n        if ( activeComponent && activeComponent !== page ) {\n            // component is available and not page itself\n            if ( activeComponent.events[eventType] ) {\n                // there are some listeners\n                activeComponent.emit(eventType, eventLocal, event);\n            }\n\n            // todo: bubble event recursively\n            // bubbling\n            if (\n                !eventLocal.stop\n                && activeComponent.propagate\n                && activeComponent.parent\n                && activeComponent.parent.events[event.type]\n            ) {\n                activeComponent.parent.emit(eventType, eventLocal, event);\n            }\n        }\n\n        // page handler\n        if ( !eventLocal.stop ) {\n            // not prevented\n            if ( page.events[eventType] ) {\n                // there are some listeners\n                page.emit(eventType, eventLocal, event);\n            }\n\n            // global app handler\n            if ( !event.stop ) {\n                // not prevented\n                if ( app.events[eventType] ) {\n                    // there are some listeners\n                    app.emit(eventType, eventLocal, event);\n                }\n            }\n        }\n    }\n\n    function keydownHandler ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( !page ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        if ( event.keyCode === keyToChange && !longClick.pressed ) {\n            if ( longClick.fired ) {\n                longClick.fired = false;\n            }\n            longClick.pressed = true;\n            clearTimeout(longClick.timer);\n            longClick.timer = setTimeout(function () {\n                emitKeydown(event, {code: emitKeyCode});\n                longClick.fired = true;\n\n            }, LONG_CLICK_TIMEOUT);\n        } else if ( event.keyCode !== keyToChange ) {\n            emitKeydown(event);\n        }\n    }\n\n    function keyupHandler ( event ) {\n        if ( event.keyCode === keyToChange ) {\n            if  ( !longClick.fired && longClick.pressed ) {\n                clearTimeout(longClick.timer);\n                emitKeydown(event, {type: 'keydown'});\n            }\n            longClick.pressed = false;\n        }\n    }\n\n    window.addEventListener('keydown', keydownHandler);\n    window.addEventListener('keyup', keyupHandler);\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    Gettext = require('cjs-gettext'),\n    loader  = new Emitter();\n\n\n/**\n * Wrap the given data with gettext instance\n * and export methods to the global scope.\n *\n * @param {Object} [data] localization data\n *\n * @return {Gettext} gettext instance\n */\nfunction prepare ( data ) {\n    var gettext = new Gettext(data);\n\n    // make it global\n    window.gettext  = window._ = gettext.gettext;\n    window.pgettext = gettext.pgettext;\n    window.ngettext = gettext.ngettext;\n\n    return gettext;\n}\n\n\n/**\n * Main application language\n */\nloader.defaultLanguage = 'en';\n\n\n/**\n * Simple gettext implementation.\n *\n * @param {Object} config options\n * @param {string} [config.path=lang] relative path to project root\n * @param {string} config.name language name\n * @param {string} [config.ext=json] language file extension\n * @param {function} callback hook on ready\n *\n * @return {boolean} flag is ajax request was made\n */\nloader.load = function ( config, callback ) {\n    var xhr;\n\n    if ( DEVELOP ) {\n        if ( !config.name || typeof config.name !== 'string' ) {\n            throw new Error(__filename + ': config.name must be a nonempty string');\n        }\n        if ( typeof callback !== 'function' ) {\n            throw new Error(__filename + ': wrong callback type');\n        }\n    }\n\n    // defaults\n    config.ext  = config.ext  || 'json';\n    config.path = config.path || 'lang';\n\n    // is it necessary to request a localization file?\n    if ( config.name === loader.defaultLanguage ) {\n        // no\n        prepare();\n        callback(null);\n\n        return false;\n    }\n\n    // yes\n    xhr = new XMLHttpRequest();\n\n    xhr.onload = function () {\n        var json;\n\n        try {\n            json = JSON.parse(xhr.responseText);\n\n            prepare(json);\n            callback(null);\n\n            // there are some listeners\n            if ( loader.events['load'] ) {\n                // notify listeners\n                loader.emit('load');\n            }\n        } catch ( error ) {\n            xhr.onerror(error);\n        }\n    };\n\n    xhr.ontimeout = xhr.onerror = function ( error ) {\n        prepare();\n        callback(error);\n\n        // there are some listeners\n        if ( loader.events['error'] ) {\n            // notify listeners\n            loader.emit('error', error);\n        }\n    };\n\n    xhr.open('GET', config.path + '/' + config.name + '.' + config.ext, true);\n    xhr.send(null);\n\n    return true;\n};\n\n\n// public\nmodule.exports = loader;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Translations handler.\n *\n * @constructor\n *\n * @param {Object} config init parameters\n */\nfunction Gettext ( config ) {\n    var data, meta;\n\n    // sanitize\n    config   = config || {};\n    data     = config.data || {};\n    data[''] = data[''] || {};\n\n    // shortcut\n    meta = config.meta;\n\n    /**\n     * Display the native language translation of a textual message.\n     *\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.gettext = function ( msgId ) {\n        return data[''][msgId] || msgId;\n    };\n\n\n    /**\n     * The \"p\" in \"pgettext\" stands for \"particular\": fetches a particular translation of the textual message.\n     *\n     * @param {string} context message context\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.pgettext = function ( context, msgId ) {\n        return data[context] && data[context][msgId] || msgId;\n    };\n\n\n    /**\n     * Display the native language translation of a textual message whose grammatical form depends on a number.\n     *\n     * @param {string} msgId textual message in a singular form\n     * @param {string} plural textual message in a plural form\n     * @param {number} value message number\n     *\n     * @return {string} translated text\n     */\n    this.ngettext = function ( msgId, plural, value ) {\n        /* eslint no-unused-vars: 0 */\n        /* eslint no-eval: 0 */\n        /* eslint id-length: 0 */\n        var n, evalResult;\n\n        if ( DEVELOP ) {\n            if ( Number(value) !== value ) {\n                throw new Error(__filename + ': value must be a number');\n            }\n        }\n\n        if ( data && meta && data[''][msgId] ) {\n            evalResult = eval('n = ' + value + '; ' + meta.plural);\n\n            if ( typeof evalResult === 'boolean' ) {\n                evalResult = +evalResult;\n            }\n\n            // translation\n            return data[''][msgId][evalResult];\n        }\n\n        // english\n        return value === 1 ? msgId : plural;\n    };\n}\n\n\n// correct constructor name\nGettext.prototype.constructor = Gettext;\n\n\n// public\nmodule.exports = Gettext;\n","'use strict';\n\n/* eslint max-lines: 0 */\n/* eslint max-lines-per-function: 0 */\n/* eslint quote-props: 0 */\n\nvar Page        = require('stb-component-page'),\n    page        = new Page({$node: document.getElementById('pageMain')}),\n\n    dom         = require('spa-dom'),\n    keys        = require('stb-keys'),\n\n    Footer          = require('mag-component-footer'),\n    PanelSet        = require('mag-component-panel-set'),\n    Panel           = require('mag-component-panel'),\n    LayoutList      = require('mag-component-layout-list'),\n    Provider        = require('mag-data-cacher'),\n    app             = require('mag-app'),\n    ModalMessage    = require('mag-component-modal'),\n    RadioList       = require('mag-component-radio-list'),\n    Scrollbar       = require('stb-component-scrollbar'),\n\n    exit            = require('../utils/app.exit'),\n    sortQuality     = require('../utils/sort.quality'),\n    selectFile      = require('../utils/select.file'),\n    prepareMovies   = require('../utils/prepare.movies'),\n    parseTime       = require('../utils/parse.time'),\n    infoPanel       = require('../components/info.panel'),\n\n    footer = new Footer({visible: false, parent: page}),\n\n    leftList = new LayoutList({\n        cycle: true,\n        data: [],\n        fixedData: true,\n        size: app.metrics.leftList,\n        events: {\n            blur: function () {\n                LayoutList.prototype.blur.call(this);\n                footer.hide();\n            },\n            focus: function () {\n                footer.show();\n            }\n        }\n    }),\n\n    panelSet, resetFilters, actionModalReset, filmList,\n\n    leftPanel = new Panel({\n        title: [\n            {\n                value: gettext('Menu'),\n                className: 'name'\n            }\n        ],\n        events: {\n            focus: function () {\n                Panel.prototype.defaultEvents.focus.call(this);\n                if ( TARGET === 'android-stb' || TARGET === 'android-app' ) {\n                    footer.hide();\n                } else {\n                    footer.init({\n                        left: {\n                            code: keys.menu,\n                            action: function () {\n                                if ( panelSet.panels[panelSet.focusIndex] === leftPanel ) {\n                                    panelSet.blur();\n                                    footer.hide();\n                                    actionModalReset.show();\n                                    actionModalReset.focus();\n                                }\n                            }\n                        },\n                        middle: [\n                            {\n                                code: keys.f1,\n                                title: gettext('Reset filters'),\n                                action: resetFilters\n                            }\n                        ]\n                    });\n                }\n            }\n        },\n        children: [leftList]\n    }),\n\n    $headerAmount = dom.tag('div', {className: 'amount'}, '0'),\n    filmPanel = new Panel({\n        title: [\n            {\n                value: gettext('Films'),\n                className: 'name'\n            },\n            dom.tag(\n                'div',\n                {className: 'amountContainer'},\n                $headerAmount\n            )\n        ],\n        main: true\n    }),\n\n    rightPanel = new Panel({\n        title: [\n            {\n                value: gettext('Info'),\n                className: 'name'\n            }\n        ],\n        events: {\n            keydown: function ( event ) {\n                switch ( event.code ) {\n                    case keys.ok:\n                        if ( filmList.$focusItem.data.value.censored || filmList.$focusItem.data.value.category.censored ) {\n                            core.accessControl.request(function ( error ) {\n                                if ( !error ) {\n                                    app.route(app.pages.info, {info: filmList.$focusItem.data.value || {}});\n                                }\n                            });\n                        } else {\n                            app.route(app.pages.info, {info: filmList.$focusItem.data.value || {}});\n                        }\n                        break;\n                }\n            },\n            focus: function () {\n                Panel.prototype.defaultEvents.focus.call(this);\n                footer.hide();\n            }\n        },\n        children: [infoPanel.textArea, infoPanel.textArea.scroll]\n    }),\n\n    checkTime = 24 * 60 * 60,\n    providerConfig = {\n        size: 7,\n        pages: 2\n    },\n    translations = [\n        gettext('By name'),\n        gettext('By rating'),\n        gettext('By imdb rating'),\n        gettext('By kinopoisk rating'),\n        gettext('By date')\n    ],\n    inputConfig = {\n        placeholder: gettext('Search'),\n        value: ''\n    },\n\n    timers = {},\n    actionItems,\n    actionModal, modalPlayList, categoriesList, actionModalNotEnded,\n    scrollbarList, genreList, modalScrollbar,\n    selectGenre, selectCategories, sortFilm,\n    listAction, listActionNotEnded;\n\n\n/**\n * Add/remove focus item to/from favorite.\n *\n * @param {Object} video - movie data\n * @param {Function} callback - result handler\n */\nfunction changeFavorite ( video, callback ) {\n    var activeItem = filmList.$focusItem,\n        // video = filmList.$focusItem.data.value,\n        $icon = activeItem.layout.links.$favorite;\n\n    if ( video === activeItem.data.value ) {\n        if ( video.favorite ) {\n            $icon.classList.add('hidden');\n            activeItem.data.items[2].className = 'theme-icon theme-icon-favorite-active active hidden';\n        } else {\n            $icon.classList.remove('hidden');\n            activeItem.data.items[2].className = 'theme-icon theme-icon-favorite-active active';\n        }\n    }\n\n    video.changeFlags(\n        {\n            favorite: !video.favorite\n        },\n        /**\n         * Favorite add/remove callback.\n         *\n         * @param {boolean} [error] - error flag\n         * @param {boolean} [data] - done flag\n         */\n        function ( error, data ) {\n            if ( error && video === activeItem.data.value ) {\n                if ( video.favorite ) {\n                    $icon.classList.remove('hidden');\n                    activeItem.data.items[2].className = 'theme-icon theme-icon-favorite-active active';\n                } else {\n                    $icon.classList.add('hidden');\n                    activeItem.data.items[2].className = 'theme-icon theme-icon-favorite-active active hidden';\n                }\n            }\n            if ( callback ) {\n                callback(error, data);\n            }\n        }\n    );\n}\n\n\n/**\n * Prepare to play and play focus item.\n *\n * @param {number} continueWatch - continue watch\n */\nfunction prepareToPlay ( continueWatch ) {\n    var video = filmList.$focusItem.value,\n        index = 0,\n        name = video.name,\n        series = [],\n        seasons = [],\n        indexes = {\n            series: 0,\n            seasons: 0\n        },\n        previousHandler, nextHandler,\n        playerContext, intent,\n        subtitles, file, checkFile;\n\n    // Play focus item.\n    function play ( error, url ) {\n\n        function startPlay ( position ) {\n            intent = core.intent({\n                action: 'play',\n                mime: 'content/video',\n                data: {\n                    title: name,\n                    uri: url,\n                    movie: video,\n                    file: file,\n                    position: position,\n                    subtitles: subtitles,\n                    mediaId: file.id\n                },\n                events: {\n                    hide: function () {\n                        page.saveVideo(null, {intent: intent, playerContext: playerContext}, true);\n                        playerContext = null;\n                        intent.close();\n                    },\n                    end: function () {\n                        page.saveVideo(null, {intent: intent, playerContext: playerContext}, true);\n                        if ( nextHandler ) {\n                            nextHandler();\n\n                            return;\n                        }\n                        playerContext = null;\n                        intent.close();\n                    },\n                    error: function () {\n                        playerContext = null;\n                        intent.close();\n                    },\n                    stop: function () {\n                        playerContext = null;\n                        intent.close();\n                    },\n                    next: nextHandler,\n                    prev: previousHandler,\n                    close: function () {\n                        page.saveVideo(null, {intent: intent, playerContext: playerContext});\n                    }\n                },\n                context: playerContext\n            }, function ( error, context ) {\n                debug.fail('Playing error', error);\n                playerContext = context;\n            });\n        }\n\n        if ( error ) {\n            return;\n        }\n        nextHandler = null;\n        previousHandler = null;\n        if ( video['is_tv_series'] ) {\n            if ( indexes.series + 1 < series.length ) {\n                nextHandler = function () {\n                    var season = seasons[indexes.seasons];\n\n                    index = ++indexes.series;\n\n                    season.name = season.name\n                        ? season.name + (season.original_name ? ' ( ' + season.original_name + ' )' : '')\n                        : gettext('Season') + ' ' + season.number;\n\n                    name = video.name + ' ' + season.name + ' ' +\n                        (series[index].name ? series[index].name +\n                            (series[index].original_name ?\n                                ' ( ' + series[index].original_name + ' )' : '') : gettext('Series') + ' ' + series[index].number);\n\n                    if ( series[index].files && series[index].files.length ) {\n                        checkFile(series[index].files);\n                    } else {\n                        video.getEpisode({seasonId: season.id, episodeId: series[index].id}, function ( error, data ) {\n                            if ( !error ) {\n                                checkFile(data.files);\n                            }\n                        });\n                    }\n                };\n            }\n\n            if ( indexes.series > 0 ) {\n                previousHandler = function () {\n                    var season = seasons[indexes.seasons];\n\n                    index = --indexes.series;\n\n                    season.name = season.name\n                        ? season.name + (season.original_name ? ' ( ' + season.original_name + ' )' : '')\n                        : gettext('Season') + ' ' + season.number;\n\n                    name = video.name + ' ' + season.name + ' ' +\n                        (series[index].name\n                            ? series[index].name + (series[index]['original_name'] ? ' ( ' + series[index]['original_name'] + ' )' : '')\n                            : gettext('Series') + ' ' + series[index].number);\n\n                    if ( series[index].files && series[index].files.length ) {\n                        checkFile(series[index].files);\n                    } else {\n                        video.getEpisode({seasonId: season.id, episodeId: series[index].id}, function ( error, data ) {\n                            if ( !error ) {\n                                checkFile(data.files);\n                            }\n                        });\n                    }\n                };\n            }\n        }\n\n        startPlay(continueWatch || 0);\n    }\n\n    checkFile = function ( data ) {\n        var files = sortQuality(video, data);\n\n        subtitles = files.subtitles;\n        files = files.video;\n\n        if ( !files.length ) {\n            return;\n        }\n\n        if ( playerContext && !continueWatch ) {\n            file = selectFile(files, playerContext.metadata.audioLang, intent.data.file);\n            if ( file ) {\n                file = file.value;\n            } else {\n                playerContext = null;\n                intent.close();\n\n                return;\n            }\n        } else {\n            file = files[0];\n            if ( video['last_watched_file_id'] && continueWatch ) {\n                for ( index = 0; index < files.length; index++ ) {\n                    if ( files[index].id === video['last_watched_file_id'] ) {\n                        file = files[index];\n                        break;\n                    }\n                }\n            }\n        }\n        if ( file.url ) {\n            play(false, file.url);\n        } else {\n            video.getUrl(file.id, play);\n        }\n    };\n\n    if ( video['is_tv_series'] ) {\n        video.getSeasons(function ( error, data ) {\n            var season;\n\n            if ( !error && data.length ) {\n                season = data[0];\n                seasons = data;\n                if ( video['last_watched_season_id'] && continueWatch ) {\n                    for ( index = 0; index < data.length; index++ ) {\n                        if ( data[index].id === video['last_watched_season_id'] ) {\n                            season = data[index];\n                            indexes.seasons = index;\n                            break;\n                        }\n                    }\n                } else {\n                    indexes.seasons = 0;\n                }\n                video.getSeries(season.id, function ( error, seriesData ) {\n                    if ( !error && seriesData.length ) {\n                        series = seriesData;\n                        if ( video['last_watched_episode_id'] && continueWatch ) {\n                            for ( index = 0; index < seriesData.length; index++ ) {\n                                if ( seriesData[index].id === video['last_watched_episode_id'] ) {\n                                    indexes.series = index;\n                                    break;\n                                }\n                            }\n                        } else {\n                            indexes.series = 0;\n                        }\n\n                        season.name = season.name\n                            ? season.name + (season.original_name ? ' ( ' + season.original_name + ' )' : '')\n                            : gettext('Season') + ' ' + season.number;\n\n                        name = video.name + ' ' + season.name + ' ' +\n                            (series[index].name\n                                ? series[index].name + (series[index].original_name ? ' ( ' + series[index].original_name + ' )' : '')\n                                : gettext('Series') + ' ' + series[index].number);\n\n                        if ( series[index].files && series[index].files.length ) {\n                            checkFile(series[index].files);\n                        } else {\n                            video.getEpisode({seasonId: season.id, episodeId: series[index].id}, function ( error, list ) {\n                                if ( !error ) {\n                                    checkFile(list.files);\n                                }\n                            });\n                        }\n\n                    }\n                });\n            }\n\n        });\n    } else {\n        checkFile(video.files);\n    }\n}\n\n\n/**\n * Getter for video list.\n *\n * @param {Function} callback - result handler\n * @param {Object} config - request config\n */\nfunction filmGetter ( callback, config ) {\n    infoPanel.clear();\n\n    app.api.getList(config, function ( error, data, count ) {\n        $headerAmount.innerHTML = error ? 0 : count;\n        callback(error, prepareMovies(data), count);\n    });\n}\n\n\n/**\n * Reset data and init video list with saved filters.\n */\nfunction refreshList () {\n    filmList.setData({data: []});\n    app.api.config.offset = filmList.provider.head;\n    app.api.config.imit = filmList.provider.tail - filmList.provider.head;\n    filmList.init({\n        provider: new Provider({\n            pageSize: providerConfig.size,\n            cacheSize: providerConfig.pages,\n            checkTime: checkTime,\n            pos: filmList.provider.pos,\n            request: app.api.config,\n            getter: filmGetter,\n            cycle: true,\n            headItem: filmList.provider.headItem\n        }),\n        focusIndex: filmList.$focusItem ? filmList.$focusItem.index : 0\n    });\n}\n\n\nfunction setWatched ( add ) {\n    var video = filmList.$focusItem.data.value,\n        activeItem = filmList.$focusItem;\n\n    video.changeFlags({'watched_status': add ? 'watched' : 'not_watched'}, function ( error, data ) {\n        var status;\n\n        if ( !error && data ) {\n            video['watched_status'] = status = add ? 'watched' : 'not_watched';\n            activeItem.data.items[3].className = add ? 'theme-icon theme-icon-ok' : 'theme-icon theme-icon-ok hidden';\n            activeItem.layout.links.$status.className = activeItem.data.items[3].className;\n\n            if ( !video['is_tv_series'] ) {\n                video.files.forEach(function ( item ) {\n                    item['watched_status'] = status;\n                });\n            }\n        }\n    });\n}\n\n\nfunction showActionModal () {\n    var data = filmList.$focusItem.data.value;\n\n    if ( data['watched_status'] === 'not_ended' ) {\n        actionModalNotEnded.show(data);\n        actionModalNotEnded.focus();\n    } else {\n        actionModal.show();\n        actionModal.focus();\n    }\n}\n\n\n/**\n * Init page.\n */\nfunction init () {\n    var onFocusItem,\n        leftListData = [\n            {\n                name: 'search',\n                items: [\n                    {\n                        name: '$icon',\n                        className: 'theme-icon theme-icon-search'\n                    },\n                    {\n                        name: '$text',\n                        value: gettext('Search'),\n                        className: 'inputSearchField'\n                    }\n                ],\n                click: function ( $item ) {\n                    core.intent({\n                        action: 'keyboard',\n                        data: {\n                            value: inputConfig.value,\n                            title: gettext('VIDEO SEARCH')\n                        },\n                        events: {\n                            done: function ( data ) {\n                                inputConfig.value = data.value;\n                                if ( data.value ) {\n                                    $item.layout.links.$text.innerText = data.value;\n                                    $item.layout.links.$icon.classList.add('active');\n                                } else {\n                                    $item.layout.links.$text.innerText = inputConfig.placeholder;\n                                    $item.layout.links.$icon.classList.remove('active');\n                                }\n                                if ( app.api.config.search !== data.value ) {\n                                    app.api.config.search = data.value;\n                                    app.api.config.offset = 0;\n                                    app.api.config.limit = 0;\n                                    filmList.init({\n                                        provider: new Provider({\n                                            pageSize: providerConfig.size,\n                                            cacheSize: providerConfig.pages,\n                                            request: app.api.config,\n                                            getter: filmGetter,\n                                            checkTime: 0,\n                                            cycle: true\n                                        }),\n                                        focusIndex: 0\n                                    });\n                                }\n\n                            }\n                        }\n                    }, function ( error ) {\n                        debug.fail('Keyboard error', error);\n                    });\n                }\n            },\n            {\n                name: 'favorite',\n                items: [\n                    {\n                        name: '$icon',\n                        className: 'theme-icon theme-icon-favorite'\n                    },\n                    {\n                        value: gettext('Favorite')\n                    }\n                ],\n                click: function ( $item ) {\n                    if ( app.api.config.favorite ) {\n                        $item.layout.links.$icon.className = 'theme-icon theme-icon-favorite';\n                    } else {\n                        $item.layout.links.$icon.className = 'theme-icon theme-icon-favorite-active active';\n                    }\n                    filmList.setData({data: []});\n                    app.api.config.favorite = !app.api.config.favorite;\n                    app.api.config.offset = 0;\n                    app.api.config.limit = 0;\n                    filmList.init({\n                        provider: new Provider({\n                            pageSize: providerConfig.size,\n                            cacheSize: providerConfig.pages,\n                            request: app.api.config,\n                            getter: filmGetter,\n                            checkTime: checkTime,\n                            cycle: true\n                        }),\n                        focusIndex: 0\n                    });\n                }\n            },\n            {\n                name: 'genres',\n                items: [\n                    {\n                        name: '$icon',\n                        className: 'theme-icon theme-icon-genres'\n                    },\n                    {\n                        name: '$text',\n                        value: gettext('All genres'),\n                        className: 'theme-item-more'\n                    }\n                ],\n                click: function () {\n                    panelSet.blur();\n                    selectGenre.show();\n                    selectGenre.focus();\n                }\n            },\n            {\n                name: 'categories',\n                items: [\n                    {\n                        name: '$icon',\n                        className: 'theme-icon theme-icon-categories'\n                    },\n                    {\n                        name: '$text',\n                        value: gettext('All categories'),\n                        className: 'theme-item-more'\n                    }\n                ],\n                click: function () {\n                    panelSet.blur();\n                    selectCategories.show();\n                    selectCategories.focus();\n                }\n            },\n            {\n                name: 'sort',\n                items: [\n                    {\n                        name: '$icon',\n                        className: 'theme-icon theme-icon-sort-az'\n                    },\n                    {\n                        name: '$text',\n                        value: translations[app.api.config.sortby] || gettext('By date'),\n                        className: 'theme-item-more'\n                    }\n                ],\n                click: function () {\n                    panelSet.blur();\n                    sortFilm.show();\n                    sortFilm.focus();\n                }\n            }\n        ];\n\n    app.api.config.offset = 0;\n    app.api.config.limit = 0;\n\n    if ( TARGET === 'android-stb' || TARGET === 'android-app' ) {\n        leftListData.push({\n            items: [\n                {\n                    className: 'theme-icon theme-icon-reset-filters'\n                },\n                {\n                    value: gettext('Reset filters')\n                }\n            ],\n            click: resetFilters\n        });\n    }\n\n    leftListData.push({\n        items: [\n            {\n                className: 'theme-icon theme-icon-exit'\n            },\n            {\n                value: gettext('Exit')\n            }\n        ],\n        click: exit.goExit\n    });\n\n    leftList.setData({\n        focusIndex: leftList.$focusItem ? leftList.$focusItem.index : 0,\n        data: leftListData\n    });\n\n    filmList = new LayoutList({\n        provider: new Provider({\n            pageSize: providerConfig.size,\n            cacheSize: providerConfig.pages,\n            request: app.api.config,\n            getter: filmGetter,\n            checkTime: checkTime,\n            cycle: true\n        }),\n        events: {\n            focus: function () {\n                footer.init({\n                    left: {\n                        code: keys.menu,\n                        action: function () {\n                            if ( panelSet.panels[panelSet.focusIndex] === filmPanel ) {\n                                panelSet.blur();\n                                footer.hide();\n                                showActionModal();\n                            }\n                        }\n                    },\n                    middle: [\n                        {\n                            code: keys.f3,\n                            title: gettext('Favorite'),\n                            action: function () {\n                                if ( panelSet.panels[panelSet.focusIndex] === filmPanel ) {\n                                    changeFavorite(filmList.$focusItem.data.value);\n                                }\n                            }\n                        }\n                    ],\n                    label: {\n                        code: keys.menu,\n                        title: gettext('Hold OK button to open Options menu'),\n                        action: function () {\n                            if ( panelSet.panels[panelSet.focusIndex] === filmPanel ) {\n                                panelSet.blur();\n                                footer.hide();\n                                showActionModal();\n                            }\n                        }\n                    }\n                });\n                footer.show();\n            },\n            'focus:item': onFocusItem = function ( event ) {\n                if ( timers.info ) {\n                    clearTimeout(timers.info);\n                }\n\n                timers.info = setTimeout(function () {\n                    var $curr = event.$curr;\n\n                    if ( $curr ) {\n                        if (\n                            $curr.data.value\n                            && ($curr.data.value.censored || ($curr.data.value.category && $curr.data.value.category.censored))\n                            && !core.accessControl.state\n                        ) {\n                            infoPanel.showLock();\n                        } else {\n                            infoPanel.showInfo();\n                            infoPanel.fill($curr.data.value);\n                        }\n                    }\n                }, core.environment.onFocusDebounceTimeout);\n            },\n            'move:view': onFocusItem,\n            'click:item': function ( event ) {\n                if (\n                    event.$item.data.value\n                    && (event.$item.data.value.censored\n                    || (event.$item.data.value.category && event.$item.data.value.category.censored))\n                ) {\n                    core.accessControl.request(function ( error ) {\n                        if ( !error ) {\n                            app.route(app.pages.info, {info: event.$item.data.value});\n                        }\n                    });\n                } else {\n                    app.route(app.pages.info, {info: event.$item.data.value || {}});\n                }\n\n\n            },\n            'data:error': function ( error ) {\n                console.log(error);\n            }\n        },\n        size: providerConfig.size,\n        render: require('../utils/list.item.render'),\n        fixedData: true,\n        className: 'videoList padded',\n        noData: gettext('No films'),\n        focusIndex: 0,\n        scroll: scrollbarList = new Scrollbar({})\n    });\n\n    filmList.once('data:error', function () {\n        filmList.focus();\n        app.ready();\n    });\n\n    filmList.once('data:get', function () {\n        filmList.focus();\n        app.api.getCategories(function ( error, data ) {\n            var result = [],\n                index;\n\n            debug.fail('Request error', error);\n            data = data.data || [];\n            result.push({\n                state: true,\n                title: gettext('All categories'),\n                value: ''\n            });\n\n            for ( index = 0; index < data.length; index++ ) {\n                result.push({\n                    state: false,\n                    title: data[index].name,\n                    value: data[index].id\n                });\n            }\n            categoriesList.setData({data: result, focusIndex: 0});\n\n            app.api.getGenres(function ( error, genres ) {\n                result = [];\n\n                debug.fail('Request error', error);\n                genres = genres.data || [];\n                result.push({\n                    state: true,\n                    title: gettext('All genres'),\n                    value: ''\n                });\n\n                for ( index = 0; index < genres.length; index++ ) {\n                    result.push({\n                        state: false,\n                        title: genres[index].name,\n                        value: genres[index].ids.join(',')\n                    });\n                }\n                genreList.setData({data: result, focusIndex: 0});\n            });\n        });\n        app.ready();\n    });\n    filmPanel.add(filmList);\n    filmPanel.add(scrollbarList);\n    filmPanel.focus();\n\n    if ( DEVELOP ) {\n        window.leftList = leftList;\n        window.listAction = listAction;\n        window.filmList = filmList;\n        window.modalPlayList = modalPlayList;\n    }\n}\n\n\n/**\n * Reset all filters.\n */\nresetFilters = function () {\n    if (\n        app.api.config.genreId !== ''\n        || app.api.config.categoryId !== ''\n        || app.api.config.search !== ''\n        || app.api.config.favorite\n    ) {\n        app.api.config = {\n            sortby: app.api.config.sortby,\n            genreId: '',\n            categoryId: '',\n            favorite: false,\n            search: '',\n            limit: 0,\n            offset: 0\n        };\n\n\n        filmList.setData({data: []});\n        filmList.init({\n            provider: new Provider({\n                pageSize: providerConfig.size,\n                cacheSize: providerConfig.pages,\n                request: app.api.config,\n                getter: filmGetter,\n                checkTime: checkTime,\n                cycle: true\n            }),\n            focusIndex: 0\n        });\n\n        if ( genreList.$checkedData ) {\n            genreList.$checkedData.state = false;\n            genreList.data[0].state = true;\n        }\n        genreList.setData({data: genreList.data, focusIndex: 0});\n        if ( categoriesList.$checkedData ) {\n            categoriesList.$checkedData.state = false;\n            categoriesList.data[0].state = true;\n        }\n\n        leftList.links.categories.links.$text.innerText = gettext('All categories');\n        leftList.links.categories.links.$icon.classList.remove('active');\n\n        leftList.links.genres.links.$text.innerText = gettext('All genres');\n        leftList.links.genres.links.$icon.classList.remove('active');\n\n        inputConfig.value = '';\n        leftList.links.search.links.$text.innerText = inputConfig.placeholder;\n        leftList.links.search.links.$icon.classList.remove('active');\n\n        leftList.links.favorite.links.$icon.className = 'theme-icon theme-icon-favorite';\n\n        categoriesList.setData({data: categoriesList.data, focusIndex: 0});\n    }\n};\n\n\npanelSet = new PanelSet({\n    visible: false,\n    panels: [leftPanel, filmPanel, rightPanel]\n});\npage.add(panelSet);\n\n\nactionItems = {\n    play: {\n        items: [\n            {\n                className: 'theme-icon theme-icon-play'\n            },\n            {\n                className: 'title',\n                value: gettext('Play')\n            }\n        ],\n        click: function () {\n            actionModal.hide();\n            if ( filmList.$focusItem.data.value.censored || filmList.$focusItem.data.value.category.censored ) {\n                core.accessControl.request(function ( error ) {\n                    if ( !error ) {\n                        prepareToPlay();\n                    }\n                });\n            } else {\n                prepareToPlay();\n            }\n        }\n    },\n    favorite: {\n        name: 'favorite',\n        items: [\n            {\n                name: '$icon',\n                className: 'theme-icon theme-icon-favorite'\n            },\n            {\n                name: '$title',\n                className: 'title',\n                value: gettext('Add to favorite')\n            }\n        ],\n        click: function () {\n            actionModal.hide();\n            actionModalNotEnded.hide();\n            changeFavorite(filmList.$focusItem.data.value);\n        }\n    },\n    watched: {\n        name: 'watchedStatus',\n        items: [\n            {\n                name: '$icon',\n                className: 'theme-icon theme-icon-ok'\n            },\n            {\n                name: '$title',\n                className: 'title',\n                value: gettext('Mark as watched')\n            }\n        ],\n        click: function () {\n            actionModal.hide();\n            actionModalNotEnded.hide();\n            setWatched(filmList.$focusItem.data.value['watched_status'] !== 'watched');\n        }\n    },\n    continueWatch: {\n        name: 'continueWatch',\n        items: [\n            {\n                className: 'theme-icon'\n            },\n            {\n                name: '$title',\n                className: 'title',\n                value: gettext('Continue watching from')\n            }\n        ],\n        click: function () {\n            actionModalNotEnded.hide();\n            if ( actionModalNotEnded.videoData.censored\n                || (actionModalNotEnded.videoData.category && actionModalNotEnded.videoData.category.censored) ) {\n                core.accessControl.request(function ( error ) {\n                    if ( !error ) {\n                        prepareToPlay(actionModalNotEnded.videoData['watched_time'] || 0);\n                    }\n                });\n            } else {\n                prepareToPlay(actionModalNotEnded.videoData['watched_time'] || 0);\n            }\n\n        }\n    },\n    watchAgain: {\n        items: [\n            {\n                className: 'theme-icon'\n            },\n            {\n                name: '$title',\n                className: 'title',\n                value: gettext('Watch again')\n            }\n        ],\n        click: function () {\n            actionModalNotEnded.hide();\n            if ( filmList.$focusItem.data.value.censored || filmList.$focusItem.data.value.category.censored ) {\n                core.accessControl.request(function ( error ) {\n                    if ( !error ) {\n                        prepareToPlay();\n                    }\n                });\n            } else {\n                prepareToPlay();\n            }\n        }\n    }\n};\n\n// action menu center\nactionModal = new ModalMessage({\n    title: gettext('Actions'),\n    className: 'width2x',\n    events: {\n        show: function () {\n            var data = filmList.$focusItem.data.value,\n                linksFavorite = listAction.links.favorite.links,\n                linksWatchedStatus = listAction.links.watchedStatus.links;\n\n            if ( data.favorite ) {\n                linksFavorite.$icon.className = 'theme-icon theme-icon-favorite-active active';\n                linksFavorite.$title.innerText = gettext('Remove from favorites');\n            } else {\n                linksFavorite.$icon.className = 'theme-icon theme-icon-favorite';\n                linksFavorite.$title.innerText = gettext('Add to favorite');\n            }\n\n            if ( data['watched_status'] === 'watched' ) {\n                linksWatchedStatus.$icon.className = 'theme-icon';\n                linksWatchedStatus.$title.innerText = gettext('Remove from watched');\n            } else {\n                linksWatchedStatus.$icon.className = 'theme-icon theme-icon-ok';\n                linksWatchedStatus.$title.innerText = gettext('Mark as watched');\n            }\n        },\n        hide: function () {\n            panelSet.focus();\n        }\n    },\n    children: [\n        listAction = new LayoutList({\n            size: 3,\n            focusIndex: 0,\n            cycle: true,\n            fixedData: true,\n            data: [\n                actionItems.play,\n                actionItems.favorite,\n                actionItems.watched\n            ],\n            events: {\n                keydown: function ( event ) {\n                    LayoutList.prototype.defaultEvents.keydown.call(this, event);\n                    switch ( event.code ) {\n                        case keys.menu:\n                        case keys.back:\n                            actionModal.hide();\n                            event.stop = true;\n                            break;\n                    }\n                }\n            }\n        })\n    ]\n});\npage.add(actionModal);\n\n\n// action menu center\nactionModalNotEnded = new ModalMessage({\n    title: gettext('Actions'),\n    className: 'width2x',\n    events: {\n        show: function ( data ) {\n            var linksFavorite = listActionNotEnded.links.favorite.links,\n                linksWatchedStatus = listActionNotEnded.links.watchedStatus.links;\n\n            this.videoData = data;\n            this.children[0].focus();\n            this.$text.innerText = data.name;\n            listActionNotEnded.links.continueWatch.links.$title.innerText = gettext('Continue watching from') + ' ' +\n                parseTime(data['watched_time'] || 0);\n\n            if ( data.favorite ) {\n                linksFavorite.$icon.className = 'theme-icon theme-icon-favorite-active active';\n                linksFavorite.$title.innerText = gettext('Remove from favorites');\n            } else {\n                linksFavorite.$icon.className = 'theme-icon theme-icon-favorite';\n                linksFavorite.$title.innerText = gettext('Add to favorite');\n            }\n\n            if ( data['watched_status'] === 'watched' ) {\n                linksWatchedStatus.$icon.className = 'theme-icon';\n                linksWatchedStatus.$title.innerText = gettext('Remove from watched');\n            } else {\n                linksWatchedStatus.$icon.className = 'theme-icon theme-icon-ok';\n                linksWatchedStatus.$title.innerText = gettext('Mark as watched');\n            }\n        },\n        hide: function () {\n            panelSet.focus();\n        }\n    },\n    children: [\n        listActionNotEnded = new LayoutList({\n            size: 4,\n            focusIndex: 0,\n            cycle: true,\n            fixedData: true,\n            data: [\n                actionItems.continueWatch,\n                actionItems.watchAgain,\n                actionItems.favorite,\n                actionItems.watched\n            ],\n            events: {\n                keydown: function ( event ) {\n                    LayoutList.prototype.defaultEvents.keydown.call(this, event);\n                    switch ( event.code ) {\n                        case keys.menu:\n                        case keys.back:\n                            actionModalNotEnded.hide();\n                            event.stop = true;\n                            break;\n                    }\n                }\n            }\n        })\n    ]\n});\npage.add(actionModalNotEnded);\n\n\n// sort list selection modal\nsortFilm = new ModalMessage({\n    visible: false,\n    title: gettext('Sort'),\n    events: {\n        show: function () {\n            this.children[0].focus();\n        }\n    },\n    children: [\n        new RadioList({\n            focusIndex: 0,\n            size: 3,\n            cycle: true,\n            data: [\n                {\n                    state: true,\n                    title: gettext('By date'),\n                    value: 'added'\n                },\n                {\n                    state: false,\n                    title: gettext('By name'),\n                    value: 'name'\n                },\n                {\n                    state: false,\n                    title: gettext('By rating'),\n                    value: 'rating'\n                }\n            ],\n            events: {\n                'click:item': function () {\n                    sortFilm.hide();\n                    panelSet.focus();\n                },\n                select: function ( data ) {\n                    leftList.links.sort.links.$text.innerText = data.$curr.data.title;\n                    filmList.setData({data: []});\n                    app.api.config.sortby = data.$curr.data.value;\n                    app.api.config.offset = 0;\n                    app.api.config.limit = 0;\n                    filmList.init({\n                        provider: new Provider({\n                            pageSize: providerConfig.size,\n                            cacheSize: providerConfig.pages,\n                            request: app.api.config,\n                            getter: filmGetter,\n                            checkTime: checkTime,\n                            cycle: true\n                        }),\n                        focusIndex: 0\n                    });\n                },\n                keydown: function ( event ) {\n                    RadioList.prototype.defaultEvents.keydown.call(this, event);\n                    switch ( event.code ) {\n                        case keys.back:\n                            sortFilm.hide();\n                            panelSet.focus();\n                            event.stop = true;\n                            break;\n                    }\n                }\n            }\n        })\n    ]\n});\npage.add(sortFilm);\n\n\n// categories list selection modal\nselectCategories = new ModalMessage({\n    visible: false,\n    title: gettext('Categories'),\n    events: {\n        show: function () {\n            this.children[0].focus();\n        }\n    },\n    children: [\n        categoriesList = new RadioList({\n            focusIndex: 0,\n            size: 5,\n            cycle: true,\n            scroll: modalScrollbar = new Scrollbar(),\n            events: {\n                'click:item': function () {\n                    selectCategories.hide();\n                    panelSet.focus();\n                },\n                select: function ( data ) {\n                    leftList.links.categories.links.$text.innerText = data.$curr.data.title;\n                    if ( data.$curr.data.value ) {\n                        leftList.links.categories.links.$icon.classList.add('active');\n                    } else {\n                        leftList.links.categories.links.$icon.classList.remove('active');\n                    }\n                    filmList.setData({data: []});\n                    app.api.config.categoryId = data.$curr.data.value;\n                    app.api.config.offset = 0;\n                    app.api.config.limit = 0;\n                    filmList.init({\n                        provider: new Provider({\n                            pageSize: providerConfig.size,\n                            cacheSize: providerConfig.pages,\n                            request: app.api.config,\n                            getter: filmGetter,\n                            checkTime: checkTime,\n                            cycle: true\n                        }),\n                        focusIndex: 0\n                    });\n                },\n                keydown: function ( event ) {\n                    RadioList.prototype.defaultEvents.keydown.call(this, event);\n                    switch ( event.code ) {\n                        case keys.back:\n                            selectCategories.hide();\n                            panelSet.focus();\n                            event.stop = true;\n                            break;\n                    }\n                }\n            }\n        }),\n        modalScrollbar\n    ]\n});\npage.add(selectCategories);\n\n\nselectGenre = new ModalMessage({\n    visible: false,\n    title: gettext('Genres'),\n    events: {\n        show: function () {\n            this.children[0].focus();\n        }\n    },\n    children: [\n        genreList = new RadioList({\n            focusIndex: 0,\n            size: 5,\n            cycle: true,\n            scroll: modalScrollbar = new Scrollbar(),\n            events: {\n                'click:item': function () {\n                    selectGenre.hide();\n                    panelSet.focus();\n                },\n                select: function ( data ) {\n                    leftList.links.genres.links.$text.innerText = data.$curr.data.title;\n                    if ( data.$curr.data.value ) {\n                        leftList.links.genres.links.$icon.classList.add('active');\n                    } else {\n                        leftList.links.genres.links.$icon.classList.remove('active');\n                    }\n                    filmList.setData({data: []});\n                    app.api.config.genreId = data.$curr.data.value;\n                    app.api.config.offset = 0;\n                    app.api.config.limit = 0;\n                    filmList.init({\n                        provider: new Provider({\n                            pageSize: providerConfig.size,\n                            cacheSize: providerConfig.pages,\n                            request: app.api.config,\n                            getter: filmGetter,\n                            checkTime: checkTime,\n                            cycle: true\n                        }),\n                        focusIndex: 0\n                    });\n                },\n                keydown: function ( event ) {\n                    RadioList.prototype.defaultEvents.keydown.call(this, event);\n                    switch ( event.code ) {\n                        case keys.back:\n                            selectGenre.hide();\n                            panelSet.focus();\n                            event.stop = true;\n                            break;\n                    }\n                }\n            }\n        }),\n        modalScrollbar\n    ]\n});\npage.add(selectGenre);\n\n\n// action menu left\nif ( TARGET !== 'android-stb' && TARGET !== 'android-app' ) {\n    actionModalReset = new ModalMessage({\n        title: gettext('Actions'),\n        className: 'width2x',\n        events: {\n            hide: function () {\n                panelSet.focus();\n            }\n        },\n        children: [\n            new LayoutList({\n                size: 1,\n                focusIndex: 0,\n                cycle: true,\n                fixedData: true,\n                data: [\n                    {\n                        items: [\n                            {\n                                className: 'theme-icon theme-icon-rc-f1'\n                            },\n                            {\n                                value: gettext('Reset filters')\n                            }\n                        ],\n                        click: function () {\n                            actionModalReset.hide();\n                            resetFilters();\n                        }\n                    }\n                ],\n                events: {\n                    keydown: function ( event ) {\n                        LayoutList.prototype.defaultEvents.keydown.call(this, event);\n                        switch ( event.code ) {\n                            case keys.menu:\n                            case keys.back:\n                                actionModalReset.hide();\n                                event.stop = true;\n                                break;\n                        }\n                    }\n                }\n            })\n        ]\n    });\n    page.add(actionModalReset);\n}\n\n\npage.saveVideo = function ( callback, data, end ) {\n    var activeItem = filmList.$focusItem.data,\n        item, position, duration,\n        progress, config;\n\n    function add ( error, statusData ) {\n        var index;\n\n        if ( !error && statusData && statusData.status ) {\n            item.file['watched_status'] = config['watched_status'];\n            item.movie['watched_status'] = statusData['movie_watched_status'];\n            switch ( item.movie['watched_status'] ) {\n                case 'watched':\n                    activeItem.items[3].className = 'theme-icon theme-icon-ok';\n                    if ( item.episode ) {\n                        item.episode.items[1].className = 'theme-icon theme-icon-ok';\n                    }\n                    break;\n\n                case 'not_watched':\n                    activeItem.items[3].className = 'theme-icon theme-icon-ok hidden';\n                    if ( item.episode ) {\n                        item.episode.items[1].className = 'theme-icon theme-icon-ok hidden';\n                    }\n                    break;\n\n                case 'not_ended':\n                    activeItem.items[3].className = 'theme-icon theme-icon-ok disabled';\n                    if ( item.episode ) {\n                        item.episode.items[1].className = 'theme-icon theme-icon-ok disabled';\n                    }\n                    break;\n            }\n\n            if ( statusData['season_watched_status'] && item.season ) {\n                item.season.value['watched_status'] = statusData['season_watched_status'];\n                switch ( item.season.value['watched_status'] ) {\n                    case 'watched':\n                        item.season.items[1].className = 'theme-icon theme-icon-ok';\n                        break;\n\n                    case 'not_watched':\n                        item.season.items[1].className = 'theme-icon theme-icon-ok hidden';\n                        break;\n\n                    case 'not_ended':\n                        item.season.items[1].className = 'theme-icon theme-icon-ok disabled';\n                        break;\n                }\n            }\n\n            if ( item.episode ) {\n                for ( index = 0; index < item.episode.value.files.length; index++ ) {\n                    if ( item.episode.value.files[index].id === item.file.id ) {\n                        item.episode.value.files[index]['watched_status'] = config['watched_status'];\n                        if ( config['watched_time'] ) {\n                            item.episode.value.files[index]['watched_time'] = config['watched_time'];\n                        }\n                        item.episode.value['watched_status'] = config['watched_status'];\n                        switch ( config['watched_status'] ) {\n                            case 'watched':\n                                item.episode.items[1].className = 'theme-icon theme-icon-ok';\n                                break;\n\n                            case 'not_watched':\n                                item.episode.items[1].className = 'theme-icon theme-icon-ok hidden';\n                                break;\n\n                            case 'not_ended':\n                                item.episode.items[1].className = 'theme-icon theme-icon-ok disabled';\n                                break;\n                        }\n                        break;\n                    }\n                }\n            }\n\n            if ( config['watched_time'] ) {\n                item.file['watched_time'] = config['watched_time'];\n            }\n\n            page.refreshList();\n            if ( callback ) {\n                callback();\n            }\n        }\n\n    }\n\n    if ( data.intent.data && data.playerContext ) {\n        position = data.playerContext.metadata.position;\n        duration = data.playerContext.metadata.duration;\n        item = data.intent.data;\n        if ( end ) {\n            config = {\n                'watched_status': 'watched',\n                'watched_time': duration - 10\n            };\n            item.movie.changeWatchedFile(item.file.id, config, add);\n        } else if ( position > 10 ) {\n            if ( position && duration ) {\n                progress = position / duration * 100;\n                if ( progress > 95 ) {\n                    config = {\n                        'watched_status': 'watched',\n                        'watched_time': position - 10\n                    };\n                } else if ( progress > 5 ) {\n                    config = {\n                        'watched_status': 'not_ended',\n                        'watched_time': position - 10\n                    };\n                }\n                item.movie.changeWatchedFile(item.file.id, config, add);\n            }\n        }\n\n    }\n};\n\n\npage.refreshList = function ( check ) {\n    var item;\n\n    if ( check ) {\n        item = filmList.$focusItem.data;\n        switch ( item.value['watched_status'] ) {\n            case 'watched':\n                item.items[3].className = 'theme-icon theme-icon-ok';\n                break;\n            case 'not_watched':\n                item.items[3].className = 'theme-icon theme-icon-ok hidden';\n                break;\n            case 'not_ended':\n                item.items[3].className = 'theme-icon theme-icon-ok disabled';\n                break;\n        }\n    }\n\n    if ( filmList.data.length && filmList.$focusItem ) {\n        filmList.setData({data: filmList.data, focusIndex: filmList.$focusItem.index});\n    }\n};\n\n\npage.once('show', init);\n\n\n// reset on show\npage.addListeners({\n    show: function () {\n        panelSet.show();\n        panelSet.focus();\n        // app.api.playerContext = null;\n    },\n\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.back:\n                //case keys.exit:\n                panelSet.blur();\n                exit.goBack();\n                // if ( app.events['exit'] ) {\n                //     app.emit('exit');\n                // }\n                // core.call('exit');\n                break;\n\n            // case keys.playPause:\n            //     if ( panelSet.panels[panelSet.focusIndex] === filmPanel ) {\n            //         if ( filmList.$focusItem.data.value.censored || filmList.$focusItem.data.value.category.censored ) {\n            //             core.accessControl.request(function ( error ) {\n            //                 if ( !error ) {\n            //                     prepareToPlay();\n            //                 }\n            //             });\n            //         } else {\n            //             prepareToPlay();\n            //         }\n            //     }\n            //     break;\n        }\n    }\n});\n\n\n// favorite action from info page\napp.addListener('change:favorite', function ( data ) {\n    data = data || {};\n    changeFavorite(data.video, data.callback);\n});\n\n\ncore.addListeners({\n    show: function ( event ) {\n        switch ( event.source ) {\n            case core.SOURCES.LAUNCHER:\n                if ( app.api.config.search ) {\n                    return;\n                }\n\n                refreshList();\n                // app.api.playerContext = null;\n                break;\n        }\n    },\n\n    intent: function ( intent, callback ) {\n        if ( intent.action === 'videoClub' ) {\n            switch ( intent.mime ) {\n                case 'info':\n                    if ( intent.data ) {\n                        if ( app.pages.info === app.activePage ) {\n                            app.pages.info.emit('show', {\n                                data: {\n                                    info: intent.data,\n                                    type: 'intent',\n                                    callback: callback\n                                }\n                            });\n                        } else {\n                            app.route(app.pages.info, {\n                                info: intent.data,\n                                type: 'intent',\n                                callback: callback\n                            });\n                        }\n                        callback(false, null);\n                    } else {\n                        callback(true, null);\n                    }\n\n                    break;\n\n                default:\n                    app.route(app.pages.main);\n                    callback(false, null);\n                    break;\n            }\n        }\n    }\n});\n\n\nmodule.exports = page;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base page implementation.\n *\n * A full-screen top-level layer that can operate as an independent separate entity.\n * It is added to the document body on creation if not already linked.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n *\n * @example\n * var Page = require('stb/ui/page'),\n *     page = new Page({\n *         $node: document.getElementById(id)\n *     });\n *\n * page.addListener('show', function show () {\n *     // page is visible now\n * });\n */\nfunction Page ( config ) {\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    /**\n     * Page visibility/active state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.active = false;\n\n    /**\n     * Link to the currently active component with focus.\n     *\n     * @readonly\n     * @type {Component}\n     */\n    this.activeComponent = null;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'page ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // state flag\n    this.active = this.$node.classList.contains('active');\n\n    // correct DOM parent/child connection if necessary\n    if ( this.$node.parentNode === null ) {\n        document.body.appendChild(this.$node);\n    }\n\n    // always itself\n    this.page = this;\n}\n\n\n// inheritance\nPage.prototype = Object.create(Component.prototype);\nPage.prototype.constructor = Page;\n\n// set component name\nPage.prototype.name = 'spa-component-page';\n\n\n// public\nmodule.exports = Page;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stoian Roman <stoyan.roman@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar keys    = require('stb-keys'),\n    delta   = 0;\n\n/**\n * Data cacher\n *\n * Caches data in a predetermined range\n *\n * @constructor\n *\n * @param {Object}   config                 init parameters (all inherited from the parent)\n * @param {function} config.getter          method to get data for cache\n * @param {Object}   [config.request={}]    request params for getter\n * @param {number}   config.pageSize=5      amount of items on a page\n * @param {number}   [config.stepSize=5]    step size (default 1)\n * @param {number}   [config.cacheSize=2]   amount of cached pages (default 1)\n * @param {number}   [config.count=100]     length of cached list\n * @param {number}   [config.checkTime=100] aging data time in seconds\n * @param {boolean}  [config.cycle=true]    allow or not to jump to the opposite side of a list when there is nowhere to go next\n *\n * @example\n * var DataCacher = require('mag-data-cacher'),\n *     dataCacher = new DataCacher({\n *         pageSize: 7,\n *         cacheSize: 2,\n *         request: {},\n *         getter: function ( callback, config, count ) {\n *             // ...\n *         }\n *     });\n */\nfunction DataCacher ( config ) {\n    config = config || {};\n    this.size = config.pageSize;\n    this.stepSize = config.stepSize || 1;\n    this.data = [];\n    this.head = 0;\n    this.tail = 0;\n    this.pos = config.pos || 0;\n    this.cacheSize = ( config.cacheSize || 2 ) * this.size;\n    this.config = config.request || {};\n    this.botEmptyLine = false;\n    this.maxCount = config.count || 0;\n    this.headItem = config.headItem;\n    this.lastChecked = 0;\n    this.checkTime = config.checkTime * 1000 || 0;\n\n    this.cycle = config.cycle;\n    this.getter = config.getter;\n    this.blocked = false;\n\n    delta = 0;\n}\n\n// inheritance\nDataCacher.prototype.constructor = DataCacher;\n\n\n/**\n * Get part of data\n *\n * @param {number} direction to get data\n * @param {function} callback after getting data\n */\nDataCacher.prototype.get = function ( direction, callback ) {\n    var self = this,\n        error = false,\n        receivedData = [],\n        time = new Date();\n\n    if ( this.blocked ) {\n        return;\n    }\n\n    switch ( direction ) {\n        case null:\n            this.blocked = true;\n            //this.config.offset = this.pos;\n            if ( this.config.offset ) {\n                this.head = this.config.offset;\n                if ( !this.config.limit || this.config.limit < 0 ) {\n                    this.config.limit = 2 * this.cacheSize;\n                }\n            } else if ( !this.config.limit || this.config.limit < 0 ) {\n                this.config.limit = this.cacheSize;\n            }\n            this.getter(function ( error, data, maxCount ) {\n                if ( self.headItem && !self.config.offset ) {\n                    data.unshift(self.headItem);\n                    delta = 1;\n                }\n                self.lastChecked = time.getTime();\n                if ( error ) {\n                    callback(true, data);\n                } else {\n                    self.maxCount = maxCount;\n                    self.data = data;\n                    self.tail = self.head + data.length;\n                    if ( self.maxCount && self.head >= self.maxCount ) {\n                        self.goEnd(callback, true);\n\n                        return;\n                    }\n                    if ( data.length < self.config.limit ) {\n                        self.botEmptyLine = true;\n                    }\n                    if ( self.pos + self.size < self.data.length ) {\n                        receivedData = self.data.slice(self.pos, self.pos + self.size);\n                        callback(error, receivedData);\n                        self.checkNext();\n                    } else {\n                        self.checkNext(callback);\n                    }\n                }\n\n                self.blocked = false;\n            }, this.config);\n            break;\n\n        case keys.right:\n        case keys.down:\n            this.pos += this.stepSize;\n            if ( this.checkTime && time.getTime() > this.lastChecked + this.checkTime ) {\n                this.refreshData(callback);\n\n                return;\n            }\n            if ( this.pos + this.size < this.data.length ) {\n                receivedData = this.data.slice(this.pos, this.pos + this.size);\n                callback(error, receivedData);\n                this.checkNext();\n            } else {\n                this.checkNext(callback);\n            }\n            break;\n\n        case keys.pageDown:\n            this.pos += this.size - 1;\n            if ( this.checkTime && time.getTime() > this.lastChecked + this.checkTime ) {\n                this.refreshData(callback);\n\n                return;\n            }\n            if ( this.pos + this.size < this.data.length ) {\n                receivedData = this.data.slice(this.pos, this.pos + this.size);\n                callback(error, receivedData);\n                this.checkNext();\n            } else {\n                this.checkNext(callback);\n            }\n            break;\n\n        case keys.left:\n        case keys.up:\n            this.pos -= this.stepSize;\n            if ( this.checkTime && time.getTime() > this.lastChecked + this.checkTime ) {\n                this.refreshData(callback);\n\n                return;\n            }\n            if ( this.pos >= 0 ) {\n                receivedData = this.data.slice(this.pos, this.pos + this.size);\n                callback(error, receivedData);\n                this.checkPrev();\n            } else {\n                this.checkPrev(callback);\n            }\n            break;\n\n        case keys.pageUp:\n            this.pos -= this.size - 1;\n            if ( this.checkTime && time.getTime() > this.lastChecked + this.checkTime ) {\n                this.refreshData(callback);\n\n                return;\n            }\n            if ( this.pos > 0 ) {\n                receivedData = this.data.slice(this.pos, this.pos + this.size);\n                callback(error, receivedData);\n                this.checkPrev();\n            } else {\n                this.checkPrev(callback);\n            }\n            break;\n        case keys.home:\n            this.goHome(callback);\n            break;\n        case keys.end:\n            this.goEnd(callback);\n            break;\n    }\n};\n\n\n/**\n * Check and get data for next page if it need\n *\n * @param {function} cb callback after getting data\n */\nDataCacher.prototype.checkNext = function ( cb ) {\n    var count = this.cacheSize + this.pos - this.data.length,\n        self = this,\n        time = new Date();\n\n    if ( this.botEmptyLine ) {\n        if ( this.pos > this.data.length - this.size ) {\n            if ( this.cycle ) {\n                this.goHome(cb);\n\n                return;\n            }\n\n            this.pos = this.data.length - this.size;\n            if ( this.pos < 0 ) {\n                this.pos = 0;\n            }\n        }\n        if ( cb ) {\n            cb(false, this.data.slice(this.pos, this.pos + this.size));\n        }\n\n        return;\n    }\n\n    if ( count >= this.size ) {\n        if ( this.maxCount && count + this.tail > this.maxCount ) {\n            count = this.maxCount - this.tail;\n            if ( count <= 0 ) {\n                if ( self.pos > self.data.length - self.size ) {\n                    self.pos = self.data.length - self.size;\n                    if ( self.pos < 0 ) {\n                        self.pos = 0;\n                    }\n                }\n                if ( cb ) {\n                    cb(false, self.data.slice(self.pos, self.pos + self.size));\n                }\n                this.botEmptyLine = true;\n\n                return;\n            }\n        }\n        this.config.limit = count;\n        this.config.offset = this.tail - delta;\n        this.blocked = true;\n        this.getter(function ( error, data, maxCount ) {\n            if ( !error ) {\n                self.maxCount = maxCount;\n                if ( data.length < count ) {\n                    self.botEmptyLine = true;\n                }\n                if ( data.length ) {\n                    self.data = self.data.concat(data);\n                    count = self.data.length - 2 * self.cacheSize;\n                    self.tail += data.length;\n                    if ( count > 0 ) {\n                        self.data.splice(0, count);\n                        self.pos -= count;\n                        self.head += count;\n                    }\n                }\n                if ( self.pos > self.data.length - self.size ) {\n                    self.pos = self.data.length - self.size;\n                    if ( self.pos < 0 ) {\n                        self.pos = 0;\n                    }\n                }\n            }\n            self.lastChecked = time.getTime();\n            self.blocked = false;\n            if ( cb ) {\n                cb(error, self.data.slice(self.pos, self.pos + self.size));\n            }\n        }, this.config);\n    }\n};\n\n\n/**\n * Check and get data for preview page if it need\n *\n * @param {function} cb callback after getting data\n */\nDataCacher.prototype.checkPrev = function ( cb ) {\n    var count = this.cacheSize - this.pos,\n        self = this,\n        time = new Date();\n\n    if ( this.head > 0 ) {\n        if ( count >= this.size ) {\n            if ( count > this.head ) {\n                count = this.head;\n            }\n            this.config.offset = this.head - count - delta;\n            if ( this.config.offset < 0 ) {\n                this.config.offset = 0;\n                count -= delta;\n            }\n            this.config.limit = count;\n\n            this.blocked = true;\n            this.getter(function ( error, data, maxCount ) {\n                if ( !error ) {\n                    self.maxCount = maxCount;\n                    self.data = data.concat(self.data);\n                    if ( self.config.offset === 0 && self.headItem && self.data[0] !== self.headItem ) {\n                        self.data.unshift(self.headItem);\n                    }\n                    self.tail -= data.length;\n                    self.pos += data.length;\n                    count = self.data.length - 2 * self.cacheSize;\n                    self.head -= count;\n                    if ( count > 0 ) {\n                        self.data.splice(-count);\n                        self.botEmptyLine = false;\n                    }\n                }\n                self.lastChecked = time.getTime();\n                self.blocked = false;\n                if ( cb ) {\n                    cb(error, self.data.slice(self.pos, self.pos + self.size));\n                }\n            }, this.config);\n        }\n    } else {\n        if ( this.headItem && this.data[0] !== this.headItem ) {\n            this.data.unshift(this.headItem);\n        }\n\n        if ( this.pos < 0 ) {\n            if ( this.cycle ) {\n                this.goEnd(cb);\n\n                return;\n            }\n            this.pos = 0;\n        }\n        if ( cb ) {\n            cb(false, self.data.slice(self.pos, self.pos + self.size));\n        }\n    }\n};\n\n\n/**\n * Go to start of list\n *\n * @param {function} callback after getting data\n * @param {boolean} refresh need refresh data\n */\nDataCacher.prototype.goHome = function ( callback, refresh ) {\n    var receivedData = [],\n        self = this,\n        time = new Date();\n\n    if ( this.head === 0 && !refresh ) {\n        this.pos = 0;\n        if ( this.checkTime && time.getTime() > this.lastChecked + this.checkTime ) {\n            this.refreshData(callback);\n\n            return;\n        }\n        receivedData = this.data.slice(this.pos, this.pos + this.size);\n        callback(false, receivedData, 0);\n    } else {\n        this.blocked = true;\n        this.pos = 0;\n        this.head = 0;\n        this.config.offset = 0;\n        this.config.limit = this.cacheSize;\n        this.getter(function ( error, data, maxCount ) {\n            if ( !error ) {\n                self.maxCount = maxCount;\n                self.data = data;\n                if ( self.headItem && self.data[0] !== self.headItem ) {\n                    self.data.unshift(self.headItem);\n                }\n                self.tail = self.data.length;\n                receivedData = self.data.slice(self.pos, self.pos + self.size);\n                self.botEmptyLine = false;\n            }\n            self.lastChecked = time.getTime();\n            self.blocked = false;\n            callback(error, receivedData, 0);\n        }, this.config);\n    }\n};\n\n\n/**\n * Go to end of list\n *\n * @param {function} callback after getting data\n * @param {boolean} refresh need refresh data\n */\nDataCacher.prototype.goEnd = function ( callback, refresh ) {\n    var receivedData = [],\n        self = this,\n        pos,\n        time = new Date();\n\n    if ( this.maxCount ) {\n        if ( this.tail === this.maxCount && !refresh ) {\n            if ( this.checkTime && time.getTime() > this.lastChecked + this.checkTime ) {\n                this.refreshData(function ( error ) {\n                    if ( !error ) {\n                        self.goEnd(callback);\n                    }\n                });\n\n                return;\n            }\n            self.pos = self.data.length - self.size;\n            if ( self.pos < 0 ) {\n                self.pos = 0;\n            }\n            receivedData = self.data.slice(self.pos, self.pos + self.size);\n            pos = receivedData.length - 1;\n            if ( pos < 0 ) {\n                pos = 0;\n            }\n            self.botEmptyLine = true;\n            callback(false, receivedData, pos);\n        } else {\n            this.blocked = true;\n            this.head = this.maxCount - 2 * this.cacheSize;\n            if ( this.head < 0 ) {\n                this.head = 0;\n            }\n            this.config.offset = this.head;\n            this.config.limit = 2 * this.cacheSize;\n            this.getter(function ( error, data, maxCount ) {\n                if ( !error ) {\n                    self.maxCount = maxCount;\n                    self.data = data;\n                    self.pos = self.data.length - self.size;\n                    self.tail = self.head + data.length;\n                    if ( self.pos < 0 ) {\n                        self.pos = 0;\n                    }\n                    receivedData = self.data.slice(self.pos, self.pos + self.size);\n                    pos = receivedData.length - 1;\n                    if ( pos < 0 ) {\n                        pos = 0;\n                    }\n                    self.botEmptyLine = true;\n                }\n                self.blocked = false;\n                self.lastChecked = time.getTime();\n                callback(error, receivedData, pos);\n            }, this.config);\n        }\n    } else {\n        callback(true);\n    }\n};\n\n\n/**\n * Refresh data\n *\n * @param {function} callback after getting data\n */\nDataCacher.prototype.refreshData = function ( callback ) {\n    var self = this,\n        receivedData = [],\n        time = new Date();\n\n    if ( this.pos < 0 ) {\n        this.pos = 0;\n    }\n\n    this.config.offset = this.head;\n    this.config.limit = this.tail - this.head;\n    if ( this.config.limit <= 0 ) {\n        this.config.limit = this.config.offset === 0 ? this.cacheSize : 2 * this.cacheSize;\n    }\n\n    this.blocked = true;\n    this.getter(function ( error, data, maxCount ) {\n        if ( self.headItem && !self.config.offset ) {\n            data.unshift(self.headItem);\n            delta = 1;\n        }\n        if ( error ) {\n            callback(error, data);\n        } else {\n            self.lastChecked = time.getTime();\n            self.maxCount = maxCount;\n            self.data = data;\n            self.tail = self.head + data.length;\n            if ( self.maxCount && self.head >= self.maxCount ) {\n                self.goEnd(callback, true);\n\n                return;\n            }\n            if ( data.length < self.config.limit ) {\n                self.botEmptyLine = true;\n            }\n            if ( self.pos + self.size < self.data.length ) {\n                receivedData = self.data.slice(self.pos, self.pos + self.size);\n                callback(error, receivedData);\n                self.checkNext();\n            } else {\n                self.checkNext(callback);\n            }\n        }\n        self.blocked = false;\n    }, this.config);\n\n};\n\n\n// public\nmodule.exports = DataCacher;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-modal');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-modal';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base modal window implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n */\nfunction Modal ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body ) {\n            throw new Error(__filename + ': config.$body should not be provided manually');\n        }\n    }\n\n    // create centered div\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // add table-cell wrapper\n    this.$node.appendChild(document.createElement('div').appendChild(this.$body).parentNode);\n}\n\n\n// inheritance\nModal.prototype = Object.create(Component.prototype);\nModal.prototype.constructor = Modal;\n\n// set component name\nModal.prototype.name = 'spa-component-modal';\n\n\n// public\nmodule.exports = Modal;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar List = require('mag-component-list'),\n    CheckBox = require('spa-component-checkbox'),\n    counter = 0;\n\n\n/**\n * Base radio list implementation\n *\n * @constructor\n * @extends List\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n */\nfunction RadioList ( config ) {\n    var self = this;\n\n    /**\n     * Checkbox group name\n     *\n     * @type {string}\n     */\n    this.group = 'group ' +  counter++;\n\n    /**\n     * Link to checked item\n     *\n     * @type {Element}\n     */\n    this.$checkedData = null;\n\n    //config.className = 'radioList ' + (config.className || '');\n\n    List.call(this, config);\n\n    this.addListener('click:item', function ( event ) {\n        var item = event.$item;\n\n        item.checkBox.set(true);\n        item.state = item.checkBox.value;\n        item.data.state = item.checkBox.value;\n\n        if ( self.$checkedData !== item.data ) {\n            /**\n             * Select element from list.\n             *\n             * @event\n             *\n             * @type {Object}\n             * @property {Element} previous selected element\n             * @property {Element} current selected element\n             */\n            self.emit('select', {\n                $last: self.$checkedData,\n                $curr: item\n            });\n            if ( self.$checkedData ) { self.$checkedData.state = false; }\n            self.$checkedData = item.data;\n        }\n    });\n}\n\n\nRadioList.prototype = Object.create(List.prototype);\nRadioList.prototype.constructor = RadioList;\n\n// set component name\nRadioList.prototype.name = 'mag-component-radio-list';\n\nRadioList.prototype.group = 0;\n\n\n/**\n * Default render function\n *\n * @param {Element} $item in list\n * @param {Array} data to render layout element\n * @param {string} [data.title] title of checkbox\n * @param {boolean} [data.state] state of checkbox: checked or not\n * @param {string} [data.value] special value of item\n */\nRadioList.prototype.renderItemDefault = function ( $item, data ) {\n    var table = document.createElement('table'),\n        tr = document.createElement('tr'),\n        td = document.createElement('td'),\n        check = new CheckBox({\n            group: this.group\n        });\n\n    $item.innerHTML = '';\n\n    // set state with set function to prevent multiple true values\n    if ( data.state ) {\n        check.set(true);\n        // set link to checked item\n        this.$checkedData = data;\n    }\n\n    table.appendChild(tr);\n\n    td.appendChild(check.$node);\n    td.className = 'checkBoxWrapper';\n    tr.appendChild(td);\n\n    td = document.createElement('td');\n    td.className = 'title';\n    td.innerText = data.title || '';\n    tr.appendChild(td);\n\n    $item.checkBox = check;\n\n    $item.state = check.value;\n    $item.value = data.value;\n\n\n    $item.appendChild(table);\n};\n\n// RadioList.prototype.setData = function ( config ) {\n//     var i;\n//\n//     List.prototype.setData.call(this, config);\n//\n//     for ( i = 0; i < this.data.length; i++ ) {\n//         if ( this.data[i].state ) {\n//             this.$checkedData = this.data[i];\n//             break;\n//         }\n//     }\n//\n// };\n\nRadioList.prototype.renderItem = RadioList.prototype.renderItemDefault;\n\n\nmodule.exports = RadioList;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component'),\n    keys      = require('spa-keys'),\n    // set of groups with linked components;\n    groups    = {};\n\n\n/**\n * Base check box implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {boolean} [config.value=false] initial state\n * @param {string} [config.group] group name to work synchronously with other checkboxes\n *\n * @example\n * var CheckBox = require('stb/ui/check.box'),\n *     checkBox = new CheckBox({\n *         value: true,\n *         group: 'lang'\n *     });\n */\nfunction CheckBox ( config ) {\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.group && typeof config.group !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.group');\n        }\n    }\n\n    // set default className if classList property empty or undefined\n    //config.className = 'checkBox ' + (config.className || '');\n\n    // state\n    this.value = !!config.value;\n\n    // correct init styles\n    if ( this.value ) {\n        config.className += ' checked';\n    }\n\n    // group name to work synchronously with other checkboxes\n    this.group = null;\n\n    // apply hierarchy\n    if ( config.group ) {\n        // correct init styles\n        config.className += ' grouped';\n\n        // save\n        this.group = config.group;\n\n        // fill groups data\n        if ( groups[config.group] === undefined ) {\n            groups[config.group] = [this];\n        } else {\n            groups[config.group].push(this);\n        }\n    }\n\n    // parent constructor call\n    Component.call(this, config);\n}\n\n\n// inheritance\nCheckBox.prototype = Object.create(Component.prototype);\nCheckBox.prototype.constructor = CheckBox;\n\n// set component name\nCheckBox.prototype.name = 'spa-component-checkbox';\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nCheckBox.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse click events.\n     */\n    click: function () {\n        // invert state\n        this.set(!this.value);\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        // emulate click\n        if ( event.code === keys.enter ) {\n            this.set(!this.value);\n        }\n    }\n};\n\n\n/**\n * Set the given state.\n * Does nothing in case the value is already as necessary.\n *\n * @param {boolean} value new value to set\n * @return {boolean} operation status\n *\n * @fires module:\"stb/ui/check.box~CheckBox#change\"\n */\nCheckBox.prototype.set = function ( value ) {\n    var index, length;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n    }\n\n    if ( this.value !== value ) {\n        // going to be turned on and assigned to some group\n        if ( !this.value && this.group !== null ) {\n            // unset all checkboxes in this group\n            for ( index = 0, length = groups[this.group].length; index < length; index++ ) {\n                groups[this.group][index].set(false);\n            }\n        }\n\n        // set new value\n        this.value = !this.value;\n\n        // set visible changes\n        this.$node.classList.toggle('checked');\n\n        // there are some listeners\n        if ( this.events['change'] ) {\n            /**\n             * Update progress value.\n             *\n             * @event module:stb/ui/check.box~CheckBox#change\n             *\n             * @type {Object}\n             * @property {boolean} value current check state\n             */\n            this.emit('change', {value: this.value});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = CheckBox;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base scroll bar implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {number} [config.value=0] initial thumb position\n * @param {number} [config.realSize=100] actual scroll size\n * @param {number} [config.viewSize=10] visible area size\n * @param {number} [config.type] direction\n *\n * @example\n * var ScrollBar = require('stb/ui/scroll.bar'),\n *     scrollBar = new ScrollBar({\n *         viewSize: 5,\n *         realSize: 25,\n *         events: {\n *             done: function () {\n *                 debug.log('ScrollBar: done');\n *             },\n *             change: function ( data ) {\n *                 debug.log('ScrollBar: change to ' + data.curr + ' from ' + data.prev);\n *             }\n *         }\n *     });\n */\nfunction ScrollBar ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Visible area size.\n     *\n     * @type {number}\n     */\n    this.viewSize = 10;\n\n    /**\n     * Scroll area actual height or width (if scroll is horizontal).\n     *\n     * @type {number}\n     */\n    this.realSize = 100;\n\n    /**\n     * Scroll thumb position.\n     *\n     * @type {number}\n     */\n    this.value = 0;\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Geometry of the scroll thumb element.\n     *\n     * @type {ClientRect}\n     */\n    this.thumbRect = null;\n\n    /**\n     * Geometry of the scroll track element.\n     *\n     * @type {ClientRect}\n     */\n    this.trackRect = null;\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'scrollBar ' + (config.className || '');\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // insert thumb line\n    this.$thumb = this.$body.appendChild(document.createElement('div'));\n\n    // correct CSS class name\n    this.$thumb.className = 'thumb';\n\n    // component setup\n    this.init(config);\n}\n\n\n// inheritance\nScrollBar.prototype = Object.create(Component.prototype);\nScrollBar.prototype.constructor = ScrollBar;\n\n// set component name\nScrollBar.prototype.name = 'spa-component-scrollbar';\n\nScrollBar.prototype.TYPE_VERTICAL   = 1;\nScrollBar.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Init or re-init realSize/viewSize/value parameters.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nScrollBar.prototype.init = function ( config ) {\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // set actual scroll size\n    if ( config.realSize !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.realSize) !== config.realSize ) {\n                throw new Error(__filename + ': config.realSize value must be a number');\n            }\n        }\n\n        // apply\n        this.realSize = config.realSize;\n    }\n\n    // set visible area size\n    if ( config.viewSize !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.viewSize) !== config.viewSize ) {\n                throw new Error(__filename + ': config.viewSize value must be a number');\n            }\n            if ( config.viewSize < 0 ) {\n                throw new Error(__filename + ': config.viewSize value must be greater than 0');\n            }\n        }\n\n        // apply\n        this.viewSize = config.viewSize;\n    }\n\n    // show or hide thumb\n    if ( this.viewSize >= this.realSize ) {\n        this.$thumb.classList.add('hidden');\n    } else {\n        this.$thumb.classList.remove('hidden');\n    }\n\n    // set thumb position\n    if ( config.value !== undefined ) {\n        // apply\n        this.scrollTo(config.value);\n    }\n\n    // set thumb size\n    if ( this.type === this.TYPE_VERTICAL ) {\n        this.$thumb.style.height = (this.viewSize / this.realSize * 100) + '%';\n    } else {\n        this.$thumb.style.width = (this.viewSize / this.realSize * 100) + '%';\n    }\n\n    // geometry\n    this.thumbRect = this.$thumb.getBoundingClientRect();\n    this.trackRect = this.$node.getBoundingClientRect();\n};\n\n\n/**\n * Set position of the given value.\n * Does nothing in case when scroll is in the end and passed value is more than scroll bar length.\n *\n * @param {number} value new value to set\n * @return {boolean} operation result\n *\n * @fires module:stb/ui/scroll.bar~ScrollBar#done\n * @fires module:stb/ui/scroll.bar~ScrollBar#change\n */\nScrollBar.prototype.scrollTo = function ( value ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(value) !== value ) {\n            throw new Error(__filename + ': value must be a number');\n        }\n        if ( this.realSize > this.viewSize && value > this.realSize - this.viewSize ) {\n            throw new Error(__filename + ': value is greater than this.realSize-this.viewSize');\n        }\n        if ( value < 0 ) {\n            throw new Error(__filename + ': value is less then 0');\n        }\n    }\n\n    // value has changed\n    if ( this.value !== value ) {\n        // track and thumb geometry was not set\n        if ( this.thumbRect.height === 0 || this.thumbRect.width === 0 ) {\n            // apply\n            this.trackRect = this.$node.getBoundingClientRect();\n            this.thumbRect = this.$thumb.getBoundingClientRect();\n        }\n\n        // set scroll bar width\n        if ( this.type === this.TYPE_VERTICAL ) {\n            this.$thumb.style.marginTop = ((this.trackRect.height - this.thumbRect.height) * value / (this.realSize - this.viewSize)) + 'px';\n        } else {\n            this.$thumb.style.marginLeft = ((this.trackRect.width - this.thumbRect.width) * value / (this.realSize - this.viewSize)) + 'px';\n        }\n\n        // there are some listeners\n        if ( this.events['change'] ) {\n            /**\n             * Update scroll value.\n             *\n             * @event module:stb/ui/scroll.bar~ScrollBar#change\n             *\n             * @type {Object}\n             * @property {number} prev old/previous scroll value\n             * @property {number} curr new/current scroll value\n             */\n            this.emit('change', {curr: value, prev: this.value});\n        }\n\n        // is it the end?\n        if ( value >= this.realSize ) {\n            value = this.realSize;\n\n            // there are some listeners\n            if ( this.events['done'] ) {\n                /**\n                 * Set scroll to its maximum value.\n                 *\n                 * @event module:stb/ui/scroll.bar~ScrollBar#done\n                 */\n                this.emit('done');\n            }\n        }\n\n        // set new value\n        this.value = value;\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = ScrollBar;\n","/**\n * Exit from an app in three ways.\n *\n * @module app.exit\n * @author Yaroslav Surilov <y.surilov@infomir.com>\n */\n\n'use strict';\n\nvar app   = require('mag-app'),\n    exit  = {};\n\n\n/**\n * Go back to Launcher from an app.\n */\nexit.goBack = function () {\n    core.call('stop');\n};\n\n/**\n * Exit from app.\n * Destroy all application instance.\n * If callback function provided, and callback returns boolean 'true', application will stay alive.\n *\n * @param {Function} [callback] - provide callback if u want to handle exit result, or cancel it\n */\nexit.goExit = function ( callback ) {\n    var ModalMessage  = require('mag-component-modal'),\n        LayoutList    = require('mag-component-layout-list'),\n        keys          = require('stb-keys'),\n        previousFocus = app.activePage.activeComponent,\n        exitModal;\n\n    app.activePage.add(exitModal = new ModalMessage({\n        title: gettext('Exit'),\n        events: {\n            show: function () {\n                this.children[0].focus();\n            },\n            hide: function () {\n                previousFocus.focus();\n            }\n        },\n        children: [\n            new LayoutList({\n                className: 'padded',\n                size: 2,\n                focusIndex: 0,\n                data: [\n                    {\n                        items: [\n                            {\n                                value: gettext('Yes')\n                            }\n                        ],\n                        click: function () {\n                            if ( typeof callback === 'function' ) {\n                                if ( callback(true) ) {\n                                    exitModal.hide();\n                                    exitModal.remove();\n\n                                    return;\n                                }\n                            }\n\n                            exitModal.hide();\n                            exitModal.remove();\n\n                            app.exit();\n                        }\n                    },\n                    {\n                        items: [\n                            {\n                                value: gettext('No')\n                            }\n                        ],\n                        click: function () {\n                            if ( typeof callback === 'function' ) {\n                                callback(false);\n                            }\n                            exitModal.hide();\n                            exitModal.remove();\n                            app.mainPanelSet.focus();\n                        }\n                    }\n                ],\n                events: {\n                    keydown: function ( event ) {\n                        LayoutList.prototype.defaultEvents.keydown.call(this, event);\n                        if ( event.code === keys.back ) {\n                            event.stop = true;\n                            if ( typeof callback === 'function' ) {\n                                callback(false);\n                            }\n                            exitModal.hide();\n                            exitModal.remove();\n                            app.mainPanelSet.focus();\n                        }\n                    }\n                }\n            })\n        ]\n    }));\n\n    exitModal.show();\n    exitModal.focus();\n};\n\n\nmodule.exports = exit;\n","'use strict';\n\n/**\n * Change server data to list data.\n *\n * @param {Array} data - data for prepare\n *\n * @return {Array} prepared data for LayoutList\n */\nmodule.exports = function ( data ) {\n    var result = [],\n        titleText, dateText,\n        className;\n\n    data = data || [];\n\n    data.forEach(function ( item ) {\n        var genres = item.genres.map(function ( genre ) {\n                return genre.name;\n            }),\n\n            $titleWrap = document.createElement('div'),\n            $title     = document.createElement('div'),\n            $text      = document.createElement('div');\n\n        $title.className = 'name';\n        $text.className = 'subData theme-text-disabled' + (genres.length ? ' visible' : '');\n        $title.innerText = titleText = item.name || item['original_name'];\n        $text.innerText = dateText = genres.join(', ');\n\n        $titleWrap.appendChild($title);\n        $titleWrap.appendChild($text);\n\n        switch ( item['watched_status'] ) {\n            case 'watched':\n                className = 'theme-icon theme-icon-ok';\n                break;\n            case 'not_watched':\n                className = 'theme-icon theme-icon-ok hidden';\n                break;\n            case 'not_ended':\n                className = 'theme-icon theme-icon-ok disabled';\n                break;\n        }\n\n        result.push({\n            items: [\n                {\n                    name: '$title',\n                    className: 'title',\n                    value: $titleWrap,\n                    htmlInstance: true,\n                    realValue: {title: titleText, genre: dateText}\n                },\n                {\n                    name: '$lock',\n                    className: ((item.censored || (item.category && item.category.censored)) ?\n                        'theme-icon theme-icon-lock disabled' : 'theme-icon theme-icon-lock disabled hidden')\n                },\n                {\n                    name: '$favorite',\n                    className: (item.favorite ?\n                        'theme-icon theme-icon-favorite-active active' : 'theme-icon theme-icon-favorite-active active hidden')\n                },\n                {\n                    name: '$status',\n                    className: className\n                }\n            ],\n            value: item\n        });\n    });\n\n    return result;\n};\n","'use strict';\n\nvar dom        = require('spa-dom'),\n    Scrollbar  = require('stb-component-scrollbar'),\n    ScrollArea = require('mag-component-scroll-area'),\n\n    infoPanel = {},\n\n    tag = dom.tag,\n\n    $lockContainer = tag('div', {className: 'info theme-icon theme-icon-lock'}),\n    $poster = tag('div', {className: 'info poster'}),\n    $rating = tag('div', {className: 'info actors'}),\n    $director = tag('div', {className: 'info director'}),\n    $actors = tag('div', {className: 'info actors'}),\n    $infoContainer;\n\n\n$infoContainer = tag(\n    'div',\n    {},\n    $poster,\n    tag('div', {className: 'info title theme-subhead-color'}, gettext('Rating:')),\n    $rating,\n    tag('div', {className: 'info title theme-subhead-color'}, gettext('Director:')),\n    $director,\n    tag('div', {className: 'info title theme-subhead-color'}, gettext('Actors:')),\n    $actors\n);\n\ninfoPanel.textArea = new ScrollArea({\n    propagate: true,\n    step: 5,\n    scroll: new Scrollbar({})\n});\n\ninfoPanel.textArea.$body.appendChild($infoContainer);\ninfoPanel.textArea.$body.appendChild($lockContainer);\n\ninfoPanel.clear = function () {\n    $poster.style.backgroundImage = '';\n    $infoContainer.style.display = 'none';\n    $actors.innerText = '';\n    $rating.innerText = '';\n    $director.innerText = '';\n    this.textArea.init();\n};\n\ninfoPanel.showInfo = function () {\n    $infoContainer.style.display = 'block';\n    $lockContainer.style.display = 'none';\n    this.textArea.init();\n};\n\ninfoPanel.showLock = function () {\n    $infoContainer.style.display = 'none';\n    $lockContainer.style.display = 'block';\n    this.textArea.init();\n};\n\ninfoPanel.fill = function ( value ) {\n    if ( value.cover ) {\n        $poster.style.backgroundImage = 'url(' + core.backend.host + value.cover + ')';\n    } else {\n        $poster.style.backgroundImage = '';\n    }\n    $rating.innerText = value['rating_imdb'] || value['rating_kinopoisk'];\n\n    $actors.innerText = value.actors;\n    $director.innerText = value.director;\n    infoPanel.textArea.init();\n};\n\n\nmodule.exports = infoPanel;\n","'use strict';\n\n\nvar Layout = require('mag-component-layout');\n\n\n/**\n * Render item function for tv channel list.\n *\n * @param {HTMLElement} $item - item to render\n * @param {Object} config - configuration of new data\n */\nmodule.exports = function ( $item, config ) {\n    var layout, layoutConfig,\n        currentNode, currentData, index;\n\n    if ( $item.ready ) {\n        for ( index = 0; index < config.items.length; index++ ) {\n            currentData = config.items[index];\n\n            if ( typeof currentData.value === 'string' || currentData.value === undefined ) {\n                currentNode = $item.layout.$node.childNodes[index];\n                currentNode.innerText = currentData.value || '';\n                currentNode.className = currentData.className || '';\n            } else if ( currentData.htmlInstance ) {\n                currentNode = $item.layout.$node.childNodes[index];\n                $item.domLinks.$title.innerText = currentData.realValue.title;\n                $item.domLinks.$genre.innerText = currentData.realValue.genre || '';\n            }\n        }\n    } else {\n        // clear inner content\n        while ( $item.firstChild ) {\n            $item.removeChild($item.firstChild);\n        }\n\n        layoutConfig = {\n            focusable: false,\n            data: config.items\n        };\n\n        if ( config.className ) {\n            layoutConfig.className = config.className;\n        }\n\n        layout = new Layout(layoutConfig);\n\n        // on init list save needed links\n        $item.domLinks = {\n            $title: config.items[0].value.firstChild,\n            $genre: config.items[0].value.firstChild.nextSibling\n        };\n\n        $item.appendChild(layout.$node);\n        $item.layout = layout;\n        layout.parent = this;\n        layout.$parentItem = $item;\n\n        // focus layoutList if click on layout\n        layout.addListener('click',\n            /**\n             * @this layout\n             */\n            function () {\n                // add inner property to set that event comes from inner component\n                this.parent.emit('click:item', {$item: $item, inner: true});\n            });\n\n        if ( config.click ) {\n            this.handlers[$item.index] = config.click;\n        }\n\n        // item is rendered\n        $item.ready = true;\n    }\n\n    $item.value = config.value || {};\n};\n","'use strict';\n\n/* eslint max-lines: 0 */\n/* eslint max-lines-per-function: 0 */\n/* eslint quote-props: 0  */\n\nvar Page           = require('stb-component-page'),\n    app            = require('mag-app'),\n\n    dom            = require('spa-dom'),\n    keys           = require('stb-keys'),\n\n    PanelSet       = require('mag-component-panel-set'),\n    Panel          = require('mag-component-panel'),\n    TabItem        = require('spa-component-tab'),\n\n    ModalMessage   = require('mag-component-modal'),\n    LayoutList     = require('mag-component-layout-list'),\n    ScrollArea     = require('mag-component-scroll-area'),\n    Scrollbar      = require('stb-component-scrollbar'),\n\n    prepareSeasons = require('../utils/prepare.seasons'),\n    prepareFiles   = require('../utils/prepare.files'),\n    sortQuality    = require('../utils/sort.quality'),\n    parseTime      = require('../utils/parse.time'),\n\n    page = new Page({$node: document.getElementById('pageInfo')}),\n\n    textArea, actionModal,\n    // actionListModal,\n    scrollList = new Scrollbar({}),\n    types = {\n        active: 1,\n        file: 1,\n        season: 2,\n        series: 3\n    },\n    configRequest = {},\n    historyStack = [],\n    infoTable = [],\n    infoData = null,\n    tag = dom.tag,\n\n    listAction, leftList, footer, Footer,\n    panelSet, infoPanel, leftPanel,\n    descriptionItem, playItem,\n    $poster, $info, $description, $favorite,\n    scroll, playText, seasonTitle,\n    playList,\n    playModal, refreshData, refreshPlayList,\n    pressOk, modalPlayList,\n    playHistory, leftListData;\n\n\nif ( TARGET !== 'android-stb' && TARGET !== 'android-app'  ) {\n    Footer = require('mag-component-footer');\n    footer = new Footer({visible: false, parent: page});\n}\n\n\n/**\n * Back function.\n */\nfunction moveBack () {\n    var item;\n\n    if ( historyStack.length === 0 ) {\n        app.route(app.pages.main);\n\n        return;\n    }\n\n    item = historyStack.pop();\n    types.active = item.type;\n    playList.setData({focusIndex: item.focus, data: item.data});\n    playText = item.title;\n    infoPanel.title.links.$name.innerText = playText;\n}\n\n\n/**\n * Prepare object to play.\n *\n * @param {Object} data - data to play\n * @param {Object} config - config to prepare\n */\nfunction prepareToPlay ( data, config ) {\n    var selectFile = require('../utils/select.file'),\n\n        activeItem = data || playList.$focusItem.value,\n        name = infoData.name,\n        languages = [],\n        hasNext = false,\n        hasPrevios = false,\n        previosHandler = null,\n        nextHandler = null,\n        // playerContext = config && config.context,\n        // intent = config && config.intent,\n        item;\n\n    config = config || {};\n\n    function checkFile () {\n        var file;\n\n        file = selectFile(playList.data.slice(1), languages, config.intent.data.file);\n\n        if ( file ) {\n            playList.focusIndex(file.index);\n            prepareToPlay(file.value, config);\n        } else {\n            config.playerContext = null;\n            config.intent.close();\n        }\n    }\n\n    function selectNextFile ( code ) {\n        var needTitle = true;\n\n        languages = config.playerContext.metadata.audioLang;\n        app.pages.main.saveVideo(function () {\n            refreshData(true);\n        }, config, true);\n\n        switch ( types.active ) {\n            case types.file:\n                moveBack();\n                needTitle = false;\n            /* eslint no-fallthrough: 0 */\n            case types.series:\n                playList.move(code);\n                if ( needTitle ) {\n                    playText = historyStack[historyStack.length - 1].title;\n                }\n                pressOk(checkFile);\n                break;\n            /* eslint no-fallthrough: 2 */\n        }\n    }\n\n    function closeIntent () {\n        app.pages.main.saveVideo(refreshData, config);\n        config.playerContext = null;\n        config.intent.close();\n    }\n\n    if ( infoData['is_tv_series'] ) {\n        switch ( types.active ) {\n            case types.file:\n                item = historyStack[historyStack.length - 1];\n                hasNext = item.focus + 1 < item.data.length;\n                hasPrevios = item.focus > 1;\n                break;\n            case types.series:\n                hasNext = playList.$focusItem.index + 1 < playList.data.length;\n                hasPrevios = playList.$focusItem.index > 1;\n                break;\n        }\n\n        if ( hasNext ) {\n            nextHandler = function () {\n                selectNextFile(keys.down);\n            };\n        }\n        if ( hasPrevios ) {\n            previosHandler = function () {\n                selectNextFile(keys.up);\n            };\n        }\n    }\n\n    playHistory = {\n        data: playList.data,\n        focus: playList.$focusItem.index,\n        type: types.active\n    };\n\n    /**\n     * Play object.\n     *\n     * @param {boolean} error - have some error\n     * @param {string} uri - uri to play\n     */\n    function play ( error, uri ) {\n        if ( error ) {\n            return;\n        }\n\n        if ( infoData['is_tv_series'] && historyStack.length ) {\n            name += ' ' + seasonTitle + ' ' + playText;\n        }\n\n\n        function startPlay ( position ) {\n            var season, episode;\n\n            if ( infoData['is_tv_series'] && historyStack.length ) {\n                episode = historyStack[historyStack.length - 1];\n                episode = episode.data[episode.focus];\n                season = historyStack[0];\n                season = season.data[season.focus];\n            }\n\n            config.intent = core.intent({\n                action: 'play',\n                mime: 'content/video',\n                data: {\n                    title: name,\n                    uri: uri,\n                    movie: infoData,\n                    file: activeItem,\n                    season: season,\n                    episode: episode,\n                    position: position,\n                    subtitles: activeItem.subtitleList,\n                    mediaId: activeItem.id\n                },\n                events: {\n                    end: function () {\n                        app.pages.main.saveVideo(refreshData, config, true);\n\n                        if ( nextHandler ) {\n                            nextHandler();\n\n                            return;\n                        }\n                        config.playerContext = null;\n                        config.intent.close();\n                    },\n                    error: closeIntent,\n                    stop: closeIntent,\n                    hide: closeIntent,\n                    next: nextHandler,\n                    prev: previosHandler,\n                    close: function () {\n                        if ( config.playerContext ) {\n                            app.pages.main.saveVideo(refreshData, config);\n                            config.playerContext = null;\n                        }\n                    }\n                },\n                context: config.playerContext\n            }, function ( error, context ) {\n                debug.fail('Play error', error);\n                config.playerContext = context;\n                if ( DEVELOP ) {\n                    window.context1 = context;\n                }\n            });\n        }\n\n        if ( activeItem.watched_time && activeItem.watched_status === 'not_ended' && !config.playerContext ) {\n            panelSet.blur();\n            playModal.show({file: activeItem, movie: infoData, callback: startPlay, name: name});\n\n            if ( config.intent ) {\n                config.intent.close();\n            }\n\n            return;\n        }\n\n        startPlay(0);\n    }\n\n    if ( activeItem.url ) {\n        play(false, activeItem.url);\n    } else {\n        infoData.getUrl(activeItem.id, play);\n    }\n}\n\n\n/**\n * Add/remove to/from favorites.\n */\nfunction favorite () {\n    var favoriteLinks;\n\n    if ( TARGET === 'android-stb' || TARGET === 'android-app' ) {\n        favoriteLinks = leftList.links.favorite.links;\n    }\n\n    if ( infoData.favorite ) {\n        $favorite.style.display = 'none';\n        if ( TARGET === 'android-stb' || TARGET === 'android-app' ) {\n            favoriteLinks.$icon.className = 'theme-icon theme-icon-favorite';\n            favoriteLinks.$title.innerText = gettext('Add to favorite');\n        }\n    } else {\n        $favorite.style.display = 'block';\n        if ( TARGET === 'android-stb' || TARGET === 'android-app' ) {\n            favoriteLinks.$icon.className = 'theme-icon theme-icon-favorite-active active';\n            favoriteLinks.$title.innerText = gettext('Remove from favorites');\n        }\n    }\n\n    app.emit('change:favorite', {\n        video: infoData,\n        callback: function ( error ) {\n            if ( error ) {\n                if ( infoData.favorite ) {\n                    $favorite.style.display = 'block';\n                    if ( TARGET === 'android-stb' || TARGET === 'android-app' ) {\n                        favoriteLinks.$icon.className = 'theme-icon theme-icon-favorite-active active';\n                        favoriteLinks.$title.innerText = gettext('Remove from favorites');\n                    }\n                } else {\n                    $favorite.style.display = 'none';\n                    if ( TARGET === 'android-stb' || TARGET === 'android-app' ) {\n                        favoriteLinks.$icon.className = 'theme-icon theme-icon-favorite';\n                        favoriteLinks.$title.innerText = gettext('Add to favorite');\n                    }\n                }\n            }\n        }\n    });\n}\n\n\n// function setWatched ( add, infoFlag ) {\n//     var activeItem = playList.$focusItem,\n//         season, episode, files,\n//         flag;\n//\n//     function checked ( error, data ) {\n//         if ( error || !data.status ) {\n//             return;\n//         }\n//\n//         infoData['watched_status'] = data['movie_watched_status'];\n//         if ( flag ) {\n//             flag.value['watched_status'] = add ? 'watched' : 'not_watched';\n//             flag.items[1].className = add ? 'theme-icon theme-icon-ok' : 'theme-icon theme-icon-ok hidden';\n//         }\n//         if ( season ) {\n//             if ( data['season_watched_status'] ) {\n//                 season.value['watched_status'] = data['season_watched_status'];\n//             } else {\n//                 season.value['watched_status'] = add ? 'watched' : 'not_watched';\n//             }\n//\n//             switch ( season.value['watched_status'] ) {\n//                 case 'watched':\n//                     season.items[1].className = 'theme-icon theme-icon-ok';\n//                     break;\n//\n//                 case 'not_watched':\n//                     season.items[1].className = 'theme-icon theme-icon-ok hidden';\n//                     break;\n//\n//                 case 'not_ended':\n//                     season.items[1].className = 'theme-icon theme-icon-ok disabled';\n//                     break;\n//             }\n//         }\n//\n//         if ( episode ) {\n//             episode.items[1].className = add ? 'theme-icon theme-icon-ok' : 'theme-icon theme-icon-ok hidden';\n//         }\n//\n//         refreshPlayList();\n//         app.pages.main.refreshList(true);\n//     }\n//\n//     if ( infoFlag ) {\n//         infoData.changeFlags({'watched_status': add ? 'watched' : 'not_watched'}, function ( error, data ) {\n//             var index, status;\n//\n//             if ( !error && data ) {\n//                 infoData['watched_status'] = status = add ? 'watched' : 'not_watched';\n//                 if ( !infoData['is_tv_series'] ) {\n//                     for ( index = 0; index < infoData.files.length; index++ ) {\n//                         infoData.files[index]['watched_status'] = status;\n//                     }\n//                 }\n//                 refreshPlayList();\n//                 app.pages.main.refreshList(true);\n//             }\n//         });\n//     } else {\n//         switch ( types.active ) {\n//             case types.file:\n//                 if ( infoData['is_tv_series'] && historyStack.length ) {\n//                     episode = historyStack[1];\n//                     episode = episode.data[episode.focus];\n//                     season = historyStack[0];\n//                     season = season.data[season.focus];\n//                 }\n//                 flag = activeItem.data;\n//                 infoData.changeWatchedFile(activeItem.value.id,\n//                     {'watched_status': add ? 'watched' : 'not_watched', 'watched_time': 0}, checked);\n//                 break;\n//\n//             case types.season:\n//                 season = activeItem.data;\n//                 infoData.changeWatchedSeason(activeItem.value.id,\n//                     {'watched_status': add ? 'watched' : 'not_watched', 'watched_time': 0}, checked);\n//                 break;\n//\n//             case types.series:\n//                 if ( infoData['is_tv_series'] && historyStack.length ) {\n//                     season = historyStack[0];\n//                     season = season.data[season.focus];\n//                     files = activeItem.value.files;\n//                 }\n//                 if ( files.length ) {\n//                     infoData.changeWatchedFile(files[0].id, {'watched_status': add ? 'watched' : 'not_watched', 'watched_time': 0},\n//                         function ( error, data ) {\n//                             var index;\n//\n//                             if ( error ) {\n//                                 return;\n//                             }\n//\n//                             episode = activeItem.data;\n//                             checked(error, data);\n//                             for ( index = 1; index < files.length; index++ ) {\n//                                 infoData.changeWatchedFile(files[index].id, {'watched_status': add ? 'watched' : 'not_watched'},\n//                                     function () { return false; });\n//                             }\n//                         });\n//                 }\n//                 break;\n//         }\n//     }\n//\n// }\n\n\n/**\n * Click function.\n *\n * @param {Function} [callback] - result handler\n */\npressOk = function ( callback ) {\n    var activeItem = playList.$focusItem.value,\n        list = [];\n\n    if ( DEVELOP ) {\n        window.h = historyStack;\n    }\n    switch ( types.active ) {\n        case types.file:\n            prepareToPlay();\n            break;\n\n        case types.season:\n            historyStack.push({\n                type: types.season,\n                data: playList.data,\n                title: playText,\n                focus: playList.$focusItem.index\n            });\n            playText = playList.$focusItem.data.items[0].value;\n            seasonTitle = playText;\n            infoPanel.title.links.$name.innerText = seasonTitle;\n            configRequest.seasonId = activeItem.id;\n            infoData.getSeries(activeItem.id, function ( error, data ) {\n                list = error ? [] : prepareSeasons(data, true);\n                list.unshift({\n                    items: [\n                        {\n                            className: 'theme-icon theme-icon-back'\n                        },\n                        {\n                            className: 'title',\n                            value: '. .'\n                        }\n\n                    ],\n                    value: null\n                });\n                types.active = types.series;\n                playList.setData({focusIndex: 0, data: list});\n                if ( callback ) {\n                    callback();\n                }\n            });\n            break;\n\n        case types.series:\n            historyStack.push({\n                type: types.series,\n                data: playList.data,\n                title: seasonTitle,\n                focus: playList.$focusItem.index\n            });\n            configRequest.episodeId = activeItem.id;\n            playText = playList.$focusItem.data.items[0].value;\n            infoData.getEpisode(configRequest, function ( error, data ) {\n                list = error ? [] : prepareFiles(infoData, data.files);\n\n                if ( list.length === 1 && !callback ) {\n                    prepareToPlay(list[0].value);\n                    historyStack.pop();\n\n                    return;\n                }\n\n                infoPanel.title.links.$name.innerText = playText;\n                list.unshift({\n                    items: [\n                        {\n                            className: 'theme-icon theme-icon-back'\n                        },\n                        {\n                            className: 'title',\n                            value: '. .'\n                        }\n\n                    ],\n                    value: null\n                });\n                types.active = types.file;\n                playList.setData({focusIndex: 0, data: list});\n                if ( callback ) {\n                    callback();\n                }\n            });\n            break;\n    }\n};\n\n\nrefreshData = function ( noRefresh ) {\n    var item;\n\n    switch ( types.active ) {\n        case types.file:\n            if ( playHistory.type !== types.active || playHistory.data !== playList.data || noRefresh ) {\n                return;\n            }\n\n            item = playHistory.data[playHistory.focus];\n            switch ( item.value.watched_status ) {\n                case 'watched':\n                    item.items[1].className = 'theme-icon theme-icon-ok';\n                    break;\n                case 'not_watched':\n                    item.items[1].className = 'theme-icon theme-icon-ok hidden';\n                    break;\n                case 'not_ended':\n                    item.items[1].className = 'theme-icon theme-icon-ok disabled';\n                    break;\n            }\n    }\n    playHistory = null;\n    refreshPlayList();\n};\n\n\nrefreshPlayList = function () {\n    if ( playList.data.length && playList.$focusItem ) {\n        playList.setData({data: playList.data, focusIndex: playList.$focusItem.index});\n    }\n};\n\n\ndescriptionItem = new TabItem({\n    propagate: true,\n    focusable: true,\n    events: {\n        focus: function () {\n            textArea.focus();\n        },\n        keydown: function ( event ) {\n            var name = infoData.name,\n                subtitleList = [],\n                file, files, intent, playerContext, index;\n\n            //Play focus item.\n            function play ( error, url ) {\n\n                function closeIntent () {\n                    app.pages.main.saveVideo(null, {intent: intent, playerContext: playerContext});\n                    playerContext = null;\n                    intent.close();\n                }\n\n                function startPlay ( position ) {\n                    intent = core.intent({\n                        action: 'play',\n                        mime: 'content/video',\n                        data: {\n                            title: name,\n                            uri: url,\n                            movie: infoData,\n                            file: file,\n                            position: position,\n                            externalSubtitles: subtitleList,\n                            mediaId: file.id\n                        },\n                        events: {\n                            end: function () {\n                                app.pages.main.saveVideo(null, {intent: intent, playerContext: playerContext}, true);\n                                playerContext = null;\n                                intent.close();\n                            },\n                            error: closeIntent,\n                            stop: closeIntent,\n                            hide: closeIntent,\n                            next: null,\n                            prev: null,\n                            close: function () {\n                                if ( playerContext ) {\n                                    app.pages.main.saveVideo(null, {intent: intent, playerContext: playerContext});\n                                }\n                            }\n                        },\n                        context: playerContext\n                    }, function ( error, context ) {\n                        debug.fail('Playing error', error);\n                        playerContext = context;\n                    });\n                }\n\n                if ( error ) {\n                    return;\n                }\n\n\n                if ( file.watched_status === 'not_ended' && file.watched_time ) {\n                    panelSet.blur();\n                    playModal.show({file: file, movie: infoData, callback: startPlay});\n\n                    if ( intent ) {\n                        intent.close();\n                    }\n\n                    return;\n                }\n\n                startPlay(0);\n            }\n\n            switch ( event.code ) {\n                case keys.ok:\n                    leftList.focusIndex(1);\n                    infoPanel.title.links.$name.innerText = playText;\n                    playItem.show();\n                    infoPanel.focus();\n                    if ( !infoData['is_tv_series'] && playList.data.length === 1 ) {\n                        prepareToPlay();\n                    }\n                    break;\n\n                case keys.playPause:\n                    if ( infoData['is_tv_series'] ) {\n                        if ( playList.data.length ) {\n                            if ( infoData.last_watched_season_id ) {\n                                for ( index = 0; index < playList.data.length; index++ ) {\n                                    if ( infoData.last_watched_season_id === playList.data[index].value.id ) {\n                                        playList.focusIndex(index);\n                                        break;\n                                    }\n                                }\n                            }\n                            pressOk(function () {\n                                var selectedIndex = 1;\n\n                                if ( playList.data.length > 1 ) {\n                                    if ( infoData.last_watched_episode_id ) {\n                                        for ( index = 1; index < playList.data.length; index++ ) {\n                                            if ( infoData.last_watched_episode_id === playList.data[index].value.id ) {\n                                                selectedIndex = index;\n                                                break;\n                                            }\n                                        }\n                                    }\n                                    playList.focusIndex(selectedIndex);\n\n                                    pressOk(function () {\n                                        if ( playList.data.length > 1 ) {\n                                            selectedIndex = 1;\n                                            if ( infoData.last_watched_file_id ) {\n                                                for ( index = 1; index < playList.data.length; index++ ) {\n                                                    if ( infoData.last_watched_file_id === playList.data[index].value.id ) {\n                                                        selectedIndex = index;\n                                                        break;\n                                                    }\n                                                }\n                                            }\n                                            playList.focusIndex(selectedIndex);\n                                            playItem.show();\n                                            infoPanel.focus();\n                                            pressOk();\n                                        } else {\n                                            playItem.show();\n                                            infoPanel.focus();\n                                        }\n\n                                    });\n                                } else {\n                                    playItem.show();\n                                    infoPanel.focus();\n                                }\n                            });\n                        }\n                    } else {\n                        if ( infoData['last_watched_file_id'] ) {\n                            for ( index = 0; index < infoData.files.length; index++ ) {\n                                if ( infoData['last_watched_file_id'] === infoData.files[index].id ) {\n                                    file = infoData.files[index];\n                                    if ( file.url ) {\n                                        play(false, file.url);\n                                    } else {\n                                        infoData.getUrl(file.id, play);\n                                    }\n\n                                    return;\n                                }\n                            }\n                        }\n                        files = sortQuality(infoData, infoData.files);\n                        subtitleList = files.subtitles;\n                        files = files.video;\n                        if ( files.length ) {\n                            file = files[0];\n                        } else {\n                            return;\n                        }\n                        if ( file.url ) {\n                            play(false, file.url);\n                        } else {\n                            infoData.getUrl(file.id, play);\n                        }\n                    }\n                    break;\n            }\n        }\n    }\n});\n\n\nplayList = new LayoutList({\n    focusIndex: 0,\n    size: 7,\n    className: 'padded playList',\n    propagate: true,\n    focusable: true,\n    fixedData: true,\n    cycle: true,\n    events: {\n        'click:item': function ( event ) {\n            if ( !event.$item.data.value && historyStack.length ) {\n                moveBack();\n\n                return;\n            }\n            pressOk();\n        }\n        // focus: function () {\n        //     if ( TARGET !== 'android-stb' && TARGET !== 'android-app'  ) {\n        //         footer.init({\n        //             left: {\n        //                 code: keys.menu,\n        //                 action: favorite\n        //             }\n        //         });\n        //         footer.show();\n        //     }\n        //\n        // },\n        // blur: function () {\n        //     if ( TARGET !== 'android-stb' && TARGET !== 'android-app'  ) {\n        //         footer.hide();\n        //     }\n        // }\n\n    },\n    scroll: scrollList\n});\n\n\nplayItem = new TabItem({\n    propagate: true,\n    focusable: true,\n    children: [playList, scrollList],\n    events: {\n        focus: function () {\n            playList.focus();\n        }\n    }\n});\n\n\nif ( TARGET === 'android-stb' || TARGET === 'android-app' ) {\n    leftListData = [\n        {\n            name: 'play',\n            items: [\n                {\n                    className: 'theme-icon theme-icon-play'\n                },\n                {\n                    name: '$title',\n                    value: gettext('Play')\n                }\n            ],\n            click: function () {\n                infoPanel.title.links.$name.innerText = playText;\n                playItem.show();\n                infoPanel.focus();\n                if ( !infoData['is_tv_series'] && playList.data.length === 1 ) {\n                    prepareToPlay();\n                }\n            }\n        },\n        {\n            items: [\n                {\n                    className: 'theme-icon theme-icon-categories'\n                },\n                {\n                    value: gettext('Description')\n                }\n            ],\n            click: function () {\n                descriptionItem.show();\n                infoPanel.title.links.$name.innerText = gettext('Description');\n                infoPanel.focus();\n            }\n        },\n        {\n            name: 'favorite',\n            items: [\n                {\n                    name: '$icon',\n                    className: 'theme-icon theme-icon-favorite'\n                },\n                {\n                    name: '$title',\n                    value: gettext('Add to favorite')\n                }\n            ],\n            click: favorite\n        }\n    ];\n} else {\n    leftListData = [\n        {\n            items: [\n                {\n                    className: 'theme-icon theme-icon-categories'\n                },\n                {\n                    value: gettext('Description')\n                }\n            ],\n            click: function () {\n                descriptionItem.show();\n                infoPanel.title.links.$name.innerText = gettext('Description');\n                infoPanel.focus();\n                //textArea.focus();\n            }\n        },\n        {\n            name: 'play',\n            items: [\n                {\n                    className: 'theme-icon theme-icon-play'\n                },\n                {\n                    name: '$title',\n                    value: gettext('Play')\n                }\n            ],\n            click: function () {\n                infoPanel.title.links.$name.innerText = playText;\n                playItem.show();\n                infoPanel.focus();\n                if ( !infoData['is_tv_series'] && playList.data.length === 1 ) {\n                    prepareToPlay();\n                }\n            }\n        }\n    ];\n}\n\nleftPanel = new Panel({\n    title: [\n        {\n            value: gettext('Section'),\n            className: 'name'\n        }\n    ],\n    children: [\n        leftList = new LayoutList({\n            focusIndex: 0,\n            size: 7,\n            // className: 'padded',\n            fixedData: true,\n            cycle: true,\n            data: leftListData\n        })\n    ]\n});\n\n\ninfoPanel = new Panel({\n    title: [\n        {\n            name: '$name',\n            value: gettext('Description'),\n            className: 'name'\n        }\n    ],\n    main: true,\n    size: 2,\n    children: [descriptionItem, playItem],\n    events: {\n        focus: function () {\n            if ( this.currentTab ) {\n                this.currentTab.focus();\n            } else {\n                Panel.prototype.defaultEvents.focus.call(this);\n            }\n        }\n    }\n});\n\n\npanelSet = new PanelSet({\n    visible: false,\n    panels: [leftPanel, infoPanel]\n});\npage.add(panelSet);\n\n\nif ( TARGET !== 'android-stb' && TARGET !== 'android-app' ) {\n    actionModal = new ModalMessage({\n        title: gettext('Actions'),\n        className: 'width2x',\n        events: {\n            show: function () {\n                var linksFavorite = listAction.links.favorite.links;\n                // linksWatchedStatus = listAction.links.watchedStatus.links;\n\n                if ( infoData.favorite ) {\n                    linksFavorite.$icon.className = 'theme-icon theme-icon-favorite-active active';\n                    linksFavorite.$title.innerText = gettext('Remove from favorites');\n                } else {\n                    linksFavorite.$icon.className = 'theme-icon theme-icon-favorite';\n                    linksFavorite.$title.innerText = gettext('Add to favorite');\n                }\n\n                // if ( infoData['watched_status'] === 'watched' ) {\n                //     linksWatchedStatus.$icon.className = 'theme-icon';\n                //     linksWatchedStatus.$title.innerText = gettext('Remove from watched');\n                // } else {\n                //     linksWatchedStatus.$icon.className = 'theme-icon theme-icon-ok';\n                //     linksWatchedStatus.$title.innerText = gettext('Mark as watched');\n                // }\n            },\n            hide: function () {\n                panelSet.focus();\n            }\n        },\n        children: [\n            listAction = new LayoutList({\n                size: 1,\n                focusIndex: 0,\n                cycle: true,\n                fixedData: true,\n                data: [\n                    {\n                        name: 'favorite',\n                        items: [\n                            {\n                                name: '$icon',\n                                className: 'theme-icon theme-icon-favorite'\n                            },\n                            {\n                                name: '$title',\n                                className: 'title',\n                                value: gettext('Add to favorite')\n                            }\n                        ],\n                        click: function () {\n                            actionModal.hide();\n                            favorite();\n                        }\n                    }\n                    // {\n                    //     name: 'watchedStatus',\n                    //     items: [\n                    //         {\n                    //             name: '$icon',\n                    //             className: 'theme-icon theme-icon-ok'\n                    //         },\n                    //         {\n                    //             name: '$title',\n                    //             className: 'title',\n                    //             value: gettext('Mark as watched')\n                    //         }\n                    //     ],\n                    //     click: function () {\n                    //         actionModal.hide();\n                    //         setWatched(true, true);\n                    //     }\n                    // }\n                ],\n                events: {\n                    keydown: function ( event ) {\n                        LayoutList.prototype.defaultEvents.keydown.call(this, event);\n                        switch ( event.code ) {\n                            case keys.menu:\n                            case keys.back:\n                                actionModal.hide();\n                                event.stop = true;\n                                break;\n                            case keys.left:\n                            case keys.right:\n                                event.stop = true;\n                                break;\n                        }\n                    }\n                }\n            })\n        ]\n    });\n    page.add(actionModal);\n\n\n    // actionListModal = new ModalMessage({\n    //     title: gettext('Actions'),\n    //     className: 'width2x',\n    //     events: {\n    //         show: function () {\n    //             //this.children[0].focus();\n    //         },\n    //         hide: function () {\n    //             panelSet.focus();\n    //         }\n    //     },\n    //     children: [\n    //         new LayoutList({\n    //             size: 2,\n    //             focusIndex: 0,\n    //             cycle: true,\n    //             fixedData: true,\n    //             className: 'padded',\n    //             data: [\n    //                 {\n    //                     items: [\n    //                         {\n    //                             className: 'title',\n    //                             value: gettext('Mark as watched')\n    //                         }\n    //                     ],\n    //                     click: function () {\n    //                         actionListModal.hide();\n    //                         setWatched(true);\n    //                     }\n    //                 },\n    //                 {\n    //                     items: [\n    //                         {\n    //                             className: 'title',\n    //                             value: gettext('Mark as unwatched')\n    //                         }\n    //                     ],\n    //                     click: function () {\n    //                         actionListModal.hide();\n    //                         setWatched(false);\n    //                     }\n    //                 }\n    //             ],\n    //             events: {\n    //                 keydown: function ( event ) {\n    //                     LayoutList.prototype.defaultEvents.keydown.call(this, event);\n    //                     switch ( event.code ) {\n    //                         case keys.menu:\n    //                         case keys.back:\n    //                             actionListModal.hide();\n    //                             event.stop = true;\n    //                             break;\n    //                         case keys.left:\n    //                         case keys.right:\n    //                             event.stop = true;\n    //                             break;\n    //                     }\n    //                 }\n    //             }\n    //         })\n    //     ]\n    // });\n    // page.add(actionListModal);\n}\n\n\nplayModal = new ModalMessage({\n    visible: false,\n    title: gettext('Play'),\n    className: 'width2x',\n    events: {\n        show: function ( data ) {\n            this.configData = data;\n            this.children[0].focus();\n            this.$text.innerText = data.name;\n            modalPlayList.links.continueWatch.links.$title.innerText = gettext('Continue watching from') + ' ' +\n                parseTime(data.file.watched_time);\n        }\n    },\n    children: [\n        modalPlayList = new LayoutList({\n            focusIndex: 0,\n            size: 2,\n            cycle: true,\n            fixedData: true,\n            className: 'padded',\n            data: [\n                {\n                    name: 'continueWatch',\n                    items: [\n                        {\n                            name: '$title',\n                            className: 'title',\n                            value: gettext('Continue watching from')\n                        }\n                    ],\n                    click: function () {\n                        if ( playModal.configData.callback ) {\n                            playModal.configData.callback(playModal.configData.file.watched_time);\n                        }\n                    }\n                },\n                {\n                    items: [\n                        {\n                            className: 'title',\n                            value: gettext('Watch again')\n                        }\n                    ],\n                    click: function () {\n                        if ( playModal.configData.callback ) {\n                            playModal.configData.callback(0);\n                        }\n                    }\n                }\n            ],\n            events: {\n                'click:item': function () {\n                    playModal.hide();\n                    panelSet.focus();\n                },\n                keydown: function ( event ) {\n                    LayoutList.prototype.defaultEvents.keydown.call(this, event);\n                    switch ( event.code ) {\n                        case keys.left:\n                            event.stop = true;\n                            break;\n                        case keys.back:\n                            playModal.hide();\n                            panelSet.focus();\n                            event.stop = true;\n                            break;\n                    }\n                }\n            }\n        })\n    ]\n});\npage.add(playModal);\n\n\nif ( DEVELOP ) {\n    window.playList = playList;\n    window.infoPanel = infoPanel;\n    window.infoLeftList = leftList;\n}\n\n\n/**\n * Init page.\n */\npage.once('show', function () {\n    var tableNames = [\n            gettext('Name:'),\n            gettext('Genre:'),\n            gettext('Duration:'),\n            gettext('Year:'),\n            gettext('Country:'),\n            gettext('Director:'),\n            gettext('Actors:'),\n            gettext('Censored:')\n        ],\n        $tr, $tdTitle, $tdDescription, $table,\n        index;\n\n    if ( TARGET !== 'android-stb' && TARGET !== 'android-app' ) {\n        footer.init({\n            left: {\n                code: keys.menu,\n                action: function () {\n                    panelSet.blur();\n                    footer.hide();\n                    actionModal.show();\n                    actionModal.focus();\n                }\n            },\n            middle: [\n                {\n                    code: keys.f3,\n                    title: gettext('Favorite'),\n                    action: favorite\n                }\n            ]\n        });\n        footer.hide();\n    }\n\n\n    $info = tag('div', {className: 'info'});\n    $poster = tag('div', {className: 'poster'});\n    $description = tag('div', {className: 'desc'});\n    $favorite = tag('div', {className: 'fav'});\n    $table = tag('table');\n    $poster.appendChild($favorite);\n\n    for ( index = 0; index < tableNames.length; index++ ) {\n        $tdTitle = tag('td', {className: 'left theme-subhead-color'}, tableNames[index]);\n        $tdDescription = tag('td');\n\n        $tr = tag('tr', {}, $tdTitle, $tdDescription);\n        $table.appendChild($tr);\n        infoTable.push({line: $tr, text: $tdDescription});\n    }\n    $description.appendChild($table);\n\n    textArea = new ScrollArea({\n        propagate: true,\n        focusable: true,\n        step: 5,\n        scroll: scroll = new Scrollbar(),\n        events: {\n            focus: function () {\n                if ( TARGET !== 'android-stb' && TARGET !== 'android-app' ) {\n                    footer.init({\n                        left: {\n                            code: keys.menu,\n                            action: function () {\n                                panelSet.blur();\n                                footer.hide();\n                                actionModal.show();\n                                actionModal.focus();\n                            }\n                        },\n                        middle: [\n                            {\n                                code: keys.f3,\n                                title: gettext('Favorite'),\n                                action: favorite\n                            }\n                        ]\n                    });\n                    footer.show();\n                }\n\n            },\n            blur: function () {\n                if ( TARGET !== 'android-stb' && TARGET !== 'android-app' ) {\n                    footer.hide();\n                }\n            }\n        }\n    });\n\n    textArea.$body.appendChild($poster);\n    textArea.$body.appendChild($description);\n    textArea.$body.appendChild($info);\n\n    descriptionItem.add(textArea);\n    descriptionItem.add(scroll);\n    descriptionItem.show();\n});\n\n\n/**\n * Fill pages layouts.\n */\npage.addListeners({\n    show: function ( data ) {\n        var list = [],\n            genres = [],\n            index;\n\n        if ( !data || !data.data ) {\n            return;\n        }\n\n        infoData = data.data.info;\n        if ( DEVELOP ) {\n            window.infoData = infoData;\n        }\n\n        if ( infoData.cover ) {\n            $poster.style.backgroundImage = 'url(' + core.backend.host + infoData.cover + ')';\n        } else {\n            $poster.style.backgroundImage = '';\n        }\n\n        if ( infoData.favorite ) {\n            $favorite.style.display = 'block';\n        } else {\n            $favorite.style.display = 'none';\n        }\n        infoTable[0].text.innerText = infoData.name;\n        for ( index = 0; index < infoData.genres.length; index++ ) {\n            genres.push(infoData.genres[index].name);\n        }\n\n        infoTable[1].text.innerText = genres.join(', ');\n        infoTable[2].text.innerText = infoData.duration + ' ' + gettext('min.');\n        infoTable[3].text.innerText = infoData.year + (infoData.year_end && infoData.year_end !== '0' ? (' - ') + infoData.year_end : '');\n        infoTable[4].text.innerText = infoData.country;\n        infoTable[5].text.innerText = infoData.director;\n        infoTable[6].text.innerText = infoData.actors;\n        if ( !infoData.rating_mpaa && !infoData.age ) {\n            infoTable[7].line.style.display = 'none';\n        } else {\n            infoTable[7].line.style.display = '';\n            infoTable[7].text.innerText = '';\n            if ( infoData.age ) {\n                infoTable[7].text.innerText += infoData.age;\n            }\n            if ( infoData.rating_mpaa ) {\n                infoTable[7].text.innerText += infoData.age ? ' (' + infoData.rating_mpaa + ')' : infoData.rating_mpaa;\n            }\n        }\n        $info.innerText = infoData.description;\n\n        if ( infoData['is_tv_series'] ) {\n            playText = gettext('Seasons');\n            types.active = types.season;\n            infoData.getSeasons(function ( error, seasons ) {\n                debug.fail('Request error', error);\n                list = prepareSeasons(seasons);\n                playList.setData({focusIndex: 0, data: list});\n            });\n        } else {\n            playText = gettext('Play');\n            types.active = types.file;\n            list = prepareFiles(infoData, infoData.files);\n            playList.setData({focusIndex: 0, data: list});\n        }\n\n        descriptionItem.show();\n        infoPanel.title.links.$name.innerText = gettext('Description');\n        if ( TARGET === 'android-stb' || TARGET === 'android-app' ) {\n            if ( infoData.favorite ) {\n                leftList.links.favorite.links.$icon.className = 'theme-icon theme-icon-favorite-active active';\n                leftList.links.favorite.links.$title.innerText = gettext('Remove from favorites');\n            } else {\n                leftList.links.favorite.links.$icon.className = 'theme-icon theme-icon-favorite';\n                leftList.links.favorite.links.$title.innerText = gettext('Add to favorite');\n            }\n        }\n        leftList.focusIndex(0);\n        panelSet.show();\n        infoPanel.focus();\n        textArea.init();\n    },\n\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.back:\n                moveBack();\n                break;\n            case keys.left:\n                infoPanel.emit('keydown', event);\n                break;\n        }\n    }\n});\n\n\nmodule.exports = page;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Tab item implementation.\n * This component has redefined methods 'show' and 'hide', use them to switch between tabs.\n * All tab items are created invisible by default.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n *\n * @example\n * var Tab = require('stb/ui/tab.item'),\n *     tabItem = new Tab({\n *         $node: window.someId,\n *         children: [\n *             new Panel({\n *                 $node: window.anotherId\n *             })\n *         ],\n *         events: {\n *             show: function ( event ) {\n *                 // tab was activated\n *             },\n *             hide: function ( event ) {\n *                 // tab was hidden\n *             }\n *         }\n *     });\n *\n * tabList.add(tabItem);\n */\nfunction Tab ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'tabItem hidden ' + (config.className || '');\n\n    config.className += ' hidden';\n\n    // prevent parent hiding\n    config.visible = null;\n\n    // parent constructor call\n    Component.call(this, config);\n\n    this.visible = false;\n}\n\n\n// inheritance\nTab.prototype = Object.create(Component.prototype);\nTab.prototype.constructor = Tab;\n\n// set component name\nTab.prototype.name = 'spa-component-tab';\n\n\n/**\n * Make the tab visible, i.e. set active tab, and notify subscribers.\n * Hide previous visible tab if exists.\n *\n * @param {Object} [data] custom data which passed into handlers\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/tab.item~Tab#show\n */\nTab.prototype.show = function ( data ) {\n    var prev = null;\n\n    if ( DEVELOP ) {\n        if ( !this.parent ) {\n            throw new Error(__filename + ': no parent for tab item');\n        }\n        // if ( this.parent.constructor.name !== 'TabList' ) {\n        //     throw new Error(__filename + ': wrong parent for tab item');\n        // }\n        if ( this.parent.currentTab && !(this.parent.currentTab instanceof Tab) ) {\n            throw new Error(__filename + ': wrong current tab item type');\n        }\n    }\n\n    // is it hidden\n    if ( !this.visible ) {\n        // hide previous tab\n        if ( this.parent.currentTab ) {\n            prev = this.parent.currentTab;\n            prev.hide(data);\n        }\n\n        Component.prototype.show.call(this, data);\n        this.parent.currentTab = this;\n\n        /*// there are some listeners\n         if ( this.parent.events['switch'] ) {\n         this.parent.emit('switch', {prev: prev, curr: this});\n         }*/\n\n        return true;\n    }\n\n    // nothing was done\n    return true;\n};\n\n\n/**\n * Make the tab hidden and notify subscribers.\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/tab.item~Tab#hide\n */\nTab.prototype.hide = function () {\n    if ( DEVELOP ) {\n        if ( !this.parent ) {\n            throw new Error(__filename + ': no parent for tab item');\n        }\n        // if ( this.parent.constructor.name !== 'TabList' ) {\n        //     throw new Error(__filename + ': wrong parent for tab item');\n        // }\n        if ( this.parent.currentTab && !(this.parent.currentTab instanceof Tab) ) {\n            throw new Error(__filename + ': wrong current tab item type');\n        }\n    }\n\n    if ( Component.prototype.hide.call(this) ) {\n        this.parent.currentTab = null;\n\n        return true;\n    }\n\n    // nothing was done\n    return true;\n};\n\n\n// public\nmodule.exports = Tab;\n","'use strict';\n\n/**\n * Prepare data for series list.\n *\n * @param {Object} data - data to prepare\n * @param {boolean} series - is it series\n *\n * @return {Array} prepared data\n */\nmodule.exports = function ( data, series ) {\n    var result = [],\n        name, index,\n        className;\n\n    data.forEach(function ( item ) {\n        if ( series ) {\n            name = item.name\n                ? item.name + (item['original_name'] ? ' ( ' + item['original_name'] + ' )' : '')\n                : gettext('Series') + ' ' + item.number;\n\n            className = 'theme-icon theme-icon-ok hidden';\n\n            for ( index = 0; index < item.files.length; index++ ) {\n                if ( item.files[index]['watched_status'] === 'not_ended' ) {\n                    className = 'theme-icon theme-icon-ok disabled';\n                    break;\n                }\n            }\n\n            for ( index = 0; index < item.files.length; index++ ) {\n                if ( item.files[index]['watched_status'] === 'watched' ) {\n                    className = 'theme-icon theme-icon-ok';\n                    break;\n                }\n            }\n        } else {\n            name = item.name\n                ? item.name + (item['original_name'] ? ' ( ' + item['original_name'] + ' )' : '')\n                : gettext('Season') + ' ' + item.number;\n\n            switch ( item.watched_status ) {\n                case 'watched':\n                    className = 'theme-icon theme-icon-ok';\n                    break;\n                case 'not_watched':\n                    className = 'theme-icon theme-icon-ok hidden';\n                    break;\n                case 'not_ended':\n                    className = 'theme-icon theme-icon-ok disabled';\n                    break;\n            }\n        }\n        result.push({\n            items: [\n                {\n                    className: 'title',\n                    value: name\n                },\n                {\n                    className: className\n                }\n\n            ],\n            value: item\n        });\n    });\n\n    return result;\n};\n","'use strict';\n\nvar iso639      = require('cjs-iso-639'),\n    sortQuality = require('./sort.quality');\n\n/**\n * Prepare data for files list.\n *\n * @param {Object} video - movie object\n * @param {Object} data - data to prepare\n *\n * @return {Array} prepared data\n */\nmodule.exports = function ( video, data ) {\n    var subtitleList = [],\n        result = [],\n        name, tempLanguage,\n        languages, className;\n\n    data = sortQuality(video, data);\n    subtitleList = data.subtitles;\n    data = data.video;\n\n    data.forEach(function ( item ) {\n        languages = [];\n        item.subtitleList = subtitleList;\n        if ( item.languages.length ) {\n            item.languages.forEach(function ( language ) {\n                tempLanguage = iso639['1'][language] ||\n                    iso639['2B'][language] ||\n                    iso639['2T'][language];\n\n                if ( tempLanguage ) {\n                    languages.push(tempLanguage[1]);\n                } else {\n                    languages.push(language || gettext('Unknown language'));\n                }\n            });\n\n            languages = languages.join(', ');\n        } else {\n            languages = gettext('Unknown language');\n        }\n\n        switch ( item['watched_status'] ) {\n            case 'watched':\n                className = 'theme-icon theme-icon-ok';\n                break;\n            case 'not_watched':\n                className = 'theme-icon theme-icon-ok hidden';\n                break;\n            case 'not_ended':\n                className = 'theme-icon theme-icon-ok disabled';\n                break;\n        }\n\n        if ( item.quality ) {\n            name = (item.quality.code ? item.quality.code + ' (' : '(')\n                + (item.quality.name || gettext('Unknown quality')) + ')';\n        } else {\n            name = '(' + gettext('Unknown quality') + ')';\n        }\n\n        result.push({\n            items: [\n                {\n                    className: 'title',\n                    value: languages + ' ' + name\n                },\n                {\n                    className: className\n                }\n            ],\n            value: item\n        });\n    });\n\n    return result;\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar langs = require('langs/data'),\n    codes = {\n        1:    {},\n        '2T': {},\n        '2B': {}\n    },\n    index, size, lang;\n\n\n// rework language data\nfor ( index = 0, size = langs.length; index < size; index++ ) {\n    lang = langs[index];\n\n    // link all tables with the same data\n    codes['1'][lang['1']] = codes['2T'][lang['2T']] = codes['2B'][lang['2B']] = [lang.name, lang.local];\n}\n\n// clear\nlangs = null;\n\n\n// public\nmodule.exports = codes;\n","module.exports = [\n    {\"name\":\"Abkhaz\", \"local\":\"Аҧсуа\", \"1\":\"ab\", \"2\":\"abk\", \"2T\":\"abk\", \"2B\":\"abk\", \"3\":\"abk\"},\n    {\"name\":\"Afar\", \"local\":\"Afaraf\", \"1\":\"aa\", \"2\":\"aar\", \"2T\":\"aar\", \"2B\":\"aar\", \"3\":\"aar\"},\n    {\"name\":\"Afrikaans\", \"local\":\"Afrikaans\", \"1\":\"af\", \"2\":\"afr\", \"2T\":\"afr\", \"2B\":\"afr\", \"3\":\"afr\"},\n    {\"name\":\"Akan\", \"local\":\"Akan\", \"1\":\"ak\", \"2\":\"aka\", \"2T\":\"aka\", \"2B\":\"aka\", \"3\":\"aka\"},\n    {\"name\":\"Albanian\", \"local\":\"Shqip\", \"1\":\"sq\", \"2\":\"sqi\", \"2T\":\"sqi\", \"2B\":\"alb\", \"3\":\"sqi\"},\n    {\"name\":\"Amharic\", \"local\":\"አማርኛ\", \"1\":\"am\", \"2\":\"amh\", \"2T\":\"amh\", \"2B\":\"amh\", \"3\":\"amh\"},\n    {\"name\":\"Arabic\", \"local\":\"العربية\", \"1\":\"ar\", \"2\":\"ara\", \"2T\":\"ara\", \"2B\":\"ara\", \"3\":\"ara\"},\n    {\"name\":\"Aragonese\", \"local\":\"Aragonés\", \"1\":\"an\", \"2\":\"arg\", \"2T\":\"arg\", \"2B\":\"arg\", \"3\":\"arg\"},\n    {\"name\":\"Armenian\", \"local\":\"Հայերեն\", \"1\":\"hy\", \"2\":\"hye\", \"2T\":\"hye\", \"2B\":\"arm\", \"3\":\"hye\"},\n    {\"name\":\"Assamese\", \"local\":\"অসমীয়া\", \"1\":\"as\", \"2\":\"asm\", \"2T\":\"asm\", \"2B\":\"asm\", \"3\":\"asm\"},\n    {\"name\":\"Avaric\", \"local\":\"Авар\", \"1\":\"av\", \"2\":\"ava\", \"2T\":\"ava\", \"2B\":\"ava\", \"3\":\"ava\"},\n    {\"name\":\"Avestan\", \"local\":\"avesta\", \"1\":\"ae\", \"2\":\"ave\", \"2T\":\"ave\", \"2B\":\"ave\", \"3\":\"ave\"},\n    {\"name\":\"Aymara\", \"local\":\"Aymar\", \"1\":\"ay\", \"2\":\"aym\", \"2T\":\"aym\", \"2B\":\"aym\", \"3\":\"aym\"},\n    {\"name\":\"Azerbaijani\", \"local\":\"Azərbaycanca\", \"1\":\"az\", \"2\":\"aze\", \"2T\":\"aze\", \"2B\":\"aze\", \"3\":\"aze\"},\n    {\"name\":\"Bambara\", \"local\":\"Bamanankan\", \"1\":\"bm\", \"2\":\"bam\", \"2T\":\"bam\", \"2B\":\"bam\", \"3\":\"bam\"},\n    {\"name\":\"Bashkir\", \"local\":\"Башҡортса\", \"1\":\"ba\", \"2\":\"bak\", \"2T\":\"bak\", \"2B\":\"bak\", \"3\":\"bak\"},\n    {\"name\":\"Basque\", \"local\":\"Euskara\", \"1\":\"eu\", \"2\":\"eus\", \"2T\":\"eus\", \"2B\":\"baq\", \"3\":\"eus\"},\n    {\"name\":\"Belarusian\", \"local\":\"Беларуская\", \"1\":\"be\", \"2\":\"bel\", \"2T\":\"bel\", \"2B\":\"bel\", \"3\":\"bel\"},\n    {\"name\":\"Bengali\", \"local\":\"বাংলা\", \"1\":\"bn\", \"2\":\"ben\", \"2T\":\"ben\", \"2B\":\"ben\", \"3\":\"ben\"},\n    {\"name\":\"Bihari\", \"local\":\"भोजपुरी\", \"1\":\"bh\", \"2\":\"bih\", \"2T\":\"bih\", \"2B\":\"bih\", \"3\":\"bih\"},\n    {\"name\":\"Bislama\", \"local\":\"Bislama\", \"1\":\"bi\", \"2\":\"bis\", \"2T\":\"bis\", \"2B\":\"bis\", \"3\":\"bis\"},\n    {\"name\":\"Bosnian\", \"local\":\"Bosanski\", \"1\":\"bs\", \"2\":\"bos\", \"2T\":\"bos\", \"2B\":\"bos\", \"3\":\"bos\"},\n    {\"name\":\"Breton\", \"local\":\"Brezhoneg\", \"1\":\"br\", \"2\":\"bre\", \"2T\":\"bre\", \"2B\":\"bre\", \"3\":\"bre\"},\n    {\"name\":\"Bulgarian\", \"local\":\"Български\", \"1\":\"bg\", \"2\":\"bul\", \"2T\":\"bul\", \"2B\":\"bul\", \"3\":\"bul\"},\n    {\"name\":\"Burmese\", \"local\":\"မြန်မာဘာသာ\", \"1\":\"my\", \"2\":\"mya\", \"2T\":\"mya\", \"2B\":\"bur\", \"3\":\"mya\"},\n    {\"name\":\"Catalan\", \"local\":\"Català\", \"1\":\"ca\", \"2\":\"cat\", \"2T\":\"cat\", \"2B\":\"cat\", \"3\":\"cat\"},\n    {\"name\":\"Chamorro\", \"local\":\"Chamoru\", \"1\":\"ch\", \"2\":\"cha\", \"2T\":\"cha\", \"2B\":\"cha\", \"3\":\"cha\"},\n    {\"name\":\"Chechen\", \"local\":\"Нохчийн\", \"1\":\"ce\", \"2\":\"che\", \"2T\":\"che\", \"2B\":\"che\", \"3\":\"che\"},\n    {\"name\":\"Chichewa\", \"local\":\"Chichewa\", \"1\":\"ny\", \"2\":\"nya\", \"2T\":\"nya\", \"2B\":\"nya\", \"3\":\"nya\"},\n    {\"name\":\"Chinese\", \"local\":\"中文\", \"1\":\"zh\", \"2\":\"zho\", \"2T\":\"zho\", \"2B\":\"chi\", \"3\":\"zho\"},\n    {\"name\":\"Chuvash\", \"local\":\"Чӑвашла\", \"1\":\"cv\", \"2\":\"chv\", \"2T\":\"chv\", \"2B\":\"chv\", \"3\":\"chv\"},\n    {\"name\":\"Cornish\", \"local\":\"Kernewek\", \"1\":\"kw\", \"2\":\"cor\", \"2T\":\"cor\", \"2B\":\"cor\", \"3\":\"cor\"},\n    {\"name\":\"Corsican\", \"local\":\"Corsu\", \"1\":\"co\", \"2\":\"cos\", \"2T\":\"cos\", \"2B\":\"cos\", \"3\":\"cos\"},\n    {\"name\":\"Cree\", \"local\":\"ᓀᐦᐃᔭᐍᐏᐣ\", \"1\":\"cr\", \"2\":\"cre\", \"2T\":\"cre\", \"2B\":\"cre\", \"3\":\"cre\"},\n    {\"name\":\"Croatian\", \"local\":\"Hrvatski\", \"1\":\"hr\", \"2\":\"hrv\", \"2T\":\"hrv\", \"2B\":\"hrv\", \"3\":\"hrv\"},\n    {\"name\":\"Czech\", \"local\":\"Čeština\", \"1\":\"cs\", \"2\":\"ces\", \"2T\":\"ces\", \"2B\":\"cze\", \"3\":\"ces\"},\n    {\"name\":\"Danish\", \"local\":\"Dansk\", \"1\":\"da\", \"2\":\"dan\", \"2T\":\"dan\", \"2B\":\"dan\", \"3\":\"dan\"},\n    {\"name\":\"Divehi\", \"local\":\"Divehi\", \"1\":\"dv\", \"2\":\"div\", \"2T\":\"div\", \"2B\":\"div\", \"3\":\"div\"},\n    {\"name\":\"Dutch\", \"local\":\"Nederlands\", \"1\":\"nl\", \"2\":\"nld\", \"2T\":\"nld\", \"2B\":\"dut\", \"3\":\"nld\"},\n    {\"name\":\"Dzongkha\", \"local\":\"རྫོང་ཁ\", \"1\":\"dz\", \"2\":\"dzo\", \"2T\":\"dzo\", \"2B\":\"dzo\", \"3\":\"dzo\"},\n    {\"name\":\"English\", \"local\":\"English\", \"1\":\"en\", \"2\":\"eng\", \"2T\":\"eng\", \"2B\":\"eng\", \"3\":\"eng\"},\n    {\"name\":\"Esperanto\", \"local\":\"Esperanto\", \"1\":\"eo\", \"2\":\"epo\", \"2T\":\"epo\", \"2B\":\"epo\", \"3\":\"epo\"},\n    {\"name\":\"Estonian\", \"local\":\"Eesti\", \"1\":\"et\", \"2\":\"est\", \"2T\":\"est\", \"2B\":\"est\", \"3\":\"est\"},\n    {\"name\":\"Ewe\", \"local\":\"Eʋegbe\", \"1\":\"ee\", \"2\":\"ewe\", \"2T\":\"ewe\", \"2B\":\"ewe\", \"3\":\"ewe\"},\n    {\"name\":\"Faroese\", \"local\":\"Føroyskt\", \"1\":\"fo\", \"2\":\"fao\", \"2T\":\"fao\", \"2B\":\"fao\", \"3\":\"fao\"},\n    {\"name\":\"Fijian\", \"local\":\"Na Vosa Vaka-Viti\", \"1\":\"fj\", \"2\":\"fij\", \"2T\":\"fij\", \"2B\":\"fij\", \"3\":\"fij\"},\n    {\"name\":\"Finnish\", \"local\":\"Suomi\", \"1\":\"fi\", \"2\":\"fin\", \"2T\":\"fin\", \"2B\":\"fin\", \"3\":\"fin\"},\n    {\"name\":\"French\", \"local\":\"Français\", \"1\":\"fr\", \"2\":\"fra\", \"2T\":\"fra\", \"2B\":\"fre\", \"3\":\"fra\"},\n    {\"name\":\"Fula\", \"local\":\"Fulfulde\", \"1\":\"ff\", \"2\":\"ful\", \"2T\":\"ful\", \"2B\":\"ful\", \"3\":\"ful\"},\n    {\"name\":\"Galician\", \"local\":\"Galego\", \"1\":\"gl\", \"2\":\"glg\", \"2T\":\"glg\", \"2B\":\"glg\", \"3\":\"glg\"},\n    {\"name\":\"Georgian\", \"local\":\"ქართული\", \"1\":\"ka\", \"2\":\"kat\", \"2T\":\"kat\", \"2B\":\"geo\", \"3\":\"kat\"},\n    {\"name\":\"German\", \"local\":\"Deutsch\", \"1\":\"de\", \"2\":\"deu\", \"2T\":\"deu\", \"2B\":\"ger\", \"3\":\"deu\"},\n    {\"name\":\"Greek\", \"local\":\"Ελληνικά\", \"1\":\"el\", \"2\":\"ell\", \"2T\":\"ell\", \"2B\":\"gre\", \"3\":\"ell\"},\n    {\"name\":\"Guaraní\", \"local\":\"Avañe'ẽ\", \"1\":\"gn\", \"2\":\"grn\", \"2T\":\"grn\", \"2B\":\"grn\", \"3\":\"grn\"},\n    {\"name\":\"Gujarati\", \"local\":\"ગુજરાતી\", \"1\":\"gu\", \"2\":\"guj\", \"2T\":\"guj\", \"2B\":\"guj\", \"3\":\"guj\"},\n    {\"name\":\"Haitian\", \"local\":\"Kreyòl Ayisyen\", \"1\":\"ht\", \"2\":\"hat\", \"2T\":\"hat\", \"2B\":\"hat\", \"3\":\"hat\"},\n    {\"name\":\"Hausa\", \"local\":\"هَوُسَ\", \"1\":\"ha\", \"2\":\"hau\", \"2T\":\"hau\", \"2B\":\"hau\", \"3\":\"hau\"},\n    {\"name\":\"Hebrew\", \"local\":\"עברית\", \"1\":\"he\", \"2\":\"heb\", \"2T\":\"heb\", \"2B\":\"heb\", \"3\":\"heb\"},\n    {\"name\":\"Herero\", \"local\":\"Otjiherero\", \"1\":\"hz\", \"2\":\"her\", \"2T\":\"her\", \"2B\":\"her\", \"3\":\"her\"},\n    {\"name\":\"Hindi\", \"local\":\"हिन्दी\", \"1\":\"hi\", \"2\":\"hin\", \"2T\":\"hin\", \"2B\":\"hin\", \"3\":\"hin\"},\n    {\"name\":\"Hiri Motu\", \"local\":\"Hiri Motu\", \"1\":\"ho\", \"2\":\"hmo\", \"2T\":\"hmo\", \"2B\":\"hmo\", \"3\":\"hmo\"},\n    {\"name\":\"Hungarian\", \"local\":\"Magyar\", \"1\":\"hu\", \"2\":\"hun\", \"2T\":\"hun\", \"2B\":\"hun\", \"3\":\"hun\"},\n    {\"name\":\"Interlingua\", \"local\":\"Interlingua\", \"1\":\"ia\", \"2\":\"ina\", \"2T\":\"ina\", \"2B\":\"ina\", \"3\":\"ina\"},\n    {\"name\":\"Indonesian\", \"local\":\"Bahasa Indonesia\", \"1\":\"id\", \"2\":\"ind\", \"2T\":\"ind\", \"2B\":\"ind\", \"3\":\"ind\"},\n    {\"name\":\"Interlingue\", \"local\":\"Interlingue\", \"1\":\"ie\", \"2\":\"ile\", \"2T\":\"ile\", \"2B\":\"ile\", \"3\":\"ile\"},\n    {\"name\":\"Irish\", \"local\":\"Gaeilge\", \"1\":\"ga\", \"2\":\"gle\", \"2T\":\"gle\", \"2B\":\"gle\", \"3\":\"gle\"},\n    {\"name\":\"Igbo\", \"local\":\"Igbo\", \"1\":\"ig\", \"2\":\"ibo\", \"2T\":\"ibo\", \"2B\":\"ibo\", \"3\":\"ibo\"},\n    {\"name\":\"Inupiaq\", \"local\":\"Iñupiak\", \"1\":\"ik\", \"2\":\"ipk\", \"2T\":\"ipk\", \"2B\":\"ipk\", \"3\":\"ipk\"},\n    {\"name\":\"Ido\", \"local\":\"Ido\", \"1\":\"io\", \"2\":\"ido\", \"2T\":\"ido\", \"2B\":\"ido\", \"3\":\"ido\"},\n    {\"name\":\"Icelandic\", \"local\":\"Íslenska\", \"1\":\"is\", \"2\":\"isl\", \"2T\":\"isl\", \"2B\":\"ice\", \"3\":\"isl\"},\n    {\"name\":\"Italian\", \"local\":\"Italiano\", \"1\":\"it\", \"2\":\"ita\", \"2T\":\"ita\", \"2B\":\"ita\", \"3\":\"ita\"},\n    {\"name\":\"Inuktitut\", \"local\":\"ᐃᓄᒃᑎᑐᑦ\", \"1\":\"iu\", \"2\":\"iku\", \"2T\":\"iku\", \"2B\":\"iku\", \"3\":\"iku\"},\n    {\"name\":\"Japanese\", \"local\":\"日本語\", \"1\":\"ja\", \"2\":\"jpn\", \"2T\":\"jpn\", \"2B\":\"jpn\", \"3\":\"jpn\"},\n    {\"name\":\"Javanese\", \"local\":\"Basa Jawa\", \"1\":\"jv\", \"2\":\"jav\", \"2T\":\"jav\", \"2B\":\"jav\", \"3\":\"jav\"},\n    {\"name\":\"Kalaallisut\", \"local\":\"Kalaallisut\", \"1\":\"kl\", \"2\":\"kal\", \"2T\":\"kal\", \"2B\":\"kal\", \"3\":\"kal\"},\n    {\"name\":\"Kannada\", \"local\":\"ಕನ್ನಡ\", \"1\":\"kn\", \"2\":\"kan\", \"2T\":\"kan\", \"2B\":\"kan\", \"3\":\"kan\"},\n    {\"name\":\"Kanuri\", \"local\":\"Kanuri\", \"1\":\"kr\", \"2\":\"kau\", \"2T\":\"kau\", \"2B\":\"kau\", \"3\":\"kau\"},\n    {\"name\":\"Kashmiri\", \"local\":\"كشميري\", \"1\":\"ks\", \"2\":\"kas\", \"2T\":\"kas\", \"2B\":\"kas\", \"3\":\"kas\"},\n    {\"name\":\"Kazakh\", \"local\":\"Қазақша\", \"1\":\"kk\", \"2\":\"kaz\", \"2T\":\"kaz\", \"2B\":\"kaz\", \"3\":\"kaz\"},\n    {\"name\":\"Khmer\", \"local\":\"ភាសាខ្មែរ\", \"1\":\"km\", \"2\":\"khm\", \"2T\":\"khm\", \"2B\":\"khm\", \"3\":\"khm\"},\n    {\"name\":\"Kikuyu\", \"local\":\"Gĩkũyũ\", \"1\":\"ki\", \"2\":\"kik\", \"2T\":\"kik\", \"2B\":\"kik\", \"3\":\"kik\"},\n    {\"name\":\"Kinyarwanda\", \"local\":\"Kinyarwanda\", \"1\":\"rw\", \"2\":\"kin\", \"2T\":\"kin\", \"2B\":\"kin\", \"3\":\"kin\"},\n    {\"name\":\"Kyrgyz\", \"local\":\"Кыргызча\", \"1\":\"ky\", \"2\":\"kir\", \"2T\":\"kir\", \"2B\":\"kir\", \"3\":\"kir\"},\n    {\"name\":\"Komi\", \"local\":\"Коми\", \"1\":\"kv\", \"2\":\"kom\", \"2T\":\"kom\", \"2B\":\"kom\", \"3\":\"kom\"},\n    {\"name\":\"Kongo\", \"local\":\"Kongo\", \"1\":\"kg\", \"2\":\"kon\", \"2T\":\"kon\", \"2B\":\"kon\", \"3\":\"kon\"},\n    {\"name\":\"Korean\", \"local\":\"한국어\", \"1\":\"ko\", \"2\":\"kor\", \"2T\":\"kor\", \"2B\":\"kor\", \"3\":\"kor\"},\n    {\"name\":\"Kurdish\", \"local\":\"Kurdî\", \"1\":\"ku\", \"2\":\"kur\", \"2T\":\"kur\", \"2B\":\"kur\", \"3\":\"kur\"},\n    {\"name\":\"Kwanyama\", \"local\":\"Kuanyama\", \"1\":\"kj\", \"2\":\"kua\", \"2T\":\"kua\", \"2B\":\"kua\", \"3\":\"kua\"},\n    {\"name\":\"Latin\", \"local\":\"Latina\", \"1\":\"la\", \"2\":\"lat\", \"2T\":\"lat\", \"2B\":\"lat\", \"3\":\"lat\"},\n    {\"name\":\"Luxembourgish\", \"local\":\"Lëtzebuergesch\", \"1\":\"lb\", \"2\":\"ltz\", \"2T\":\"ltz\", \"2B\":\"ltz\", \"3\":\"ltz\"},\n    {\"name\":\"Ganda\", \"local\":\"Luganda\", \"1\":\"lg\", \"2\":\"lug\", \"2T\":\"lug\", \"2B\":\"lug\", \"3\":\"lug\"},\n    {\"name\":\"Limburgish\", \"local\":\"Limburgs\", \"1\":\"li\", \"2\":\"lim\", \"2T\":\"lim\", \"2B\":\"lim\", \"3\":\"lim\"},\n    {\"name\":\"Lingala\", \"local\":\"Lingála\", \"1\":\"ln\", \"2\":\"lin\", \"2T\":\"lin\", \"2B\":\"lin\", \"3\":\"lin\"},\n    {\"name\":\"Lao\", \"local\":\"ພາສາລາວ\", \"1\":\"lo\", \"2\":\"lao\", \"2T\":\"lao\", \"2B\":\"lao\", \"3\":\"lao\"},\n    {\"name\":\"Lithuanian\", \"local\":\"Lietuvių\", \"1\":\"lt\", \"2\":\"lit\", \"2T\":\"lit\", \"2B\":\"lit\", \"3\":\"lit\"},\n    {\"name\":\"Luba-Katanga\", \"local\":\"Tshiluba\", \"1\":\"lu\", \"2\":\"lub\", \"2T\":\"lub\", \"2B\":\"lub\", \"3\":\"lub\"},\n    {\"name\":\"Latvian\", \"local\":\"Latviešu\", \"1\":\"lv\", \"2\":\"lav\", \"2T\":\"lav\", \"2B\":\"lav\", \"3\":\"lav\"},\n    {\"name\":\"Manx\", \"local\":\"Gaelg\", \"1\":\"gv\", \"2\":\"glv\", \"2T\":\"glv\", \"2B\":\"glv\", \"3\":\"glv\"},\n    {\"name\":\"Macedonian\", \"local\":\"Македонски\", \"1\":\"mk\", \"2\":\"mkd\", \"2T\":\"mkd\", \"2B\":\"mac\", \"3\":\"mkd\"},\n    {\"name\":\"Malagasy\", \"local\":\"Malagasy\", \"1\":\"mg\", \"2\":\"mlg\", \"2T\":\"mlg\", \"2B\":\"mlg\", \"3\":\"mlg\"},\n    {\"name\":\"Malay\", \"local\":\"Bahasa Melayu\", \"1\":\"ms\", \"2\":\"msa\", \"2T\":\"msa\", \"2B\":\"may\", \"3\":\"msa\"},\n    {\"name\":\"Malayalam\", \"local\":\"മലയാളം\", \"1\":\"ml\", \"2\":\"mal\", \"2T\":\"mal\", \"2B\":\"mal\", \"3\":\"mal\"},\n    {\"name\":\"Maltese\", \"local\":\"Malti\", \"1\":\"mt\", \"2\":\"mlt\", \"2T\":\"mlt\", \"2B\":\"mlt\", \"3\":\"mlt\"},\n    {\"name\":\"Māori\", \"local\":\"Māori\", \"1\":\"mi\", \"2\":\"mri\", \"2T\":\"mri\", \"2B\":\"mao\", \"3\":\"mri\"},\n    {\"name\":\"Marathi\", \"local\":\"मराठी\", \"1\":\"mr\", \"2\":\"mar\", \"2T\":\"mar\", \"2B\":\"mar\", \"3\":\"mar\"},\n    {\"name\":\"Marshallese\", \"local\":\"Kajin M̧ajeļ\", \"1\":\"mh\", \"2\":\"mah\", \"2T\":\"mah\", \"2B\":\"mah\", \"3\":\"mah\"},\n    {\"name\":\"Mongolian\", \"local\":\"Монгол\", \"1\":\"mn\", \"2\":\"mon\", \"2T\":\"mon\", \"2B\":\"mon\", \"3\":\"mon\"},\n    {\"name\":\"Nauru\", \"local\":\"Dorerin Naoero\", \"1\":\"na\", \"2\":\"nau\", \"2T\":\"nau\", \"2B\":\"nau\", \"3\":\"nau\"},\n    {\"name\":\"Navajo\", \"local\":\"Diné Bizaad\", \"1\":\"nv\", \"2\":\"nav\", \"2T\":\"nav\", \"2B\":\"nav\", \"3\":\"nav\"},\n    {\"name\":\"Northern Ndebele\", \"local\":\"isiNdebele\", \"1\":\"nd\", \"2\":\"nde\", \"2T\":\"nde\", \"2B\":\"nde\", \"3\":\"nde\"},\n    {\"name\":\"Nepali\", \"local\":\"नेपाली\", \"1\":\"ne\", \"2\":\"nep\", \"2T\":\"nep\", \"2B\":\"nep\", \"3\":\"nep\"},\n    {\"name\":\"Ndonga\", \"local\":\"Owambo\", \"1\":\"ng\", \"2\":\"ndo\", \"2T\":\"ndo\", \"2B\":\"ndo\", \"3\":\"ndo\"},\n    {\"name\":\"Norwegian Bokmål\", \"local\":\"Norsk (Bokmål)\", \"1\":\"nb\", \"2\":\"nob\", \"2T\":\"nob\", \"2B\":\"nob\", \"3\":\"nob\"},\n    {\"name\":\"Norwegian Nynorsk\", \"local\":\"Norsk (Nynorsk)\", \"1\":\"nn\", \"2\":\"nno\", \"2T\":\"nno\", \"2B\":\"nno\", \"3\":\"nno\"},\n    {\"name\":\"Norwegian\", \"local\":\"Norsk\", \"1\":\"no\", \"2\":\"nor\", \"2T\":\"nor\", \"2B\":\"nor\", \"3\":\"nor\"},\n    {\"name\":\"Nuosu\", \"local\":\"ꆈꌠ꒿ Nuosuhxop\", \"1\":\"ii\", \"2\":\"iii\", \"2T\":\"iii\", \"2B\":\"iii\", \"3\":\"iii\"},\n    {\"name\":\"Southern Ndebele\", \"local\":\"isiNdebele\", \"1\":\"nr\", \"2\":\"nbl\", \"2T\":\"nbl\", \"2B\":\"nbl\", \"3\":\"nbl\"},\n    {\"name\":\"Occitan\", \"local\":\"Occitan\", \"1\":\"oc\", \"2\":\"oci\", \"2T\":\"oci\", \"2B\":\"oci\", \"3\":\"oci\"},\n    {\"name\":\"Ojibwe\", \"local\":\"ᐊᓂᔑᓈᐯᒧᐎᓐ\", \"1\":\"oj\", \"2\":\"oji\", \"2T\":\"oji\", \"2B\":\"oji\", \"3\":\"oji\"},\n    {\"name\":\"Old Church Slavonic\", \"local\":\"Словѣ́ньскъ\", \"1\":\"cu\", \"2\":\"chu\", \"2T\":\"chu\", \"2B\":\"chu\", \"3\":\"chu\"},\n    {\"name\":\"Oromo\", \"local\":\"Afaan Oromoo\", \"1\":\"om\", \"2\":\"orm\", \"2T\":\"orm\", \"2B\":\"orm\", \"3\":\"orm\"},\n    {\"name\":\"Oriya\", \"local\":\"ଓଡି଼ଆ\", \"1\":\"or\", \"2\":\"ori\", \"2T\":\"ori\", \"2B\":\"ori\", \"3\":\"ori\"},\n    {\"name\":\"Ossetian\", \"local\":\"Ирон æвзаг\", \"1\":\"os\", \"2\":\"oss\", \"2T\":\"oss\", \"2B\":\"oss\", \"3\":\"oss\"},\n    {\"name\":\"Panjabi\", \"local\":\"ਪੰਜਾਬੀ\", \"1\":\"pa\", \"2\":\"pan\", \"2T\":\"pan\", \"2B\":\"pan\", \"3\":\"pan\"},\n    {\"name\":\"Pāli\", \"local\":\"पाऴि\", \"1\":\"pi\", \"2\":\"pli\", \"2T\":\"pli\", \"2B\":\"pli\", \"3\":\"pli\"},\n    {\"name\":\"Persian\", \"local\":\"فارسی\", \"1\":\"fa\", \"2\":\"fas\", \"2T\":\"fas\", \"2B\":\"per\", \"3\":\"fas\"},\n    {\"name\":\"Polish\", \"local\":\"Polski\", \"1\":\"pl\", \"2\":\"pol\", \"2T\":\"pol\", \"2B\":\"pol\", \"3\":\"pol\"},\n    {\"name\":\"Pashto\", \"local\":\"پښتو\", \"1\":\"ps\", \"2\":\"pus\", \"2T\":\"pus\", \"2B\":\"pus\", \"3\":\"pus\"},\n    {\"name\":\"Portuguese\", \"local\":\"Português\", \"1\":\"pt\", \"2\":\"por\", \"2T\":\"por\", \"2B\":\"por\", \"3\":\"por\"},\n    {\"name\":\"Quechua\", \"local\":\"Runa Simi\", \"1\":\"qu\", \"2\":\"que\", \"2T\":\"que\", \"2B\":\"que\", \"3\":\"que\"},\n    {\"name\":\"Romansh\", \"local\":\"Rumantsch\", \"1\":\"rm\", \"2\":\"roh\", \"2T\":\"roh\", \"2B\":\"roh\", \"3\":\"roh\"},\n    {\"name\":\"Kirundi\", \"local\":\"Kirundi\", \"1\":\"rn\", \"2\":\"run\", \"2T\":\"run\", \"2B\":\"run\", \"3\":\"run\"},\n    {\"name\":\"Romanian\", \"local\":\"Română\", \"1\":\"ro\", \"2\":\"ron\", \"2T\":\"ron\", \"2B\":\"rum\", \"3\":\"ron\"},\n    {\"name\":\"Russian\", \"local\":\"Русский\", \"1\":\"ru\", \"2\":\"rus\", \"2T\":\"rus\", \"2B\":\"rus\", \"3\":\"rus\"},\n    {\"name\":\"Sanskrit\", \"local\":\"संस्कृतम्\", \"1\":\"sa\", \"2\":\"san\", \"2T\":\"san\", \"2B\":\"san\", \"3\":\"san\"},\n    {\"name\":\"Sardinian\", \"local\":\"Sardu\", \"1\":\"sc\", \"2\":\"srd\", \"2T\":\"srd\", \"2B\":\"srd\", \"3\":\"srd\"},\n    {\"name\":\"Sindhi\", \"local\":\"سنڌي‎\", \"1\":\"sd\", \"2\":\"snd\", \"2T\":\"snd\", \"2B\":\"snd\", \"3\":\"snd\"},\n    {\"name\":\"Northern Sami\", \"local\":\"Sámegiella\", \"1\":\"se\", \"2\":\"sme\", \"2T\":\"sme\", \"2B\":\"sme\", \"3\":\"sme\"},\n    {\"name\":\"Samoan\", \"local\":\"Gagana Sāmoa\", \"1\":\"sm\", \"2\":\"smo\", \"2T\":\"smo\", \"2B\":\"smo\", \"3\":\"smo\"},\n    {\"name\":\"Sango\", \"local\":\"Sängö\", \"1\":\"sg\", \"2\":\"sag\", \"2T\":\"sag\", \"2B\":\"sag\", \"3\":\"sag\"},\n    {\"name\":\"Serbian\", \"local\":\"Српски\", \"1\":\"sr\", \"2\":\"srp\", \"2T\":\"srp\", \"2B\":\"srp\", \"3\":\"srp\"},\n    {\"name\":\"Gaelic\", \"local\":\"Gàidhlig\", \"1\":\"gd\", \"2\":\"gla\", \"2T\":\"gla\", \"2B\":\"gla\", \"3\":\"gla\"},\n    {\"name\":\"Shona\", \"local\":\"ChiShona\", \"1\":\"sn\", \"2\":\"sna\", \"2T\":\"sna\", \"2B\":\"sna\", \"3\":\"sna\"},\n    {\"name\":\"Sinhala\", \"local\":\"සිංහල\", \"1\":\"si\", \"2\":\"sin\", \"2T\":\"sin\", \"2B\":\"sin\", \"3\":\"sin\"},\n    {\"name\":\"Slovak\", \"local\":\"Slovenčina\", \"1\":\"sk\", \"2\":\"slk\", \"2T\":\"slk\", \"2B\":\"slo\", \"3\":\"slk\"},\n    {\"name\":\"Slovene\", \"local\":\"Slovenščina\", \"1\":\"sl\", \"2\":\"slv\", \"2T\":\"slv\", \"2B\":\"slv\", \"3\":\"slv\"},\n    {\"name\":\"Somali\", \"local\":\"Soomaaliga\", \"1\":\"so\", \"2\":\"som\", \"2T\":\"som\", \"2B\":\"som\", \"3\":\"som\"},\n    {\"name\":\"Southern Sotho\", \"local\":\"Sesotho\", \"1\":\"st\", \"2\":\"sot\", \"2T\":\"sot\", \"2B\":\"sot\", \"3\":\"sot\"},\n    {\"name\":\"Spanish\", \"local\":\"Español\", \"1\":\"es\", \"2\":\"spa\", \"2T\":\"spa\", \"2B\":\"spa\", \"3\":\"spa\"},\n    {\"name\":\"Sundanese\", \"local\":\"Basa Sunda\", \"1\":\"su\", \"2\":\"sun\", \"2T\":\"sun\", \"2B\":\"sun\", \"3\":\"sun\"},\n    {\"name\":\"Swahili\", \"local\":\"Kiswahili\", \"1\":\"sw\", \"2\":\"swa\", \"2T\":\"swa\", \"2B\":\"swa\", \"3\":\"swa\"},\n    {\"name\":\"Swati\", \"local\":\"SiSwati\", \"1\":\"ss\", \"2\":\"ssw\", \"2T\":\"ssw\", \"2B\":\"ssw\", \"3\":\"ssw\"},\n    {\"name\":\"Swedish\", \"local\":\"Svenska\", \"1\":\"sv\", \"2\":\"swe\", \"2T\":\"swe\", \"2B\":\"swe\", \"3\":\"swe\"},\n    {\"name\":\"Tamil\", \"local\":\"தமிழ்\", \"1\":\"ta\", \"2\":\"tam\", \"2T\":\"tam\", \"2B\":\"tam\", \"3\":\"tam\"},\n    {\"name\":\"Telugu\", \"local\":\"తెలుగు\", \"1\":\"te\", \"2\":\"tel\", \"2T\":\"tel\", \"2B\":\"tel\", \"3\":\"tel\"},\n    {\"name\":\"Tajik\", \"local\":\"Тоҷикӣ\", \"1\":\"tg\", \"2\":\"tgk\", \"2T\":\"tgk\", \"2B\":\"tgk\", \"3\":\"tgk\"},\n    {\"name\":\"Thai\", \"local\":\"ภาษาไทย\", \"1\":\"th\", \"2\":\"tha\", \"2T\":\"tha\", \"2B\":\"tha\", \"3\":\"tha\"},\n    {\"name\":\"Tigrinya\", \"local\":\"ትግርኛ\", \"1\":\"ti\", \"2\":\"tir\", \"2T\":\"tir\", \"2B\":\"tir\", \"3\":\"tir\"},\n    {\"name\":\"Tibetan Standard\", \"local\":\"བོད་ཡིག\", \"1\":\"bo\", \"2\":\"bod\", \"2T\":\"bod\", \"2B\":\"tib\", \"3\":\"bod\"},\n    {\"name\":\"Turkmen\", \"local\":\"Türkmençe\", \"1\":\"tk\", \"2\":\"tuk\", \"2T\":\"tuk\", \"2B\":\"tuk\", \"3\":\"tuk\"},\n    {\"name\":\"Tagalog\", \"local\":\"Tagalog\", \"1\":\"tl\", \"2\":\"tgl\", \"2T\":\"tgl\", \"2B\":\"tgl\", \"3\":\"tgl\"},\n    {\"name\":\"Tswana\", \"local\":\"Setswana\", \"1\":\"tn\", \"2\":\"tsn\", \"2T\":\"tsn\", \"2B\":\"tsn\", \"3\":\"tsn\"},\n    {\"name\":\"Tonga\", \"local\":\"faka Tonga\", \"1\":\"to\", \"2\":\"ton\", \"2T\":\"ton\", \"2B\":\"ton\", \"3\":\"ton\"},\n    {\"name\":\"Turkish\", \"local\":\"Türkçe\", \"1\":\"tr\", \"2\":\"tur\", \"2T\":\"tur\", \"2B\":\"tur\", \"3\":\"tur\"},\n    {\"name\":\"Tsonga\", \"local\":\"Xitsonga\", \"1\":\"ts\", \"2\":\"tso\", \"2T\":\"tso\", \"2B\":\"tso\", \"3\":\"tso\"},\n    {\"name\":\"Tatar\", \"local\":\"Татарча\", \"1\":\"tt\", \"2\":\"tat\", \"2T\":\"tat\", \"2B\":\"tat\", \"3\":\"tat\"},\n    {\"name\":\"Twi\", \"local\":\"Twi\", \"1\":\"tw\", \"2\":\"twi\", \"2T\":\"twi\", \"2B\":\"twi\", \"3\":\"twi\"},\n    {\"name\":\"Tahitian\", \"local\":\"Reo Mā’ohi\", \"1\":\"ty\", \"2\":\"tah\", \"2T\":\"tah\", \"2B\":\"tah\", \"3\":\"tah\"},\n    {\"name\":\"Uyghur\", \"local\":\"ئۇيغۇرچه\", \"1\":\"ug\", \"2\":\"uig\", \"2T\":\"uig\", \"2B\":\"uig\", \"3\":\"uig\"},\n    {\"name\":\"Ukrainian\", \"local\":\"Українська\", \"1\":\"uk\", \"2\":\"ukr\", \"2T\":\"ukr\", \"2B\":\"ukr\", \"3\":\"ukr\"},\n    {\"name\":\"Urdu\", \"local\":\"اردو\", \"1\":\"ur\", \"2\":\"urd\", \"2T\":\"urd\", \"2B\":\"urd\", \"3\":\"urd\"},\n    {\"name\":\"Uzbek\", \"local\":\"O‘zbek\", \"1\":\"uz\", \"2\":\"uzb\", \"2T\":\"uzb\", \"2B\":\"uzb\", \"3\":\"uzb\"},\n    {\"name\":\"Venda\", \"local\":\"Tshivenḓa\", \"1\":\"ve\", \"2\":\"ven\", \"2T\":\"ven\", \"2B\":\"ven\", \"3\":\"ven\"},\n    {\"name\":\"Vietnamese\", \"local\":\"Tiếng Việt\", \"1\":\"vi\", \"2\":\"vie\", \"2T\":\"vie\", \"2B\":\"vie\", \"3\":\"vie\"},\n    {\"name\":\"Volapük\", \"local\":\"Volapük\", \"1\":\"vo\", \"2\":\"vol\", \"2T\":\"vol\", \"2B\":\"vol\", \"3\":\"vol\"},\n    {\"name\":\"Walloon\", \"local\":\"Walon\", \"1\":\"wa\", \"2\":\"wln\", \"2T\":\"wln\", \"2B\":\"wln\", \"3\":\"wln\"},\n    {\"name\":\"Welsh\", \"local\":\"Cymraeg\", \"1\":\"cy\", \"2\":\"cym\", \"2T\":\"cym\", \"2B\":\"wel\", \"3\":\"cym\"},\n    {\"name\":\"Wolof\", \"local\":\"Wolof\", \"1\":\"wo\", \"2\":\"wol\", \"2T\":\"wol\", \"2B\":\"wol\", \"3\":\"wol\"},\n    {\"name\":\"Western Frisian\", \"local\":\"Frysk\", \"1\":\"fy\", \"2\":\"fry\", \"2T\":\"fry\", \"2B\":\"fry\", \"3\":\"fry\"},\n    {\"name\":\"Xhosa\", \"local\":\"isiXhosa\", \"1\":\"xh\", \"2\":\"xho\", \"2T\":\"xho\", \"2B\":\"xho\", \"3\":\"xho\"},\n    {\"name\":\"Yiddish\", \"local\":\"ייִדיש\", \"1\":\"yi\", \"2\":\"yid\", \"2T\":\"yid\", \"2B\":\"yid\", \"3\":\"yid\"},\n    {\"name\":\"Yoruba\", \"local\":\"Yorùbá\", \"1\":\"yo\", \"2\":\"yor\", \"2T\":\"yor\", \"2B\":\"yor\", \"3\":\"yor\"},\n    {\"name\":\"Zhuang\", \"local\":\"Cuengh\", \"1\":\"za\", \"2\":\"zha\", \"2T\":\"zha\", \"2B\":\"zha\", \"3\":\"zha\"},\n    {\"name\":\"Zulu\", \"local\":\"isiZulu\", \"1\":\"zu\", \"2\":\"zul\", \"2T\":\"zul\", \"2B\":\"zul\", \"3\":\"zul\"}\n];\n"],"sourceRoot":""}