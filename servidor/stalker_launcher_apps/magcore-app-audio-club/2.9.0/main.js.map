{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/stb-keys/index.js","webpack:///./node_modules/spa-component/index.js","webpack:///./node_modules/stb-component/index.js","webpack:///./node_modules/spa-app/lib/core.js","webpack:///./node_modules/mag-app/index.js","webpack:///./node_modules/cjs-emitter/index.js","webpack:///./node_modules/stb-app/lib/css.js","webpack:///./node_modules/spa-dom/index.js","webpack:///./node_modules/spa-keys/index.js","webpack:///./node_modules/mag-component-layout-list/index.js","webpack:///./node_modules/mag-component-list/index.js","webpack:///./node_modules/mag-component-modal/index.js","webpack:///./node_modules/stb-component-scrollbar/index.js","webpack:///./src/js/main.js","webpack:///./node_modules/mag-app/lib/main.js","webpack:///./node_modules/cjs-query/index.js","webpack:///./src/js/config.js","webpack:///./node_modules/spa-app/lib/events.js","webpack:///./node_modules/stb-shim-classlist/index.js","webpack:///./node_modules/stb-app/lib/metrics.js","webpack:///./src/js/metrics.js","webpack:///./node_modules/mag-app/lib/css.js","webpack:///./node_modules/spa-gettext/index.js","webpack:///./node_modules/cjs-gettext/index.js","webpack:///./src/js/pages/main.js","webpack:///./node_modules/stb-component-page/index.js","webpack:///./node_modules/spa-component-page/index.js","webpack:///./node_modules/mag-component-footer/index.js","webpack:///./node_modules/mag-component-panel-set/index.js","webpack:///./node_modules/mag-component-panel/index.js","webpack:///./node_modules/mag-component-layout/index.js","webpack:///./node_modules/mag-component-layout-list/node_modules/mag-component-layout/index.js","webpack:///./node_modules/mag-data-cacher/index.js","webpack:///./node_modules/stb-component-modal/index.js","webpack:///./node_modules/spa-component-modal/index.js","webpack:///./node_modules/mag-component-radio-list/index.js","webpack:///./node_modules/spa-component-checkbox/index.js","webpack:///./node_modules/spa-component-scrollbar/index.js","webpack:///./node_modules/spa-component-tab/index.js","webpack:///./src/js/components/exit.js","webpack:///./src/js/components/info.panel.js","webpack:///./node_modules/mag-component-scroll-area/index.js","webpack:///./src/js/utils/prepare.main.js","webpack:///./src/js/utils/prepare.modal.js","webpack:///./src/js/utils/prepare.tracks.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","keys","back","backspace","channelNext","tab","channelPrev","ok","enter","exit","escape","volumeUp","volumeDown","f1","f2","f3","f4","refresh","frame","phone","set","tv","menu","app","rewind","forward","audio","standby","keyboard","usbMounted","usbUnmounted","playPause","play","pause","stop","power","record","info","mute","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","Emitter","counter","Component","config","self","this","visible","focusable","$node","$body","parent","children","propagate","document","createElement","className","id","add","hide","defaultEvents","events","forEach","eventName","addListener","apply","addEventListener","event","focus","emit","stopPropagation","constructor","child","index","arguments","length","push","parentNode","appendChild","item","remove","activePage","activeComponent","blur","splice","indexOf","removeChild","data","activeItem","classList","show","callback","setTimeout","parse","query","location","search","substring","route","pageTo","page","pageFrom","active","showPage","from","to","once","onceWrapper","removeListener","addListeners","callbacks","filter","fn","undefined","Array","slice","link","rel","href","metrics","height","head","dom","tag","tagName","attrList","content","node","createTextNode","fragment","createDocumentFragment","tagDst","Node","nodes","count","clear","lastChild","space","pageUp","pageDown","end","home","left","up","right","down","insert","del","List","Layout","LayoutList","handlers","links","$noData","fixedData","$item","layout","inner","focusIndex","focusItem","renderItemDefault","layoutConfig","currentNode","currentData","ready","items","childNodes","innerText","firstChild","$parentItem","click","setData","init","$wrap","noData","innerHTML","Element","renderItem","$focusItem","viewIndex","type","TYPE_VERTICAL","size","cycle","scroll","provider","TYPE_HORIZONTAL","mousewheel","wheelDeltaY","move","wheelDeltaX","keydown","code","idx","currSize","onClick","render","blocked","error","realSize","maxCount","viewSize","pos","normalize","blurItem","renderView","itemData","prevIndex","currIndex","mark","scrollTo","direction","force","previousSibling","nextSibling","$prev","$curr","markItem","state","StbComponentModal","Modal","$overlay","onkeydown","$header","$text","title","icon","$icon","network","core","plugins","api","audioBackend","load","environment","language","pages","main","window","getCoreInstance","platform","body","setAttribute","contextmenu","preventDefault","split","part","decodeURIComponent","stringify","params","encodeURIComponent","join","artists","offset","limit","albums","genreId","artistId","yearId","sortby","tracks","albumId","playlist","playlistTrack","list","DOMContentLoaded","unload","eventLocal","keyCode","ctrlKey","altKey","shiftKey","keypress","documentElement","DOMTokenList","el","_element","_classCache","classes","replace","token","contains","toString","toggle","screenHeight","screen","availHeight","availTop","availBottom","availWidth","width","availLeft","availRight","480","modalSize","576","720","1080","linkCSS","theme","path","Gettext","loader","prepare","gettext","_","pgettext","ngettext","defaultLanguage","xhr","ext","XMLHttpRequest","onload","JSON","responseText","onerror","ontimeout","open","send","meta","msgId","context","plural","evalResult","eval","getAllLists","changeFavorite","panelSet","centralPanel","listActionTrack","modalActions","modalActionTrack","modalActionAlbum","modalActionReset","leftPanel","rightPanel","audioList","audioPlayList","sortList","selectGenre","selectYear","leftInput","$playListInput","selectType","createListMessage","createList","selectList","listPlaylist","clickFunction","fillInfo","$headerTitle","$headerAmount","defaultTab","playlistTab","footer","getElementById","Footer","PanelSet","Panel","Provider","ModalMessage","RadioList","Scrollbar","TabItem","infoPanel","prepareMain","prepareModal","prepareTracks","scrollbarList","appConfig","checkTime","types","playlists","typeActive","timers","localHistory","requestConfig","loaded","footerButtons","f1Reset","action","f1Delete","notify","buttons","menuReset","panels","lastConfig","fillSearch","parentElement","placeholder","getterAlbums","getAlbums","total","getterArtists","hideBackInformation","getArtists","getterTracks","getTracks","getterList","getPlaylists","getterTrackList","prepareToPlay","url","next","prev","playerContext","intent","close","headItem","mime","uri","mediaId","createListToPlay","pageSize","cacheSize","request","clickTracks","clickAlbums","fillTracks","middle","clickArtists","fillAlbums","clickList","addToList","$title","pop","fillArtist","fillList","refreshAudioList","botEmptyLine","removeTrack","getAllPlaylists","result","genreList","yearList","inputListName","addValue","defaultTabList","playlistTabList","modalScroll","editMode","loadDone","getGenres","click:item","select","getYears","years","clickSearch","done","goExit","currentTab","textArea","focus:item","clearTimeout","onFocusDebounceTimeout","move:view","hideHolder","showHolder","addTrack","addAlbum","button","createPlaylist","edit","$checkedData","genre","year","goBack","Page","tabs","codes","$table","insertRow","rows","insertCell","$left","cells","$right","currTab","$tab","$tabChildren","addClick","ind","disabled","style","visibility","onclick","keydownHandler","$shadow","isArray","$wrapper","HTMLElement","wrap","componentClickHandler","textContent","delta","DataCacher","stepSize","tail","lastChecked","receivedData","time","Date","unshift","getTime","goEnd","checkNext","refreshData","checkPrev","goHome","cb","concat","CheckBox","group","checkBox","$last","table","tr","td","check","groups","ScrollBar","thumbRect","trackRect","$thumb","getBoundingClientRect","marginTop","marginLeft","curr","Tab","exitModal","previousFocus","mainPanelSet","$infoContainer","$holderContainer","$poster","$genres","$director","$year","$country","$language","$backInformation","ScrollArea","step","backgroundImage","display","hideInfo","showBackDesk","genresArr","album","genres","cover","backend","host","artist","country","languages","realHeight","viewHeight","topPosition","top","Math","ceil","offsetHeight","min","sec","hour","duration","floor"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","/**\n * Global list of non-printable control key codes.\n *\n * At the moment `keypress` and `keydown` events are emitted for the same keys (for both printable and non-printable characters).\n *\n * WARNING!!! All codes in this file (except 'volumeUp' and 'volumeDown')\n * are used in window 'keydown' handler to prevent wrong 'keypress' firings.\n * If you add new code to this file 'keypress' event with this code will never fire.\n *\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar keys = require('spa-keys');\n\n\n// extend with additional codes\nkeys.back         = keys.backspace;\nkeys.channelNext  = keys.tab;        // Tab\nkeys.channelPrev  = keys.tab + 's';  // Shift+Tab\nkeys.ok           = keys.enter;      // Enter\nkeys.exit         = keys.escape;     // Esc\nkeys.volumeUp     = 107;             // NUMPAD +\nkeys.volumeDown   = 109;             // NUMPAD -\nkeys.f1           = 112 + 'c';       // Ctrl+F1\nkeys.f2           = 113 + 'c';       // Ctrl+F2\nkeys.f3           = 114 + 'c';       // Ctrl+F3\nkeys.f4           = 115 + 'c';       // Ctrl+F4\nkeys.refresh      = 116 + 'c';       // Ctrl+F5\nkeys.frame        = 117 + 'c';       // Ctrl+F6\nkeys.phone        = 119 + 'c';       // Ctrl+F8\nkeys.set          = 120 + 'c';       // Ctrl+F9\nkeys.tv           = 121 + 'c';       // Ctrl+F10\nkeys.menu         = 122 + 'c';       // Ctrl+F11\nkeys.app          = 123 + 'c';       // Ctrl+F12\nkeys.rewind       = 66  + 'a';       // Alt+B\nkeys.forward      = 70  + 'a';       // Alt+F\nkeys.audio        = 71  + 'a';       // Alt+G\nkeys.standby      = 74  + 'a';       // Alt+J\nkeys.keyboard     = 76  + 'a';       // Alt+L\nkeys.usbMounted   = 80  + 'a';       // Alt+P\nkeys.usbUnmounted = 81  + 'a';       // Alt+Q\nkeys.playPause    = 82  + 'a';       // Alt+R\nkeys.play         = -1;              // should be redefined on some platforms\nkeys.pause        = -1;              // should be redefined on some platforms\nkeys.stop         = 83  + 'a';       // Alt+S\nkeys.power        = 85  + 'a';       // Alt+U\nkeys.record       = 87  + 'a';       // Alt+W\nkeys.info         = 89  + 'a';       // Alt+Y\nkeys.mute         = 192 + 'a';\nkeys.digit0       = 48;\nkeys.digit1       = 49;\nkeys.digit2       = 50;\nkeys.digit3       = 51;\nkeys.digit4       = 52;\nkeys.digit5       = 53;\nkeys.digit6       = 54;\nkeys.digit7       = 55;\nkeys.digit8       = 56;\nkeys.digit9       = 57;\n\n\n// public\nmodule.exports = keys;\n\n// public\n// module.exports = {\n//     getCode: function ( event ) {\n//         var code = event.keyCode;\n//\n//         // apply key modifiers\n//         if ( event.shiftKey ) { code += 1000; }\n//         if ( event.altKey )   { code += 2000; }\n//\n//         return code;\n//     },\n//\n//     codes: {\n//         back:         8,    // Backspace\n//         channelPrev:  1009, // Shift+Tab\n//         channelNext:  9,    // Tab\n//         ok:           13,   // Enter\n//         exit:         27,   // Esc\n//         pageUp:       33,\n//         pageDown:     34,\n//         end:          35,\n//         home:         36,\n//         left:         37,\n//         up:           38,\n//         right:        39,\n//         down:         40,\n//         'delete':     46,\n//         volumeUp:     107,  // NUMPAD +\n//         volumeDown:   109,  // NUMPAD -\n//         f1:           112,  // F1\n//         f2:           113,  // F2\n//         f3:           114,  // F3\n//         f4:           115,  // F4\n//         refresh:      116,  // F5\n//         frame:        117,  // F6\n//         phone:        119,  // F8\n//         set:          120,  // F9\n//         tv:           121,  // F10\n//         menu:         122,  // F11\n//         app:          123,  // F12\n//         rewind:       2066, // Alt+B\n//         forward:      2070, // Alt+F\n//         audio:        2071, // Alt+G\n//         standby:      2074, // Alt+J\n//         keyboard:     2076, // Alt+L\n//         usbMounted:   2080, // Alt+P\n//         usbUnmounted: 2081, // Alt+Q\n//         playPause:    2082, // Alt+R\n//         stop:         2083, // Alt+S\n//         power:        2085, // Alt+U\n//         record:       2087, // Alt+W\n//         info:         2089, // Alt+Y\n//         mute:         2192\n//     }\n// };\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    Emitter = require('cjs-emitter'),\n    counter = 0;\n\n\n/**\n * Base component implementation.\n *\n * Visual element that can handle sub-components.\n * Each component has a DOM element container $node with a set of classes:\n * \"component\" and some specific component class names depending on the hierarchy, for example \"page\".\n * Each component has a unique ID given either from $node.id or from data.id. If not given will generate automatically.\n *\n * @constructor\n * @extends Emitter\n *\n * @param {Object} [config={}] init parameters\n * @param {Element} [config.id] component unique identifier (generated if not set)\n * @param {string} [config.className] space-separated list of classes for \"className\" property of this.$node\n * @param {Element} [config.$node] DOM element/fragment to be a component outer container\n * @param {Element} [config.$body] DOM element/fragment to be a component inner container (by default is the same as $node)\n * @param {Component} [config.parent] link to the parent component which has this component as a child\n * @param {Array.<Component>} [config.children=[]] list of components in this component\n * @param {Object.<string, function>} [config.events={}] list of event callbacks\n * @param {boolean} [config.visible=true] component initial visibility state flag\n * @param {boolean} [config.focusable=true] component can accept focus or not\n * @param {boolean} [config.propagate=false] allow to emit events to the parent component\n *\n * @fires module:stb/component~Component#click\n *\n * @example\n * var component = new Component({\n *     $node: document.getElementById(id),\n *     className: 'bootstrap responsive',\n *     events: {\n *         click: function () { ... }\n *     }\n * });\n * component.add( ... );\n * component.focus();\n */\nfunction Component ( config ) {\n    // current execution context\n    var self = this,\n        name;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.id && typeof config.id !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.id');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$node && !(config.$node instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$node type');\n        }\n        if ( config.$body && !(config.$body instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$body type');\n        }\n        if ( config.parent && !(config.parent instanceof Component) ) {\n            throw new Error(__filename + ': wrong config.parent type');\n        }\n        if ( config.children && !Array.isArray(config.children) ) {\n            throw new Error(__filename + ': wrong config.children type');\n        }\n    }\n\n    /**\n     * Component visibility state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.visible = true;\n\n    /**\n     * Component can accept focus or not.\n     *\n     * @type {boolean}\n     */\n    this.focusable = true;\n\n    /**\n     * DOM outer handle.\n     *\n     * @type {Element}\n     */\n    this.$node = null;\n\n    /**\n     * DOM inner handle.\n     * In simple cases is the same as $node.\n     *\n     * @type {Element}\n     */\n    this.$body = null;\n\n    /**\n     * Link to the parent component which has this component as a child.\n     *\n     * @type {Component}\n     */\n    this.parent = null;\n\n    /**\n     * List of all children components.\n     *\n     * @type {Component[]}\n     */\n    this.children = [];\n\n    /**\n     * allow to emit events to the parent component\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.propagate = !!config.propagate;\n\n    // parent constructor call\n    Emitter.call(this);\n\n    // outer handle - empty div in case nothing is given\n    this.$node = config.$node || document.createElement('div');\n\n    // inner handle - the same as outer handler in case nothing is given\n    this.$body = config.$body || this.$node;\n\n    // set CSS class names\n    //this.$node.className += ' component ' + (config.className || '');\n    // previous approach is not good as it mess with components hierarchy\n    this.$node.className = this.name + ' ' + (config.className || '');\n\n    // apply component id if given, generate otherwise\n    this.id = config.id || this.$node.id || 'cid' + counter++;\n\n    // apply hierarchy\n    if ( config.parent ) {\n        // add to parent component\n        config.parent.add(this);\n    }\n\n    // apply given visibility\n    if ( config.visible === false ) {\n        // default state is visible\n        this.hide();\n    }\n\n    // apply focus handling method\n    if ( config.focusable === false ) {\n        // can't accept focus\n        this.focusable = false;\n    }\n\n    // a descendant defined own events\n    if ( this.defaultEvents ) {\n        // sanitize\n        config.events = config.events || {};\n\n        if ( DEVELOP ) {\n            if ( typeof config.events !== 'object' ) {\n                throw new Error(__filename + ': wrong config.events type');\n            }\n            if ( typeof this.defaultEvents !== 'object' ) {\n                throw new Error(__filename + ': wrong this.defaultEvents type');\n            }\n        }\n\n        for ( name in this.defaultEvents ) {\n            // overwrite default events with user-defined\n            config.events[name] = config.events[name] || this.defaultEvents[name];\n        }\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( eventName ) {\n            self.addListener(eventName, config.events[eventName]);\n        });\n    }\n\n    // apply the given children components\n    if ( config.children ) {\n        // apply\n        this.add.apply(this, config.children);\n    }\n\n    // component activation by mouse\n    this.$node.addEventListener('click', function ( event ) {\n        // left mouse button\n        //if ( event.button === 0 ) {\n        // activate if possible\n        self.focus();\n\n        // there are some listeners\n        if ( self.events['click'] ) {\n            /**\n             * Mouse click event.\n             *\n             * @event module:stb/component~Component#click\n             *\n             * @type {Object}\n             * @property {Event} event click event data\n             */\n            self.emit('click', event);\n        }\n        //}\n\n        if ( DEVELOP ) {\n            // middle mouse button\n            if ( event.button === 1 ) {\n                //debug.inspect(self, 0);\n                debug.info('\"window.link\" or \"' + self.id + '.component\"', 'this component is now available in global scope');\n                window.link = self;\n                self.$node.classList.toggle('wired');\n            }\n        }\n\n        event.stopPropagation();\n    });\n\n    if ( DEVELOP ) {\n        // expose inner ID to global scope\n        window[self.id] = self.$node;\n\n        // expose a link\n        this.$node.component = this.$body.component = this;\n        this.$node.title = this.name + '#' + this.id + ' (outer)';\n        this.$body.title = this.name + '#' + this.id + ' (inner)';\n    }\n\n    debug.info('create component ' + this.name + '#' + this.id, null, {\n        tags: ['create', 'component', this.name, this.id]\n    });\n}\n\n\n// inheritance\nComponent.prototype = Object.create(Emitter.prototype);\nComponent.prototype.constructor = Component;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nComponent.prototype.defaultEvents = null;\n\n\n/**\n * Add a new component as a child.\n *\n * @param {...Component} [child] variable number of elements to append\n *\n * @files Component#add\n *\n * @example\n * panel.add(\n *     new Button( ... ),\n *     new Button( ... )\n * );\n */\nComponent.prototype.add = function ( child ) {\n    var index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        child = arguments[index];\n\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        // apply\n        this.children.push(child);\n        child.parent = this;\n\n        // correct DOM parent/child connection if necessary\n        if ( child.$node && child.$node.parentNode === null ) {\n            this.$body.appendChild(child.$node);\n        }\n\n        debug.info('add component ' + child.name + '#' + child.id + ' to ' + this.name + '#' + this.id, null, {\n            tags: ['add', 'component', this.name, this.id, child.name, child.id]\n        });\n\n        // there are some listeners\n        if ( this.events['add'] ) {\n            /**\n             * A child component is added.\n             *\n             * @event module:stb/component~Component#add\n             *\n             * @type {Object}\n             * @property {Component} item new component added\n             */\n            this.emit('add', {item: child});\n        }\n\n        //debug.log('component ' + this.name + '#' + this.id + ' new child: ' + child.name + '#' + child.id);\n    }\n};\n\n\n/* @todo: consider activation in future */\n///**\n// * Insert component into the specific position.\n// *\n// * @param {Component} child component instance to insert\n// * @param {number} index insertion position\n// */\n//Component.prototype.insert = function ( child, index ) {\n//    var prevIndex = this.children.indexOf(child);\n//\n//    if ( DEVELOP ) {\n//        if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n//        if ( !(child instanceof Component) ) { throw new Error(__filename + ': wrong child type'); }\n//    }\n//\n//    if ( prevIndex !== -1 ) {\n//        this.children.splice(prevIndex, 1);\n//        this.$body.removeChild(child.$node);\n//    }\n//\n//    if ( index === this.children.length ) {\n//        this.$body.appendChild(child.$node);\n//    } else {\n//        this.$body.insertBefore(child.$node, this.$body.children[index]);\n//    }\n//    this.children.splice(index, 0, child);\n//\n//    if ( !child.parent ) {\n//        child.parent = this;\n//    }\n//};\n\n\n/**\n * Delete this component and clear all associated events.\n *\n * @fires module:stb/component~Component#remove\n */\nComponent.prototype.remove = function () {\n    // really inserted somewhere\n    if ( this.parent ) {\n        if ( DEVELOP ) {\n            if ( !(this.parent instanceof Component) ) {\n                throw new Error(__filename + ': wrong this.parent type');\n            }\n        }\n\n        // active at the moment\n        if ( app.activePage.activeComponent === this ) {\n            this.blur();\n            this.parent.focus();\n        }\n        this.parent.children.splice(this.parent.children.indexOf(this), 1);\n    }\n\n    // remove all children\n    this.children.forEach(function ( child ) {\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        child.remove();\n    });\n\n    this.$node.parentNode.removeChild(this.$node);\n\n    // there are some listeners\n    if ( this.events['remove'] ) {\n        /**\n         * Delete this component.\n         *\n         * @event module:stb/component~Component#remove\n         */\n        this.emit('remove');\n    }\n\n    // remove all listeners\n    this.events = {};\n\n    //debug.log('component ' + this.name + '#' + this.id + ' remove', 'red');\n    debug.info('remove component ' + this.name + '#' + this.id, null, {\n        tags: ['remove', 'component', this.name, this.id]\n    });\n};\n\n\n/**\n * Activate the component.\n * Notify the owner-page and apply CSS class.\n *\n * @param {Object} [data] custom data which passed into handlers\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#focus\n */\nComponent.prototype.focus = function ( data ) {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // this is a visual component on a page\n    // not already focused and can accept focus\n    if ( this.focusable && this !== activeItem ) {\n        // notify the current active component\n        if ( activeItem ) { activeItem.blur(); }\n\n        /* eslint consistent-this: 0 */\n\n        // apply\n        activePage.activeComponent = activeItem = this;\n        activeItem.$node.classList.add('focus');\n\n        //debug.log('component ' + this.name + '#' + this.id + ' focus');\n        debug.info('focus component ' + this.name + '#' + this.id, null, {\n            tags: ['focus', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( activeItem.events['focus'] ) {\n            /**\n             * Make this component focused.\n             *\n             * @event module:stb/component~Component#focus\n             */\n            activeItem.emit('focus', data);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Remove focus.\n * Change page.activeComponent and notify subscribers.\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#blur\n */\nComponent.prototype.blur = function () {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // apply visuals anyway\n    this.$node.classList.remove('focus');\n\n    // this is the active component\n    if ( this === activeItem ) {\n        activePage.activeComponent = null;\n\n        //debug.log('component ' + this.name + '#' + this.id + ' blur', 'grey');\n        debug.info('blur component ' + this.name + '#' + this.id, null, {\n            tags: ['blur', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['blur'] ) {\n            /**\n             * Remove focus from this component.\n             *\n             * @event module:stb/component~Component#blur\n             */\n            this.emit('blur');\n        }\n\n        return true;\n    }\n\n    debug.warn('component ' + this.name + '#' + this.id + ' attempt to blur without link to a page', null, {\n        tags: ['blur', 'component', this.name, this.id]\n    });\n\n    // nothing was done\n    return false;\n};\n\n\n/*function show ( self, data ) {\n    // correct style\n    self.$node.classList.remove('hidden');\n    // flag\n    self.visible = true;\n\n    debug.info('show component ' + self.name + '#' + self.id, null, {\n        tags: ['show', 'component', self.name, self.id]\n    });\n\n    // there are some listeners\n    if ( self.events['show'] ) {\n        /!**\n         * Make the component visible.\n         *\n         * @event module:stb/component~Component#show\n         *!/\n        self.emit('show', data);\n    }\n}*/\n\n/**\n * Make the component visible and notify subscribers.\n *\n * @param {Object} [data] custom data which passed into handlers\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#show\n */\nComponent.prototype.show = function ( data, callback ) {\n    //var self = this;\n\n    // is it hidden\n    if ( !this.visible ) {\n        /*if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(function () {\n                show(self, data);\n                callback();\n            });\n        } else {\n            // sync call\n            show(this, data);\n        }*/\n\n        // correct style\n        this.$node.classList.remove('hidden');\n        // flag\n        this.visible = true;\n\n        debug.info('show component ' + this.name + '#' + this.id, null, {\n            tags: ['show', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['show'] ) {\n            /**\n             * Make the component visible.\n             *\n             * @event module:stb/component~Component#show\n             */\n            this.emit('show', data);\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Make the component hidden and notify subscribers.\n *\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#hide\n */\nComponent.prototype.hide = function ( callback ) {\n    // is it visible\n    if ( this.visible ) {\n        // correct style\n        this.$node.classList.add('hidden');\n        // flag\n        this.visible = false;\n\n        debug.info('hide component ' + this.name + '#' + this.id, null, {\n            tags: ['hide', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['hide'] ) {\n            /**\n             * Make the component hidden.\n             *\n             * @event module:stb/component~Component#hide\n             */\n            this.emit('hide');\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = Component;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component');\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    parse   = require('cjs-query').parse,\n    app     = new Emitter();\n\n\n/**\n * Make the given inactive/hidden page active/visible.\n * Pass some data to the page and trigger the corresponding event.\n *\n * @param {Page} page item to show\n * @param {*} [data] data to send to page\n *\n * @return {boolean} operation status\n */\nfunction showPage ( page, data ) {\n    // page available and can be hidden\n    if ( page && !page.active ) {\n        // apply visibility\n        page.$node.classList.add('active');\n        page.active = true;\n        app.activePage = page;\n\n        debug.info('show component ' + page.name + '#' + page.id, null, {\n            tags: ['show', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' show', 'green');\n\n        // there are some listeners\n        if ( page.events['show'] ) {\n            // notify listeners\n            page.emit('show', {data: data});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n/**\n * Make the given active/visible page inactive/hidden and trigger the corresponding event.\n *\n * @param {Page} page item to hide\n *\n * @return {boolean} operation status\n */\nfunction hidePage ( page ) {\n    // page available and can be hidden\n    if ( page && page.active ) {\n        // apply visibility\n        page.$node.classList.remove('active');\n        page.active  = false;\n        app.activePage = null;\n\n        debug.info('hide component ' + page.name + '#' + page.id, null, {\n            tags: ['hide', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' hide', 'grey');\n\n        // there are some listeners\n        if ( page.events['hide'] ) {\n            // notify listeners\n            page.emit('hide');\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n// url request params\napp.query = parse(document.location.search.substring(1));\n\n\n// global application configuration\n// in config.js file in js root\napp.config = require('app:config');\n\n\n// the only visible page\napp.activePage = null;\n\n\n/**\n * Browse to a given page.\n * Do nothing if the link is invalid. Otherwise hide the current, show new and update the \"previous\" link.\n *\n * @param {Page} pageTo instance of the page to show\n * @param {*} [data] options to pass to the page on show\n *\n * @return {boolean} operation status\n */\napp.route = function ( pageTo, data ) {\n    var pageFrom = app.activePage;\n\n    if ( DEVELOP ) {\n        //if ( router.pages.length > 0 ) {\n        if ( !pageTo || typeof pageTo !== 'object' ) {\n            throw new Error(__filename + ': wrong pageTo type');\n        }\n        if ( !('active' in pageTo) ) {\n            throw new Error(__filename + ': missing field \"active\" in pageTo');\n        }\n        //}\n    }\n\n    // valid not already active page\n    if ( pageTo && !pageTo.active ) {\n        //debug.log('router.navigate: ' + pageTo.id, pageTo === pageFrom ? 'grey' : 'green');\n        debug.info('app route: ' + pageTo.name + '#' + pageTo.id, null, {tags: ['route', pageTo.name, pageTo.id]});\n\n        // update url\n        //location.hash = this.stringify(name, data);\n\n        // apply visibility\n        hidePage(app.activePage);\n        showPage(pageTo, data);\n\n        // there are some listeners\n        if ( this.events['route'] ) {\n            // notify listeners\n            this.emit('route', {from: pageFrom, to: pageTo});\n        }\n\n        // store\n        //this.history.push(pageTo);\n\n        return true;\n    }\n\n    //debug.warn('invalid page to route: ' + pageTo.id, null, {tags: ['route', 'page', pageTo.id]});\n    console.warn('invalid page to route: ' + pageTo.id);\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar app = require('./lib/main');\n\n\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Base Events Emitter implementation.\n *\n * @see http://nodejs.org/api/events.html\n * @constructor\n *\n * @example\n * var emitter = new Emitter();\n */\nfunction Emitter () {\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // if ( DEVELOP ) {\n    //     if ( typeof this !== 'object' ) { throw new Error(__filename + ': must be constructed via new'); }\n    // }\n\n    /**\n     * Inner hash table for event names and linked callbacks.\n     * Manual editing should be avoided.\n     *\n     * @member {Object.<string, function[]>}\n     *\n     * @example\n     * {\n     *     click: [\n     *         function click1 () { ... },\n     *         function click2 () { ... }\n     *     ],\n     *     keydown: [\n     *         function () { ... }\n     *     ]\n     * }\n     **/\n    this.events = {};\n}\n\n\nEmitter.prototype = {\n    /**\n     * Bind an event to the given callback function.\n     * The same callback function can be added multiple times for the same event name.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.addListener('click', function ( data ) { ... });\n     * // one more click handler\n     * emitter.addListener('click', function ( data ) { ... });\n     */\n    addListener: function ( name, callback ) {\n        console.assert(arguments.length === 2, 'wrong arguments number');\n        console.assert(typeof name === 'string', 'wrong name type');\n        console.assert(name.length > 0, 'empty name');\n        console.assert(typeof callback === 'function', 'callback should be a function');\n\n        // if ( DEVELOP ) {\n        //     if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        //     if ( typeof name !== 'string' || name.length === 0 ) { throw new Error(__filename + ': wrong or empty name'); }\n        //     if ( typeof callback !== 'function' ) { throw new Error(__filename + ': wrong callback type'); }\n        // }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(callback);\n    },\n\n\n    /**\n     * Add a one time listener for the event.\n     * This listener is invoked only the next time the event is fired, after which it is removed.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.once('click', function ( data ) { ... });\n     */\n    once: function ( name, callback ) {\n        // current execution context\n        var self = this;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n        }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(function onceWrapper () {\n            self.removeListener(name, onceWrapper);\n            callback.apply(self, arguments);\n        });\n    },\n\n\n    /**\n     * Apply multiple listeners at once.\n     *\n     * @param {Object} callbacks event names with callbacks\n     *\n     * @example\n     * emitter.addListeners({\n     *     click: function ( data ) {},\n     *     close: function ( data ) {}\n     * });\n     */\n    addListeners: function ( callbacks ) {\n        var name;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof callbacks !== 'object' ) {\n                throw new Error(__filename + ': wrong callbacks type');\n            }\n            if ( Object.keys(callbacks).length === 0 ) {\n                throw new Error(__filename + ': no callbacks given');\n            }\n        }\n\n        for ( name in callbacks ) {\n            if ( callbacks.hasOwnProperty(name) ) {\n                this.addListener(name, callbacks[name]);\n            }\n        }\n    },\n\n\n    /**\n     * Remove all instances of the given callback.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to remove\n     *\n     * @example\n     * emitter.removeListener('click', func1);\n     */\n    removeListener: function ( name, callback ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n            if ( this.events[name] && !Array.isArray(this.events[name]) ) {\n                throw new Error(__filename + ': corrupted inner data');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( this.events[name] ) {\n            // rework the callback list to exclude the given one\n            this.events[name] = this.events[name].filter(function callbacksFilter ( fn ) { return fn !== callback; });\n            // event has no more callbacks so clean it\n            if ( this.events[name].length === 0 ) {\n                // as if there were no listeners at all\n                this.events[name] = undefined;\n            }\n        }\n    },\n\n\n    /**\n     * Remove all callbacks for the given event name.\n     * Without event name clears all events.\n     *\n     * @param {string} [name] event identifier\n     *\n     * @example\n     * emitter.removeAllListeners('click');\n     * emitter.removeAllListeners();\n     *\n     * @deprecated\n     */\n    /*removeAllListeners: function ( name ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 0 && (typeof name !== 'string' || name.length === 0) ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // check input\n        if ( arguments.length === 0 ) {\n            // no arguments so remove everything\n            this.events = {};\n        } else if ( name ) {\n            if ( DEVELOP ) {\n                if ( this.events[name] ) { throw new Error(__filename + ': event is not removed'); }\n            }\n\n            // only name is given so remove all callbacks for the given event\n            // but object structure modification should be avoided\n            this.events[name] = undefined;\n        }\n    },*/\n\n\n    /**\n     * Execute each of the listeners in the given order with the supplied arguments.\n     *\n     * @param {string} name event identifier\n     *\n     * @example\n     * emitter.emit('init');\n     * emitter.emit('click', {src: panel1, dst: panel2});\n     * emitter.emit('load', error, data);\n     *\n     * // it's a good idea to emit event only when there are some listeners\n     * if ( this.events['click'] ) {\n     *     this.emit('click', {event: event});\n     * }\n     */\n    emit: function ( name ) {\n        var event = this.events[name],\n            index;\n\n        if ( DEVELOP ) {\n            if ( arguments.length < 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( event ) {\n            if ( DEVELOP ) {\n                if ( !Array.isArray(event) ) {\n                    throw new Error(__filename + ': wrong event type');\n                }\n            }\n\n            for ( index = 0; index < event.length; index++ ) {\n                if ( DEVELOP ) {\n                    if ( typeof event[index] !== 'function' ) {\n                        throw new Error(__filename + ': wrong event callback type');\n                    }\n                }\n\n                // invoke the callback with parameters\n                event[index].apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n    }\n};\n\n\n// correct constructor name\nEmitter.prototype.constructor = Emitter;\n\n\n// public\nmodule.exports = Emitter;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core');\n//    metrics = require('app:metrics'),\n//    linkCSS;\n\n\n// global link\n//app.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\n//app.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\n//app.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n// // set max browser window size\n// window.moveTo(0, 0);\n// window.resizeTo(metrics.width, metrics.height);\n\n// load CSS file base on resolution\n/*linkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = 'css/' + (DEVELOP ? 'develop.' : 'release.') + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);*/\n\n\n// public\nmodule.exports = function ( name ) {\n    var link = document.createElement('link');\n\n    link.rel  = 'stylesheet';\n    link.href = 'css/' + name + '.' + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\n    document.head.appendChild(link);\n};\n","/**\n * HTML elements low-level handling.\n *\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n/* eslint no-unused-vars: 0 */\n\n/**\n * DOM manipulation module\n */\nvar dom = {};\n\n\n/**\n * Create a new HTML element.\n *\n * @param {string} tagName mandatory tag name\n * @param {Object|null} [attrList] element attributes\n * @param {...*} [content] element content (primitive value/values or other nodes)\n * @return {Node|null} HTML element or null on failure\n *\n * @example\n * dom.tag('table');\n * dom.tag('div', {}, 'some text');\n * dom.tag('div', {className:'top'}, dom.tag('span'), dom.tag('br'));\n * dom.tag('link', {rel:'stylesheet', type:'text/css', href:'http://some.url/'});\n */\ndom.tag = function ( tagName, attrList, content ) {\n    var node = null,\n        index, name;\n\n    // minimal param is given\n    if ( tagName ) {\n        // empty element\n        node = document.createElement(tagName);\n\n        // optional attribute list is given\n        if ( attrList && typeof attrList === 'object' ) {\n            for ( name in attrList ) {\n                // extend a new node with the given attributes\n                node[name] = attrList[name];\n            }\n        }\n\n        // content (arguments except the first two)\n        for ( index = 2; index < arguments.length; index++ ) {\n            // some data is given\n            if ( arguments[index] ) {\n                // regular HTML tag or plain data\n                node.appendChild(\n                    typeof arguments[index] === 'object' ? arguments[index] : document.createTextNode(arguments[index])\n                );\n            }\n        }\n\n    }\n\n    return node;\n};\n\n\n/**\n * Create a new DocumentFragment filled with the given non-empty elements if any.\n *\n * @param {...*} [node] fragment content (primitive value/values or other nodes)\n * @return {DocumentFragment} new placeholder\n *\n * @example\n * // gives an empty fragment element\n * dom.fragment();\n * // gives a fragment element with 3 div element inside\n * dom.fragment(dom.tag('div'), div2, div3);\n * // mixed case\n * dom.fragment('some text', 123, div3);\n */\ndom.fragment = function ( node ) {\n    // prepare placeholder\n    var fragment = document.createDocumentFragment(),\n        index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        node = arguments[index];\n        // some data is given\n        if ( node ) {\n            // regular HTML tag or plain data\n            fragment.appendChild(typeof node === 'object' ? node : document.createTextNode(node));\n        }\n    }\n\n    return fragment;\n};\n\n\n/**\n * Add the given non-empty data (HTML element/text or list) to the destination element.\n *\n * @param {Node} tagDst element to receive children\n * @param {...*} [content] element content (primitive value/values or other nodes)\n * @return {Node|null} the destination element - owner of all added data\n *\n * @example\n * // simple text value\n * add(some_div, 'Hello world');\n * // single DOM Element\n * add(some_div, some_other_div);\n * // DOM Element list\n * add(some_div, div1, div2, div3);\n * // mixed case\n * add(some_div, div1, 'hello', 'world');\n */\ndom.add = function ( tagDst, content ) {\n    var index;\n\n    // valid HTML tag as the destination\n    if ( tagDst instanceof Node ) {\n        // append all except the first one\n        for ( index = 1; index < arguments.length; index++ ) {\n            // some data is given\n            if ( arguments[index] ) {\n                // regular HTML tag or plain data\n                tagDst.appendChild(\n                    typeof arguments[index] === 'object' ? arguments[index] : document.createTextNode(arguments[index])\n                );\n            }\n        }\n\n        return tagDst;\n    }\n\n    return null;\n};\n\n\n/**\n * Remove the given elements from the DOM.\n *\n * @param {...Node} [nodes] element to be removed\n * @return {boolean} operation status (true - all given elements removed)\n *\n * @example\n * dom.remove(document.querySelector('div.test'));\n * dom.remove(div1, div2, div3);\n */\ndom.remove = function ( nodes ) {\n    // amount of successfully removed nodes\n    var count = 0,\n        index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        // valid non-empty tag\n        if ( arguments[index] && arguments[index].parentNode ) {\n            if ( arguments[index].parentNode.removeChild(arguments[index]) === arguments[index] ) {\n                count++;\n            }\n        }\n    }\n\n    return arguments.length > 0 && count === arguments.length;\n};\n\n\ndom.clear = function ( node ) {\n    while ( node.lastChild ) {\n        node.removeChild(node.lastChild);\n    }\n};\n\n\n// public\nmodule.exports = dom;\n","/**\n * Global list of non-printable control key codes.\n *\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    backspace: 8,\n    tab:       9,\n    enter:     13,\n    escape:    27,\n    space:     32,\n    pageUp:    33,\n    pageDown:  34,\n    end:       35,\n    home:      36,\n    left:      37,\n    up:        38,\n    right:     39,\n    down:      40,\n    insert:    45,\n    // not \"delete\" because of old browsers issue\n    del:       46\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar List = require('mag-component-list'),\n    Layout = require('mag-component-layout');\n\n/**\n *  Layout list contains array of layout components\n *\n * @constructor\n * @extends List\n *\n * @param {Object} config object\n * @param {Element} [config.noData=''] element or string to display if set empty data\n *\n * @example\n * var LayoutList = require('mag-component-layout-list'),\n *     list = new LayoutList({\n *         propagate: true,\n *         size: 7,\n *         focusIndex: 0,\n *         noData: 'No channels'\n *         data: [\n *                 {\n *                     items: [\n *                         {\n *                             className: 'star',\n *                             name: '$text'\n *                         },\n *                         'Some text'\n *                     ],\n *                     click: function () {\n *                         // do something\n *                     },\n *                     name: 'starItem'\n *                 },\n *                 {\n *                     items: [\n *                         'Hello world',\n *                         {\n *                             value: 'hi',\n *                             className: 'status'\n *                         }\n *                     ],\n *                     value:{\n *                         uri: 'http://55.55.55.55/some'\n *                     },\n *                     click: someHandler\n *                 },\n *                 {\n *                     items: [\n *                         {\n *                             className: 'big',\n *                             value: ' Some'\n *                         },\n *                         {\n *                             value: new Input()\n *                         }\n *                     ]\n *                 },\n *                 {\n *                     items: [\n *                         new Button({value: 'Ok'}),\n *                         new Button({value: 'Cancel'}),\n *                         new Button({value: 'Exit'})\n *                     ]\n *                 }\n *             ]\n * });\n *\n * list.links.starItem.links.$text.innerText = 'new Text';\n *\n */\nfunction LayoutList ( config ) {\n    var self = this;\n\n    config = config || {};\n\n    /**\n     * Elements handlers\n     */\n    this.handlers = {};\n\n    /**\n     * Hash map of layouts links\n     */\n    this.links = {};\n\n    /**\n     * No data placeholder\n     *\n     * @type {Element}\n     */\n    this.$noData = null;\n\n    //config.className = 'layoutList ' + (config.className || '');\n\n    config.propagate = config.propagate === undefined ? true : config.propagate;\n\n    /**\n     * Set data layout to be fixed to cache HTML elements\n     *\n     * @type {boolean|*}\n     */\n    this.fixedData = config.fixedData || false;\n\n    //config.$body = document.createElement('div');\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    this.$noData = document.createElement('div');\n    this.$noData.className = 'noData hidden';\n\n    List.call(this, config);\n\n    this.$node.appendChild(this.$body);\n    this.$node.appendChild(this.$noData);\n\n    // add handler to focus inner layout\n    this.addListener('click:item', function ( event ) {\n        // focus inner layout of item\n        if ( event.$item.layout.children.length && !event.inner ) {\n            event.$item.layout.children[event.$item.layout.focusIndex].focus();\n        }\n\n        // only focus item if we click mouse\n        if ( event.inner ) {\n            self.focus();\n            self.focusItem(event.$item);\n        }\n        // do click callback if it present\n        if ( self.handlers[event.$item.index] ) {\n            self.handlers[event.$item.index](event.$item);\n        }\n    });\n}\n\n\nLayoutList.prototype = Object.create(List.prototype);\nLayoutList.prototype.constructor = LayoutList;\n\n// set component name\nLayoutList.prototype.name = 'mag-component-layout-list';\n\n\n/*eslint id-length:0*/\n/**\n * Default render function\n *\n * @param {Element} $item in list\n * @param {Object} config to render layout element\n */\nLayoutList.prototype.renderItemDefault = function ( $item, config ) {\n    var layout, layoutConfig,\n        currentNode,\n        currentData,\n        i;\n\n    if ( $item.ready && this.fixedData ) {\n        for ( i = 0; i < config.items.length; i++ ) {\n            currentData = config.items[i];\n            if ( typeof currentData.value === 'string' || currentData.value === undefined ) {\n                currentNode = $item.layout.$node.childNodes[i];\n                currentNode.innerText = currentData.value || '';\n                currentNode.className = currentData.className || '';\n            }\n        }\n    } else {\n        // clear inner content\n        while ( $item.firstChild ) {\n            $item.removeChild($item.firstChild);\n        }\n\n        layoutConfig = {\n            focusable: false,\n            data: config.items\n        };\n\n        if ( config.className ) {\n            layoutConfig.className = config.className;\n        }\n\n        layout = new Layout(layoutConfig);\n\n        if ( config.name ) {\n            this.links[config.name] = layout;\n        }\n\n        $item.appendChild(layout.$node);\n        $item.layout = layout;\n        layout.parent = this;\n        layout.$parentItem = $item;\n\n        // focus layoutList if click on layout\n        layout.addListener('click', function () {\n            // add inner property to set that event comes from inner component\n            layout.parent.emit('click:item', {$item: $item, inner: true});\n        });\n\n        if ( config.click ) {\n            this.handlers[$item.index] = config.click;\n        }\n        // item is rendered\n        $item.ready = true;\n    }\n    $item.value = config.value || {};\n};\n\n\nLayoutList.prototype.setData = function ( config ) {\n    this.links = {};\n    List.prototype.setData.call(this, config);\n\n    if ( config.data && config.data.length ) {\n        this.$noData.classList.add('hidden');\n    } else {\n        this.$noData.classList.remove('hidden');\n    }\n};\n\n\nLayoutList.prototype.init = function ( config ) {\n    var $wrap;\n\n    List.prototype.init.call(this, config);\n    if ( config.noData ) {\n        if ( DEVELOP ) {\n            if ( typeof config.noData !== 'string' && !(config.noData instanceof Element) ) {\n                throw new Error(__filename + ': wrong config.$noData type');\n            }\n        }\n\n        this.$noData.innerHTML = '';\n        if ( config.noData instanceof Element ) {\n            this.$noData.appendChild(config.noData);\n        } else if ( typeof config.noData === 'string' ) {\n            $wrap = document.createElement('div');\n            $wrap.innerText = config.noData;\n            this.$noData.appendChild($wrap);\n        }\n    }\n\n    if ( config.data && config.data.length ) {\n        this.$noData.classList.add('hidden');\n    } else {\n        this.$noData.classList.remove('hidden');\n    }\n};\n\nLayoutList.prototype.renderItem = LayoutList.prototype.renderItemDefault;\n\n\nmodule.exports = LayoutList;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n/* eslint complexity: [error, 37] */\n/* eslint max-lines-per-function: 1 */\n/* eslint no-fallthrough: 1 */\n/* eslint complexity: 1 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n\n/**\n * Mouse click event.\n *\n * @event module:stb/ui/list~List#click:item\n *\n * @type {Object}\n * @property {Element} $item clicked HTML item\n * @property {Event} event click event data\n */\n\n\n/**\n * Base list implementation.\n *\n * Each data item can be either a primitive value or an object with these fields:\n *\n *  Name    | Description\n * ---------|-------------\n *  value   | actual cell value to render\n *  mark    | is it necessary or not to render this cell as marked\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array}    [config.data=[]]     component data to visualize\n * @param {function} [config.render]      method to build each grid cell content\n * @param {function} [config.navigate]    method to move focus according to pressed keys\n * @param {number}   [config.size=5]      amount of visible items on a page\n * @param {number}   [config.viewIndex=0] move view window to this position on init\n * @param {number}   [config.focusIndex]  list item index to make item focused (move view window to this position)\n * @param {boolean}  [config.cycle=true]  allow or not to jump to the opposite side of a list when there is nowhere to go next\n * @param {boolean}  [config.scroll=null] associated ScrollBar component link\n * @param {Object}   [config.provider]    data provider\n *\n * @fires module:stb/ui/list~List#click:item\n */\nfunction List ( config ) {\n    // current execution context\n    //var self = this;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Link to the currently focused DOM element.\n     *\n     * @type {Element}\n     */\n    this.$focusItem = null;\n\n    /**\n     * Position of the visible window to render.\n     *\n     * @type {number}\n     */\n    this.viewIndex = null;\n\n    /**\n     * Component data to visualize.\n     *\n     * @type {Array}\n     */\n    this.data = [];\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Amount of visible items on a page.\n     *\n     * @type {number}\n     */\n    this.size = 5;\n\n    /**\n     * Allow or not to jump to the opposite side of a list when there is nowhere to go next.\n     *\n     * @type {boolean}\n     */\n    this.cycle = false;\n\n    /**\n     * Associated ScrollBar component link.\n     *\n     * @type {ScrollBar}\n     */\n    this.scroll = null;\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    /**\n     * Associated data provider\n     *\n     * @type {Provider}\n     */\n    this.provider = null;\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    //config.className += ' theme-main';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // component setup\n    this.init(config);\n\n    // custom navigation method\n    //if ( config.navigate ) {\n    //    if ( DEVELOP ) {\n    //        if ( typeof config.navigate !== 'function' ) { throw new Error(__filename + ': wrong config.navigate type'); }\n    //    }\n    //    // apply\n    //    this.navigate = config.navigate;\n    //}\n\n    // navigation by keyboard\n    //this.addListener('keydown', this.navigate);\n\n    // navigation by mouse\n    //this.$body.addEventListener('mousewheel', function ( event ) {\n    //    // scrolling by Y axis\n    //    if ( self.type === self.TYPE_VERTICAL && event.wheelDeltaY ) {\n    //        self.move(event.wheelDeltaY > 0 ? 38 : keys.down);\n    //    }\n    //\n    //    // scrolling by X axis\n    //    if ( self.type === self.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n    //        self.move(event.wheelDeltaX > 0 ? 37 : 39);\n    //    }\n    //});\n}\n\n\n// inheritance\nList.prototype = Object.create(Component.prototype);\nList.prototype.constructor = List;\n\n// set component name\nList.prototype.name = 'mag-component-list';\n\nList.prototype.TYPE_VERTICAL   = 1;\nList.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Fill the given item with data.\n *\n * @param {Element} $item item DOM link\n * @param {*} data associated with this item data\n */\nList.prototype.renderItemDefault = function ( $item, data ) {\n    $item.innerText = data.value;\n};\n\n\n/**\n * Method to build each list item content.\n * Can be redefined to provide custom rendering.\n *\n * @type {function}\n */\nList.prototype.renderItem = List.prototype.renderItemDefault;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nList.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse wheel events.\n     *\n     * @param {Event} event generated event\n     */\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        if ( this.type === this.TYPE_VERTICAL && event.wheelDeltaY ) {\n            this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n        }\n\n        // scrolling by X axis\n        if ( this.type === this.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n            this.move(event.wheelDeltaX > 0 ? keys.left : keys.right);\n        }\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n            case keys.right:\n            case keys.left:\n            case keys.pageUp:\n            case keys.pageDown:\n            case keys.home:\n            case keys.end:\n                // cursor move only on arrow keys\n                this.move(event.code);\n                break;\n            case keys.enter:\n                // there are some listeners\n                if ( this.events['click:item'] && this.$focusItem ) {\n                    // notify listeners\n                    this.emit('click:item', {$item: this.$focusItem, event: event});\n                }\n                break;\n        }\n    }\n};\n\n\n/**\n * Default method to move focus according to pressed keys.\n *\n * @param {Object} event generated event source of movement\n */\n//List.prototype.navigateDefault = function ( event ) {\n//    switch ( event.code ) {\n//        case 38:\n//        case 40:\n//        case 39:\n//        case 37:\n//        case 33:\n//        case 34:\n//        case 36:\n//        case 35:\n//            // cursor move only on arrow keys\n//            this.move(event.code);\n//            break;\n//        case 13:\n//            // there are some listeners\n//            if ( this.events['click:item'] ) {\n//                // notify listeners\n//                this.emit('click:item', {$item: this.$focusItem, event: event});\n//            }\n//            break;\n//    }\n//};\n\n\n/**\n * Current active method to move focus according to pressed keys.\n * Can be redefined to provide custom navigation.\n *\n * @type {function}\n */\n//List.prototype.navigate = List.prototype.navigateDefault;\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var idx, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( idx = 0; idx < data.length; idx++ ) {\n        // cell value\n        item = data[idx];\n        // primitive value\n        if ( typeof item !== 'object' ) {\n            // wrap with defaults\n            item = data[idx] = {\n                value: data[idx]\n            };\n        }\n\n        if ( DEVELOP ) {\n            //if ( !('value' in item) ) { throw new Error(__filename + ': field \"value\" is missing'); }\n            if ( ('mark' in item) && Boolean(item.mark) !== item.mark ) {\n                throw new Error(__filename + ': item.mark must be boolean');\n            }\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.init = function ( config ) {\n    var self     = this,\n        currSize = this.$body.children.length,\n        /**\n         * Item mouse click handler.\n         *\n         * @param {Event} event click event data\n         *\n         * @this Element\n         *\n         * @fires module:stb/ui/list~List#click:item\n         */\n        onClick = function ( event ) {\n            if ( this.data ) {\n                self.focusItem(this);\n\n                // there are some listeners\n                if ( self.events['click:item'] ) {\n                    // notify listeners\n                    self.emit('click:item', {$item: this, event: event});\n                }\n            }\n        },\n        item, idx;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // apply cycle behaviour\n    if ( config.cycle !== undefined ) { this.cycle = config.cycle; }\n\n    // apply ScrollBar link\n    if ( config.scroll ) { this.scroll = config.scroll; }\n\n    // apply data provider\n    if ( config.provider ) { this.provider = config.provider; }\n\n\n    // custom render method\n    if ( config.render ) {\n        if ( DEVELOP ) {\n            if ( typeof config.render !== 'function' ) {\n                throw new Error(__filename + ': wrong config.render type');\n            }\n        }\n\n        // apply\n        this.renderItem = config.render;\n    }\n\n    // list items amount on page\n    if ( config.size ) {\n        if ( DEVELOP ) {\n            if ( Number(config.size) !== config.size ) {\n                throw new Error(__filename + ': config.size must be a number');\n            }\n            if ( config.size <= 0 ) {\n                throw new Error(__filename + ': config.size should be positive');\n            }\n        }\n\n        // apply\n        this.size = config.size;\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( name ) {\n            self.events[name] = null;\n            self.addListener(name, config.events[name]);\n        });\n    }\n\n    // geometry has changed or initial draw\n    if ( this.size !== currSize ) {\n        // non-empty list\n        if ( currSize > 0 ) {\n            // clear old items\n            this.$body.innerText = null;\n        }\n\n        // create new items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            item = document.createElement('div');\n            item.index = idx;\n            //item.className = 'item theme-list-item';\n            item.className = 'item';\n\n            item.addEventListener('click', onClick);\n            this.$body.appendChild(item);\n        }\n    }\n\n    if ( this.provider ) {\n        if ( this.provider.blocked ) {\n            return;\n        }\n\n        this.provider.get( null, function ( error, data ) {\n            if ( error ) {\n                if ( self.events['data:error'] ) {\n                    /**\n                     * Provider get error while take new data\n                     *\n                     * @event module:stb/ui/list~List#data:error\n                     */\n                    self.emit('data:error', error);\n                }\n            } else {\n                if ( data ) {\n                    config.data = data;\n                    self.setData(config);\n                    if ( self.scroll ) {\n                        self.scroll.init({\n                            realSize: self.provider.maxCount,\n                            viewSize: self.provider.size,\n                            value: self.provider.head + self.provider.pos\n                        });\n                    }\n                }\n                if ( self.events['data:get'] ) {\n                    /**\n                     * Provider request new data\n                     *\n                     * @event module:stb/ui/list~List#data:get\n                     *\n                     * @type {Object}\n                     */\n                    self.emit('data:get');\n                }\n            }\n        });\n    } else if ( config.data ) {\n        this.setData(config);\n    }\n};\n\n/**\n * Set data and render inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.setData = function ( config ) {\n    // apply list of items\n\n    if ( config.data ) {\n        if ( DEVELOP ) {\n            if ( !Array.isArray(config.data) ) { throw new Error(__filename + ': wrong config.data type'); }\n        }\n        // prepare user data\n        this.data = normalize(config.data);\n    }\n\n    // view window position\n    if ( DEVELOP ) {\n        if ( config.viewIndex !== undefined ) {\n            if ( Number(config.viewIndex) !== config.viewIndex ) {\n                throw new Error(__filename + ': config.viewIndex must be a number');\n            }\n            if ( config.viewIndex < 0 ) {\n                throw new Error(__filename + ': config.viewIndex should be positive');\n            }\n        }\n    }\n\n    // reset current view window position\n    this.viewIndex = null;\n\n    if ( this.$focusItem ) {\n        this.blurItem(this.$focusItem);\n    }\n\n    if ( this.scroll ) {\n        if ( this.provider ) {\n            if ( this.scroll.realSize !== this.provider.maxCount ) {\n                this.scroll.init({\n                    realSize: this.provider.maxCount,\n                    viewSize: this.provider.size,\n                    value: this.provider.head + this.provider.pos\n                });\n            }\n        } else {\n            this.scroll.init({\n                realSize: this.data.length,\n                viewSize: this.size,\n                value: config.viewIndex || 0\n            });\n        }\n    }\n\n    // set focus item\n    if ( config.focusIndex !== undefined && this.data.length ) {\n        if ( DEVELOP ) {\n            if ( Number(config.focusIndex) !== config.focusIndex ) {\n                throw new Error(__filename + ': config.focusIndex must be a number');\n            }\n            if ( config.focusIndex < 0 ) {\n                throw new Error(__filename + ': config.focusIndex should be positive');\n            }\n            // if ( config.focusIndex > this.data.length - 1 ) {\n            //     throw new Error(__filename + ': config.focusIndex should be less than data size');\n            // }\n        }\n\n        // jump to the necessary item\n        this.focusIndex(config.focusIndex);\n    } else {\n        // go to the first page\n        this.renderView(config.viewIndex || 0);\n    }\n};\n\n\n/**\n * Shift the visible view window event.\n *\n * @event module:stb/ui/list~List#move:view\n *\n * @type {Object}\n * @property {number} prevIndex previous view window position\n * @property {number} currIndex current view window position\n */\n\n\n/**\n * Draw the visible window.\n *\n * @param {number} index start position to render\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#move:view\n */\nList.prototype.renderView = function ( index ) {\n    var $item, idx, itemData, prevIndex, currIndex;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be more than zero');\n        }\n        // if ( index >= this.data.length ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // has the view window position changed\n    if ( this.viewIndex !== index ) {\n        // save for emit\n        prevIndex = this.viewIndex;\n        // sync global pointer\n        this.viewIndex = currIndex = index;\n\n        // rebuild all visible items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            // shortcuts\n            $item    = this.$body.children[idx];\n            itemData = this.data[index];\n\n            // real item or stub\n            if ( itemData ) {\n                // correct inner data/index and render\n                $item.data  = itemData;\n                $item.index = index;\n                this.renderItem($item, itemData);\n\n                // apply CSS\n                if ( itemData.mark ) {\n                    $item.classList.add('mark');\n                } else {\n                    $item.classList.remove('mark');\n                }\n            } else {\n                // nothing to render\n                $item.data = $item.index = undefined;\n                $item.innerHTML = '&nbsp;';\n                $item.ready = false;\n            }\n            index++;\n        }\n\n        // there are some listeners\n        if ( this.events['move:view'] ) {\n            // notify listeners\n            this.emit('move:view', {prevIndex: prevIndex, currIndex: currIndex});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            this.emit('select:item', {$item: $item});\n        }\n\n        // update a linked scroll component\n        if ( this.scroll ) {\n            this.scroll.scrollTo(this.provider ? this.provider.head + this.provider.pos : this.viewIndex);\n        }\n\n        // full rebuild\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Move focus to the given direction.\n *\n * @param {number} direction arrow key code\n *\n * @fires module:stb/ui/list~List#cycle\n * @fires module:stb/ui/list~List#overflow\n */\nList.prototype.move = function ( direction ) {\n    var self = this,\n        force = false;\n\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(direction) !== direction ) {\n            throw new Error(__filename + ': direction must be a number');\n        }\n    }\n\n    // empty list\n    if ( !this.data.length ) {\n        return;\n    }\n\n    switch ( direction ) {\n        case keys.left:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.up:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index > 0 ) {\n                    if ( this.$focusItem === this.$body.firstChild ) {\n                        this.renderView(this.viewIndex - 1);\n                    } else {\n                        this.focusItem(this.$focusItem.previousSibling);\n                    }\n                } else if ( this.provider ) {\n                    if ( this.provider.blocked ) {\n                        return;\n                    }\n\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the end of the list\n                        this.move(keys.end);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.right:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.down:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index < this.data.length - 1 ) {\n                    if ( this.$focusItem === this.$body.lastChild ) {\n                        this.renderView(this.viewIndex + 1);\n                    } else {\n                        this.focusItem(this.$focusItem.nextSibling);\n                    }\n                } else if ( this.provider ) {\n                    if ( this.provider.blocked ) {\n                        return;\n                    }\n\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the beginning of the list\n                        this.move(keys.home);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.pageUp:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n\n                return;\n            }\n            if ( this.viewIndex < this.size ) {\n                // first page\n                this.renderView(0);\n            } else {\n                // second page and further\n                this.renderView(this.viewIndex - this.size + 1);\n            }\n\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.pageDown:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            // data is bigger then one page\n            if ( this.data.length > this.size ) {\n                // determine jump size\n                if ( this.viewIndex > this.data.length - this.size * 2 ) {\n                    // last page\n                    this.renderView(this.data.length - this.size);\n                } else {\n                    // before the last page\n                    this.renderView(this.viewIndex + this.size - 1);\n                }\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n        case keys.home:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n                break;\n            }\n            this.renderView(0);\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.end:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            if ( this.data.length > this.size ) {\n                this.renderView(this.data.length - this.size);\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n    }\n};\n\n\n/**\n * Highlight the given DOM element as focused.\n * Remove focus from the previously focused item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.focusItem = function ( $item ) {\n    var $prev = this.$focusItem;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n    }\n\n    // different element\n    if ( $item && $prev !== $item ) {\n        if ( DEVELOP ) {\n            if ( !($item instanceof Element) ) {\n                throw new Error(__filename + ': wrong $item type');\n            }\n            if ( $item.parentNode !== this.$body ) {\n                throw new Error(__filename + ': wrong $item parent element');\n            }\n        }\n\n        // some item is focused already\n        if ( $prev !== null ) {\n            if ( DEVELOP ) {\n                if ( !($prev instanceof Element) ) {\n                    throw new Error(__filename + ': wrong $prev type');\n                }\n            }\n\n            // style\n            $prev.classList.remove('focus');\n            //$prev.classList.remove('theme-focus');\n\n            // there are some listeners\n            if ( this.events['blur:item'] ) {\n                /**\n                 * Remove focus from an element.\n                 *\n                 * @event module:stb/ui/list~List#blur:item\n                 *\n                 * @type {Object}\n                 * @property {Element} $item previously focused HTML element\n                 */\n                this.emit('blur:item', {$item: $prev});\n            }\n        }\n        // reassign\n        this.$focusItem = $item;\n\n        this.$focusItem.data = this.data[this.$focusItem.index];\n\n        // correct CSS\n        $item.classList.add('focus');\n        //$item.classList.add('theme-focus');\n\n        // there are some listeners\n        if ( this.events['focus:item'] ) {\n            /**\n             * Set focus to a DOM element.\n             *\n             * @event module:stb/ui/list~List#focus:item\n             *\n             * @type {Object}\n             * @property {Element} $prev old/previous focused HTML element\n             * @property {Element} $curr new/current focused HTML element\n             */\n            this.emit('focus:item', {$prev: $prev, $curr: $item});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            /**\n             * Set focus to a list item.\n             *\n             * @event module:stb/ui/list~List#select:item\n             *\n             * @type {Object}\n             * @property {Element} $item new/current focused item\n             */\n            this.emit('select:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Highlight the given DOM element as blur.\n * Remove focus from the item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.blurItem = function ( $item ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) { throw new Error(__filename + ': wrong arguments number'); }\n    }\n\n    // different element\n    if ( $item ) {\n        if ( $item === this.$focusItem ) {\n            this.$focusItem = null;\n        }\n\n        $item.classList.remove('focus');\n        //$item.classList.remove('theme-focus');\n\n        // there are some listeners\n        if ( this.events['blur:item'] ) {\n            /**\n             * Remove focus from an element.\n             *\n             * @event module:stb/ui/list~List#blur:item\n             *\n             * @type {Object}\n             * @property {Element} $item previously focused HTML element\n             */\n            this.emit('blur:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Set the given item focused by item index.\n *\n * @param {number} index item data index\n */\nList.prototype.focusIndex = function ( index ) {\n    var viewIndex = this.viewIndex || 0;\n\n    if ( DEVELOP ) {\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be positive');\n        }\n        // if ( index > this.data.length - 1 ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // determine direction\n    if ( index >= viewIndex + this.size ) {\n        // check range\n        index = index < this.data.length - 1 ? index : this.data.length - 1;\n        // move down\n        this.renderView(index - this.size + 1);\n        this.focusItem(this.$body.lastChild);\n    } else if ( index < viewIndex ) {\n        // check range\n        index = index > 0 ? index : 0;\n        // move up\n        this.renderView(index);\n        this.focusItem(this.$body.firstChild);\n    } else {\n        // no move\n        if ( this.viewIndex === null ) {\n            // first attempt\n            this.renderView(0);\n        }\n        this.focusItem(this.$body.children[index - viewIndex]);\n    }\n};\n\n\n/**\n * Set item state and appearance as marked.\n *\n * @param {Node|Element} $item element to focus\n * @param {boolean} state true - marked, false - not marked\n */\nList.prototype.markItem = function ( $item, state ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 2 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !($item instanceof Element) ) {\n            throw new Error(__filename + ': wrong $item type');\n        }\n        if ( $item.parentNode !== this.$body ) {\n            throw new Error(__filename + ': wrong $item parent element');\n        }\n        if ( Boolean(state) !== state ) {\n            throw new Error(__filename + ': state must be boolean');\n        }\n    }\n\n    // correct CSS\n    if ( state ) {\n        $item.classList.add('mark');\n    } else {\n        $item.classList.remove('mark');\n    }\n\n    // apply flag\n    $item.data.mark = state;\n};\n\n\n// public\nmodule.exports = List;\n","/**\n * @license The MIT License (MIT)\n * @copyright Dmitry Fedotov <bas.jsdev@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\nvar StbComponentModal = require('stb-component-modal'),\n    Component         = require('stb-component'),\n    keys              = require('stb-keys');\n\n\n/**\n * Modal window implementation.\n *\n * @constructor\n * @extends StbComponentModal\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {Object} [config.title] message title\n * @param {Object} [config.className] message classname\n * @param {Object} [config.icon] icon at header\n * @param {Object} [config.visible] visibility flag\n * @param {Object} [config.children] content (inherited from the parent)\n *\n * @example\n * var modalSort = new Modal({\n *     visible: false,\n *     title: 'sort',\n *     events: {\n *         show: function () {\n *             list.focus();\n *         },\n *         hide: function () {\n *             page.panelSet.focus();\n *         }\n *     },\n *     children: [list = new RadioList({})]\n * });\n * page.add(modalSort);\n */\nfunction Modal ( config ) {\n    var self = this,\n        $overlay, $body, onkeydown;\n\n    // sanitize\n    config = config || {};\n    config.events = config.events || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.icon && typeof config.icon !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.icon');\n        }\n        if ( config.title && typeof config.title !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.title');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body ) {\n            throw new Error(__filename + ': config.$body should not be provided in Modal manually');\n        }\n    }\n\n    // usually can't accept focus\n    config.focusable = config.focusable || false;\n    // hide by default\n    config.visible = config.visible || false;\n    // add default close by click\n    config.events.click = config.events.click || function () { self.hide(); };\n    // add close window behavior, when pushed a back button or a menu button\n    onkeydown = config.events.keydown;\n    config.events.keydown = function ( event ) {\n        if ( onkeydown ) {\n            onkeydown.call(this, event);\n        }\n        if ( event.code === keys.back || event.code === keys.menu ) {\n            event.stop = true;\n            self.hide();\n        }\n    };\n\n    // parent constructor call\n    StbComponentModal.call(this, config);\n\n    // add table-cell wrappers\n    this.$node.appendChild(document.createElement('div'));\n    this.$node.firstChild.classList.add('alignBox');\n    this.$node.firstChild.appendChild(document.createElement('div'));\n\n    // add header div\n    this.$header = document.createElement('div');\n    this.$header.className = 'header';\n\n    // insert caption placeholder\n    this.$text = this.$header.appendChild(document.createElement('div'));\n    this.$text.classList.add('text');\n    this.$text.innerText = config.title || '';\n\n    // optional icon\n    if ( config.icon ) {\n        this.$icon = this.$header.appendChild(document.createElement('div'));\n        this.$icon.className = 'icon ' + config.icon;\n    }\n\n    $overlay = document.createElement('div');\n    $overlay.className = 'overlay';\n\n    // add to dom\n    // add body wrapper\n    $body = this.$body.parentNode.removeChild(this.$body);\n    this.$node.firstChild.firstChild.appendChild(this.$header);\n    this.$node.firstChild.firstChild.appendChild($body);\n    this.$node.firstChild.firstChild.appendChild($overlay);\n}\n\n\n// inheritance\nModal.prototype = Object.create(StbComponentModal.prototype);\nModal.prototype.constructor = Modal;\n\n// set component name\nModal.prototype.name = 'mag-component-modal';\n\n\n/**\n * Redefine default component focus to set additional css\n */\nModal.prototype.focus = function () {\n    this.$node.classList.add('active');\n    StbComponentModal.prototype.focus.call(this);\n    if ( this.children[0] && this.children[0] instanceof Component ) {\n        this.children[0].focus();\n    }\n};\n\n\n/**\n * Blur message\n */\nModal.prototype.blur = function () {\n    this.$node.classList.remove('active');\n    StbComponentModal.prototype.blur.call(this);\n};\n\n\n// public\nmodule.exports = Modal;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-scrollbar');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-scrollbar';\n","'use strict';\n\nvar app = require('mag-app');\n\napp.once('load', function () {\n    app.network = core.plugins.network;\n    app.api = core.plugins.audioBackend;\n\n    require('spa-gettext').load({name: core.environment.language}, function ( error ) {\n        if ( error ) {\n            debug.inspect(error);\n        }\n\n        // load pages\n        app.pages = {\n            main: require('./pages/main')\n        };\n\n        // show main page\n        // app.ready();\n        app.route(app.pages.main);\n    });\n});\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app    = require('spa-app/lib/core'),\n    events = require('spa-app/lib/events');\n\n\n// get instance\nwindow.core = window.parent.getCoreInstance(window, app);\n\n// shims\nrequire('stb-shim-classlist');\n\n// apply geometry\nrequire('stb-app/lib/metrics');\n\n// load sdk css\nrequire('stb-app/lib/css')('sdk');\n\n// load theme css\nrequire('./css');\n\n// load app css\nrequire('stb-app/lib/css')('app');\n\n/**\n * Specify platform name\n *\n * @type {string}\n */\napp.platform = 'mag';\n\n/**\n * Show app.\n */\napp.ready = function () {\n    // if ( this.events['show'] ) {\n    //     this.emit('show');\n    // }\n    window.core.call('app:ready');\n};\n\n\n/**\n * Exit from app.\n * Destroy all application instance.\n * If callback function provided, and callback returns boolean 'true', application will stay alive.\n *\n * @fires module:/stb/app#exit\n */\napp.exit = function () {\n    if ( app.events['exit'] ) {\n        app.emit('exit');\n    }\n\n    core.call('exit');\n};\n\n\nevents.load = function ( event ) {\n    //window.core = window.parent.getCoreInstanse(window, app);\n    document.body.setAttribute('platform', app.platform);\n\n    if ( core.ready ) {\n        if ( app.events['load'] ) {\n            // notify listeners\n            app.emit('load', {});\n        }\n    } else {\n        core.once('load', function () {\n            //core.ready = true;\n            if ( app.events[event.type] ) {\n                // notify listeners\n                app.emit(event.type, event);\n            }\n        });\n    }\n};\n\n\n// activate development mechanisms and tools\nif ( DEVELOP ) {\n    //require('stb-develop');\n    require('./develop/main');\n} else {\n    // disable context menu\n    events.contextmenu = function ( event ) {\n        event.preventDefault();\n    };\n}\n\n\n//apply DOM events\nObject.keys(events).forEach(function ( name ) {\n    window.addEventListener(name, events[name]);\n});\n\n\n// new way of string handling\n// all strings are in UTF-16\n// since stbapp 2.18\n// if ( window.gSTB && gSTB.SetNativeStringMode ) {\n//     /* eslint new-cap: 0 */\n//     gSTB.SetNativeStringMode(true);\n// }\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nmodule.exports = {\n    /**\n     * Parse the given location search string into object.\n     *\n     * @param {string} query string to parse\n     *\n     * @return {Object.<string, string>} result data\n     */\n    parse: function ( query ) {\n        var data = {};\n\n        // parse and fill the data\n        query.split('&').forEach(function ( part ) {\n            part = part.split('=');\n            // valid number on params\n            if ( part.length === 2 ) {\n                data[part[0]] = decodeURIComponent(part[1]);\n            }\n        });\n\n        return data;\n    },\n\n\n    /**\n     * Make uri query part in a string form.\n     *\n     * @param {Object} params data to stringify\n     *\n     * @return {string} query string\n     */\n    stringify: function ( params ) {\n        var data = [];\n\n        Object.keys(params).forEach(function ( name ) {\n            data.push(name + '=' + encodeURIComponent(params[name]));\n        });\n\n        return data.join('&');\n    }\n};\n","/**\n * Global application configuration.\n * Can store run-time options, API urls, paths, execution flags and so on.\n * Automatically loaded on application initialization and available as app.config.\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    artists: {\n        search: '',\n        offset: 0,\n        limit: 7\n    },\n    albums: {\n        genreId: '',\n        artistId: '',\n        yearId: '',\n        search: '',\n        sortby: '',\n        offset: 0,\n        limit: 7\n    },\n    tracks: {\n        albumId: '',\n        genreId: '',\n        artistId: '',\n        yearId: '',\n        search: '',\n        sortby: '',\n        offset: 0,\n        limit: 7\n    },\n    playlist: {\n        search: '',\n        offset: 0,\n        limit: 7\n    },\n    playlistTrack: {\n        config: {\n            search: '',\n            offset: 0,\n            limit: 7\n        },\n        list: {}\n    },\n    provider: {\n        size: 7,\n        pages: 2\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('./core');\n\n\n// public\nmodule.exports = {\n    DOMContentLoaded: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // there are some listeners\n        if ( app.events['dom'] ) {\n            // notify listeners\n            app.emit('dom', event);\n            //console.log('DOMContentLoaded');\n        }\n    },\n\n    /**\n     * The load event is fired when a resource and its dependent resources have finished loading.\n     *\n     * Control flow:\n     *   1. Global handler.\n     *   2. Each page handler.\n     *   3. Application DONE event.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/load\n     *\n     * @param {Event} event generated object with event data\n     */\n    load: function ( event ) {\n        //var path;\n\n        //debug.event(event);\n        //console.log(event);\n\n        // time mark\n        //app.data.time.load = event.timeStamp;\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' load', 'green');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n\n        // time mark\n        //app.data.time.done = +new Date();\n\n        // everything is ready\n        // and there are some listeners\n        // if ( app.events['done'] ) {\n        //     // notify listeners\n        //     app.emit('done', event);\n        // }\n    },\n\n    /**\n     * The unload event is fired when the document or a child resource is being unloaded.\n     *\n     * Control flow:\n     *   1. Each page handler.\n     *   2. Global handler.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/unload\n     *\n     * @param {Event} event generated object with event data\n     */\n    unload: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' unload', 'red');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n    },\n\n    /**\n     * The error event is fired when a resource failed to load.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/error\n     *\n     * @param {Event} event generated object with event data\n     */\n    error: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n        //debug.fail('app event: ' + event.message, event, {tags: [event.type, 'event']});\n        console.error('app event: ' + event.message, event);\n    },\n\n    /**\n     * The keydown event is fired when a key is pressed down.\n     * Set event.stop to true in order to prevent bubbling.\n     *\n     * Control flow:\n     *   1. Current active component on the active page.\n     *   2. Current active page itself.\n     *   3. Application.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keydown\n     *\n     * @param {Event} event generated object with event data\n     */\n    keydown: function ( event ) {\n        var page = app.activePage,\n            eventLocal = {\n                code: event.keyCode,\n                stop: false\n            },\n            activeComponent;\n\n        if ( DEVELOP ) {\n            if ( !page ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        // filter phantoms\n        //if ( event.keyCode === 0 ) { return; }\n\n        // combined key code\n        //event.code = event.keyCode;\n\n        // apply key modifiers\n        if ( event.ctrlKey )  { eventLocal.code += 'c'; }\n        if ( event.altKey )   { eventLocal.code += 'a'; }\n        if ( event.shiftKey ) { eventLocal.code += 's'; }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + eventLocal.code, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + eventLocal.code, event);\n\n        // page.activeComponent can be set to null in event handles\n        activeComponent = page.activeComponent;\n\n        // current component handler\n        if ( activeComponent && activeComponent !== page ) {\n            // component is available and not page itself\n            if ( activeComponent.events[event.type] ) {\n                // there are some listeners\n                activeComponent.emit(event.type, eventLocal, event);\n            }\n\n            // todo: bubble event recursively\n            // bubbling\n            if (\n                !eventLocal.stop &&\n                activeComponent.propagate &&\n                activeComponent.parent &&\n                activeComponent.parent.events[event.type]\n            ) {\n                activeComponent.parent.emit(event.type, eventLocal, event);\n            }\n        }\n\n        // page handler\n        if ( !eventLocal.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, eventLocal, event);\n            }\n\n            // global app handler\n            if ( !event.stop ) {\n                // not prevented\n                if ( app.events[event.type] ) {\n                    // there are some listeners\n                    app.emit(event.type, eventLocal, event);\n                }\n            }\n        }\n\n        //// suppress non-printable keys in stb device (not in your browser)\n        //if ( app.data.host && keyCodes[event.code] ) {\n        //    event.preventDefault();\n        //}\n    },\n\n    /**\n     * The keypress event is fired when press a printable character.\n     * Delivers the event only to activeComponent at active page.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keypress\n     *\n     * @param {Event} event generated object with event data\n     * @param {string} event.char entered character\n     */\n    keypress: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + event.key, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + event.key, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n    },\n\n    /**\n     * The click event is fired when a pointing device button (usually a mouse button) is pressed and released on a single element.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/click\n     *\n     * @param {Event} event generated object with event data\n     */\n    /*click: function ( event ) {\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n     },*/\n\n    /**\n     * The contextmenu event is fired when the right button of the mouse is clicked (before the context menu is displayed),\n     * or when the context menu key is pressed (in which case the context menu is displayed at the bottom left of the focused\n     * element, unless the element is a tree, in which case the context menu is displayed at the bottom left of the current row).\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/contextmenu\n     *\n     * @param {Event} event generated object with event data\n     */\n    // contextmenu: function ( event ) {\n    //     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n    //\n    //     if ( !DEVELOP ) {\n    //         // disable right click in release mode\n    //         event.preventDefault();\n    //     }\n    // },\n\n    /*contextmenu: function ( event ) {\n     //var kbEvent = {}; //Object.create(document.createEvent('KeyboardEvent'));\n\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n\n     //kbEvent.type    = 'keydown';\n     //kbEvent.keyCode = 8;\n\n     //debug.log(kbEvent.type);\n\n     //globalEventListenerKeydown(kbEvent);\n     //var event = document.createEvent('KeyboardEvent');\n     //event.initEvent('keydown', true, true);\n\n     //document.dispatchEvent(kbEvent);\n\n     if ( !DEVELOP ) {\n     // disable right click in release mode\n     event.preventDefault();\n     }\n     },*/\n\n    /**\n     * The wheel event is fired when a wheel button of a pointing device (usually a mouse) is rotated.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel\n     *\n     * @param {Event} event generated object with event data\n     */\n    mousewheel: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n\n        // page handler\n        if ( !event.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, event);\n            }\n        }\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint-disable */\n\n'use strict';\n\n\nif ( !document.documentElement.classList ) {\n    var prototype = Array.prototype,\n        indexOf   = prototype.indexOf,\n        slice     = prototype.slice,\n        push      = prototype.push,\n        splice    = prototype.splice,\n        join      = prototype.join;\n\n    window.DOMTokenList = function ( el ) {\n        this._element = el;\n        if (el.className !== this._classCache) {\n            this._classCache = el.className;\n            if (!this._classCache) { return; }\n            var classes = this._classCache.replace(/^\\s+|\\s+$/g,'').split(/\\s+/),\n                i;\n            for (i = 0; i < classes.length; i++) {\n                push.call(this, classes[i]);\n            }\n        }\n    };\n\n    window.DOMTokenList.prototype = {\n        add: function ( token ) {\n            if(this.contains(token)) { return; }\n            push.call(this, token);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        contains: function ( token ) {\n            return indexOf.call(this, token) !== -1;\n        },\n\n        item: function ( index ) {\n            return this[index] || null;\n        },\n\n        remove: function ( token ) {\n            var i = indexOf.call(this, token);\n            if (i === -1) {\n                return;\n            }\n            splice.call(this, i, 1);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        toString: function () {\n            return join.call(this, ' ');\n        },\n\n        toggle: function ( token ) {\n            if (!this.contains(token)) {\n                this.add(token);\n            } else {\n                this.remove(token);\n            }\n            return this.contains(token);\n        }\n    };\n\n    Object.defineProperty(Element.prototype, 'classList', {\n        get: function () {\n            return new window.DOMTokenList(this);\n        }\n    });\n}\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    metrics = require('app:metrics');\n\n\n// global link\napp.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\napp.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\napp.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n\n// public\n//module.exports = app;\n","/**\n * Application geometry options.\n * Automatically loaded on application initialization and available as app.metrics.\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    480: {\n        // screen base dimension\n        height: 480,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  32,\n        availLeft:   48,\n        // project-specific vars\n        // put here ...\n        modalSize: 5\n    },\n\n    576: {\n        // screen base dimension\n        height: 576,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  26,\n        availLeft:   54,\n        // project-specific vars\n        // put here ...\n        modalSize: 5\n    },\n\n    720: {\n        // screen base dimension\n        height: 720,\n        width:  1280,\n        // safe zone margins\n        availTop:    30,\n        availBottom: 30,\n        availRight:  40,\n        availLeft:   40,\n        // project-specific vars\n        // put here ...\n        modalSize: 5\n    },\n\n    1080: {\n        // screen base dimension\n        height: 1080,\n        width:  1920,\n        // safe zone margins\n        availTop:    45,\n        availBottom: 45,\n        availRight:  60,\n        availLeft:   60,\n        // project-specific vars\n        // put here ...\n        modalSize: 5\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core'),\n    //metrics = require('app:metrics'),\n    linkCSS;\n\n\n//window.core = window.parent.getCoreInstance(window, app);\n\n\nlinkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = window.core.theme.path + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);\n\n\n// public\nmodule.exports = linkCSS;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    Gettext = require('cjs-gettext'),\n    loader  = new Emitter();\n\n\n/**\n * Wrap the given data with gettext instance\n * and export methods to the global scope.\n *\n * @param {Object} [data] localization data\n *\n * @return {Gettext} gettext instance\n */\nfunction prepare ( data ) {\n    var gettext = new Gettext(data);\n\n    // make it global\n    window.gettext  = window._ = gettext.gettext;\n    window.pgettext = gettext.pgettext;\n    window.ngettext = gettext.ngettext;\n\n    return gettext;\n}\n\n\n/**\n * Main application language\n */\nloader.defaultLanguage = 'en';\n\n\n/**\n * Simple gettext implementation.\n *\n * @param {Object} config options\n * @param {string} [config.path=lang] relative path to project root\n * @param {string} config.name language name\n * @param {string} [config.ext=json] language file extension\n * @param {function} callback hook on ready\n *\n * @return {boolean} flag is ajax request was made\n */\nloader.load = function ( config, callback ) {\n    var xhr;\n\n    if ( DEVELOP ) {\n        if ( !config.name || typeof config.name !== 'string' ) {\n            throw new Error(__filename + ': config.name must be a nonempty string');\n        }\n        if ( typeof callback !== 'function' ) {\n            throw new Error(__filename + ': wrong callback type');\n        }\n    }\n\n    // defaults\n    config.ext  = config.ext  || 'json';\n    config.path = config.path || 'lang';\n\n    // is it necessary to request a localization file?\n    if ( config.name === loader.defaultLanguage ) {\n        // no\n        prepare();\n        callback(null);\n\n        return false;\n    }\n\n    // yes\n    xhr = new XMLHttpRequest();\n\n    xhr.onload = function () {\n        var json;\n\n        try {\n            json = JSON.parse(xhr.responseText);\n\n            prepare(json);\n            callback(null);\n\n            // there are some listeners\n            if ( loader.events['load'] ) {\n                // notify listeners\n                loader.emit('load');\n            }\n        } catch ( error ) {\n            xhr.onerror(error);\n        }\n    };\n\n    xhr.ontimeout = xhr.onerror = function ( error ) {\n        prepare();\n        callback(error);\n\n        // there are some listeners\n        if ( loader.events['error'] ) {\n            // notify listeners\n            loader.emit('error', error);\n        }\n    };\n\n    xhr.open('GET', config.path + '/' + config.name + '.' + config.ext, true);\n    xhr.send(null);\n\n    return true;\n};\n\n\n// public\nmodule.exports = loader;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Translations handler.\n *\n * @constructor\n *\n * @param {Object} config init parameters\n */\nfunction Gettext ( config ) {\n    var data, meta;\n\n    // sanitize\n    config   = config || {};\n    data     = config.data || {};\n    data[''] = data[''] || {};\n\n    // shortcut\n    meta = config.meta;\n\n    /**\n     * Display the native language translation of a textual message.\n     *\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.gettext = function ( msgId ) {\n        return data[''][msgId] || msgId;\n    };\n\n\n    /**\n     * The \"p\" in \"pgettext\" stands for \"particular\": fetches a particular translation of the textual message.\n     *\n     * @param {string} context message context\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.pgettext = function ( context, msgId ) {\n        return data[context] && data[context][msgId] || msgId;\n    };\n\n\n    /**\n     * Display the native language translation of a textual message whose grammatical form depends on a number.\n     *\n     * @param {string} msgId textual message in a singular form\n     * @param {string} plural textual message in a plural form\n     * @param {number} value message number\n     *\n     * @return {string} translated text\n     */\n    this.ngettext = function ( msgId, plural, value ) {\n        /* eslint no-unused-vars: 0 */\n        /* eslint no-eval: 0 */\n        /* eslint id-length: 0 */\n        var n, evalResult;\n\n        if ( DEVELOP ) {\n            if ( Number(value) !== value ) {\n                throw new Error(__filename + ': value must be a number');\n            }\n        }\n\n        if ( data && meta && data[''][msgId] ) {\n            evalResult = eval('n = ' + value + '; ' + meta.plural);\n\n            if ( typeof evalResult === 'boolean' ) {\n                evalResult = +evalResult;\n            }\n\n            // translation\n            return data[''][msgId][evalResult];\n        }\n\n        // english\n        return value === 1 ? msgId : plural;\n    };\n}\n\n\n// correct constructor name\nGettext.prototype.constructor = Gettext;\n\n\n// public\nmodule.exports = Gettext;\n","'use strict';\n\n/* eslint max-lines: 0 */\n/* eslint max-lines-per-function: 0 */\n/* eslint max-statements: 0 */\n\nvar Page        = require('stb-component-page'),\n    page        = new Page({$node: document.getElementById('pageMain')}),\n\n    dom         = require('spa-dom'),\n    keys        = require('stb-keys'),\n\n    Footer       = require('mag-component-footer'),\n    PanelSet     = require('mag-component-panel-set'),\n    Panel        = require('mag-component-panel'),\n    LayoutList   = require('mag-component-layout-list'),\n\n    Provider     = require('mag-data-cacher'),\n    app          = require('mag-app'),\n    ModalMessage = require('mag-component-modal'),\n    RadioList    = require('mag-component-radio-list'),\n    Scrollbar    = require('stb-component-scrollbar'),\n    // ScrollArea   = require('mag-component-scroll-area'),\n    TabItem      = require('spa-component-tab'),\n\n    exit          = require('../components/exit'),\n    infoPanel     = require('../components/info.panel'),\n    prepareMain   = require('../utils/prepare.main'),\n    prepareModal  = require('../utils/prepare.modal'),\n    prepareTracks = require('../utils/prepare.tracks'),\n\n    scrollbarList = new Scrollbar(),\n    appConfig = app.config,\n\n    checkTime = 24 * 60 * 60,\n    types = {\n        albums: 1,\n        artists: 2,\n        tracks: 3,\n        playlists: 4\n    },\n    typeActive = types.albums,\n    timers = {},\n    localHistory = [],\n    requestConfig = {},\n    loaded = false,\n\n    getAllLists, changeFavorite,\n\n    panelSet, centralPanel,\n    listActionTrack,\n    modalActions, modalActionTrack,\n    modalActionAlbum, modalActionReset,\n    leftPanel, rightPanel,\n    audioList, audioPlayList, sortList,\n    selectGenre, selectYear,\n\n    leftInput, $playListInput,\n\n    selectType, createListMessage,\n    createList,\n    selectList, listPlaylist,\n\n    clickFunction, fillInfo,\n    getter, noData,\n    $headerTitle, $headerAmount,\n    defaultTab, playlistTab, footer,\n    footerButtons = {\n        f1Reset: {\n            code: keys.f1,\n            title: gettext('Reset filters'),\n            action: null\n        },\n        f1Delete: {\n            code: keys.f1,\n            title: gettext('Delete'),\n            action: function () {\n                if ( audioList.$focusItem.data.value && typeActive === types.playlists ) {\n                    modalActions.hide();\n                    core.notify({\n                        title: gettext('Delete playlist'),\n                        icon: 'alert',\n                        buttons: [\n                            {\n                                value: gettext('Cancel')\n                            },\n                            {\n                                value: gettext('Confirm'),\n                                click: function () {\n                                    audioList.$focusItem.value.remove(function () {\n                                        getAllLists(true);\n                                    });\n                                }\n                            }\n                        ]\n                    });\n                }\n            }\n        },\n        f2: {\n            code: keys.f2,\n            title: gettext('Edit'),\n            action: function () {\n                if ( audioList.$focusItem.data.value ) {\n                    footer.hide();\n                    if ( typeActive === types.playlists ) {\n                        panelSet.blur();\n                        createListMessage.show(audioList.$focusItem.value);\n                        createListMessage.focus();\n                        modalActions.hide();\n                    }\n                }\n            }\n        },\n        f3: {\n            code: keys.f3,\n            title: gettext('Add to playlist'),\n            action: function () {\n                if ( audioList.$focusItem.data.value ) {\n                    footer.hide();\n\n                    switch ( typeActive ) {\n                        case types.albums:\n                        case types.tracks:\n                            changeFavorite();\n                            break;\n                    }\n                }\n            }\n        },\n        menu: {\n            code: keys.menu,\n            action: function () {\n                if ( panelSet.focusIndex === 1 && audioList.$focusItem.data.value ) {\n                    footer.hide();\n\n                    switch ( typeActive ) {\n                        case types.playlists:\n                            panelSet.blur();\n                            modalActions.show();\n                            modalActions.focus();\n                            break;\n\n                        case types.tracks:\n                            panelSet.blur();\n                            modalActionTrack.show();\n                            modalActionTrack.focus();\n                            break;\n\n                        case types.albums:\n                            panelSet.blur();\n                            modalActionAlbum.show();\n                            modalActionAlbum.focus();\n                            break;\n                    }\n                }\n            }\n        },\n        menuReset: {\n            code: keys.menu,\n            action: function () {\n                if ( panelSet.panels[panelSet.focusIndex] === leftPanel ) {\n                    panelSet.blur();\n                    footer.hide();\n                    modalActionReset.show();\n                    modalActionReset.focus();\n                }\n            }\n        },\n        lastConfig: []\n    };\n\n\n/**\n * Fill search input.\n */\nfunction fillSearch () {\n    leftInput.$body.parentElement.data.value.query = requestConfig.search;\n    $playListInput.$body.parentElement.data.value.query = requestConfig.search;\n\n    if ( requestConfig.search ) {\n        leftInput.links.$text.innerText = requestConfig.search;\n        $playListInput.links.$text.innerText = requestConfig.search;\n        leftInput.links.$icon.classList.add('active');\n        $playListInput.links.$icon.classList.add('active');\n    } else {\n        leftInput.links.$text.innerText = leftInput.$body.parentElement.data.value.placeholder;\n        $playListInput.links.$text.innerText = leftInput.$body.parentElement.data.value.placeholder;\n        leftInput.links.$icon.classList.remove('active');\n        $playListInput.links.$icon.classList.remove('active');\n    }\n}\n\n\n/**\n * Getter for album list.\n *\n * @param {Function} callback - result handler\n * @param {Object} config - request config\n */\nfunction getterAlbums ( callback, config ) {\n    infoPanel.clear();\n    app.api.getAlbums(config, function ( error, data, total ) {\n        $headerAmount.innerHTML = error ? 0 : total;\n        callback(error, prepareMain(data || []), total || 0);\n    });\n}\n\n\n/**\n * Getter for artist list.\n *\n * @param {Function} callback - result handler\n * @param {Object} config - request config\n */\nfunction getterArtists ( callback, config ) {\n    infoPanel.hideBackInformation();\n    app.api.getArtists(config, function ( error, data, total ) {\n        $headerAmount.innerHTML = error ? 0 : total;\n        callback(error, prepareMain(data || []), total || 0);\n    });\n}\n\n\n/**\n * Getter for track list.\n *\n * @param {Function} callback - result handler\n * @param {Object} config - request config\n */\nfunction getterTracks ( callback, config ) {\n    infoPanel.clear();\n    app.api.getTracks(config, function ( error, data, total ) {\n        $headerAmount.innerHTML = error ? 0 : total;\n        callback(error, prepareTracks(data || []), total || 0);\n    });\n}\n\n\n/**\n * Getter for playlist list.\n *\n * @param {Function} callback - result handler\n * @param {Object} config - request config\n */\nfunction getterList ( callback, config ) {\n    infoPanel.clear();\n    app.api.getPlaylists(config, function ( error, data, total ) {\n        $headerAmount.innerHTML = error ? 0 : total;\n        callback(error, prepareMain(data || []), total || 0);\n    });\n}\n\n\n/**\n * Getter for track in playlist list.\n *\n * @param {Function} callback - result handler\n * @param {Object} config - request config\n */\nfunction getterTrackList ( callback, config ) {\n    infoPanel.clear();\n    appConfig.playlistTrack.list.getTracks(config, function ( error, data, total ) {\n        $headerAmount.innerHTML = error ? 0 : total;\n        callback(error, prepareTracks(data || []), total || 0);\n    });\n}\n\n\n/**\n * Prepare list to play.\n *\n * @param {LayoutList} list - list to play\n */\nfunction prepareToPlay ( list ) {\n    var activeItem = list.$focusItem,\n        name = activeItem.data.items[0].value,\n        id = activeItem.value.id;\n\n    /**\n     * Play item.\n     *\n     * @param {boolean} error - error data\n     * @param {string} url - uri to play\n     */\n    function play ( error, url ) {\n        var next = null,\n            prev = null;\n\n        if ( error ) {\n            return;\n        }\n\n        if ( list.data.length > 1 ) {\n            //name += ' ' + activeItem.textContent;\n            if ( list.provider.head + list.provider.pos + list.$focusItem.index + 1 <= list.provider.maxCount ) {\n                next = function () {\n                    list.move(keys.down);\n                    if ( id === list.$focusItem.value.id ) {\n                        app.api.playerContext = null;\n                        app.api.intent.close();\n                    } else {\n                        prepareToPlay(list);\n                    }\n                };\n            }\n\n            if (\n                list.provider.head > 0 ||\n                list.provider.pos > ( list.provider.headItem ? 1 : 0 ) ||\n                list.$focusItem.index > ( list.provider.headItem ? 1 : 0 )\n            ) {\n                prev = function () {\n                    list.move(keys.up);\n                    if ( id === list.$focusItem.value.id ) {\n                        app.api.playerContext = null;\n                        app.api.intent.close();\n                    } else {\n                        prepareToPlay(list);\n                    }\n                };\n            }\n\n        }\n        //play intent\n        app.api.intent = core.intent({\n            action: 'play',\n            mime: 'content/audio',\n            data: {\n                title: name,\n                uri: url,\n                mediaId: id\n            },\n            events: {\n                end: function () {\n                    if ( next ) {\n                        next();\n                    } else {\n                        app.api.playerContext = null;\n                        app.api.intent.close();\n                    }\n                },\n                stop: function () {\n                    app.api.playerContext = null;\n                    app.api.intent.close();\n                },\n                error: function () {\n                    if ( next ) {\n                        next();\n                    } else {\n                        app.api.playerContext = null;\n                        app.api.intent.close();\n                    }\n                },\n                next: next,\n                prev: prev\n            },\n            context: app.api.playerContext\n        }, function ( error, context ) {\n            if ( error ) {\n                debug.fail('Play error', error);\n            }\n            app.api.playerContext = context;\n        });\n    }\n\n    if ( !activeItem.value ) {\n        return;\n    }\n\n    if ( activeItem.value.url ) {\n        play(false, activeItem.value.url);\n    } else {\n        app.api.link(play, {id: activeItem.value.id});\n    }\n}\n\n\n/**\n * Create list to play from focus item data.\n */\nfunction createListToPlay () {\n    var activeItem = audioList.$focusItem;\n\n    if ( !activeItem.value ) {\n        return;\n    }\n\n    switch ( typeActive ) {\n        case types.albums:\n            appConfig.tracks.albumId = activeItem.value.id;\n            appConfig.tracks.offset = 0;\n            audioPlayList = new LayoutList({\n                provider: new Provider({\n                    pageSize: appConfig.provider.size,\n                    cacheSize: appConfig.provider.pages,\n                    request: appConfig.tracks,\n                    getter: function ( callback, config ) {\n                        app.api.getTracks(config, function ( error, data, total ) {\n                            callback(error, prepareTracks(data), total);\n                        });\n                    },\n                    cycle: false\n                }),\n                scroll: null,\n                events: {},\n                size: appConfig.provider.size,\n                fixedData: true,\n                className: 'padded audioList',\n                focusIndex: 0\n            });\n            if ( DEVELOP ) {\n                window.audioPlayList = audioPlayList;\n            }\n            // audioPlayList.once('data:error', function () {\n            //     console.log('data:error');\n            // });\n            audioPlayList.once('data:get', function () {\n                prepareToPlay(audioPlayList);\n            });\n            break;\n\n        case types.playlists:\n            appConfig.playlistTrack.list = activeItem.value;\n            appConfig.playlistTrack.config.offset = 0;\n            audioPlayList = new LayoutList({\n                provider: new Provider({\n                    pageSize: appConfig.provider.size,\n                    cacheSize: appConfig.provider.pages,\n                    request: appConfig.playlistTrack.config,\n                    getter: function ( callback, config ) {\n                        appConfig.playlistTrack.list.getTracks(config, callback);\n                    },\n                    cycle: false\n                }),\n                scroll: null,\n                events: {},\n                size: appConfig.provider.size,\n                fixedData: true,\n                className: 'padded audioList',\n                focusIndex: 0\n            });\n\n            if ( DEVELOP ) {\n                window.audioPlayList = audioPlayList;\n            }\n            audioPlayList.once('data:get', function () {\n                prepareToPlay(audioPlayList);\n            });\n            break;\n\n        case types.tracks:\n            audioPlayList = audioList;\n            prepareToPlay(audioPlayList);\n\n            if ( DEVELOP ) {\n                window.audioPlayList = audioPlayList;\n            }\n            break;\n    }\n}\n\n\n/**\n * Click in track list. Start play.\n */\nfunction clickTracks () {\n    createListToPlay();\n}\n\n\n/**\n * Click in album list. Enter to album folder.\n *\n * @param {Object} data - item data\n */\nfunction clickAlbums ( data ) {\n    localHistory.push({\n        provider: audioList.provider,\n        focus: audioList.$focusItem.index,\n        title: $headerTitle.innerText,\n        type: types.albums\n    });\n    $headerTitle.innerText = data.name;\n    typeActive = types.tracks;\n    appConfig.tracks.artistId = '';\n    appConfig.tracks.albumId = data.id;\n    fillInfo = infoPanel.fillTracks;\n    getter = getterTracks;\n    clickFunction = clickTracks;\n    requestConfig = appConfig.tracks;\n    requestConfig.offset = 0;\n    noData = gettext('No tracks');\n\n    leftInput.$body.parentElement.data.value.query = requestConfig.search;\n    $playListInput.$body.parentElement.data.value.query = requestConfig.search;\n\n    fillSearch();\n\n    footer.hide();\n    footer.init(footerButtons.lastConfig = {\n        left: footerButtons.menu,\n        middle: [footerButtons.f3]\n    });\n\n    audioList.init({\n        provider: new Provider({\n            pageSize: appConfig.provider.size,\n            cacheSize: appConfig.provider.pages,\n            request: requestConfig,\n            getter: getter,\n            checkTime: requestConfig.search ? 0 : checkTime,\n            cycle: true,\n            headItem: {\n                items: [\n                    {\n                        className: 'theme-icon theme-icon-back'\n                    },\n                    {\n                        className: 'title',\n                        value: '. .'\n                    }\n                ],\n                value: null\n            }\n        }),\n        focusIndex: 0,\n        noData: noData\n    });\n}\n\n\n/**\n * Click in artist list. Enter to artist folder.\n *\n * @param {Object} data - item data\n */\nfunction clickArtists ( data ) {\n    localHistory.push({\n        provider: audioList.provider,\n        focus: audioList.$focusItem.index,\n        title: $headerTitle.innerText,\n        type: types.artists\n    });\n\n    $headerTitle.innerText = data.name;\n    typeActive = types.albums;\n    appConfig.albums.artistId = data.id;\n    requestConfig = appConfig.albums;\n    requestConfig.offset = 0;\n    getter = getterAlbums;\n    noData = gettext('No albums');\n    clickFunction = clickAlbums;\n    fillInfo = infoPanel.fillAlbums;\n    fillSearch();\n\n    audioList.init({\n        provider: new Provider({\n            pageSize: appConfig.provider.size,\n            cacheSize: appConfig.provider.pages,\n            request: requestConfig,\n            getter: getter,\n            checkTime: requestConfig.search ? 0 : checkTime,\n            cycle: true,\n            headItem: {\n                items: [\n                    {\n                        className: 'theme-icon theme-icon-back'\n                    },\n                    {\n                        className: 'title',\n                        value: '. .'\n                    }\n                ],\n                value: null\n            }\n        }),\n        focusIndex: 0,\n        noData: noData\n    });\n}\n\n\n/**\n * Click in playlist list. Enter to playlist.\n *\n *\n * @param {Object} data - item data\n */\nfunction clickList ( data ) {\n    // var data = e.$item.data.value;\n\n    localHistory.push({\n        provider: audioList.provider,\n        focus: audioList.$focusItem.index,\n        title: $headerTitle.innerText,\n        type: types.playlists\n    });\n\n    fillSearch();\n\n    $headerTitle.innerText = data.name;\n    typeActive = types.tracks;\n    appConfig.playlistTrack.list = data;\n    fillInfo = infoPanel.fillTracks;\n    getter = getterTrackList;\n    clickFunction = clickTracks;\n    requestConfig = appConfig.playlistTrack.config;\n    requestConfig.offset = 0;\n    noData = gettext('No tracks');\n\n    listActionTrack.links.addToList.links.$title.innerText = gettext('Remove from playlist');\n    footerButtons.f3.title = gettext('Remove from playlist');\n    footer.hide();\n    footer.init(footerButtons.lastConfig = {\n        left: footerButtons.menu,\n        middle: [footerButtons.f3]\n    });\n\n    audioList.init({\n        provider: new Provider({\n            pageSize: appConfig.provider.size,\n            cacheSize: appConfig.provider.pages,\n            request: requestConfig,\n            getter: getter,\n            checkTime: requestConfig.search ? 0 : checkTime,\n            cycle: true,\n            headItem: {\n                items: [\n                    {\n                        className: 'theme-icon theme-icon-back'\n                    },\n                    {\n                        className: 'title',\n                        value: '. .'\n                    }\n                ],\n                value: null\n            }\n        }),\n        focusIndex: 0,\n        noData: noData\n    });\n}\n\n\n/**\n * Back function.\n */\nfunction back () {\n    var data = localHistory.pop();\n\n    $headerTitle.innerHTML = data.title;\n    typeActive = data.type;\n    requestConfig.search = '';\n\n    switch ( data.type ) {\n        case types.albums:\n            requestConfig = appConfig.albums;\n            getter = getterAlbums;\n            appConfig.albums.artistId = '';\n            fillInfo = infoPanel.fillAlbums;\n            clickFunction = clickAlbums;\n            footerButtons.lastConfig = {\n                left: footerButtons.menu,\n                middle: [footerButtons.f3]\n            };\n            noData = gettext('No albums');\n            break;\n\n        case types.artists:\n            getter = getterArtists;\n            fillInfo = infoPanel.fillArtist;\n            requestConfig = appConfig.artists;\n            clickFunction = clickArtists;\n            footerButtons.lastConfig = [];\n            noData = gettext('No artists');\n            break;\n\n        case types.tracks:\n            appConfig.tracks.artistId = '';\n            appConfig.tracks.albumId = '';\n            fillInfo = infoPanel.fillTracks;\n            clickFunction = clickTracks;\n            getter = getterTracks;\n            requestConfig = appConfig.tracks;\n            footerButtons.lastConfig = {\n                left: footerButtons.menu,\n                middle: [footerButtons.f3]\n            };\n            noData = gettext('No tracks');\n            break;\n\n        case types.playlists:\n            fillInfo = infoPanel.fillList;\n            clickFunction = clickList;\n            getter = getterList;\n            noData = gettext('No playlists');\n            requestConfig = appConfig.playlist;\n            listActionTrack.links.addToList.links.$title.innerText = gettext('Add to playlist');\n            footerButtons.f3.title = gettext('Add to playlist');\n            footerButtons.lastConfig = {\n                left: footerButtons.menu,\n                middle: [footerButtons.f1Delete, footerButtons.f2]\n            };\n            break;\n    }\n\n    footer.hide();\n    footer.init(footerButtons.lastConfig);\n    requestConfig.offset = 0;\n    fillSearch();\n\n    audioList.init({\n        provider: new Provider({\n            pageSize: appConfig.provider.size,\n            cacheSize: appConfig.provider.pages,\n            request: requestConfig,\n            checkTime: requestConfig.search ? 0 : checkTime,\n            cycle: true,\n            getter: getter\n        }),\n        focusIndex: data.focus,\n        noData: noData\n    });\n}\n\n\n/**\n * Refresh audioList data.\n *\n * @param {boolean} remove - has removed item\n */\nfunction refreshAudioList ( remove ) {\n    var index = audioList.$focusItem ? audioList.$focusItem.index : 0;\n\n    if ( remove && audioList.provider.botEmptyLine && audioList.$focusItem.index === audioList.data.length - 1 ) {\n        index = audioList.$focusItem.index - 1;\n        if ( audioList.provider.pos > 0 ) {\n            audioList.provider.pos--;\n        }\n    }\n\n    requestConfig.offset = audioList.provider.head;\n    audioList.setData({data: []});\n    audioList.init({\n        provider: new Provider({\n            pageSize: appConfig.provider.size,\n            cacheSize: appConfig.provider.pages,\n            pos: audioList.provider.pos,\n            request: requestConfig,\n            getter: getter,\n            checkTime: requestConfig.search ? 0 : checkTime,\n            cycle: true,\n            headItem: audioList.provider.headItem\n        }),\n        focusIndex: index,\n        noData: noData\n    });\n}\n\n\n/**\n * Add/remove to/from  playlist.\n */\nchangeFavorite = function () {\n    var data = audioList.$focusItem.value;\n\n    if ( data ) {\n        if ( requestConfig === appConfig.playlistTrack.config ) {\n            appConfig.playlistTrack.list.removeTrack(data.id, function () {\n                refreshAudioList(true);\n            });\n        } else {\n            panelSet.blur();\n            selectList.show();\n            selectList.focus();\n        }\n    }\n};\n\n\n/**\n * Get playlist.\n *\n * @param {boolean} remove - has removed item\n */\ngetAllLists = function ( remove ) {\n    app.api.getAllPlaylists(function ( error, data ) {\n        var result = prepareModal(data) || [];\n\n        if ( error ) {\n            debug.fail('Get all playlists error', error);\n        }\n        result.push({\n            items: [\n                {\n                    className: 'theme-icon theme-icon-plus'\n                },\n                {\n                    className: 'title',\n                    value: gettext('Create playlist')\n                }\n            ],\n            value: null\n        });\n\n        listPlaylist.init({\n            data: result,\n            focusIndex: 0,\n            size: result.length < app.metrics.modalSize ? result.length : app.metrics.modalSize\n        });\n        if ( requestConfig === appConfig.playlist ) {\n            refreshAudioList(remove);\n        }\n    });\n};\n\n\ncore.addListener('show', function () {\n    app.api.playerContext = null;\n});\n\n\n/**\n * Init page.\n */\npage.once('show', function () {\n    var modalScroll = new Scrollbar(),\n        editMode = false,\n        genreList, yearList, inputListName,\n        addValue, defaultTabList, playlistTabList;\n\n    /**\n     * Finish step of load data. Load filters variation.\n     */\n    function loadDone () {\n        audioList.removeListener('data:error', loadDone);\n        audioList.removeListener('data:get', loadDone);\n\n        audioList.focus();\n\n        /**\n         * Load genre and init genre modal.\n         *\n         * @param {boolean} error flag\n         * @param {Object} data request\n         */\n        app.api.getGenres(function ( error, data ) {\n            var result = [],\n                index;\n\n            if ( error ) {\n                debug.fail('Get genre error', error);\n            }\n            data = data.data || [];\n            result.push({\n                state: true,\n                title: gettext('All genres'),\n                value: ''\n            });\n\n            for ( index = 0; index < data.length; index++ ) {\n                result.push({\n                    state: false,\n                    title: data[index].name,\n                    value: data[index].id\n                });\n            }\n            modalScroll = new Scrollbar();\n            selectGenre = new ModalMessage({\n                visible: false,\n                title: gettext('Genres'),\n                events: {\n                    show: function () {\n                        this.children[0].focus();\n                    }\n                },\n                children: [\n                    genreList = new RadioList({\n                        focusIndex: 0,\n                        size: result.length < app.metrics.modalSize ? result.length : app.metrics.modalSize,\n                        data: result,\n                        cycle: true,\n                        scroll: modalScroll,\n                        events: {\n                            'click:item': function () {\n                                selectGenre.hide();\n                                panelSet.focus();\n                            },\n                            select: function ( event ) {\n                                defaultTabList.$focusItem.layout.links.$text.innerText = event.$curr.data.title;\n                                if ( event.$curr.data.value ) {\n                                    defaultTabList.$focusItem.layout.links.$icon.classList.add('active');\n                                } else {\n                                    defaultTabList.$focusItem.layout.links.$icon.classList.remove('active');\n                                }\n                                appConfig.albums.genreId = event.$curr.data.value;\n                                appConfig.tracks.genreId = event.$curr.data.value;\n                                appConfig.artists.genreId = event.$curr.data.value;\n                                requestConfig.offset = 0;\n                                audioList.init({\n                                    provider: new Provider({\n                                        pageSize: appConfig.provider.size,\n                                        cacheSize: appConfig.provider.pages,\n                                        request: requestConfig,\n                                        getter: getter,\n                                        checkTime: requestConfig.search ? 0 : checkTime,\n                                        cycle: true,\n                                        headItem: audioList.provider.headItem\n                                    }),\n                                    focusIndex: 0,\n                                    noData: noData\n                                });\n                            },\n                            keydown: function ( event ) {\n                                RadioList.prototype.defaultEvents.keydown.call(this, event);\n                                switch ( event.code ) {\n                                    case keys.back:\n                                        selectGenre.hide();\n                                        panelSet.focus();\n                                        event.stop = true;\n                                        break;\n                                }\n                            }\n                        }\n                    }),\n                    modalScroll\n                ]\n            });\n            page.add(selectGenre);\n\n            /**\n             * Load years and init years modal.\n             *\n             * @param {boolean} error flag\n             * @param {Object} years request\n             */\n            app.api.getYears(function ( error, years ) {\n                result = [];\n\n                if ( error ) {\n                    debug.fail('Get years error', error);\n                }\n                years = years.data || [];\n                result.push({\n                    state: true,\n                    title: gettext('All years'),\n                    value: ''\n                });\n\n                for ( index = 0; index < years.length; index++ ) {\n                    result.push({\n                        state: false,\n                        title: years[index].name,\n                        value: years[index].id\n                    });\n                }\n                modalScroll = new Scrollbar();\n                selectYear = new ModalMessage({\n                    visible: false,\n                    title: gettext('Years'),\n                    events: {\n                        show: function () {\n                            this.children[0].focus();\n                        }\n                    },\n                    children: [\n                        yearList = new RadioList({\n                            focusIndex: 0,\n                            size: result.length < app.metrics.modalSize ? result.length : app.metrics.modalSize,\n                            cycle: true,\n                            scroll: modalScroll,\n                            data: result,\n                            events: {\n                                'click:item': function () {\n                                    selectYear.hide();\n                                    panelSet.focus();\n                                },\n                                select: function ( event ) {\n                                    defaultTabList.$focusItem.layout.links.$text.innerText = event.$curr.data.title;\n                                    if ( event.$curr.data.value ) {\n                                        defaultTabList.$focusItem.layout.links.$icon.classList.add('active');\n                                    } else {\n                                        defaultTabList.$focusItem.layout.links.$icon.classList.remove('active');\n                                    }\n                                    appConfig.albums.yearId = event.$curr.data.value;\n                                    appConfig.tracks.yearId = event.$curr.data.value;\n                                    appConfig.artists.yearId = event.$curr.data.value;\n                                    requestConfig.offset = 0;\n                                    audioList.init({\n                                        provider: new Provider({\n                                            pageSize: appConfig.provider.size,\n                                            cacheSize: appConfig.provider.pages,\n                                            request: requestConfig,\n                                            getter: getter,\n                                            checkTime: requestConfig.search ? 0 : checkTime,\n                                            cycle: true,\n                                            headItem: audioList.provider.headItem\n                                        }),\n                                        focusIndex: 0,\n                                        noData: noData\n                                    });\n                                },\n                                keydown: function ( event ) {\n                                    RadioList.prototype.defaultEvents.keydown.call(this, event);\n                                    switch ( event.code ) {\n                                        case keys.back:\n                                            selectYear.hide();\n                                            panelSet.focus();\n                                            event.stop = true;\n                                            break;\n                                    }\n                                }\n                            }\n                        }),\n                        modalScroll\n                    ]\n                });\n                page.add(selectYear);\n                getAllLists();\n            });\n        });\n\n        app.ready();\n    }\n\n    /**\n     * Search function. Init keyboard and set result.\n     */\n    function clickSearch () {\n        core.intent({\n            action: 'keyboard',\n            data: {\n                value: leftInput.$body.parentElement.data.value.query,\n                title: gettext('AUDIO SEARCH')\n            },\n            events: {\n                done: function ( data ) {\n                    if ( requestConfig.search !== data.value ) {\n                        requestConfig.search = data.value;\n                        fillSearch();\n                        audioList.init({\n                            provider: new Provider({\n                                pageSize: appConfig.provider.size,\n                                cacheSize: appConfig.provider.pages,\n                                request: requestConfig,\n                                getter: getter,\n                                checkTime: requestConfig.search ? 0 : checkTime,\n                                cycle: true,\n                                headItem: audioList.provider.headItem\n                            }),\n                            focusIndex: 0,\n                            noData: noData\n                        });\n                    }\n\n                }\n            }\n        }, function ( error ) {\n            debug.fail('Keyboard return', error);\n        });\n    }\n\n    footer = new Footer({visible: false, parent: page});\n    footerButtons.lastConfig = {\n        left: footerButtons.menu,\n        middle: [footerButtons.f3]\n    };\n    footer.init([]);\n\n    //init left default list\n    defaultTab = new TabItem({\n        propagate: true,\n        focusable: true,\n        children: [\n            defaultTabList = new LayoutList({\n                focusIndex: 0,\n                size: 6,\n                cycle: true,\n                data: [\n                    {\n                        name: 'search',\n                        items: [\n                            {\n                                name: '$icon',\n                                className: 'theme-icon theme-icon-search'\n                            },\n                            {\n                                name: '$text',\n                                value: gettext('Search'),\n                                className: 'inputSearchField'\n                            }\n                        ],\n                        value: {\n                            placeholder: gettext('Search'),\n                            query: ''\n                        },\n                        click: clickSearch\n                    },\n                    {\n                        name: 'category',\n                        items: [\n                            {\n                                name: '$icon',\n                                className: 'theme-icon theme-icon-categories'\n                            },\n                            {\n                                name: '$text',\n                                value: gettext('Albums'),\n                                className: 'theme-item-more'\n                            }\n                        ],\n                        click: function () {\n                            panelSet.blur();\n                            selectType.show();\n                            selectType.focus();\n                        }\n                    },\n                    {\n                        name: 'genre',\n                        items: [\n                            {\n                                name: '$icon',\n                                className: 'theme-icon theme-icon-genres'\n                            },\n                            {\n                                name: '$text',\n                                value: gettext('All genres'),\n                                className: 'theme-item-more'\n                            }\n                        ],\n                        click: function () {\n                            panelSet.blur();\n                            selectGenre.show();\n                            selectGenre.focus();\n                        }\n                    },\n                    {\n                        name: 'year',\n                        items: [\n                            {\n                                name: '$icon',\n                                className: 'theme-icon theme-icon-filter'\n                            },\n                            {\n                                name: '$text',\n                                value: gettext('All years'),\n                                className: 'theme-item-more'\n                            }\n                        ],\n                        click: function () {\n                            panelSet.blur();\n                            selectYear.show();\n                            selectYear.focus();\n                        }\n                    },\n                    {\n                        name: 'sort',\n                        items: [\n                            {\n                                name: '$icon',\n                                className: 'theme-icon theme-icon-sort-az'\n                            },\n                            {\n                                name: '$text',\n                                value: gettext('By date'),\n                                className: 'theme-item-more'\n                            }\n                        ],\n                        click: function () {\n                            panelSet.blur();\n                            sortList.show();\n                            sortList.focus();\n                        }\n                    },\n                    {\n                        items: [\n                            {\n                                className: 'theme-icon theme-icon-exit'\n                            },\n                            {\n                                value: gettext('Exit')\n                            }\n                        ],\n                        click: function () {\n                            exit.goExit();\n                        }\n                    }\n                ],\n                events: {\n                    keydown: function ( event ) {\n                        LayoutList.prototype.defaultEvents.keydown.call(this, event);\n                        switch ( event.code ) {\n                            case keys.right:\n                                leftPanel.emit('keydown', event);\n                                event.stop = true;\n                                break;\n                        }\n                    },\n                    blur: function () {\n                        LayoutList.prototype.blur.call(this);\n                        footer.hide();\n                    },\n                    focus: function () {\n                        footer.init({\n                            left: footerButtons.menuReset,\n                            middle: [footerButtons.f1Reset]\n                        });\n                        footer.show();\n                    }\n                }\n            })\n        ],\n        events: {\n            focus: function () {\n                defaultTabList.focus();\n            }\n        }\n    });\n    leftInput = defaultTabList.links.search;\n\n    //init left list for playlist type\n    playlistTab = new TabItem({\n        propagate: true,\n        focusable: true,\n        children: [\n            playlistTabList = new LayoutList({\n                propagate: true,\n                focusIndex: 1,\n                cycle: true,\n                size: 4,\n                data: [\n                    {\n                        name: 'search',\n                        items: [\n                            {\n                                name: '$icon',\n                                className: 'theme-icon theme-icon-search'\n                            },\n                            {\n                                name: '$text',\n                                value: gettext('Search'),\n                                className: 'inputSearchField'\n                            }\n                        ],\n                        value: {\n                            placeholder: gettext('Search'),\n                            query: ''\n                        },\n                        click: clickSearch\n                    },\n                    {\n                        items: [\n                            {\n                                className: 'theme-icon theme-icon-categories'\n                            },\n                            {\n                                value: gettext('Playlists'),\n                                className: 'theme-item-more'\n                            }\n                        ],\n                        click: function () {\n                            panelSet.blur();\n                            selectType.show();\n                            selectType.focus();\n                        }\n                    },\n                    {\n                        items: [\n                            {\n                                className: 'theme-icon theme-icon-plus'\n                            },\n                            {\n                                value: gettext('Create playlist')\n                            }\n                        ],\n                        click: function () {\n                            panelSet.blur();\n                            createListMessage.show();\n                            createListMessage.focus();\n                        }\n                    },\n                    {\n                        items: [\n                            {\n                                className: 'theme-icon theme-icon-exit'\n                            },\n                            {\n                                value: gettext('Exit')\n                            }\n                        ],\n                        click: function () {\n                            exit.goExit();\n                        }\n                    }\n                ],\n                events: {\n                    keydown: function ( event ) {\n                        LayoutList.prototype.defaultEvents.keydown.call(this, event);\n                        switch ( event.code ) {\n                            case keys.right:\n                                leftPanel.emit('keydown', event);\n                                event.stop = true;\n                                break;\n                        }\n                    },\n                    blur: function () {\n                        LayoutList.prototype.blur.call(this);\n                        footer.hide();\n                    },\n                    focus: function () {\n                        footer.init({\n                            left: footerButtons.menuReset,\n                            middle: [footerButtons.f1Reset, footerButtons.f2]\n                        });\n                        footer.show();\n                    }\n                }\n            })\n        ],\n        events: {\n            focus: function () {\n                playlistTab.children[0].focus();\n            }\n        }\n    });\n    $playListInput = playlistTabList.links.search;\n\n    leftPanel = new Panel({\n        title: [\n            {\n                value: gettext('Menu'),\n                className: 'name'\n            }\n        ],\n        children: [defaultTab, playlistTab],\n        events: {\n            focus: function () {\n                if ( this.currentTab ) {\n                    this.currentTab.focus();\n                } else {\n                    Panel.prototype.defaultEvents.focus.call(this);\n                }\n            }\n        }\n    });\n    defaultTab.show();\n\n    centralPanel = new Panel({\n        title: [\n            {\n                value: gettext('Albums'),\n                className: 'name'\n            },\n            dom.tag(\n                'div',\n                {className: 'amountContainer'},\n                $headerAmount = dom.tag('div', {className: 'amount'}, '0')\n            )\n        ],\n        main: true\n    });\n    $headerTitle = centralPanel.$title.$node.children[0];\n\n    infoPanel.init();\n\n    rightPanel = new Panel({\n        title: [\n            {\n                value: gettext('Info'),\n                className: 'name'\n            }\n        ],\n        children: [infoPanel.textArea, infoPanel.textArea.scroll],\n        events: {\n            focus: function () {\n                Panel.prototype.defaultEvents.focus.call(this);\n                footer.hide();\n            }\n        }\n    });\n    infoPanel.textArea.init();\n\n    clickFunction = clickAlbums;\n    fillInfo = infoPanel.fillAlbums;\n    requestConfig = appConfig.albums;\n    getter = getterAlbums;\n    noData = gettext('No albums');\n\n    audioList = new LayoutList({\n        provider: new Provider({\n            pageSize: appConfig.provider.size,\n            cacheSize: appConfig.provider.pages,\n            request: {},\n            checkTime: requestConfig.search ? 0 : checkTime,\n            getter: getter = getterAlbums,\n            cycle: true\n        }),\n        scroll: scrollbarList,\n        events: {\n            focus: function () {\n                footer.init(footerButtons.lastConfig);\n                if ( audioList.$focusItem && audioList.$focusItem.data.value ) {\n                    footer.show();\n                } else {\n                    footer.hide();\n                }\n            },\n\n            'focus:item': function ( event ) {\n                if ( event.$curr.data.value ) {\n                    footer.show();\n                } else {\n                    footer.hide();\n                }\n                clearTimeout(timers.info);\n                timers.info = setTimeout(function () {\n                    fillInfo(event.$curr.data.value);\n                }, core.environment.onFocusDebounceTimeout);\n\n            },\n\n            'move:view': function () {\n                if ( audioList && audioList.$focusItem ) {\n                    if ( audioList.$focusItem.data.value ) {\n                        footer.show();\n                    } else {\n                        footer.hide();\n                    }\n                    fillInfo(audioList.$focusItem.data.value);\n                }\n            },\n\n            'click:item': function ( event ) {\n                if ( !event.$item.data.value && localHistory.length ) {\n                    back();\n\n                    return;\n                }\n                clickFunction(event.$item.data.value);\n            },\n\n            keydown: function ( event ) {\n                LayoutList.prototype.defaultEvents.keydown.call(this, event);\n                switch ( event.code ) {\n                    case keys.playPause:\n                        if ( audioList.$focusItem.data.value && typeActive !== types.artists ) {\n                            createListToPlay();\n                        }\n                        break;\n                }\n            }\n        },\n        size: appConfig.provider.size,\n        className: 'padded audioList',\n        noData: noData,\n        focusIndex: 0\n    });\n\n    audioList.once('data:error', loadDone);\n    audioList.once('data:get', loadDone);\n\n    audioPlayList = null;\n\n    panelSet = new PanelSet({\n        visible: false,\n        panels: [leftPanel, centralPanel, rightPanel]\n    });\n\n    page.add(panelSet);\n\n    centralPanel.add(audioList);\n    centralPanel.add(scrollbarList);\n    centralPanel.focus();\n\n    //init types select\n    selectType = new ModalMessage({\n        visible: false,\n        title: gettext('Categories'),\n        events: {\n            show: function () {\n                this.children[0].focus();\n            }\n        },\n        children: [\n            new RadioList({\n                focusIndex: 0,\n                size: 4,\n                cycle: true,\n                data: [\n                    {\n                        state: true,\n                        title: gettext('Albums'),\n                        value: types.albums\n                    },\n                    {\n                        state: false,\n                        title: gettext('Singers'),\n                        value: types.artists\n                    },\n                    {\n                        state: false,\n                        title: gettext('Tracks'),\n                        value: types.tracks\n                    },\n                    {\n                        state: false,\n                        title: gettext('Playlists'),\n                        value: types.playlists\n                    }\n                ],\n                events: {\n                    'click:item': function () {\n                        selectType.hide();\n                        panelSet.focus();\n                    },\n                    select: function ( data ) {\n                        $headerTitle.innerHTML = data.$curr.data.title;\n                        localHistory = [];\n                        requestConfig.search = '';\n\n                        switch ( data.$curr.data.value ) {\n                            case types.albums:\n                                // if ( typeActive === types.playlists ) {\n                                defaultTab.show();\n                                defaultTab.focus();\n                                // }\n                                footerButtons.lastConfig = {\n                                    left: footerButtons.menu,\n                                    middle: [footerButtons.f3]\n                                };\n                                defaultTabList.$focusItem.layout.links.$text.innerText = data.$curr.data.title;\n                                requestConfig = appConfig.albums;\n                                getter = getterAlbums;\n                                appConfig.albums.artistId = '';\n                                fillInfo = infoPanel.fillAlbums;\n                                clickFunction = clickAlbums;\n                                noData = gettext('No albums');\n                                infoPanel.hideHolder();\n                                break;\n\n                            case types.artists:\n                                // if ( typeActive === types.playlists ) {\n                                defaultTab.show();\n                                defaultTab.focus();\n                                // }\n                                footerButtons.lastConfig = [];\n                                defaultTabList.$focusItem.layout.links.$text.innerText = data.$curr.data.title;\n                                getter = getterArtists;\n                                // infoPanel.showContainer();\n                                requestConfig = appConfig.artists;\n                                fillInfo = infoPanel.fillArtist;\n                                clickFunction = clickArtists;\n                                noData = gettext('No artists');\n                                infoPanel.showHolder();\n                                break;\n\n                            case types.tracks:\n                                // if ( typeActive === types.playlists ) {\n                                defaultTab.show();\n                                defaultTab.focus();\n                                // }\n                                footerButtons.f3.title = gettext('Add to playlist');\n                                footerButtons.lastConfig = {\n                                    left: footerButtons.menu,\n                                    middle: [footerButtons.f3]\n                                };\n                                defaultTabList.$focusItem.layout.links.$text.innerText = data.$curr.data.title;\n                                appConfig.tracks.artistId = '';\n                                appConfig.tracks.albumId = '';\n                                fillInfo = infoPanel.fillTracks;\n                                clickFunction = clickTracks;\n                                getter = getterTracks;\n                                requestConfig = appConfig.tracks;\n                                noData = gettext('No tracks');\n                                infoPanel.hideHolder();\n                                break;\n\n                            case types.playlists:\n                                fillInfo = infoPanel.fillList;\n                                clickFunction = clickList;\n                                getter = getterList;\n                                noData = gettext('No playlists');\n                                footerButtons.lastConfig = {\n                                    left: footerButtons.menu,\n                                    middle: [footerButtons.f1Delete, footerButtons.f2]\n                                };\n                                requestConfig = appConfig.playlist;\n                                playlistTab.show();\n                                playlistTab.focus();\n                                infoPanel.showHolder();\n                                break;\n                        }\n\n                        typeActive = data.$curr.data.value;\n                        requestConfig.offset = 0;\n                        fillSearch();\n\n                        audioList.init({\n                            provider: new Provider({\n                                pageSize: appConfig.provider.size,\n                                cacheSize: appConfig.provider.pages,\n                                request: requestConfig,\n                                checkTime: requestConfig.search ? 0 : checkTime,\n                                cycle: true,\n                                getter: getter\n                            }),\n                            focusIndex: 0,\n                            noData: noData\n                        });\n                    },\n                    keydown: function ( event ) {\n                        RadioList.prototype.defaultEvents.keydown.call(this, event);\n                        switch ( event.code ) {\n                            case keys.back:\n                                selectType.hide();\n                                panelSet.focus();\n                                event.stop = true;\n                                break;\n                        }\n                    }\n                }\n            })\n        ]\n    });\n    page.add(selectType);\n\n    //init playlist select\n    modalScroll = new Scrollbar();\n    selectList = new ModalMessage({\n        visible: false,\n        title: gettext('Playlists'),\n        events: {\n            show: function () {\n                footer.hide();\n                this.children[0].focus();\n            }\n        },\n        children: [\n            listPlaylist = new LayoutList({\n                focusIndex: 0,\n                size: app.metrics.modalSize,\n                cycle: true,\n                scroll: modalScroll,\n                events: {\n                    'click:item': function ( data ) {\n                        data = data.$item.data.value;\n                        selectList.hide();\n\n                        if ( data ) {\n                            switch ( typeActive ) {\n                                case types.tracks:\n                                    data.addTrack(audioList.$focusItem.value.id);\n                                    break;\n\n                                case types.albums:\n                                    data.addAlbum(audioList.$focusItem.value.id);\n                                    break;\n                            }\n                            panelSet.focus();\n                        } else {\n                            addValue = true;\n                            createListMessage.show();\n                            createListMessage.focus();\n                        }\n                    },\n                    keydown: function ( event ) {\n                        RadioList.prototype.defaultEvents.keydown.call(this, event);\n                        switch ( event.code ) {\n                            case keys.back:\n                                selectList.hide();\n                                panelSet.focus();\n                                event.stop = true;\n                                break;\n                        }\n                    }\n                }\n            }),\n            modalScroll\n        ]\n    });\n    page.add(selectList);\n\n    //init sort list\n    modalScroll = new Scrollbar();\n    sortList = new ModalMessage({\n        visible: false,\n        title: gettext('Sort'),\n        events: {\n            show: function () {\n                this.children[0].focus();\n            }\n        },\n        children: [\n            new RadioList({\n                focusIndex: 0,\n                size: 2,\n                cycle: true,\n                data: [\n                    {\n                        state: true,\n                        title: gettext('By date'),\n                        value: 'added'\n                    },\n                    {\n                        state: false,\n                        title: gettext('By name'),\n                        value: 'name'\n                    }\n                ],\n                events: {\n                    'click:item': function () {\n                        sortList.hide();\n                        panelSet.focus();\n                    },\n                    select: function ( data ) {\n                        defaultTabList.$focusItem.layout.links.$text.innerText = data.$curr.data.title;\n                        appConfig.albums.sortby = data.$curr.data.value;\n                        appConfig.tracks.sortby = data.$curr.data.value;\n                        audioList.init({\n                            provider: new Provider({\n                                pageSize: appConfig.provider.size,\n                                cacheSize: appConfig.provider.pages,\n                                request: requestConfig,\n                                getter: getter,\n                                checkTime: requestConfig.search ? 0 : checkTime,\n                                cycle: true,\n                                headItem: audioList.provider.headItem\n                            }),\n                            focusIndex: 0,\n                            noData: noData\n                        });\n                    },\n                    keydown: function ( event ) {\n                        RadioList.prototype.defaultEvents.keydown.call(this, event);\n                        switch ( event.code ) {\n                            case keys.back:\n                                sortList.hide();\n                                panelSet.focus();\n                                event.stop = true;\n                                break;\n                        }\n                    }\n                }\n            })\n        ]\n    });\n    page.add(sortList);\n\n    //init create playlist\n    createListMessage = new ModalMessage({\n        title: gettext('create playlist'),\n        events: {\n            show: function ( data ) {\n                // createList.setData({focusIndex: 0});\n                createList.focusIndex(0);\n                footer.hide();\n                if ( data ) {\n                    editMode = data;\n                    inputListName.$parentItem.data.value.name = data.name;\n                    inputListName.links.$text.innerText = data.name;\n                    this.$text.innerText = gettext('edit playlist');\n                    createList.links.button.links.$text.innerText = gettext('Edit');\n                    createList.links.button.data[0].value = gettext('Edit');\n                } else {\n                    editMode = false;\n                    inputListName.$parentItem.data.value.name = '';\n                    inputListName.links.$text.innerText = inputListName.$parentItem.data.value.placeholder;\n                    this.$text.innerText = gettext('create playlist');\n                    createList.links.button.links.$text.innerText = gettext('Create');\n                    createList.links.button.data[0].value = gettext('Create');\n                }\n                createList.$focusItem.data.click();\n            }\n        },\n        children: [\n            createList = new LayoutList({\n                className: 'padded',\n                size: 2,\n                cycle: true,\n                data: [\n                    {\n                        name: 'name',\n                        items: [\n                            {\n                                name: '$text',\n                                value: gettext('name'),\n                                className: 'title center'\n                            }\n                        ],\n                        value: {\n                            placeholder: gettext('name'),\n                            name: ''\n                        },\n                        click: function () {\n                            core.intent({\n                                action: 'keyboard',\n                                data: {\n                                    value: inputListName.$parentItem.data.value.name,\n                                    title: editMode ? gettext('edit playlist') : gettext('create playlist'),\n                                    placeholder: inputListName.$parentItem.data.value.placeholder\n                                },\n                                events: {\n                                    done: function ( event ) {\n                                        createList.focusIndex(1);\n                                        inputListName.$parentItem.data.value.name = event.value;\n                                        if ( event.value ) {\n                                            inputListName.links.$text.innerText = event.value;\n                                        } else {\n                                            inputListName.links.$text.innerText = inputListName.$parentItem.data.value.placeholder;\n                                        }\n                                    }\n                                }\n                            }, function ( error ) {\n                                debug.fail('Keyboard return', error);\n                            });\n                        }\n                    },\n                    {\n                        name: 'button',\n                        items: [\n                            {\n                                name: '$text',\n                                value: editMode ? gettext('Edit') : gettext('Create'),\n                                className: 'title center'\n                            }\n                        ],\n                        click: function () {\n                            createListMessage.hide();\n                            panelSet.focus();\n                            if ( editMode === false ) {\n                                app.api.createPlaylist({\n                                    name: inputListName.$parentItem.data.value.name\n                                }, function ( error, data ) {\n                                    if ( error ) {\n                                        return;\n                                    }\n\n                                    if ( addValue ) {\n                                        addValue = false;\n                                        switch ( typeActive ) {\n                                            case types.tracks:\n                                                data.addTrack(audioList.$focusItem.value.id);\n                                                break;\n\n                                            case types.albums:\n                                                data.addAlbum(audioList.$focusItem.value.id);\n                                                break;\n                                        }\n                                    }\n\n                                    getAllLists();\n                                });\n                            } else {\n                                editMode.edit(inputListName.$parentItem.data.value.name, getAllLists);\n                            }\n                        }\n                    }\n                ],\n                events: {\n                    keydown: function ( event ) {\n                        LayoutList.prototype.defaultEvents.keydown.call(this, event);\n                        switch ( event.code ) {\n                            case keys.back:\n                                createListMessage.hide();\n                                panelSet.focus();\n                                event.stop = true;\n                                break;\n                        }\n                    }\n                }\n            })\n        ]\n    });\n    inputListName = createList.links.name;\n    page.add(createListMessage);\n\n    /**\n     * Reset filters to default values.\n     */\n    footerButtons.f1Reset.action = function () {\n        var links = defaultTabList.links;\n\n        if ( genreList.$checkedData ) {\n            genreList.$checkedData.state = false;\n            genreList.data[0].state = true;\n        }\n        genreList.setData({data: genreList.data, focusIndex: 0});\n        if ( yearList.$checkedData ) {\n            yearList.$checkedData.state = false;\n            yearList.data[0].state = true;\n        }\n        yearList.setData({data: yearList.data, focusIndex: 0});\n\n        appConfig.artists.search = '';\n        appConfig.artists.genreId = '';\n        appConfig.artists.yearId = '';\n\n        appConfig.albums.genreId = '';\n        appConfig.albums.yearId = '';\n        appConfig.albums.search = '';\n\n        appConfig.tracks.genreId = '';\n        appConfig.tracks.yearId = '';\n        appConfig.tracks.search = '';\n\n        appConfig.playlist.search = '';\n\n        appConfig.playlistTrack.config.search = '';\n\n        fillSearch();\n\n        links.genre.links.$text.innerText = gettext('All genres');\n        links.year.links.$text.innerText = gettext('All years');\n        links.search.links.$icon.classList.remove('active');\n        links.genre.links.$icon.classList.remove('active');\n        links.year.links.$icon.classList.remove('active');\n        requestConfig.offset = 0;\n        requestConfig.limit = 0;\n        audioList.init({\n            provider: new Provider({\n                pageSize: appConfig.provider.size,\n                cacheSize: appConfig.provider.pages,\n                request: requestConfig,\n                checkTime: requestConfig.search ? 0 : checkTime,\n                cycle: true,\n                getter: getter,\n                headItem: audioList.provider.headItem\n            }),\n            focusIndex: 0,\n            noData: noData\n        });\n    };\n\n    //playlist type action modal\n    page.add(\n        modalActions = new ModalMessage({\n            title: gettext('Actions'),\n            events: {\n                hide: function () {\n                    panelSet.focus();\n                }\n            },\n            children: [\n                new LayoutList({\n                    size: 2,\n                    focusIndex: 0,\n                    cycle: true,\n                    data: [\n                        {\n                            items: [\n                                {\n                                    className: 'theme-icon theme-icon-rc-f1'\n                                },\n                                {\n                                    value: gettext('Delete')\n                                }\n                            ],\n                            click: function () {\n                                modalActions.hide();\n                                footerButtons.f1Delete.action();\n                            }\n                        },\n                        {\n                            items: [\n                                {\n                                    className: 'theme-icon theme-icon-rc-f2'\n                                },\n                                {\n                                    value: gettext('Edit')\n                                }\n                            ],\n                            click: function () {\n                                modalActions.hide();\n                                panelSet.blur();\n                                createListMessage.show(audioList.$focusItem.value);\n                                createListMessage.focus();\n                            }\n                        }\n                    ],\n                    events: {\n                        keydown: function ( event ) {\n                            LayoutList.prototype.defaultEvents.keydown.call(this, event);\n                            switch ( event.code ) {\n                                case keys.menu:\n                                case keys.back:\n                                    modalActions.hide();\n                                    event.stop = true;\n                                    break;\n                            }\n                        }\n                    }\n                })\n            ]\n        })\n    );\n\n    //reset action modal\n    page.add(\n        modalActionReset = new ModalMessage({\n            title: gettext('Actions'),\n            events: {\n                hide: function () {\n                    panelSet.focus();\n                }\n            },\n            children: [\n                new LayoutList({\n                    size: 1,\n                    focusIndex: 0,\n                    cycle: true,\n                    data: [\n                        {\n                            items: [\n                                {\n                                    className: 'theme-icon theme-icon-rc-f1'\n                                },\n                                {\n                                    value: gettext('Reset filters')\n                                }\n                            ],\n                            click: function () {\n                                modalActionReset.hide();\n                                footerButtons.f1Reset.action();\n                            }\n                        }\n                    ],\n                    events: {\n                        keydown: function ( event ) {\n                            LayoutList.prototype.defaultEvents.keydown.call(this, event);\n                            switch ( event.code ) {\n                                case keys.menu:\n                                case keys.back:\n                                    modalActionReset.hide();\n                                    event.stop = true;\n                                    break;\n                            }\n                        }\n                    }\n                })\n            ]\n        })\n    );\n\n    //track type action modal\n    page.add(\n        modalActionTrack = new ModalMessage({\n            title: gettext('Actions'),\n            events: {\n                show: function () {\n                    //this.children[0].focus();\n                    clearTimeout(timers.footer);\n                    footer.hide();\n                },\n                hide: function () {\n                    panelSet.focus();\n                }\n            },\n            children: [\n                listActionTrack = new LayoutList({\n                    size: 2,\n                    focusIndex: 0,\n                    cycle: true,\n                    data: [\n                        {\n                            name: 'play',\n                            items: [\n                                {\n                                    name: '$icon',\n                                    className: 'theme-icon theme-icon-rc-play-pause'\n                                },\n                                {\n                                    name: '$title',\n                                    className: 'title',\n                                    value: gettext('Play')\n                                }\n                            ],\n                            click: function () {\n                                modalActionTrack.hide();\n                                createListToPlay();\n                            }\n                        },\n                        {\n                            name: 'addToList',\n                            items: [\n                                {\n                                    name: '$icon',\n                                    className: 'theme-icon theme-icon-rc-f3'\n                                },\n                                {\n                                    name: '$title',\n                                    className: 'title',\n                                    value: gettext('Add to playlist')\n                                }\n                            ],\n                            click: function () {\n                                modalActionTrack.hide();\n                                changeFavorite();\n                            }\n                        }\n                    ],\n                    events: {\n                        keydown: function ( event ) {\n                            LayoutList.prototype.defaultEvents.keydown.call(this, event);\n                            switch ( event.code ) {\n                                case keys.menu:\n                                case keys.back:\n                                    modalActionTrack.hide();\n                                    event.stop = true;\n                                    break;\n                            }\n                        }\n                    }\n                })\n            ]\n        })\n    );\n\n    //album type action modal\n    page.add(\n        modalActionAlbum = new ModalMessage({\n            title: gettext('Actions'),\n            events: {\n                show: function () {\n                    //this.children[0].focus();\n                    clearTimeout(timers.footer);\n                    footer.hide();\n                },\n                hide: function () {\n                    panelSet.focus();\n                }\n            },\n            children: [\n                new LayoutList({\n                    size: 2,\n                    focusIndex: 0,\n                    cycle: true,\n                    data: [\n                        {\n                            items: [\n                                {\n                                    className: 'theme-icon theme-icon-rc-play-pause'\n                                },\n                                {\n                                    className: 'title',\n                                    value: gettext('Play')\n                                }\n                            ],\n                            click: function () {\n                                modalActionAlbum.hide();\n                                createListToPlay();\n                            }\n                        },\n                        {\n                            items: [\n                                {\n                                    className: 'theme-icon theme-icon-rc-f3'\n                                },\n                                {\n                                    className: 'title',\n                                    value: gettext('Add to playlist')\n                                }\n                            ],\n                            click: function () {\n                                modalActionAlbum.hide();\n                                changeFavorite();\n                            }\n                        }\n                    ],\n                    events: {\n                        keydown: function ( event ) {\n                            LayoutList.prototype.defaultEvents.keydown.call(this, event);\n                            switch ( event.code ) {\n                                case keys.menu:\n                                case keys.back:\n                                    modalActionAlbum.hide();\n                                    event.stop = true;\n                                    break;\n                            }\n                        }\n                    }\n                })\n            ]\n        })\n    );\n\n    if ( DEVELOP ) {\n        window.leftInput = leftInput;\n        window.defaultTabList = defaultTabList;\n        window.inputListName = inputListName;\n        window.createListMessage = createListMessage;\n        window.createList = createList;\n        window.audioList = audioList;\n        window.listActionTrack = listActionTrack;\n        window.modalActionTrack = modalActionTrack;\n        window.modalActionAlbum = modalActionAlbum;\n    }\n});\n\n\npage.addListeners({\n    show: function () {\n        panelSet.show();\n        panelSet.focus();\n        audioPlayList = null;\n    },\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.back:\n                //case keys.exit:\n                if ( localHistory.length ) {\n                    back();\n                    event.stop = true;\n                    break;\n                }\n                exit.goBack();\n                break;\n        }\n    }\n});\n\n\ncore.addListeners({\n    show: function () {\n        if ( loaded ) {\n            audioPlayList = null;\n\n            if ( requestConfig.search ) {\n                return;\n            }\n\n            refreshAudioList();\n            loaded = true;\n        }\n\n    },\n    intent: function ( intent, callback ) {\n        if ( intent.action === 'audioClub' ) {\n            switch ( intent.mime ) {\n                case 'info':\n                    if ( intent.data ) {\n                        clickAlbums(intent.data);\n                        callback(false);\n                    } else {\n                        callback(true);\n                    }\n                    break;\n\n                default:\n                    callback(false);\n            }\n        }\n    }\n});\n\n\nmodule.exports = page;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-page');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-page';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base page implementation.\n *\n * A full-screen top-level layer that can operate as an independent separate entity.\n * It is added to the document body on creation if not already linked.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n *\n * @example\n * var Page = require('stb/ui/page'),\n *     page = new Page({\n *         $node: document.getElementById(id)\n *     });\n *\n * page.addListener('show', function show () {\n *     // page is visible now\n * });\n */\nfunction Page ( config ) {\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    /**\n     * Page visibility/active state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.active = false;\n\n    /**\n     * Link to the currently active component with focus.\n     *\n     * @readonly\n     * @type {Component}\n     */\n    this.activeComponent = null;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'page ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // state flag\n    this.active = this.$node.classList.contains('active');\n\n    // correct DOM parent/child connection if necessary\n    if ( this.$node.parentNode === null ) {\n        document.body.appendChild(this.$node);\n    }\n\n    // always itself\n    this.page = this;\n}\n\n\n// inheritance\nPage.prototype = Object.create(Component.prototype);\nPage.prototype.constructor = Page;\n\n// set component name\nPage.prototype.name = 'spa-component-page';\n\n\n// public\nmodule.exports = Page;\n","/**\n * @license The MIT License (MIT)\n * @copyright Dmitry Fedotov <bas.jsdev@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys'),\n    classes   = {};\n\n\n// initialize classes\nclasses[keys.f1] = 'theme-icon-rc-f1';\nclasses[keys.f2] = 'theme-icon-rc-f2';\nclasses[keys.f3] = 'theme-icon-rc-f3';\nclasses[keys.f4] = 'theme-icon-rc-f4';\nclasses[keys.menu] = 'theme-icon-rc-menu';\nclasses[keys.ok] = 'theme-icon-rc-ok';\nclasses[keys.info] = 'theme-icon-rc-info';\nclasses[keys.playPause] = 'theme-icon-rc-play-pause';\nclasses[keys.back] = 'theme-icon-rc-back';\nclasses[keys.exit] = 'theme-icon-rc-home';\nclasses[keys.keyboard] = 'theme-icon-rc-vk';\nclasses[keys.refresh] = 'theme-icon-rc-refresh';\nclasses[keys.frame] = 'theme-icon-rc-aspect';\n\n/**\n * Footer.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}  config={} init parameters\n * @param {Object}  config.parent parent page\n * @param {boolean} [config.visible] visibility flag\n * @param {Object}  [config.data] footer buttons config\n * @param {Object}  [config.data.left] left button config\n * @param {Object}  [config.data.middle] middle buttons config\n * @param {Object}  [config.data.right] right button config\n * @param {number}  [config.data.middle.code] button key code\n * @param {Object}  [config.data.middle.title] button title\n * @param {Object}  [config.data.middle.action] button press (click) action\n *\n * @example\n * page.footer = new Footer({\n *     parent: page,\n *     data: {\n *         left: {\n *             code: keys.menu, action: function () {}\n *         },\n *         middle: [\n *             {code: 55, action: function () {}},\n *             {code: keys.f1, title: 'stop', action: function () {}},\n *             {code: 9000, className: 'customIcon', title: 'start', action: function () {}},\n *             {code: keys.f4, title: 'end', action: function () {}}\n *         ],\n *         right: {\n *             code: 65, action: function () {}\n *         }\n *     }\n * });\n */\n\n/* eslint max-statements: 0 */\nfunction Footer ( config ) {\n    var currentTab = 0,\n        self = this;\n\n    // sanitize\n    config = config || {};\n    // can't accept focus\n    config.focusable = false;\n    // hide by default\n    config.visible = config.visible || false;\n    // create centered div\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    this.tabs = [\n        {codes: {}},\n        {codes: {}},\n        {codes: {}},\n        {codes: {}}\n    ];\n\n    this.tab = 0;\n\n    this.$table = this.$node.appendChild(document.createElement('table'));\n\n    this.$table.insertRow();\n    this.$table.rows[0].insertCell(-1);\n    this.$left = this.$table.rows[0].cells[0].appendChild(document.createElement('div'));\n    this.$left.className = 'theme-icon';\n\n    this.$table.rows[0].insertCell(-1);\n    this.$table.rows[0].cells[1].className = 'central';\n\n\n    this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.className = 'wrapper hidden';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n\n    ++currentTab;\n    this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.className = 'wrapper hidden';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n\n    ++currentTab;\n    this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.className = 'wrapper hidden';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n\n    ++currentTab;\n    this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.className = 'wrapper hidden';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n\n    this.$table.rows[0].insertCell(-1);\n    this.$right = this.$table.rows[0].cells[2].appendChild(document.createElement('div'));\n    this.$right.className = 'theme-icon';\n\n    this.init(config.data);\n\n    this.parent.addListener('keydown', function ( event ) {\n        var currTab = self.tabs[self.tab];\n\n        if ( self.visible ) {\n            if ( currTab.codes[event.code] && typeof currTab.codes[event.code].action === 'function' ) {\n                currTab.codes[event.code].action();\n            }\n        }\n    });\n}\n\n\n// inheritance\nFooter.prototype = Object.create(Component.prototype);\nFooter.prototype.constructor = Footer;\n\n// set component name\nFooter.prototype.name = 'mag-component-footer';\n\n\n/**\n * Redefine buttons\n *\n * @param {Object} [config] footer buttons config\n * @param {Object} [config.left] left button config\n * @param {number} [config.left.code] left button key code\n * @param {boolean} [config.left.disabled] left button is disabled\n * @param {Object} [config.left.action] left button press (click) action\n * @param {Object} [config.middle] middle buttons config\n * @param {Object} [config.right] right button config\n * @param {number} [config.right.code] right button key code\n * @param {boolean} [config.right.disabled] right button is disabled\n * @param {Object} [config.right.action] right button press (click) action\n * @param {number} [config.middle.code] button key code\n * @param {Object} [config.middle.title] button title\n * @param {boolean} [config.middle.disabled] button is disabled\n * @param {Object} [config.middle.action] button press (click) action\n *\n * page.Footer.init({\n *     left: {\n *         code: keys.menu, action: function () {}\n *     },\n *     middle: [\n *         {code: 55, action: function () {}},\n *         {code: keys.f1, title: 'stop', action: function () {}},\n *         {code: 9000, className: 'customIcon', title: 'start', action: function () {}},\n *         {code: keys.f4, title: 'end', disabled: true}\n *     ],\n *     right: {\n *         code: 65, action: function () {}\n *     }\n * });\n *\n */\nFooter.prototype.init = function ( config ) {\n    var index, $tab, $tabChildren;\n\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( config.middle && config.middle.length > 4 ) {\n            throw new Error(__filename + ': only 4 buttons allowed in footer');\n        }\n        if ( config.middle && Array.isArray(config.middle) ) {\n            for ( index = 0; index < config.middle.length; index++ ) {\n                if ( typeof config.middle[index].action !== 'function' && !config.middle[index].disabled ) {\n                    throw new Error(__filename + ': action must be a function');\n                }\n                ++index;\n            }\n        }\n        if ( config.left && typeof config.left.action !== 'function' && !config.left.disabled ) {\n            throw new Error(__filename + ': action must be a function');\n        }\n        if ( config.right && typeof config.right.action !== 'function' && !config.right.disabled ) {\n            throw new Error(__filename + ': action must be a function');\n        }\n    }\n\n    // hide old tab\n    this.tabs[this.tab].$body.classList.add('hidden');\n    this.tab = config.middle && config.middle.length ? config.middle.length - 1 : 0;\n    // current tab shortcut\n    $tab = this.tabs[this.tab];\n    // reset all actions\n    $tab.codes = {};\n\n    // left button\n    if ( config.left ) {\n        this.$left.className = config.left.className || ('theme-icon ' + (classes[config.left.code] || 'theme-icon-warning'));\n        if ( config.left.disabled ) {\n            this.$left.classList.add('disabled');\n        } else {\n            $tab.codes[config.left.code] = {action: config.left.action};\n            this.$left.style.visibility = 'inherit';\n            this.$left.onclick = function () {\n                if ( typeof config.left.action === 'function' ) {\n                    config.left.action();\n                }\n            };\n        }\n    } else if ( this.$left.style.visibility !== 'hidden' ) {\n        this.$left.style.visibility = 'hidden';\n    }\n\n    // right button\n    if ( config.right ) {\n        this.$right.className = config.right.className || ('theme-icon ' + (classes[config.right.code] || 'theme-icon-warning'));\n        if ( config.right.disabled ) {\n            this.$right.classList.add('disabled');\n        } else {\n            $tab.codes[config.right.code] = {action: config.right.action};\n            this.$right.style.visibility = 'inherit';\n            this.$right.onclick = function () {\n                if ( typeof config.right.action === 'function' ) {\n                    config.right.action();\n                }\n            };\n        }\n    } else if ( this.$right.style.visibility !== 'hidden' ) {\n        this.$right.style.visibility = 'hidden';\n    }\n\n    function addClick ( ind ) {\n        return function () {\n            if ( typeof config.middle[ind].action === 'function' ) {\n                config.middle[ind].action();\n            }\n        };\n    }\n\n    // middle buttons\n    if ( config.middle && config.middle.length ) {\n        for ( index = 0; index < config.middle.length; index++ ) {\n            $tab.codes[config.middle[index].code] = {action: config.middle[index].action};\n            if ( config.middle[index].disabled ) {\n                $tab.$body.children[index].classList.add('disabled');\n            } else {\n                $tab.$body.children[index].classList.remove('disabled');\n                $tab.$body.children[index].onclick = addClick(index);\n            }\n            // shortcut\n            $tabChildren = $tab.$body.children[index].children;\n            $tabChildren[0].className = 'iconImg ' +\n                (config.middle[index].className || ('theme-icon ' + (classes[config.middle[index].code] || 'theme-icon-warning')));\n\n            $tabChildren[1].innerText = config.middle[index].title || '';\n        }\n        $tab.$body.classList.remove('hidden');\n    }\n};\n\n\n// public\nmodule.exports = Footer;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n/**\n * Magsdk panel set implementation\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {Array} [config.panels] array of panels to use\n * @param {Array} [config.focusIndex=0] focus panel index\n * @constructor\n * @extends Component\n */\nfunction PanelSet ( config ) {\n    var self = this,\n        index;\n\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.panels && !Array.isArray(config.panels) || !config.panels.length ) {\n            throw new Error(__filename + ': wrong config.panels type');\n        }\n    }\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'panelSet ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    this.panels = config.panels;\n\n    /**\n     * Index of current active panel\n     *\n     * @type {number}\n     */\n    this.focusIndex = 0;\n\n    // set special panels classes\n    if ( config.panels && !config.panels[0].main ) {\n        config.panels[0].$node.classList.add('left');\n        // small resolution special class\n        config.panels[0].$node.classList.add('expand');\n    }\n\n    if (  config.panels && config.panels[1] && config.panels[1].main ) {\n        // small resolution special class\n        config.panels[1].$node.classList.add('position-right');\n    }\n\n    if ( config.panels && config.panels[2] && config.panels[1].main ) {\n        config.panels[2].$node.classList.add('right');\n    }\n\n    // add panels\n    if ( config.panels ) {\n        this.add.apply(this, config.panels);\n    }\n\n    // panel keydown handler to set focus panel\n    function keydownHandler ( event ) {\n        switch ( event.code ) {\n            case keys.left:\n                if ( self.focusIndex > 0 ) {\n                    self.panels[self.focusIndex - 1].focus();\n                }\n                break;\n            case keys.right:\n                if ( self.focusIndex < self.panels.length - 1 ) {\n                    self.panels[self.focusIndex + 1].focus();\n                }\n                break;\n        }\n    }\n\n    // add special listener\n    for ( index = 0; index < this.panels.length; index++ ) {\n        this.panels[index].addListeners({\n            keydown: keydownHandler\n        });\n        // set panels indexes\n        this.panels[index].index = index;\n    }\n\n    /*if ( config.focusIndex && config.focusIndex < this.panels.length ) {\n     this.panels[config.focusIndex].focus();\n     } else {\n     if ( config.panels.length > 1 ) {\n     this.panels[1].focus();\n     } else {\n     this.panels[0].focus();\n     }\n     }*/\n}\n\nPanelSet.prototype = Object.create(Component.prototype);\nPanelSet.prototype.constructor = PanelSet;\n\n// set component name\nPanelSet.prototype.name = 'mag-component-panel-set';\n\n\n/**\n *\n */\nPanelSet.prototype.focus = function () {\n    Component.prototype.focus.call(this);\n    this.panels[this.focusIndex].focus();\n};\n\n/**\n *\n */\nPanelSet.prototype.blur = function () {\n    this.panels[this.focusIndex].blur();\n};\n\nmodule.exports = PanelSet;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    Layout = require('mag-component-layout');\n\n/**\n * Extended panel implementation\n\n * @constructor\n * @extends Component\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {boolean} [config.main=false] set panel as main\n * @param {boolean} [config.size=1] size of panel width\n *\n * @example\n *\n * main = new Panel({\n *            size: 1,\n *             title: ['Left Panel', {className: 'info'}],\n *             main:true,\n *             children:[\n *                 new List({\n *                     data:['1 bla', '2 bro', '3 car', '4 hoho', 'Search'],\n *                     size:5\n *                 })\n *             ]\n *         });\n */\nfunction Panel ( config ) {\n    var $overlay;\n\n    config = config || {};\n\n    /**\n     * Size of panel\n     *\n     * @type {number}\n     */\n    this.size = 1;\n\n    /**\n     * Set panel as main\n     *\n     * @type {boolean}\n     */\n    this.main = false;\n\n    /**\n     * Index in panel set\n     *\n     * @type {number}\n     */\n    this.index = 0;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    // set default className if classList property empty or undefined\n    //config.className = 'Panel ' + (config.className || '');\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    //this.$node.classList.add('theme-main');\n    //this.$node.classList.add('theme-panel');\n\n    // add special class to set component size\n    if ( config.size ) {\n        this.size = config.size;\n        this.$node.classList.add('size' + config.size);\n    }\n\n    // add special class to set main panel\n    if ( config.main ) {\n        this.main = true;\n        this.$node.classList.add('main');\n    }\n\n    // create elements to set as component shadow\n    this.$shadow = {\n        left: document.createElement('div'),\n        right: document.createElement('div')\n    };\n\n    this.$shadow.left.className = 'shadow left';\n    this.$node.appendChild(this.$shadow.left);\n\n    this.$shadow.right.className = 'shadow right';\n    this.$node.appendChild(this.$shadow.right);\n\n    // add title to panel\n    if ( config.title ) {\n        if ( !Array.isArray(config.title) ) {\n            config.title = [config.title];\n        }\n        this.$title = new Layout({\n            //className: 'title theme-header theme-title',\n            className: 'title',\n            data: config.title,\n            focusable: false\n        });\n        this.$node.appendChild(this.$title.$node);\n    }\n\n    this.$node.appendChild(this.$body);\n\n    $overlay = document.createElement('div');\n    $overlay.className = 'overlay';\n    this.$node.appendChild($overlay);\n}\n\n// inheritance\nPanel.prototype = Object.create(Component.prototype);\nPanel.prototype.constructor = Panel;\n\n// set component name\nPanel.prototype.name = 'mag-component-panel';\n\n\n/**\n * Default events\n *\n * @type {{focus: Function}} try to focus first child component if it present\n */\nPanel.prototype.defaultEvents = {\n    focus: function () {\n        if ( this.children.length ) {\n            this.children[0].focus();\n        }\n    }\n};\n\n\n/**\n * Redefine default component focus to set panel as active even when give focus to children components\n */\nPanel.prototype.focus = function () {\n    if ( this.focusable ) {\n        this.parent.panels[this.parent.focusIndex].$node.classList.remove('active');\n        this.parent.panels[this.parent.focusIndex].$node.classList.remove('top');\n        Component.prototype.focus.call(this);\n        this.parent.focusIndex = this.index;\n        this.$node.classList.add('active');\n        this.$node.classList.add('top');\n        if ( this.index === 0 && this.parent.panels[1] && this.parent.panels[1].main ) {\n            this.parent.panels[1].$node.classList.remove('position-left');\n            this.parent.panels[1].$node.classList.add('position-right');\n            if ( this.parent.panels[2] ) {\n                this.parent.panels[2].$node.classList.remove('expand');\n            }\n            this.$node.classList.add('expand');\n\n        } else if ( this.index === 2 && this.parent.panels[1].main ) {\n            this.parent.panels[1].$node.classList.remove('position-right');\n            this.parent.panels[1].$node.classList.add('position-left');\n            this.parent.panels[0].$node.classList.remove('expand');\n            this.$node.classList.add('expand');\n        }\n    }\n};\n\n/**\n * Blur panel\n */\nPanel.prototype.blur = function () {\n    this.parent.panels[this.parent.focusIndex].$node.classList.remove('active');\n    Component.prototype.blur.call(this);\n};\n\n\n// public\nmodule.exports = Panel;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n/**\n * Layout component implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array} [config.data] array of items to add to layout\n */\nfunction Layout ( config ) {\n    var self = this;\n\n    // sanitize\n    config = config || {};\n\n    /**\n     * Index of focused child component\n     * @type {number}\n     */\n    this.focusIndex = 0;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && config.className !== undefined && typeof config.className !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    //config.className = 'layout ' + (config.className || '');\n\n    /**\n     * Component data\n     * @type {Array}\n     */\n    this.data = [];\n\n    Component.call(this, config);\n\n    this.init(config);\n\n    // add listener to move focus between children\n    this.addListener('keydown', function ( event ) {\n        switch ( event.code ) {\n            case keys.right:\n                if ( self.children.length && self.focusIndex < self.children.length - 1 ) {\n                    self.children[++self.focusIndex].focus();\n                }\n                break;\n            case keys.left:\n                if ( self.children.length && self.focusIndex > 0 ) {\n                    self.children[--self.focusIndex].focus();\n                }\n                break;\n            case keys.back:\n                // focus parent focused item if parent is layout list\n                if ( self.parent ) {\n                    self.parent.focus();\n                    if ( self.$parentItem ) {\n                        self.parent.focusItem(self.$parentItem);\n                    }\n                }\n                break;\n        }\n    });\n}\n\n\nLayout.prototype = Object.create(Component.prototype);\nLayout.prototype.constructor = Layout;\n\n// set component name\nLayout.prototype.name = 'mag-component-layout';\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var index, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( index = 0; index < data.length; index++ ) {\n        // cell value\n        item = data[index];\n        // plain text\n        if ( typeof item === 'object' ) {\n            // HTML element or component\n            if ( item instanceof Component || item instanceof HTMLElement ) {\n                data[index] = {\n                    value: item,\n                    wrap: false\n                };\n            } else {\n                data[index].wrap = true;\n            }\n        } else {\n            // wrap with defaults\n            data[index] = {\n                value: data[index],\n                wrap: true\n            };\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nLayout.prototype.init = function ( config ) {\n    var self = this,\n        data = normalize(config.data),\n        item, $wrapper, index;\n\n    // clear element if reinit\n    while (this.$node.firstChild) {\n        this.$node.removeChild(this.$node.firstChild);\n    }\n\n    this.data = data;\n\n    /**\n     * @this Component\n     */\n    function componentClickHandler (  ) {\n        self.focusIndex = this.index;\n    }\n\n    for ( index = 0; index < data.length; index++ ) {\n        item = data[index];\n        // plain text\n        if ( typeof item.value === 'string' ) {\n            $wrapper = document.createElement('div');\n            $wrapper.textContent = item.value;\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n        } else if ( item.value instanceof HTMLElement ) {\n            // HTML Element\n\n            // if with wrapper\n            if ( item.wrap ) {\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value);\n                this.$node.appendChild($wrapper);\n            } else {\n                // without wrapper\n                this.$node.appendChild(item.value);\n            }\n        } else if ( item.value instanceof Component ) {\n            // component\n            // force propagate events\n            item.value.propagate = true;\n\n            // set index to current component\n            item.value.index = this.children.length;\n\n            // change layout focus index if click component\n            item.value.addListener('click', componentClickHandler);\n\n            // append component\n            if ( item.wrap ) {\n                // with wrapper\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value.$node);\n                this.$node.appendChild($wrapper);\n                this.children.push(item.value);\n                item.value.parent = this;\n            } else {\n                // without wrapper\n                this.add(item.value);\n            }\n        } else {\n            $wrapper = document.createElement('div');\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n        }\n    }\n};\n\n\nmodule.exports = Layout;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n/**\n * Layout component implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array} [config.data] array of items to add to layout\n */\nfunction Layout ( config ) {\n    var self = this;\n\n    // sanitize\n    config = config || {};\n\n    /**\n     * Index of focused child component\n     * @type {number}\n     */\n    this.focusIndex = 0;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && config.className !== undefined && typeof config.className !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    //config.className = 'layout ' + (config.className || '');\n\n    /**\n     * Component data\n     * @type {Array}\n     */\n    this.data = [];\n\n    /**\n     *  Hash map of item links\n     */\n    this.links = {};\n\n    Component.call(this, config);\n\n    this.init(config);\n\n    // add listener to move focus between children\n    this.addListener('keydown', function ( event ) {\n        switch ( event.code ) {\n            case keys.right:\n                if ( self.children.length && self.focusIndex < self.children.length - 1 ) {\n                    self.children[++self.focusIndex].focus();\n                }\n                break;\n            case keys.left:\n                if ( self.children.length && self.focusIndex > 0 ) {\n                    self.children[--self.focusIndex].focus();\n                }\n                break;\n            case keys.back:\n                // focus parent focused item if parent is layout list\n                if ( self.parent ) {\n                    self.parent.focus();\n                    if ( self.$parentItem ) {\n                        self.parent.focusItem(self.$parentItem);\n                    }\n                }\n                break;\n        }\n    });\n}\n\n\nLayout.prototype = Object.create(Component.prototype);\nLayout.prototype.constructor = Layout;\n\n// set component name\nLayout.prototype.name = 'mag-component-layout';\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var index, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( index = 0; index < data.length; index++ ) {\n        // cell value\n        item = data[index];\n        // plain text\n        if ( typeof item === 'object' ) {\n            // HTML element or component\n            if ( item instanceof Component || item instanceof HTMLElement ) {\n                data[index] = {\n                    value: item,\n                    wrap: false\n                };\n            } else {\n                data[index].wrap = true;\n            }\n        } else {\n            // wrap with defaults\n            data[index] = {\n                value: data[index],\n                wrap: true\n            };\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nLayout.prototype.init = function ( config ) {\n    var self = this,\n        data = normalize(config.data),\n        item, $wrapper, index;\n\n    // clear element if reinit\n    while (this.$node.firstChild) {\n        this.$node.removeChild(this.$node.firstChild);\n    }\n\n    this.data = data;\n\n    /**\n     * @this Component\n     */\n    function componentClickHandler () {\n        self.focusIndex = this.index;\n    }\n\n    for ( index = 0; index < data.length; index++ ) {\n        item = data[index];\n        // plain text\n        if ( typeof item.value === 'string' ) {\n            $wrapper = document.createElement('div');\n            $wrapper.textContent = item.value;\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n            if ( item.name ) {\n                this.links[item.name] = $wrapper;\n            }\n        } else if ( item.value instanceof HTMLElement ) {\n            // HTML Element\n\n            // if with wrapper\n            if ( item.wrap ) {\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value);\n                this.$node.appendChild($wrapper);\n                if ( item.name ) {\n                    this.links[item.name] = $wrapper;\n                }\n            } else {\n                // without wrapper\n                this.$node.appendChild(item.value);\n                if ( item.name ) {\n                    this.links[item.name] = item.value;\n                }\n            }\n        } else if ( item.value instanceof Component ) {\n            // component\n            // force propagate events\n            item.value.propagate = true;\n\n            // set index to current component\n            item.value.index = this.children.length;\n\n            // change layout focus index if click component\n            item.value.addListener('click', componentClickHandler);\n\n            // append component\n            if ( item.wrap ) {\n                // with wrapper\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value.$node);\n                this.$node.appendChild($wrapper);\n                this.children.push(item.value);\n                item.value.parent = this;\n                if ( item.name ) {\n                    this.links[item.name] = $wrapper;\n                }\n            } else {\n                // without wrapper\n                this.add(item.value);\n                if ( item.name ) {\n                    this.links[item.name] = item.value;\n                }\n            }\n        } else {\n            $wrapper = document.createElement('div');\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n            if ( item.name ) {\n                this.links[item.name] = $wrapper;\n            }\n        }\n    }\n};\n\n\nmodule.exports = Layout;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stoian Roman <stoyan.roman@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar keys    = require('stb-keys'),\n    delta   = 0;\n\n/**\n * Data cacher\n *\n * Caches data in a predetermined range\n *\n * @constructor\n *\n * @param {Object}   config                 init parameters (all inherited from the parent)\n * @param {function} config.getter          method to get data for cache\n * @param {Object}   [config.request={}]    request params for getter\n * @param {number}   config.pageSize=5      amount of items on a page\n * @param {number}   [config.stepSize=5]    step size (default 1)\n * @param {number}   [config.cacheSize=2]   amount of cached pages (default 1)\n * @param {number}   [config.count=100]     length of cached list\n * @param {number}   [config.checkTime=100] aging data time in seconds\n * @param {boolean}  [config.cycle=true]    allow or not to jump to the opposite side of a list when there is nowhere to go next\n *\n * @example\n * var DataCacher = require('mag-data-cacher'),\n *     dataCacher = new DataCacher({\n *         pageSize: 7,\n *         cacheSize: 2,\n *         request: {},\n *         getter: function ( callback, config, count ) {\n *             // ...\n *         }\n *     });\n */\nfunction DataCacher ( config ) {\n    config = config || {};\n    this.size = config.pageSize;\n    this.stepSize = config.stepSize || 1;\n    this.data = [];\n    this.head = 0;\n    this.tail = 0;\n    this.pos = config.pos || 0;\n    this.cacheSize = ( config.cacheSize || 2 ) * this.size;\n    this.config = config.request || {};\n    this.botEmptyLine = false;\n    this.count = config.count || 0;\n    this.maxCount = this.count + (config.headItem ? 1 : 0);\n    this.headItem = config.headItem;\n    this.lastChecked = 0;\n    this.checkTime = config.checkTime * 1000 || 0;\n\n    this.cycle = config.cycle;\n    this.getter = config.getter;\n    this.blocked = false;\n\n    delta = 0;\n}\n\n// inheritance\nDataCacher.prototype.constructor = DataCacher;\n\n\n/**\n * Get part of data\n *\n * @param {number} direction to get data\n * @param {function} callback after getting data\n */\nDataCacher.prototype.get = function ( direction, callback ) {\n    var self = this,\n        error = false,\n        receivedData = [],\n        time = new Date();\n\n    if ( this.blocked ) {\n        return;\n    }\n\n    switch ( direction ) {\n        case null:\n            this.blocked = true;\n            //this.config.offset = this.pos;\n            if ( this.config.offset ) {\n                this.head = this.config.offset;\n                if ( !this.config.limit || this.config.limit < 0 ) {\n                    this.config.limit = 2 * this.cacheSize;\n                }\n            } else if ( !this.config.limit || this.config.limit < 0 ) {\n                this.config.limit = this.cacheSize;\n            }\n            this.getter(function ( error, data, maxCount ) {\n                if ( self.headItem && !self.config.offset ) {\n                    data.unshift(self.headItem);\n                    delta = 1;\n                }\n                self.lastChecked = time.getTime();\n                if ( error ) {\n                    callback(true, data);\n                } else {\n                    self.count = maxCount;\n                    self.maxCount = maxCount + (self.headItem ? 1 : 0);\n                    self.data = data;\n                    self.tail = self.head + data.length;\n                    if ( self.count && self.head >= self.count ) {\n                        self.goEnd(callback, true);\n\n                        return;\n                    }\n                    if ( data.length < self.config.limit ) {\n                        self.botEmptyLine = true;\n                    }\n                    if ( self.pos + self.size < self.data.length ) {\n                        receivedData = self.data.slice(self.pos, self.pos + self.size);\n                        callback(error, receivedData);\n                        self.checkNext();\n                    } else {\n                        self.checkNext(callback);\n                    }\n                }\n\n                self.blocked = false;\n            }, this.config);\n            break;\n\n        case keys.right:\n        case keys.down:\n            this.pos += this.stepSize;\n            if ( this.checkTime && time.getTime() > this.lastChecked + this.checkTime ) {\n                this.refreshData(callback);\n\n                return;\n            }\n            if ( this.pos + this.size < this.data.length ) {\n                receivedData = this.data.slice(this.pos, this.pos + this.size);\n                callback(error, receivedData);\n                this.checkNext();\n            } else {\n                this.checkNext(callback);\n            }\n            break;\n\n        case keys.pageDown:\n            this.pos += this.size - 1;\n            if ( this.checkTime && time.getTime() > this.lastChecked + this.checkTime ) {\n                this.refreshData(callback);\n\n                return;\n            }\n            if ( this.pos + this.size < this.data.length ) {\n                receivedData = this.data.slice(this.pos, this.pos + this.size);\n                callback(error, receivedData);\n                this.checkNext();\n            } else {\n                this.checkNext(callback);\n            }\n            break;\n\n        case keys.left:\n        case keys.up:\n            this.pos -= this.stepSize;\n            if ( this.checkTime && time.getTime() > this.lastChecked + this.checkTime ) {\n                this.refreshData(callback);\n\n                return;\n            }\n            if ( this.pos >= 0 ) {\n                receivedData = this.data.slice(this.pos, this.pos + this.size);\n                callback(error, receivedData);\n                this.checkPrev();\n            } else {\n                this.checkPrev(callback);\n            }\n            break;\n\n        case keys.pageUp:\n            this.pos -= this.size - 1;\n            if ( this.checkTime && time.getTime() > this.lastChecked + this.checkTime ) {\n                this.refreshData(callback);\n\n                return;\n            }\n            if ( this.pos > 0 ) {\n                receivedData = this.data.slice(this.pos, this.pos + this.size);\n                callback(error, receivedData);\n                this.checkPrev();\n            } else {\n                this.checkPrev(callback);\n            }\n            break;\n        case keys.home:\n            this.goHome(callback);\n            break;\n        case keys.end:\n            this.goEnd(callback);\n            break;\n    }\n};\n\n\n/**\n * Check and get data for next page if it need\n *\n * @param {function} cb callback after getting data\n */\nDataCacher.prototype.checkNext = function ( cb ) {\n    var count = this.cacheSize + this.pos - this.data.length,\n        self = this,\n        time = new Date();\n\n    if ( this.botEmptyLine ) {\n        if ( this.pos > this.data.length - this.size ) {\n            if ( this.cycle ) {\n                this.goHome(cb);\n\n                return;\n            }\n\n            this.pos = this.data.length - this.size;\n            if ( this.pos < 0 ) {\n                this.pos = 0;\n            }\n        }\n        if ( cb ) {\n            cb(false, this.data.slice(this.pos, this.pos + this.size));\n        }\n\n        return;\n    }\n\n    if ( count >= this.size ) {\n        if ( this.count && count + this.tail > this.count ) {\n            count = this.count - this.tail;\n            if ( count <= 0 ) {\n                if ( self.pos > self.data.length - self.size ) {\n                    self.pos = self.data.length - self.size;\n                    if ( self.pos < 0 ) {\n                        self.pos = 0;\n                    }\n                }\n                if ( cb ) {\n                    cb(false, self.data.slice(self.pos, self.pos + self.size));\n                }\n                this.botEmptyLine = true;\n\n                return;\n            }\n        }\n        this.config.limit = count;\n        this.config.offset = this.tail - delta;\n        this.blocked = true;\n        this.getter(function ( error, data, maxCount ) {\n            if ( !error ) {\n                self.count = maxCount;\n                self.maxCount = maxCount + (self.headItem ? 1 : 0);\n                if ( data.length < count ) {\n                    self.botEmptyLine = true;\n                }\n                if ( data.length ) {\n                    self.data = self.data.concat(data);\n                    count = self.data.length - 2 * self.cacheSize;\n                    self.tail += data.length;\n                    if ( count > 0 ) {\n                        self.data.splice(0, count);\n                        self.pos -= count;\n                        self.head += count;\n                    }\n                }\n                if ( self.pos > self.data.length - self.size ) {\n                    self.pos = self.data.length - self.size;\n                    if ( self.pos < 0 ) {\n                        self.pos = 0;\n                    }\n                }\n            }\n            self.lastChecked = time.getTime();\n            self.blocked = false;\n            if ( cb ) {\n                cb(error, self.data.slice(self.pos, self.pos + self.size));\n            }\n        }, this.config);\n    }\n};\n\n\n/**\n * Check and get data for preview page if it need\n *\n * @param {function} cb callback after getting data\n */\nDataCacher.prototype.checkPrev = function ( cb ) {\n    var count = this.cacheSize - this.pos,\n        self = this,\n        time = new Date();\n\n    if ( this.head > 0 ) {\n        if ( count >= this.size ) {\n            if ( count > this.head ) {\n                count = this.head;\n            }\n            this.config.offset = this.head - count - delta;\n            if ( this.config.offset < 0 ) {\n                this.config.offset = 0;\n                count -= delta;\n            }\n            this.config.limit = count;\n\n            this.blocked = true;\n            this.getter(function ( error, data, maxCount ) {\n                if ( !error ) {\n                    self.count = maxCount;\n                    self.maxCount = maxCount + (self.headItem ? 1 : 0);\n                    self.data = data.concat(self.data);\n                    if ( self.config.offset === 0 && self.headItem && self.data[0] !== self.headItem ) {\n                        self.data.unshift(self.headItem);\n                    }\n                    self.tail -= data.length;\n                    self.pos += data.length;\n                    count = self.data.length - 2 * self.cacheSize;\n                    self.head -= count;\n                    if ( count > 0 ) {\n                        self.data.splice(-count);\n                        self.botEmptyLine = false;\n                    }\n                }\n                self.lastChecked = time.getTime();\n                self.blocked = false;\n                if ( cb ) {\n                    cb(error, self.data.slice(self.pos, self.pos + self.size));\n                }\n            }, this.config);\n        }\n    } else {\n        if ( this.headItem && this.data[0] !== this.headItem ) {\n            this.data.unshift(this.headItem);\n        }\n\n        if ( this.pos < 0 ) {\n            if ( this.cycle ) {\n                this.goEnd(cb);\n\n                return;\n            }\n            this.pos = 0;\n        }\n        if ( cb ) {\n            cb(false, self.data.slice(self.pos, self.pos + self.size));\n        }\n    }\n};\n\n\n/**\n * Go to start of list\n *\n * @param {function} callback after getting data\n * @param {boolean} refresh need refresh data\n */\nDataCacher.prototype.goHome = function ( callback, refresh ) {\n    var receivedData = [],\n        self = this,\n        time = new Date();\n\n    if ( this.head === 0 && !refresh ) {\n        this.pos = 0;\n        if ( this.checkTime && time.getTime() > this.lastChecked + this.checkTime ) {\n            this.refreshData(callback);\n\n            return;\n        }\n        receivedData = this.data.slice(this.pos, this.pos + this.size);\n        callback(false, receivedData, 0);\n    } else {\n        this.blocked = true;\n        this.pos = 0;\n        this.head = 0;\n        this.config.offset = 0;\n        this.config.limit = this.cacheSize;\n        this.getter(function ( error, data, maxCount ) {\n            if ( !error ) {\n                self.count = maxCount;\n                self.maxCount = maxCount + (self.headItem ? 1 : 0);\n                self.data = data;\n                if ( self.headItem && self.data[0] !== self.headItem ) {\n                    self.data.unshift(self.headItem);\n                }\n                self.tail = self.data.length;\n                receivedData = self.data.slice(self.pos, self.pos + self.size);\n                self.botEmptyLine = false;\n            }\n            self.lastChecked = time.getTime();\n            self.blocked = false;\n            callback(error, receivedData, 0);\n        }, this.config);\n    }\n};\n\n\n/**\n * Go to end of list\n *\n * @param {function} callback after getting data\n * @param {boolean} refresh need refresh data\n */\nDataCacher.prototype.goEnd = function ( callback, refresh ) {\n    var receivedData = [],\n        self = this,\n        pos,\n        time = new Date();\n\n    if ( this.count ) {\n        if ( this.tail === this.count && !refresh ) {\n            if ( this.checkTime && time.getTime() > this.lastChecked + this.checkTime ) {\n                this.refreshData(function ( error ) {\n                    if ( !error ) {\n                        self.goEnd(callback);\n                    }\n                });\n\n                return;\n            }\n            self.pos = self.data.length - self.size;\n            if ( self.pos < 0 ) {\n                self.pos = 0;\n            }\n            receivedData = self.data.slice(self.pos, self.pos + self.size);\n            pos = receivedData.length - 1;\n            if ( pos < 0 ) {\n                pos = 0;\n            }\n            self.botEmptyLine = true;\n            callback(false, receivedData, pos);\n        } else {\n            this.blocked = true;\n            this.head = this.count - 2 * this.cacheSize;\n            if ( this.head < 0 ) {\n                this.head = 0;\n            }\n            this.config.offset = this.head;\n            this.config.limit = 2 * this.cacheSize;\n            this.getter(function ( error, data, maxCount ) {\n                if ( !error ) {\n                    self.count = maxCount;\n                    self.maxCount = maxCount + (self.headItem ? 1 : 0);\n                    self.data = data;\n                    if ( self.head === 0 && self.headItem && self.data[0] !== self.headItem ) {\n                        self.data.unshift(self.headItem);\n                    }\n                    self.pos = self.data.length - self.size;\n                    self.tail = self.head + data.length;\n                    if ( self.pos < 0 ) {\n                        self.pos = 0;\n                    }\n                    receivedData = self.data.slice(self.pos, self.pos + self.size);\n                    pos = receivedData.length - 1;\n                    if ( pos < 0 ) {\n                        pos = 0;\n                    }\n                    self.botEmptyLine = true;\n                }\n                self.blocked = false;\n                self.lastChecked = time.getTime();\n                callback(error, receivedData, pos);\n            }, this.config);\n        }\n    } else {\n        callback(true);\n    }\n};\n\n\n/**\n * Refresh data\n *\n * @param {function} callback after getting data\n */\nDataCacher.prototype.refreshData = function ( callback ) {\n    var self = this,\n        receivedData = [],\n        time = new Date();\n\n    if ( this.pos < 0 ) {\n        this.pos = 0;\n    }\n\n    this.config.offset = this.head;\n    this.config.limit = this.tail - this.head;\n    if ( this.config.limit <= 0 ) {\n        this.config.limit = this.config.offset === 0 ? this.cacheSize : 2 * this.cacheSize;\n    }\n\n    this.blocked = true;\n    this.getter(function ( error, data, maxCount ) {\n        if ( self.headItem && !self.config.offset ) {\n            data.unshift(self.headItem);\n            delta = 1;\n        }\n        if ( error ) {\n            callback(error, data);\n        } else {\n            self.lastChecked = time.getTime();\n            self.count = maxCount;\n            self.maxCount = maxCount + (self.headItem ? 1 : 0);\n            self.data = data;\n            self.tail = self.head + data.length;\n            if ( self.count && self.head >= self.count ) {\n                self.goEnd(callback, true);\n\n                return;\n            }\n            if ( data.length < self.config.limit ) {\n                self.botEmptyLine = true;\n            }\n            if ( self.pos + self.size < self.data.length ) {\n                receivedData = self.data.slice(self.pos, self.pos + self.size);\n                callback(error, receivedData);\n                self.checkNext();\n            } else {\n                self.checkNext(callback);\n            }\n        }\n        self.blocked = false;\n    }, this.config);\n\n};\n\n\n// public\nmodule.exports = DataCacher;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-modal');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-modal';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base modal window implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n */\nfunction Modal ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body ) {\n            throw new Error(__filename + ': config.$body should not be provided manually');\n        }\n    }\n\n    // create centered div\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // add table-cell wrapper\n    this.$node.appendChild(document.createElement('div').appendChild(this.$body).parentNode);\n}\n\n\n// inheritance\nModal.prototype = Object.create(Component.prototype);\nModal.prototype.constructor = Modal;\n\n// set component name\nModal.prototype.name = 'spa-component-modal';\n\n\n// public\nmodule.exports = Modal;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar List = require('mag-component-list'),\n    CheckBox = require('spa-component-checkbox'),\n    counter = 0;\n\n\n/**\n * Base radio list implementation\n *\n * @constructor\n * @extends List\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n */\nfunction RadioList ( config ) {\n    var self = this;\n\n    /**\n     * Checkbox group name\n     *\n     * @type {string}\n     */\n    this.group = 'group ' +  counter++;\n\n    /**\n     * Link to checked item\n     *\n     * @type {Element}\n     */\n    this.$checkedData = null;\n\n    //config.className = 'radioList ' + (config.className || '');\n\n    List.call(this, config);\n\n    this.addListener('click:item', function ( event ) {\n        var item = event.$item;\n\n        item.checkBox.set(true);\n        item.state = item.checkBox.value;\n        item.data.state = item.checkBox.value;\n\n        if ( self.$checkedData !== item.data ) {\n            /**\n             * Select element from list.\n             *\n             * @event\n             *\n             * @type {Object}\n             * @property {Element} previous selected element\n             * @property {Element} current selected element\n             */\n            self.emit('select', {\n                $last: self.$checkedData,\n                $curr: item\n            });\n            if ( self.$checkedData ) { self.$checkedData.state = false; }\n            self.$checkedData = item.data;\n        }\n    });\n}\n\n\nRadioList.prototype = Object.create(List.prototype);\nRadioList.prototype.constructor = RadioList;\n\n// set component name\nRadioList.prototype.name = 'mag-component-radio-list';\n\nRadioList.prototype.group = 0;\n\n\n/**\n * Default render function\n *\n * @param {Element} $item in list\n * @param {Array} data to render layout element\n * @param {string} [data.title] title of checkbox\n * @param {boolean} [data.state] state of checkbox: checked or not\n * @param {string} [data.value] special value of item\n */\nRadioList.prototype.renderItemDefault = function ( $item, data ) {\n    var table = document.createElement('table'),\n        tr = document.createElement('tr'),\n        td = document.createElement('td'),\n        check = new CheckBox({\n            group: this.group\n        });\n\n    $item.innerHTML = '';\n\n    // set state with set function to prevent multiple true values\n    if ( data.state ) {\n        check.set(true);\n        // set link to checked item\n        this.$checkedData = data;\n    }\n\n    table.appendChild(tr);\n\n    td.appendChild(check.$node);\n    td.className = 'checkBoxWrapper';\n    tr.appendChild(td);\n\n    td = document.createElement('td');\n    td.className = 'title';\n    td.innerText = data.title || '';\n    tr.appendChild(td);\n\n    $item.checkBox = check;\n\n    $item.state = check.value;\n    $item.value = data.value;\n\n\n    $item.appendChild(table);\n};\n\n// RadioList.prototype.setData = function ( config ) {\n//     var i;\n//\n//     List.prototype.setData.call(this, config);\n//\n//     for ( i = 0; i < this.data.length; i++ ) {\n//         if ( this.data[i].state ) {\n//             this.$checkedData = this.data[i];\n//             break;\n//         }\n//     }\n//\n// };\n\nRadioList.prototype.renderItem = RadioList.prototype.renderItemDefault;\n\n\nmodule.exports = RadioList;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component'),\n    keys      = require('spa-keys'),\n    // set of groups with linked components;\n    groups    = {};\n\n\n/**\n * Base check box implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {boolean} [config.value=false] initial state\n * @param {string} [config.group] group name to work synchronously with other checkboxes\n *\n * @example\n * var CheckBox = require('stb/ui/check.box'),\n *     checkBox = new CheckBox({\n *         value: true,\n *         group: 'lang'\n *     });\n */\nfunction CheckBox ( config ) {\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.group && typeof config.group !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.group');\n        }\n    }\n\n    // set default className if classList property empty or undefined\n    //config.className = 'checkBox ' + (config.className || '');\n\n    // state\n    this.value = !!config.value;\n\n    // correct init styles\n    if ( this.value ) {\n        config.className += ' checked';\n    }\n\n    // group name to work synchronously with other checkboxes\n    this.group = null;\n\n    // apply hierarchy\n    if ( config.group ) {\n        // correct init styles\n        config.className += ' grouped';\n\n        // save\n        this.group = config.group;\n\n        // fill groups data\n        if ( groups[config.group] === undefined ) {\n            groups[config.group] = [this];\n        } else {\n            groups[config.group].push(this);\n        }\n    }\n\n    // parent constructor call\n    Component.call(this, config);\n}\n\n\n// inheritance\nCheckBox.prototype = Object.create(Component.prototype);\nCheckBox.prototype.constructor = CheckBox;\n\n// set component name\nCheckBox.prototype.name = 'spa-component-checkbox';\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nCheckBox.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse click events.\n     */\n    click: function () {\n        // invert state\n        this.set(!this.value);\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        // emulate click\n        if ( event.code === keys.enter ) {\n            this.set(!this.value);\n        }\n    }\n};\n\n\n/**\n * Set the given state.\n * Does nothing in case the value is already as necessary.\n *\n * @param {boolean} value new value to set\n * @return {boolean} operation status\n *\n * @fires module:\"stb/ui/check.box~CheckBox#change\"\n */\nCheckBox.prototype.set = function ( value ) {\n    var index, length;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n    }\n\n    if ( this.value !== value ) {\n        // going to be turned on and assigned to some group\n        if ( !this.value && this.group !== null ) {\n            // unset all checkboxes in this group\n            for ( index = 0, length = groups[this.group].length; index < length; index++ ) {\n                groups[this.group][index].set(false);\n            }\n        }\n\n        // set new value\n        this.value = !this.value;\n\n        // set visible changes\n        this.$node.classList.toggle('checked');\n\n        // there are some listeners\n        if ( this.events['change'] ) {\n            /**\n             * Update progress value.\n             *\n             * @event module:stb/ui/check.box~CheckBox#change\n             *\n             * @type {Object}\n             * @property {boolean} value current check state\n             */\n            this.emit('change', {value: this.value});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = CheckBox;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base scroll bar implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {number} [config.value=0] initial thumb position\n * @param {number} [config.realSize=100] actual scroll size\n * @param {number} [config.viewSize=10] visible area size\n * @param {number} [config.type] direction\n *\n * @example\n * var ScrollBar = require('stb/ui/scroll.bar'),\n *     scrollBar = new ScrollBar({\n *         viewSize: 5,\n *         realSize: 25,\n *         events: {\n *             done: function () {\n *                 debug.log('ScrollBar: done');\n *             },\n *             change: function ( data ) {\n *                 debug.log('ScrollBar: change to ' + data.curr + ' from ' + data.prev);\n *             }\n *         }\n *     });\n */\nfunction ScrollBar ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Visible area size.\n     *\n     * @type {number}\n     */\n    this.viewSize = 10;\n\n    /**\n     * Scroll area actual height or width (if scroll is horizontal).\n     *\n     * @type {number}\n     */\n    this.realSize = 100;\n\n    /**\n     * Scroll thumb position.\n     *\n     * @type {number}\n     */\n    this.value = 0;\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Geometry of the scroll thumb element.\n     *\n     * @type {ClientRect}\n     */\n    this.thumbRect = null;\n\n    /**\n     * Geometry of the scroll track element.\n     *\n     * @type {ClientRect}\n     */\n    this.trackRect = null;\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'scrollBar ' + (config.className || '');\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // insert thumb line\n    this.$thumb = this.$body.appendChild(document.createElement('div'));\n\n    // correct CSS class name\n    this.$thumb.className = 'thumb';\n\n    // component setup\n    this.init(config);\n}\n\n\n// inheritance\nScrollBar.prototype = Object.create(Component.prototype);\nScrollBar.prototype.constructor = ScrollBar;\n\n// set component name\nScrollBar.prototype.name = 'spa-component-scrollbar';\n\nScrollBar.prototype.TYPE_VERTICAL   = 1;\nScrollBar.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Init or re-init realSize/viewSize/value parameters.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nScrollBar.prototype.init = function ( config ) {\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // set actual scroll size\n    if ( config.realSize !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.realSize) !== config.realSize ) {\n                throw new Error(__filename + ': config.realSize value must be a number');\n            }\n        }\n\n        // apply\n        this.realSize = config.realSize;\n    }\n\n    // set visible area size\n    if ( config.viewSize !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.viewSize) !== config.viewSize ) {\n                throw new Error(__filename + ': config.viewSize value must be a number');\n            }\n            if ( config.viewSize < 0 ) {\n                throw new Error(__filename + ': config.viewSize value must be greater than 0');\n            }\n        }\n\n        // apply\n        this.viewSize = config.viewSize;\n    }\n\n    // show or hide thumb\n    if ( this.viewSize >= this.realSize ) {\n        this.$thumb.classList.add('hidden');\n    } else {\n        this.$thumb.classList.remove('hidden');\n    }\n\n    // set thumb position\n    if ( config.value !== undefined ) {\n        // apply\n        this.scrollTo(config.value);\n    }\n\n    // set thumb size\n    if ( this.type === this.TYPE_VERTICAL ) {\n        this.$thumb.style.height = (this.viewSize / this.realSize * 100) + '%';\n    } else {\n        this.$thumb.style.width = (this.viewSize / this.realSize * 100) + '%';\n    }\n\n    // geometry\n    this.thumbRect = this.$thumb.getBoundingClientRect();\n    this.trackRect = this.$node.getBoundingClientRect();\n};\n\n\n/**\n * Set position of the given value.\n * Does nothing in case when scroll is in the end and passed value is more than scroll bar length.\n *\n * @param {number} value new value to set\n * @return {boolean} operation result\n *\n * @fires module:stb/ui/scroll.bar~ScrollBar#done\n * @fires module:stb/ui/scroll.bar~ScrollBar#change\n */\nScrollBar.prototype.scrollTo = function ( value ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(value) !== value ) {\n            throw new Error(__filename + ': value must be a number');\n        }\n        if ( this.realSize > this.viewSize && value > this.realSize - this.viewSize ) {\n            throw new Error(__filename + ': value is greater than this.realSize-this.viewSize');\n        }\n        if ( value < 0 ) {\n            throw new Error(__filename + ': value is less then 0');\n        }\n    }\n\n    // value has changed\n    if ( this.value !== value ) {\n        // track and thumb geometry was not set\n        if ( this.thumbRect.height === 0 || this.thumbRect.width === 0 ) {\n            // apply\n            this.trackRect = this.$node.getBoundingClientRect();\n            this.thumbRect = this.$thumb.getBoundingClientRect();\n        }\n\n        // set scroll bar width\n        if ( this.type === this.TYPE_VERTICAL ) {\n            this.$thumb.style.marginTop = ((this.trackRect.height - this.thumbRect.height) * value / (this.realSize - this.viewSize)) + 'px';\n        } else {\n            this.$thumb.style.marginLeft = ((this.trackRect.width - this.thumbRect.width) * value / (this.realSize - this.viewSize)) + 'px';\n        }\n\n        // there are some listeners\n        if ( this.events['change'] ) {\n            /**\n             * Update scroll value.\n             *\n             * @event module:stb/ui/scroll.bar~ScrollBar#change\n             *\n             * @type {Object}\n             * @property {number} prev old/previous scroll value\n             * @property {number} curr new/current scroll value\n             */\n            this.emit('change', {curr: value, prev: this.value});\n        }\n\n        // is it the end?\n        if ( value >= this.realSize ) {\n            value = this.realSize;\n\n            // there are some listeners\n            if ( this.events['done'] ) {\n                /**\n                 * Set scroll to its maximum value.\n                 *\n                 * @event module:stb/ui/scroll.bar~ScrollBar#done\n                 */\n                this.emit('done');\n            }\n        }\n\n        // set new value\n        this.value = value;\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = ScrollBar;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Tab item implementation.\n * This component has redefined methods 'show' and 'hide', use them to switch between tabs.\n * All tab items are created invisible by default.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n *\n * @example\n * var Tab = require('stb/ui/tab.item'),\n *     tabItem = new Tab({\n *         $node: window.someId,\n *         children: [\n *             new Panel({\n *                 $node: window.anotherId\n *             })\n *         ],\n *         events: {\n *             show: function ( event ) {\n *                 // tab was activated\n *             },\n *             hide: function ( event ) {\n *                 // tab was hidden\n *             }\n *         }\n *     });\n *\n * tabList.add(tabItem);\n */\nfunction Tab ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'tabItem hidden ' + (config.className || '');\n\n    config.className += ' hidden';\n\n    // prevent parent hiding\n    config.visible = null;\n\n    // parent constructor call\n    Component.call(this, config);\n\n    this.visible = false;\n}\n\n\n// inheritance\nTab.prototype = Object.create(Component.prototype);\nTab.prototype.constructor = Tab;\n\n// set component name\nTab.prototype.name = 'spa-component-tab';\n\n\n/**\n * Make the tab visible, i.e. set active tab, and notify subscribers.\n * Hide previous visible tab if exists.\n *\n * @param {Object} [data] custom data which passed into handlers\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/tab.item~Tab#show\n */\nTab.prototype.show = function ( data ) {\n    var prev = null;\n\n    if ( DEVELOP ) {\n        if ( !this.parent ) {\n            throw new Error(__filename + ': no parent for tab item');\n        }\n        // if ( this.parent.constructor.name !== 'TabList' ) {\n        //     throw new Error(__filename + ': wrong parent for tab item');\n        // }\n        if ( this.parent.currentTab && !(this.parent.currentTab instanceof Tab) ) {\n            throw new Error(__filename + ': wrong current tab item type');\n        }\n    }\n\n    // is it hidden\n    if ( !this.visible ) {\n        // hide previous tab\n        if ( this.parent.currentTab ) {\n            prev = this.parent.currentTab;\n            prev.hide(data);\n        }\n\n        Component.prototype.show.call(this, data);\n        this.parent.currentTab = this;\n\n        /*// there are some listeners\n         if ( this.parent.events['switch'] ) {\n         this.parent.emit('switch', {prev: prev, curr: this});\n         }*/\n\n        return true;\n    }\n\n    // nothing was done\n    return true;\n};\n\n\n/**\n * Make the tab hidden and notify subscribers.\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/tab.item~Tab#hide\n */\nTab.prototype.hide = function () {\n    if ( DEVELOP ) {\n        if ( !this.parent ) {\n            throw new Error(__filename + ': no parent for tab item');\n        }\n        // if ( this.parent.constructor.name !== 'TabList' ) {\n        //     throw new Error(__filename + ': wrong parent for tab item');\n        // }\n        if ( this.parent.currentTab && !(this.parent.currentTab instanceof Tab) ) {\n            throw new Error(__filename + ': wrong current tab item type');\n        }\n    }\n\n    if ( Component.prototype.hide.call(this) ) {\n        this.parent.currentTab = null;\n\n        return true;\n    }\n\n    // nothing was done\n    return true;\n};\n\n\n// public\nmodule.exports = Tab;\n","/**\n * Exit from an app in three ways.\n *\n * @module app.exit\n * @author Yaroslav Surilov <y.surilov@infomir.com>\n */\n\n'use strict';\n\nvar app  = require('mag-app'),\n    exit = {};\n\n\n/**\n * Go back to Launcher from an app.\n */\nexit.goBack = function () {\n    core.call('stop');\n};\n\n/**\n * Exit from app.\n * Destroy all application instance.\n * If callback function provided, and callback returns boolean 'true', application will stay alive.\n *\n * @fires module:/magsdk/app/app#exit\n *\n * @param {Function} [callback] - provide callback if u want to handle exit result, or cancel it\n */\nexit.goExit = function ( callback ) {\n    var ModalMessage  = require('mag-component-modal'),\n        LayoutList    = require('mag-component-layout-list'),\n        keys          = require('stb-keys'),\n        previousFocus = app.activePage.activeComponent,\n        exitModal;\n\n    app.activePage.add(exitModal = new ModalMessage({\n        title: gettext('Exit'),\n        events: {\n            show: function () {\n                this.children[0].focus();\n            },\n            hide: function () {\n                previousFocus.focus();\n            }\n        },\n        children: [\n            new LayoutList({\n                className: 'padded',\n                size: 2,\n                focusIndex: 0,\n                fixedData: true,\n                data: [\n                    {\n                        items: [\n                            {\n                                value: gettext('Yes')\n                            }\n                        ],\n                        click: function () {\n                            if ( typeof callback === 'function' ) {\n                                if ( callback(true) ) {\n                                    exitModal.hide();\n                                    exitModal.remove();\n\n                                    return;\n                                }\n                            }\n\n                            exitModal.hide();\n                            exitModal.remove();\n\n                            //app.saveState();\n                            core.call('exit');\n                        }\n                    },\n                    {\n                        items: [\n                            {\n                                value: gettext('No')\n                            }\n                        ],\n                        click: function () {\n                            if ( typeof callback === 'function' ) {\n                                callback(false);\n                            }\n                            exitModal.hide();\n                            exitModal.remove();\n                            app.mainPanelSet.focus();\n                        }\n                    }\n                ],\n                events: {\n                    keydown: function ( event ) {\n                        LayoutList.prototype.defaultEvents.keydown.call(this, event);\n                        if ( event.code === keys.back ) {\n                            event.stop = true;\n                            if ( typeof callback === 'function' ) {\n                                callback(false);\n                            }\n                            exitModal.hide();\n                            exitModal.remove();\n                            app.mainPanelSet.focus();\n                        }\n                    }\n                }\n            })\n        ]\n    }));\n\n    exitModal.show();\n    exitModal.focus();\n};\n\n\nmodule.exports = exit;\n","'use strict';\n\nvar dom        = require('spa-dom'),\n    Scrollbar  = require('stb-component-scrollbar'),\n    ScrollArea = require('mag-component-scroll-area'),\n\n    infoPanel = {},\n\n    tag = dom.tag,\n\n    $infoContainer, $holderContainer,\n    $poster, $genres, $director,\n    $year, $country, $language,\n    $backInformation;\n\ninfoPanel.init = function () {\n    $infoContainer = tag(\n        'div',\n        {},\n        $poster = tag('div', {className: 'info poster'}),\n        tag('div', {className: 'info title theme-subhead-color'}, gettext('Singer:')),\n        $director = tag('div', {className: 'info director'}),\n        tag('div', {className: 'info title theme-subhead-color'}, gettext('Genres:')),\n        $genres = tag('div', {className: 'info genres'}),\n        tag('div', {className: 'info title theme-subhead-color'}, gettext('Year:')),\n        $year = tag('div', {className: 'info year'}),\n        tag('div', {className: 'info title theme-subhead-color'}, gettext('Language:')),\n        $language = tag('div', {className: 'info language'}),\n        tag('div', {className: 'info title theme-subhead-color'}, gettext('Country:')),\n        $country = tag('div', {className: 'info country'})\n    );\n\n    $holderContainer = tag('div', {className: 'info placeholder'});\n\n    this.textArea = new ScrollArea({\n        propagate: true,\n        step: 5,\n        scroll: new Scrollbar({})\n    });\n    this.textArea.$body.appendChild($infoContainer);\n    this.textArea.$body.appendChild($holderContainer);\n\n    $backInformation = tag('div', {className: 'backDesk'}, gettext('Back to previous list'));\n    this.textArea.$body.appendChild($backInformation);\n};\n\ninfoPanel.clear = function () {\n    $poster.style.backgroundImage = '';\n    $infoContainer.style.display = 'none';\n    this.textArea.init();\n    $genres.innerText = '';\n    $director.innerText = '';\n    $year.innerText = '';\n};\n\ninfoPanel.hideInfo = function () {\n    $infoContainer.style.display = 'none';\n    $holderContainer.style.display = 'block';\n    this.textArea.init();\n};\n\ninfoPanel.hideHolder = function () {\n    $holderContainer.style.display = 'none';\n};\n\ninfoPanel.showHolder = function () {\n    $holderContainer.style.display = 'block';\n};\n\ninfoPanel.showBackDesk = function () {\n    $backInformation.style.display = 'block';\n};\n\ninfoPanel.hideBackInformation = function () {\n    $backInformation.style.display = 'none';\n};\n\n/**\n * Fill active track info.\n *\n * @param {Object} data - data to fill track info\n */\ninfoPanel.fillTracks = function ( data ) {\n    var genresArr = [],\n        index;\n\n    if ( !data ) {\n        $infoContainer.style.display = 'none';\n        // $holderContainer.style.display = 'block';\n        $backInformation.style.display = 'block';\n        infoPanel.textArea.init();\n\n        return;\n    }\n    $backInformation.style.display = 'none';\n    $holderContainer.style.display = 'none';\n    $infoContainer.style.display = 'block';\n    for ( index = 0; index < data.album.genres.length; index++ ) {\n        genresArr.push(data.album.genres[index].name);\n    }\n    if ( data.album.cover ) {\n        $poster.style.backgroundImage = 'url(' + core.backend.host + data.album.cover + ')';\n    } else {\n        $poster.style.backgroundImage = '';\n    }\n    $genres.innerText = genresArr.join(', ');\n    $director.innerText = data.album.artist.name;\n    $year.innerText = data.album.year.name;\n    $country.innerText = data.album.country.name;\n    $language.innerText = data.language;\n    infoPanel.textArea.init();\n};\n\n/**\n * Fill active artist info.\n *\n * @return {boolean} now allways false\n */\ninfoPanel.fillArtist = function () {\n\n    return false;\n};\n\n/**\n * Fill active album info.\n *\n * @param {Object} data - data to fill album info\n */\ninfoPanel.fillAlbums = function ( data ) {\n    var genresArr = [],\n        index;\n\n    if ( !data ) {\n        $infoContainer.style.display = 'none';\n        $backInformation.style.display = 'block';\n        infoPanel.textArea.init();\n\n        return;\n    }\n\n    $backInformation.style.display = 'none';\n    $infoContainer.style.display = 'block';\n    for ( index = 0; index < data.genres.length; index++ ) {\n        genresArr.push(data.genres[index].name);\n    }\n    if ( data.cover ) {\n        $poster.style.backgroundImage = 'url(' + core.backend.host + data.cover + ')';\n    } else {\n        $poster.style.backgroundImage = 'url(img/placeholder.png)';\n    }\n    $genres.innerText = genresArr.join(', ');\n    $director.innerText = data.artist.name;\n    $year.innerText = data.year.name;\n    $country.innerText = data.country.name;\n    $language.innerText = data.languages.join(', ');\n    infoPanel.textArea.init();\n};\n\n/**\n * Fill active playlist info.\n *\n * @return {boolean} now allways false\n */\ninfoPanel.fillList = function () {\n\n    return false;\n};\n\n\nmodule.exports = infoPanel;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component'),\n    keys      = require('stb-keys');\n\n\n/**\n * Scroll area implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} config object\n * @param {number} [config.step] step in % of screen height to scroll area\n */\nfunction ScrollArea ( config ) {\n\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    /**\n     * Step to scroll area in % of screen height\n     *\n     * @type {number}\n     */\n    this.step = 5;\n\n    /**\n     * Real height of scroll area\n     *\n     * @type {number}\n     */\n    this.realHeight = 0;\n\n    /**\n     * Visible height of area\n     *\n     * @type {number}\n     */\n    this.viewHeight = 0;\n\n    /**\n     * Top position of scroll container\n     *\n     * @type {number}\n     */\n    this.topPosition = 0;\n\n    /**\n     * Associated ScrollBar component link.\n     *\n     * @type {ScrollBar}\n     */\n    this.scroll = null;\n\n    Component.call(this, config);\n\n    this.$node.appendChild(this.$body);\n\n    // component setup\n    this.init(config);\n}\n\n\nScrollArea.prototype = Object.create(Component.prototype);\nScrollArea.prototype.constructor = ScrollArea;\n\n// set component name\nScrollArea.prototype.name = 'mag-component-scroll-area';\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nScrollArea.prototype.defaultEvents = {\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n                this.move(event.code);\n                break;\n        }\n    },\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n    }\n};\n\n\n/**\n * Attempt to go beyond the edge of the list.\n *\n * @event\n *\n * @type {Object}\n * @property {number} direction key code initiator of movement\n */\n\n\n/**\n * Move ScrollArea content\n *\n * @param {number} direction to move\n */\nScrollArea.prototype.move = function ( direction ) {\n    var height = screen.height,\n        delta  = this.viewHeight - this.realHeight;\n\n    // run logic only if it's reasonable to navigate\n    if ( delta < 0 ) {\n        switch ( direction ) {\n            case keys.down:\n                if ( this.topPosition - this.step * height / 100 < delta ) {\n                    this.scroll.scrollTo(-delta);\n                    this.$body.style.top = delta + 'px';\n                    this.emit('overflow', {direction: direction});\n\n                    return;\n                }\n\n                this.topPosition -= Math.ceil(this.step * height / 100);\n\n                if ( this.scroll ) {\n                    this.scroll.scrollTo(-this.topPosition);\n                }\n                this.$body.style.top = this.topPosition + 'px';\n                break;\n            case keys.up:\n                if ( this.topPosition + this.step * height / 100 > 0 ) {\n                    this.scroll.scrollTo(0);\n                    this.$body.style.top = '0px';\n                    this.emit('overflow', {direction: direction});\n\n                    return;\n                }\n                this.topPosition += Math.ceil(this.step * height / 100);\n\n                if ( this.scroll ) {\n                    this.scroll.scrollTo(-this.topPosition);\n                }\n                this.$body.style.top = this.topPosition + 'px';\n                break;\n        }\n    } else {\n        this.emit('overflow', {direction: direction});\n    }\n};\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nScrollArea.prototype.init = function ( config ) {\n\n    config = config || {};\n\n    this.realHeight = this.$body.offsetHeight;\n    this.viewHeight = this.$node.offsetHeight;\n    this.topPosition = 0;\n    this.$body.style.top = this.topPosition + 'px';\n\n    if ( config.scroll ) {\n        this.scroll = config.scroll;\n    }\n\n    if ( config.step ) {\n        this.step = config.step;\n    }\n\n    if ( this.scroll ) {\n        this.scroll.init({\n            realSize: this.realHeight,\n            viewSize: this.viewHeight,\n            value: this.topPosition\n        });\n    }\n};\n\nmodule.exports = ScrollArea;\n","'use strict';\n\n/**\n * Change server data to list data.\n *\n * @param {Array} data - response from server\n *\n * @return {Array} prepared data for LayoutList\n */\nmodule.exports = function ( data ) {\n    var result = [],\n        index;\n\n    if ( data && data.length ) {\n        for ( index = 0; index < data.length; index++ ) {\n            result[index] = {\n                items: [\n                    {\n                        className: 'title',\n                        value: data[index].name\n                    }\n                ],\n                value: data[index]\n            };\n        }\n    }\n\n    return result;\n};\n","'use strict';\n\n/**\n * Change server data to list data.\n *\n * @param {Array} data - response from server\n *\n * @return {Array} prepared data for LayoutList\n */\nmodule.exports = function ( data ) {\n    var result = [],\n        index;\n\n    if ( data && data.length ) {\n        for ( index = 0; index < data.length; index++ ) {\n            result[index] = {\n                items: [\n                    {\n                        className: 'theme-icon theme-icon-playlist'\n                    },\n                    {\n                        className: 'title',\n                        value: data[index].name\n                    }\n                ],\n                value: data[index]\n            };\n        }\n    }\n\n    return result;\n};\n","'use strict';\n\nfunction parseTime ( time ) {\n    var min, sec, hour;\n\n    if ( !time ) {\n        return '0:00';\n    }\n\n    hour = Math.floor(time / 3600);\n    min = Math.floor((time - (hour * 3600)) / 60);\n    sec = time - (hour * 3600) - (min * 60);\n\n    return (hour ? hour + ':' : '') +\n        (min ? (hour && min > 9 ? min : '0' + min) + ':' : '0:') +\n        (sec > 9 ? sec : '0' + sec);\n}\n\n/**\n * Change server data to list data for tracks.\n *\n * @param {Array} data - response from server\n *\n * @return {Array} prepared data for LayoutList\n */\nmodule.exports = function ( data ) {\n    var result = [],\n        index;\n\n    if ( data && data.length ) {\n        for ( index = 0; index < data.length; index++ ) {\n            result[index] = {\n                items: [\n                    {\n                        className: 'title',\n                        value: data[index].name\n                    },\n                    {\n                        className: 'time',\n                        value: parseTime(data[index].duration)\n                    }\n                ],\n                value: data[index]\n            };\n        }\n    }\n\n    return result;\n};\n"],"sourceRoot":""}