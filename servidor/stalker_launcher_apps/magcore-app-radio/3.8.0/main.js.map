{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/stb-keys/index.js","webpack:///./node_modules/stb-component/index.js","webpack:///./node_modules/spa-app/lib/core.js","webpack:///./node_modules/mag-app/index.js","webpack:///./node_modules/spa-component/index.js","webpack:///./node_modules/cjs-emitter/index.js","webpack:///./node_modules/stb-app/lib/css.js","webpack:///./node_modules/mag-component-layout/index.js","webpack:///./node_modules/mag-component-layout-list/index.js","webpack:///./node_modules/mag-component-list/index.js","webpack:///./node_modules/mag-component-modal/index.js","webpack:///./src/js/main.js","webpack:///./node_modules/mag-app/lib/main.js","webpack:///./node_modules/cjs-query/index.js","webpack:///./src/js/config.js","webpack:///./node_modules/spa-app/lib/events.js","webpack:///./node_modules/stb-shim-classlist/index.js","webpack:///./node_modules/stb-app/lib/metrics.js","webpack:///./src/js/metrics.js","webpack:///./node_modules/mag-app/lib/css.js","webpack:///./node_modules/spa-gettext/index.js","webpack:///./node_modules/cjs-gettext/index.js","webpack:///./src/js/modules/saver.js","webpack:///./src/js/pages/main.js","webpack:///./node_modules/mag-component-panel/index.js","webpack:///./node_modules/spa-keys/index.js","webpack:///./node_modules/mag-component-panel-set/index.js","webpack:///./node_modules/mag-component-layout-list/node_modules/mag-component-layout/index.js","webpack:///./node_modules/stb-component-modal/index.js","webpack:///./node_modules/spa-component-modal/index.js","webpack:///./node_modules/mag-component-radio-list/index.js","webpack:///./node_modules/stb-component-scrollbar/index.js","webpack:///./node_modules/spa-component-scrollbar/index.js","webpack:///./node_modules/mag-component-footer/index.js","webpack:///./src/js/modules/app.exit.js","webpack:///./src/js/modules/keyboard.js","webpack:///./src/js/modules/div.js","webpack:///./node_modules/stb-component-page/index.js","webpack:///./node_modules/spa-component-page/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","keys","back","backspace","channelNext","tab","channelPrev","ok","enter","exit","escape","volumeUp","volumeDown","f1","f2","f3","f4","refresh","frame","phone","set","tv","menu","app","rewind","forward","audio","standby","keyboard","usbMounted","usbUnmounted","playPause","play","pause","stop","power","record","info","mute","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","Emitter","parse","query","document","location","search","substring","config","activePage","route","pageTo","data","page","pageFrom","active","id","$node","classList","remove","events","emit","add","showPage","this","from","to","counter","Component","self","visible","focusable","$body","parent","children","propagate","createElement","className","hide","defaultEvents","forEach","eventName","addListener","apply","addEventListener","event","focus","stopPropagation","constructor","child","index","arguments","length","push","parentNode","appendChild","item","activeComponent","blur","splice","indexOf","removeChild","activeItem","show","callback","setTimeout","once","onceWrapper","removeListener","addListeners","callbacks","filter","fn","undefined","Array","slice","link","rel","href","metrics","height","head","Layout","focusIndex","links","init","code","right","left","$parentItem","focusItem","$wrapper","HTMLElement","wrap","normalize","firstChild","componentClickHandler","textContent","List","LayoutList","handlers","$noData","fixedData","$item","layout","inner","renderItemDefault","layoutConfig","currentNode","currentData","ready","items","childNodes","innerText","click","setData","$wrap","noData","innerHTML","Element","renderItem","$focusItem","viewIndex","type","TYPE_VERTICAL","size","cycle","scroll","provider","TYPE_HORIZONTAL","mousewheel","wheelDeltaY","move","up","down","wheelDeltaX","keydown","pageUp","pageDown","home","end","idx","currSize","onClick","render","blocked","error","realSize","maxCount","viewSize","pos","blurItem","renderView","itemData","prevIndex","currIndex","mark","scrollTo","direction","force","previousSibling","lastChild","nextSibling","$prev","$curr","markItem","state","StbComponentModal","Modal","$overlay","onkeydown","$header","$text","title","icon","$icon","require","load","core","environment","language","radioBackend","plugins","pages","main","getRadioChannels","favorite","favoritesActive","window","getCoreInstance","platform","body","setAttribute","contextmenu","preventDefault","split","part","decodeURIComponent","stringify","params","encodeURIComponent","join","uiDefaults","searchRequest","sortOrder","DOMContentLoaded","unload","eventLocal","keyCode","ctrlKey","altKey","shiftKey","keypress","documentElement","DOMTokenList","el","_element","_classCache","classes","replace","token","contains","toString","toggle","screenHeight","screen","availHeight","availTop","availBottom","availWidth","width","availLeft","availRight","480","576","720","1080","linkCSS","theme","path","Gettext","loader","prepare","gettext","_","pgettext","ngettext","defaultLanguage","xhr","ext","XMLHttpRequest","onload","JSON","responseText","onerror","ontimeout","open","send","meta","msgId","context","plural","evalResult","eval","saveState","saveStateOn","saveDataOn","panelSet","mainPanel","listStation","stationListScroll","$iconSearch","$iconFavorites","stationTitle","stationsAmountTitle","timerId","Panel","PanelSet","ModalMessage","RadioList","ScrollBar","Footer","appExit","div","getElementById","initialStationsListData","searchResultData","intentContext","isModalShown","prepareStationsLayout","stations","searchPattern","$amount","map","station","date","isFavorite","playStation","intent","intentConfig","queue","action","mime","uri","url","solution","mediaId","close","$index","$name","prev","next","RegExp","test","renderStations","order","sort","itemA","itemB","toLowerCase","localeCompare","radioChannelsSort","radioChannelsSearch","toggleFavorites","target","setRadioChannelFavoriteState","dataLength","favoritesBlock","$favorites","closeModalWindow","modalSorting","modalResetFilters","modalContextMenu","footer","refreshList","queryStringSet","leftPanelFooterConfig","mainPanelFooterConfig","leftPanel","listSortingOption","$inputSearch","$buttonSort","resetFilters","resetData","middle","input","click:item","panels","defaultValue","goExit","goBack","setInterval","clearInterval","shadows","$left","$right","isArray","space","insert","del","keydownHandler","classIcon","classIconActive","classChecked","checkedData","checkedIndex","previousCheckedData","checkIndex","defaultCheckedIndex","defaultFocusIndex","clearChecked","table","tr","td","check","$title","checkBox","getItemNodeByIndex","thumbRect","trackRect","$thumb","style","getBoundingClientRect","marginTop","marginLeft","curr","currentTab","tabs","codes","$table","insertRow","rows","insertCell","cells","currTab","$tab","$tabChildren","addClick","ind","disabled","visibility","onclick","exitModal","previousFocus","done","node","createTextNode","Page"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","/**\n * Global list of non-printable control key codes.\n *\n * At the moment `keypress` and `keydown` events are emitted for the same keys (for both printable and non-printable characters).\n *\n * WARNING!!! All codes in this file (except 'volumeUp' and 'volumeDown')\n * are used in window 'keydown' handler to prevent wrong 'keypress' firings.\n * If you add new code to this file 'keypress' event with this code will never fire.\n *\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar keys = require('spa-keys');\n\n\n// extend with additional codes\nkeys.back         = keys.backspace;\nkeys.channelNext  = keys.tab;        // Tab\nkeys.channelPrev  = keys.tab + 's';  // Shift+Tab\nkeys.ok           = keys.enter;      // Enter\nkeys.exit         = keys.escape;     // Esc\nkeys.volumeUp     = 107;             // NUMPAD +\nkeys.volumeDown   = 109;             // NUMPAD -\nkeys.f1           = 112 + 'c';       // Ctrl+F1\nkeys.f2           = 113 + 'c';       // Ctrl+F2\nkeys.f3           = 114 + 'c';       // Ctrl+F3\nkeys.f4           = 115 + 'c';       // Ctrl+F4\nkeys.refresh      = 116 + 'c';       // Ctrl+F5\nkeys.frame        = 117 + 'c';       // Ctrl+F6\nkeys.phone        = 119 + 'c';       // Ctrl+F8\nkeys.set          = 120 + 'c';       // Ctrl+F9\nkeys.tv           = 121 + 'c';       // Ctrl+F10\nkeys.menu         = 122 + 'c';       // Ctrl+F11\nkeys.app          = 123 + 'c';       // Ctrl+F12\nkeys.rewind       = 66  + 'a';       // Alt+B\nkeys.forward      = 70  + 'a';       // Alt+F\nkeys.audio        = 71  + 'a';       // Alt+G\nkeys.standby      = 74  + 'a';       // Alt+J\nkeys.keyboard     = 76  + 'a';       // Alt+L\nkeys.usbMounted   = 80  + 'a';       // Alt+P\nkeys.usbUnmounted = 81  + 'a';       // Alt+Q\nkeys.playPause    = 82  + 'a';       // Alt+R\nkeys.play         = -1;              // should be redefined on some platforms\nkeys.pause        = -1;              // should be redefined on some platforms\nkeys.stop         = 83  + 'a';       // Alt+S\nkeys.power        = 85  + 'a';       // Alt+U\nkeys.record       = 87  + 'a';       // Alt+W\nkeys.info         = 89  + 'a';       // Alt+Y\nkeys.mute         = 192 + 'a';\nkeys.digit0       = 48;\nkeys.digit1       = 49;\nkeys.digit2       = 50;\nkeys.digit3       = 51;\nkeys.digit4       = 52;\nkeys.digit5       = 53;\nkeys.digit6       = 54;\nkeys.digit7       = 55;\nkeys.digit8       = 56;\nkeys.digit9       = 57;\n\n\n// public\nmodule.exports = keys;\n\n// public\n// module.exports = {\n//     getCode: function ( event ) {\n//         var code = event.keyCode;\n//\n//         // apply key modifiers\n//         if ( event.shiftKey ) { code += 1000; }\n//         if ( event.altKey )   { code += 2000; }\n//\n//         return code;\n//     },\n//\n//     codes: {\n//         back:         8,    // Backspace\n//         channelPrev:  1009, // Shift+Tab\n//         channelNext:  9,    // Tab\n//         ok:           13,   // Enter\n//         exit:         27,   // Esc\n//         pageUp:       33,\n//         pageDown:     34,\n//         end:          35,\n//         home:         36,\n//         left:         37,\n//         up:           38,\n//         right:        39,\n//         down:         40,\n//         'delete':     46,\n//         volumeUp:     107,  // NUMPAD +\n//         volumeDown:   109,  // NUMPAD -\n//         f1:           112,  // F1\n//         f2:           113,  // F2\n//         f3:           114,  // F3\n//         f4:           115,  // F4\n//         refresh:      116,  // F5\n//         frame:        117,  // F6\n//         phone:        119,  // F8\n//         set:          120,  // F9\n//         tv:           121,  // F10\n//         menu:         122,  // F11\n//         app:          123,  // F12\n//         rewind:       2066, // Alt+B\n//         forward:      2070, // Alt+F\n//         audio:        2071, // Alt+G\n//         standby:      2074, // Alt+J\n//         keyboard:     2076, // Alt+L\n//         usbMounted:   2080, // Alt+P\n//         usbUnmounted: 2081, // Alt+Q\n//         playPause:    2082, // Alt+R\n//         stop:         2083, // Alt+S\n//         power:        2085, // Alt+U\n//         record:       2087, // Alt+W\n//         info:         2089, // Alt+Y\n//         mute:         2192\n//     }\n// };\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component');\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    parse   = require('cjs-query').parse,\n    app     = new Emitter();\n\n\n/**\n * Make the given inactive/hidden page active/visible.\n * Pass some data to the page and trigger the corresponding event.\n *\n * @param {Page} page item to show\n * @param {*} [data] data to send to page\n *\n * @return {boolean} operation status\n */\nfunction showPage ( page, data ) {\n    // page available and can be hidden\n    if ( page && !page.active ) {\n        // apply visibility\n        page.$node.classList.add('active');\n        page.active = true;\n        app.activePage = page;\n\n        debug.info('show component ' + page.name + '#' + page.id, null, {\n            tags: ['show', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' show', 'green');\n\n        // there are some listeners\n        if ( page.events['show'] ) {\n            // notify listeners\n            page.emit('show', {data: data});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n/**\n * Make the given active/visible page inactive/hidden and trigger the corresponding event.\n *\n * @param {Page} page item to hide\n *\n * @return {boolean} operation status\n */\nfunction hidePage ( page ) {\n    // page available and can be hidden\n    if ( page && page.active ) {\n        // apply visibility\n        page.$node.classList.remove('active');\n        page.active  = false;\n        app.activePage = null;\n\n        debug.info('hide component ' + page.name + '#' + page.id, null, {\n            tags: ['hide', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' hide', 'grey');\n\n        // there are some listeners\n        if ( page.events['hide'] ) {\n            // notify listeners\n            page.emit('hide');\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n// url request params\napp.query = parse(document.location.search.substring(1));\n\n\n// global application configuration\n// in config.js file in js root\napp.config = require('app:config');\n\n\n// the only visible page\napp.activePage = null;\n\n\n/**\n * Browse to a given page.\n * Do nothing if the link is invalid. Otherwise hide the current, show new and update the \"previous\" link.\n *\n * @param {Page} pageTo instance of the page to show\n * @param {*} [data] options to pass to the page on show\n *\n * @return {boolean} operation status\n */\napp.route = function ( pageTo, data ) {\n    var pageFrom = app.activePage;\n\n    if ( DEVELOP ) {\n        //if ( router.pages.length > 0 ) {\n        if ( !pageTo || typeof pageTo !== 'object' ) {\n            throw new Error(__filename + ': wrong pageTo type');\n        }\n        if ( !('active' in pageTo) ) {\n            throw new Error(__filename + ': missing field \"active\" in pageTo');\n        }\n        //}\n    }\n\n    // valid not already active page\n    if ( pageTo && !pageTo.active ) {\n        //debug.log('router.navigate: ' + pageTo.id, pageTo === pageFrom ? 'grey' : 'green');\n        debug.info('app route: ' + pageTo.name + '#' + pageTo.id, null, {tags: ['route', pageTo.name, pageTo.id]});\n\n        // update url\n        //location.hash = this.stringify(name, data);\n\n        // apply visibility\n        hidePage(app.activePage);\n        showPage(pageTo, data);\n\n        // there are some listeners\n        if ( this.events['route'] ) {\n            // notify listeners\n            this.emit('route', {from: pageFrom, to: pageTo});\n        }\n\n        // store\n        //this.history.push(pageTo);\n\n        return true;\n    }\n\n    //debug.warn('invalid page to route: ' + pageTo.id, null, {tags: ['route', 'page', pageTo.id]});\n    console.warn('invalid page to route: ' + pageTo.id);\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar app = require('./lib/main');\n\n\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    Emitter = require('cjs-emitter'),\n    counter = 0;\n\n\n/**\n * Base component implementation.\n *\n * Visual element that can handle sub-components.\n * Each component has a DOM element container $node with a set of classes:\n * \"component\" and some specific component class names depending on the hierarchy, for example \"page\".\n * Each component has a unique ID given either from $node.id or from data.id. If not given will generate automatically.\n *\n * @constructor\n * @extends Emitter\n *\n * @param {Object} [config={}] init parameters\n * @param {Element} [config.id] component unique identifier (generated if not set)\n * @param {string} [config.className] space-separated list of classes for \"className\" property of this.$node\n * @param {Element} [config.$node] DOM element/fragment to be a component outer container\n * @param {Element} [config.$body] DOM element/fragment to be a component inner container (by default is the same as $node)\n * @param {Component} [config.parent] link to the parent component which has this component as a child\n * @param {Array.<Component>} [config.children=[]] list of components in this component\n * @param {Object.<string, function>} [config.events={}] list of event callbacks\n * @param {boolean} [config.visible=true] component initial visibility state flag\n * @param {boolean} [config.focusable=true] component can accept focus or not\n * @param {boolean} [config.propagate=false] allow to emit events to the parent component\n *\n * @fires module:stb/component~Component#click\n *\n * @example\n * var component = new Component({\n *     $node: document.getElementById(id),\n *     className: 'bootstrap responsive',\n *     events: {\n *         click: function () { ... }\n *     }\n * });\n * component.add( ... );\n * component.focus();\n */\nfunction Component ( config ) {\n    // current execution context\n    var self = this,\n        name;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.id && typeof config.id !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.id');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$node && !(config.$node instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$node type');\n        }\n        if ( config.$body && !(config.$body instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$body type');\n        }\n        if ( config.parent && !(config.parent instanceof Component) ) {\n            throw new Error(__filename + ': wrong config.parent type');\n        }\n        if ( config.children && !Array.isArray(config.children) ) {\n            throw new Error(__filename + ': wrong config.children type');\n        }\n    }\n\n    /**\n     * Component visibility state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.visible = true;\n\n    /**\n     * Component can accept focus or not.\n     *\n     * @type {boolean}\n     */\n    this.focusable = true;\n\n    /**\n     * DOM outer handle.\n     *\n     * @type {Element}\n     */\n    this.$node = null;\n\n    /**\n     * DOM inner handle.\n     * In simple cases is the same as $node.\n     *\n     * @type {Element}\n     */\n    this.$body = null;\n\n    /**\n     * Link to the parent component which has this component as a child.\n     *\n     * @type {Component}\n     */\n    this.parent = null;\n\n    /**\n     * List of all children components.\n     *\n     * @type {Component[]}\n     */\n    this.children = [];\n\n    /**\n     * allow to emit events to the parent component\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.propagate = !!config.propagate;\n\n    // parent constructor call\n    Emitter.call(this);\n\n    // outer handle - empty div in case nothing is given\n    this.$node = config.$node || document.createElement('div');\n\n    // inner handle - the same as outer handler in case nothing is given\n    this.$body = config.$body || this.$node;\n\n    // set CSS class names\n    //this.$node.className += ' component ' + (config.className || '');\n    // previous approach is not good as it mess with components hierarchy\n    this.$node.className = this.name + ' ' + (config.className || '');\n\n    // apply component id if given, generate otherwise\n    this.id = config.id || this.$node.id || 'cid' + counter++;\n\n    // apply hierarchy\n    if ( config.parent ) {\n        // add to parent component\n        config.parent.add(this);\n    }\n\n    // apply given visibility\n    if ( config.visible === false ) {\n        // default state is visible\n        this.hide();\n    }\n\n    // apply focus handling method\n    if ( config.focusable === false ) {\n        // can't accept focus\n        this.focusable = false;\n    }\n\n    // a descendant defined own events\n    if ( this.defaultEvents ) {\n        // sanitize\n        config.events = config.events || {};\n\n        if ( DEVELOP ) {\n            if ( typeof config.events !== 'object' ) {\n                throw new Error(__filename + ': wrong config.events type');\n            }\n            if ( typeof this.defaultEvents !== 'object' ) {\n                throw new Error(__filename + ': wrong this.defaultEvents type');\n            }\n        }\n\n        for ( name in this.defaultEvents ) {\n            // overwrite default events with user-defined\n            config.events[name] = config.events[name] || this.defaultEvents[name];\n        }\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( eventName ) {\n            self.addListener(eventName, config.events[eventName]);\n        });\n    }\n\n    // apply the given children components\n    if ( config.children ) {\n        // apply\n        this.add.apply(this, config.children);\n    }\n\n    // component activation by mouse\n    this.$node.addEventListener('click', function ( event ) {\n        // left mouse button\n        //if ( event.button === 0 ) {\n        // activate if possible\n        self.focus();\n\n        // there are some listeners\n        if ( self.events['click'] ) {\n            /**\n             * Mouse click event.\n             *\n             * @event module:stb/component~Component#click\n             *\n             * @type {Object}\n             * @property {Event} event click event data\n             */\n            self.emit('click', event);\n        }\n        //}\n\n        if ( DEVELOP ) {\n            // middle mouse button\n            if ( event.button === 1 ) {\n                //debug.inspect(self, 0);\n                debug.info('\"window.link\" or \"' + self.id + '.component\"', 'this component is now available in global scope');\n                window.link = self;\n                self.$node.classList.toggle('wired');\n            }\n        }\n\n        event.stopPropagation();\n    });\n\n    if ( DEVELOP ) {\n        // expose inner ID to global scope\n        window[self.id] = self.$node;\n\n        // expose a link\n        this.$node.component = this.$body.component = this;\n        this.$node.title = this.name + '#' + this.id + ' (outer)';\n        this.$body.title = this.name + '#' + this.id + ' (inner)';\n    }\n\n    debug.info('create component ' + this.name + '#' + this.id, null, {\n        tags: ['create', 'component', this.name, this.id]\n    });\n}\n\n\n// inheritance\nComponent.prototype = Object.create(Emitter.prototype);\nComponent.prototype.constructor = Component;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nComponent.prototype.defaultEvents = null;\n\n\n/**\n * Add a new component as a child.\n *\n * @param {...Component} [child] variable number of elements to append\n *\n * @files Component#add\n *\n * @example\n * panel.add(\n *     new Button( ... ),\n *     new Button( ... )\n * );\n */\nComponent.prototype.add = function ( child ) {\n    var index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        child = arguments[index];\n\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        // apply\n        this.children.push(child);\n        child.parent = this;\n\n        // correct DOM parent/child connection if necessary\n        if ( child.$node && child.$node.parentNode === null ) {\n            this.$body.appendChild(child.$node);\n        }\n\n        debug.info('add component ' + child.name + '#' + child.id + ' to ' + this.name + '#' + this.id, null, {\n            tags: ['add', 'component', this.name, this.id, child.name, child.id]\n        });\n\n        // there are some listeners\n        if ( this.events['add'] ) {\n            /**\n             * A child component is added.\n             *\n             * @event module:stb/component~Component#add\n             *\n             * @type {Object}\n             * @property {Component} item new component added\n             */\n            this.emit('add', {item: child});\n        }\n\n        //debug.log('component ' + this.name + '#' + this.id + ' new child: ' + child.name + '#' + child.id);\n    }\n};\n\n\n/* @todo: consider activation in future */\n///**\n// * Insert component into the specific position.\n// *\n// * @param {Component} child component instance to insert\n// * @param {number} index insertion position\n// */\n//Component.prototype.insert = function ( child, index ) {\n//    var prevIndex = this.children.indexOf(child);\n//\n//    if ( DEVELOP ) {\n//        if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n//        if ( !(child instanceof Component) ) { throw new Error(__filename + ': wrong child type'); }\n//    }\n//\n//    if ( prevIndex !== -1 ) {\n//        this.children.splice(prevIndex, 1);\n//        this.$body.removeChild(child.$node);\n//    }\n//\n//    if ( index === this.children.length ) {\n//        this.$body.appendChild(child.$node);\n//    } else {\n//        this.$body.insertBefore(child.$node, this.$body.children[index]);\n//    }\n//    this.children.splice(index, 0, child);\n//\n//    if ( !child.parent ) {\n//        child.parent = this;\n//    }\n//};\n\n\n/**\n * Delete this component and clear all associated events.\n *\n * @fires module:stb/component~Component#remove\n */\nComponent.prototype.remove = function () {\n    // really inserted somewhere\n    if ( this.parent ) {\n        if ( DEVELOP ) {\n            if ( !(this.parent instanceof Component) ) {\n                throw new Error(__filename + ': wrong this.parent type');\n            }\n        }\n\n        // active at the moment\n        if ( app.activePage.activeComponent === this ) {\n            this.blur();\n            this.parent.focus();\n        }\n        this.parent.children.splice(this.parent.children.indexOf(this), 1);\n    }\n\n    // remove all children\n    this.children.forEach(function ( child ) {\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        child.remove();\n    });\n\n    this.$node.parentNode.removeChild(this.$node);\n\n    // there are some listeners\n    if ( this.events['remove'] ) {\n        /**\n         * Delete this component.\n         *\n         * @event module:stb/component~Component#remove\n         */\n        this.emit('remove');\n    }\n\n    // remove all listeners\n    this.events = {};\n\n    //debug.log('component ' + this.name + '#' + this.id + ' remove', 'red');\n    debug.info('remove component ' + this.name + '#' + this.id, null, {\n        tags: ['remove', 'component', this.name, this.id]\n    });\n};\n\n\n/**\n * Activate the component.\n * Notify the owner-page and apply CSS class.\n *\n * @param {Object} [data] custom data which passed into handlers\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#focus\n */\nComponent.prototype.focus = function ( data ) {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // this is a visual component on a page\n    // not already focused and can accept focus\n    if ( this.focusable && this !== activeItem ) {\n        // notify the current active component\n        if ( activeItem ) { activeItem.blur(); }\n\n        /* eslint consistent-this: 0 */\n\n        // apply\n        activePage.activeComponent = activeItem = this;\n        activeItem.$node.classList.add('focus');\n\n        //debug.log('component ' + this.name + '#' + this.id + ' focus');\n        debug.info('focus component ' + this.name + '#' + this.id, null, {\n            tags: ['focus', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( activeItem.events['focus'] ) {\n            /**\n             * Make this component focused.\n             *\n             * @event module:stb/component~Component#focus\n             */\n            activeItem.emit('focus', data);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Remove focus.\n * Change page.activeComponent and notify subscribers.\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#blur\n */\nComponent.prototype.blur = function () {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // apply visuals anyway\n    this.$node.classList.remove('focus');\n\n    // this is the active component\n    if ( this === activeItem ) {\n        activePage.activeComponent = null;\n\n        //debug.log('component ' + this.name + '#' + this.id + ' blur', 'grey');\n        debug.info('blur component ' + this.name + '#' + this.id, null, {\n            tags: ['blur', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['blur'] ) {\n            /**\n             * Remove focus from this component.\n             *\n             * @event module:stb/component~Component#blur\n             */\n            this.emit('blur');\n        }\n\n        return true;\n    }\n\n    debug.warn('component ' + this.name + '#' + this.id + ' attempt to blur without link to a page', null, {\n        tags: ['blur', 'component', this.name, this.id]\n    });\n\n    // nothing was done\n    return false;\n};\n\n\n/*function show ( self, data ) {\n    // correct style\n    self.$node.classList.remove('hidden');\n    // flag\n    self.visible = true;\n\n    debug.info('show component ' + self.name + '#' + self.id, null, {\n        tags: ['show', 'component', self.name, self.id]\n    });\n\n    // there are some listeners\n    if ( self.events['show'] ) {\n        /!**\n         * Make the component visible.\n         *\n         * @event module:stb/component~Component#show\n         *!/\n        self.emit('show', data);\n    }\n}*/\n\n/**\n * Make the component visible and notify subscribers.\n *\n * @param {Object} [data] custom data which passed into handlers\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#show\n */\nComponent.prototype.show = function ( data, callback ) {\n    //var self = this;\n\n    // is it hidden\n    if ( !this.visible ) {\n        /*if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(function () {\n                show(self, data);\n                callback();\n            });\n        } else {\n            // sync call\n            show(this, data);\n        }*/\n\n        // correct style\n        this.$node.classList.remove('hidden');\n        // flag\n        this.visible = true;\n\n        debug.info('show component ' + this.name + '#' + this.id, null, {\n            tags: ['show', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['show'] ) {\n            /**\n             * Make the component visible.\n             *\n             * @event module:stb/component~Component#show\n             */\n            this.emit('show', data);\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Make the component hidden and notify subscribers.\n *\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#hide\n */\nComponent.prototype.hide = function ( callback ) {\n    // is it visible\n    if ( this.visible ) {\n        // correct style\n        this.$node.classList.add('hidden');\n        // flag\n        this.visible = false;\n\n        debug.info('hide component ' + this.name + '#' + this.id, null, {\n            tags: ['hide', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['hide'] ) {\n            /**\n             * Make the component hidden.\n             *\n             * @event module:stb/component~Component#hide\n             */\n            this.emit('hide');\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = Component;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Base Events Emitter implementation.\n *\n * @see http://nodejs.org/api/events.html\n * @constructor\n *\n * @example\n * var emitter = new Emitter();\n */\nfunction Emitter () {\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // if ( DEVELOP ) {\n    //     if ( typeof this !== 'object' ) { throw new Error(__filename + ': must be constructed via new'); }\n    // }\n\n    /**\n     * Inner hash table for event names and linked callbacks.\n     * Manual editing should be avoided.\n     *\n     * @member {Object.<string, function[]>}\n     *\n     * @example\n     * {\n     *     click: [\n     *         function click1 () { ... },\n     *         function click2 () { ... }\n     *     ],\n     *     keydown: [\n     *         function () { ... }\n     *     ]\n     * }\n     **/\n    this.events = {};\n}\n\n\nEmitter.prototype = {\n    /**\n     * Bind an event to the given callback function.\n     * The same callback function can be added multiple times for the same event name.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.addListener('click', function ( data ) { ... });\n     * // one more click handler\n     * emitter.addListener('click', function ( data ) { ... });\n     */\n    addListener: function ( name, callback ) {\n        console.assert(arguments.length === 2, 'wrong arguments number');\n        console.assert(typeof name === 'string', 'wrong name type');\n        console.assert(name.length > 0, 'empty name');\n        console.assert(typeof callback === 'function', 'callback should be a function');\n\n        // if ( DEVELOP ) {\n        //     if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        //     if ( typeof name !== 'string' || name.length === 0 ) { throw new Error(__filename + ': wrong or empty name'); }\n        //     if ( typeof callback !== 'function' ) { throw new Error(__filename + ': wrong callback type'); }\n        // }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(callback);\n    },\n\n\n    /**\n     * Add a one time listener for the event.\n     * This listener is invoked only the next time the event is fired, after which it is removed.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.once('click', function ( data ) { ... });\n     */\n    once: function ( name, callback ) {\n        // current execution context\n        var self = this;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n        }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(function onceWrapper () {\n            self.removeListener(name, onceWrapper);\n            callback.apply(self, arguments);\n        });\n    },\n\n\n    /**\n     * Apply multiple listeners at once.\n     *\n     * @param {Object} callbacks event names with callbacks\n     *\n     * @example\n     * emitter.addListeners({\n     *     click: function ( data ) {},\n     *     close: function ( data ) {}\n     * });\n     */\n    addListeners: function ( callbacks ) {\n        var name;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof callbacks !== 'object' ) {\n                throw new Error(__filename + ': wrong callbacks type');\n            }\n            if ( Object.keys(callbacks).length === 0 ) {\n                throw new Error(__filename + ': no callbacks given');\n            }\n        }\n\n        for ( name in callbacks ) {\n            if ( callbacks.hasOwnProperty(name) ) {\n                this.addListener(name, callbacks[name]);\n            }\n        }\n    },\n\n\n    /**\n     * Remove all instances of the given callback.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to remove\n     *\n     * @example\n     * emitter.removeListener('click', func1);\n     */\n    removeListener: function ( name, callback ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n            if ( this.events[name] && !Array.isArray(this.events[name]) ) {\n                throw new Error(__filename + ': corrupted inner data');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( this.events[name] ) {\n            // rework the callback list to exclude the given one\n            this.events[name] = this.events[name].filter(function callbacksFilter ( fn ) { return fn !== callback; });\n            // event has no more callbacks so clean it\n            if ( this.events[name].length === 0 ) {\n                // as if there were no listeners at all\n                this.events[name] = undefined;\n            }\n        }\n    },\n\n\n    /**\n     * Remove all callbacks for the given event name.\n     * Without event name clears all events.\n     *\n     * @param {string} [name] event identifier\n     *\n     * @example\n     * emitter.removeAllListeners('click');\n     * emitter.removeAllListeners();\n     *\n     * @deprecated\n     */\n    /*removeAllListeners: function ( name ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 0 && (typeof name !== 'string' || name.length === 0) ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // check input\n        if ( arguments.length === 0 ) {\n            // no arguments so remove everything\n            this.events = {};\n        } else if ( name ) {\n            if ( DEVELOP ) {\n                if ( this.events[name] ) { throw new Error(__filename + ': event is not removed'); }\n            }\n\n            // only name is given so remove all callbacks for the given event\n            // but object structure modification should be avoided\n            this.events[name] = undefined;\n        }\n    },*/\n\n\n    /**\n     * Execute each of the listeners in the given order with the supplied arguments.\n     *\n     * @param {string} name event identifier\n     *\n     * @example\n     * emitter.emit('init');\n     * emitter.emit('click', {src: panel1, dst: panel2});\n     * emitter.emit('load', error, data);\n     *\n     * // it's a good idea to emit event only when there are some listeners\n     * if ( this.events['click'] ) {\n     *     this.emit('click', {event: event});\n     * }\n     */\n    emit: function ( name ) {\n        var event = this.events[name],\n            index;\n\n        if ( DEVELOP ) {\n            if ( arguments.length < 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( event ) {\n            if ( DEVELOP ) {\n                if ( !Array.isArray(event) ) {\n                    throw new Error(__filename + ': wrong event type');\n                }\n            }\n\n            for ( index = 0; index < event.length; index++ ) {\n                if ( DEVELOP ) {\n                    if ( typeof event[index] !== 'function' ) {\n                        throw new Error(__filename + ': wrong event callback type');\n                    }\n                }\n\n                // invoke the callback with parameters\n                event[index].apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n    }\n};\n\n\n// correct constructor name\nEmitter.prototype.constructor = Emitter;\n\n\n// public\nmodule.exports = Emitter;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core');\n//    metrics = require('app:metrics'),\n//    linkCSS;\n\n\n// global link\n//app.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\n//app.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\n//app.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n// // set max browser window size\n// window.moveTo(0, 0);\n// window.resizeTo(metrics.width, metrics.height);\n\n// load CSS file base on resolution\n/*linkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = 'css/' + (DEVELOP ? 'develop.' : 'release.') + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);*/\n\n\n// public\nmodule.exports = function ( name ) {\n    var link = document.createElement('link');\n\n    link.rel  = 'stylesheet';\n    link.href = 'css/' + name + '.' + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\n    document.head.appendChild(link);\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n/**\n * Layout component implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array} [config.data] array of items to add to layout\n */\nfunction Layout ( config ) {\n    var self = this;\n\n    // sanitize\n    config = config || {};\n\n    /**\n     * Index of focused child component\n     * @type {number}\n     */\n    this.focusIndex = 0;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && config.className !== undefined && typeof config.className !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    //config.className = 'layout ' + (config.className || '');\n\n    /**\n     * Component data\n     * @type {Array}\n     */\n    this.data = [];\n\n    /**\n     *  Hash map of item links\n     */\n    this.links = {};\n\n    Component.call(this, config);\n\n    this.init(config);\n\n    // add listener to move focus between children\n    this.addListener('keydown', function ( event ) {\n        switch ( event.code ) {\n            case keys.right:\n                if ( self.children.length && self.focusIndex < self.children.length - 1 ) {\n                    self.children[++self.focusIndex].focus();\n                }\n                break;\n            case keys.left:\n                if ( self.children.length && self.focusIndex > 0 ) {\n                    self.children[--self.focusIndex].focus();\n                }\n                break;\n            case keys.back:\n                // focus parent focused item if parent is layout list\n                if ( self.parent ) {\n                    self.parent.focus();\n                    if ( self.$parentItem ) {\n                        self.parent.focusItem(self.$parentItem);\n                    }\n                }\n                break;\n        }\n    });\n}\n\n\nLayout.prototype = Object.create(Component.prototype);\nLayout.prototype.constructor = Layout;\n\n// set component name\nLayout.prototype.name = 'mag-component-layout';\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var index, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( index = 0; index < data.length; index++ ) {\n        // cell value\n        item = data[index];\n        // plain text\n        if ( typeof item === 'object' ) {\n            // HTML element or component\n            if ( item instanceof Component || item instanceof HTMLElement ) {\n                data[index] = {\n                    value: item,\n                    wrap: false\n                };\n            } else {\n                data[index].wrap = true;\n            }\n        } else {\n            // wrap with defaults\n            data[index] = {\n                value: data[index],\n                wrap: true\n            };\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nLayout.prototype.init = function ( config ) {\n    var self = this,\n        data = normalize(config.data),\n        item, $wrapper, index;\n\n    // clear element if reinit\n    while (this.$node.firstChild) {\n        this.$node.removeChild(this.$node.firstChild);\n    }\n\n    this.data = data;\n\n    /**\n     * @this Component\n     */\n    function componentClickHandler () {\n        self.focusIndex = this.index;\n    }\n\n    for ( index = 0; index < data.length; index++ ) {\n        item = data[index];\n        // plain text\n        if ( typeof item.value === 'string' ) {\n            $wrapper = document.createElement('div');\n            $wrapper.textContent = item.value;\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n            if ( item.name ) {\n                this.links[item.name] = $wrapper;\n            }\n        } else if ( item.value instanceof HTMLElement ) {\n            // HTML Element\n\n            // if with wrapper\n            if ( item.wrap ) {\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value);\n                this.$node.appendChild($wrapper);\n                if ( item.name ) {\n                    this.links[item.name] = $wrapper;\n                }\n            } else {\n                // without wrapper\n                this.$node.appendChild(item.value);\n                if ( item.name ) {\n                    this.links[item.name] = item.value;\n                }\n            }\n        } else if ( item.value instanceof Component ) {\n            // component\n            // force propagate events\n            item.value.propagate = true;\n\n            // set index to current component\n            item.value.index = this.children.length;\n\n            // change layout focus index if click component\n            item.value.addListener('click', componentClickHandler);\n\n            // append component\n            if ( item.wrap ) {\n                // with wrapper\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value.$node);\n                this.$node.appendChild($wrapper);\n                this.children.push(item.value);\n                item.value.parent = this;\n                if ( item.name ) {\n                    this.links[item.name] = $wrapper;\n                }\n            } else {\n                // without wrapper\n                this.add(item.value);\n                if ( item.name ) {\n                    this.links[item.name] = item.value;\n                }\n            }\n        } else {\n            $wrapper = document.createElement('div');\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n            if ( item.name ) {\n                this.links[item.name] = $wrapper;\n            }\n        }\n    }\n};\n\n\nmodule.exports = Layout;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar List = require('mag-component-list'),\n    Layout = require('mag-component-layout');\n\n/**\n *  Layout list contains array of layout components\n *\n * @constructor\n * @extends List\n *\n * @param {Object} config object\n * @param {Element} [config.noData=''] element or string to display if set empty data\n *\n * @example\n * var LayoutList = require('mag-component-layout-list'),\n *     list = new LayoutList({\n *         propagate: true,\n *         size: 7,\n *         focusIndex: 0,\n *         noData: 'No channels'\n *         data: [\n *                 {\n *                     items: [\n *                         {\n *                             className: 'star',\n *                             name: '$text'\n *                         },\n *                         'Some text'\n *                     ],\n *                     click: function () {\n *                         // do something\n *                     },\n *                     name: 'starItem'\n *                 },\n *                 {\n *                     items: [\n *                         'Hello world',\n *                         {\n *                             value: 'hi',\n *                             className: 'status'\n *                         }\n *                     ],\n *                     value:{\n *                         uri: 'http://55.55.55.55/some'\n *                     },\n *                     click: someHandler\n *                 },\n *                 {\n *                     items: [\n *                         {\n *                             className: 'big',\n *                             value: ' Some'\n *                         },\n *                         {\n *                             value: new Input()\n *                         }\n *                     ]\n *                 },\n *                 {\n *                     items: [\n *                         new Button({value: 'Ok'}),\n *                         new Button({value: 'Cancel'}),\n *                         new Button({value: 'Exit'})\n *                     ]\n *                 }\n *             ]\n * });\n *\n * list.links.starItem.links.$text.innerText = 'new Text';\n *\n */\nfunction LayoutList ( config ) {\n    var self = this;\n\n    config = config || {};\n\n    /**\n     * Elements handlers\n     */\n    this.handlers = {};\n\n    /**\n     * Hash map of layouts links\n     */\n    this.links = {};\n\n    /**\n     * No data placeholder\n     *\n     * @type {Element}\n     */\n    this.$noData = null;\n\n    //config.className = 'layoutList ' + (config.className || '');\n\n    config.propagate = config.propagate === undefined ? true : config.propagate;\n\n    /**\n     * Set data layout to be fixed to cache HTML elements\n     *\n     * @type {boolean|*}\n     */\n    this.fixedData = config.fixedData || false;\n\n    //config.$body = document.createElement('div');\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    this.$noData = document.createElement('div');\n    this.$noData.className = 'noData hidden';\n\n    List.call(this, config);\n\n    this.$node.appendChild(this.$body);\n    this.$node.appendChild(this.$noData);\n\n    // add handler to focus inner layout\n    this.addListener('click:item', function ( event ) {\n        // focus inner layout of item\n        if ( event.$item.layout.children.length && !event.inner ) {\n            event.$item.layout.children[event.$item.layout.focusIndex].focus();\n        }\n\n        // only focus item if we click mouse\n        if ( event.inner ) {\n            self.focus();\n            self.focusItem(event.$item);\n        }\n        // do click callback if it present\n        if ( self.handlers[event.$item.index] ) {\n            self.handlers[event.$item.index](event.$item);\n        }\n    });\n}\n\n\nLayoutList.prototype = Object.create(List.prototype);\nLayoutList.prototype.constructor = LayoutList;\n\n// set component name\nLayoutList.prototype.name = 'mag-component-layout-list';\n\n\n/*eslint id-length:0*/\n/**\n * Default render function\n *\n * @param {Element} $item in list\n * @param {Object} config to render layout element\n */\nLayoutList.prototype.renderItemDefault = function ( $item, config ) {\n    var layout, layoutConfig,\n        currentNode,\n        currentData,\n        i;\n\n    if ( $item.ready && this.fixedData ) {\n        for ( i = 0; i < config.items.length; i++ ) {\n            currentData = config.items[i];\n            if ( typeof currentData.value === 'string' || currentData.value === undefined ) {\n                currentNode = $item.layout.$node.childNodes[i];\n                currentNode.innerText = currentData.value || '';\n                currentNode.className = currentData.className || '';\n            }\n        }\n    } else {\n        // clear inner content\n        while ( $item.firstChild ) {\n            $item.removeChild($item.firstChild);\n        }\n\n        layoutConfig = {\n            focusable: false,\n            data: config.items\n        };\n\n        if ( config.className ) {\n            layoutConfig.className = config.className;\n        }\n\n        layout = new Layout(layoutConfig);\n\n        if ( config.name ) {\n            this.links[config.name] = layout;\n        }\n\n        $item.appendChild(layout.$node);\n        $item.layout = layout;\n        layout.parent = this;\n        layout.$parentItem = $item;\n\n        // focus layoutList if click on layout\n        layout.addListener('click', function () {\n            // add inner property to set that event comes from inner component\n            layout.parent.emit('click:item', {$item: $item, inner: true});\n        });\n\n        if ( config.click ) {\n            this.handlers[$item.index] = config.click;\n        }\n        // item is rendered\n        $item.ready = true;\n    }\n    $item.value = config.value || {};\n};\n\n\nLayoutList.prototype.setData = function ( config ) {\n    this.links = {};\n    List.prototype.setData.call(this, config);\n\n    if ( config.data && config.data.length ) {\n        this.$noData.classList.add('hidden');\n    } else {\n        this.$noData.classList.remove('hidden');\n    }\n};\n\n\nLayoutList.prototype.init = function ( config ) {\n    var $wrap;\n\n    List.prototype.init.call(this, config);\n    if ( config.noData ) {\n        if ( DEVELOP ) {\n            if ( typeof config.noData !== 'string' && !(config.noData instanceof Element) ) {\n                throw new Error(__filename + ': wrong config.$noData type');\n            }\n        }\n\n        this.$noData.innerHTML = '';\n        if ( config.noData instanceof Element ) {\n            this.$noData.appendChild(config.noData);\n        } else if ( typeof config.noData === 'string' ) {\n            $wrap = document.createElement('div');\n            $wrap.innerText = config.noData;\n            this.$noData.appendChild($wrap);\n        }\n    }\n\n    if ( config.data && config.data.length ) {\n        this.$noData.classList.add('hidden');\n    } else {\n        this.$noData.classList.remove('hidden');\n    }\n};\n\nLayoutList.prototype.renderItem = LayoutList.prototype.renderItemDefault;\n\n\nmodule.exports = LayoutList;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n/* eslint complexity: [error, 37] */\n/* eslint max-lines-per-function: 1 */\n/* eslint no-fallthrough: 1 */\n/* eslint complexity: 1 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n\n/**\n * Mouse click event.\n *\n * @event module:stb/ui/list~List#click:item\n *\n * @type {Object}\n * @property {Element} $item clicked HTML item\n * @property {Event} event click event data\n */\n\n\n/**\n * Base list implementation.\n *\n * Each data item can be either a primitive value or an object with these fields:\n *\n *  Name    | Description\n * ---------|-------------\n *  value   | actual cell value to render\n *  mark    | is it necessary or not to render this cell as marked\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array}    [config.data=[]]     component data to visualize\n * @param {function} [config.render]      method to build each grid cell content\n * @param {function} [config.navigate]    method to move focus according to pressed keys\n * @param {number}   [config.size=5]      amount of visible items on a page\n * @param {number}   [config.viewIndex=0] move view window to this position on init\n * @param {number}   [config.focusIndex]  list item index to make item focused (move view window to this position)\n * @param {boolean}  [config.cycle=true]  allow or not to jump to the opposite side of a list when there is nowhere to go next\n * @param {boolean}  [config.scroll=null] associated ScrollBar component link\n * @param {Object}   [config.provider]    data provider\n *\n * @fires module:stb/ui/list~List#click:item\n */\nfunction List ( config ) {\n    // current execution context\n    //var self = this;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Link to the currently focused DOM element.\n     *\n     * @type {Element}\n     */\n    this.$focusItem = null;\n\n    /**\n     * Position of the visible window to render.\n     *\n     * @type {number}\n     */\n    this.viewIndex = null;\n\n    /**\n     * Component data to visualize.\n     *\n     * @type {Array}\n     */\n    this.data = [];\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Amount of visible items on a page.\n     *\n     * @type {number}\n     */\n    this.size = 5;\n\n    /**\n     * Allow or not to jump to the opposite side of a list when there is nowhere to go next.\n     *\n     * @type {boolean}\n     */\n    this.cycle = false;\n\n    /**\n     * Associated ScrollBar component link.\n     *\n     * @type {ScrollBar}\n     */\n    this.scroll = null;\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    /**\n     * Associated data provider\n     *\n     * @type {Provider}\n     */\n    this.provider = null;\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    //config.className += ' theme-main';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // component setup\n    this.init(config);\n\n    // custom navigation method\n    //if ( config.navigate ) {\n    //    if ( DEVELOP ) {\n    //        if ( typeof config.navigate !== 'function' ) { throw new Error(__filename + ': wrong config.navigate type'); }\n    //    }\n    //    // apply\n    //    this.navigate = config.navigate;\n    //}\n\n    // navigation by keyboard\n    //this.addListener('keydown', this.navigate);\n\n    // navigation by mouse\n    //this.$body.addEventListener('mousewheel', function ( event ) {\n    //    // scrolling by Y axis\n    //    if ( self.type === self.TYPE_VERTICAL && event.wheelDeltaY ) {\n    //        self.move(event.wheelDeltaY > 0 ? 38 : keys.down);\n    //    }\n    //\n    //    // scrolling by X axis\n    //    if ( self.type === self.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n    //        self.move(event.wheelDeltaX > 0 ? 37 : 39);\n    //    }\n    //});\n}\n\n\n// inheritance\nList.prototype = Object.create(Component.prototype);\nList.prototype.constructor = List;\n\n// set component name\nList.prototype.name = 'mag-component-list';\n\nList.prototype.TYPE_VERTICAL   = 1;\nList.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Fill the given item with data.\n *\n * @param {Element} $item item DOM link\n * @param {*} data associated with this item data\n */\nList.prototype.renderItemDefault = function ( $item, data ) {\n    $item.innerText = data.value;\n};\n\n\n/**\n * Method to build each list item content.\n * Can be redefined to provide custom rendering.\n *\n * @type {function}\n */\nList.prototype.renderItem = List.prototype.renderItemDefault;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nList.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse wheel events.\n     *\n     * @param {Event} event generated event\n     */\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        if ( this.type === this.TYPE_VERTICAL && event.wheelDeltaY ) {\n            this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n        }\n\n        // scrolling by X axis\n        if ( this.type === this.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n            this.move(event.wheelDeltaX > 0 ? keys.left : keys.right);\n        }\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n            case keys.right:\n            case keys.left:\n            case keys.pageUp:\n            case keys.pageDown:\n            case keys.home:\n            case keys.end:\n                // cursor move only on arrow keys\n                this.move(event.code);\n                break;\n            case keys.enter:\n                // there are some listeners\n                if ( this.events['click:item'] && this.$focusItem ) {\n                    // notify listeners\n                    this.emit('click:item', {$item: this.$focusItem, event: event});\n                }\n                break;\n        }\n    }\n};\n\n\n/**\n * Default method to move focus according to pressed keys.\n *\n * @param {Object} event generated event source of movement\n */\n//List.prototype.navigateDefault = function ( event ) {\n//    switch ( event.code ) {\n//        case 38:\n//        case 40:\n//        case 39:\n//        case 37:\n//        case 33:\n//        case 34:\n//        case 36:\n//        case 35:\n//            // cursor move only on arrow keys\n//            this.move(event.code);\n//            break;\n//        case 13:\n//            // there are some listeners\n//            if ( this.events['click:item'] ) {\n//                // notify listeners\n//                this.emit('click:item', {$item: this.$focusItem, event: event});\n//            }\n//            break;\n//    }\n//};\n\n\n/**\n * Current active method to move focus according to pressed keys.\n * Can be redefined to provide custom navigation.\n *\n * @type {function}\n */\n//List.prototype.navigate = List.prototype.navigateDefault;\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var idx, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( idx = 0; idx < data.length; idx++ ) {\n        // cell value\n        item = data[idx];\n        // primitive value\n        if ( typeof item !== 'object' ) {\n            // wrap with defaults\n            item = data[idx] = {\n                value: data[idx]\n            };\n        }\n\n        if ( DEVELOP ) {\n            //if ( !('value' in item) ) { throw new Error(__filename + ': field \"value\" is missing'); }\n            if ( ('mark' in item) && Boolean(item.mark) !== item.mark ) {\n                throw new Error(__filename + ': item.mark must be boolean');\n            }\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.init = function ( config ) {\n    var self     = this,\n        currSize = this.$body.children.length,\n        /**\n         * Item mouse click handler.\n         *\n         * @param {Event} event click event data\n         *\n         * @this Element\n         *\n         * @fires module:stb/ui/list~List#click:item\n         */\n        onClick = function ( event ) {\n            if ( this.data ) {\n                self.focusItem(this);\n\n                // there are some listeners\n                if ( self.events['click:item'] ) {\n                    // notify listeners\n                    self.emit('click:item', {$item: this, event: event});\n                }\n            }\n        },\n        item, idx;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // apply cycle behaviour\n    if ( config.cycle !== undefined ) { this.cycle = config.cycle; }\n\n    // apply ScrollBar link\n    if ( config.scroll ) { this.scroll = config.scroll; }\n\n    // apply data provider\n    if ( config.provider ) { this.provider = config.provider; }\n\n\n    // custom render method\n    if ( config.render ) {\n        if ( DEVELOP ) {\n            if ( typeof config.render !== 'function' ) {\n                throw new Error(__filename + ': wrong config.render type');\n            }\n        }\n\n        // apply\n        this.renderItem = config.render;\n    }\n\n    // list items amount on page\n    if ( config.size ) {\n        if ( DEVELOP ) {\n            if ( Number(config.size) !== config.size ) {\n                throw new Error(__filename + ': config.size must be a number');\n            }\n            if ( config.size <= 0 ) {\n                throw new Error(__filename + ': config.size should be positive');\n            }\n        }\n\n        // apply\n        this.size = config.size;\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( name ) {\n            self.events[name] = null;\n            self.addListener(name, config.events[name]);\n        });\n    }\n\n    // geometry has changed or initial draw\n    if ( this.size !== currSize ) {\n        // non-empty list\n        if ( currSize > 0 ) {\n            // clear old items\n            this.$body.innerText = null;\n        }\n\n        // create new items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            item = document.createElement('div');\n            item.index = idx;\n            //item.className = 'item theme-list-item';\n            item.className = 'item';\n\n            item.addEventListener('click', onClick);\n            this.$body.appendChild(item);\n        }\n    }\n\n    if ( this.provider ) {\n        if ( this.provider.blocked ) {\n            return;\n        }\n\n        this.provider.get( null, function ( error, data ) {\n            if ( error ) {\n                if ( self.events['data:error'] ) {\n                    /**\n                     * Provider get error while take new data\n                     *\n                     * @event module:stb/ui/list~List#data:error\n                     */\n                    self.emit('data:error', error);\n                }\n            } else {\n                if ( data ) {\n                    config.data = data;\n                    self.setData(config);\n                    if ( self.scroll ) {\n                        self.scroll.init({\n                            realSize: self.provider.maxCount,\n                            viewSize: self.provider.size,\n                            value: self.provider.head + self.provider.pos\n                        });\n                    }\n                }\n                if ( self.events['data:get'] ) {\n                    /**\n                     * Provider request new data\n                     *\n                     * @event module:stb/ui/list~List#data:get\n                     *\n                     * @type {Object}\n                     */\n                    self.emit('data:get');\n                }\n            }\n        });\n    } else if ( config.data ) {\n        this.setData(config);\n    }\n};\n\n/**\n * Set data and render inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.setData = function ( config ) {\n    // apply list of items\n\n    if ( config.data ) {\n        if ( DEVELOP ) {\n            if ( !Array.isArray(config.data) ) { throw new Error(__filename + ': wrong config.data type'); }\n        }\n        // prepare user data\n        this.data = normalize(config.data);\n    }\n\n    // view window position\n    if ( DEVELOP ) {\n        if ( config.viewIndex !== undefined ) {\n            if ( Number(config.viewIndex) !== config.viewIndex ) {\n                throw new Error(__filename + ': config.viewIndex must be a number');\n            }\n            if ( config.viewIndex < 0 ) {\n                throw new Error(__filename + ': config.viewIndex should be positive');\n            }\n        }\n    }\n\n    // reset current view window position\n    this.viewIndex = null;\n\n    if ( this.$focusItem ) {\n        this.blurItem(this.$focusItem);\n    }\n\n    if ( this.scroll ) {\n        if ( this.provider ) {\n            if ( this.scroll.realSize !== this.provider.maxCount ) {\n                this.scroll.init({\n                    realSize: this.provider.maxCount,\n                    viewSize: this.provider.size,\n                    value: this.provider.head + this.provider.pos\n                });\n            }\n        } else {\n            this.scroll.init({\n                realSize: this.data.length,\n                viewSize: this.size,\n                value: config.viewIndex || 0\n            });\n        }\n    }\n\n    // set focus item\n    if ( config.focusIndex !== undefined && this.data.length ) {\n        if ( DEVELOP ) {\n            if ( Number(config.focusIndex) !== config.focusIndex ) {\n                throw new Error(__filename + ': config.focusIndex must be a number');\n            }\n            if ( config.focusIndex < 0 ) {\n                throw new Error(__filename + ': config.focusIndex should be positive');\n            }\n            // if ( config.focusIndex > this.data.length - 1 ) {\n            //     throw new Error(__filename + ': config.focusIndex should be less than data size');\n            // }\n        }\n\n        // jump to the necessary item\n        this.focusIndex(config.focusIndex);\n    } else {\n        // go to the first page\n        this.renderView(config.viewIndex || 0);\n    }\n};\n\n\n/**\n * Shift the visible view window event.\n *\n * @event module:stb/ui/list~List#move:view\n *\n * @type {Object}\n * @property {number} prevIndex previous view window position\n * @property {number} currIndex current view window position\n */\n\n\n/**\n * Draw the visible window.\n *\n * @param {number} index start position to render\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#move:view\n */\nList.prototype.renderView = function ( index ) {\n    var $item, idx, itemData, prevIndex, currIndex;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be more than zero');\n        }\n        // if ( index >= this.data.length ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // has the view window position changed\n    if ( this.viewIndex !== index ) {\n        // save for emit\n        prevIndex = this.viewIndex;\n        // sync global pointer\n        this.viewIndex = currIndex = index;\n\n        // rebuild all visible items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            // shortcuts\n            $item    = this.$body.children[idx];\n            itemData = this.data[index];\n\n            // real item or stub\n            if ( itemData ) {\n                // correct inner data/index and render\n                $item.data  = itemData;\n                $item.index = index;\n                this.renderItem($item, itemData);\n\n                // apply CSS\n                if ( itemData.mark ) {\n                    $item.classList.add('mark');\n                } else {\n                    $item.classList.remove('mark');\n                }\n            } else {\n                // nothing to render\n                $item.data = $item.index = undefined;\n                $item.innerHTML = '&nbsp;';\n                $item.ready = false;\n            }\n            index++;\n        }\n\n        // there are some listeners\n        if ( this.events['move:view'] ) {\n            // notify listeners\n            this.emit('move:view', {prevIndex: prevIndex, currIndex: currIndex});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            this.emit('select:item', {$item: $item});\n        }\n\n        // update a linked scroll component\n        if ( this.scroll ) {\n            this.scroll.scrollTo(this.provider ? this.provider.head + this.provider.pos : this.viewIndex);\n        }\n\n        // full rebuild\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Move focus to the given direction.\n *\n * @param {number} direction arrow key code\n *\n * @fires module:stb/ui/list~List#cycle\n * @fires module:stb/ui/list~List#overflow\n */\nList.prototype.move = function ( direction ) {\n    var self = this,\n        force = false;\n\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(direction) !== direction ) {\n            throw new Error(__filename + ': direction must be a number');\n        }\n    }\n\n    // empty list\n    if ( !this.data.length ) {\n        return;\n    }\n\n    switch ( direction ) {\n        case keys.left:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.up:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index > 0 ) {\n                    if ( this.$focusItem === this.$body.firstChild ) {\n                        this.renderView(this.viewIndex - 1);\n                    } else {\n                        this.focusItem(this.$focusItem.previousSibling);\n                    }\n                } else if ( this.provider ) {\n                    if ( this.provider.blocked ) {\n                        return;\n                    }\n\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the end of the list\n                        this.move(keys.end);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.right:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.down:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index < this.data.length - 1 ) {\n                    if ( this.$focusItem === this.$body.lastChild ) {\n                        this.renderView(this.viewIndex + 1);\n                    } else {\n                        this.focusItem(this.$focusItem.nextSibling);\n                    }\n                } else if ( this.provider ) {\n                    if ( this.provider.blocked ) {\n                        return;\n                    }\n\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the beginning of the list\n                        this.move(keys.home);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.pageUp:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n\n                return;\n            }\n            if ( this.viewIndex < this.size ) {\n                // first page\n                this.renderView(0);\n            } else {\n                // second page and further\n                this.renderView(this.viewIndex - this.size + 1);\n            }\n\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.pageDown:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            // data is bigger then one page\n            if ( this.data.length > this.size ) {\n                // determine jump size\n                if ( this.viewIndex > this.data.length - this.size * 2 ) {\n                    // last page\n                    this.renderView(this.data.length - this.size);\n                } else {\n                    // before the last page\n                    this.renderView(this.viewIndex + this.size - 1);\n                }\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n        case keys.home:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n                break;\n            }\n            this.renderView(0);\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.end:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            if ( this.data.length > this.size ) {\n                this.renderView(this.data.length - this.size);\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n    }\n};\n\n\n/**\n * Highlight the given DOM element as focused.\n * Remove focus from the previously focused item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.focusItem = function ( $item ) {\n    var $prev = this.$focusItem;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n    }\n\n    // different element\n    if ( $item && $prev !== $item ) {\n        if ( DEVELOP ) {\n            if ( !($item instanceof Element) ) {\n                throw new Error(__filename + ': wrong $item type');\n            }\n            if ( $item.parentNode !== this.$body ) {\n                throw new Error(__filename + ': wrong $item parent element');\n            }\n        }\n\n        // some item is focused already\n        if ( $prev !== null ) {\n            if ( DEVELOP ) {\n                if ( !($prev instanceof Element) ) {\n                    throw new Error(__filename + ': wrong $prev type');\n                }\n            }\n\n            // style\n            $prev.classList.remove('focus');\n            //$prev.classList.remove('theme-focus');\n\n            // there are some listeners\n            if ( this.events['blur:item'] ) {\n                /**\n                 * Remove focus from an element.\n                 *\n                 * @event module:stb/ui/list~List#blur:item\n                 *\n                 * @type {Object}\n                 * @property {Element} $item previously focused HTML element\n                 */\n                this.emit('blur:item', {$item: $prev});\n            }\n        }\n        // reassign\n        this.$focusItem = $item;\n\n        this.$focusItem.data = this.data[this.$focusItem.index];\n\n        // correct CSS\n        $item.classList.add('focus');\n        //$item.classList.add('theme-focus');\n\n        // there are some listeners\n        if ( this.events['focus:item'] ) {\n            /**\n             * Set focus to a DOM element.\n             *\n             * @event module:stb/ui/list~List#focus:item\n             *\n             * @type {Object}\n             * @property {Element} $prev old/previous focused HTML element\n             * @property {Element} $curr new/current focused HTML element\n             */\n            this.emit('focus:item', {$prev: $prev, $curr: $item});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            /**\n             * Set focus to a list item.\n             *\n             * @event module:stb/ui/list~List#select:item\n             *\n             * @type {Object}\n             * @property {Element} $item new/current focused item\n             */\n            this.emit('select:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Highlight the given DOM element as blur.\n * Remove focus from the item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.blurItem = function ( $item ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) { throw new Error(__filename + ': wrong arguments number'); }\n    }\n\n    // different element\n    if ( $item ) {\n        if ( $item === this.$focusItem ) {\n            this.$focusItem = null;\n        }\n\n        $item.classList.remove('focus');\n        //$item.classList.remove('theme-focus');\n\n        // there are some listeners\n        if ( this.events['blur:item'] ) {\n            /**\n             * Remove focus from an element.\n             *\n             * @event module:stb/ui/list~List#blur:item\n             *\n             * @type {Object}\n             * @property {Element} $item previously focused HTML element\n             */\n            this.emit('blur:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Set the given item focused by item index.\n *\n * @param {number} index item data index\n */\nList.prototype.focusIndex = function ( index ) {\n    var viewIndex = this.viewIndex || 0;\n\n    if ( DEVELOP ) {\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be positive');\n        }\n        // if ( index > this.data.length - 1 ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // determine direction\n    if ( index >= viewIndex + this.size ) {\n        // check range\n        index = index < this.data.length - 1 ? index : this.data.length - 1;\n        // move down\n        this.renderView(index - this.size + 1);\n        this.focusItem(this.$body.lastChild);\n    } else if ( index < viewIndex ) {\n        // check range\n        index = index > 0 ? index : 0;\n        // move up\n        this.renderView(index);\n        this.focusItem(this.$body.firstChild);\n    } else {\n        // no move\n        if ( this.viewIndex === null ) {\n            // first attempt\n            this.renderView(0);\n        }\n        this.focusItem(this.$body.children[index - viewIndex]);\n    }\n};\n\n\n/**\n * Set item state and appearance as marked.\n *\n * @param {Node|Element} $item element to focus\n * @param {boolean} state true - marked, false - not marked\n */\nList.prototype.markItem = function ( $item, state ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 2 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !($item instanceof Element) ) {\n            throw new Error(__filename + ': wrong $item type');\n        }\n        if ( $item.parentNode !== this.$body ) {\n            throw new Error(__filename + ': wrong $item parent element');\n        }\n        if ( Boolean(state) !== state ) {\n            throw new Error(__filename + ': state must be boolean');\n        }\n    }\n\n    // correct CSS\n    if ( state ) {\n        $item.classList.add('mark');\n    } else {\n        $item.classList.remove('mark');\n    }\n\n    // apply flag\n    $item.data.mark = state;\n};\n\n\n// public\nmodule.exports = List;\n","/**\n * @license The MIT License (MIT)\n * @copyright Dmitry Fedotov <bas.jsdev@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\nvar StbComponentModal = require('stb-component-modal'),\n    Component         = require('stb-component'),\n    keys              = require('stb-keys');\n\n\n/**\n * Modal window implementation.\n *\n * @constructor\n * @extends StbComponentModal\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {Object} [config.title] message title\n * @param {Object} [config.className] message classname\n * @param {Object} [config.icon] icon at header\n * @param {Object} [config.visible] visibility flag\n * @param {Object} [config.children] content (inherited from the parent)\n *\n * @example\n * var modalSort = new Modal({\n *     visible: false,\n *     title: 'sort',\n *     events: {\n *         show: function () {\n *             list.focus();\n *         },\n *         hide: function () {\n *             page.panelSet.focus();\n *         }\n *     },\n *     children: [list = new RadioList({})]\n * });\n * page.add(modalSort);\n */\nfunction Modal ( config ) {\n    var self = this,\n        $overlay, $body, onkeydown;\n\n    // sanitize\n    config = config || {};\n    config.events = config.events || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.icon && typeof config.icon !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.icon');\n        }\n        if ( config.title && typeof config.title !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.title');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body ) {\n            throw new Error(__filename + ': config.$body should not be provided in Modal manually');\n        }\n    }\n\n    // usually can't accept focus\n    config.focusable = config.focusable || false;\n    // hide by default\n    config.visible = config.visible || false;\n    // add default close by click\n    config.events.click = config.events.click || function () { self.hide(); };\n    // add close window behavior, when pushed a back button or a menu button\n    onkeydown = config.events.keydown;\n    config.events.keydown = function ( event ) {\n        if ( onkeydown ) {\n            onkeydown.call(this, event);\n        }\n        if ( event.code === keys.back || event.code === keys.menu ) {\n            event.stop = true;\n            self.hide();\n        }\n    };\n\n    // parent constructor call\n    StbComponentModal.call(this, config);\n\n    // add table-cell wrappers\n    this.$node.appendChild(document.createElement('div'));\n    this.$node.firstChild.classList.add('alignBox');\n    this.$node.firstChild.appendChild(document.createElement('div'));\n\n    // add header div\n    this.$header = document.createElement('div');\n    this.$header.className = 'header';\n\n    // insert caption placeholder\n    this.$text = this.$header.appendChild(document.createElement('div'));\n    this.$text.classList.add('text');\n    this.$text.innerText = config.title || '';\n\n    // optional icon\n    if ( config.icon ) {\n        this.$icon = this.$header.appendChild(document.createElement('div'));\n        this.$icon.className = 'icon ' + config.icon;\n    }\n\n    $overlay = document.createElement('div');\n    $overlay.className = 'overlay';\n\n    // add to dom\n    // add body wrapper\n    $body = this.$body.parentNode.removeChild(this.$body);\n    this.$node.firstChild.firstChild.appendChild(this.$header);\n    this.$node.firstChild.firstChild.appendChild($body);\n    this.$node.firstChild.firstChild.appendChild($overlay);\n}\n\n\n// inheritance\nModal.prototype = Object.create(StbComponentModal.prototype);\nModal.prototype.constructor = Modal;\n\n// set component name\nModal.prototype.name = 'mag-component-modal';\n\n\n/**\n * Redefine default component focus to set additional css\n */\nModal.prototype.focus = function () {\n    this.$node.classList.add('active');\n    StbComponentModal.prototype.focus.call(this);\n    if ( this.children[0] && this.children[0] instanceof Component ) {\n        this.children[0].focus();\n    }\n};\n\n\n/**\n * Blur message\n */\nModal.prototype.blur = function () {\n    this.$node.classList.remove('active');\n    StbComponentModal.prototype.blur.call(this);\n};\n\n\n// public\nmodule.exports = Modal;\n","/**\n * Main application entry point.\n */\n\n'use strict';\n\nvar app = require('mag-app');\n\n\napp.once('load', function () {\n    require('spa-gettext').load({name: core.environment.language}, function () {\n        app.radioBackend = core.plugins.radioBackend;\n\n        require('./modules/saver').init(true, false);\n\n        app.pages = {\n            main: require('./pages/main')\n        };\n\n        app.radioBackend.getRadioChannels({favorite: app.state.favoritesActive}, function ( error, data ) {\n            if ( !error ) {\n                app.route(app.pages.main, data);\n                app.ready();\n            }\n        });\n    });\n});\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app    = require('spa-app/lib/core'),\n    events = require('spa-app/lib/events');\n\n\n// get instance\nwindow.core = window.parent.getCoreInstance(window, app);\n\n// shims\nrequire('stb-shim-classlist');\n\n// apply geometry\nrequire('stb-app/lib/metrics');\n\n// load sdk css\nrequire('stb-app/lib/css')('sdk');\n\n// load theme css\nrequire('./css');\n\n// load app css\nrequire('stb-app/lib/css')('app');\n\n/**\n * Specify platform name\n *\n * @type {string}\n */\napp.platform = 'mag';\n\n/**\n * Show app.\n */\napp.ready = function () {\n    // if ( this.events['show'] ) {\n    //     this.emit('show');\n    // }\n    window.core.call('app:ready');\n};\n\n\n/**\n * Exit from app.\n * Destroy all application instance.\n * If callback function provided, and callback returns boolean 'true', application will stay alive.\n *\n * @fires module:/stb/app#exit\n */\napp.exit = function () {\n    if ( app.events['exit'] ) {\n        app.emit('exit');\n    }\n\n    core.call('exit');\n};\n\n\nevents.load = function ( event ) {\n    //window.core = window.parent.getCoreInstanse(window, app);\n    document.body.setAttribute('platform', app.platform);\n\n    if ( core.ready ) {\n        if ( app.events['load'] ) {\n            // notify listeners\n            app.emit('load', {});\n        }\n    } else {\n        core.once('load', function () {\n            //core.ready = true;\n            if ( app.events[event.type] ) {\n                // notify listeners\n                app.emit(event.type, event);\n            }\n        });\n    }\n};\n\n\n// activate development mechanisms and tools\nif ( DEVELOP ) {\n    //require('stb-develop');\n    require('./develop/main');\n} else {\n    // disable context menu\n    events.contextmenu = function ( event ) {\n        event.preventDefault();\n    };\n}\n\n\n//apply DOM events\nObject.keys(events).forEach(function ( name ) {\n    window.addEventListener(name, events[name]);\n});\n\n\n// new way of string handling\n// all strings are in UTF-16\n// since stbapp 2.18\n// if ( window.gSTB && gSTB.SetNativeStringMode ) {\n//     /* eslint new-cap: 0 */\n//     gSTB.SetNativeStringMode(true);\n// }\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nmodule.exports = {\n    /**\n     * Parse the given location search string into object.\n     *\n     * @param {string} query string to parse\n     *\n     * @return {Object.<string, string>} result data\n     */\n    parse: function ( query ) {\n        var data = {};\n\n        // parse and fill the data\n        query.split('&').forEach(function ( part ) {\n            part = part.split('=');\n            // valid number on params\n            if ( part.length === 2 ) {\n                data[part[0]] = decodeURIComponent(part[1]);\n            }\n        });\n\n        return data;\n    },\n\n\n    /**\n     * Make uri query part in a string form.\n     *\n     * @param {Object} params data to stringify\n     *\n     * @return {string} query string\n     */\n    stringify: function ( params ) {\n        var data = [];\n\n        Object.keys(params).forEach(function ( name ) {\n            data.push(name + '=' + encodeURIComponent(params[name]));\n        });\n\n        return data.join('&');\n    }\n};\n","/**\n * Global application configuration.\n * Can store run-time options, API urls, paths, execution flags and so on.\n * Automatically loaded on application initialization and available as app.config.\n */\n\n'use strict';\n\nmodule.exports = {\n    uiDefaults: {\n        searchRequest:   '',\n        sortOrder:       'number',\n        favoritesActive: false\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('./core');\n\n\n// public\nmodule.exports = {\n    DOMContentLoaded: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // there are some listeners\n        if ( app.events['dom'] ) {\n            // notify listeners\n            app.emit('dom', event);\n            //console.log('DOMContentLoaded');\n        }\n    },\n\n    /**\n     * The load event is fired when a resource and its dependent resources have finished loading.\n     *\n     * Control flow:\n     *   1. Global handler.\n     *   2. Each page handler.\n     *   3. Application DONE event.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/load\n     *\n     * @param {Event} event generated object with event data\n     */\n    load: function ( event ) {\n        //var path;\n\n        //debug.event(event);\n        //console.log(event);\n\n        // time mark\n        //app.data.time.load = event.timeStamp;\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' load', 'green');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n\n        // time mark\n        //app.data.time.done = +new Date();\n\n        // everything is ready\n        // and there are some listeners\n        // if ( app.events['done'] ) {\n        //     // notify listeners\n        //     app.emit('done', event);\n        // }\n    },\n\n    /**\n     * The unload event is fired when the document or a child resource is being unloaded.\n     *\n     * Control flow:\n     *   1. Each page handler.\n     *   2. Global handler.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/unload\n     *\n     * @param {Event} event generated object with event data\n     */\n    unload: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' unload', 'red');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n    },\n\n    /**\n     * The error event is fired when a resource failed to load.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/error\n     *\n     * @param {Event} event generated object with event data\n     */\n    error: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n        //debug.fail('app event: ' + event.message, event, {tags: [event.type, 'event']});\n        console.error('app event: ' + event.message, event);\n    },\n\n    /**\n     * The keydown event is fired when a key is pressed down.\n     * Set event.stop to true in order to prevent bubbling.\n     *\n     * Control flow:\n     *   1. Current active component on the active page.\n     *   2. Current active page itself.\n     *   3. Application.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keydown\n     *\n     * @param {Event} event generated object with event data\n     */\n    keydown: function ( event ) {\n        var page = app.activePage,\n            eventLocal = {\n                code: event.keyCode,\n                stop: false\n            },\n            activeComponent;\n\n        if ( DEVELOP ) {\n            if ( !page ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        // filter phantoms\n        //if ( event.keyCode === 0 ) { return; }\n\n        // combined key code\n        //event.code = event.keyCode;\n\n        // apply key modifiers\n        if ( event.ctrlKey )  { eventLocal.code += 'c'; }\n        if ( event.altKey )   { eventLocal.code += 'a'; }\n        if ( event.shiftKey ) { eventLocal.code += 's'; }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + eventLocal.code, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + eventLocal.code, event);\n\n        // page.activeComponent can be set to null in event handles\n        activeComponent = page.activeComponent;\n\n        // current component handler\n        if ( activeComponent && activeComponent !== page ) {\n            // component is available and not page itself\n            if ( activeComponent.events[event.type] ) {\n                // there are some listeners\n                activeComponent.emit(event.type, eventLocal, event);\n            }\n\n            // todo: bubble event recursively\n            // bubbling\n            if (\n                !eventLocal.stop &&\n                activeComponent.propagate &&\n                activeComponent.parent &&\n                activeComponent.parent.events[event.type]\n            ) {\n                activeComponent.parent.emit(event.type, eventLocal, event);\n            }\n        }\n\n        // page handler\n        if ( !eventLocal.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, eventLocal, event);\n            }\n\n            // global app handler\n            if ( !event.stop ) {\n                // not prevented\n                if ( app.events[event.type] ) {\n                    // there are some listeners\n                    app.emit(event.type, eventLocal, event);\n                }\n            }\n        }\n\n        //// suppress non-printable keys in stb device (not in your browser)\n        //if ( app.data.host && keyCodes[event.code] ) {\n        //    event.preventDefault();\n        //}\n    },\n\n    /**\n     * The keypress event is fired when press a printable character.\n     * Delivers the event only to activeComponent at active page.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keypress\n     *\n     * @param {Event} event generated object with event data\n     * @param {string} event.char entered character\n     */\n    keypress: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + event.key, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + event.key, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n    },\n\n    /**\n     * The click event is fired when a pointing device button (usually a mouse button) is pressed and released on a single element.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/click\n     *\n     * @param {Event} event generated object with event data\n     */\n    /*click: function ( event ) {\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n     },*/\n\n    /**\n     * The contextmenu event is fired when the right button of the mouse is clicked (before the context menu is displayed),\n     * or when the context menu key is pressed (in which case the context menu is displayed at the bottom left of the focused\n     * element, unless the element is a tree, in which case the context menu is displayed at the bottom left of the current row).\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/contextmenu\n     *\n     * @param {Event} event generated object with event data\n     */\n    // contextmenu: function ( event ) {\n    //     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n    //\n    //     if ( !DEVELOP ) {\n    //         // disable right click in release mode\n    //         event.preventDefault();\n    //     }\n    // },\n\n    /*contextmenu: function ( event ) {\n     //var kbEvent = {}; //Object.create(document.createEvent('KeyboardEvent'));\n\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n\n     //kbEvent.type    = 'keydown';\n     //kbEvent.keyCode = 8;\n\n     //debug.log(kbEvent.type);\n\n     //globalEventListenerKeydown(kbEvent);\n     //var event = document.createEvent('KeyboardEvent');\n     //event.initEvent('keydown', true, true);\n\n     //document.dispatchEvent(kbEvent);\n\n     if ( !DEVELOP ) {\n     // disable right click in release mode\n     event.preventDefault();\n     }\n     },*/\n\n    /**\n     * The wheel event is fired when a wheel button of a pointing device (usually a mouse) is rotated.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel\n     *\n     * @param {Event} event generated object with event data\n     */\n    mousewheel: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n\n        // page handler\n        if ( !event.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, event);\n            }\n        }\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint-disable */\n\n'use strict';\n\n\nif ( !document.documentElement.classList ) {\n    var prototype = Array.prototype,\n        indexOf   = prototype.indexOf,\n        slice     = prototype.slice,\n        push      = prototype.push,\n        splice    = prototype.splice,\n        join      = prototype.join;\n\n    window.DOMTokenList = function ( el ) {\n        this._element = el;\n        if (el.className !== this._classCache) {\n            this._classCache = el.className;\n            if (!this._classCache) { return; }\n            var classes = this._classCache.replace(/^\\s+|\\s+$/g,'').split(/\\s+/),\n                i;\n            for (i = 0; i < classes.length; i++) {\n                push.call(this, classes[i]);\n            }\n        }\n    };\n\n    window.DOMTokenList.prototype = {\n        add: function ( token ) {\n            if(this.contains(token)) { return; }\n            push.call(this, token);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        contains: function ( token ) {\n            return indexOf.call(this, token) !== -1;\n        },\n\n        item: function ( index ) {\n            return this[index] || null;\n        },\n\n        remove: function ( token ) {\n            var i = indexOf.call(this, token);\n            if (i === -1) {\n                return;\n            }\n            splice.call(this, i, 1);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        toString: function () {\n            return join.call(this, ' ');\n        },\n\n        toggle: function ( token ) {\n            if (!this.contains(token)) {\n                this.add(token);\n            } else {\n                this.remove(token);\n            }\n            return this.contains(token);\n        }\n    };\n\n    Object.defineProperty(Element.prototype, 'classList', {\n        get: function () {\n            return new window.DOMTokenList(this);\n        }\n    });\n}\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    metrics = require('app:metrics');\n\n\n// global link\napp.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\napp.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\napp.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n\n// public\n//module.exports = app;\n","/**\n * Application geometry options.\n * Automatically loaded on application initialization and available as app.metrics.\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    480: {\n        // screen base dimension\n        height: 480,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  32,\n        availLeft:   48\n        // project-specific vars\n        // put here ...\n    },\n\n    576: {\n        // screen base dimension\n        height: 576,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  26,\n        availLeft:   54\n        // project-specific vars\n        // put here ...\n    },\n\n    720: {\n        // screen base dimension\n        height: 720,\n        width:  1280,\n        // safe zone margins\n        availTop:    30,\n        availBottom: 30,\n        availRight:  40,\n        availLeft:   40\n        // project-specific vars\n        // put here ...\n    },\n\n    1080: {\n        // screen base dimension\n        height: 1080,\n        width:  1920,\n        // safe zone margins\n        availTop:    45,\n        availBottom: 45,\n        availRight:  60,\n        availLeft:   60\n        // project-specific vars\n        // put here ...\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core'),\n    //metrics = require('app:metrics'),\n    linkCSS;\n\n\n//window.core = window.parent.getCoreInstance(window, app);\n\n\nlinkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = window.core.theme.path + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);\n\n\n// public\nmodule.exports = linkCSS;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    Gettext = require('cjs-gettext'),\n    loader  = new Emitter();\n\n\n/**\n * Wrap the given data with gettext instance\n * and export methods to the global scope.\n *\n * @param {Object} [data] localization data\n *\n * @return {Gettext} gettext instance\n */\nfunction prepare ( data ) {\n    var gettext = new Gettext(data);\n\n    // make it global\n    window.gettext  = window._ = gettext.gettext;\n    window.pgettext = gettext.pgettext;\n    window.ngettext = gettext.ngettext;\n\n    return gettext;\n}\n\n\n/**\n * Main application language\n */\nloader.defaultLanguage = 'en';\n\n\n/**\n * Simple gettext implementation.\n *\n * @param {Object} config options\n * @param {string} [config.path=lang] relative path to project root\n * @param {string} config.name language name\n * @param {string} [config.ext=json] language file extension\n * @param {function} callback hook on ready\n *\n * @return {boolean} flag is ajax request was made\n */\nloader.load = function ( config, callback ) {\n    var xhr;\n\n    if ( DEVELOP ) {\n        if ( !config.name || typeof config.name !== 'string' ) {\n            throw new Error(__filename + ': config.name must be a nonempty string');\n        }\n        if ( typeof callback !== 'function' ) {\n            throw new Error(__filename + ': wrong callback type');\n        }\n    }\n\n    // defaults\n    config.ext  = config.ext  || 'json';\n    config.path = config.path || 'lang';\n\n    // is it necessary to request a localization file?\n    if ( config.name === loader.defaultLanguage ) {\n        // no\n        prepare();\n        callback(null);\n\n        return false;\n    }\n\n    // yes\n    xhr = new XMLHttpRequest();\n\n    xhr.onload = function () {\n        var json;\n\n        try {\n            json = JSON.parse(xhr.responseText);\n\n            prepare(json);\n            callback(null);\n\n            // there are some listeners\n            if ( loader.events['load'] ) {\n                // notify listeners\n                loader.emit('load');\n            }\n        } catch ( error ) {\n            xhr.onerror(error);\n        }\n    };\n\n    xhr.ontimeout = xhr.onerror = function ( error ) {\n        prepare();\n        callback(error);\n\n        // there are some listeners\n        if ( loader.events['error'] ) {\n            // notify listeners\n            loader.emit('error', error);\n        }\n    };\n\n    xhr.open('GET', config.path + '/' + config.name + '.' + config.ext, true);\n    xhr.send(null);\n\n    return true;\n};\n\n\n// public\nmodule.exports = loader;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Translations handler.\n *\n * @constructor\n *\n * @param {Object} config init parameters\n */\nfunction Gettext ( config ) {\n    var data, meta;\n\n    // sanitize\n    config   = config || {};\n    data     = config.data || {};\n    data[''] = data[''] || {};\n\n    // shortcut\n    meta = config.meta;\n\n    /**\n     * Display the native language translation of a textual message.\n     *\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.gettext = function ( msgId ) {\n        return data[''][msgId] || msgId;\n    };\n\n\n    /**\n     * The \"p\" in \"pgettext\" stands for \"particular\": fetches a particular translation of the textual message.\n     *\n     * @param {string} context message context\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.pgettext = function ( context, msgId ) {\n        return data[context] && data[context][msgId] || msgId;\n    };\n\n\n    /**\n     * Display the native language translation of a textual message whose grammatical form depends on a number.\n     *\n     * @param {string} msgId textual message in a singular form\n     * @param {string} plural textual message in a plural form\n     * @param {number} value message number\n     *\n     * @return {string} translated text\n     */\n    this.ngettext = function ( msgId, plural, value ) {\n        /* eslint no-unused-vars: 0 */\n        /* eslint no-eval: 0 */\n        /* eslint id-length: 0 */\n        var n, evalResult;\n\n        if ( DEVELOP ) {\n            if ( Number(value) !== value ) {\n                throw new Error(__filename + ': value must be a number');\n            }\n        }\n\n        if ( data && meta && data[''][msgId] ) {\n            evalResult = eval('n = ' + value + '; ' + meta.plural);\n\n            if ( typeof evalResult === 'boolean' ) {\n                evalResult = +evalResult;\n            }\n\n            // translation\n            return data[''][msgId][evalResult];\n        }\n\n        // english\n        return value === 1 ? msgId : plural;\n    };\n}\n\n\n// correct constructor name\nGettext.prototype.constructor = Gettext;\n\n\n// public\nmodule.exports = Gettext;\n","/**\n * Save data and app state.\n *\n * @module saver\n */\n\n'use strict';\n\nvar app        = require('mag-app'),\n    uiDefaults = app.config.uiDefaults;\n\n\n/**\n * Save app state.\n */\nfunction saveState () {\n    Object.keys(app.state).forEach(function ( state ) {\n        if ( app.state[state] === uiDefaults[state] ) {\n            delete app.state[state];\n        }\n    });\n\n    core.state = app.state;\n}\n\n\n/**\n * Initialize saver for working with page.\n *\n * @param {boolean} saveStateOn - switcher for specifying if saving state is enabled\n * @param {boolean} saveDataOn - switcher for specifying if saving data is enabled\n *\n * @return {boolean} exit status\n */\nfunction init ( saveStateOn, saveDataOn ) {\n    core.state = core.state || {};\n    app.state  = {};\n\n    // restore state\n    Object.keys(uiDefaults).forEach(function ( state ) {\n        if ( saveStateOn ) {\n            app.state[state] = core.state[state] === undefined ? uiDefaults[state] : core.state[state];\n        } else {\n            app.state[state] = uiDefaults[state];\n        }\n    });\n\n    app.saveState = saveStateOn ? saveState : function () { /* action */ };\n\n    if ( saveDataOn ) {\n        // implement\n    }\n\n    return true;\n}\n\n\nmodule.exports = {\n    init: init,\n    saveState: saveState\n};\n","/**\n * Main page implementation.\n */\n\n'use strict';\n\nvar app                     = require('mag-app'),\n    Panel                   = require('mag-component-panel'),\n    PanelSet                = require('mag-component-panel-set'),\n    Layout                  = require('mag-component-layout'),\n    LayoutList              = require('mag-component-layout-list'),\n    ModalMessage            = require('mag-component-modal'),\n    RadioList               = require('mag-component-radio-list'),\n    ScrollBar               = require('stb-component-scrollbar'),\n    Footer                  = require('mag-component-footer'),\n    keys                    = require('stb-keys'),\n\n    appExit                 = require('../modules/app.exit'),\n    keyboard                = require('../modules/keyboard'),\n    div                     = require('../modules/div'),\n\n    page                    = new (require('stb-component-page'))({$node: document.getElementById('pageMain')}),\n\n    uiDefaults              = app.config.uiDefaults,\n    initialStationsListData = [],\n    searchResultData        = [],\n    intentContext           = null,\n    isModalShown            = false,\n\n    panelSet,\n    mainPanel,\n    listStation,\n    stationListScroll,\n    $iconSearch,\n    $iconFavorites,\n    stationTitle,\n    stationsAmountTitle,\n    timerId;\n\n\n/**\n * Play radio stations (use intent to player).\n *\n * @param {Object} item - item to play\n * @param {number} index - index of item to go to\n */\nfunction playStation ( item, index ) {\n    var queue = searchResultData,\n        intent, intentConfig;\n\n    intentConfig = {\n        action: 'play',\n        mime: 'content/audio',\n        data: {\n            uri:      item.url,\n            title:    item.name,\n            solution: item.solution || 'auto',\n            mediaId:  item.id\n        },\n        context: intentContext,\n        events: {\n            stop: function () {\n                intent.close();\n            },\n            error: function () {\n                intent.close();\n            },\n            hide: function () {\n                intentContext = null;\n            },\n            close: function () {\n                intentContext = null;\n                stationTitle.links.$index.innerText = '';\n                stationTitle.links.$name.innerText  = '';\n            },\n            prev: function () {\n                var next = queue.next;\n\n                if ( next === undefined ) {\n                    next = queue.next = queue.indexOf(item) - 1;\n                } else {\n                    next = queue.next = next - 1;\n                }\n\n                // Cycle\n                if ( next < 0 ) {\n                    next = queue.length - 1;\n                }\n\n                listStation.move(keys.up);\n                playStation(queue[queue.next], queue.next + 1);\n            },\n            next: function () {\n                var next = queue.next;\n\n                if ( next === undefined ) {\n                    next = queue.next = queue.indexOf(item) + 1;\n                } else {\n                    next = queue.next = next + 1;\n                }\n\n                // Cycle\n                if ( next === queue.length ) {\n                    next = 0;\n                }\n\n                listStation.move(keys.down);\n                playStation(queue[queue.next], queue.next + 1);\n            }\n        }\n    };\n\n    // delete intent events depending on file position in queue,\n    // disable \"prev\" on the first one and \"next\" on the last\n    if ( !queue.indexOf(item) ) {\n        delete intentConfig.events.prev;\n    }\n\n    if ( queue.indexOf(item) === queue.length - 1 ) {\n        delete intentConfig.events.next;\n    }\n\n    intent = core.intent(intentConfig, function ( error, context ) {\n        if ( !error ) {\n            intentContext = context;\n        }\n    });\n\n    stationTitle.links.$index.innerText = index + 1;\n    stationTitle.links.$name.innerText  = item.name;\n}\n\n\n/**\n * Construct appropriate layout for station list from raw data.\n *\n * @param {Object[]} stations - array of radio stations\n *\n * @return {Object[]} array of ready-to-use in LayoutList objects\n */\nfunction prepareStationsLayout ( stations ) {\n    var searchPattern;\n\n    stationsAmountTitle.links.$amount.innerText = stations.length;\n\n    stations = stations.map(function ( station, index ) {\n        return {\n            items: [\n                {\n                    value: '' + station.date,\n                    className: 'trackNumber'\n                },\n                {\n                    value: station.name,\n                    className: 'trackName'\n                },\n                {\n                    name: '$favorites',\n                    className: 'favoritesBlock theme-icon' + (station.favorite ? ' theme-icon-favorite-active active' : '')\n                }\n            ],\n            value: {\n                id:         station.id,\n                isFavorite: station.favorite\n            },\n            click: function () {\n                playStation(station, index);\n            }\n        };\n    });\n\n    if ( app.state.searchRequest ) {\n        searchPattern = new RegExp(app.state.searchRequest, 'i');\n        searchResultData = stations.filter(function ( item ) {\n            return searchPattern.test(item.items[1].value);\n        });\n\n        return searchResultData;\n    }\n\n    return stations;\n}\n\n\n/**\n * Sorting radio stations.\n *\n * @param {Array} stations - radio stations to sort\n * @param {string} order - sorting type\n *\n * @return {Object[]} sorted array\n */\nfunction radioChannelsSort ( stations, order ) {\n    if ( !stations || !stations.length ) {\n        return [];\n    }\n\n    switch ( order ) {\n        case 'name':\n            stations.sort((itemA, itemB) => itemA.name.toLowerCase().localeCompare(itemB.name.toLowerCase()));\n            break;\n        case 'number':\n            stations.sort((itemA, itemB) => itemA.date - itemB.date);\n            break;\n    }\n\n    return stations;\n}\n\n\n/**\n * Set new data/new options to page/list.\n *\n * @param {Object[]} data - array of station objects for parsing into LayoutList\n */\nfunction renderStations ( data ) {\n    data = prepareStationsLayout(radioChannelsSort(searchResultData, app.state.sortOrder));\n\n    if ( listStation ) {\n        listStation.setData({\n            data: data,\n            focusIndex: listStation.$focusItem && listStation.$focusItem.index < data.length ? listStation.$focusItem.index : 0\n        });\n    } else {\n        listStation = new LayoutList({\n            cycle:      true,\n            propagate:  true,\n            size:       7,\n            scroll:     stationListScroll,\n            focusIndex: 0,\n            data:       data,\n            noData:     gettext('No stations')\n        });\n    }\n}\n\n\n/**\n * Search at radio channels list.\n *\n * @param {string} value - search request\n */\nfunction radioChannelsSearch ( value ) {\n    var stations = initialStationsListData,\n        searchPattern;\n\n    if ( !value ) {\n        if ( app.state.searchRequest ) {\n            renderStations(prepareStationsLayout(initialStationsListData));\n            $iconSearch.classList.remove('active');\n        }\n\n        searchResultData = stations.slice();\n\n        return;\n    }\n\n    searchPattern = new RegExp(value, 'i');\n    searchResultData = stations.filter(function ( item ) {\n        return searchPattern.test(item.name);\n    });\n\n    $iconSearch.classList.add('active');\n}\n\n\n/**\n * Switch between active and inactive favorites states.\n */\nfunction toggleFavorites () {\n    var target     = listStation.$focusItem,\n        value      = target.data.value,\n        isFavorite = value.isFavorite;\n\n    app.radioBackend.setRadioChannelFavoriteState(value.id, !isFavorite, function ( error ) {\n        var favoritesBlock = target.layout.links.$favorites,\n            index, dataLength;\n\n        if ( !error ) {\n            target.data.value.isFavorite = !isFavorite;\n            favoritesBlock.className =\n                listStation.data[listStation.$focusItem.index].items[2].className =\n                    'favoritesBlock theme-icon' + (isFavorite ? '' : ' theme-icon-favorite-active active');\n\n            // synchronize data\n            for ( index = 0, dataLength = searchResultData.length; index < dataLength; index += 1 ) {\n                if ( searchResultData[index].id === value.id ) {\n                    searchResultData[index].favorite = !isFavorite;\n                    break;\n                }\n            }\n        }\n    });\n}\n\n\n/**\n * Helper function for closing modal window.\n */\nfunction closeModalWindow () {\n    page.modalSorting.hide();\n    page.modalResetFilters.hide();\n    page.modalContextMenu.hide();\n    isModalShown = false;\n    panelSet.focus();\n    page.footer.show();\n}\n\n\n/**\n * Send request to API to refresh data list.\n *\n * @param {Object} queryStringSet - set of name-value GET parameters\n */\nfunction refreshList ( queryStringSet ) {\n    app.radioBackend.getRadioChannels(queryStringSet, function ( error, data ) {\n        if ( !error ) {\n            setTimeout(function () {\n                initialStationsListData = data;\n                renderStations(radioChannelsSearch(app.state.searchRequest));\n            }, 0);\n        }\n    });\n}\n\n\n/**\n * Render visible panels.\n *\n * @param {Object[]} data - array of items for LayoutList\n */\n// eslint-disable-next-line\nfunction init ( data ) {\n    var dataLength = data.length,\n        leftPanelFooterConfig,\n        mainPanelFooterConfig,\n        leftPanel,\n        listSortingOption,\n        $inputSearch,\n        $buttonSort;\n\n\n    function resetFilters () {\n        if (\n            app.state.searchRequest      !== uiDefaults.searchRequest\n            || app.state.sortOrder       !== uiDefaults.sortOrder\n            || app.state.favoritesActive !== uiDefaults.favoritesActive\n        ) {\n            app.state.searchRequest   = uiDefaults.searchRequest;\n            app.state.sortOrder       = uiDefaults.sortOrder;\n            app.state.favoritesActive = uiDefaults.favoritesActive;\n\n            $inputSearch.innerText = gettext('Search');\n            $iconSearch.classList.remove('active');\n\n            listSortingOption.resetData();\n            $buttonSort.innerText = uiDefaults.sortOrder === 'name' ? gettext('By name') : gettext('By number');\n\n            $iconFavorites.className = 'theme-icon theme-icon-favorite';\n\n            refreshList({favorite: app.state.favoritesActive});\n        }\n    }\n\n\n    leftPanelFooterConfig = {\n        left: {\n            code: keys.menu,\n            action: function () {\n                page.modalResetFilters.show();\n            }\n        },\n        middle: [{code: keys.f1, title: gettext('Reset filters'), action: resetFilters}]\n    };\n\n    mainPanelFooterConfig = {\n        left: {\n            code: keys.menu,\n            action: function () {\n                page.modalContextMenu.show();\n            }\n        },\n        middle: [\n            {code: keys.f3, title: gettext('Favorites'), action: toggleFavorites},\n            {code: keys.f4, title: gettext('Search'), action: function () {\n                keyboard.open({\n                    title: gettext('RADIO STATION SEARCH'),\n                    input: $inputSearch,\n                    value: app.state.searchRequest\n                }, function ( event ) {\n                    renderStations(radioChannelsSearch(app.state.searchRequest = event.value));\n                });\n            }}\n        ]\n    };\n\n    stationTitle = new Layout({\n        parent: page,\n        className: 'stationTitle',\n        data: [\n            {\n                name: '$index'\n            },\n            {\n                name: '$name'\n            }\n        ]\n    });\n\n    stationsAmountTitle = new Layout({\n        className: 'amountContainer',\n        data: [\n            {\n                name: '$amount',\n                className: 'amount'\n            }\n        ]\n    });\n\n    page.footer = new Footer({\n        parent:  page,\n        data:    [],\n        visible: true\n    });\n\n    stationListScroll = new ScrollBar({\n        value:    0,\n        viewSize: 7,\n        realSize: dataLength\n    });\n\n    page.modalSorting = new ModalMessage({\n        parent: page,\n        title:  gettext('sorting'),\n        events: {\n            show: function () {\n                page.modalSorting.focus();\n                panelSet.blur();\n                isModalShown = true;\n                page.footer.hide();\n            },\n            hide: closeModalWindow\n        },\n        children: [\n            listSortingOption = new RadioList({\n                focusIndex: 0,\n                size: 2,\n                cycle: true,\n                events: {\n                    'click:item': function ( event ) {\n                        page.modalSorting.hide();\n                        app.state.sortOrder = event.$item.value === 1 ? uiDefaults.sortOrder : 'name';\n                        renderStations(searchResultData);\n                        $buttonSort.innerText = event.$item.data.title;\n                    }\n                },\n                data: [\n                    {\n                        state: app.state.sortOrder !== uiDefaults.sortOrder,\n                        title: gettext('By name'),\n                        value: 0\n                    },\n                    {\n                        state: app.state.sortOrder === uiDefaults.sortOrder,\n                        title: gettext('By number'),\n                        value: 1\n                    }\n                ]\n            })\n        ]\n    });\n\n    page.modalResetFilters = new ModalMessage({\n        parent: page,\n        title: gettext('actions'),\n        events: {\n            show: function () {\n                page.modalResetFilters.focus();\n                panelSet.blur();\n                isModalShown = true;\n                page.footer.hide();\n            },\n            hide: closeModalWindow\n        },\n        children: [\n            new LayoutList({\n                size: 1,\n                focusIndex: 0,\n                data: [\n                    {\n                        items: [\n                            {\n                                className: 'theme-icon theme-icon-rc-f1'\n                            },\n                            gettext('Reset filters')\n                        ],\n                        click: function () {\n                            resetFilters();\n                            page.modalResetFilters.hide();\n                        }\n                    }\n                ],\n                events: {\n                    keydown: function ( event ) {\n                        LayoutList.prototype.defaultEvents.keydown.call(this, event);\n\n                        if ( event.code === keys.menu ) {\n                            event.stop = true;\n                            page.modalResetFilters.hide();\n                        }\n                    }\n                }\n            })\n        ]\n    });\n\n    page.modalContextMenu = new ModalMessage({\n        parent: page,\n        title:  gettext('actions'),\n        events: {\n            show: function () {\n                page.modalContextMenu.focus();\n                panelSet.blur();\n                isModalShown = true;\n                page.footer.hide();\n            },\n            hide: closeModalWindow\n        },\n        children: [\n            new LayoutList({\n                size: 1,\n                focusIndex: 0,\n                data: [\n                    {\n                        items: [\n                            {\n                                className: 'theme-icon theme-icon-rc-f3'\n                            },\n                            gettext('Favorites')\n                        ],\n                        click: function () {\n                            toggleFavorites();\n                            closeModalWindow();\n                        }\n                    }\n                ],\n                events: {\n                    keydown: function ( event ) {\n                        LayoutList.prototype.defaultEvents.keydown.call(this, event);\n                        if ( event.code === keys.menu ) {\n                            event.stop = true;\n                            closeModalWindow();\n                        }\n                    }\n                }\n            })\n        ]\n    });\n\n    page.footer.init();\n    renderStations(data);\n\n    page.add(\n        panelSet = new PanelSet({\n            panels: [\n                leftPanel = new Panel({\n                    size: 1,\n                    title: [\n                        {\n                            value: gettext('menu'),\n                            className: 'name'\n                        }\n                    ],\n                    children: [\n                        new LayoutList({\n                            size: 4,\n                            focusIndex: 0,\n                            cycle: true,\n                            data: [\n                                {\n                                    items: [\n                                        $iconSearch  = div('theme-icon theme-icon-search' + (app.state.searchRequest ? ' active' : '')),\n                                        $inputSearch = div('inputSearch', app.state.searchRequest || gettext('Search'))\n                                    ],\n                                    value: {\n                                        defaultValue: gettext('Search')\n                                    },\n                                    click: function () {\n                                        keyboard.open({\n                                            title: gettext('RADIO STATION SEARCH'),\n                                            input: $inputSearch,\n                                            value: app.state.searchRequest\n                                        }, function ( event ) {\n                                            renderStations(radioChannelsSearch(app.state.searchRequest = event.value));\n                                        });\n                                    }\n                                },\n                                {\n                                    items: [\n                                        $iconFavorites = div('theme-icon theme-icon-favorite'),\n                                        gettext('Favorites')\n                                    ],\n                                    click: function () {\n                                        var classList = $iconFavorites.classList;\n\n                                        refreshList({favorite: app.state.favoritesActive = !app.state.favoritesActive});\n\n                                        classList.toggle('theme-icon-favorite');\n                                        classList.toggle('theme-icon-favorite-active');\n                                        classList.toggle('active');\n                                    }\n                                },\n                                {\n                                    items: [\n                                        {\n                                            className: 'theme-icon theme-icon-sort-az'\n                                        },\n                                        $buttonSort = div(\n                                            'theme-item-more',\n                                            app.state.sortOrder === uiDefaults.sortOrder ? gettext('By number') : gettext('By name')\n                                        )\n                                    ],\n                                    click: function () {\n                                        panelSet.blur();\n                                        page.modalSorting.show();\n                                        page.modalSorting.focus();\n                                        isModalShown = true;\n                                    }\n                                },\n                                {\n                                    items: [\n                                        {\n                                            className: 'theme-icon theme-icon-exit'\n                                        },\n                                        {\n                                            value: gettext('Exit')\n                                        }\n                                    ],\n                                    click: function () {\n                                        panelSet.blur();\n                                        appExit.goExit(panelSet);\n                                    }\n                                }\n                            ]\n                        })\n                    ]\n                }),\n                mainPanel = new Panel({\n                    size: 2,\n                    title: [\n                        {\n                            value: gettext('radio stations'),\n                            className: 'name'\n                        },\n                        stationsAmountTitle\n                    ],\n                    main: true,\n                    children: [listStation]\n                })\n            ]\n        })\n    );\n\n    mainPanel.$body.appendChild(stationListScroll.$node);\n\n    leftPanel.addListener('focus', function () {\n        page.footer.init(leftPanelFooterConfig);\n    });\n\n    mainPanel.addListener('focus', function () {\n        page.footer.init(mainPanelFooterConfig);\n    });\n\n    mainPanel.focus();\n}\n\n\npage.once('show', function ( event ) {\n    intentContext = null;\n\n    if ( event.data.length ) {\n        initialStationsListData = event.data;\n        init(searchResultData = initialStationsListData.slice());\n    } else {\n        init([]);\n    }\n\n    if ( app.state.favoritesActive ) {\n        $iconFavorites.className = 'theme-icon theme-icon-favorite-active active';\n    }\n});\n\npage.addListener('keydown', function ( event ) {\n    if ( event.code === keys.back ) {\n        if ( isModalShown ) {\n            closeModalWindow();\n        } else {\n            appExit.goBack();\n        }\n    }\n});\n\ncore.addListeners({\n    show: function () {\n        intentContext = null;\n\n        // app comes back from collapsed state\n        if ( timerId ) {\n            refreshList({favorite: app.state.favoritesActive});\n        }\n\n        timerId = setInterval(function () {\n            refreshList({favorite: app.state.favoritesActive});\n        }, 24 * 60 * 60 * 1000);\n    },\n    hide: function () {\n        clearInterval(timerId);\n    }\n});\n\n\nmodule.exports = page;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    Layout = require('mag-component-layout');\n\n\n/**\n * Extended panel implementation.\n *\n * @constructor\n * @extends Component\n * @param {Object} [config={}] - init parameters (all inherited from the parent)\n * @param {boolean} [config.main=false] - set panel as main\n * @param {boolean} [config.size=1] - size of panel width\n *\n * @example\n * main = new Panel({\n *     size: 1,\n *     title: ['Left Panel', {className: 'info'}],\n *     main: true,\n *     children: [\n *         new List({\n *             data: ['1 bla', '2 bro', '3 car', '4 hoho', 'Search'],\n *             size: 5\n *         })\n *     ]\n * });\n */\nfunction Panel ( config ) {\n    var $overlay;\n\n    config = config || {};\n\n    /**\n     * Size of panel.\n     *\n     * @type {number}\n     */\n    this.size = 1;\n\n    /**\n     * Set panel as main.\n     *\n     * @type {boolean}\n     */\n    this.main = false;\n\n    /**\n     * Index in panel set.\n     *\n     * @type {number}\n     */\n    this.index = 0;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    // set default className if classList property empty or undefined\n    //config.className = 'Panel ' + (config.className || '');\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    //this.$node.classList.add('theme-main');\n    //this.$node.classList.add('theme-panel');\n\n    // add special class to set component size\n    if ( config.size ) {\n        this.size = config.size;\n        this.$node.classList.add('size' + config.size);\n    }\n\n    // add special class to set main panel\n    if ( config.main ) {\n        this.main = true;\n        this.$node.classList.add('main');\n    }\n\n    // create elements to set as component shadows\n    this.shadows = {\n        $left: document.createElement('div'),\n        $right: document.createElement('div')\n    };\n\n    this.shadows.$left.className = 'shadow left';\n    this.$node.appendChild(this.shadows.$left);\n\n    this.shadows.$right.className = 'shadow right';\n    this.$node.appendChild(this.shadows.$right);\n\n    // add title to panel\n    if ( config.title ) {\n        if ( !Array.isArray(config.title) ) {\n            config.title = [config.title];\n        }\n\n        this.title = new Layout({\n            //className: 'title theme-header theme-title',\n            className: 'title',\n            data: config.title,\n            focusable: false\n        });\n        this.$node.appendChild(this.title.$node);\n    }\n\n    this.$node.appendChild(this.$body);\n\n    $overlay = document.createElement('div');\n    $overlay.className = 'overlay';\n    this.$node.appendChild($overlay);\n}\n\n\n// inheritance\nPanel.prototype = Object.create(Component.prototype);\nPanel.prototype.constructor = Panel;\n\n// set component name\nPanel.prototype.name = 'mag-component-panel';\n\n\n/**\n * Define default events.\n *\n * @type {{focus: Function}} try to focus first child component if it present\n */\nPanel.prototype.defaultEvents = {\n    focus: function () {\n        if ( this.children.length ) {\n            this.children[0].focus();\n        }\n    }\n};\n\n\n/**\n * Redefine default component focus to set panel as active even when give focus to children components.\n */\nPanel.prototype.focus = function () {\n    if ( this.focusable ) {\n        this.parent.panels[this.parent.focusIndex].$node.classList.remove('active');\n        this.parent.panels[this.parent.focusIndex].$node.classList.remove('top');\n\n        Component.prototype.focus.call(this);\n\n        this.parent.focusIndex = this.index;\n        this.$node.classList.add('active');\n        this.$node.classList.add('top');\n\n        if ( this.index === 0 && this.parent.panels[1] && this.parent.panels[1].main ) {\n            this.parent.panels[1].$node.classList.remove('position-left');\n            this.parent.panels[1].$node.classList.add('position-right');\n\n            if ( this.parent.panels[2] ) {\n                this.parent.panels[2].$node.classList.remove('expand');\n            }\n\n            this.$node.classList.add('expand');\n        } else if ( this.index === 2 && this.parent.panels[1].main ) {\n            this.parent.panels[1].$node.classList.remove('position-right');\n            this.parent.panels[1].$node.classList.add('position-left');\n            this.parent.panels[0].$node.classList.remove('expand');\n            this.$node.classList.add('expand');\n        }\n    }\n};\n\n\n/**\n * Blur panel.\n */\nPanel.prototype.blur = function () {\n    this.parent.panels[this.parent.focusIndex].$node.classList.remove('active');\n    Component.prototype.blur.call(this);\n};\n\n\n// public\nmodule.exports = Panel;\n","/**\n * Global list of non-printable control key codes.\n *\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    backspace: 8,\n    tab:       9,\n    enter:     13,\n    escape:    27,\n    space:     32,\n    pageUp:    33,\n    pageDown:  34,\n    end:       35,\n    home:      36,\n    left:      37,\n    up:        38,\n    right:     39,\n    down:      40,\n    insert:    45,\n    // not \"delete\" because of old browsers issue\n    del:       46\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n/**\n * Magsdk panel set implementation\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {Array} [config.panels] array of panels to use\n * @param {Array} [config.focusIndex=0] focus panel index\n * @constructor\n * @extends Component\n */\nfunction PanelSet ( config ) {\n    var self = this,\n        index;\n\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.panels && !Array.isArray(config.panels) || !config.panels.length ) {\n            throw new Error(__filename + ': wrong config.panels type');\n        }\n    }\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'panelSet ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    this.panels = config.panels;\n\n    /**\n     * Index of current active panel\n     *\n     * @type {number}\n     */\n    this.focusIndex = 0;\n\n    // set special panels classes\n    if ( config.panels && !config.panels[0].main ) {\n        config.panels[0].$node.classList.add('left');\n        // small resolution special class\n        config.panels[0].$node.classList.add('expand');\n    }\n\n    if (  config.panels && config.panels[1] && config.panels[1].main ) {\n        // small resolution special class\n        config.panels[1].$node.classList.add('position-right');\n    }\n\n    if ( config.panels && config.panels[2] && config.panels[1].main ) {\n        config.panels[2].$node.classList.add('right');\n    }\n\n    // add panels\n    if ( config.panels ) {\n        this.add.apply(this, config.panels);\n    }\n\n    // panel keydown handler to set focus panel\n    function keydownHandler ( event ) {\n        switch ( event.code ) {\n            case keys.left:\n                if ( self.focusIndex > 0 ) {\n                    self.panels[self.focusIndex - 1].focus();\n                }\n                break;\n            case keys.right:\n                if ( self.focusIndex < self.panels.length - 1 ) {\n                    self.panels[self.focusIndex + 1].focus();\n                }\n                break;\n        }\n    }\n\n    // add special listener\n    for ( index = 0; index < this.panels.length; index++ ) {\n        this.panels[index].addListeners({\n            keydown: keydownHandler\n        });\n        // set panels indexes\n        this.panels[index].index = index;\n    }\n\n    /*if ( config.focusIndex && config.focusIndex < this.panels.length ) {\n     this.panels[config.focusIndex].focus();\n     } else {\n     if ( config.panels.length > 1 ) {\n     this.panels[1].focus();\n     } else {\n     this.panels[0].focus();\n     }\n     }*/\n}\n\nPanelSet.prototype = Object.create(Component.prototype);\nPanelSet.prototype.constructor = PanelSet;\n\n// set component name\nPanelSet.prototype.name = 'mag-component-panel-set';\n\n\n/**\n *\n */\nPanelSet.prototype.focus = function () {\n    Component.prototype.focus.call(this);\n    this.panels[this.focusIndex].focus();\n};\n\n/**\n *\n */\nPanelSet.prototype.blur = function () {\n    this.panels[this.focusIndex].blur();\n};\n\nmodule.exports = PanelSet;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n/**\n * Layout component implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array} [config.data] array of items to add to layout\n */\nfunction Layout ( config ) {\n    var self = this;\n\n    // sanitize\n    config = config || {};\n\n    /**\n     * Index of focused child component\n     * @type {number}\n     */\n    this.focusIndex = 0;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && config.className !== undefined && typeof config.className !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    //config.className = 'layout ' + (config.className || '');\n\n    /**\n     * Component data\n     * @type {Array}\n     */\n    this.data = [];\n\n    /**\n     *  Hash map of item links\n     */\n    this.links = {};\n\n    Component.call(this, config);\n\n    this.init(config);\n\n    // add listener to move focus between children\n    this.addListener('keydown', function ( event ) {\n        switch ( event.code ) {\n            case keys.right:\n                if ( self.children.length && self.focusIndex < self.children.length - 1 ) {\n                    self.children[++self.focusIndex].focus();\n                }\n                break;\n            case keys.left:\n                if ( self.children.length && self.focusIndex > 0 ) {\n                    self.children[--self.focusIndex].focus();\n                }\n                break;\n            case keys.back:\n                // focus parent focused item if parent is layout list\n                if ( self.parent ) {\n                    self.parent.focus();\n                    if ( self.$parentItem ) {\n                        self.parent.focusItem(self.$parentItem);\n                    }\n                }\n                break;\n        }\n    });\n}\n\n\nLayout.prototype = Object.create(Component.prototype);\nLayout.prototype.constructor = Layout;\n\n// set component name\nLayout.prototype.name = 'mag-component-layout';\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var index, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( index = 0; index < data.length; index++ ) {\n        // cell value\n        item = data[index];\n        // plain text\n        if ( typeof item === 'object' ) {\n            // HTML element or component\n            if ( item instanceof Component || item instanceof HTMLElement ) {\n                data[index] = {\n                    value: item,\n                    wrap: false\n                };\n            } else {\n                data[index].wrap = true;\n            }\n        } else {\n            // wrap with defaults\n            data[index] = {\n                value: data[index],\n                wrap: true\n            };\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nLayout.prototype.init = function ( config ) {\n    var self = this,\n        data = normalize(config.data),\n        item, $wrapper, index;\n\n    // clear element if reinit\n    while (this.$node.firstChild) {\n        this.$node.removeChild(this.$node.firstChild);\n    }\n\n    this.data = data;\n\n    /**\n     * @this Component\n     */\n    function componentClickHandler () {\n        self.focusIndex = this.index;\n    }\n\n    for ( index = 0; index < data.length; index++ ) {\n        item = data[index];\n        // plain text\n        if ( typeof item.value === 'string' ) {\n            $wrapper = document.createElement('div');\n            $wrapper.textContent = item.value;\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n            if ( item.name ) {\n                this.links[item.name] = $wrapper;\n            }\n        } else if ( item.value instanceof HTMLElement ) {\n            // HTML Element\n\n            // if with wrapper\n            if ( item.wrap ) {\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value);\n                this.$node.appendChild($wrapper);\n                if ( item.name ) {\n                    this.links[item.name] = $wrapper;\n                }\n            } else {\n                // without wrapper\n                this.$node.appendChild(item.value);\n                if ( item.name ) {\n                    this.links[item.name] = item.value;\n                }\n            }\n        } else if ( item.value instanceof Component ) {\n            // component\n            // force propagate events\n            item.value.propagate = true;\n\n            // set index to current component\n            item.value.index = this.children.length;\n\n            // change layout focus index if click component\n            item.value.addListener('click', componentClickHandler);\n\n            // append component\n            if ( item.wrap ) {\n                // with wrapper\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value.$node);\n                this.$node.appendChild($wrapper);\n                this.children.push(item.value);\n                item.value.parent = this;\n                if ( item.name ) {\n                    this.links[item.name] = $wrapper;\n                }\n            } else {\n                // without wrapper\n                this.add(item.value);\n                if ( item.name ) {\n                    this.links[item.name] = item.value;\n                }\n            }\n        } else {\n            $wrapper = document.createElement('div');\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n            if ( item.name ) {\n                this.links[item.name] = $wrapper;\n            }\n        }\n    }\n};\n\n\nmodule.exports = Layout;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-modal');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-modal';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base modal window implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n */\nfunction Modal ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body ) {\n            throw new Error(__filename + ': config.$body should not be provided manually');\n        }\n    }\n\n    // create centered div\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // add table-cell wrapper\n    this.$node.appendChild(document.createElement('div').appendChild(this.$body).parentNode);\n}\n\n\n// inheritance\nModal.prototype = Object.create(Component.prototype);\nModal.prototype.constructor = Modal;\n\n// set component name\nModal.prototype.name = 'spa-component-modal';\n\n\n// public\nmodule.exports = Modal;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar List             = require('mag-component-list'),\n    classChecked     = 'checked',\n    classIcon        = 'theme-icon theme-icon-radio',\n    classIconActive  = 'theme-icon theme-icon-radio-active';\n\n\n/**\n * Base radio list implementation\n *\n * @constructor\n * @extends List\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {string} [config.classIcon] icon default state class name\n * @param {string} [config.classIconActive] icon active state class name\n * @param {string} [config.classChecked] checked item class\n */\nfunction RadioList ( config ) {\n    var self = this;\n\n    if ( config.classIcon ) {\n        classIcon = config.classIcon;\n    }\n    if ( config.classIconActive ) {\n        classIconActive = config.classIconActive;\n    }\n    if ( config.classChecked ) {\n        classIcon = config.classChecked;\n    }\n\n    /**\n     * Checked item data\n     *\n     * @type {Element}\n     */\n    this.checkedData = null;\n\n    /**\n     * Checked element index\n     *\n     * @type {number}\n     */\n    this.checkedIndex = null;\n\n    List.call(this, config);\n\n    this.addListener('click:item', function ( event ) {\n        var $item = event.$item,\n            previousCheckedData = self.checkedData;\n\n        self.checkIndex($item.index);\n\n        if ( previousCheckedData !== $item.data ) {\n            /**\n             * Select element from list\n             *\n             * @event select\n             * @property {Element} $item object\n             */\n            self.emit('select', $item);\n        }\n    });\n}\n\n\nRadioList.prototype = Object.create(List.prototype);\nRadioList.prototype.constructor = RadioList;\n\n// set component name\nRadioList.prototype.name = 'mag-component-radio-list';\n\nRadioList.prototype.init = function ( config ) {\n    config = config || {};\n    List.prototype.init.call(this, config);\n};\n\n\n/**\n * Set data and render inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nRadioList.prototype.setData = function ( config ) {\n    var index;\n\n    List.prototype.setData.call(this, config);\n\n    this.defaultCheckedIndex = this.checkedIndex;\n\n    if ( this.$focusItem ) {\n        this.defaultFocusIndex = this.$focusItem.index;\n    } else {\n        this.defaultFocusIndex = 0;\n    }\n\n    this.checkedData = this.checkedIndex = null;\n    \n    for ( index = 0; index < this.data.length; index++ ) {\n        if ( this.data[index].state === true ) {\n            this.checkIndex(index);\n            break;\n        }\n    }\n};\n\n\n/**\n * Reset data to default state and render inner structures and HTML.\n */\nRadioList.prototype.resetData = function () {\n    this.checkIndex(this.defaultCheckedIndex);\n    this.focusIndex(this.defaultFocusIndex);\n};\n\n\n/**\n * Set all states to false and render inner structures and HTML.\n *\n * @param {number} [focusIndex] focus index\n */\nRadioList.prototype.clearChecked = function ( focusIndex ) {\n    var index = 0;\n\n    for ( index; index < this.data.length; index++ ) {\n        this.data[index].state = false;\n    }\n\n    // no focusIndex, focusIndex may be 0\n    if ( !focusIndex && focusIndex !== 0 ) {\n        focusIndex = this.$focusItem ? this.$focusItem.index : 0;\n    }\n\n    this.setData({data: this.data, focusIndex: focusIndex});\n};\n\n\n/**\n * Default render function\n *\n * @param {Element} $item in list\n * @param {Object} data to render layout element\n * @param {string} [data.title] title of checkbox\n * @param {boolean} [data.state] state of checkbox: checked or not\n * @param {string} [data.value] special value of item\n */\nRadioList.prototype.renderItemDefault = function ( $item, data ) {\n    var table,\n        tr,\n        td,\n        check;\n\n    if ( $item.ready ) {\n        $item.$title.innerText = data.title || '';\n\n        if ( data.state ) {\n            $item.classList.add(classChecked);\n            $item.checkBox.className = classIconActive;\n        } else {\n            $item.classList.remove(classChecked);\n            $item.checkBox.className = classIcon;\n        }\n\n        $item.state = data.state;\n        $item.value = data.value;\n\n    } else {\n        $item.innerHTML = '';\n        table = document.createElement('table');\n        tr = document.createElement('tr');\n        td = document.createElement('td');\n        check = document.createElement('div');\n\n        if ( data.state ) {\n            $item.classList.add(classChecked);\n            check.className = classIconActive;\n        } else {\n            $item.classList.remove(classChecked);\n            check.className = classIcon;\n        }\n\n        table.appendChild(tr);\n        td.appendChild(check);\n\n        td.className = 'checkBoxWrapper';\n        tr.appendChild(td);\n\n        td = document.createElement('td');\n        td.className = 'title';\n        td.innerText = data.title || '';\n        tr.appendChild(td);\n\n        $item.checkBox = check;\n        $item.state = data.state;\n        $item.value = data.value;\n        $item.$title = td;\n\n        $item.appendChild(table);\n\n        if ( data.state ) {\n            this.checkedData = data;\n            this.checkedIndex = $item.index;\n        }\n\n        $item.ready = true;\n    }\n};\n\n\n/**\n * Check element by index\n *\n * @param {number} index of element to check\n */\nRadioList.prototype.checkIndex = function ( index ) {\n    var $node;\n\n    if ( DEVELOP ) {\n        if ( index >= this.data.length ) {\n            throw new Error(__filename + ': wrong index to check');\n        }\n    }\n\n    // do not need to do the same\n    if ( index === this.checkedIndex ) { return; }\n\n    if ( this.checkedIndex !== null && this.$node.children.length ) {\n        this.data[this.checkedIndex].state = false;\n        $node = this.getItemNodeByIndex(this.checkedIndex);\n        if ( $node ) {\n            $node.checkBox.className = classIcon;\n            $node.classList.remove(classChecked);\n        }\n    }\n\n    $node = this.getItemNodeByIndex(index);\n    if ( $node ) {\n        $node.checkBox.className = classIconActive;\n        $node.classList.add(classChecked);\n        $node.state = true;\n    }\n\n    this.data[index].state = true;\n    this.checkedData = this.data[index];\n    this.checkedIndex = index;\n};\n\n\n/**\n * Get list item node by item index\n *\n * @param {number} index of item to find node\n * @return {?Element} item node link\n */\nRadioList.prototype.getItemNodeByIndex = function ( index ) {\n    var children = this.$node.children;\n\n    index -= this.viewIndex;\n    if ( index < this.size && index >= 0 ) {\n        return children[index];\n    }\n\n    return null;\n};\n\nRadioList.prototype.renderItem = RadioList.prototype.renderItemDefault;\n\nmodule.exports = RadioList;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-scrollbar');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-scrollbar';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base scroll bar implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {number} [config.value=0] initial thumb position\n * @param {number} [config.realSize=100] actual scroll size\n * @param {number} [config.viewSize=10] visible area size\n * @param {number} [config.type] direction\n *\n * @example\n * var ScrollBar = require('stb/ui/scroll.bar'),\n *     scrollBar = new ScrollBar({\n *         viewSize: 5,\n *         realSize: 25,\n *         events: {\n *             done: function () {\n *                 debug.log('ScrollBar: done');\n *             },\n *             change: function ( data ) {\n *                 debug.log('ScrollBar: change to ' + data.curr + ' from ' + data.prev);\n *             }\n *         }\n *     });\n */\nfunction ScrollBar ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Visible area size.\n     *\n     * @type {number}\n     */\n    this.viewSize = 10;\n\n    /**\n     * Scroll area actual height or width (if scroll is horizontal).\n     *\n     * @type {number}\n     */\n    this.realSize = 100;\n\n    /**\n     * Scroll thumb position.\n     *\n     * @type {number}\n     */\n    this.value = 0;\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Geometry of the scroll thumb element.\n     *\n     * @type {ClientRect}\n     */\n    this.thumbRect = null;\n\n    /**\n     * Geometry of the scroll track element.\n     *\n     * @type {ClientRect}\n     */\n    this.trackRect = null;\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'scrollBar ' + (config.className || '');\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // insert thumb line\n    this.$thumb = this.$body.appendChild(document.createElement('div'));\n\n    // correct CSS class name\n    this.$thumb.className = 'thumb';\n\n    // component setup\n    this.init(config);\n}\n\n\n// inheritance\nScrollBar.prototype = Object.create(Component.prototype);\nScrollBar.prototype.constructor = ScrollBar;\n\n// set component name\nScrollBar.prototype.name = 'spa-component-scrollbar';\n\nScrollBar.prototype.TYPE_VERTICAL   = 1;\nScrollBar.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Init or re-init realSize/viewSize/value parameters.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nScrollBar.prototype.init = function ( config ) {\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // set actual scroll size\n    if ( config.realSize !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.realSize) !== config.realSize ) {\n                throw new Error(__filename + ': config.realSize value must be a number');\n            }\n        }\n\n        // apply\n        this.realSize = config.realSize;\n    }\n\n    // set visible area size\n    if ( config.viewSize !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.viewSize) !== config.viewSize ) {\n                throw new Error(__filename + ': config.viewSize value must be a number');\n            }\n            if ( config.viewSize < 0 ) {\n                throw new Error(__filename + ': config.viewSize value must be greater than 0');\n            }\n        }\n\n        // apply\n        this.viewSize = config.viewSize;\n    }\n\n    // show or hide thumb\n    if ( this.viewSize >= this.realSize ) {\n        this.$thumb.classList.add('hidden');\n    } else {\n        this.$thumb.classList.remove('hidden');\n    }\n\n    // set thumb position\n    if ( config.value !== undefined ) {\n        // apply\n        this.scrollTo(config.value);\n    }\n\n    // set thumb size\n    if ( this.type === this.TYPE_VERTICAL ) {\n        this.$thumb.style.height = (this.viewSize / this.realSize * 100) + '%';\n    } else {\n        this.$thumb.style.width = (this.viewSize / this.realSize * 100) + '%';\n    }\n\n    // geometry\n    this.thumbRect = this.$thumb.getBoundingClientRect();\n    this.trackRect = this.$node.getBoundingClientRect();\n};\n\n\n/**\n * Set position of the given value.\n * Does nothing in case when scroll is in the end and passed value is more than scroll bar length.\n *\n * @param {number} value new value to set\n * @return {boolean} operation result\n *\n * @fires module:stb/ui/scroll.bar~ScrollBar#done\n * @fires module:stb/ui/scroll.bar~ScrollBar#change\n */\nScrollBar.prototype.scrollTo = function ( value ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(value) !== value ) {\n            throw new Error(__filename + ': value must be a number');\n        }\n        if ( this.realSize > this.viewSize && value > this.realSize - this.viewSize ) {\n            throw new Error(__filename + ': value is greater than this.realSize-this.viewSize');\n        }\n        if ( value < 0 ) {\n            throw new Error(__filename + ': value is less then 0');\n        }\n    }\n\n    // value has changed\n    if ( this.value !== value ) {\n        // track and thumb geometry was not set\n        if ( this.thumbRect.height === 0 || this.thumbRect.width === 0 ) {\n            // apply\n            this.trackRect = this.$node.getBoundingClientRect();\n            this.thumbRect = this.$thumb.getBoundingClientRect();\n        }\n\n        // set scroll bar width\n        if ( this.type === this.TYPE_VERTICAL ) {\n            this.$thumb.style.marginTop = ((this.trackRect.height - this.thumbRect.height) * value / (this.realSize - this.viewSize)) + 'px';\n        } else {\n            this.$thumb.style.marginLeft = ((this.trackRect.width - this.thumbRect.width) * value / (this.realSize - this.viewSize)) + 'px';\n        }\n\n        // there are some listeners\n        if ( this.events['change'] ) {\n            /**\n             * Update scroll value.\n             *\n             * @event module:stb/ui/scroll.bar~ScrollBar#change\n             *\n             * @type {Object}\n             * @property {number} prev old/previous scroll value\n             * @property {number} curr new/current scroll value\n             */\n            this.emit('change', {curr: value, prev: this.value});\n        }\n\n        // is it the end?\n        if ( value >= this.realSize ) {\n            value = this.realSize;\n\n            // there are some listeners\n            if ( this.events['done'] ) {\n                /**\n                 * Set scroll to its maximum value.\n                 *\n                 * @event module:stb/ui/scroll.bar~ScrollBar#done\n                 */\n                this.emit('done');\n            }\n        }\n\n        // set new value\n        this.value = value;\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = ScrollBar;\n","/**\n * @license The MIT License (MIT)\n * @copyright Dmitry Fedotov <bas.jsdev@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys'),\n    classes   = {};\n\n\n// initialize classes\nclasses[keys.f1] = 'theme-icon-rc-f1';\nclasses[keys.f2] = 'theme-icon-rc-f2';\nclasses[keys.f3] = 'theme-icon-rc-f3';\nclasses[keys.f4] = 'theme-icon-rc-f4';\nclasses[keys.menu] = 'theme-icon-rc-menu';\nclasses[keys.ok] = 'theme-icon-rc-ok';\nclasses[keys.info] = 'theme-icon-rc-info';\nclasses[keys.playPause] = 'theme-icon-rc-play-pause';\nclasses[keys.back] = 'theme-icon-rc-back';\nclasses[keys.exit] = 'theme-icon-rc-home';\nclasses[keys.keyboard] = 'theme-icon-rc-vk';\nclasses[keys.refresh] = 'theme-icon-rc-refresh';\nclasses[keys.frame] = 'theme-icon-rc-aspect';\n\n/**\n * Footer.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}  config={} init parameters\n * @param {Object}  config.parent parent page\n * @param {boolean} [config.visible] visibility flag\n * @param {Object}  [config.data] footer buttons config\n * @param {Object}  [config.data.left] left button config\n * @param {Object}  [config.data.middle] middle buttons config\n * @param {Object}  [config.data.right] right button config\n * @param {number}  [config.data.middle.code] button key code\n * @param {Object}  [config.data.middle.title] button title\n * @param {Object}  [config.data.middle.action] button press (click) action\n *\n * @example\n * page.footer = new Footer({\n *     parent: page,\n *     data: {\n *         left: {\n *             code: keys.menu, action: function () {}\n *         },\n *         middle: [\n *             {code: 55, action: function () {}},\n *             {code: keys.f1, title: 'stop', action: function () {}},\n *             {code: 9000, className: 'customIcon', title: 'start', action: function () {}},\n *             {code: keys.f4, title: 'end', action: function () {}}\n *         ],\n *         right: {\n *             code: 65, action: function () {}\n *         }\n *     }\n * });\n */\n\n/* eslint max-statements: 0 */\nfunction Footer ( config ) {\n    var currentTab = 0,\n        self = this;\n\n    // sanitize\n    config = config || {};\n    // can't accept focus\n    config.focusable = false;\n    // hide by default\n    config.visible = config.visible || false;\n    // create centered div\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    this.tabs = [\n        {codes: {}},\n        {codes: {}},\n        {codes: {}},\n        {codes: {}}\n    ];\n\n    this.tab = 0;\n\n    this.$table = this.$node.appendChild(document.createElement('table'));\n\n    this.$table.insertRow();\n    this.$table.rows[0].insertCell(-1);\n    this.$left = this.$table.rows[0].cells[0].appendChild(document.createElement('div'));\n    this.$left.className = 'theme-icon';\n\n    this.$table.rows[0].insertCell(-1);\n    this.$table.rows[0].cells[1].className = 'central';\n\n\n    this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.className = 'wrapper hidden';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n\n    ++currentTab;\n    this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.className = 'wrapper hidden';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n\n    ++currentTab;\n    this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.className = 'wrapper hidden';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n\n    ++currentTab;\n    this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.className = 'wrapper hidden';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n\n    this.$table.rows[0].insertCell(-1);\n    this.$right = this.$table.rows[0].cells[2].appendChild(document.createElement('div'));\n    this.$right.className = 'theme-icon';\n\n    this.init(config.data);\n\n    this.parent.addListener('keydown', function ( event ) {\n        var currTab = self.tabs[self.tab];\n\n        if ( self.visible ) {\n            if ( currTab.codes[event.code] && typeof currTab.codes[event.code].action === 'function' ) {\n                currTab.codes[event.code].action();\n            }\n        }\n    });\n}\n\n\n// inheritance\nFooter.prototype = Object.create(Component.prototype);\nFooter.prototype.constructor = Footer;\n\n// set component name\nFooter.prototype.name = 'mag-component-footer';\n\n\n/**\n * Redefine buttons\n *\n * @param {Object} [config] footer buttons config\n * @param {Object} [config.left] left button config\n * @param {number} [config.left.code] left button key code\n * @param {boolean} [config.left.disabled] left button is disabled\n * @param {Object} [config.left.action] left button press (click) action\n * @param {Object} [config.middle] middle buttons config\n * @param {Object} [config.right] right button config\n * @param {number} [config.right.code] right button key code\n * @param {boolean} [config.right.disabled] right button is disabled\n * @param {Object} [config.right.action] right button press (click) action\n * @param {number} [config.middle.code] button key code\n * @param {Object} [config.middle.title] button title\n * @param {boolean} [config.middle.disabled] button is disabled\n * @param {Object} [config.middle.action] button press (click) action\n *\n * page.Footer.init({\n *     left: {\n *         code: keys.menu, action: function () {}\n *     },\n *     middle: [\n *         {code: 55, action: function () {}},\n *         {code: keys.f1, title: 'stop', action: function () {}},\n *         {code: 9000, className: 'customIcon', title: 'start', action: function () {}},\n *         {code: keys.f4, title: 'end', disabled: true}\n *     ],\n *     right: {\n *         code: 65, action: function () {}\n *     }\n * });\n *\n */\nFooter.prototype.init = function ( config ) {\n    var index, $tab, $tabChildren;\n\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( config.middle && config.middle.length > 4 ) {\n            throw new Error(__filename + ': only 4 buttons allowed in footer');\n        }\n        if ( config.middle && Array.isArray(config.middle) ) {\n            for ( index = 0; index < config.middle.length; index++ ) {\n                if ( typeof config.middle[index].action !== 'function' && !config.middle[index].disabled ) {\n                    throw new Error(__filename + ': action must be a function');\n                }\n                ++index;\n            }\n        }\n        if ( config.left && typeof config.left.action !== 'function' && !config.left.disabled ) {\n            throw new Error(__filename + ': action must be a function');\n        }\n        if ( config.right && typeof config.right.action !== 'function' && !config.right.disabled ) {\n            throw new Error(__filename + ': action must be a function');\n        }\n    }\n\n    // hide old tab\n    this.tabs[this.tab].$body.classList.add('hidden');\n    this.tab = config.middle && config.middle.length ? config.middle.length - 1 : 0;\n    // current tab shortcut\n    $tab = this.tabs[this.tab];\n    // reset all actions\n    $tab.codes = {};\n\n    // left button\n    if ( config.left ) {\n        this.$left.className = config.left.className || ('theme-icon ' + (classes[config.left.code] || 'theme-icon-warning'));\n        if ( config.left.disabled ) {\n            this.$left.classList.add('disabled');\n        } else {\n            $tab.codes[config.left.code] = {action: config.left.action};\n            this.$left.style.visibility = 'inherit';\n            this.$left.onclick = function () {\n                if ( typeof config.left.action === 'function' ) {\n                    config.left.action();\n                }\n            };\n        }\n    } else if ( this.$left.style.visibility !== 'hidden' ) {\n        this.$left.style.visibility = 'hidden';\n    }\n\n    // right button\n    if ( config.right ) {\n        this.$right.className = config.right.className || ('theme-icon ' + (classes[config.right.code] || 'theme-icon-warning'));\n        if ( config.right.disabled ) {\n            this.$right.classList.add('disabled');\n        } else {\n            $tab.codes[config.right.code] = {action: config.right.action};\n            this.$right.style.visibility = 'inherit';\n            this.$right.onclick = function () {\n                if ( typeof config.right.action === 'function' ) {\n                    config.right.action();\n                }\n            };\n        }\n    } else if ( this.$right.style.visibility !== 'hidden' ) {\n        this.$right.style.visibility = 'hidden';\n    }\n\n    function addClick ( ind ) {\n        return function () {\n            if ( typeof config.middle[ind].action === 'function' ) {\n                config.middle[ind].action();\n            }\n        };\n    }\n\n    // middle buttons\n    if ( config.middle && config.middle.length ) {\n        for ( index = 0; index < config.middle.length; index++ ) {\n            $tab.codes[config.middle[index].code] = {action: config.middle[index].action};\n            if ( config.middle[index].disabled ) {\n                $tab.$body.children[index].classList.add('disabled');\n            } else {\n                $tab.$body.children[index].classList.remove('disabled');\n                $tab.$body.children[index].onclick = addClick(index);\n            }\n            // shortcut\n            $tabChildren = $tab.$body.children[index].children;\n            $tabChildren[0].className = 'iconImg ' +\n                (config.middle[index].className || ('theme-icon ' + (classes[config.middle[index].code] || 'theme-icon-warning')));\n\n            $tabChildren[1].innerText = config.middle[index].title || '';\n        }\n        $tab.$body.classList.remove('hidden');\n    }\n};\n\n\n// public\nmodule.exports = Footer;\n","/**\n * Exit from an app in three ways.\n *\n * @module app.exit\n */\n\n'use strict';\n\nvar app  = require('mag-app'),\n    exit = {};\n\n\n/**\n * Go back to Launcher from app.\n */\nexit.goBack = function () {\n    app.saveState();\n\n    core.call('stop');\n};\n\n\n/**\n * Exit from an app by pressing \"Exit/Home\" button.\n * Potentially save app state.\n */\nexit.goHome = function () { /* action */ };\n\n\n/**\n * Exit from app.\n * Destroy all application instance.\n * If callback function provided, and callback returns boolean 'true', application will stay alive.\n *\n * @param {PanelSet} panelSet - PanelSet instance to focus\n * @param {Function} [callback] - provide callback if u want to handle exit result, or cancel it\n */\nexit.goExit = function ( panelSet, callback ) {\n    var ModalMessage  = require('mag-component-modal'),\n        LayoutList    = require('mag-component-layout-list'),\n        keys          = require('stb-keys'),\n        previousFocus = app.activePage.activeComponent,\n        exitModal;\n\n    app.activePage.add(exitModal = new ModalMessage({\n        title: gettext('Exit'),\n        events: {\n            show: function () {\n                this.children[0].focus();\n            },\n            hide: function () {\n                previousFocus.focus();\n            }\n        },\n        children: [\n            new LayoutList({\n                className: 'padded',\n                size: 2,\n                focusIndex: 0,\n                data: [\n                    {\n                        items: [\n                            {\n                                value: gettext('Yes')\n                            }\n                        ],\n                        click: function () {\n                            if ( typeof callback === 'function' ) {\n                                if ( callback(true) ) {\n                                    exitModal.hide();\n                                    exitModal.remove();\n\n                                    return;\n                                }\n                            }\n\n                            exitModal.hide();\n                            exitModal.remove();\n\n                            app.saveState();\n                            core.call('exit');\n                        }\n                    },\n                    {\n                        items: [\n                            {\n                                value: gettext('No')\n                            }\n                        ],\n                        click: function () {\n                            if ( typeof callback === 'function' ) {\n                                callback(false);\n                            }\n\n                            exitModal.hide();\n                            exitModal.remove();\n                            panelSet.focus();\n                        }\n                    }\n                ],\n                events: {\n                    keydown: function ( event ) {\n                        LayoutList.prototype.defaultEvents.keydown.call(this, event);\n\n                        if ( event.code === keys.back ) {\n                            event.stop = true;\n\n                            if ( typeof callback === 'function' ) {\n                                callback(false);\n                            }\n\n                            exitModal.hide();\n                            exitModal.remove();\n                            panelSet.focus();\n                        }\n                    }\n                }\n            })\n        ]\n    }));\n\n    exitModal.show();\n    exitModal.focus();\n};\n\n\nmodule.exports = exit;\n","/**\n * Operate with keyboard.\n *\n * @module keyboard\n */\n\n'use strict';\n\n\n/**\n * Open keyboard through core intent.\n *\n * @param {Object} config - keyboard config\n * @param {Function} [callback] - invoked on successful result\n */\nexports.open = function ( config, callback ) {\n    core.intent({\n        action: 'keyboard',\n        data: {\n            title: config.title,\n            value: config.value\n        },\n        events: {\n            done: function ( event ) {\n                var input = config.input;\n\n                input.innerText = event.value || input.parentNode.parentNode.data.value.defaultValue;\n\n                if ( callback ) {\n                    callback(event);\n                }\n            }\n        }\n    }, function ( error ) {\n        console.log(error);\n    });\n};\n","/**\n * HTML DIV elements builder.\n *\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n * @author Yaroslav Surilov <y.surilov@infomir.com>\n */\n\n'use strict';\n\n/**\n * Create a new HTML DIV element.\n *\n * @param {string|null} [className] - element class name/names\n * @param {...*} [content] - element content (primitive value/values or other nodes)\n *\n * @return {Node|null} HTML element or null on failure\n *\n * @example\n * div();\n * div('className', 'some text');\n * div('className anotherClassName', div(), div());\n */\nmodule.exports = function ( className ) {\n    var node = document.createElement('div'),\n        index;\n\n    if ( className ) {\n        node.className = className;\n    }\n\n    // content (arguments except the first)\n    for ( index = 1; index < arguments.length; index += 1 ) {\n        // some data is given\n        if ( arguments[index] ) {\n            // regular HTML tag or plain data\n            node.appendChild(\n                typeof arguments[index] === 'object' ? arguments[index] : document.createTextNode(arguments[index])\n            );\n        }\n    }\n\n    return node;\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-page');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-page';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base page implementation.\n *\n * A full-screen top-level layer that can operate as an independent separate entity.\n * It is added to the document body on creation if not already linked.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n *\n * @example\n * var Page = require('stb/ui/page'),\n *     page = new Page({\n *         $node: document.getElementById(id)\n *     });\n *\n * page.addListener('show', function show () {\n *     // page is visible now\n * });\n */\nfunction Page ( config ) {\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    /**\n     * Page visibility/active state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.active = false;\n\n    /**\n     * Link to the currently active component with focus.\n     *\n     * @readonly\n     * @type {Component}\n     */\n    this.activeComponent = null;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'page ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // state flag\n    this.active = this.$node.classList.contains('active');\n\n    // correct DOM parent/child connection if necessary\n    if ( this.$node.parentNode === null ) {\n        document.body.appendChild(this.$node);\n    }\n\n    // always itself\n    this.page = this;\n}\n\n\n// inheritance\nPage.prototype = Object.create(Component.prototype);\nPage.prototype.constructor = Page;\n\n// set component name\nPage.prototype.name = 'spa-component-page';\n\n\n// public\nmodule.exports = Page;\n"],"sourceRoot":""}