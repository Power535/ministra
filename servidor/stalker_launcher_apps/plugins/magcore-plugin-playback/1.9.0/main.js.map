{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/mag-gettext/index.js","webpack:///./node_modules/cjs-emitter/index.js","webpack:///./src/js/options/audio.langs.js","webpack:///./src/js/plugin.js","webpack:///./src/js/langs.full.js","webpack:///./src/js/options/subtitles.color.js","webpack:///./src/js/options/subtitle.size.js","webpack:///./src/js/main.js","webpack:///./node_modules/cjs-gettext/index.js","webpack:///./src/js/options/buffer.size.js","webpack:///./node_modules/langs/data.js","webpack:///./src/js/options/subtitle.langs.js","webpack:///./src/js/data/colors.js","webpack:///./src/js/data/size.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Emitter","Gettext","loader","prepare","data","gettext","_","pgettext","ngettext","defaultLanguage","load","config","callback","xhr","ext","path","XMLHttpRequest","onload","jsonParseError","json","JSON","parse","responseText","error","onerror","events","emit","ontimeout","open","send","this","addListener","push","once","self","onceWrapper","removeListener","apply","arguments","addListeners","callbacks","filter","fn","length","undefined","index","event","Array","slice","constructor","lang","plugin","langs","local","save","val","langToSave","getLangByCode","audioLanguages","top","stbPlayerManager","list","forEach","player","audioPrimaryLanguage","gSTB","SetAudioLangs","app","id","description","icon","saveImmediate","variable","prepareForRender","item","selected","prepareForSave","render","api","renders","popupSelect","getters","userSettings","saver","savers","parent","setValue","size","codes","1","2T","2B","code","colorsArray","SetSubtitlesColor","subtitlesColor","currentValue","sizeArray","saveValue","SetSubtitlesSize","subtitlesSize","gettextWrapper","onSettingsInit","sections","options","core","device","model","shift","onInit","cb","environment","language","daemon","currentSubtitlesLang","storage","getItem","currentSubtitlesColor","currentSubtitlesSize","backend","audioLangs","settings","setItem","onAppInit","meta","msgId","context","plural","evalResult","eval","randomNumber","Math","floor","SetBufferSize","bufferSize","min","max","step","env","rangeInput","2","3","subtitlesPrimaryLanguage","subtitleLanguages","SetSubtitleLangs","subtitlesLang"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    Gettext = require('cjs-gettext'),\n    loader  = new Emitter();\n\n\nif ( DEVELOP ) {\n    loader._ = loader.gettext = loader.pgettext = loader.ngettext = function () {\n        throw new Error(__filename + ': you cannot use this function before mag-gettext not yet loaded');\n    };\n}\n\n/**\n * Wrap the given data with gettext instance\n * and export methods to the global scope.\n *\n * @param {Object} [data] localization data\n */\nfunction prepare ( data ) {\n    var gettext = new Gettext(data);\n\n    loader._ = loader.gettext = gettext.gettext;\n    loader.pgettext = gettext.pgettext;\n    loader.ngettext = gettext.ngettext;\n}\n\n\n/**\n * Main application language\n */\nloader.defaultLanguage = 'en';\n\n\n/**\n * Simple gettext implementation.\n *\n * @param {Object} config options\n * @param {string} [config.path=lang] relative path to project root\n * @param {string} config.name language name\n * @param {string} [config.ext=json] language file extension\n * @param {function} callback hook on ready\n */\nloader.load = function ( config, callback ) {\n    var xhr;\n\n    if ( DEVELOP ) {\n        if ( !config.name || typeof config.name !== 'string' ) {\n            throw new Error(__filename + ': config.name must be a nonempty string');\n        }\n        if ( callback && typeof callback !== 'function' ) {\n            throw new Error(__filename + ': wrong callback type');\n        }\n    }\n\n    // defaults\n\n    callback = callback || null;\n    config.ext  = config.ext  || 'json';\n    config.path = config.path || 'lang';\n\n    // is it necessary to request a localization file?\n    if ( config.name === loader.defaultLanguage ) {\n        // no\n        prepare();\n        if ( callback !== null ) {\n            callback(null);\n        }\n    } else {\n        xhr = new XMLHttpRequest();\n\n        xhr.onload = function () {\n            var jsonParseError, json;\n\n            try {\n                json = JSON.parse(xhr.responseText);\n            } catch ( error ) {\n                jsonParseError = error;\n            }\n\n            if ( jsonParseError ) {\n                xhr.onerror(jsonParseError);\n            } else {\n                prepare(json);\n                if ( callback !== null ) {\n                    callback(null);\n                }\n\n                // there are some listeners\n                if ( loader.events['load'] ) {\n                    // notify listeners\n                    loader.emit('load');\n                }\n            }\n        };\n\n        xhr.ontimeout = xhr.onerror = function ( error ) {\n            prepare();\n\n            if ( callback !== null ) {\n                callback(null);\n            }\n\n            // there are some listeners\n            if ( loader.events['error'] ) {\n                // notify listeners\n                loader.emit('error', error);\n            }\n        };\n\n        xhr.open('GET', config.path + '/' + config.name + '.' + config.ext, true);\n        xhr.send(null);\n    }\n};\n\n\n// public\nmodule.exports = loader;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Base Events Emitter implementation.\n *\n * @see http://nodejs.org/api/events.html\n * @constructor\n *\n * @example\n * var emitter = new Emitter();\n */\nfunction Emitter () {\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // if ( DEVELOP ) {\n    //     if ( typeof this !== 'object' ) { throw new Error(__filename + ': must be constructed via new'); }\n    // }\n\n    /**\n     * Inner hash table for event names and linked callbacks.\n     * Manual editing should be avoided.\n     *\n     * @member {Object.<string, function[]>}\n     *\n     * @example\n     * {\n     *     click: [\n     *         function click1 () { ... },\n     *         function click2 () { ... }\n     *     ],\n     *     keydown: [\n     *         function () { ... }\n     *     ]\n     * }\n     **/\n    this.events = {};\n}\n\n\nEmitter.prototype = {\n    /**\n     * Bind an event to the given callback function.\n     * The same callback function can be added multiple times for the same event name.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.addListener('click', function ( data ) { ... });\n     * // one more click handler\n     * emitter.addListener('click', function ( data ) { ... });\n     */\n    addListener: function ( name, callback ) {\n        console.assert(arguments.length === 2, 'wrong arguments number');\n        console.assert(typeof name === 'string', 'wrong name type');\n        console.assert(name.length > 0, 'empty name');\n        console.assert(typeof callback === 'function', 'callback should be a function');\n\n        // if ( DEVELOP ) {\n        //     if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        //     if ( typeof name !== 'string' || name.length === 0 ) { throw new Error(__filename + ': wrong or empty name'); }\n        //     if ( typeof callback !== 'function' ) { throw new Error(__filename + ': wrong callback type'); }\n        // }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(callback);\n    },\n\n\n    /**\n     * Add a one time listener for the event.\n     * This listener is invoked only the next time the event is fired, after which it is removed.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.once('click', function ( data ) { ... });\n     */\n    once: function ( name, callback ) {\n        // current execution context\n        var self = this;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n        }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(function onceWrapper () {\n            self.removeListener(name, onceWrapper);\n            callback.apply(self, arguments);\n        });\n    },\n\n\n    /**\n     * Apply multiple listeners at once.\n     *\n     * @param {Object} callbacks event names with callbacks\n     *\n     * @example\n     * emitter.addListeners({\n     *     click: function ( data ) {},\n     *     close: function ( data ) {}\n     * });\n     */\n    addListeners: function ( callbacks ) {\n        var name;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof callbacks !== 'object' ) {\n                throw new Error(__filename + ': wrong callbacks type');\n            }\n            if ( Object.keys(callbacks).length === 0 ) {\n                throw new Error(__filename + ': no callbacks given');\n            }\n        }\n\n        for ( name in callbacks ) {\n            if ( callbacks.hasOwnProperty(name) ) {\n                this.addListener(name, callbacks[name]);\n            }\n        }\n    },\n\n\n    /**\n     * Remove all instances of the given callback.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to remove\n     *\n     * @example\n     * emitter.removeListener('click', func1);\n     */\n    removeListener: function ( name, callback ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n            if ( this.events[name] && !Array.isArray(this.events[name]) ) {\n                throw new Error(__filename + ': corrupted inner data');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( this.events[name] ) {\n            // rework the callback list to exclude the given one\n            this.events[name] = this.events[name].filter(function callbacksFilter ( fn ) { return fn !== callback; });\n            // event has no more callbacks so clean it\n            if ( this.events[name].length === 0 ) {\n                // as if there were no listeners at all\n                this.events[name] = undefined;\n            }\n        }\n    },\n\n\n    /**\n     * Remove all callbacks for the given event name.\n     * Without event name clears all events.\n     *\n     * @param {string} [name] event identifier\n     *\n     * @example\n     * emitter.removeAllListeners('click');\n     * emitter.removeAllListeners();\n     *\n     * @deprecated\n     */\n    /*removeAllListeners: function ( name ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 0 && (typeof name !== 'string' || name.length === 0) ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // check input\n        if ( arguments.length === 0 ) {\n            // no arguments so remove everything\n            this.events = {};\n        } else if ( name ) {\n            if ( DEVELOP ) {\n                if ( this.events[name] ) { throw new Error(__filename + ': event is not removed'); }\n            }\n\n            // only name is given so remove all callbacks for the given event\n            // but object structure modification should be avoided\n            this.events[name] = undefined;\n        }\n    },*/\n\n\n    /**\n     * Execute each of the listeners in the given order with the supplied arguments.\n     *\n     * @param {string} name event identifier\n     *\n     * @example\n     * emitter.emit('init');\n     * emitter.emit('click', {src: panel1, dst: panel2});\n     * emitter.emit('load', error, data);\n     *\n     * // it's a good idea to emit event only when there are some listeners\n     * if ( this.events['click'] ) {\n     *     this.emit('click', {event: event});\n     * }\n     */\n    emit: function ( name ) {\n        var event = this.events[name],\n            index;\n\n        if ( DEVELOP ) {\n            if ( arguments.length < 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( event ) {\n            if ( DEVELOP ) {\n                if ( !Array.isArray(event) ) {\n                    throw new Error(__filename + ': wrong event type');\n                }\n            }\n\n            for ( index = 0; index < event.length; index++ ) {\n                if ( DEVELOP ) {\n                    if ( typeof event[index] !== 'function' ) {\n                        throw new Error(__filename + ': wrong event callback type');\n                    }\n                }\n\n                // invoke the callback with parameters\n                event[index].apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n    }\n};\n\n\n// correct constructor name\nEmitter.prototype.constructor = Emitter;\n\n\n// public\nmodule.exports = Emitter;\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar plugin  = require('../plugin'),\n    langs   = require('../langs.full'),\n    gettext = require('mag-gettext').gettext,\n    data    = [],\n    lang;\n\nfor ( lang in langs['1'] ) {\n    data.push({\n        value: lang,\n        name: langs['1'][lang].local + ' (' + langs['1'][lang].name + ')'\n    });\n}\n\nfunction save ( val ) {\n    var langToSave;\n\n    langToSave = langs.getLangByCode(val);\n\n    if ( !langToSave ) {\n        return;\n    }\n\n    console.log('SET AUDIO:' + val);\n\n\n    plugin.audioLanguages = [langToSave['1'], langToSave['2T'], langToSave['2B']];\n\n    if ( top.stbPlayerManager && top.stbPlayerManager.list ) {\n        top.stbPlayerManager.list.forEach(function ( player ) {\n            player.audioPrimaryLanguage = langToSave['1'];\n            player.audioLanguages = [langToSave['1'], langToSave['2T'], langToSave['2B']];\n        });\n    } else {\n        top.gSTB.SetAudioLangs(val['1']); //eslint-disable-line\n    }\n}\n\n\nmodule.exports = function ( app ) {\n    return {\n        id: 'audioLangs',\n        name: gettext('Primary audio track language'),\n        description: gettext('Setting the default audio track. If the default audio track is not selected for a video you are playing, then the video is played with the first available track.'), //eslint-disable-line\n        icon: 'theme-icon-equalizer',\n        saveImmediate: true,\n        variable: {\n            name: 'pri_audio_lang',\n            value: 'en'\n        },\n        prepareForRender: function ( value, callback ) {\n            data.forEach(function ( item ) {\n                item.selected = item.value === value;\n            });\n            callback(data);\n        },\n        prepareForSave: function ( value, callback ) {\n            this.variable.value = value;\n\n            save(value);\n            callback();\n        },\n        render: app.api.renders.popupSelect,\n        getter: app.api.getters.userSettings,\n        saver: app.api.savers.userSettings,\n        parent: 'playback'\n    };\n};\n\n\nmodule.exports.setValue = save;\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nmodule.exports = {\n    /**\n     * Audio languages\n     */\n    audioLanguages: []\n};\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar langs = require('langs/data'),\n    codes = {\n        1:    {},\n        '2T': {},\n        '2B': {}\n    },\n    index, size, lang;\n\n\n// rework language data\nfor ( index = 0, size = langs.length; index < size; index++ ) {\n    lang = langs[index];\n    // link all tables with the same data\n    codes['1'][lang['1']] = codes['2T'][lang['2T']] = codes['2B'][lang['2B']] = lang;\n}\n\n// public\nmodule.exports = codes;\n\nmodule.exports.getLangByCode = function ( code ) {\n    return ( codes['1'][code] || codes['2T'][code] || codes['2B'][code]);\n};\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar colorsArray = require('../data/colors'),\n    gettext     = require('mag-gettext').gettext;\n\nfunction setValue ( val ) {\n    top.gSTB.SetSubtitlesColor(+val); //eslint-disable-line\n}\n\nmodule.exports = function ( app ) {\n    return {\n        id: 'subtitleColor',\n        name: gettext('Subtitle color'),\n        description: gettext('Setting the subtitle colour'),\n        icon: 'theme-icon-color',\n        data: {\n            subtitlesColor: 0xFFFFFF\n        },\n        saveImmediate: true,\n        prepareForRender: function ( currentValue, callback ) {\n            colorsArray.forEach(function ( item ) {\n                item.selected = item.value === currentValue.subtitlesColor;\n            });\n\n            callback(colorsArray);\n        },\n        prepareForSave: function ( value, callback ) {\n            this.data.subtitlesColor = value;\n\n            setValue(value);\n            callback();\n        },\n        render: app.api.renders.popupSelect,\n        parent: 'playback'\n    };\n};\n\nmodule.exports.setValue = setValue;\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar sizeArray = require('../data/size'),\n    gettext   = require('mag-gettext').gettext;\n\n\nfunction saveValue ( value ) {\n    top.gSTB.SetSubtitlesSize(value); //eslint-disable-line\n}\n\nmodule.exports = function ( app ) {\n    return {\n        id: 'subtitleSize',\n        name: gettext('Subtitle size'),\n        description: gettext('Setting the font size of subtitles'),\n        icon: 'theme-icon-font-size',\n        data: {\n            subtitlesSize: 20\n        },\n        saveImmediate: true,\n        prepareForRender: function ( currentValue, callback ) {\n            sizeArray.forEach(function ( item ) {\n                item.selected = item.value === currentValue.subtitlesSize;\n            });\n\n            callback(sizeArray);\n        },\n        prepareForSave: function ( value, callback ) {\n            this.data.subtitlesSize = value;\n\n            saveValue(value);\n            callback();\n        },\n        render: app.api.renders.popupSelect,\n        parent: 'playback'\n    };\n};\n\nmodule.exports.setValue = saveValue;\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar gettextWrapper = require('mag-gettext'),\n    gettext;\n\n\nmodule.exports = {\n    onSettingsInit: function ( app, callback ) {\n        var data = {\n            sections: [\n                {\n                    id: 'playback',\n                    name: gettext('Playback'),\n                    description: gettext('Setting video playback options'),\n                    icon: 'theme-icon-monitor',\n                    parent: 'system'\n                }\n            ],\n            options: [\n                // buffer size\n                require('./options/buffer.size')(app),\n                // Audio primary lang\n                require('./options/audio.langs')(app),\n                // Subtitle primary lang\n                require('./options/subtitle.langs')(app),\n                // Subtitle color option\n                require('./options/subtitles.color')(app),\n                // Subtitle size option\n                require('./options/subtitle.size')(app)\n            ]\n        };\n\n        // remove buffer size options in emulator\n        if ( core.device && core.device.model === 'emulator' ) {\n            data.options.shift();\n        }\n\n        callback(false, data);\n    },\n    onInit: function ( app, cb ) {\n        gettextWrapper.load({\n            name: core.environment.language,\n            path: app.path + 'lang'\n        }, function () {\n            var daemon = new (require('cjs-emitter'))(),\n                currentSubtitlesLang = app.storage.getItem('subtitlesLang'),\n                currentSubtitlesColor = app.storage.getItem('subtitlesColor'),\n                currentSubtitlesSize  = app.storage.getItem('subtitlesSize');\n\n            gettext = gettextWrapper.gettext;\n\n            daemon.addListener('system:start', function () {\n                if ( core.backend ) {\n                    core.backend.addListener('ready', function () {\n                        var audioLangs = core.backend.settings['pri_audio_lang'] || core.environment.language || 'en';\n\n                        // now we get settings from stalker\n                        require('./options/audio.langs').setValue(audioLangs);\n                    });\n                }\n            });\n\n            if ( !currentSubtitlesLang ) {\n                currentSubtitlesLang = core.environment.language;\n                app.storage.setItem('subtitlesLang', currentSubtitlesLang);\n            }\n\n            if ( !currentSubtitlesColor ) {\n                currentSubtitlesColor = 0xFFFFFF;\n                app.storage.setItem('subtitlesColor', currentSubtitlesColor);\n            }\n            require('./options/subtitles.color').setValue(currentSubtitlesColor);\n\n            if ( !currentSubtitlesSize ) {\n                currentSubtitlesSize = 20;\n                app.storage.setItem('subtitlesSize', currentSubtitlesSize);\n            }\n            require('./options/subtitle.size').setValue(currentSubtitlesSize);\n\n\n            cb(null, daemon);\n        });\n    },\n    onAppInit: function ( app, callback ) {\n        callback(null, require('./plugin'));\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Translations handler.\n *\n * @constructor\n *\n * @param {Object} config init parameters\n */\nfunction Gettext ( config ) {\n    var data, meta;\n\n    // sanitize\n    config   = config || {};\n    data     = config.data || {};\n    data[''] = data[''] || {};\n\n    // shortcut\n    meta = config.meta;\n\n    /**\n     * Display the native language translation of a textual message.\n     *\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.gettext = function ( msgId ) {\n        return data[''][msgId] || msgId;\n    };\n\n\n    /**\n     * The \"p\" in \"pgettext\" stands for \"particular\": fetches a particular translation of the textual message.\n     *\n     * @param {string} context message context\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.pgettext = function ( context, msgId ) {\n        return data[context] && data[context][msgId] || msgId;\n    };\n\n\n    /**\n     * Display the native language translation of a textual message whose grammatical form depends on a number.\n     *\n     * @param {string} msgId textual message in a singular form\n     * @param {string} plural textual message in a plural form\n     * @param {number} value message number\n     *\n     * @return {string} translated text\n     */\n    this.ngettext = function ( msgId, plural, value ) {\n        /* eslint no-unused-vars: 0 */\n        /* eslint no-eval: 0 */\n        /* eslint id-length: 0 */\n        var n, evalResult;\n\n        if ( DEVELOP ) {\n            if ( Number(value) !== value ) {\n                throw new Error(__filename + ': value must be a number');\n            }\n        }\n\n        if ( data && meta && data[''][msgId] ) {\n            evalResult = eval('n = ' + value + '; ' + meta.plural);\n\n            if ( typeof evalResult === 'boolean' ) {\n                evalResult = +evalResult;\n            }\n\n            // translation\n            return data[''][msgId][evalResult];\n        }\n\n        // english\n        return value === 1 ? msgId : plural;\n    };\n}\n\n\n// correct constructor name\nGettext.prototype.constructor = Gettext;\n\n\n// public\nmodule.exports = Gettext;\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar gettext = require('mag-gettext').gettext;\n\nfunction saveValue ( value ) {\n    var randomNumber = Math.floor(15360000 / 20000 * value);\n\n    gSTB.SetBufferSize(value, randomNumber); //eslint-disable-line\n}\n\nmodule.exports = function ( app ) {\n    return {\n        id: 'bufferSize',\n        name: gettext('Buffer size'),\n        description: gettext('Increasing of the buffer size allows you to view a video without delay, if the Internet speed is slow or unstable.'),\n        icon: 'theme-icon-play',\n        data: {\n            bufferSize: 0\n        },\n        config: {\n            min: 0,\n            max: 20000,\n            step: 100\n        },\n        saveImmediate: true,\n        prepareForRender: function ( env, callback ) {\n            this.data.bufferSize = +env.bufferSize;\n\n            callback(env.bufferSize);\n        },\n        prepareForSave: function ( value, callback ) {\n            this.data.bufferSize = value;\n\n            saveValue(value);\n            callback();\n        },\n        render: app.api.renders.rangeInput,\n        parent: 'playback'\n    };\n};\n\nmodule.exports.setValue = saveValue;\n","module.exports = [\n    {\"name\":\"Abkhaz\", \"local\":\"Аҧсуа\", \"1\":\"ab\", \"2\":\"abk\", \"2T\":\"abk\", \"2B\":\"abk\", \"3\":\"abk\"},\n    {\"name\":\"Afar\", \"local\":\"Afaraf\", \"1\":\"aa\", \"2\":\"aar\", \"2T\":\"aar\", \"2B\":\"aar\", \"3\":\"aar\"},\n    {\"name\":\"Afrikaans\", \"local\":\"Afrikaans\", \"1\":\"af\", \"2\":\"afr\", \"2T\":\"afr\", \"2B\":\"afr\", \"3\":\"afr\"},\n    {\"name\":\"Akan\", \"local\":\"Akan\", \"1\":\"ak\", \"2\":\"aka\", \"2T\":\"aka\", \"2B\":\"aka\", \"3\":\"aka\"},\n    {\"name\":\"Albanian\", \"local\":\"Shqip\", \"1\":\"sq\", \"2\":\"sqi\", \"2T\":\"sqi\", \"2B\":\"alb\", \"3\":\"sqi\"},\n    {\"name\":\"Amharic\", \"local\":\"አማርኛ\", \"1\":\"am\", \"2\":\"amh\", \"2T\":\"amh\", \"2B\":\"amh\", \"3\":\"amh\"},\n    {\"name\":\"Arabic\", \"local\":\"العربية\", \"1\":\"ar\", \"2\":\"ara\", \"2T\":\"ara\", \"2B\":\"ara\", \"3\":\"ara\"},\n    {\"name\":\"Aragonese\", \"local\":\"Aragonés\", \"1\":\"an\", \"2\":\"arg\", \"2T\":\"arg\", \"2B\":\"arg\", \"3\":\"arg\"},\n    {\"name\":\"Armenian\", \"local\":\"Հայերեն\", \"1\":\"hy\", \"2\":\"hye\", \"2T\":\"hye\", \"2B\":\"arm\", \"3\":\"hye\"},\n    {\"name\":\"Assamese\", \"local\":\"অসমীয়া\", \"1\":\"as\", \"2\":\"asm\", \"2T\":\"asm\", \"2B\":\"asm\", \"3\":\"asm\"},\n    {\"name\":\"Avaric\", \"local\":\"Авар\", \"1\":\"av\", \"2\":\"ava\", \"2T\":\"ava\", \"2B\":\"ava\", \"3\":\"ava\"},\n    {\"name\":\"Avestan\", \"local\":\"avesta\", \"1\":\"ae\", \"2\":\"ave\", \"2T\":\"ave\", \"2B\":\"ave\", \"3\":\"ave\"},\n    {\"name\":\"Aymara\", \"local\":\"Aymar\", \"1\":\"ay\", \"2\":\"aym\", \"2T\":\"aym\", \"2B\":\"aym\", \"3\":\"aym\"},\n    {\"name\":\"Azerbaijani\", \"local\":\"Azərbaycanca\", \"1\":\"az\", \"2\":\"aze\", \"2T\":\"aze\", \"2B\":\"aze\", \"3\":\"aze\"},\n    {\"name\":\"Bambara\", \"local\":\"Bamanankan\", \"1\":\"bm\", \"2\":\"bam\", \"2T\":\"bam\", \"2B\":\"bam\", \"3\":\"bam\"},\n    {\"name\":\"Bashkir\", \"local\":\"Башҡортса\", \"1\":\"ba\", \"2\":\"bak\", \"2T\":\"bak\", \"2B\":\"bak\", \"3\":\"bak\"},\n    {\"name\":\"Basque\", \"local\":\"Euskara\", \"1\":\"eu\", \"2\":\"eus\", \"2T\":\"eus\", \"2B\":\"baq\", \"3\":\"eus\"},\n    {\"name\":\"Belarusian\", \"local\":\"Беларуская\", \"1\":\"be\", \"2\":\"bel\", \"2T\":\"bel\", \"2B\":\"bel\", \"3\":\"bel\"},\n    {\"name\":\"Bengali\", \"local\":\"বাংলা\", \"1\":\"bn\", \"2\":\"ben\", \"2T\":\"ben\", \"2B\":\"ben\", \"3\":\"ben\"},\n    {\"name\":\"Bihari\", \"local\":\"भोजपुरी\", \"1\":\"bh\", \"2\":\"bih\", \"2T\":\"bih\", \"2B\":\"bih\", \"3\":\"bih\"},\n    {\"name\":\"Bislama\", \"local\":\"Bislama\", \"1\":\"bi\", \"2\":\"bis\", \"2T\":\"bis\", \"2B\":\"bis\", \"3\":\"bis\"},\n    {\"name\":\"Bosnian\", \"local\":\"Bosanski\", \"1\":\"bs\", \"2\":\"bos\", \"2T\":\"bos\", \"2B\":\"bos\", \"3\":\"bos\"},\n    {\"name\":\"Breton\", \"local\":\"Brezhoneg\", \"1\":\"br\", \"2\":\"bre\", \"2T\":\"bre\", \"2B\":\"bre\", \"3\":\"bre\"},\n    {\"name\":\"Bulgarian\", \"local\":\"Български\", \"1\":\"bg\", \"2\":\"bul\", \"2T\":\"bul\", \"2B\":\"bul\", \"3\":\"bul\"},\n    {\"name\":\"Burmese\", \"local\":\"မြန်မာဘာသာ\", \"1\":\"my\", \"2\":\"mya\", \"2T\":\"mya\", \"2B\":\"bur\", \"3\":\"mya\"},\n    {\"name\":\"Catalan\", \"local\":\"Català\", \"1\":\"ca\", \"2\":\"cat\", \"2T\":\"cat\", \"2B\":\"cat\", \"3\":\"cat\"},\n    {\"name\":\"Chamorro\", \"local\":\"Chamoru\", \"1\":\"ch\", \"2\":\"cha\", \"2T\":\"cha\", \"2B\":\"cha\", \"3\":\"cha\"},\n    {\"name\":\"Chechen\", \"local\":\"Нохчийн\", \"1\":\"ce\", \"2\":\"che\", \"2T\":\"che\", \"2B\":\"che\", \"3\":\"che\"},\n    {\"name\":\"Chichewa\", \"local\":\"Chichewa\", \"1\":\"ny\", \"2\":\"nya\", \"2T\":\"nya\", \"2B\":\"nya\", \"3\":\"nya\"},\n    {\"name\":\"Chinese\", \"local\":\"中文\", \"1\":\"zh\", \"2\":\"zho\", \"2T\":\"zho\", \"2B\":\"chi\", \"3\":\"zho\"},\n    {\"name\":\"Chuvash\", \"local\":\"Чӑвашла\", \"1\":\"cv\", \"2\":\"chv\", \"2T\":\"chv\", \"2B\":\"chv\", \"3\":\"chv\"},\n    {\"name\":\"Cornish\", \"local\":\"Kernewek\", \"1\":\"kw\", \"2\":\"cor\", \"2T\":\"cor\", \"2B\":\"cor\", \"3\":\"cor\"},\n    {\"name\":\"Corsican\", \"local\":\"Corsu\", \"1\":\"co\", \"2\":\"cos\", \"2T\":\"cos\", \"2B\":\"cos\", \"3\":\"cos\"},\n    {\"name\":\"Cree\", \"local\":\"ᓀᐦᐃᔭᐍᐏᐣ\", \"1\":\"cr\", \"2\":\"cre\", \"2T\":\"cre\", \"2B\":\"cre\", \"3\":\"cre\"},\n    {\"name\":\"Croatian\", \"local\":\"Hrvatski\", \"1\":\"hr\", \"2\":\"hrv\", \"2T\":\"hrv\", \"2B\":\"hrv\", \"3\":\"hrv\"},\n    {\"name\":\"Czech\", \"local\":\"Čeština\", \"1\":\"cs\", \"2\":\"ces\", \"2T\":\"ces\", \"2B\":\"cze\", \"3\":\"ces\"},\n    {\"name\":\"Danish\", \"local\":\"Dansk\", \"1\":\"da\", \"2\":\"dan\", \"2T\":\"dan\", \"2B\":\"dan\", \"3\":\"dan\"},\n    {\"name\":\"Divehi\", \"local\":\"Divehi\", \"1\":\"dv\", \"2\":\"div\", \"2T\":\"div\", \"2B\":\"div\", \"3\":\"div\"},\n    {\"name\":\"Dutch\", \"local\":\"Nederlands\", \"1\":\"nl\", \"2\":\"nld\", \"2T\":\"nld\", \"2B\":\"dut\", \"3\":\"nld\"},\n    {\"name\":\"Dzongkha\", \"local\":\"རྫོང་ཁ\", \"1\":\"dz\", \"2\":\"dzo\", \"2T\":\"dzo\", \"2B\":\"dzo\", \"3\":\"dzo\"},\n    {\"name\":\"English\", \"local\":\"English\", \"1\":\"en\", \"2\":\"eng\", \"2T\":\"eng\", \"2B\":\"eng\", \"3\":\"eng\"},\n    {\"name\":\"Esperanto\", \"local\":\"Esperanto\", \"1\":\"eo\", \"2\":\"epo\", \"2T\":\"epo\", \"2B\":\"epo\", \"3\":\"epo\"},\n    {\"name\":\"Estonian\", \"local\":\"Eesti\", \"1\":\"et\", \"2\":\"est\", \"2T\":\"est\", \"2B\":\"est\", \"3\":\"est\"},\n    {\"name\":\"Ewe\", \"local\":\"Eʋegbe\", \"1\":\"ee\", \"2\":\"ewe\", \"2T\":\"ewe\", \"2B\":\"ewe\", \"3\":\"ewe\"},\n    {\"name\":\"Faroese\", \"local\":\"Føroyskt\", \"1\":\"fo\", \"2\":\"fao\", \"2T\":\"fao\", \"2B\":\"fao\", \"3\":\"fao\"},\n    {\"name\":\"Fijian\", \"local\":\"Na Vosa Vaka-Viti\", \"1\":\"fj\", \"2\":\"fij\", \"2T\":\"fij\", \"2B\":\"fij\", \"3\":\"fij\"},\n    {\"name\":\"Finnish\", \"local\":\"Suomi\", \"1\":\"fi\", \"2\":\"fin\", \"2T\":\"fin\", \"2B\":\"fin\", \"3\":\"fin\"},\n    {\"name\":\"French\", \"local\":\"Français\", \"1\":\"fr\", \"2\":\"fra\", \"2T\":\"fra\", \"2B\":\"fre\", \"3\":\"fra\"},\n    {\"name\":\"Fula\", \"local\":\"Fulfulde\", \"1\":\"ff\", \"2\":\"ful\", \"2T\":\"ful\", \"2B\":\"ful\", \"3\":\"ful\"},\n    {\"name\":\"Galician\", \"local\":\"Galego\", \"1\":\"gl\", \"2\":\"glg\", \"2T\":\"glg\", \"2B\":\"glg\", \"3\":\"glg\"},\n    {\"name\":\"Georgian\", \"local\":\"ქართული\", \"1\":\"ka\", \"2\":\"kat\", \"2T\":\"kat\", \"2B\":\"geo\", \"3\":\"kat\"},\n    {\"name\":\"German\", \"local\":\"Deutsch\", \"1\":\"de\", \"2\":\"deu\", \"2T\":\"deu\", \"2B\":\"ger\", \"3\":\"deu\"},\n    {\"name\":\"Greek\", \"local\":\"Ελληνικά\", \"1\":\"el\", \"2\":\"ell\", \"2T\":\"ell\", \"2B\":\"gre\", \"3\":\"ell\"},\n    {\"name\":\"Guaraní\", \"local\":\"Avañe'ẽ\", \"1\":\"gn\", \"2\":\"grn\", \"2T\":\"grn\", \"2B\":\"grn\", \"3\":\"grn\"},\n    {\"name\":\"Gujarati\", \"local\":\"ગુજરાતી\", \"1\":\"gu\", \"2\":\"guj\", \"2T\":\"guj\", \"2B\":\"guj\", \"3\":\"guj\"},\n    {\"name\":\"Haitian\", \"local\":\"Kreyòl Ayisyen\", \"1\":\"ht\", \"2\":\"hat\", \"2T\":\"hat\", \"2B\":\"hat\", \"3\":\"hat\"},\n    {\"name\":\"Hausa\", \"local\":\"هَوُسَ\", \"1\":\"ha\", \"2\":\"hau\", \"2T\":\"hau\", \"2B\":\"hau\", \"3\":\"hau\"},\n    {\"name\":\"Hebrew\", \"local\":\"עברית\", \"1\":\"he\", \"2\":\"heb\", \"2T\":\"heb\", \"2B\":\"heb\", \"3\":\"heb\"},\n    {\"name\":\"Herero\", \"local\":\"Otjiherero\", \"1\":\"hz\", \"2\":\"her\", \"2T\":\"her\", \"2B\":\"her\", \"3\":\"her\"},\n    {\"name\":\"Hindi\", \"local\":\"हिन्दी\", \"1\":\"hi\", \"2\":\"hin\", \"2T\":\"hin\", \"2B\":\"hin\", \"3\":\"hin\"},\n    {\"name\":\"Hiri Motu\", \"local\":\"Hiri Motu\", \"1\":\"ho\", \"2\":\"hmo\", \"2T\":\"hmo\", \"2B\":\"hmo\", \"3\":\"hmo\"},\n    {\"name\":\"Hungarian\", \"local\":\"Magyar\", \"1\":\"hu\", \"2\":\"hun\", \"2T\":\"hun\", \"2B\":\"hun\", \"3\":\"hun\"},\n    {\"name\":\"Interlingua\", \"local\":\"Interlingua\", \"1\":\"ia\", \"2\":\"ina\", \"2T\":\"ina\", \"2B\":\"ina\", \"3\":\"ina\"},\n    {\"name\":\"Indonesian\", \"local\":\"Bahasa Indonesia\", \"1\":\"id\", \"2\":\"ind\", \"2T\":\"ind\", \"2B\":\"ind\", \"3\":\"ind\"},\n    {\"name\":\"Interlingue\", \"local\":\"Interlingue\", \"1\":\"ie\", \"2\":\"ile\", \"2T\":\"ile\", \"2B\":\"ile\", \"3\":\"ile\"},\n    {\"name\":\"Irish\", \"local\":\"Gaeilge\", \"1\":\"ga\", \"2\":\"gle\", \"2T\":\"gle\", \"2B\":\"gle\", \"3\":\"gle\"},\n    {\"name\":\"Igbo\", \"local\":\"Igbo\", \"1\":\"ig\", \"2\":\"ibo\", \"2T\":\"ibo\", \"2B\":\"ibo\", \"3\":\"ibo\"},\n    {\"name\":\"Inupiaq\", \"local\":\"Iñupiak\", \"1\":\"ik\", \"2\":\"ipk\", \"2T\":\"ipk\", \"2B\":\"ipk\", \"3\":\"ipk\"},\n    {\"name\":\"Ido\", \"local\":\"Ido\", \"1\":\"io\", \"2\":\"ido\", \"2T\":\"ido\", \"2B\":\"ido\", \"3\":\"ido\"},\n    {\"name\":\"Icelandic\", \"local\":\"Íslenska\", \"1\":\"is\", \"2\":\"isl\", \"2T\":\"isl\", \"2B\":\"ice\", \"3\":\"isl\"},\n    {\"name\":\"Italian\", \"local\":\"Italiano\", \"1\":\"it\", \"2\":\"ita\", \"2T\":\"ita\", \"2B\":\"ita\", \"3\":\"ita\"},\n    {\"name\":\"Inuktitut\", \"local\":\"ᐃᓄᒃᑎᑐᑦ\", \"1\":\"iu\", \"2\":\"iku\", \"2T\":\"iku\", \"2B\":\"iku\", \"3\":\"iku\"},\n    {\"name\":\"Japanese\", \"local\":\"日本語\", \"1\":\"ja\", \"2\":\"jpn\", \"2T\":\"jpn\", \"2B\":\"jpn\", \"3\":\"jpn\"},\n    {\"name\":\"Javanese\", \"local\":\"Basa Jawa\", \"1\":\"jv\", \"2\":\"jav\", \"2T\":\"jav\", \"2B\":\"jav\", \"3\":\"jav\"},\n    {\"name\":\"Kalaallisut\", \"local\":\"Kalaallisut\", \"1\":\"kl\", \"2\":\"kal\", \"2T\":\"kal\", \"2B\":\"kal\", \"3\":\"kal\"},\n    {\"name\":\"Kannada\", \"local\":\"ಕನ್ನಡ\", \"1\":\"kn\", \"2\":\"kan\", \"2T\":\"kan\", \"2B\":\"kan\", \"3\":\"kan\"},\n    {\"name\":\"Kanuri\", \"local\":\"Kanuri\", \"1\":\"kr\", \"2\":\"kau\", \"2T\":\"kau\", \"2B\":\"kau\", \"3\":\"kau\"},\n    {\"name\":\"Kashmiri\", \"local\":\"كشميري\", \"1\":\"ks\", \"2\":\"kas\", \"2T\":\"kas\", \"2B\":\"kas\", \"3\":\"kas\"},\n    {\"name\":\"Kazakh\", \"local\":\"Қазақша\", \"1\":\"kk\", \"2\":\"kaz\", \"2T\":\"kaz\", \"2B\":\"kaz\", \"3\":\"kaz\"},\n    {\"name\":\"Khmer\", \"local\":\"ភាសាខ្មែរ\", \"1\":\"km\", \"2\":\"khm\", \"2T\":\"khm\", \"2B\":\"khm\", \"3\":\"khm\"},\n    {\"name\":\"Kikuyu\", \"local\":\"Gĩkũyũ\", \"1\":\"ki\", \"2\":\"kik\", \"2T\":\"kik\", \"2B\":\"kik\", \"3\":\"kik\"},\n    {\"name\":\"Kinyarwanda\", \"local\":\"Kinyarwanda\", \"1\":\"rw\", \"2\":\"kin\", \"2T\":\"kin\", \"2B\":\"kin\", \"3\":\"kin\"},\n    {\"name\":\"Kyrgyz\", \"local\":\"Кыргызча\", \"1\":\"ky\", \"2\":\"kir\", \"2T\":\"kir\", \"2B\":\"kir\", \"3\":\"kir\"},\n    {\"name\":\"Komi\", \"local\":\"Коми\", \"1\":\"kv\", \"2\":\"kom\", \"2T\":\"kom\", \"2B\":\"kom\", \"3\":\"kom\"},\n    {\"name\":\"Kongo\", \"local\":\"Kongo\", \"1\":\"kg\", \"2\":\"kon\", \"2T\":\"kon\", \"2B\":\"kon\", \"3\":\"kon\"},\n    {\"name\":\"Korean\", \"local\":\"한국어\", \"1\":\"ko\", \"2\":\"kor\", \"2T\":\"kor\", \"2B\":\"kor\", \"3\":\"kor\"},\n    {\"name\":\"Kurdish\", \"local\":\"Kurdî\", \"1\":\"ku\", \"2\":\"kur\", \"2T\":\"kur\", \"2B\":\"kur\", \"3\":\"kur\"},\n    {\"name\":\"Kwanyama\", \"local\":\"Kuanyama\", \"1\":\"kj\", \"2\":\"kua\", \"2T\":\"kua\", \"2B\":\"kua\", \"3\":\"kua\"},\n    {\"name\":\"Latin\", \"local\":\"Latina\", \"1\":\"la\", \"2\":\"lat\", \"2T\":\"lat\", \"2B\":\"lat\", \"3\":\"lat\"},\n    {\"name\":\"Luxembourgish\", \"local\":\"Lëtzebuergesch\", \"1\":\"lb\", \"2\":\"ltz\", \"2T\":\"ltz\", \"2B\":\"ltz\", \"3\":\"ltz\"},\n    {\"name\":\"Ganda\", \"local\":\"Luganda\", \"1\":\"lg\", \"2\":\"lug\", \"2T\":\"lug\", \"2B\":\"lug\", \"3\":\"lug\"},\n    {\"name\":\"Limburgish\", \"local\":\"Limburgs\", \"1\":\"li\", \"2\":\"lim\", \"2T\":\"lim\", \"2B\":\"lim\", \"3\":\"lim\"},\n    {\"name\":\"Lingala\", \"local\":\"Lingála\", \"1\":\"ln\", \"2\":\"lin\", \"2T\":\"lin\", \"2B\":\"lin\", \"3\":\"lin\"},\n    {\"name\":\"Lao\", \"local\":\"ພາສາລາວ\", \"1\":\"lo\", \"2\":\"lao\", \"2T\":\"lao\", \"2B\":\"lao\", \"3\":\"lao\"},\n    {\"name\":\"Lithuanian\", \"local\":\"Lietuvių\", \"1\":\"lt\", \"2\":\"lit\", \"2T\":\"lit\", \"2B\":\"lit\", \"3\":\"lit\"},\n    {\"name\":\"Luba-Katanga\", \"local\":\"Tshiluba\", \"1\":\"lu\", \"2\":\"lub\", \"2T\":\"lub\", \"2B\":\"lub\", \"3\":\"lub\"},\n    {\"name\":\"Latvian\", \"local\":\"Latviešu\", \"1\":\"lv\", \"2\":\"lav\", \"2T\":\"lav\", \"2B\":\"lav\", \"3\":\"lav\"},\n    {\"name\":\"Manx\", \"local\":\"Gaelg\", \"1\":\"gv\", \"2\":\"glv\", \"2T\":\"glv\", \"2B\":\"glv\", \"3\":\"glv\"},\n    {\"name\":\"Macedonian\", \"local\":\"Македонски\", \"1\":\"mk\", \"2\":\"mkd\", \"2T\":\"mkd\", \"2B\":\"mac\", \"3\":\"mkd\"},\n    {\"name\":\"Malagasy\", \"local\":\"Malagasy\", \"1\":\"mg\", \"2\":\"mlg\", \"2T\":\"mlg\", \"2B\":\"mlg\", \"3\":\"mlg\"},\n    {\"name\":\"Malay\", \"local\":\"Bahasa Melayu\", \"1\":\"ms\", \"2\":\"msa\", \"2T\":\"msa\", \"2B\":\"may\", \"3\":\"msa\"},\n    {\"name\":\"Malayalam\", \"local\":\"മലയാളം\", \"1\":\"ml\", \"2\":\"mal\", \"2T\":\"mal\", \"2B\":\"mal\", \"3\":\"mal\"},\n    {\"name\":\"Maltese\", \"local\":\"Malti\", \"1\":\"mt\", \"2\":\"mlt\", \"2T\":\"mlt\", \"2B\":\"mlt\", \"3\":\"mlt\"},\n    {\"name\":\"Māori\", \"local\":\"Māori\", \"1\":\"mi\", \"2\":\"mri\", \"2T\":\"mri\", \"2B\":\"mao\", \"3\":\"mri\"},\n    {\"name\":\"Marathi\", \"local\":\"मराठी\", \"1\":\"mr\", \"2\":\"mar\", \"2T\":\"mar\", \"2B\":\"mar\", \"3\":\"mar\"},\n    {\"name\":\"Marshallese\", \"local\":\"Kajin M̧ajeļ\", \"1\":\"mh\", \"2\":\"mah\", \"2T\":\"mah\", \"2B\":\"mah\", \"3\":\"mah\"},\n    {\"name\":\"Mongolian\", \"local\":\"Монгол\", \"1\":\"mn\", \"2\":\"mon\", \"2T\":\"mon\", \"2B\":\"mon\", \"3\":\"mon\"},\n    {\"name\":\"Nauru\", \"local\":\"Dorerin Naoero\", \"1\":\"na\", \"2\":\"nau\", \"2T\":\"nau\", \"2B\":\"nau\", \"3\":\"nau\"},\n    {\"name\":\"Navajo\", \"local\":\"Diné Bizaad\", \"1\":\"nv\", \"2\":\"nav\", \"2T\":\"nav\", \"2B\":\"nav\", \"3\":\"nav\"},\n    {\"name\":\"Northern Ndebele\", \"local\":\"isiNdebele\", \"1\":\"nd\", \"2\":\"nde\", \"2T\":\"nde\", \"2B\":\"nde\", \"3\":\"nde\"},\n    {\"name\":\"Nepali\", \"local\":\"नेपाली\", \"1\":\"ne\", \"2\":\"nep\", \"2T\":\"nep\", \"2B\":\"nep\", \"3\":\"nep\"},\n    {\"name\":\"Ndonga\", \"local\":\"Owambo\", \"1\":\"ng\", \"2\":\"ndo\", \"2T\":\"ndo\", \"2B\":\"ndo\", \"3\":\"ndo\"},\n    {\"name\":\"Norwegian Bokmål\", \"local\":\"Norsk (Bokmål)\", \"1\":\"nb\", \"2\":\"nob\", \"2T\":\"nob\", \"2B\":\"nob\", \"3\":\"nob\"},\n    {\"name\":\"Norwegian Nynorsk\", \"local\":\"Norsk (Nynorsk)\", \"1\":\"nn\", \"2\":\"nno\", \"2T\":\"nno\", \"2B\":\"nno\", \"3\":\"nno\"},\n    {\"name\":\"Norwegian\", \"local\":\"Norsk\", \"1\":\"no\", \"2\":\"nor\", \"2T\":\"nor\", \"2B\":\"nor\", \"3\":\"nor\"},\n    {\"name\":\"Nuosu\", \"local\":\"ꆈꌠ꒿ Nuosuhxop\", \"1\":\"ii\", \"2\":\"iii\", \"2T\":\"iii\", \"2B\":\"iii\", \"3\":\"iii\"},\n    {\"name\":\"Southern Ndebele\", \"local\":\"isiNdebele\", \"1\":\"nr\", \"2\":\"nbl\", \"2T\":\"nbl\", \"2B\":\"nbl\", \"3\":\"nbl\"},\n    {\"name\":\"Occitan\", \"local\":\"Occitan\", \"1\":\"oc\", \"2\":\"oci\", \"2T\":\"oci\", \"2B\":\"oci\", \"3\":\"oci\"},\n    {\"name\":\"Ojibwe\", \"local\":\"ᐊᓂᔑᓈᐯᒧᐎᓐ\", \"1\":\"oj\", \"2\":\"oji\", \"2T\":\"oji\", \"2B\":\"oji\", \"3\":\"oji\"},\n    {\"name\":\"Old Church Slavonic\", \"local\":\"Словѣ́ньскъ\", \"1\":\"cu\", \"2\":\"chu\", \"2T\":\"chu\", \"2B\":\"chu\", \"3\":\"chu\"},\n    {\"name\":\"Oromo\", \"local\":\"Afaan Oromoo\", \"1\":\"om\", \"2\":\"orm\", \"2T\":\"orm\", \"2B\":\"orm\", \"3\":\"orm\"},\n    {\"name\":\"Oriya\", \"local\":\"ଓଡି଼ଆ\", \"1\":\"or\", \"2\":\"ori\", \"2T\":\"ori\", \"2B\":\"ori\", \"3\":\"ori\"},\n    {\"name\":\"Ossetian\", \"local\":\"Ирон æвзаг\", \"1\":\"os\", \"2\":\"oss\", \"2T\":\"oss\", \"2B\":\"oss\", \"3\":\"oss\"},\n    {\"name\":\"Panjabi\", \"local\":\"ਪੰਜਾਬੀ\", \"1\":\"pa\", \"2\":\"pan\", \"2T\":\"pan\", \"2B\":\"pan\", \"3\":\"pan\"},\n    {\"name\":\"Pāli\", \"local\":\"पाऴि\", \"1\":\"pi\", \"2\":\"pli\", \"2T\":\"pli\", \"2B\":\"pli\", \"3\":\"pli\"},\n    {\"name\":\"Persian\", \"local\":\"فارسی\", \"1\":\"fa\", \"2\":\"fas\", \"2T\":\"fas\", \"2B\":\"per\", \"3\":\"fas\"},\n    {\"name\":\"Polish\", \"local\":\"Polski\", \"1\":\"pl\", \"2\":\"pol\", \"2T\":\"pol\", \"2B\":\"pol\", \"3\":\"pol\"},\n    {\"name\":\"Pashto\", \"local\":\"پښتو\", \"1\":\"ps\", \"2\":\"pus\", \"2T\":\"pus\", \"2B\":\"pus\", \"3\":\"pus\"},\n    {\"name\":\"Portuguese\", \"local\":\"Português\", \"1\":\"pt\", \"2\":\"por\", \"2T\":\"por\", \"2B\":\"por\", \"3\":\"por\"},\n    {\"name\":\"Quechua\", \"local\":\"Runa Simi\", \"1\":\"qu\", \"2\":\"que\", \"2T\":\"que\", \"2B\":\"que\", \"3\":\"que\"},\n    {\"name\":\"Romansh\", \"local\":\"Rumantsch\", \"1\":\"rm\", \"2\":\"roh\", \"2T\":\"roh\", \"2B\":\"roh\", \"3\":\"roh\"},\n    {\"name\":\"Kirundi\", \"local\":\"Kirundi\", \"1\":\"rn\", \"2\":\"run\", \"2T\":\"run\", \"2B\":\"run\", \"3\":\"run\"},\n    {\"name\":\"Romanian\", \"local\":\"Română\", \"1\":\"ro\", \"2\":\"ron\", \"2T\":\"ron\", \"2B\":\"rum\", \"3\":\"ron\"},\n    {\"name\":\"Russian\", \"local\":\"Русский\", \"1\":\"ru\", \"2\":\"rus\", \"2T\":\"rus\", \"2B\":\"rus\", \"3\":\"rus\"},\n    {\"name\":\"Sanskrit\", \"local\":\"संस्कृतम्\", \"1\":\"sa\", \"2\":\"san\", \"2T\":\"san\", \"2B\":\"san\", \"3\":\"san\"},\n    {\"name\":\"Sardinian\", \"local\":\"Sardu\", \"1\":\"sc\", \"2\":\"srd\", \"2T\":\"srd\", \"2B\":\"srd\", \"3\":\"srd\"},\n    {\"name\":\"Sindhi\", \"local\":\"سنڌي‎\", \"1\":\"sd\", \"2\":\"snd\", \"2T\":\"snd\", \"2B\":\"snd\", \"3\":\"snd\"},\n    {\"name\":\"Northern Sami\", \"local\":\"Sámegiella\", \"1\":\"se\", \"2\":\"sme\", \"2T\":\"sme\", \"2B\":\"sme\", \"3\":\"sme\"},\n    {\"name\":\"Samoan\", \"local\":\"Gagana Sāmoa\", \"1\":\"sm\", \"2\":\"smo\", \"2T\":\"smo\", \"2B\":\"smo\", \"3\":\"smo\"},\n    {\"name\":\"Sango\", \"local\":\"Sängö\", \"1\":\"sg\", \"2\":\"sag\", \"2T\":\"sag\", \"2B\":\"sag\", \"3\":\"sag\"},\n    {\"name\":\"Serbian\", \"local\":\"Српски\", \"1\":\"sr\", \"2\":\"srp\", \"2T\":\"srp\", \"2B\":\"srp\", \"3\":\"srp\"},\n    {\"name\":\"Gaelic\", \"local\":\"Gàidhlig\", \"1\":\"gd\", \"2\":\"gla\", \"2T\":\"gla\", \"2B\":\"gla\", \"3\":\"gla\"},\n    {\"name\":\"Shona\", \"local\":\"ChiShona\", \"1\":\"sn\", \"2\":\"sna\", \"2T\":\"sna\", \"2B\":\"sna\", \"3\":\"sna\"},\n    {\"name\":\"Sinhala\", \"local\":\"සිංහල\", \"1\":\"si\", \"2\":\"sin\", \"2T\":\"sin\", \"2B\":\"sin\", \"3\":\"sin\"},\n    {\"name\":\"Slovak\", \"local\":\"Slovenčina\", \"1\":\"sk\", \"2\":\"slk\", \"2T\":\"slk\", \"2B\":\"slo\", \"3\":\"slk\"},\n    {\"name\":\"Slovene\", \"local\":\"Slovenščina\", \"1\":\"sl\", \"2\":\"slv\", \"2T\":\"slv\", \"2B\":\"slv\", \"3\":\"slv\"},\n    {\"name\":\"Somali\", \"local\":\"Soomaaliga\", \"1\":\"so\", \"2\":\"som\", \"2T\":\"som\", \"2B\":\"som\", \"3\":\"som\"},\n    {\"name\":\"Southern Sotho\", \"local\":\"Sesotho\", \"1\":\"st\", \"2\":\"sot\", \"2T\":\"sot\", \"2B\":\"sot\", \"3\":\"sot\"},\n    {\"name\":\"Spanish\", \"local\":\"Español\", \"1\":\"es\", \"2\":\"spa\", \"2T\":\"spa\", \"2B\":\"spa\", \"3\":\"spa\"},\n    {\"name\":\"Sundanese\", \"local\":\"Basa Sunda\", \"1\":\"su\", \"2\":\"sun\", \"2T\":\"sun\", \"2B\":\"sun\", \"3\":\"sun\"},\n    {\"name\":\"Swahili\", \"local\":\"Kiswahili\", \"1\":\"sw\", \"2\":\"swa\", \"2T\":\"swa\", \"2B\":\"swa\", \"3\":\"swa\"},\n    {\"name\":\"Swati\", \"local\":\"SiSwati\", \"1\":\"ss\", \"2\":\"ssw\", \"2T\":\"ssw\", \"2B\":\"ssw\", \"3\":\"ssw\"},\n    {\"name\":\"Swedish\", \"local\":\"Svenska\", \"1\":\"sv\", \"2\":\"swe\", \"2T\":\"swe\", \"2B\":\"swe\", \"3\":\"swe\"},\n    {\"name\":\"Tamil\", \"local\":\"தமிழ்\", \"1\":\"ta\", \"2\":\"tam\", \"2T\":\"tam\", \"2B\":\"tam\", \"3\":\"tam\"},\n    {\"name\":\"Telugu\", \"local\":\"తెలుగు\", \"1\":\"te\", \"2\":\"tel\", \"2T\":\"tel\", \"2B\":\"tel\", \"3\":\"tel\"},\n    {\"name\":\"Tajik\", \"local\":\"Тоҷикӣ\", \"1\":\"tg\", \"2\":\"tgk\", \"2T\":\"tgk\", \"2B\":\"tgk\", \"3\":\"tgk\"},\n    {\"name\":\"Thai\", \"local\":\"ภาษาไทย\", \"1\":\"th\", \"2\":\"tha\", \"2T\":\"tha\", \"2B\":\"tha\", \"3\":\"tha\"},\n    {\"name\":\"Tigrinya\", \"local\":\"ትግርኛ\", \"1\":\"ti\", \"2\":\"tir\", \"2T\":\"tir\", \"2B\":\"tir\", \"3\":\"tir\"},\n    {\"name\":\"Tibetan Standard\", \"local\":\"བོད་ཡིག\", \"1\":\"bo\", \"2\":\"bod\", \"2T\":\"bod\", \"2B\":\"tib\", \"3\":\"bod\"},\n    {\"name\":\"Turkmen\", \"local\":\"Türkmençe\", \"1\":\"tk\", \"2\":\"tuk\", \"2T\":\"tuk\", \"2B\":\"tuk\", \"3\":\"tuk\"},\n    {\"name\":\"Tagalog\", \"local\":\"Tagalog\", \"1\":\"tl\", \"2\":\"tgl\", \"2T\":\"tgl\", \"2B\":\"tgl\", \"3\":\"tgl\"},\n    {\"name\":\"Tswana\", \"local\":\"Setswana\", \"1\":\"tn\", \"2\":\"tsn\", \"2T\":\"tsn\", \"2B\":\"tsn\", \"3\":\"tsn\"},\n    {\"name\":\"Tonga\", \"local\":\"faka Tonga\", \"1\":\"to\", \"2\":\"ton\", \"2T\":\"ton\", \"2B\":\"ton\", \"3\":\"ton\"},\n    {\"name\":\"Turkish\", \"local\":\"Türkçe\", \"1\":\"tr\", \"2\":\"tur\", \"2T\":\"tur\", \"2B\":\"tur\", \"3\":\"tur\"},\n    {\"name\":\"Tsonga\", \"local\":\"Xitsonga\", \"1\":\"ts\", \"2\":\"tso\", \"2T\":\"tso\", \"2B\":\"tso\", \"3\":\"tso\"},\n    {\"name\":\"Tatar\", \"local\":\"Татарча\", \"1\":\"tt\", \"2\":\"tat\", \"2T\":\"tat\", \"2B\":\"tat\", \"3\":\"tat\"},\n    {\"name\":\"Twi\", \"local\":\"Twi\", \"1\":\"tw\", \"2\":\"twi\", \"2T\":\"twi\", \"2B\":\"twi\", \"3\":\"twi\"},\n    {\"name\":\"Tahitian\", \"local\":\"Reo Mā’ohi\", \"1\":\"ty\", \"2\":\"tah\", \"2T\":\"tah\", \"2B\":\"tah\", \"3\":\"tah\"},\n    {\"name\":\"Uyghur\", \"local\":\"ئۇيغۇرچه\", \"1\":\"ug\", \"2\":\"uig\", \"2T\":\"uig\", \"2B\":\"uig\", \"3\":\"uig\"},\n    {\"name\":\"Ukrainian\", \"local\":\"Українська\", \"1\":\"uk\", \"2\":\"ukr\", \"2T\":\"ukr\", \"2B\":\"ukr\", \"3\":\"ukr\"},\n    {\"name\":\"Urdu\", \"local\":\"اردو\", \"1\":\"ur\", \"2\":\"urd\", \"2T\":\"urd\", \"2B\":\"urd\", \"3\":\"urd\"},\n    {\"name\":\"Uzbek\", \"local\":\"O‘zbek\", \"1\":\"uz\", \"2\":\"uzb\", \"2T\":\"uzb\", \"2B\":\"uzb\", \"3\":\"uzb\"},\n    {\"name\":\"Venda\", \"local\":\"Tshivenḓa\", \"1\":\"ve\", \"2\":\"ven\", \"2T\":\"ven\", \"2B\":\"ven\", \"3\":\"ven\"},\n    {\"name\":\"Vietnamese\", \"local\":\"Tiếng Việt\", \"1\":\"vi\", \"2\":\"vie\", \"2T\":\"vie\", \"2B\":\"vie\", \"3\":\"vie\"},\n    {\"name\":\"Volapük\", \"local\":\"Volapük\", \"1\":\"vo\", \"2\":\"vol\", \"2T\":\"vol\", \"2B\":\"vol\", \"3\":\"vol\"},\n    {\"name\":\"Walloon\", \"local\":\"Walon\", \"1\":\"wa\", \"2\":\"wln\", \"2T\":\"wln\", \"2B\":\"wln\", \"3\":\"wln\"},\n    {\"name\":\"Welsh\", \"local\":\"Cymraeg\", \"1\":\"cy\", \"2\":\"cym\", \"2T\":\"cym\", \"2B\":\"wel\", \"3\":\"cym\"},\n    {\"name\":\"Wolof\", \"local\":\"Wolof\", \"1\":\"wo\", \"2\":\"wol\", \"2T\":\"wol\", \"2B\":\"wol\", \"3\":\"wol\"},\n    {\"name\":\"Western Frisian\", \"local\":\"Frysk\", \"1\":\"fy\", \"2\":\"fry\", \"2T\":\"fry\", \"2B\":\"fry\", \"3\":\"fry\"},\n    {\"name\":\"Xhosa\", \"local\":\"isiXhosa\", \"1\":\"xh\", \"2\":\"xho\", \"2T\":\"xho\", \"2B\":\"xho\", \"3\":\"xho\"},\n    {\"name\":\"Yiddish\", \"local\":\"ייִדיש\", \"1\":\"yi\", \"2\":\"yid\", \"2T\":\"yid\", \"2B\":\"yid\", \"3\":\"yid\"},\n    {\"name\":\"Yoruba\", \"local\":\"Yorùbá\", \"1\":\"yo\", \"2\":\"yor\", \"2T\":\"yor\", \"2B\":\"yor\", \"3\":\"yor\"},\n    {\"name\":\"Zhuang\", \"local\":\"Cuengh\", \"1\":\"za\", \"2\":\"zha\", \"2T\":\"zha\", \"2B\":\"zha\", \"3\":\"zha\"},\n    {\"name\":\"Zulu\", \"local\":\"isiZulu\", \"1\":\"zu\", \"2\":\"zul\", \"2T\":\"zul\", \"2B\":\"zul\", \"3\":\"zul\"}\n];\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar langs   = require('../langs.full'),\n    data    = [],\n    gettext = require('mag-gettext').gettext,\n    lang;\n\nfor ( lang in langs['1'] ) {\n    data.push({\n        value: lang,\n        name: langs['1'][lang].local + ' (' + langs['1'][lang].name + ')'\n    });\n}\n\nfunction save ( val ) {\n    var langToSave;\n\n    langToSave = langs.getLangByCode(val);\n\n    if ( !langToSave ) {\n        return;\n    }\n\n    if ( top.stbPlayerManager && top.stbPlayerManager.list ) {\n        top.stbPlayerManager.list.forEach(function ( player ) {\n            player.subtitlesPrimaryLanguage = langToSave['1'];\n            player.subtitleLanguages = [langToSave['1'], langToSave['2T'], langToSave['2B']];\n\n        });\n    } else {\n        top.gSTB.SetSubtitleLangs(val); //eslint-disable-line\n    }\n}\n\n\nmodule.exports = function ( app ) {\n    return {\n        id: 'subtitlesLangs',\n        name: gettext('Primary subtitle language'),\n        description: gettext('Setting the default subtitle language. If the default subtitle language is not selected for a video you are playing, then subtitles will not be displayed.'), //eslint-disable-line\n        icon: 'theme-icon-languages',\n        data: {\n            subtitlesLang: 'en'\n        },\n        saveImmediate: true,\n        prepareForRender: function ( currentValue, callback ) {\n            data.forEach(function ( item ) {\n                item.selected = item.value === currentValue.subtitlesLang;\n            });\n\n            callback(data);\n        },\n        prepareForSave: function ( value, callback ) {\n            this.data.subtitlesLang = value;\n\n            save(value);\n            callback();\n        },\n        render: app.api.renders.popupSelect,\n        parent: 'playback'\n    };\n};\n\nmodule.exports.setValue = save;\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar gettext = require('mag-gettext').gettext;\n\nmodule.exports = [\n    {value: 0xFFFFFF, name: gettext('White')},\n    {value: 0x000000, name: gettext('Black')},\n    {value: 0xFF0000, name: gettext('Red')},\n    {value: 0x0000FF, name: gettext('Blue')},\n    {value: 0x00FF00, name: gettext('Green')},\n    {value: 0xFFFF00, name: gettext('Yellow')},\n    {value: 0x00FFFF, name: gettext('Cyan')},\n    {value: 0xFF00FF, name: gettext('Magenta')},\n    {value: 0xC0C0C0, name: gettext('Silver')},\n    {value: 0x808080, name: gettext('Gray')},\n    {value: 0x800000, name: gettext('Maroon')},\n    {value: 0x808000, name: gettext('Olive')},\n    {value: 0x800080, name: gettext('Purple')},\n    {value: 0x008080, name: gettext('Teal')},\n    {value: 0x000080, name: gettext('Navy')}\n];\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar gettext = require('mag-gettext').gettext;\n\nmodule.exports = [\n    {value: 18, name: gettext('Small')},\n    {value: 20, name: gettext('Normal')},\n    {value: 23, name: gettext('Large')},\n    {value: 26, name: gettext('Huge')}\n];\n"],"sourceRoot":""}