{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/utils/run.app.js","webpack:///./node_modules/mag-gettext/index.js","webpack:///./node_modules/cjs-emitter/index.js","webpack:///./index.js","webpack:///./src/js/main.js","webpack:///./src/js/lib/collector.js","webpack:///./src/js/lib/index.js","webpack:///./node_modules/cjs-gettext/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","app","gettext","core","taskManager","runApp","visible","config","onerror","error","notify","title","icon","Emitter","Gettext","loader","prepare","data","_","pgettext","ngettext","defaultLanguage","load","callback","xhr","ext","path","XMLHttpRequest","onload","jsonParseError","json","JSON","parse","responseText","events","emit","ontimeout","open","send","this","addListener","push","once","self","onceWrapper","removeListener","apply","arguments","addListeners","callbacks","filter","fn","length","undefined","index","event","Array","slice","constructor","providers","onAppInit","pluginConfig","collector","api","imagePath","screen","height","destroy","rows","environment","language","application","colors","splashFont","splashBackground","uris","icons","primeLogoActive","primeLogoNormal","shadowNormal","shadowActive","layout","packages","forEach","packageData","providerConfig","type","layouts","geometry","horizontal","description","onClick","contentProviders","window","packageMap","contentBoardApi","packageName","applications","resource","instance","version","provider","__filename","removeProvider","onDataReady","loadCounter","totalLoads","dependencies","offset","providerMap","count","dependencyManager","dependencyReady","dependencyError","plugin","onContentBoardInit","storage","result","item","background","foreground","stack","tvChannel","video","record","static","square","vertical","round","actions","favorite","accessControl","expandItemContent","meta","msgId","context","plural","evalResult","eval"],"mappings":"2BACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QA0DA,OArDAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,YAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,kCChFAhC,EAAAD,QAAA,SAAAkC,GACA,IAAAC,EAAkBrC,EAAQ,GAAaqC,QAEvCC,KAAAC,YAAAC,OAAA,CACAC,SAAA,EACAC,OAAAN,EACAO,QAAA,SAAAC,GACA,IAAAA,EACAN,KAAAO,OAAA,CACAC,MAAAT,EAAA,2BACAU,KAAA,SAGAT,KAAAO,OAAA,CACAC,MAAAT,EAAA,oCACAU,KAAA,YAIK,kCCZL,IAAAC,EAAchD,EAAQ,GACtBiD,EAAcjD,EAAQ,GACtBkD,EAAA,IAAAF,EAeA,SAAAG,EAAAC,GACA,IAAAf,EAAA,IAAAY,EAAAG,GAEAF,EAAAG,EAAAH,EAAAb,kBACAa,EAAAI,SAAAjB,EAAAiB,SACAJ,EAAAK,SAAAlB,EAAAkB,SAOAL,EAAAM,gBAAA,KAYAN,EAAAO,KAAA,SAAAf,EAAAgB,GACA,IAAAC,EAaAD,KAAA,KACAhB,EAAAkB,IAAAlB,EAAAkB,KAAA,OACAlB,EAAAmB,KAAAnB,EAAAmB,MAAA,OAGAnB,EAAA/B,OAAAuC,EAAAM,iBAEAL,IACA,OAAAO,GACAA,EAAA,SAGAC,EAAA,IAAAG,gBAEAC,OAAA,WACA,IAAAC,EAAAC,EAEA,IACAA,EAAAC,KAAAC,MAAAR,EAAAS,cACa,MAAAxB,GACboB,EAAApB,EAGAoB,EACAL,EAAAhB,QAAAqB,IAEAb,EAAAc,GACA,OAAAP,GACAA,EAAA,MAIAR,EAAAmB,OAAA,SAEAnB,EAAAoB,KAAA,UAKAX,EAAAY,UAAAZ,EAAAhB,QAAA,SAAAC,GACAO,IAEA,OAAAO,GACAA,EAAA,MAIAR,EAAAmB,OAAA,UAEAnB,EAAAoB,KAAA,QAAA1B,IAIAe,EAAAa,KAAA,MAAA9B,EAAAmB,KAAA,IAAAnB,EAAA/B,KAAA,IAAA+B,EAAAkB,KAAA,GACAD,EAAAc,KAAA,QAMAtE,EAAAD,QAAAgD,gCCzGA,SAAAF,IAwBA0B,KAAAL,OAAA,GAIArB,EAAAhB,UAAA,CAaA2C,YAAA,SAAAhE,EAAA+C,GAaAgB,KAAAL,OAAA1D,GAAA+D,KAAAL,OAAA1D,IAAA,GAEA+D,KAAAL,OAAA1D,GAAAiE,KAAAlB,IAcAmB,KAAA,SAAAlE,EAAA+C,GAEA,IAAAoB,EAAAJ,KAeAA,KAAAL,OAAA1D,GAAA+D,KAAAL,OAAA1D,IAAA,GAEA+D,KAAAL,OAAA1D,GAAAiE,KAAA,SAAAG,IACAD,EAAAE,eAAArE,EAAAoE,GACArB,EAAAuB,MAAAH,EAAAI,cAgBAC,aAAA,SAAAC,GACA,IAAAzE,EAcA,IAAAA,KAAAyE,EACAA,EAAAnD,eAAAtB,IACA+D,KAAAC,YAAAhE,EAAAyE,EAAAzE,KAeAqE,eAAA,SAAArE,EAAA+C,GAiBAgB,KAAAL,OAAA1D,KAEA+D,KAAAL,OAAA1D,GAAA+D,KAAAL,OAAA1D,GAAA0E,OAAA,SAAAC,GAA0F,OAAAA,IAAA5B,IAE1F,IAAAgB,KAAAL,OAAA1D,GAAA4E,SAEAb,KAAAL,OAAA1D,QAAA6E,KAwDAlB,KAAA,SAAA3D,GACA,IACA8E,EADAC,EAAAhB,KAAAL,OAAA1D,GAaA,GAAA+E,EAOA,IAAAD,EAAA,EAA4BA,EAAAC,EAAAH,OAAsBE,IAQlDC,EAAAD,GAAAR,MAAAP,KAAAiB,MAAA3D,UAAA4D,MAAArF,KAAA2E,UAAA,MAQAlC,EAAAhB,UAAA6D,YAAA7C,EAIA7C,EAAAD,QAAA8C,gCCnRA7C,EAAAD,QAAiBF,EAAQ,iCCAzB,IAAA8F,EAAA,GAGA3F,EAAAD,QAAA,CACA6F,UAAA,SAAAC,EAAAtC,GACA,IAAAuC,EAAwBjG,EAAQ,GAChCkG,EAAkBlG,EAAQ,GAE1BiG,EAAAE,UAAAH,EAAAnC,KAAA,OAAAuC,OAAAC,OAAA,IAEAJ,EAAAK,QAAA,WAEAR,EAAA,GACAG,EAAAM,KAAA,GACAN,EAAAH,UAAA,IAGQ9F,EAAQ,GAAayD,KAAA,CAAQ9C,KAAA2B,KAAAkE,YAAAC,UAAgC,WACrE,IAAApE,EAA0BrC,EAAQ,GAAaqC,QAI/C4D,EAAAH,UAAAlB,KAAA,CACA8B,YAAA,CACA/F,KAAA0B,EAAA,QACAsE,OAAA,CACAC,WAAA,OACAC,iBAAA,WAEAC,KAAA,CACAC,MAAA,CACAC,gBAAAf,EAAAE,UAAA,sBACAc,gBAAAhB,EAAAE,UAAA,gBACAe,aAAAjB,EAAAE,UAAA,kBACAgB,aAAAlB,EAAAE,UAAA,2BAIAiB,OAAA,SAEAnB,EAAAM,KAAA3B,KAAA,IAGAtC,KAAA+E,SAAAC,QAAA,SAAAC,GACA,IAEAC,EAFAJ,GAAA,EAIA,WAAAG,EAAAE,OAKAxB,EAAAM,KAAA,GAAA3B,KAAA,CACAwC,OAAAlB,EAAAwB,QAAAhB,YACAiB,SAAAzB,EAAAyB,SAAAC,WACAxE,KAAA,CACAzC,KAAA4G,EAAA5G,KACAkH,YAAAN,EAAAM,YACAlB,OAAAY,EAAAZ,OACAI,MAAAQ,EAAAT,KAAAC,MACAe,QAAA,WACgC9H,EAAQ,EAARA,CAAyBuH,OAMzDA,EAAAQ,kBAAAR,EAAAQ,iBAAAxC,OAAA,GAGA,oBAAAgC,EAAAQ,iBAAA,CAGA,aADAP,EAAAQ,OAAA1F,KAAA2F,WAAAV,EAAAQ,mBAEA,OAGA,GAAoE,MAApEP,EAAAU,gBAAyF,CAEzF,GAAApC,EAAA0B,EAAAW,aAIA,YAFArC,EAAA0B,EAAAW,aAAAC,aAAAxD,KAAA2C,GAOAA,EAAAc,WACAjB,EAAAG,EAAAc,UAIAvC,EAAA0B,EAAAW,aAAA,CACAxB,OAAAY,EAAAZ,OACA2B,SAAA,KACAH,YAAAX,EAAAW,YACAI,QAAAf,EAAAe,QACA7B,YAAAa,EACAa,aAAA,CAAAb,GACAH,SACAU,QAAA,WACwC9H,EAAQ,EAARA,CAAyBuH,KAGjEtB,EAAAH,UAAAlB,KAAAkB,EAAA0B,EAAAW,oBAIAZ,EAAAQ,iBAAAT,QAAA,SAAAkB,GAGA,aADAhB,EAAAlF,KAAA2F,WAAAO,KAQwE,MAAxEhB,EAAAU,gBAA6F,CAC7F,GAAApC,EAAA0B,EAAAW,aAGA,YAFArC,EAAA0B,EAAAW,aAAAC,aAAAxD,KAAA2C,GAQAA,EAAAc,WACAjB,EAAAG,EAAAc,UAGAvC,EAAA0B,EAAAW,aAAA,CACAxB,OAAAY,EAAAZ,OACA2B,SAAA,KACAH,YAAAK,EACAD,QAAAf,EAAAe,QACA7B,YAAAa,EACAa,aAAA,CAAAb,GACAH,SACAU,QAAA,WAC4C9H,EAAQ,EAARA,CAAyBuH,KAGrEtB,EAAAH,UAAAlB,KAAAkB,EAAA0B,EAAAW,mBAiBAzE,EAAA,KAAAuC,sCCtKA,SAAAwC,GAGA,IAAAzF,EAAchD,EAAQ,GACtBkG,EAAUlG,EAAQ,GAClBiG,EAAA,IAAAjD,EAGA,SAAA0F,EAAAjD,GAEAQ,EAAAH,UAAAL,GAAA,KAIAQ,EAAAM,KAAA,GACAN,EAAAH,UAAA,GACAG,EAAAE,UAAA,KAGAF,EAAAxC,KAAA,SAAAf,EAAAiG,GACA,IAAAC,EAAAC,EAAAC,EACAC,EAAAC,EAqBA,GAAAtG,EAAAqG,OAAArG,EAAAuG,MAAAhD,EAAAM,KAAAhB,OAAA,CASA,IAPAuD,EAAA,GACAE,EAAA,GACAJ,EAAA,EACAC,EAAA,EAEAE,EAAArG,EAAAqG,OAEAA,GAAArG,EAAAqG,OAAArG,EAAAuG,OAAAF,EAAA9C,EAAAH,UAAAP,QAGAU,EAAAM,KAAAwC,KAEAD,EAAA7C,EAAAH,UAAAiD,GAAAZ,aAAAlC,EAAAH,UAAAiD,GAAAR,QAEAS,EAAA/C,EAAAH,UAAAiD,GAAAZ,aAAAY,EAEA9C,EAAAM,KAAA3B,KAAA,MACAiE,KAGAE,EAOAzG,KAAA4G,kBAAAzF,KAAA,CACAqF,eACAK,gBAAA,SAAAC,EAAAC,GACA/G,KAAA2F,WAAAoB,EAAAlB,aAKAD,iBAMA,mBAAAmB,EAAAf,SAAAgB,oBAKA,OAAAN,EAAAK,EAAAlB,eAOAiB,GACAV,EAAAM,EAAAK,EAAAlB,gBACAS,IAEAC,IACAF,IACAC,EAAAC,EAAAC,EAAA,OAKAO,EAAAf,SAAAgB,mBAAA,CACApD,MACAqD,QAAAF,EAAAE,QACA1F,KAAAwF,EAAAxF,MACqB,SAAAjB,EAAA4G,GACrB,IAAApH,EAAA6D,EAAAH,UAAAkD,EAAAK,EAAAlB,cAAAzB,YAGA,GAAA9D,IAAA4G,EASA,OARAd,EAAAM,EAAAK,EAAAlB,qBACAS,IAEAC,IACAF,IACAC,EAAAC,EAAAC,EAAA,OA4CA,GAtCAU,EAAApG,MAEAoG,EAAApG,KAAAmC,OAAA,GACAiE,EAAApG,KAAAkE,QAAA,SAAAmC,GACAA,EAAArG,KAAAuD,SACA8C,EAAArG,KAAAuD,OAAA,CACA+C,WAAAtH,EAAAuE,OAAAE,iBACA8C,WAAAvH,EAAAuE,OAAAC,aAIA6C,EAAAjH,SACAiH,EAAA3B,QAAA,WAC4C9H,EAAQ,EAARA,CAA0BoC,KAItE6D,EAAAM,KAAAyC,EAAAK,EAAAlB,cAAAvD,KAAA6E,KAQAxD,EAAAH,UAAAkD,EAAAK,EAAAlB,cAAAG,SAAAkB,EAAAhB,SACAvC,EAAAH,UAAAkD,EAAAK,EAAAlB,cAAAxB,OAAA,CACA+C,WAAAtH,EAAAuE,OAAAE,iBACA8C,WAAAvH,EAAAuE,OAAAC,YAGAoC,EAAAK,EAAAlB,aAAA,OAEAS,IAKAC,EAAA,CACA,IACAF,IAC6B,MAAA/F,GAE7BA,EAAAgH,MAKAhB,EAAAC,EAAAC,EAAA,iBAOA,IACAH,IACS,MAAA/F,GAGTA,EAAAgH,QAOAzJ,EAAAD,QAAA+F,yDC/LA9F,EAAAD,QAAA,CACAwH,QAAA,CAEAmC,UAAA,EAEAC,MAAA,EAEAC,OAAA,EAEAC,OAAA,EAEAtD,YAAA,GAEAiB,SAAA,CACAsC,OAAA,EACArC,WAAA,EACAsC,SAAA,EACAC,MAAA,GAEAC,QAAA,CAEAC,SAAA,EACAC,cAAA,EACAC,kBAAA,+DCVA,SAAAtH,QAAAP,QACA,IAAAU,KAAAoH,KAGA9H,eAAA,GACAU,KAAAV,OAAAU,MAAA,GACAA,KAAA,IAAAA,KAAA,QAGAoH,KAAA9H,OAAA8H,KASA9F,KAAArC,QAAA,SAAAoI,GACA,OAAArH,KAAA,IAAAqH,OAYA/F,KAAApB,SAAA,SAAAoH,EAAAD,GACA,OAAArH,KAAAsH,IAAAtH,KAAAsH,GAAAD,OAaA/F,KAAAnB,SAAA,SAAAkH,MAAAE,OAAAtJ,OAIA,IAAAQ,EAAA+I,WAQA,OAAAxH,MAAAoH,MAAApH,KAAA,IAAAqH,QACAG,WAAAC,KAAA,OAAAxJ,MAAA,KAAiDmJ,KAAAG,QAEjD,kBAAAC,aACAA,wBAIAxH,KAAA,IAAAqH,OAAAG,aAIA,IAAAvJ,MAAAoJ,MAAAE,QAMA1H,QAAAjB,UAAA6D,YAAA5C,QAIA9C,OAAAD,QAAA+C","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","'use strict';\n\nmodule.exports = function runApp ( app ) {\n    var gettext = require('mag-gettext').gettext;\n\n    core.taskManager.runApp({\n        visible: true,\n        config: app,\n        onerror: function ( error ) {\n            if ( error === 0 ) {\n                core.notify({\n                    title: gettext('Network status: offline'),\n                    icon: 'info'\n                });\n            } else {\n                core.notify({\n                    title: gettext('Service not available, try later'),\n                    icon: 'info'\n                });\n            }\n        }\n    }, true);\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    Gettext = require('cjs-gettext'),\n    loader  = new Emitter();\n\n\nif ( DEVELOP ) {\n    loader._ = loader.gettext = loader.pgettext = loader.ngettext = function () {\n        throw new Error(__filename + ': you cannot use this function before mag-gettext not yet loaded');\n    };\n}\n\n/**\n * Wrap the given data with gettext instance\n * and export methods to the global scope.\n *\n * @param {Object} [data] localization data\n */\nfunction prepare ( data ) {\n    var gettext = new Gettext(data);\n\n    loader._ = loader.gettext = gettext.gettext;\n    loader.pgettext = gettext.pgettext;\n    loader.ngettext = gettext.ngettext;\n}\n\n\n/**\n * Main application language\n */\nloader.defaultLanguage = 'en';\n\n\n/**\n * Simple gettext implementation.\n *\n * @param {Object} config options\n * @param {string} [config.path=lang] relative path to project root\n * @param {string} config.name language name\n * @param {string} [config.ext=json] language file extension\n * @param {function} callback hook on ready\n */\nloader.load = function ( config, callback ) {\n    var xhr;\n\n    if ( DEVELOP ) {\n        if ( !config.name || typeof config.name !== 'string' ) {\n            throw new Error(__filename + ': config.name must be a nonempty string');\n        }\n        if ( callback && typeof callback !== 'function' ) {\n            throw new Error(__filename + ': wrong callback type');\n        }\n    }\n\n    // defaults\n\n    callback = callback || null;\n    config.ext  = config.ext  || 'json';\n    config.path = config.path || 'lang';\n\n    // is it necessary to request a localization file?\n    if ( config.name === loader.defaultLanguage ) {\n        // no\n        prepare();\n        if ( callback !== null ) {\n            callback(null);\n        }\n    } else {\n        xhr = new XMLHttpRequest();\n\n        xhr.onload = function () {\n            var jsonParseError, json;\n\n            try {\n                json = JSON.parse(xhr.responseText);\n            } catch ( error ) {\n                jsonParseError = error;\n            }\n\n            if ( jsonParseError ) {\n                xhr.onerror(jsonParseError);\n            } else {\n                prepare(json);\n                if ( callback !== null ) {\n                    callback(null);\n                }\n\n                // there are some listeners\n                if ( loader.events['load'] ) {\n                    // notify listeners\n                    loader.emit('load');\n                }\n            }\n        };\n\n        xhr.ontimeout = xhr.onerror = function ( error ) {\n            prepare();\n\n            if ( callback !== null ) {\n                callback(null);\n            }\n\n            // there are some listeners\n            if ( loader.events['error'] ) {\n                // notify listeners\n                loader.emit('error', error);\n            }\n        };\n\n        xhr.open('GET', config.path + '/' + config.name + '.' + config.ext, true);\n        xhr.send(null);\n    }\n};\n\n\n// public\nmodule.exports = loader;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Base Events Emitter implementation.\n *\n * @see http://nodejs.org/api/events.html\n * @constructor\n *\n * @example\n * var emitter = new Emitter();\n */\nfunction Emitter () {\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // if ( DEVELOP ) {\n    //     if ( typeof this !== 'object' ) { throw new Error(__filename + ': must be constructed via new'); }\n    // }\n\n    /**\n     * Inner hash table for event names and linked callbacks.\n     * Manual editing should be avoided.\n     *\n     * @member {Object.<string, function[]>}\n     *\n     * @example\n     * {\n     *     click: [\n     *         function click1 () { ... },\n     *         function click2 () { ... }\n     *     ],\n     *     keydown: [\n     *         function () { ... }\n     *     ]\n     * }\n     **/\n    this.events = {};\n}\n\n\nEmitter.prototype = {\n    /**\n     * Bind an event to the given callback function.\n     * The same callback function can be added multiple times for the same event name.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.addListener('click', function ( data ) { ... });\n     * // one more click handler\n     * emitter.addListener('click', function ( data ) { ... });\n     */\n    addListener: function ( name, callback ) {\n        console.assert(arguments.length === 2, 'wrong arguments number');\n        console.assert(typeof name === 'string', 'wrong name type');\n        console.assert(name.length > 0, 'empty name');\n        console.assert(typeof callback === 'function', 'callback should be a function');\n\n        // if ( DEVELOP ) {\n        //     if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        //     if ( typeof name !== 'string' || name.length === 0 ) { throw new Error(__filename + ': wrong or empty name'); }\n        //     if ( typeof callback !== 'function' ) { throw new Error(__filename + ': wrong callback type'); }\n        // }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(callback);\n    },\n\n\n    /**\n     * Add a one time listener for the event.\n     * This listener is invoked only the next time the event is fired, after which it is removed.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.once('click', function ( data ) { ... });\n     */\n    once: function ( name, callback ) {\n        // current execution context\n        var self = this;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n        }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(function onceWrapper () {\n            self.removeListener(name, onceWrapper);\n            callback.apply(self, arguments);\n        });\n    },\n\n\n    /**\n     * Apply multiple listeners at once.\n     *\n     * @param {Object} callbacks event names with callbacks\n     *\n     * @example\n     * emitter.addListeners({\n     *     click: function ( data ) {},\n     *     close: function ( data ) {}\n     * });\n     */\n    addListeners: function ( callbacks ) {\n        var name;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof callbacks !== 'object' ) {\n                throw new Error(__filename + ': wrong callbacks type');\n            }\n            if ( Object.keys(callbacks).length === 0 ) {\n                throw new Error(__filename + ': no callbacks given');\n            }\n        }\n\n        for ( name in callbacks ) {\n            if ( callbacks.hasOwnProperty(name) ) {\n                this.addListener(name, callbacks[name]);\n            }\n        }\n    },\n\n\n    /**\n     * Remove all instances of the given callback.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to remove\n     *\n     * @example\n     * emitter.removeListener('click', func1);\n     */\n    removeListener: function ( name, callback ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n            if ( this.events[name] && !Array.isArray(this.events[name]) ) {\n                throw new Error(__filename + ': corrupted inner data');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( this.events[name] ) {\n            // rework the callback list to exclude the given one\n            this.events[name] = this.events[name].filter(function callbacksFilter ( fn ) { return fn !== callback; });\n            // event has no more callbacks so clean it\n            if ( this.events[name].length === 0 ) {\n                // as if there were no listeners at all\n                this.events[name] = undefined;\n            }\n        }\n    },\n\n\n    /**\n     * Remove all callbacks for the given event name.\n     * Without event name clears all events.\n     *\n     * @param {string} [name] event identifier\n     *\n     * @example\n     * emitter.removeAllListeners('click');\n     * emitter.removeAllListeners();\n     *\n     * @deprecated\n     */\n    /*removeAllListeners: function ( name ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 0 && (typeof name !== 'string' || name.length === 0) ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // check input\n        if ( arguments.length === 0 ) {\n            // no arguments so remove everything\n            this.events = {};\n        } else if ( name ) {\n            if ( DEVELOP ) {\n                if ( this.events[name] ) { throw new Error(__filename + ': event is not removed'); }\n            }\n\n            // only name is given so remove all callbacks for the given event\n            // but object structure modification should be avoided\n            this.events[name] = undefined;\n        }\n    },*/\n\n\n    /**\n     * Execute each of the listeners in the given order with the supplied arguments.\n     *\n     * @param {string} name event identifier\n     *\n     * @example\n     * emitter.emit('init');\n     * emitter.emit('click', {src: panel1, dst: panel2});\n     * emitter.emit('load', error, data);\n     *\n     * // it's a good idea to emit event only when there are some listeners\n     * if ( this.events['click'] ) {\n     *     this.emit('click', {event: event});\n     * }\n     */\n    emit: function ( name ) {\n        var event = this.events[name],\n            index;\n\n        if ( DEVELOP ) {\n            if ( arguments.length < 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( event ) {\n            if ( DEVELOP ) {\n                if ( !Array.isArray(event) ) {\n                    throw new Error(__filename + ': wrong event type');\n                }\n            }\n\n            for ( index = 0; index < event.length; index++ ) {\n                if ( DEVELOP ) {\n                    if ( typeof event[index] !== 'function' ) {\n                        throw new Error(__filename + ': wrong event callback type');\n                    }\n                }\n\n                // invoke the callback with parameters\n                event[index].apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n    }\n};\n\n\n// correct constructor name\nEmitter.prototype.constructor = Emitter;\n\n\n// public\nmodule.exports = Emitter;\n","'use strict';\n\n/** @namespace */\nmodule.exports = require('./src/js/lib');\n","'use strict';\n\n\nvar providers = {};\n\n\nmodule.exports = {\n    onAppInit: function ( pluginConfig, callback ) {\n        var collector = require('./lib/collector'),\n            api = require('../../index');\n\n        collector.imagePath = pluginConfig.path + 'img/' + screen.height + '/';\n\n        collector.destroy = function () {\n            // needs to clearify in launcher for develop mode\n            providers = {};\n            collector.rows = [];\n            collector.providers = [];\n        };\n\n        require('mag-gettext').load({name: core.environment.language}, function () {\n            var gettext = require('mag-gettext').gettext;\n\n            console.log('PACKAGE_MAJOR_VERSION is ' + PACKAGE_MAJOR_VERSION);\n\n            collector.providers.push({\n                application: {\n                    name: gettext('Apps'),\n                    colors: {\n                        splashFont: '#fff',\n                        splashBackground: '#efbe01'\n                    },\n                    uris: {\n                        icons: {\n                            primeLogoActive: collector.imagePath   + 'apps.icon.focus.png',\n                            primeLogoNormal: collector.imagePath   + 'apps.icon.png',\n                            shadowNormal: collector.imagePath + 'apps.shadow.png',\n                            shadowActive: collector.imagePath + 'apps.shadow.focus.png'\n                        }\n                    }\n                },\n                layout: 'apps'\n            });\n            collector.rows.push([]);\n\n            // filling the list of content providers and applications\n            core.packages.forEach(function ( packageData ) {\n                var layout = false,\n                    // addRow = null,\n                    providerConfig;\n\n                if ( packageData.type === 'app' ) {\n                    // add to application list\n                    // console.log('add to applications ' + packageData.name);\n\n                    console.log(packageData.packageName);\n                    collector.rows[0].push({\n                        layout: api.layouts.application,\n                        geometry: api.geometry.horizontal,\n                        data: {\n                            name: packageData.name,\n                            description: packageData.description,\n                            colors: packageData.colors,\n                            icons: packageData.uris.icons,\n                            onClick: function () {\n                                require('./utils/run.app')(packageData);\n                            }\n                        }\n                    });\n\n                    // resolve content providers\n                    if ( packageData.contentProviders && packageData.contentProviders.length > 0 ) {\n                        console.log('check for providers in applications ' + packageData.name);\n                        // create\n                        if ( typeof packageData.contentProviders === 'string' ) {\n                            console.log('packageData.contentProviders: ' + packageData.contentProviders);\n                            providerConfig = window.core.packageMap[packageData.contentProviders];\n                            if ( typeof providerConfig === 'undefined' ) {\n                                return;\n                            }\n\n                            if ( providerConfig.contentBoardApi === PACKAGE_MAJOR_VERSION ) {\n                                // more then one application\n                                if ( providers[providerConfig.packageName] ) {\n                                    console.log('pkg ' + providerConfig.packageName);\n                                    providers[providerConfig.packageName].applications.push(packageData);\n\n                                    return;\n                                }\n                                // console.log('PUSH TO PROVIDERS');\n                                // console.log(providerConfig.packageName);\n\n                                if ( packageData.resource ) {\n                                    layout = packageData.resource;\n                                }\n                                console.log('layout: ' + layout);\n\n                                providers[providerConfig.packageName] = {\n                                    colors: packageData.colors,\n                                    instance: null,\n                                    packageName: providerConfig.packageName,\n                                    version: providerConfig.version,\n                                    application: packageData,\n                                    applications: [packageData],\n                                    layout: layout,\n                                    onClick: function () {\n                                        require('./utils/run.app')(packageData);\n                                    }\n                                };\n                                collector.providers.push(providers[providerConfig.packageName]);\n                            }\n                        } else {\n                            console.log('providers is array');\n                            packageData.contentProviders.forEach(function ( provider ) {\n                                console.log('packageData.contentProviders: ' + provider);\n                                providerConfig = core.packageMap[provider];\n                                if ( typeof providerConfig === 'undefined' ) {\n                                    return;\n                                }\n\n                                // console.log(provider);\n                                // console.log('contentBoardAPI ' + JSON.stringify(providerConfig.contentBoardApi));\n                                // console.log('PACKAGE_MAJOR_VERSION ' + JSON.stringify(PACKAGE_MAJOR_VERSION));\n                                if ( providerConfig.contentBoardApi === PACKAGE_MAJOR_VERSION ) {\n                                    if ( providers[providerConfig.packageName] ) {\n                                        providers[providerConfig.packageName].applications.push(packageData);\n\n                                        return;\n                                    }\n\n                                    // console.log('PUSH to providers');\n                                    // console.log(providerConfig.packageName);\n\n                                    if ( packageData.resource ) {\n                                        layout = packageData.resource;\n                                    }\n\n                                    providers[providerConfig.packageName] = {\n                                        colors: packageData.colors,\n                                        instance: null,\n                                        packageName: provider,\n                                        version: providerConfig.version,\n                                        application: packageData,\n                                        applications: [packageData],\n                                        layout: layout,\n                                        onClick: function () {\n                                            require('./utils/run.app')(packageData);\n                                        }\n                                    };\n                                    collector.providers.push(providers[providerConfig.packageName]);\n                                }\n                            });\n                        }\n                    }\n                }\n            });\n\n            // console.log('providers.length at start ' + collector.providers.length);\n\n            if ( DEVELOP ) {\n                try {\n                    callback(null, collector);\n                } catch ( error ) {\n                    console.log('error in plugin ' + __filename + ':112 ' + error);\n                }\n            } else {\n                callback(null, collector);\n            }\n        });\n    }\n};\n","'use strict';\n\n\nvar Emitter = require('cjs-emitter'),\n    api = require('../../../index'),\n    collector = new Emitter();\n\n\nfunction removeProvider ( index ) {\n    console.log('remove provider at index: ' + index);\n    collector.providers[index] = null;\n    // collector.rows.splice(0);\n}\n\ncollector.rows = [];\ncollector.providers = [];\ncollector.imagePath = null;\n\n\ncollector.load = function ( config, onDataReady ) {\n    var loadCounter, totalLoads, dependencies,\n        offset, providerMap, originalDataReady;\n\n    if ( DEVELOP ) {\n        originalDataReady = onDataReady;\n        onDataReady = function () {\n            try {\n                originalDataReady();\n            } catch ( error ) {\n                console.log('error in ' + __filename + ':31 msg:' + error);\n                if ( error.stack ) {\n                    console.log('stack: ' + error.stack);\n                }\n            }\n        };\n    }\n\n    // console.log('load called');\n    // console.log('offset ' + config.offset);\n    // console.log('count ' + config.count);\n    // console.log('rows ' + collector.rows.length);\n    // console.log('need LOAD???: ' + (config.offset + config.count > collector.rows.length));\n    if ( config.offset + config.count > collector.rows.length ) {\n        // requested query required new data\n        dependencies = {};\n        providerMap = {};\n        loadCounter = 0;\n        totalLoads = 0;\n\n        offset = config.offset;\n        // console.log('providers ' + collector.providers.length);\n        while ( offset <= config.offset + config.count && offset < collector.providers.length ) {\n            // console.log('offset at loop start: ' + offset);\n\n            if ( !collector.rows[offset] ) {\n                // console.log('add to dependencies ' + collector.providers[offset].packageName);\n                dependencies[collector.providers[offset].packageName] = collector.providers[offset].version;\n                // console.log('no row in offset: ' + offset);\n                providerMap[collector.providers[offset].packageName] = offset;\n                // application = collector.providers[offset].application;\n                collector.rows.push([]);\n                ++totalLoads;\n            }\n\n            ++offset;\n            // console.log('offset at loop end: ' + offset);\n            // console.log('totalLoads ' + totalLoads);\n        }\n\n        // console.log('dependencies: ' + JSON.stringify(dependencies));\n\n        core.dependencyManager.load({\n            dependencies: dependencies,\n            dependencyReady: function ( dependencyError, plugin  ) {\n                var packageConfig = core.packageMap[plugin.packageName];\n\n                // console.log('pkg ' + plugin.packageName);\n                // console.log('return? ' + (providerMap[plugin.packageName] === null));\n\n                if ( !packageConfig.contentBoardApi ) {\n                    // console.log('pkg ' + plugin.packageName  + ' dont have contentBoardApi property');\n\n                    return;\n                }\n\n                if ( typeof plugin.instance.onContentBoardInit !== 'function' ) {\n                    // console.log('pkg ' + plugin.packageName  + ' dont have onContentBoardInit');\n                    return;\n                }\n\n                if ( providerMap[plugin.packageName] === null ) {\n                    // console.log('repeated dependencyReady call');\n                    return;\n                }\n\n                // console.log('dependencyReady, error: ' + dependencyError);\n\n                if ( dependencyError ) {\n                    removeProvider(providerMap[plugin.packageName]);\n                    ++loadCounter;\n\n                    if ( loadCounter === totalLoads ) {\n                        onDataReady();\n                        loadCounter = totalLoads = dependencies = null;\n                    }\n                    // remove plugin from providers\n                } else {\n                    // console.log(JSON.stringify(Object.keys(plugin.instance)));\n                    plugin.instance.onContentBoardInit({\n                        api: api,\n                        storage: plugin.storage,\n                        path: plugin.path\n                    }, function ( error, result ) {\n                        var app = collector.providers[providerMap[plugin.packageName]].application;\n\n                        // console.log('onContentBoardInit callback called for ' + plugin.packageName);\n                        if ( error || !result ) {\n                            removeProvider(providerMap[plugin.packageName]);\n                            ++loadCounter;\n\n                            if ( loadCounter === totalLoads ) {\n                                onDataReady();\n                                loadCounter = totalLoads = dependencies = null;\n                            }\n\n                            return;\n                        }\n\n                        if ( result.data ) {\n                            console.log(result.data.length > 0);\n                            if ( result.data.length > 0 ) {\n                                result.data.forEach(function ( item ) {\n                                    if ( !item.data.colors ) {\n                                        item.data.colors = {\n                                            background: app.colors.splashBackground,\n                                            foreground: app.colors.splashFont\n                                        };\n                                    }\n\n                                    if ( item.runApp ) {\n                                        item.onClick = function () {\n                                            require('../utils/run.app')(app);\n                                        };\n                                    }\n                                    // console.log('!!!!!!!!!!!!!push ' + JSON.stringify(item));\n                                    collector.rows[providerMap[plugin.packageName]].push(item);\n                                });\n                            } else {\n                                console.log('no data');\n                                console.log(providerMap[plugin.packageName]);\n                            }\n                        }\n\n                        collector.providers[providerMap[plugin.packageName]].instance = result.provider;\n                        collector.providers[providerMap[plugin.packageName]].colors = {\n                            background: app.colors.splashBackground,\n                            foreground: app.colors.splashFont\n                        };\n\n                        providerMap[plugin.packageName] = null;\n\n                        ++loadCounter;\n                        console.log('loadCounter: ' + loadCounter);\n                        console.log('totalLoads: ' + totalLoads);\n                        console.log('collector.rows:' + collector.rows.length);\n\n                        if ( loadCounter === totalLoads ) {\n                            try {\n                                onDataReady();\n                            } catch (error) {\n                                console.log('error in ' + __filename + ':141 ' + error);\n                                if ( error.stack ) {\n                                    console.log('stack: ' + error.stack);\n                                }\n                            }\n\n                            loadCounter = totalLoads = dependencies = null;\n                        }\n                    });\n                }\n            }\n        });\n    } else {\n        try {\n            onDataReady();\n        } catch ( error ) {\n            console.log('error in ' + __filename + ':155' + error);\n\n            if ( error.stack ) {\n                console.log('stack: ' + error.stack);\n            }\n        }\n    }\n};\n\nmodule.exports = collector;\n","'use strict';\n\n\n/** @namespace */\nmodule.exports = {\n    layouts: {\n        // tv channel item with playback and current program\n        tvChannel: 1,\n        // movie preview\n        video: 2,\n        // record status and progress\n        record: 3,\n        // default layout\n        static: 4,\n        // application layout\n        application: 5\n    },\n    geometry: {\n        square: 1,\n        horizontal: 2,\n        vertical: 3,\n        round: 4\n    },\n    actions: {\n        // actions which can be applied to item\n        favorite: 1,\n        accessControl: 2,\n        expandItemContent: 3\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Translations handler.\n *\n * @constructor\n *\n * @param {Object} config init parameters\n */\nfunction Gettext ( config ) {\n    var data, meta;\n\n    // sanitize\n    config   = config || {};\n    data     = config.data || {};\n    data[''] = data[''] || {};\n\n    // shortcut\n    meta = config.meta;\n\n    /**\n     * Display the native language translation of a textual message.\n     *\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.gettext = function ( msgId ) {\n        return data[''][msgId] || msgId;\n    };\n\n\n    /**\n     * The \"p\" in \"pgettext\" stands for \"particular\": fetches a particular translation of the textual message.\n     *\n     * @param {string} context message context\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.pgettext = function ( context, msgId ) {\n        return data[context] && data[context][msgId] || msgId;\n    };\n\n\n    /**\n     * Display the native language translation of a textual message whose grammatical form depends on a number.\n     *\n     * @param {string} msgId textual message in a singular form\n     * @param {string} plural textual message in a plural form\n     * @param {number} value message number\n     *\n     * @return {string} translated text\n     */\n    this.ngettext = function ( msgId, plural, value ) {\n        /* eslint no-unused-vars: 0 */\n        /* eslint no-eval: 0 */\n        /* eslint id-length: 0 */\n        var n, evalResult;\n\n        if ( DEVELOP ) {\n            if ( Number(value) !== value ) {\n                throw new Error(__filename + ': value must be a number');\n            }\n        }\n\n        if ( data && meta && data[''][msgId] ) {\n            evalResult = eval('n = ' + value + '; ' + meta.plural);\n\n            if ( typeof evalResult === 'boolean' ) {\n                evalResult = +evalResult;\n            }\n\n            // translation\n            return data[''][msgId][evalResult];\n        }\n\n        // english\n        return value === 1 ? msgId : plural;\n    };\n}\n\n\n// correct constructor name\nGettext.prototype.constructor = Gettext;\n\n\n// public\nmodule.exports = Gettext;\n"],"sourceRoot":""}