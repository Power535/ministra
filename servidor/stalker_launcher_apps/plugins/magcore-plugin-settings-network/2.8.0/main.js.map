{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/links.js","webpack:///./src/js/ids.js","webpack:///./src/js/tools.js","webpack:///./src/js/main.js","webpack:///./node_modules/mag-gettext/index.js","webpack:///./node_modules/cjs-emitter/index.js","webpack:///./node_modules/cjs-gettext/index.js","webpack:///./src/js/build.ethernet.js","webpack:///./src/js/build.pppoe.js","webpack:///./src/js/build.wifi.js","webpack:///./src/js/build.multicast.js","webpack:///./src/js/build.info.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","api","gettext","base","lan","lanAuto","lanManualElement1","lanManualElement2","lanManualElement3","lanManualElement4","lanNoIp","lanOptDns","pppoe","pppoeDnsElement1","pppoeDnsElement2","pppoeDnsElement3","pppoeDnsElement4","wifi","wifiList","wifiAdd","wifiAddElement","wifiEnable","multicast","multicastE","igmp","info","infoLan","infoPPPOE","infoWifi","checkIP","ip","octets","octet","index","test","split","parseInt","validateUrl","url","solution","isSolutionOptional","isProtocolOptional","RegExp","renders","gettextWrapper","links","ids","buildIGMP","data","getters","environment","saver","savers","options","push","id","description","icon","render","popupSelect","title","saveImmediate","igmp_conf","prepareForRender","callback","selected","prepareForSave","this","type","parent","onSettingsInit","config","load","core","language","path","buildEthernet","buildPPPoE","buildWiFi","buildMulticast","buildInfo","sections","content","device","model","buildList","Emitter","Gettext","loader","prepare","_","pgettext","ngettext","defaultLanguage","xhr","ext","XMLHttpRequest","onload","jsonParseError","json","JSON","parse","responseText","error","onerror","events","emit","ontimeout","open","send","addListener","once","self","onceWrapper","removeListener","apply","arguments","addListeners","callbacks","filter","fn","length","undefined","event","Array","slice","constructor","meta","msgId","context","plural","evalResult","eval","autoSave","enable","gSTB","SetEnv","ServiceControl","noIpSave","onsave","confirmation","confirm","input","advanced","ipaddr_conf","lan_noip","env","netmask","gatewayip","dnsip","forEach","item","toggle","pppoe_enabled","pppoe_login","pppoe_pwd","pppoe_dns1","toSave","wiFiVisited","openLan","openCallback","list","authOptions","auth","encryptionOptions","encryption","enc","ssid","wifi_ssid","wifi_auth","wifi_enc","wifi_psk","wifi_int_ip","wifi_int_mask","wifi_int_gw","wifi_int_dns","save","stringify","addWifi","addCallback","result","frequency","channel","wifiOff","environmentData","GetEnv","wifi_off","GetNetworkWifiMac","actions","view","init","GetWifiGroups","toLowerCase","unlock","connected","rfInfo","substring","indexOf","label","trim","signalInfo","onenter","tools","mc_proxy_enabled","mc_proxy_url","stbPlayerManager","multicastProxy","EnableMulticastProxy","SetMulticastProxyURL","notify","lanList","pppoeList","gateways","servers","varList","GetNetworkGateways","GetNetworkNameServers","GetLanLinkStatus","RDir","GetDeviceMacAddress","replace","GetPppoeIp","GetPppoeLinkStatus","GetWifiLinkStatus","listItem"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","/**\n * Links to shared objects.\n * Will be defined in onSettingsInit.\n */\n\n'use strict';\n\n\nmodule.exports = {\n    api: null,\n    gettext: null\n};\n","'use strict';\n\nmodule.exports = {\n    base: 'network',\n\n    lan: 'ethernet',\n    lanAuto: 'ethernetAuto',\n\n    lanManualElement1: 'ethernetManualElement1',\n    lanManualElement2: 'ethernetManualElement2',\n    lanManualElement3: 'ethernetManualElement3',\n    lanManualElement4: 'ethernetManualElement4',\n\n    lanNoIp: 'ethernetNoIp',\n    lanOptDns: 'lanOptDns',\n\n    pppoe: 'pppoe',\n    pppoeDnsElement1: 'pppoeDnsElement1',\n    pppoeDnsElement2: 'pppoeDnsElement2',\n    pppoeDnsElement3: 'pppoeDnsElement3',\n    pppoeDnsElement4: 'pppoeDnsElement4',\n\n    wifi: 'wifi',\n\n    wifiList: 'wifiListI',\n\n    wifiAdd: 'wifiAdd',\n    wifiAddElement: 'wifiAddElement',\n    wifiEnable: 'wifiEnableFlag',\n    //upnp: 'upnp',\n\n    multicast: 'multicast',\n    multicastE: 'multicastE',\n\n    igmp: 'igmp',\n\n    info: 'networkInfo',\n    infoLan: 'networkInfoLan',\n    infoPPPOE: 'networkInfoPPPPOE',\n    infoWifi: 'networkInfoWifi'\n};\n","'use strict';\n\n/* eslint max-len: 0 */\n/* eslint quotes: 0 */\n/* eslint no-useless-escape: 0 */\n\nmodule.exports = {\n    checkIP: function ( ip ) {\n        var check = /^([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3})$/,\n            octets, octet, index;\n\n        if ( !ip || ip === '0.0.0.0' ) {\n            return false;\n        }\n\n        if ( check.test(ip) ) {\n            octets = ip.split('.');\n            for ( index = 0; index < 4; index++ ) {\n                octet = parseInt(octets[index], 10);\n                if ( octet < 0 || octet > 255 ) {\n                    return false;\n                }\n            }\n        } else {\n            return false;\n        }\n\n        return true;\n    },\n\n    /**\n     * Returns whether the passed string is valid url.\n     *\n     * @param {string} url - url to validate\n     * @param {boolean} [solution=false] - check solution\n     * @param {boolean} [isSolutionOptional=false] - is solution optional or not\n     * @param {boolean} [isProtocolOptional=true] - is protocol scheme optional or not\n     *\n     * @return {boolean} validate state\n     */\n    validateUrl: function ( url, solution, isSolutionOptional, isProtocolOptional ) {\n        var solutionRegExp = '((ffmpeg|auto|rtp|rtsp|mp3|mpegps|mpegts|mp4|ifm|fm|ffrt|ffrt2|ffrt3|ffrt4)(\\\\s))';\n\n        isProtocolOptional = typeof isProtocolOptional === typeof true ? isProtocolOptional : true;\n\n        return new RegExp('^' + (solution ? solutionRegExp : '') + ['', '?'][+!!isSolutionOptional] + \"(((http|https|udp|rtp|rtsp|mms|mmsh|mmst|rtmp|igmp):\\\\/\\\\/)\" + ['', '?'][+isProtocolOptional] + \"@?(([a-zA-Z0-9а-яА-Я$\\\\-_.+!*'(),;:&=]|%[0-9a-fA-Fа-яА-Я]{2})+@)?(((25[0-5]|2[0-4][0-9]|[0-1][0-9][0-9]|[1-9][0-9]|[0-9])(\\\\.(25[0-5]|2[0-4][0-9]|[0-1][0-9][0-9]|[1-9][0-9]|[0-9])){3})|localhost|([a-zA-Zа-яА-Я0-9\\\\-\\\\u00C0-\\\\u017F]+\\\\.)+([a-zA-Zа-яА-Я]{2,}))(:[0-9]+)?|((file:\\/\\/\\/|\\/)[a-zA-Zа-яА-Я0-9\\\\-\\\\u00C0-\\\\u017F]+))(\\\\/(([a-zA-Zа-яА-Я0-9$\\\\-_.+!*'(),;:@&=\\\\s]|%[0-9a-fA-Fа-яА-Я]{2})*(\\\\/([a-zA-Zа-яА-Я0-9$\\\\-_.+!*'(),;:@&=\\\\s]|%[0-9a-fA-Fа-яА-Я]{2})*)*)?(\\\\?([a-zA-Zа-яА-Я0-9$\\\\-_.+!*'(),;:@&=\\\\/?]|%[0-9a-fA-Fа-яА-Я]{2})*)?(\\\\#([a-zA-Zа-яА-Я0-9$\\\\-_.+!*'(),;:@&=\\\\/?]|%[0-9a-fA-Fа-яА-Я]{2})*)?)?$\").test(url);\n    }\n};\n","/**\n * Remote control settings plugin.\n */\n\n'use strict';\n\n/* eslint max-lines-per-function: 0 */\n/* eslint quote-props: 0 */\n\nvar gettextWrapper = require('mag-gettext'),\n    links = require('./links'),\n    ids = require('./ids'),\n\n    renders, gettext;\n\n\nfunction buildIGMP ( data ) {\n    var getter = links.api.getters.environment,\n        saver = links.api.savers.environment;\n\n    data.options.push(\n        {\n            id: ids.igmp,\n            name: gettext('IGMP version'),\n            description: '',\n            icon: 'theme-icon-globe',\n            render: renders.popupSelect,\n            title: gettext('Select IGMP version'),\n            saveImmediate: true,\n            environment: {\n                'igmp_conf': ''\n            },\n            prepareForRender: function ( environment, callback ) {\n                var options = [\n                    {name: 'V2', value: 'V2', selected: environment['igmp_conf'] === 'V2'},\n                    {name: 'V3', value: 'V3', selected: environment['igmp_conf'] === 'V3'}\n                ];\n\n                callback(options);\n            },\n            prepareForSave: function ( value, callback ) {\n                this.environment['igmp_conf'] = value;\n                callback();\n            },\n            getter: getter,\n            saver: saver,\n            type: 'option',\n            parent: ids.base\n        }\n    );\n}\n\n\nfunction buildList () {\n    var buildEthernet = require('./build.ethernet'),\n        buildPPPoE = require('./build.pppoe'),\n        buildWiFi = require('./build.wifi'),\n        buildMulticast = require('./build.multicast'),\n        buildInfo = require('./build.info'),\n        data = {\n            id: ids.base,\n            name: gettext('Network'),\n            description: gettext('Configuring network connection settings'),\n            icon: 'theme-icon-network',\n            sections: [],\n            options: [],\n            content: []\n        };\n\n    buildEthernet(data);\n\n    switch ( core.device.model ) {\n        case 'MAG324':\n        case 'MAG325':\n        case 'MAG349':\n        case 'MAG350':\n        case 'MAG351':\n        case 'MAG352':\n        case 'MAG256':\n        case 'MAG257':\n            buildWiFi(data);\n            buildMulticast(data);\n            buildIGMP(data);\n            buildInfo(data);\n            break;\n        case 'emulator':\n        case 'emulator_stb':\n        case 'AndroidSTB':\n        case 'AndroidAPP':\n            buildWiFi(data);\n            buildMulticast(data);\n            buildInfo(data);\n            break;\n        default:\n            buildPPPoE(data);\n            buildWiFi(data);\n            buildMulticast(data);\n            buildIGMP(data);\n            buildInfo(data);\n            break;\n    }\n\n    return data;\n}\n\n\nmodule.exports = {\n    onSettingsInit: function ( config, callback ) {\n        links.api = config.api;\n        renders = links.api.renders;\n\n        gettextWrapper.load({\n            name: core.environment.language,\n            path: config.path + 'lang'\n        }, function () {\n            gettext = links.gettext = gettextWrapper.gettext;\n            callback(null, buildList());\n        });\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    Gettext = require('cjs-gettext'),\n    loader  = new Emitter();\n\n\nif ( DEVELOP ) {\n    loader._ = loader.gettext = loader.pgettext = loader.ngettext = function () {\n        throw new Error(__filename + ': you cannot use this function before mag-gettext not yet loaded');\n    };\n}\n\n/**\n * Wrap the given data with gettext instance\n * and export methods to the global scope.\n *\n * @param {Object} [data] localization data\n */\nfunction prepare ( data ) {\n    var gettext = new Gettext(data);\n\n    loader._ = loader.gettext = gettext.gettext;\n    loader.pgettext = gettext.pgettext;\n    loader.ngettext = gettext.ngettext;\n}\n\n\n/**\n * Main application language\n */\nloader.defaultLanguage = 'en';\n\n\n/**\n * Simple gettext implementation.\n *\n * @param {Object} config options\n * @param {string} [config.path=lang] relative path to project root\n * @param {string} config.name language name\n * @param {string} [config.ext=json] language file extension\n * @param {function} callback hook on ready\n */\nloader.load = function ( config, callback ) {\n    var xhr;\n\n    if ( DEVELOP ) {\n        if ( !config.name || typeof config.name !== 'string' ) {\n            throw new Error(__filename + ': config.name must be a nonempty string');\n        }\n        if ( callback && typeof callback !== 'function' ) {\n            throw new Error(__filename + ': wrong callback type');\n        }\n    }\n\n    // defaults\n\n    callback = callback || null;\n    config.ext  = config.ext  || 'json';\n    config.path = config.path || 'lang';\n\n    // is it necessary to request a localization file?\n    if ( config.name === loader.defaultLanguage ) {\n        // no\n        prepare();\n        if ( callback !== null ) {\n            callback(null);\n        }\n    } else {\n        xhr = new XMLHttpRequest();\n\n        xhr.onload = function () {\n            var jsonParseError, json;\n\n            try {\n                json = JSON.parse(xhr.responseText);\n            } catch ( error ) {\n                jsonParseError = error;\n            }\n\n            if ( jsonParseError ) {\n                xhr.onerror(jsonParseError);\n            } else {\n                prepare(json);\n                if ( callback !== null ) {\n                    callback(null);\n                }\n\n                // there are some listeners\n                if ( loader.events['load'] ) {\n                    // notify listeners\n                    loader.emit('load');\n                }\n            }\n        };\n\n        xhr.ontimeout = xhr.onerror = function ( error ) {\n            prepare();\n\n            if ( callback !== null ) {\n                callback(null);\n            }\n\n            // there are some listeners\n            if ( loader.events['error'] ) {\n                // notify listeners\n                loader.emit('error', error);\n            }\n        };\n\n        xhr.open('GET', config.path + '/' + config.name + '.' + config.ext, true);\n        xhr.send(null);\n    }\n};\n\n\n// public\nmodule.exports = loader;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Base Events Emitter implementation.\n *\n * @see http://nodejs.org/api/events.html\n * @constructor\n *\n * @example\n * var emitter = new Emitter();\n */\nfunction Emitter () {\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // if ( DEVELOP ) {\n    //     if ( typeof this !== 'object' ) { throw new Error(__filename + ': must be constructed via new'); }\n    // }\n\n    /**\n     * Inner hash table for event names and linked callbacks.\n     * Manual editing should be avoided.\n     *\n     * @member {Object.<string, function[]>}\n     *\n     * @example\n     * {\n     *     click: [\n     *         function click1 () { ... },\n     *         function click2 () { ... }\n     *     ],\n     *     keydown: [\n     *         function () { ... }\n     *     ]\n     * }\n     **/\n    this.events = {};\n}\n\n\nEmitter.prototype = {\n    /**\n     * Bind an event to the given callback function.\n     * The same callback function can be added multiple times for the same event name.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.addListener('click', function ( data ) { ... });\n     * // one more click handler\n     * emitter.addListener('click', function ( data ) { ... });\n     */\n    addListener: function ( name, callback ) {\n        console.assert(arguments.length === 2, 'wrong arguments number');\n        console.assert(typeof name === 'string', 'wrong name type');\n        console.assert(name.length > 0, 'empty name');\n        console.assert(typeof callback === 'function', 'callback should be a function');\n\n        // if ( DEVELOP ) {\n        //     if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        //     if ( typeof name !== 'string' || name.length === 0 ) { throw new Error(__filename + ': wrong or empty name'); }\n        //     if ( typeof callback !== 'function' ) { throw new Error(__filename + ': wrong callback type'); }\n        // }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(callback);\n    },\n\n\n    /**\n     * Add a one time listener for the event.\n     * This listener is invoked only the next time the event is fired, after which it is removed.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.once('click', function ( data ) { ... });\n     */\n    once: function ( name, callback ) {\n        // current execution context\n        var self = this;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n        }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(function onceWrapper () {\n            self.removeListener(name, onceWrapper);\n            callback.apply(self, arguments);\n        });\n    },\n\n\n    /**\n     * Apply multiple listeners at once.\n     *\n     * @param {Object} callbacks event names with callbacks\n     *\n     * @example\n     * emitter.addListeners({\n     *     click: function ( data ) {},\n     *     close: function ( data ) {}\n     * });\n     */\n    addListeners: function ( callbacks ) {\n        var name;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof callbacks !== 'object' ) {\n                throw new Error(__filename + ': wrong callbacks type');\n            }\n            if ( Object.keys(callbacks).length === 0 ) {\n                throw new Error(__filename + ': no callbacks given');\n            }\n        }\n\n        for ( name in callbacks ) {\n            if ( callbacks.hasOwnProperty(name) ) {\n                this.addListener(name, callbacks[name]);\n            }\n        }\n    },\n\n\n    /**\n     * Remove all instances of the given callback.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to remove\n     *\n     * @example\n     * emitter.removeListener('click', func1);\n     */\n    removeListener: function ( name, callback ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n            if ( this.events[name] && !Array.isArray(this.events[name]) ) {\n                throw new Error(__filename + ': corrupted inner data');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( this.events[name] ) {\n            // rework the callback list to exclude the given one\n            this.events[name] = this.events[name].filter(function callbacksFilter ( fn ) { return fn !== callback; });\n            // event has no more callbacks so clean it\n            if ( this.events[name].length === 0 ) {\n                // as if there were no listeners at all\n                this.events[name] = undefined;\n            }\n        }\n    },\n\n\n    /**\n     * Remove all callbacks for the given event name.\n     * Without event name clears all events.\n     *\n     * @param {string} [name] event identifier\n     *\n     * @example\n     * emitter.removeAllListeners('click');\n     * emitter.removeAllListeners();\n     *\n     * @deprecated\n     */\n    /*removeAllListeners: function ( name ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 0 && (typeof name !== 'string' || name.length === 0) ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // check input\n        if ( arguments.length === 0 ) {\n            // no arguments so remove everything\n            this.events = {};\n        } else if ( name ) {\n            if ( DEVELOP ) {\n                if ( this.events[name] ) { throw new Error(__filename + ': event is not removed'); }\n            }\n\n            // only name is given so remove all callbacks for the given event\n            // but object structure modification should be avoided\n            this.events[name] = undefined;\n        }\n    },*/\n\n\n    /**\n     * Execute each of the listeners in the given order with the supplied arguments.\n     *\n     * @param {string} name event identifier\n     *\n     * @example\n     * emitter.emit('init');\n     * emitter.emit('click', {src: panel1, dst: panel2});\n     * emitter.emit('load', error, data);\n     *\n     * // it's a good idea to emit event only when there are some listeners\n     * if ( this.events['click'] ) {\n     *     this.emit('click', {event: event});\n     * }\n     */\n    emit: function ( name ) {\n        var event = this.events[name],\n            index;\n\n        if ( DEVELOP ) {\n            if ( arguments.length < 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( event ) {\n            if ( DEVELOP ) {\n                if ( !Array.isArray(event) ) {\n                    throw new Error(__filename + ': wrong event type');\n                }\n            }\n\n            for ( index = 0; index < event.length; index++ ) {\n                if ( DEVELOP ) {\n                    if ( typeof event[index] !== 'function' ) {\n                        throw new Error(__filename + ': wrong event callback type');\n                    }\n                }\n\n                // invoke the callback with parameters\n                event[index].apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n    }\n};\n\n\n// correct constructor name\nEmitter.prototype.constructor = Emitter;\n\n\n// public\nmodule.exports = Emitter;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Translations handler.\n *\n * @constructor\n *\n * @param {Object} config init parameters\n */\nfunction Gettext ( config ) {\n    var data, meta;\n\n    // sanitize\n    config   = config || {};\n    data     = config.data || {};\n    data[''] = data[''] || {};\n\n    // shortcut\n    meta = config.meta;\n\n    /**\n     * Display the native language translation of a textual message.\n     *\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.gettext = function ( msgId ) {\n        return data[''][msgId] || msgId;\n    };\n\n\n    /**\n     * The \"p\" in \"pgettext\" stands for \"particular\": fetches a particular translation of the textual message.\n     *\n     * @param {string} context message context\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.pgettext = function ( context, msgId ) {\n        return data[context] && data[context][msgId] || msgId;\n    };\n\n\n    /**\n     * Display the native language translation of a textual message whose grammatical form depends on a number.\n     *\n     * @param {string} msgId textual message in a singular form\n     * @param {string} plural textual message in a plural form\n     * @param {number} value message number\n     *\n     * @return {string} translated text\n     */\n    this.ngettext = function ( msgId, plural, value ) {\n        /* eslint no-unused-vars: 0 */\n        /* eslint no-eval: 0 */\n        /* eslint id-length: 0 */\n        var n, evalResult;\n\n        if ( DEVELOP ) {\n            if ( Number(value) !== value ) {\n                throw new Error(__filename + ': value must be a number');\n            }\n        }\n\n        if ( data && meta && data[''][msgId] ) {\n            evalResult = eval('n = ' + value + '; ' + meta.plural);\n\n            if ( typeof evalResult === 'boolean' ) {\n                evalResult = +evalResult;\n            }\n\n            // translation\n            return data[''][msgId][evalResult];\n        }\n\n        // english\n        return value === 1 ? msgId : plural;\n    };\n}\n\n\n// correct constructor name\nGettext.prototype.constructor = Gettext;\n\n\n// public\nmodule.exports = Gettext;\n","'use strict';\n\n/* eslint max-lines-per-function: 0 */\n/* eslint quote-props: 0 */\n\nvar links = require('./links'),\n    ids = require('./ids');\n\n\nfunction autoSave ( enable ) {\n    if ( enable ) {\n        gSTB.SetEnv('{\"lan_noip\":\"\",\"ipaddr_conf\":\"\",\"dnsip\":\"\"}');\n        gSTB.ServiceControl('network', 'restart');\n    }\n}\n\n\nfunction noIpSave ( enable ) {\n    if ( enable ) {\n        gSTB.SetEnv('{\"lan_noip\": true}');\n        gSTB.ServiceControl('network', 'restart');\n    }\n}\n\n\nmodule.exports = function ( data ) {\n    var gettext = links.gettext,\n        renders = links.api.renders,\n        getter = links.api.getters.environment,\n        saver = links.api.savers.environment,\n        sections, content;\n\n    sections = [\n        {\n            id: ids.lan,\n            name: gettext('Wired (Ethernet)'),\n            description: gettext('Setting up wired access to the Internet or a local area network'),\n            icon: 'theme-icon-linked',\n            parent: ids.base,\n            onsave: function () {\n                gSTB.ServiceControl('network', 'restart');\n            }\n        }\n    ];\n\n    switch ( core.device.model ) {\n        case 'emulator':\n        case 'AndroidAPP':\n            content = [\n                {\n                    id: ids.lanAuto,\n                    name: gettext('Auto (DHCP)'),\n                    description: gettext('Connecting to a wired network in automatic mode'),\n                    icon: '',\n                    type: 'option',\n                    confirmation: {\n                        title: gettext('Confirm changes?'),\n                        callback: autoSave\n                    },\n                    render: renders.confirm,\n                    parent: ids.lan\n                }\n            ];\n            break;\n        default:\n            content = [\n                {\n                    id: ids.lanAuto,\n                    name: gettext('Auto (DHCP)'),\n                    description: gettext('Connecting to a wired network in automatic mode'),\n                    icon: '',\n                    type: 'option',\n                    confirmation: {\n                        title: gettext('Confirm changes?'),\n                        callback: autoSave\n                    },\n                    render: renders.confirm,\n                    parent: ids.lan\n                },\n                {\n                    id: ids.lanManualElement1,\n                    name: gettext('IP'),\n                    description: gettext('Set-top box IP address'),\n                    icon: '',\n                    render: renders.input,\n                    config: {\n                        title: gettext('Enter IP address'),\n                        mode: 'number'\n                    },\n                    type: 'option',\n                    advanced: true,\n                    environment: {\n                        'ipaddr_conf': '0.0.0.0',\n                        'lan_noip': ''\n                    },\n                    prepareForRender: function ( env, callback ) {\n                        this.config.value = env['ipaddr_conf'];\n                        callback();\n                    },\n                    prepareForSave: function ( value, callback ) {\n                        //TODO check IP\n                        // if ( DNS !== read.result.dnsip ) {\n                        //     if ( checkIP(DNS) ) {\n                        //         saveData.dnsip = DNS;\n                        //     } else {\n                        //         errors.push('DNS');\n                        //     }\n                        // }\n                        this.environment['ipaddr_conf'] = value;\n                        this.environment['lan_noip'] = '';\n                        callback();\n                    },\n                    getter: getter,\n                    saver: saver,\n                    parent: ids.lan\n                },\n                {\n                    id: ids.lanManualElement2,\n                    name: gettext('Mask'),\n                    description: gettext('The subnet mask in which the set-top box is located'),\n                    icon: '',\n                    render: renders.input,\n                    config: {\n                        title: gettext('Enter network mask'),\n                        mode: 'number'\n                    },\n                    type: 'option',\n                    advanced: true,\n                    environment: {\n                        'netmask': '0.0.0.0',\n                        'lan_noip': ''\n                    },\n                    prepareForRender: function ( env, callback ) {\n                        this.config.value = env['netmask'];\n                        callback();\n                    },\n                    prepareForSave: function ( value, callback ) {\n                        //TODO check mask\n                        // if ( DNS !== read.result.dnsip ) {\n                        //     if ( checkIP(DNS) ) {\n                        //         saveData.dnsip = DNS;\n                        //     } else {\n                        //         errors.push('DNS');\n                        //     }\n                        // }\n                        this.environment['netmask'] = value;\n                        this.environment['lan_noip'] = '';\n                        callback();\n                    },\n                    getter: getter,\n                    saver: saver,\n                    parent: ids.lan\n                },\n                {\n                    id: ids.lanManualElement3,\n                    name: gettext('Gateway'),\n                    description: gettext('Gateway description'),\n                    icon: '',\n                    render: renders.input,\n                    config: {\n                        title: gettext('Enter gateway'),\n                        mode: 'number'\n                    },\n                    type: 'option',\n                    advanced: true,\n                    environment: {\n                        'gatewayip': '0.0.0.0',\n                        'lan_noip': ''\n                    },\n                    prepareForRender: function ( env, callback ) {\n                        this.config.value = env['gatewayip'];\n                        callback();\n                    },\n                    prepareForSave: function ( value, callback ) {\n                        //TODO check gatewayip\n                        // if ( DNS !== read.result.dnsip ) {\n                        //     if ( checkIP(DNS) ) {\n                        //         saveData.dnsip = DNS;\n                        //     } else {\n                        //         errors.push('DNS');\n                        //     }\n                        // }\n                        this.environment['gatewayip'] = value;\n                        this.environment['lan_noip'] = '';\n                        callback();\n                    },\n                    getter: getter,\n                    saver: saver,\n                    parent: ids.lan\n                },\n                {\n                    id: ids.lanManualElement4,\n                    name: gettext('DNS'),\n                    description: gettext('DNS server IP address'),\n                    icon: '',\n                    render: renders.input,\n                    config: {\n                        title: gettext('Enter DNS server'),\n                        mode: 'number'\n                    },\n                    type: 'option',\n                    advanced: true,\n                    environment: {\n                        'dnsip': '0.0.0.0',\n                        'lan_noip': ''\n                    },\n                    prepareForRender: function ( env, callback ) {\n                        this.config.value = env['dnsip'];\n                        callback();\n                    },\n                    prepareForSave: function ( value, callback ) {\n                        //TODO check DNS\n                        // if ( DNS !== read.result.dnsip ) {\n                        //     if ( checkIP(DNS) ) {\n                        //         saveData.dnsip = DNS;\n                        //     } else {\n                        //         errors.push('DNS');\n                        //     }\n                        // }\n                        this.environment['dnsip'] = value;\n                        this.environment['lan_noip'] = '';\n                        callback();\n                    },\n                    getter: getter,\n                    saver: saver,\n                    parent: ids.lan\n                }\n            ];\n            break;\n    }\n\n    sections.forEach(function ( item ) {\n        data.sections.push(item);\n    });\n\n    content.forEach(function ( item ) {\n        data.options.push(item);\n    });\n\n    switch ( core.device.model ) {\n        case 'MAG324':\n        case 'MAG325':\n        case 'MAG349':\n        case 'MAG350':\n        case 'MAG351':\n        case 'MAG352':\n        case 'MAG256':\n        case 'MAG257':\n            break;\n        default:\n            data.options.push({\n                id: ids.lanOptDns,\n                name: gettext('No IP'),\n                description: gettext('Disables the receipt of an IP address on the network interface'),\n                icon: 'theme-icon-network',\n                type: 'option',\n                advanced: true,\n                confirmation: {\n                    title: gettext('Confirm changes?'),\n                    callback: noIpSave\n                },\n                render: renders.confirm,\n                parent: ids.lan\n            });\n            break;\n    }\n};\n","'use strict';\n\n/* eslint max-lines-per-function: 0 */\n/* eslint quote-props: 0 */\n\nvar ids = require('./ids'),\n    links = require('./links');\n\n\nmodule.exports = function ( data ) {\n    var gettext = links.gettext,\n        renders = links.api.renders,\n        getter = links.api.getters.environment,\n        saver = links.api.savers.environment,\n        sections, options;\n\n    sections = [\n        {\n            id: ids.pppoe,\n            name: gettext('PPPoE'),\n            description: gettext('Enable / Disable PPPoE'),\n            icon: 'theme-icon-lan',\n            parent: ids.base,\n            onsave: function () {\n                gSTB.ServiceControl('pppoe', 'restart');\n            }\n        }\n    ];\n\n    options = [\n        {\n            id: ids.pppoeDnsElement1,\n            name: gettext('Enable'),\n            description: '',\n            icon: 'theme-icon-lan',\n            render: renders.toggle,\n            saveImmediate: false,\n            environment: {\n                'pppoe_enabled': false\n            },\n            prepareForRender: function ( env, callback ) {\n                callback(env['pppoe_enabled']);\n            },\n            prepareForSave: function ( value, callback ) {\n                this.environment['pppoe_enabled'] = value;\n                callback();\n            },\n            getter: getter,\n            saver: saver,\n            parent: ids.pppoe\n        },\n        {\n            id: ids.pppoeDnsElement2,\n            name: gettext('Login'),\n            description: '',\n            icon: '',\n            render: renders.input,\n            config: {\n                title: gettext('Enter login'),\n                type: 'text',\n                mode: 'qwerty'\n            },\n            saveImmediate: false,\n            environment: {\n                'pppoe_login': ''\n            },\n            prepareForRender: function ( env, callback ) {\n                this.config.value = env['pppoe_login'];\n                callback();\n            },\n            prepareForSave: function ( value, callback ) {\n                this.environment['pppoe_login'] = value;\n                callback();\n            },\n            getter: getter,\n            saver: saver,\n            parent: ids.pppoe\n        },\n        {\n            id: ids.pppoeDnsElement3,\n            name: gettext('Password'),\n            description: '',\n            icon: '',\n            render: renders.input,\n            config: {\n                title: gettext('Enter password'),\n                type: 'password',\n                mode: 'qwerty'\n            },\n            saveImmediate: false,\n            environment: {\n                'pppoe_pwd': ''\n            },\n            prepareForRender: function ( env, callback ) {\n                this.config.value = env['pppoe_pwd'];\n                callback();\n            },\n            prepareForSave: function ( value, callback ) {\n                this.environment['pppoe_pwd'] = value;\n                callback();\n            },\n            getter: getter,\n            saver: saver,\n            parent: ids.pppoe\n        },\n        {\n            id: ids.pppoeDnsElement4,\n            name: gettext('DNS'),\n            description: '',\n            icon: '',\n            render: renders.input,\n            advanced: true,\n            config: {\n                title: gettext('Enter DNS'),\n                type: 'password',\n                mode: 'number'\n            },\n            saveImmediate: false,\n            environment: {\n                'pppoe_dns1': ''\n            },\n            prepareForRender: function ( env, callback ) {\n                this.config.value = env['pppoe_dns1'];\n                callback();\n            },\n            prepareForSave: function ( value, callback ) {\n                this.environment['pppoe_dns1'] = value;\n                callback();\n            },\n            getter: getter,\n            saver: saver,\n            parent: ids.pppoe\n        }\n    ];\n\n    sections.forEach( function ( item ) {\n        data.sections.push(item);\n    });\n\n    options.forEach(function ( item ) {\n        data.options.push(item);\n    });\n};\n","'use strict';\n\n/* eslint max-lines-per-function: 0 */\n/* eslint quote-props: 0 */\n\nvar links = require('./links'),\n    ids = require('./ids'),\n\n    toSave = {},\n    wiFiVisited = false,\n    gettext, renders;\n\n\n/**\n * Open LAN.\n *\n * @param {Function} openCallback - result handler\n *\n * @this list\n */\nfunction openLan ( openCallback ) {\n    var self = this,\n        getter = links.api.getters.environment,\n        saver = links.api.savers.environment,\n        index, list, authOptions,\n        auth, encryptionOptions, encryption;\n\n    switch ( this.value.auth ) {\n        case 'WPA2':\n            auth = 'wpa2psk';\n            break;\n        case 'WPAAUTO':\n            auth = 'wep_auto';\n            break;\n        case 'WPA':\n            auth = 'wpapsk';\n            break;\n        default:\n            auth = 'open';\n            break;\n    }\n    toSave['wifi_auth'] = auth;\n\n    switch ( this.value.enc ) {\n        case 'TKIP':\n            encryption = 'tkip';\n            break;\n        case 'WEP':\n            encryption = 'wep';\n            break;\n        case 'CCMP':\n            encryption = 'aes';\n            break;\n        default:\n            encryption = 'none';\n            break;\n    }\n    toSave['wifi_enc'] = encryption;\n\n    authOptions = [\n        {name: gettext('Open'), value: 'open'},\n        {name: gettext('Shared key'), value: 'shared'},\n        {name: gettext('Auto Open/Shared key'), value: 'wep_auto'},\n        {name: 'WPA PSK', value: 'wpapsk'},\n        {name: 'WPA2 PSK', value: 'wpa2psk'}\n    ];\n\n    for ( index = 0; index < authOptions.length; index++ ) {\n        if ( authOptions[index].value === auth ) {\n            authOptions[index].selected = true;\n            break;\n        }\n    }\n\n    encryptionOptions = [\n        {name: gettext('NONE'), value: 'none'},\n        {name: 'WEP', value: 'wep'},\n        {name: 'TKIP', value: 'tkip'},\n        {name: 'AES', value: 'aes'}\n    ];\n\n    for ( index = 0; index < encryptionOptions.length; index++ ) {\n        if ( encryptionOptions[index].value === encryption ) {\n            encryptionOptions[index].selected = true;\n            break;\n        }\n    }\n\n    toSave['wifi_ssid'] = this.value.ssid;\n\n    //TODO check value\n    switch ( core.device.model ) {\n        case 'emulator':\n        case 'AndroidAPP':\n            list = [\n                {\n                    id: ids.wifiAddElement + self.value.ssid + 1,\n                    name: gettext('SSID'),\n                    description: '',\n                    icon: '',\n                    render: renders.input,\n                    config: {\n                        title: gettext('Enter SSID'),\n                        value: self.value.ssid || '',\n                        mode: 'qwerty'\n                    },\n                    saveImmediate: false,\n                    environment: {\n                        'wifi_ssid': ''\n                    },\n                    prepareForRender: function ( data, callback ) {\n                        this.config.value = self.value.ssid || data['wifi_ssid'];\n                        callback(this.config.value);\n                    },\n                    prepareForSave: function ( value, callback ) {\n                        this.environment['wifi_ssid'] = value;\n                        self.value.ssid = value;\n                        delete toSave['wifi_ssid'];\n                        callback();\n                    },\n                    getter: getter,\n                    saver: saver,\n                    type: 'option',\n                    parent: self.id\n                },\n                {\n                    id: ids.wifiAddElement + self.value.ssid + 2,\n                    name: gettext('Authentication mode'),\n                    description: '',\n                    icon: 'theme-icon-network',\n                    render: renders.popupSelect,\n                    title: gettext('Select authentication mode'),\n                    saveImmediate: false,\n                    advanced: !!self.value.id,\n                    environment: {\n                        'wifi_auth': ''\n                    },\n                    prepareForRender: function ( environment, callback ) {\n                        callback(authOptions);\n                    },\n                    prepareForSave: function ( value, callback ) {\n                        this.environment['wifi_auth'] = value;\n                        delete toSave['wifi_auth'];\n                        callback();\n                    },\n                    getter: getter,\n                    saver: saver,\n                    type: 'option',\n                    parent: self.id\n                },\n                {\n                    id: ids.wifiAddElement + self.value.ssid + 3,\n                    name: gettext('Encryption'),\n                    description: '',\n                    icon: 'theme-icon-network',\n                    render: renders.popupSelect,\n                    title: gettext('Select encryption'),\n                    mode: 'qwerty',\n                    saveImmediate: false,\n                    advanced: !!self.value.id,\n                    environment: {\n                        'wifi_enc': ''\n                    },\n                    prepareForRender: function ( environment, callback ) {\n                        callback(encryptionOptions);\n                    },\n                    prepareForSave: function ( value, callback ) {\n                        this.environment['wifi_enc'] = value;\n                        delete toSave['wifi_enc'];\n                        callback();\n                    },\n                    getter: getter,\n                    saver: saver,\n                    type: 'option',\n                    parent: self.id\n                },\n                {\n                    id: ids.wifiAddElement + self.value.ssid + 4,\n                    name: gettext('Password'),\n                    description: '',\n                    icon: '',\n                    render: renders.input,\n                    config: {\n                        title: gettext('Enter password'),\n                        mode: 'qwerty',\n                        type: 'password'\n                    },\n                    saveImmediate: false,\n                    environment: {\n                        'wifi_psk': ''\n                    },\n                    prepareForRender: function ( data, callback ) {\n                        this.config.value = data['wifi_psk'];\n                        callback(this.config.value);\n                    },\n                    prepareForSave: function ( value, callback ) {\n                        this.environment['wifi_psk'] = value;\n                        callback();\n                    },\n                    getter: getter,\n                    saver: saver,\n                    type: 'option',\n                    parent: self.id\n                }\n            ];\n            break;\n        default:\n            list = [\n                {\n                    id: ids.wifiAddElement + self.value.ssid + 1,\n                    name: gettext('SSID'),\n                    description: '',\n                    icon: '',\n                    render: renders.input,\n                    config: {\n                        title: gettext('Enter SSID'),\n                        value: self.value.ssid || '',\n                        mode: 'qwerty'\n                    },\n                    saveImmediate: false,\n                    environment: {\n                        'wifi_ssid': ''\n                    },\n                    prepareForRender: function ( data, callback ) {\n                        this.config.value = self.value.ssid || data['wifi_ssid'];\n                        callback(this.config.value);\n                    },\n                    prepareForSave: function ( value, callback ) {\n                        this.environment['wifi_ssid'] = value;\n                        self.value.ssid = value;\n                        delete toSave['wifi_ssid'];\n                        callback();\n                    },\n                    getter: getter,\n                    saver: saver,\n                    type: 'option',\n                    parent: self.id\n                },\n                {\n                    id: ids.wifiAddElement + self.value.ssid + 2,\n                    name: gettext('Authentication mode'),\n                    description: '',\n                    icon: 'theme-icon-network',\n                    render: renders.popupSelect,\n                    title: gettext('Select authentication mode'),\n                    saveImmediate: false,\n                    advanced: !!self.value.id,\n                    environment: {\n                        'wifi_auth': ''\n                    },\n                    prepareForRender: function ( environment, callback ) {\n                        callback(authOptions);\n                    },\n                    prepareForSave: function ( value, callback ) {\n                        this.environment['wifi_auth'] = value;\n                        delete toSave['wifi_auth'];\n                        callback();\n                    },\n                    getter: getter,\n                    saver: saver,\n                    type: 'option',\n                    parent: self.id\n                },\n                {\n                    id: ids.wifiAddElement + self.value.ssid + 3,\n                    name: gettext('Encryption'),\n                    description: '',\n                    icon: 'theme-icon-network',\n                    render: renders.popupSelect,\n                    title: gettext('Select encryption'),\n                    mode: 'qwerty',\n                    saveImmediate: false,\n                    advanced: !!self.value.id,\n                    environment: {\n                        'wifi_enc': ''\n                    },\n                    prepareForRender: function ( environment, callback ) {\n                        callback(encryptionOptions);\n                    },\n                    prepareForSave: function ( value, callback ) {\n                        this.environment['wifi_enc'] = value;\n                        delete toSave['wifi_enc'];\n                        callback();\n                    },\n                    getter: getter,\n                    saver: saver,\n                    type: 'option',\n                    parent: self.id\n                },\n                {\n                    id: ids.wifiAddElement + self.value.ssid + 4,\n                    name: gettext('Password'),\n                    description: '',\n                    icon: '',\n                    render: renders.input,\n                    config: {\n                        title: gettext('Enter password'),\n                        mode: 'qwerty',\n                        type: 'password'\n                    },\n                    saveImmediate: false,\n                    environment: {\n                        'wifi_psk': ''\n                    },\n                    prepareForRender: function ( data, callback ) {\n                        this.config.value = data['wifi_psk'];\n                        callback(this.config.value);\n                    },\n                    prepareForSave: function ( value, callback ) {\n                        this.environment['wifi_psk'] = value;\n                        callback();\n                    },\n                    getter: getter,\n                    saver: saver,\n                    type: 'option',\n                    parent: self.id\n                },\n                {\n                    id: ids.wifiAddElement + self.value.ssid + 5,\n                    name: gettext('IP'),\n                    description: '',\n                    icon: '',\n                    render: renders.input,\n                    advanced: true,\n                    config: {\n                        title: gettext('Enter ip'),\n                        mode: 'number'\n                    },\n                    saveImmediate: false,\n                    environment: {\n                        'wifi_int_ip': '0.0.0.0'\n                    },\n                    prepareForRender: function ( data, callback ) {\n                        this.config.value = data['wifi_int_ip'];\n                        callback(this.config.value);\n                    },\n                    prepareForSave: function ( value, callback ) {\n                        this.environment['wifi_int_ip'] = value;\n                        callback();\n                    },\n                    getter: getter,\n                    saver: saver,\n                    type: 'option',\n                    parent: self.id\n                },\n                {\n                    id: ids.wifiAddElement + self.value.ssid + 6,\n                    name: gettext('Network mask'),\n                    description: '',\n                    icon: 'theme-icon-network',\n                    render: renders.input,\n                    config: {\n                        title: gettext('Enter network mask'),\n                        mode: 'number'\n                    },\n                    saveImmediate: false,\n                    advanced: true,\n                    environment: {\n                        'wifi_int_mask': '0.0.0.0'\n                    },\n                    prepareForRender: function ( data, callback ) {\n                        this.config.value = data['wifi_int_mask'];\n                        callback(this.config.value);\n                    },\n                    prepareForSave: function ( value, callback ) {\n                        this.environment['wifi_int_mask'] = value;\n                        callback();\n                    },\n                    getter: getter,\n                    saver: saver,\n                    type: 'option',\n                    parent: self.id\n                },\n                {\n                    id: ids.wifiAddElement + self.value.ssid + 7,\n                    name: gettext('Gateway'),\n                    description: '',\n                    icon: 'theme-icon-network',\n                    render: renders.input,\n                    config: {\n                        title: gettext('Enter gateway'),\n                        type: 'text',\n                        mode: 'number'\n                    },\n                    saveImmediate: false,\n                    advanced: true,\n                    environment: {\n                        'wifi_int_gw': '0.0.0.0'\n                    },\n                    prepareForRender: function ( data, callback ) {\n                        this.config.value = data['wifi_int_gw'];\n                        callback(this.config.value);\n                    },\n                    prepareForSave: function ( value, callback ) {\n                        this.environment['wifi_int_gw'] = value;\n                        callback();\n                    },\n                    getter: getter,\n                    saver: saver,\n                    type: 'option',\n                    parent: self.id\n                },\n                {\n                    id: ids.wifiAddElement + self.value.ssid + 8,\n                    name: gettext('DNS'),\n                    description: '',\n                    icon: '',\n                    render: renders.input,\n                    saveImmediate: false,\n                    advanced: true,\n                    config: {\n                        title: gettext('Enter DNS'),\n                        type: 'text',\n                        mode: 'qwerty'\n                    },\n                    environment: {\n                        'wifi_int_dns': '0.0.0.0'\n                    },\n                    prepareForRender: function ( data, callback ) {\n                        this.config.value = data['wifi_int_dns'];\n                        callback(this.config.value);\n                    },\n                    prepareForSave: function ( value, callback ) {\n                        this.environment['wifi_int_dns'] = value;\n                        callback();\n                    },\n                    getter: getter,\n                    saver: saver,\n                    type: 'option',\n                    parent: self.id\n                }\n\n            ];\n            break;\n    }\n\n    openCallback(null, list);\n}\n\n\nfunction save () {\n    gSTB.SetEnv(JSON.stringify(toSave));\n    gSTB.ServiceControl('wifi', 'restart');\n}\n\n\nfunction addWifi ( addCallback ) {\n    var environmentData = JSON.parse(gSTB.GetEnv('{\"varList\":[\"wifi_ssid\", \"wifi_off\"]}')),\n        getter = links.api.getters.environment,\n        saver = links.api.savers.environment,\n        result, index, item,\n        frequency, channel,\n        auth, encryption, list,\n        wifiOff;\n\n    wifiOff = environmentData.result.wifi_off === '1';\n\n    if ( gSTB.GetNetworkWifiMac() === '' && !wiFiVisited ) {\n        if ( addCallback ) {\n            addCallback(gettext('Wi-Fi adapter not connected'));\n        }\n\n        return;\n    }\n\n    list = [\n        {\n            id: ids.wifiEnable,\n            name: gettext('Enable'),\n            description: '',\n            icon: '',\n            render: renders.toggle,\n            saveImmediate: true,\n            environment: {\n                // \"wifi_off\": false\n            },\n            prepareForRender: function ( data, callback ) {\n                callback(!wifiOff);\n            },\n            prepareForSave: function ( value, callback ) {\n                // this.environment['wifi_off'] = value;\n                wifiOff = value;\n                // console.log(JSON.stringify(links.api.actions));\n                // links.api.actions.view.refresh();\n                gSTB.SetEnv('{\"wifi_off\": ' + (value ? 0 : 1) + '}');\n                gSTB.ServiceControl('wifi', 'restart');\n                callback();\n                addWifi();\n\n            },\n            type: 'option',\n            getter: getter,\n            saver: saver,\n            parent: ids.wifi\n        }\n    ];\n\n    if ( wifiOff ) {\n        if ( addCallback ) {\n            addCallback(null, list);\n        } else {\n            links.api.actions.view.init({\n                data: list\n            });\n        }\n\n        return;\n    }\n\n    result = JSON.parse(gSTB.GetWifiGroups()).result;\n\n    for ( index = 0; index < result.length; index++ ) {\n        item = result[index];\n\n        auth = item.auth.toLowerCase();\n        encryption = item.enc.toLowerCase();\n        if ( (auth === 'none' && encryption === 'none') || (auth === 'open' && encryption === 'none') ) {\n            item.unlock = true;\n        } else {\n            item.unlock = false;\n        }\n        if ( item.ssid === environmentData.result.wifi_ssid ) {\n            item.connected = true;\n        }\n        frequency = item.rfInfo.substring((item.rfInfo.indexOf(':') + 1), item.rfInfo.indexOf('('));\n        channel = item.rfInfo.substring((item.rfInfo.indexOf('l') + 1), item.rfInfo.indexOf(')'));\n\n        list.push({\n            id: ids.wifiList + index,\n            name: item.ssid,\n            value: item,\n            description: [\n                {\n                    label: gettext('Authentication mode') + ':',\n                    value: item.auth\n                },\n                {\n                    label: gettext('Encryption') + ':',\n                    value: item.enc\n                },\n                {\n                    label: gettext('Frequency') + ':',\n                    value: frequency.trim()\n                },\n                {\n                    label: gettext('Channel') + ':',\n                    value: channel.trim()\n                },\n                {\n                    label: gettext('Signal info') + ':',\n                    value: item.signalInfo + ' dB'\n                }\n            ],\n            icon: 'theme-icon-network',\n            type: 'section',\n            parent: ids.wifi,\n            onenter: openLan,\n            onsave: save\n        });\n    }\n\n    list.push({\n        id: ids.wifiAdd,\n        name: gettext('Add network'),\n        description: gettext('Adding hidden Wifi networks'),\n        icon: 'theme-icon-plus',\n        type: 'section',\n        parent: ids.wifi,\n        value: {},\n        onenter: openLan\n    });\n\n    if ( addCallback ) {\n        addCallback(null, list);\n    } else {\n        links.api.actions.view.init({\n            data: list\n        });\n    }\n}\n\n\nmodule.exports = function ( data ) {\n    renders = links.api.renders;\n    gettext = links.gettext;\n\n    data.sections.push({\n        id: ids.wifi,\n        name: gettext('Wireless (Wi-Fi)'),\n        description: gettext('Setting up wireless access to the Internet or a local area network'),\n        icon: 'theme-icon-wifi',\n        parent: ids.base,\n        onenter: addWifi\n    });\n};\n","'use strict';\n\n/* eslint max-lines-per-function: 0 */\n/* eslint quote-props: 0 */\n\nvar tools = require('./tools'),\n    ids = require('./ids'),\n    links = require('./links'),\n\n    enable = false,\n    url;\n\n\nmodule.exports = function ( data ) {\n    var renders = links.api.renders,\n        gettext = links.gettext,\n        getter = links.api.getters.environment,\n        saver = links.api.savers.environment,\n        sections, content;\n\n    sections = [\n        {\n            id: ids.multicast,\n            name: gettext('Multicast proxy'),\n            description: gettext('The multicast proxy function allows you to play rtp and udp streams'),\n            icon: 'theme-icon-multicast',\n            parent: ids.base\n        }\n    ];\n\n    content = [\n        {\n            id: ids.multicastE + 1,\n            name: gettext('Enable Multicast proxy'),\n            description: gettext('Enable Multicast proxy function'),\n            icon: '',\n            render: renders.toggle,\n            saveImmediate: true,\n            environment: {\n                'mc_proxy_enabled': false,\n                'mc_proxy_url': ''\n            },\n            prepareForRender: function ( env, callback ) {\n                enable = env['mc_proxy_enabled'];\n                callback(enable);\n            },\n            prepareForSave: function ( value, callback ) {\n                var index = 0;\n\n                this.environment['mc_proxy_enabled'] = value;\n                enable = value;\n                url = this.environment['mc_proxy_url'];\n\n                if ( stbPlayerManager && stbPlayerManager.list ) {\n                    if ( enable && url ) {\n                        for ( index; index < stbPlayerManager.list.length; index++ ) {\n                            stbPlayerManager.list[index].multicastProxy = url;\n                        }\n                    } else {\n                        for ( index; index < stbPlayerManager.list.length; index++ ) {\n                            stbPlayerManager.list[index].multicastProxy = '';\n                        }\n                    }\n                }\n                gSTB.EnableMulticastProxy(value);\n                callback();\n            },\n            getter: getter,\n            saver: saver,\n            parent: ids.multicast\n        },\n        {\n            id: ids.multicastE + 2,\n            name: gettext('Link to multicast proxy'),\n            description: gettext('Enter a link to your home router / switch, on which UDP Proxy function is enabled'),\n            icon: '',\n            render: renders.input,\n            saveImmediate: true,\n            config: {\n                title: gettext('Enter link to multicast proxy'),\n                mode: 'qwerty'\n            },\n            advanced: true,\n            environment: {\n                'mc_proxy_url': ''\n            },\n            prepareForRender: function ( env, callback ) {\n                this.config.value = env['mc_proxy_url'];\n                callback(this.config.value);\n            },\n            prepareForSave: function ( value, callback ) {\n                var error = true,\n                    index = 0;\n\n                if ( value === '' || tools.validateUrl(value) ) {\n                    this.environment['mc_proxy_url'] = url = value;\n                    gSTB.SetMulticastProxyURL(value);\n\n                    if ( enable && stbPlayerManager && stbPlayerManager.list ) {\n                        for ( index; index < stbPlayerManager.list.length; index++ ) {\n                            stbPlayerManager.list[index].multicastProxy = url;\n                        }\n                    }\n                    error = false;\n                } else {\n                    core.notify({\n                        title: gettext('Link to multicast proxy must be url'),\n                        icon: 'alert',\n                        type: 'error'\n                    });\n                }\n\n                callback(error);\n            },\n            getter: getter,\n            saver: saver,\n            parent: ids.multicast\n        }\n    ];\n\n    sections.forEach( function ( item ) {\n        data.sections.push(item);\n    });\n\n    content.forEach(function ( item ) {\n        data.options.push(item);\n    });\n};\n","'use strict';\n\n/* eslint max-lines-per-function: 0 */\n/* eslint quote-props: 0 */\n\nvar tools = require('./tools'),\n    ids = require('./ids'),\n    links = require('./links');\n\n\nmodule.exports = function ( data ) {\n    var gettext = links.gettext,\n        renders = links.api.renders,\n        lanList, pppoeList, wifiList,\n        result, gateways, servers,\n        title, ip;\n\n    result = JSON.parse(gSTB.GetEnv(JSON.stringify({\n        varList: ['lan_noip', 'ipaddr_conf', 'dnsip', 'pppoe_enabled', 'pppoe_login', 'pppoe_dns1', 'wifi_ssid', 'wifi_int_ip']\n    }))).result;\n\n    gateways = gSTB.GetNetworkGateways();\n    servers = gSTB.GetNetworkNameServers();\n\n    if ( result.lan_noip === 'true' ) {\n        title = gettext('No config');\n    } else {\n        title = gettext('DHCP');\n        if ( tools.checkIP(result.ipaddr_conf) ) {\n            title += ' - (' + gettext('Static IP') + ')';\n\n        } else if ( tools.checkIP(result.dnsip) ) {\n            title += ' - (' + gettext('Manual DNS') + ')';\n        }\n    }\n\n    lanList = [\n        {\n            label: title,\n            value: ''\n        },\n        {\n            label: gettext('Link status:'),\n            value: gSTB.GetLanLinkStatus() ? 'UP' : 'DOWN'\n        },\n        {\n            label: gettext('Mask:'),\n            value: gSTB.RDir('IPMask')\n        },\n        {\n            label: gettext('MAC:'),\n            value: gSTB.GetDeviceMacAddress()\n        },\n        {\n            label: gettext('IP:'),\n            value: gSTB.RDir('IPAddress')\n        },\n        {\n            label: gettext('Gateway:'),\n            value: gateways === '' ? 'n/a' : gateways.replace(/\\r\\n|\\r|\\n/g, ', ')\n        },\n        {\n            label: gettext('DNS server:'),\n            value: servers === '' ? 'n/a' : servers.replace(/\\r\\n|\\r|\\n/g, ', ')\n        }\n    ];\n\n    title = '';\n    if ( result.pppoe_enabled === 'true' ) {\n        title = 'PPPoE - ' + result.pppoe_login;\n    } else {\n        title = gettext('PPPoE - Disabled');\n    }\n    ip = gSTB.GetPppoeIp();\n    gateways = gSTB.GetNetworkGateways();\n    servers = gSTB.GetNetworkNameServers();\n\n    pppoeList = [\n        {\n            label: title,\n            value: ''\n        },\n        {\n            label: gettext('Link status:'),\n            value: gSTB.GetPppoeLinkStatus() ? 'UP' : 'DOWN'\n        },\n        {\n            label: gettext('IP:'),\n            value: ip === '' ? 'n/a' : ip\n        },\n        {\n            label: gettext('Gateway:'),\n            value: gateways === '' ? 'n/a' : gateways.replace(/\\r\\n|\\r|\\n/g, ', ')\n        },\n        {\n            label: gettext('DNS server:'),\n            value: servers === '' ? 'n/a' : servers.replace(/\\r\\n|\\r|\\n/g, ', ')\n        }\n    ];\n\n    title = '';\n    gateways = gSTB.GetNetworkGateways();\n    servers = gSTB.GetNetworkNameServers();\n    if ( result.wifi_ssid ) {\n        title = '\"' + result.wifi_ssid + '\" ( ';\n        if ( tools.checkIP(result.wifi_int_ip) ) {\n            title += gettext('Static IP') + ')';\n        } else {\n            title += 'DHCP)';\n        }\n    } else {\n        title = gettext('Wi-Fi - \"Disabled\"');\n    }\n\n    ip = gSTB.RDir('WiFi_ip');\n\n    wifiList = [\n        {\n            label: title,\n            value: ''\n        },\n        {\n            label: gettext('Link status:'),\n            value: gSTB.GetWifiLinkStatus() ? 'UP' : 'DOWN'\n        },\n        {\n            label: gettext('IP:'),\n            value: ip === '' ? 'n/a' : ip\n        },\n        {\n            label: gettext('MAC:'),\n            value: gSTB.GetNetworkWifiMac()\n        },\n        {\n            label: gettext('Gateway:'),\n            value: gateways === '' ? 'n/a' : gateways.replace(/\\r\\n|\\r|\\n/g, ', ')\n        },\n        {\n            label: gettext('DNS server:'),\n            value: servers === '' ? 'n/a' : servers.replace(/\\r\\n|\\r|\\n/g, ', ')\n        }\n    ];\n\n    data.sections.push({\n        id: ids.info,\n        name: gettext('Network info'),\n        description: gettext('Network info description'),\n        icon: '',\n        parent: ids.base\n    });\n\n    data.options.push({\n        id: ids.infoLan,\n        icon: '',\n        name: gettext('DHCP'),\n        description: lanList,\n        render: renders.listItem,\n        saveImmediate: true,\n        parent: ids.info\n    });\n\n    switch ( core.device.model ) {\n        case 'MAG324':\n        case 'MAG325':\n        case 'MAG349':\n        case 'MAG350':\n        case 'MAG351':\n        case 'MAG352':\n        case 'MAG256':\n        case 'MAG257':\n            break;\n        case 'emulator':\n        case 'emulator_stb':\n        case 'AndroidSTB':\n        case 'AndroidAPP':\n            break;\n        default:\n            data.options.push({\n                id: ids.infoPPPOE,\n                icon: '',\n                name: gettext('PPPoE'),\n                description: pppoeList,\n                render: renders.listItem,\n                saveImmediate: true,\n                parent: ids.info\n            });\n            break;\n    }\n\n\n    data.options.push({\n        id: ids.infoWifi,\n        icon: '',\n        name: gettext('Wi-Fi'),\n        description: wifiList,\n        render: renders.listItem,\n        saveImmediate: true,\n        parent: ids.info\n    });\n};\n"],"sourceRoot":""}