{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/main.js","webpack:///./node_modules/mag-gettext/index.js","webpack:///./node_modules/cjs-emitter/index.js","webpack:///./node_modules/cjs-gettext/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","rcEnable","rcDeviceName","rcPassword","_","gettextWrapper","saveSettings","app","errors","setItems","gSTB","ConfigNetRc","SetNetRcStatus","storage","setItem","push","length","core","notify","title","join","icon","type","onInit","callback","undefined","getItem","onSettingsInit","api","load","environment","language","path","gettext","id","description","sections","parent","options","render","renders","toggle","saveImmediate","data","prepareForRender","prepareCallback","prepareForSave","this","input","config","Emitter","Gettext","loader","prepare","pgettext","ngettext","defaultLanguage","xhr","ext","XMLHttpRequest","onload","jsonParseError","json","JSON","parse","responseText","error","onerror","events","emit","ontimeout","open","send","addListener","once","self","onceWrapper","removeListener","apply","arguments","addListeners","callbacks","filter","fn","index","event","Array","slice","constructor","meta","msgId","context","plural","evalResult","eval"],"mappings":"2BACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QA0DA,OArDAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,YAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,kCC5EA,IACAC,EAAAC,EAAAC,EAAAC,EADAC,EAAqBxC,EAAQ,GAS7B,SAAAyC,EAAAC,GACA,IAAAC,EAAA,GACAC,EAAA,WACAC,KAAAC,YAAAT,EAAAC,GACAO,KAAAE,eAAAX,GAEAM,EAAAM,QAAAC,QAAA,WAAAb,GACAM,EAAAM,QAAAC,QAAA,eAAAZ,GACAK,EAAAM,QAAAC,QAAA,aAAAX,IAGAF,GACAC,GACAM,EAAAO,KAAAX,EAAA,gBAGAD,GACAK,EAAAO,KAAAX,EAAA,aAGAI,EAAAQ,OACAC,KAAAC,OAAA,CACAC,MAAAf,EAAA,8DAAAI,EAAAY,KAAA,MACAC,KAAA,QACAC,KAAA,UAGAb,KAGAA,IAKAzC,EAAAD,QAAA,CACAwD,OAAA,SAAAhB,EAAAiB,GACAvB,OAAAwB,IAAAlB,EAAAM,QAAAa,QAAA,aAAAnB,EAAAM,QAAAa,QAAA,YACAxB,OAAAuB,IAAAlB,EAAAM,QAAAa,QAAA,mBAAAnB,EAAAM,QAAAa,QAAA,gBACAvB,OAAAsB,IAAAlB,EAAAM,QAAAa,QAAA,iBAAAnB,EAAAM,QAAAa,QAAA,cAEAzB,IACAS,KAAAC,YAAAT,EAAAC,GACAO,KAAAE,eAAAX,IAGAuB,KAEAG,eAAA,SAAApB,EAAAiB,GACA,IAAAI,EAAArB,EAAAqB,IAEAvB,EAAAwB,KAAA,CACArD,KAAAyC,KAAAa,YAAAC,SACAC,KAAAzB,EAAAyB,KAAA,QACS,WACT5B,EAAAC,EAAA4B,QAEAT,EAAA,MACAU,GAAA,gBACA1D,KAAA4B,EAAA,kBAEA+B,YAAA/B,EAAA,uJACAiB,KAAA,2BACAe,SAAA,CACA,CACAF,GAAA,gBACA1D,KAAA4B,EAAA,kBAEA+B,YAAA/B,EAAA,uJACAiB,KAAA,2BACAgB,OAAA,WAGAC,QAAA,CACA,CACAJ,GAAA,WACA1D,KAAA4B,EAAA,yBACA+B,YAAA/B,EAAA,kCACAiB,KAAA,2BACAkB,OAAAX,EAAAY,QAAAC,OACAC,eAAA,EACAC,KAAA,CACA1C,YAEA2C,iBAAA,SAAA1D,EAAA2D,GACAA,IAAA3D,EAAAe,WAEA6C,eAAA,SAAA5D,EAAA2D,GACAE,KAAAJ,KAAA1C,WAAAf,EACAoB,EAAAC,GACAsC,KAEAR,OAAA,iBAEA,CACAH,GAAA,eACA1D,KAAA4B,EAAA,eAEA+B,YAAA/B,EAAA,8KACAiB,KAAA,6BACAkB,OAAAX,EAAAY,QAAAQ,MACAC,OAAA,CACA3B,KAAA,UAEAoB,eAAA,EACAC,KAAA,CACAzC,gBAEA0C,iBAAA,SAAA1D,EAAA2D,GACAA,EAAA3D,EAAAgB,eAEA4C,eAAA,SAAA5D,EAAA2D,GACAE,KAAAJ,KAAAzC,eAAAhB,EACAoB,EAAAC,GACAsC,KAEAR,OAAA,iBAEA,CACAH,GAAA,aACA1D,KAAA4B,EAAA,YAEA+B,YAAA/B,EAAA,8IACAiB,KAAA,6BACAkB,OAAAX,EAAAY,QAAAQ,MACAC,OAAA,CACA3B,KAAA,YAEAoB,eAAA,EACAC,KAAA,CACAxC,cAEAyC,iBAAA,SAAA1D,EAAA2D,GACAA,EAAA3D,EAAAiB,aAEA2C,eAAA,SAAA5D,EAAA2D,GACAE,KAAAJ,KAAAxC,aAAAjB,EACAoB,EAAAC,GACAsC,KAEAR,OAAA,sDClJA,IAAAa,EAAcrF,EAAQ,GACtBsF,EAActF,EAAQ,GACtBuF,EAAA,IAAAF,EAeA,SAAAG,EAAAV,GACA,IAAAV,EAAA,IAAAkB,EAAAR,GAEAS,EAAAhD,EAAAgD,EAAAnB,kBACAmB,EAAAE,SAAArB,EAAAqB,SACAF,EAAAG,SAAAtB,EAAAsB,SAOAH,EAAAI,gBAAA,KAYAJ,EAAAvB,KAAA,SAAAoB,EAAAzB,GACA,IAAAiC,EAaAjC,KAAA,KACAyB,EAAAS,IAAAT,EAAAS,KAAA,OACAT,EAAAjB,KAAAiB,EAAAjB,MAAA,OAGAiB,EAAAzE,OAAA4E,EAAAI,iBAEAH,IACA,OAAA7B,GACAA,EAAA,SAGAiC,EAAA,IAAAE,gBAEAC,OAAA,WACA,IAAAC,EAAAC,EAEA,IACAA,EAAAC,KAAAC,MAAAP,EAAAQ,cACa,MAAAC,GACbL,EAAAK,EAGAL,EACAJ,EAAAU,QAAAN,IAEAR,EAAAS,GACA,OAAAtC,GACAA,EAAA,MAIA4B,EAAAgB,OAAA,SAEAhB,EAAAiB,KAAA,UAKAZ,EAAAa,UAAAb,EAAAU,QAAA,SAAAD,GACAb,IAEA,OAAA7B,GACAA,EAAA,MAIA4B,EAAAgB,OAAA,UAEAhB,EAAAiB,KAAA,QAAAH,IAIAT,EAAAc,KAAA,MAAAtB,EAAAjB,KAAA,IAAAiB,EAAAzE,KAAA,IAAAyE,EAAAS,KAAA,GACAD,EAAAe,KAAA,QAMAxG,EAAAD,QAAAqF,gCCzGA,SAAAF,IAwBAH,KAAAqB,OAAA,GAIAlB,EAAArD,UAAA,CAaA4E,YAAA,SAAAjG,EAAAgD,GAaAuB,KAAAqB,OAAA5F,GAAAuE,KAAAqB,OAAA5F,IAAA,GAEAuE,KAAAqB,OAAA5F,GAAAuC,KAAAS,IAcAkD,KAAA,SAAAlG,EAAAgD,GAEA,IAAAmD,EAAA5B,KAeAA,KAAAqB,OAAA5F,GAAAuE,KAAAqB,OAAA5F,IAAA,GAEAuE,KAAAqB,OAAA5F,GAAAuC,KAAA,SAAA6D,IACAD,EAAAE,eAAArG,EAAAoG,GACApD,EAAAsD,MAAAH,EAAAI,cAgBAC,aAAA,SAAAC,GACA,IAAAzG,EAcA,IAAAA,KAAAyG,EACAA,EAAAnF,eAAAtB,IACAuE,KAAA0B,YAAAjG,EAAAyG,EAAAzG,KAeAqG,eAAA,SAAArG,EAAAgD,GAiBAuB,KAAAqB,OAAA5F,KAEAuE,KAAAqB,OAAA5F,GAAAuE,KAAAqB,OAAA5F,GAAA0G,OAAA,SAAAC,GAA0F,OAAAA,IAAA3D,IAE1F,IAAAuB,KAAAqB,OAAA5F,GAAAwC,SAEA+B,KAAAqB,OAAA5F,QAAAiD,KAwDA4C,KAAA,SAAA7F,GACA,IACA4G,EADAC,EAAAtC,KAAAqB,OAAA5F,GAaA,GAAA6G,EAOA,IAAAD,EAAA,EAA4BA,EAAAC,EAAArE,OAAsBoE,IAQlDC,EAAAD,GAAAN,MAAA/B,KAAAuC,MAAAzF,UAAA0F,MAAAnH,KAAA2G,UAAA,MAQA7B,EAAArD,UAAA2F,YAAAtC,EAIAlF,EAAAD,QAAAmF,6DCrQA,SAAAC,QAAAF,QACA,IAAAN,KAAA8C,KAGAxC,eAAA,GACAN,KAAAM,OAAAN,MAAA,GACAA,KAAA,IAAAA,KAAA,QAGA8C,KAAAxC,OAAAwC,KASA1C,KAAAd,QAAA,SAAAyD,GACA,OAAA/C,KAAA,IAAA+C,OAYA3C,KAAAO,SAAA,SAAAqC,EAAAD,GACA,OAAA/C,KAAAgD,IAAAhD,KAAAgD,GAAAD,OAaA3C,KAAAQ,SAAA,SAAAmC,MAAAE,OAAA1G,OAIA,IAAAQ,EAAAmG,WAQA,OAAAlD,MAAA8C,MAAA9C,KAAA,IAAA+C,QACAG,WAAAC,KAAA,OAAA5G,MAAA,KAAiDuG,KAAAG,QAEjD,kBAAAC,aACAA,wBAIAlD,KAAA,IAAA+C,OAAAG,aAIA,IAAA3G,MAAAwG,MAAAE,QAMAzC,QAAAtD,UAAA2F,YAAArC,QAIAnF,OAAAD,QAAAoF","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Remote control settings plugin.\n */\n\n'use strict';\n\nvar gettextWrapper = require('mag-gettext'),\n    rcEnable, rcDeviceName, rcPassword, _;\n\n\n/**\n * Save settings.\n *\n * @param {Object} app - API container\n */\nfunction saveSettings ( app ) {\n    var errors   = [],\n        setItems = function () {\n            gSTB.ConfigNetRc(rcDeviceName, rcPassword);\n            gSTB.SetNetRcStatus(rcEnable);\n\n            app.storage.setItem('rcEnable', rcEnable);\n            app.storage.setItem('rcDeviceName', rcDeviceName);\n            app.storage.setItem('rcPassword', rcPassword);\n        };\n\n    if ( rcEnable ) {\n        if ( !rcDeviceName ) {\n            errors.push(_('Device name'));\n        }\n\n        if ( !rcPassword ) {\n            errors.push(_('Password'));\n        }\n\n        if ( errors.length ) {\n            core.notify({\n                title: _('The following fields have been completed incorrectly.') + ': ' + errors.join(', '),\n                icon: 'alert',\n                type: 'error'\n            });\n        } else {\n            setItems();\n        }\n    } else {\n        setItems();\n    }\n}\n\n\nmodule.exports = {\n    onInit: function ( app, callback ) {\n        rcEnable     = app.storage.getItem('rcEnable')     === undefined ? false : app.storage.getItem('rcEnable');\n        rcDeviceName = app.storage.getItem('rcDeviceName') === undefined ? ''    : app.storage.getItem('rcDeviceName');\n        rcPassword   = app.storage.getItem('rcPassword')   === undefined ? ''    : app.storage.getItem('rcPassword');\n\n        if ( rcEnable ) {\n            gSTB.ConfigNetRc(rcDeviceName, rcPassword);\n            gSTB.SetNetRcStatus(rcEnable);\n        }\n\n        callback();\n    },\n    onSettingsInit: function ( app, callback ) {\n        var api = app.api;\n\n        gettextWrapper.load({\n            name: core.environment.language,\n            path: app.path + 'lang'\n        }, function () {\n            _ = gettextWrapper.gettext;\n\n            callback(null, {\n                id: 'remoteControl',\n                name: _('Remote control'),\n                // eslint-disable-next-line\n                description: _('The Remote control function allows you to connect devices to the set-top box remotely (for example, a mobile phone with installed MAGic Remote App)'),\n                icon: 'theme-icon theme-icon-rc',\n                sections: [\n                    {\n                        id: 'remoteControl',\n                        name: _('Remote control'),\n                        // eslint-disable-next-line\n                        description: _('The Remote control function allows you to connect devices to the set-top box remotely (for example, a mobile phone with installed MAGic Remote App)'),\n                        icon: 'theme-icon theme-icon-rc',\n                        parent: 'system'\n                    }\n                ],\n                options: [\n                    {\n                        id: 'rcEnable',\n                        name: _('Enable remote control'),\n                        description: _('Enable remote control function'),\n                        icon: 'theme-icon theme-icon-rc',\n                        render: api.renders.toggle,\n                        saveImmediate: true,\n                        data: {\n                            rcEnable: rcEnable\n                        },\n                        prepareForRender: function ( value, prepareCallback ) {\n                            prepareCallback(!!value.rcEnable);\n                        },\n                        prepareForSave: function ( value, prepareCallback ) {\n                            this.data.rcEnable = rcEnable = value;\n                            saveSettings(app);\n                            prepareCallback();\n                        },\n                        parent: 'remoteControl'\n                    },\n                    {\n                        id: 'rcDeviceName',\n                        name: _('Device name'),\n                        // eslint-disable-next-line\n                        description: _('Enter the device name (for example, when you start the MAGic Remote application on your mobile device, you will need to select a device with the given name from the list)'),\n                        icon: 'theme-icon theme-icon-edit',\n                        render: api.renders.input,\n                        config: {\n                            type: 'qwerty'\n                        },\n                        saveImmediate: true,\n                        data: {\n                            rcDeviceName: rcDeviceName\n                        },\n                        prepareForRender: function ( value, prepareCallback ) {\n                            prepareCallback(value.rcDeviceName);\n                        },\n                        prepareForSave: function ( value, prepareCallback ) {\n                            this.data.rcDeviceName = rcDeviceName = value;\n                            saveSettings(app);\n                            prepareCallback();\n                        },\n                        parent: 'remoteControl'\n                    },\n                    {\n                        id: 'rcPassword',\n                        name: _('Password'),\n                        // eslint-disable-next-line\n                        description: _('Enter the password (for example, this password will be requested by the MAGic Remote application after selecting the device from the list)'),\n                        icon: 'theme-icon theme-icon-lock',\n                        render: api.renders.input,\n                        config: {\n                            type: 'password'\n                        },\n                        saveImmediate: true,\n                        data: {\n                            rcPassword: rcPassword\n                        },\n                        prepareForRender: function ( value, prepareCallback ) {\n                            prepareCallback(value.rcPassword);\n                        },\n                        prepareForSave: function ( value, prepareCallback ) {\n                            this.data.rcPassword = rcPassword = value;\n                            saveSettings(app);\n                            prepareCallback();\n                        },\n                        parent: 'remoteControl'\n                    }\n                ]\n            });\n        });\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    Gettext = require('cjs-gettext'),\n    loader  = new Emitter();\n\n\nif ( DEVELOP ) {\n    loader._ = loader.gettext = loader.pgettext = loader.ngettext = function () {\n        throw new Error(__filename + ': you cannot use this function before mag-gettext not yet loaded');\n    };\n}\n\n/**\n * Wrap the given data with gettext instance\n * and export methods to the global scope.\n *\n * @param {Object} [data] localization data\n */\nfunction prepare ( data ) {\n    var gettext = new Gettext(data);\n\n    loader._ = loader.gettext = gettext.gettext;\n    loader.pgettext = gettext.pgettext;\n    loader.ngettext = gettext.ngettext;\n}\n\n\n/**\n * Main application language\n */\nloader.defaultLanguage = 'en';\n\n\n/**\n * Simple gettext implementation.\n *\n * @param {Object} config options\n * @param {string} [config.path=lang] relative path to project root\n * @param {string} config.name language name\n * @param {string} [config.ext=json] language file extension\n * @param {function} callback hook on ready\n */\nloader.load = function ( config, callback ) {\n    var xhr;\n\n    if ( DEVELOP ) {\n        if ( !config.name || typeof config.name !== 'string' ) {\n            throw new Error(__filename + ': config.name must be a nonempty string');\n        }\n        if ( callback && typeof callback !== 'function' ) {\n            throw new Error(__filename + ': wrong callback type');\n        }\n    }\n\n    // defaults\n\n    callback = callback || null;\n    config.ext  = config.ext  || 'json';\n    config.path = config.path || 'lang';\n\n    // is it necessary to request a localization file?\n    if ( config.name === loader.defaultLanguage ) {\n        // no\n        prepare();\n        if ( callback !== null ) {\n            callback(null);\n        }\n    } else {\n        xhr = new XMLHttpRequest();\n\n        xhr.onload = function () {\n            var jsonParseError, json;\n\n            try {\n                json = JSON.parse(xhr.responseText);\n            } catch ( error ) {\n                jsonParseError = error;\n            }\n\n            if ( jsonParseError ) {\n                xhr.onerror(jsonParseError);\n            } else {\n                prepare(json);\n                if ( callback !== null ) {\n                    callback(null);\n                }\n\n                // there are some listeners\n                if ( loader.events['load'] ) {\n                    // notify listeners\n                    loader.emit('load');\n                }\n            }\n        };\n\n        xhr.ontimeout = xhr.onerror = function ( error ) {\n            prepare();\n\n            if ( callback !== null ) {\n                callback(null);\n            }\n\n            // there are some listeners\n            if ( loader.events['error'] ) {\n                // notify listeners\n                loader.emit('error', error);\n            }\n        };\n\n        xhr.open('GET', config.path + '/' + config.name + '.' + config.ext, true);\n        xhr.send(null);\n    }\n};\n\n\n// public\nmodule.exports = loader;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Base Events Emitter implementation.\n *\n * @see http://nodejs.org/api/events.html\n * @constructor\n *\n * @example\n * var emitter = new Emitter();\n */\nfunction Emitter () {\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // if ( DEVELOP ) {\n    //     if ( typeof this !== 'object' ) { throw new Error(__filename + ': must be constructed via new'); }\n    // }\n\n    /**\n     * Inner hash table for event names and linked callbacks.\n     * Manual editing should be avoided.\n     *\n     * @member {Object.<string, function[]>}\n     *\n     * @example\n     * {\n     *     click: [\n     *         function click1 () { ... },\n     *         function click2 () { ... }\n     *     ],\n     *     keydown: [\n     *         function () { ... }\n     *     ]\n     * }\n     **/\n    this.events = {};\n}\n\n\nEmitter.prototype = {\n    /**\n     * Bind an event to the given callback function.\n     * The same callback function can be added multiple times for the same event name.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.addListener('click', function ( data ) { ... });\n     * // one more click handler\n     * emitter.addListener('click', function ( data ) { ... });\n     */\n    addListener: function ( name, callback ) {\n        console.assert(arguments.length === 2, 'wrong arguments number');\n        console.assert(typeof name === 'string', 'wrong name type');\n        console.assert(name.length > 0, 'empty name');\n        console.assert(typeof callback === 'function', 'callback should be a function');\n\n        // if ( DEVELOP ) {\n        //     if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        //     if ( typeof name !== 'string' || name.length === 0 ) { throw new Error(__filename + ': wrong or empty name'); }\n        //     if ( typeof callback !== 'function' ) { throw new Error(__filename + ': wrong callback type'); }\n        // }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(callback);\n    },\n\n\n    /**\n     * Add a one time listener for the event.\n     * This listener is invoked only the next time the event is fired, after which it is removed.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.once('click', function ( data ) { ... });\n     */\n    once: function ( name, callback ) {\n        // current execution context\n        var self = this;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n        }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(function onceWrapper () {\n            self.removeListener(name, onceWrapper);\n            callback.apply(self, arguments);\n        });\n    },\n\n\n    /**\n     * Apply multiple listeners at once.\n     *\n     * @param {Object} callbacks event names with callbacks\n     *\n     * @example\n     * emitter.addListeners({\n     *     click: function ( data ) {},\n     *     close: function ( data ) {}\n     * });\n     */\n    addListeners: function ( callbacks ) {\n        var name;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof callbacks !== 'object' ) {\n                throw new Error(__filename + ': wrong callbacks type');\n            }\n            if ( Object.keys(callbacks).length === 0 ) {\n                throw new Error(__filename + ': no callbacks given');\n            }\n        }\n\n        for ( name in callbacks ) {\n            if ( callbacks.hasOwnProperty(name) ) {\n                this.addListener(name, callbacks[name]);\n            }\n        }\n    },\n\n\n    /**\n     * Remove all instances of the given callback.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to remove\n     *\n     * @example\n     * emitter.removeListener('click', func1);\n     */\n    removeListener: function ( name, callback ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n            if ( this.events[name] && !Array.isArray(this.events[name]) ) {\n                throw new Error(__filename + ': corrupted inner data');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( this.events[name] ) {\n            // rework the callback list to exclude the given one\n            this.events[name] = this.events[name].filter(function callbacksFilter ( fn ) { return fn !== callback; });\n            // event has no more callbacks so clean it\n            if ( this.events[name].length === 0 ) {\n                // as if there were no listeners at all\n                this.events[name] = undefined;\n            }\n        }\n    },\n\n\n    /**\n     * Remove all callbacks for the given event name.\n     * Without event name clears all events.\n     *\n     * @param {string} [name] event identifier\n     *\n     * @example\n     * emitter.removeAllListeners('click');\n     * emitter.removeAllListeners();\n     *\n     * @deprecated\n     */\n    /*removeAllListeners: function ( name ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 0 && (typeof name !== 'string' || name.length === 0) ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // check input\n        if ( arguments.length === 0 ) {\n            // no arguments so remove everything\n            this.events = {};\n        } else if ( name ) {\n            if ( DEVELOP ) {\n                if ( this.events[name] ) { throw new Error(__filename + ': event is not removed'); }\n            }\n\n            // only name is given so remove all callbacks for the given event\n            // but object structure modification should be avoided\n            this.events[name] = undefined;\n        }\n    },*/\n\n\n    /**\n     * Execute each of the listeners in the given order with the supplied arguments.\n     *\n     * @param {string} name event identifier\n     *\n     * @example\n     * emitter.emit('init');\n     * emitter.emit('click', {src: panel1, dst: panel2});\n     * emitter.emit('load', error, data);\n     *\n     * // it's a good idea to emit event only when there are some listeners\n     * if ( this.events['click'] ) {\n     *     this.emit('click', {event: event});\n     * }\n     */\n    emit: function ( name ) {\n        var event = this.events[name],\n            index;\n\n        if ( DEVELOP ) {\n            if ( arguments.length < 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( event ) {\n            if ( DEVELOP ) {\n                if ( !Array.isArray(event) ) {\n                    throw new Error(__filename + ': wrong event type');\n                }\n            }\n\n            for ( index = 0; index < event.length; index++ ) {\n                if ( DEVELOP ) {\n                    if ( typeof event[index] !== 'function' ) {\n                        throw new Error(__filename + ': wrong event callback type');\n                    }\n                }\n\n                // invoke the callback with parameters\n                event[index].apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n    }\n};\n\n\n// correct constructor name\nEmitter.prototype.constructor = Emitter;\n\n\n// public\nmodule.exports = Emitter;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Translations handler.\n *\n * @constructor\n *\n * @param {Object} config init parameters\n */\nfunction Gettext ( config ) {\n    var data, meta;\n\n    // sanitize\n    config   = config || {};\n    data     = config.data || {};\n    data[''] = data[''] || {};\n\n    // shortcut\n    meta = config.meta;\n\n    /**\n     * Display the native language translation of a textual message.\n     *\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.gettext = function ( msgId ) {\n        return data[''][msgId] || msgId;\n    };\n\n\n    /**\n     * The \"p\" in \"pgettext\" stands for \"particular\": fetches a particular translation of the textual message.\n     *\n     * @param {string} context message context\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.pgettext = function ( context, msgId ) {\n        return data[context] && data[context][msgId] || msgId;\n    };\n\n\n    /**\n     * Display the native language translation of a textual message whose grammatical form depends on a number.\n     *\n     * @param {string} msgId textual message in a singular form\n     * @param {string} plural textual message in a plural form\n     * @param {number} value message number\n     *\n     * @return {string} translated text\n     */\n    this.ngettext = function ( msgId, plural, value ) {\n        /* eslint no-unused-vars: 0 */\n        /* eslint no-eval: 0 */\n        /* eslint id-length: 0 */\n        var n, evalResult;\n\n        if ( DEVELOP ) {\n            if ( Number(value) !== value ) {\n                throw new Error(__filename + ': value must be a number');\n            }\n        }\n\n        if ( data && meta && data[''][msgId] ) {\n            evalResult = eval('n = ' + value + '; ' + meta.plural);\n\n            if ( typeof evalResult === 'boolean' ) {\n                evalResult = +evalResult;\n            }\n\n            // translation\n            return data[''][msgId][evalResult];\n        }\n\n        // english\n        return value === 1 ? msgId : plural;\n    };\n}\n\n\n// correct constructor name\nGettext.prototype.constructor = Gettext;\n\n\n// public\nmodule.exports = Gettext;\n"],"sourceRoot":""}