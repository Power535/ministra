{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/request.js","webpack:///./src/js/track.js","webpack:///./src/js/prepareUrl.js","webpack:///./src/js/main.js","webpack:///./node_modules/mag-gettext/index.js","webpack:///./node_modules/cjs-emitter/index.js","webpack:///./node_modules/cjs-gettext/index.js","webpack:///./src/js/provider.js","webpack:///./src/js/list.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","url","config","linkName","links","abort","core","backend","request","method","version","body","onload","error","response","onerror","ontimeout","Track","prop","this","constructor","getUrl","callback","id","data","resource","params","push","join","gettextWrapper","Provider","provider","search","cfg","onAppInit","onContentBoardInit","done","load","environment","language","path","providerConfig","ready","gettext","api","screen","height","getAlbums","limit","sortby","img","icon","length","map","album","genres","genre","cover","normal","host","active","layout","layouts","static","geometry","square","artist","image","description","meta","year","onClick","intent","action","mime","Emitter","Gettext","loader","prepare","_","pgettext","ngettext","defaultLanguage","xhr","ext","XMLHttpRequest","jsonParseError","json","JSON","parse","responseText","events","emit","open","send","addListener","once","self","onceWrapper","removeListener","apply","arguments","addListeners","callbacks","filter","fn","undefined","index","event","Array","slice","msgId","context","plural","evalResult","eval","List","prepareUrl","requestLinks","getTracks","paging","total","getPlaylists","createPlaylist","stringify","getAllPlaylists","result","offset","concat","getArtists","getYears","getGenres","edit","remove","addTrack","track","addAlbum","removeTrack"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","'use strict';\n\nmodule.exports = function ( url, config, linkName, links  ) {\n    links = links || {};\n    linkName = linkName || 'local';\n\n    if ( links[linkName] ) {\n        links[linkName].abort();\n    }\n\n    links[linkName] = core.backend.request(\n        url,\n        {\n            method: config.method,\n            version: 3,\n            body: config.body,\n            onload: function ( error, response ) {\n                if ( response.error ) {\n                    error = true;\n                }\n\n                config.onload(error, response);\n                links[linkName] = null;\n            },\n            onerror: function ( error ) {\n                debug.log(error);\n                if ( config.onerror ) {\n                    config.onerror(true);\n                }\n                links[linkName] = null;\n            },\n            ontimeout: function () {\n                debug.log('ontimeout');\n                if ( config.onerror ) {\n                    config.onerror(true);\n                }\n                links[linkName] = null;\n            }\n        }\n    );\n};\n","'use strict';\n\nvar request = require('./request');\n\n\nfunction Track ( config ) {\n    var prop;\n\n    config = config || {};\n\n    for ( prop in config ) {\n        this[prop] = config[prop];\n    }\n}\n\n\nTrack.prototype = {};\nTrack.prototype.constructor = Track;\n\n\n/**\n * gel link to play.\n *\n * @param {Function} callback - result handler\n */\nTrack.prototype.getUrl = function ( callback ) {\n    request(\n        'audio-tracks/' + this.id + '/link',\n        {\n            method: 'GET',\n            onload: function ( error, response ) {\n                callback(error, error ? null : response.data.url);\n            },\n            onerror: callback\n        }\n    );\n};\n\n\nmodule.exports = Track;\n","'use strict';\n\nmodule.exports = function ( resource, config ) {\n    var params = [],\n        key;\n\n    config = config || {};\n\n    for ( key in config ) {\n        if ( key && config[key] ) {\n            params.push(key + '=' + config[key]);\n        }\n    }\n\n    return resource + '?' + params.join('&');\n};\n","/**\n *  Video plugin or system module implementation.\n *  Same interface with audio provider from embedded magcore.\n */\n\n'use strict';\n\nvar gettextWrapper = require('mag-gettext'),\n    Provider = require('./provider'),\n\n    provider = {};\n\nfunction getLauncherProvider ( providerConfig, ready ) {\n    var gettext = gettextWrapper.gettext,\n        query = {\n            limit: 10,\n            sortby: 'added'\n        },\n        api = providerConfig.api,\n        path = providerConfig.path + 'img/' + screen.height + '/';\n\n    Provider.prototype.getAlbums(query, function ( error, data ) {\n        var config, img, icon;\n\n        if ( !error && data.length ) {\n            config = {\n                provider: provider,\n                data: data.map(function ( album ) {\n                    var genres = album.genres.map(function ( genre ) {\n                        return genre;\n                    });\n\n                    if ( album.cover ) {\n                        img = {\n                            normal: core.backend.host + album.cover,\n                            active: core.backend.host + album.cover\n                        };\n                    } else {\n                        icon = {\n                            normal: path + 'audio.png',\n                            active: path + 'audio-focus.png'\n                        };\n                    }\n\n                    return {\n                        id: album.id,\n                        layout: api.layouts.static,\n                        geometry: api.geometry.square,\n                        data: {\n                            name: album.artist.name,\n                            icon: icon,\n                            image: img,\n                            description: album.name,\n                            meta: [album.year.name, genres.join(', ')],\n                            album: album\n                        },\n                        onClick: function () {\n                            core.intent({\n                                action: 'audioClub',\n                                mime: 'info',\n                                data: this.data.album\n                            });\n                        }\n                    };\n                })\n            };\n\n            config.data.push(\n                {\n                    layout: api.layouts.static,\n                    geometry: api.geometry.square,\n                    data: {\n                        name: gettext('See more'),\n                        icon: {\n                            normal: path + 'see-more.png',\n                            active: path + 'see-more-focus.png'\n                        }\n                    },\n                    onClick: function () {\n                        core.intent({\n                            action: 'audioClub',\n                            mime: ''\n                        });\n                    }\n                }\n            );\n\n            ready(false, config);\n        } else {\n            ready(true, {\n                provider: provider,\n                data: []\n            });\n        }\n    });\n}\n\nprovider.search = function ( cfg, callback ) {\n    callback(true);\n};\n\n\nmodule.exports = {\n    onAppInit: function ( config, callback ) {\n        callback(null, new Provider());\n    },\n    onContentBoardInit: function ( config, done ) {\n        gettextWrapper.load({\n            name: core.environment.language,\n            path: config.path + 'lang'\n        }, function () {\n            getLauncherProvider(config, done);\n        });\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    Gettext = require('cjs-gettext'),\n    loader  = new Emitter();\n\n\nif ( DEVELOP ) {\n    loader._ = loader.gettext = loader.pgettext = loader.ngettext = function () {\n        throw new Error(__filename + ': you cannot use this function before mag-gettext not yet loaded');\n    };\n}\n\n/**\n * Wrap the given data with gettext instance\n * and export methods to the global scope.\n *\n * @param {Object} [data] localization data\n */\nfunction prepare ( data ) {\n    var gettext = new Gettext(data);\n\n    loader._ = loader.gettext = gettext.gettext;\n    loader.pgettext = gettext.pgettext;\n    loader.ngettext = gettext.ngettext;\n}\n\n\n/**\n * Main application language\n */\nloader.defaultLanguage = 'en';\n\n\n/**\n * Simple gettext implementation.\n *\n * @param {Object} config options\n * @param {string} [config.path=lang] relative path to project root\n * @param {string} config.name language name\n * @param {string} [config.ext=json] language file extension\n * @param {function} callback hook on ready\n */\nloader.load = function ( config, callback ) {\n    var xhr;\n\n    if ( DEVELOP ) {\n        if ( !config.name || typeof config.name !== 'string' ) {\n            throw new Error(__filename + ': config.name must be a nonempty string');\n        }\n        if ( callback && typeof callback !== 'function' ) {\n            throw new Error(__filename + ': wrong callback type');\n        }\n    }\n\n    // defaults\n\n    callback = callback || null;\n    config.ext  = config.ext  || 'json';\n    config.path = config.path || 'lang';\n\n    // is it necessary to request a localization file?\n    if ( config.name === loader.defaultLanguage ) {\n        // no\n        prepare();\n        if ( callback !== null ) {\n            callback(null);\n        }\n    } else {\n        xhr = new XMLHttpRequest();\n\n        xhr.onload = function () {\n            var jsonParseError, json;\n\n            try {\n                json = JSON.parse(xhr.responseText);\n            } catch ( error ) {\n                jsonParseError = error;\n            }\n\n            if ( jsonParseError ) {\n                xhr.onerror(jsonParseError);\n            } else {\n                prepare(json);\n                if ( callback !== null ) {\n                    callback(null);\n                }\n\n                // there are some listeners\n                if ( loader.events['load'] ) {\n                    // notify listeners\n                    loader.emit('load');\n                }\n            }\n        };\n\n        xhr.ontimeout = xhr.onerror = function ( error ) {\n            prepare();\n\n            if ( callback !== null ) {\n                callback(null);\n            }\n\n            // there are some listeners\n            if ( loader.events['error'] ) {\n                // notify listeners\n                loader.emit('error', error);\n            }\n        };\n\n        xhr.open('GET', config.path + '/' + config.name + '.' + config.ext, true);\n        xhr.send(null);\n    }\n};\n\n\n// public\nmodule.exports = loader;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Base Events Emitter implementation.\n *\n * @see http://nodejs.org/api/events.html\n * @constructor\n *\n * @example\n * var emitter = new Emitter();\n */\nfunction Emitter () {\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // if ( DEVELOP ) {\n    //     if ( typeof this !== 'object' ) { throw new Error(__filename + ': must be constructed via new'); }\n    // }\n\n    /**\n     * Inner hash table for event names and linked callbacks.\n     * Manual editing should be avoided.\n     *\n     * @member {Object.<string, function[]>}\n     *\n     * @example\n     * {\n     *     click: [\n     *         function click1 () { ... },\n     *         function click2 () { ... }\n     *     ],\n     *     keydown: [\n     *         function () { ... }\n     *     ]\n     * }\n     **/\n    this.events = {};\n}\n\n\nEmitter.prototype = {\n    /**\n     * Bind an event to the given callback function.\n     * The same callback function can be added multiple times for the same event name.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.addListener('click', function ( data ) { ... });\n     * // one more click handler\n     * emitter.addListener('click', function ( data ) { ... });\n     */\n    addListener: function ( name, callback ) {\n        console.assert(arguments.length === 2, 'wrong arguments number');\n        console.assert(typeof name === 'string', 'wrong name type');\n        console.assert(name.length > 0, 'empty name');\n        console.assert(typeof callback === 'function', 'callback should be a function');\n\n        // if ( DEVELOP ) {\n        //     if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        //     if ( typeof name !== 'string' || name.length === 0 ) { throw new Error(__filename + ': wrong or empty name'); }\n        //     if ( typeof callback !== 'function' ) { throw new Error(__filename + ': wrong callback type'); }\n        // }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(callback);\n    },\n\n\n    /**\n     * Add a one time listener for the event.\n     * This listener is invoked only the next time the event is fired, after which it is removed.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.once('click', function ( data ) { ... });\n     */\n    once: function ( name, callback ) {\n        // current execution context\n        var self = this;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n        }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(function onceWrapper () {\n            self.removeListener(name, onceWrapper);\n            callback.apply(self, arguments);\n        });\n    },\n\n\n    /**\n     * Apply multiple listeners at once.\n     *\n     * @param {Object} callbacks event names with callbacks\n     *\n     * @example\n     * emitter.addListeners({\n     *     click: function ( data ) {},\n     *     close: function ( data ) {}\n     * });\n     */\n    addListeners: function ( callbacks ) {\n        var name;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof callbacks !== 'object' ) {\n                throw new Error(__filename + ': wrong callbacks type');\n            }\n            if ( Object.keys(callbacks).length === 0 ) {\n                throw new Error(__filename + ': no callbacks given');\n            }\n        }\n\n        for ( name in callbacks ) {\n            if ( callbacks.hasOwnProperty(name) ) {\n                this.addListener(name, callbacks[name]);\n            }\n        }\n    },\n\n\n    /**\n     * Remove all instances of the given callback.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to remove\n     *\n     * @example\n     * emitter.removeListener('click', func1);\n     */\n    removeListener: function ( name, callback ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n            if ( this.events[name] && !Array.isArray(this.events[name]) ) {\n                throw new Error(__filename + ': corrupted inner data');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( this.events[name] ) {\n            // rework the callback list to exclude the given one\n            this.events[name] = this.events[name].filter(function callbacksFilter ( fn ) { return fn !== callback; });\n            // event has no more callbacks so clean it\n            if ( this.events[name].length === 0 ) {\n                // as if there were no listeners at all\n                this.events[name] = undefined;\n            }\n        }\n    },\n\n\n    /**\n     * Remove all callbacks for the given event name.\n     * Without event name clears all events.\n     *\n     * @param {string} [name] event identifier\n     *\n     * @example\n     * emitter.removeAllListeners('click');\n     * emitter.removeAllListeners();\n     *\n     * @deprecated\n     */\n    /*removeAllListeners: function ( name ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 0 && (typeof name !== 'string' || name.length === 0) ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // check input\n        if ( arguments.length === 0 ) {\n            // no arguments so remove everything\n            this.events = {};\n        } else if ( name ) {\n            if ( DEVELOP ) {\n                if ( this.events[name] ) { throw new Error(__filename + ': event is not removed'); }\n            }\n\n            // only name is given so remove all callbacks for the given event\n            // but object structure modification should be avoided\n            this.events[name] = undefined;\n        }\n    },*/\n\n\n    /**\n     * Execute each of the listeners in the given order with the supplied arguments.\n     *\n     * @param {string} name event identifier\n     *\n     * @example\n     * emitter.emit('init');\n     * emitter.emit('click', {src: panel1, dst: panel2});\n     * emitter.emit('load', error, data);\n     *\n     * // it's a good idea to emit event only when there are some listeners\n     * if ( this.events['click'] ) {\n     *     this.emit('click', {event: event});\n     * }\n     */\n    emit: function ( name ) {\n        var event = this.events[name],\n            index;\n\n        if ( DEVELOP ) {\n            if ( arguments.length < 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( event ) {\n            if ( DEVELOP ) {\n                if ( !Array.isArray(event) ) {\n                    throw new Error(__filename + ': wrong event type');\n                }\n            }\n\n            for ( index = 0; index < event.length; index++ ) {\n                if ( DEVELOP ) {\n                    if ( typeof event[index] !== 'function' ) {\n                        throw new Error(__filename + ': wrong event callback type');\n                    }\n                }\n\n                // invoke the callback with parameters\n                event[index].apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n    }\n};\n\n\n// correct constructor name\nEmitter.prototype.constructor = Emitter;\n\n\n// public\nmodule.exports = Emitter;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Translations handler.\n *\n * @constructor\n *\n * @param {Object} config init parameters\n */\nfunction Gettext ( config ) {\n    var data, meta;\n\n    // sanitize\n    config   = config || {};\n    data     = config.data || {};\n    data[''] = data[''] || {};\n\n    // shortcut\n    meta = config.meta;\n\n    /**\n     * Display the native language translation of a textual message.\n     *\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.gettext = function ( msgId ) {\n        return data[''][msgId] || msgId;\n    };\n\n\n    /**\n     * The \"p\" in \"pgettext\" stands for \"particular\": fetches a particular translation of the textual message.\n     *\n     * @param {string} context message context\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.pgettext = function ( context, msgId ) {\n        return data[context] && data[context][msgId] || msgId;\n    };\n\n\n    /**\n     * Display the native language translation of a textual message whose grammatical form depends on a number.\n     *\n     * @param {string} msgId textual message in a singular form\n     * @param {string} plural textual message in a plural form\n     * @param {number} value message number\n     *\n     * @return {string} translated text\n     */\n    this.ngettext = function ( msgId, plural, value ) {\n        /* eslint no-unused-vars: 0 */\n        /* eslint no-eval: 0 */\n        /* eslint id-length: 0 */\n        var n, evalResult;\n\n        if ( DEVELOP ) {\n            if ( Number(value) !== value ) {\n                throw new Error(__filename + ': value must be a number');\n            }\n        }\n\n        if ( data && meta && data[''][msgId] ) {\n            evalResult = eval('n = ' + value + '; ' + meta.plural);\n\n            if ( typeof evalResult === 'boolean' ) {\n                evalResult = +evalResult;\n            }\n\n            // translation\n            return data[''][msgId][evalResult];\n        }\n\n        // english\n        return value === 1 ? msgId : plural;\n    };\n}\n\n\n// correct constructor name\nGettext.prototype.constructor = Gettext;\n\n\n// public\nmodule.exports = Gettext;\n","/**\n *  Video plugin or system module implementation.\n *  Same interface with audio provider from embedded magcore.\n */\n\n'use strict';\n\nvar request = require('./request'),\n    Track = require('./track'),\n    List = require('./list'),\n    prepareUrl = require('./prepareUrl');\n\n\nfunction Provider () {\n    this.requestLinks = {};\n}\n\n\nProvider.prototype = {};\nProvider.prototype.constructor = Provider;\n\n\n/**\n * Get tracks list.\n *\n * @param {Object} config - filters configuration\n * @param {Function} callback - result handler\n */\nProvider.prototype.getTracks = function ( config, callback ) {\n    request(\n        prepareUrl('audio-tracks', config),\n        {\n            method: 'GET',\n            onload: function ( error, response ) {\n                var data = [],\n                    index;\n\n                if ( !error ) {\n                    for ( index = 0; index < response.data.length; index++ ) {\n                        data[index] = new Track(response.data[index]);\n                    }\n                }\n\n                callback(error, data, error ? 0 : response.paging.total);\n            },\n            onerror: callback\n        },\n        'getTracks',\n        this.requestLinks\n    );\n};\n\n\n/**\n * Get playlists list.\n *\n * @param {Object} config - request config\n * @param {Function} callback - result handler\n */\nProvider.prototype.getPlaylists = function ( config, callback ) {\n    request(\n        prepareUrl('audio-playlists', config),\n        {\n            method: 'GET',\n            onload: function ( error, response ) {\n                var data = [],\n                    index;\n\n                if ( !error ) {\n                    for ( index = 0; index < response.data.length; index++ ) {\n                        data[index] = new List(response.data[index]);\n                    }\n                }\n\n                callback(error, data, error ? null : response.paging.total);\n            },\n            onerror: callback\n        },\n        'getPlaylists',\n        this.requestLinks\n    );\n};\n\n\n/**\n * Create playlist.\n *\n * @param {Object} config - request config\n * @param {Function} callback - result handler\n */\nProvider.prototype.createPlaylist = function ( config, callback ) {\n    request(\n        'audio-playlists',\n        {\n            method: 'POST',\n            body: JSON.stringify(config),\n            onload: function ( error, response ) {\n                if ( callback ) {\n                    callback(error, error ? {} : new List(response.data));\n                }\n            },\n            onerror: callback\n        }\n    );\n};\n\n\n/**\n * Get all playlists list.\n *\n * @param {Function} callback - result handler\n * @param {Array} result - previous steps result\n */\nProvider.prototype.getAllPlaylists = function ( callback, result ) {\n    var self = this,\n        config;\n\n    result = result || [];\n\n    config = {\n        limit: 200,\n        offset: result.length\n    };\n\n    request(\n        prepareUrl('audio-playlists', config),\n        {\n            method: 'GET',\n            onload: function ( error, response ) {\n                var data = [],\n                    index;\n\n                if ( !error ) {\n                    for ( index = 0; index < response.data.length; index++ ) {\n                        data[index] = new List(response.data[index]);\n                    }\n\n                    result = result.concat(data);\n                    if ( response.paging.total > result.length ) {\n                        self.getAllPlaylists(callback, result);\n\n                        return;\n                    }\n                }\n\n                callback(error, result);\n\n            },\n            onerror: callback\n        },\n        'getPlaylists',\n        this.requestLinks\n    );\n};\n\n\n/**\n * Get albums list.\n *\n * @param {Object} config - request config\n * @param {Function} callback - result handler\n */\nProvider.prototype.getAlbums = function ( config, callback ) {\n    request(\n        prepareUrl('audio-albums', config),\n        {\n            method: 'GET',\n            onload: function ( error, response ) {\n                callback(error, error ? [] : response.data, error ? null : response.paging.total);\n            },\n            onerror: callback\n        },\n        'getAlbums',\n        this.requestLinks\n    );\n};\n\n\n/**\n * Get artists list.\n *\n * @param {Object} config - request config\n * @param {Function} callback - result handler\n */\nProvider.prototype.getArtists = function ( config, callback ) {\n    request(\n        prepareUrl('audio-artists', config),\n        {\n            method: 'GET',\n            onload: function ( error, response ) {\n                callback(error, error ? [] : response.data, error ? null : response.paging.total);\n            },\n            onerror: callback\n        },\n        'getArtists',\n        this.requestLinks\n    );\n};\n\n\n/**\n * Get years list.\n *\n * @param {Function} callback - result handler\n */\nProvider.prototype.getYears = function ( callback ) {\n    request(\n        'audio-years',\n        {\n            method: 'GET',\n            onload: function ( error, response ) {\n                if ( response.error ) {\n                    error = true;\n                }\n                if ( callback ) {\n                    callback(error, response);\n                }\n            },\n            onerror: callback\n        }\n    );\n};\n\n\n/**\n * Get genres list.\n *\n * @param {Function} callback - result handler\n */\nProvider.prototype.getGenres = function ( callback ) {\n    request(\n        'audio-genres',\n        {\n            method: 'GET',\n            onload: function ( error, response ) {\n                if ( response.error ) {\n                    error = true;\n                }\n                if ( callback ) {\n                    callback(error, response);\n                }\n            },\n            onerror: callback\n        }\n    );\n};\n\n\nmodule.exports = Provider;\n","'use strict';\n\nvar request = require('./request'),\n    Track = require('./track'),\n    prepareUrl = require('./prepareUrl');\n\n\nfunction List ( config ) {\n    var prop;\n\n    config = config || {};\n\n    for ( prop in config ) {\n        this[prop] = config[prop];\n    }\n\n    this.requestLinks = {};\n}\n\n\nList.prototype = {};\nList.prototype.constructor = List;\n\n\n/**\n * Get tracks list in playlist.\n *\n * @param {Object} config - request\n * @param {Function} callback - result handler\n */\nList.prototype.getTracks = function ( config, callback ) {\n    request(\n        prepareUrl('audio-playlists/' + this.id + '/audio-tracks', config),\n        {\n            method: 'GET',\n            onload: function ( error, response ) {\n                var data = [],\n                    index;\n\n                if ( !error ) {\n                    for ( index = 0; index < response.data.length; index++ ) {\n                        data[index] = new Track(response.data[index]);\n                    }\n                }\n                callback(error, data, error ? 0 : response.paging.total);\n            },\n            onerror: callback\n        },\n        'getTracks',\n        this.requestLinks\n    );\n};\n\n\n/**\n * Edit playlist.\n *\n * @param {string} name - new name for list\n * @param {Function} callback - result handler\n */\nList.prototype.edit = function ( name, callback ) {\n    request(\n        'audio-playlists/' + this.id,\n        {\n            method: 'PUT',\n            body: JSON.stringify({name: name}),\n            onload: function ( error, response ) {\n                if ( callback ) {\n                    callback(error, response.data);\n                }\n            },\n            onerror: callback\n        }\n    );\n};\n\n\n/**\n * Get link to play.\n *\n * @param {Function} callback - result handler\n */\nList.prototype.remove = function ( callback ) {\n    request(\n        'audio-playlists/' + this.id,\n        {\n            method: 'DELETE',\n            onload: function ( error, response ) {\n                if ( callback ) {\n                    callback(error, response.data);\n                }\n            },\n            onerror: callback\n        }\n    );\n};\n\n\n/**\n * Add track to playlist.\n *\n * @param {number} track - track id\n * @param {Function} callback - result handler\n */\nList.prototype.addTrack = function ( track, callback ) {\n    request(\n        'audio-playlists/' + this.id + '/audio-tracks',\n        {\n            method: 'POST',\n            body: JSON.stringify({id: track}),\n            onload: function ( error, response ) {\n                if ( callback ) {\n                    callback(error, response.data);\n                }\n            },\n            onerror: callback\n        }\n    );\n};\n\n\n/**\n * Add album to playlist.\n *\n * @param {number} album - album id\n * @param {Function} callback - result handler\n */\nList.prototype.addAlbum = function ( album, callback ) {\n    request(\n        'audio-playlists/' + this.id + '/audio-albums',\n        {\n            method: 'POST',\n            body: JSON.stringify({id: album}),\n            onload: function ( error, response ) {\n                if ( callback ) {\n                    callback(error, response.data);\n                }\n            },\n            onerror: callback\n        }\n    );\n};\n\n\n/**\n * Remove track from playlist.\n *\n * @param {number} track - track id\n * @param {Function} callback - result handler\n */\nList.prototype.removeTrack = function ( track, callback ) {\n    request(\n        'audio-playlists/' + this.id + '/audio-tracks/' + track,\n        {\n            method: 'DELETE',\n            onload: function ( error, response ) {\n                if ( callback ) {\n                    callback(error, response.data);\n                }\n            },\n            onerror: callback\n        }\n    );\n};\n\n\nmodule.exports = List;\n"],"sourceRoot":""}