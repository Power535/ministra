{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/cjs-emitter/index.js","webpack:///./src/js/main.js","webpack:///./node_modules/mag-gettext/index.js","webpack:///./node_modules/cjs-gettext/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Emitter","this","events","addListener","callback","push","once","self","onceWrapper","removeListener","apply","arguments","addListeners","callbacks","filter","fn","length","undefined","emit","index","event","Array","slice","constructor","test","gettext","gettextWrapper","tools","ids","base","addZero","time","Test","destroy","buildSettingsItem","config","id","parent","type","description","icon","title","focusable","warningText","click","$node","classList","add","data","init","size","start","prepareForRender","items","render","api","renders","popupLayoutList","ind","domains","activeDownloads","duration","options","startTime","Date","endTime","allDownloads","JSON","parse","stbDownloadManager","GetQueueInfo","window","MODE_STALKER","core","backend","settings","mtr_hostnames","mtr_report_cycles","setSeconds","getSeconds","state","StopJob","getHours","getMinutes","setTimeout","text","count","results","result","gSTB","RDir","split","shift","pop","forEach","item","trim","replace","Math","round","StartJob","envs","GetEnv","stringify","varList","traceroute","error","errCode","errMsg","request","headers","Content-Type","method","onload","loadedData","body","sendStatistic","onInit","onAppInit","onSettingsInit","load","environment","language","path","content","Gettext","loader","prepare","_","pgettext","ngettext","defaultLanguage","xhr","ext","XMLHttpRequest","jsonParseError","json","responseText","onerror","ontimeout","open","send","meta","msgId","context","plural","evalResult","eval"],"mappings":"2BACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QA0DA,OArDAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,YAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,kCC/DA,SAAAC,IAwBAC,KAAAC,OAAA,GAIAF,EAAAJ,UAAA,CAaAO,YAAA,SAAA5B,EAAA6B,GAaAH,KAAAC,OAAA3B,GAAA0B,KAAAC,OAAA3B,IAAA,GAEA0B,KAAAC,OAAA3B,GAAA8B,KAAAD,IAcAE,KAAA,SAAA/B,EAAA6B,GAEA,IAAAG,EAAAN,KAeAA,KAAAC,OAAA3B,GAAA0B,KAAAC,OAAA3B,IAAA,GAEA0B,KAAAC,OAAA3B,GAAA8B,KAAA,SAAAG,IACAD,EAAAE,eAAAlC,EAAAiC,GACAJ,EAAAM,MAAAH,EAAAI,cAgBAC,aAAA,SAAAC,GACA,IAAAtC,EAcA,IAAAA,KAAAsC,EACAA,EAAAhB,eAAAtB,IACA0B,KAAAE,YAAA5B,EAAAsC,EAAAtC,KAeAkC,eAAA,SAAAlC,EAAA6B,GAiBAH,KAAAC,OAAA3B,KAEA0B,KAAAC,OAAA3B,GAAA0B,KAAAC,OAAA3B,GAAAuC,OAAA,SAAAC,GAA0F,OAAAA,IAAAX,IAE1F,IAAAH,KAAAC,OAAA3B,GAAAyC,SAEAf,KAAAC,OAAA3B,QAAA0C,KAwDAC,KAAA,SAAA3C,GACA,IACA4C,EADAC,EAAAnB,KAAAC,OAAA3B,GAaA,GAAA6C,EAOA,IAAAD,EAAA,EAA4BA,EAAAC,EAAAJ,OAAsBG,IAQlDC,EAAAD,GAAAT,MAAAT,KAAAoB,MAAAzB,UAAA0B,MAAAnD,KAAAwC,UAAA,MAQAX,EAAAJ,UAAA2B,YAAAvB,EAIAjC,EAAAD,QAAAkC,gCChRA,IAWAwB,EAAAC,EAXAC,EAAqB9D,EAAQ,GAC7BoC,EAAqBpC,EAAQ,GAC7B+D,EAAA,CACAC,IAAA,CACAC,KAAA,UACAL,KAAA,cAEAM,QAAA,SAAAC,GACA,OAAAA,EAAA,OAAAA,MAaA,SAAAC,IACAhC,EAAA7B,KAAA8B,MAIAA,KAAAgC,QAAA,WAAgChC,KAAAC,OAAA,IAuOhC,SAAAgC,EAAAC,GAGA,OAFAX,EAAA,IAAAQ,EAEA,CACAI,GAAA,qBACA7D,KAAAkD,EAAA,uBACAY,OAAAV,EAAAC,IAAAC,KACAS,KAAA,SACAC,YAAAd,EAAA,gCACAe,KAAA,sBACAC,MAAA,sBACAN,OAAA,CAAiBO,WAAA,GAIjBC,YAAAlB,EAAA,kBAAAA,EAAA,qDACAvB,OAAA,CACA0C,MAAA,WACA,IAAArC,EAAAN,KAEAM,EAAAsC,MAAAC,UAAAC,IAAA,UACAvB,EAAAtB,OAAA,eAAAe,EACAO,EAAArB,YAAA,kBAAA6C,GACAzC,EAAA0C,KAAA,CAA+BD,OAAAE,KAAAF,EAAAhC,OAAA,IAAAgC,EAAAhC,WAE/BQ,EAAA2B,MAAAhB,KAGAiB,iBAAA,SAAAJ,EAAA5C,GACAA,EAAA,EAAuBiD,MAAA,CAAA5B,EAAA,4BAEvB6B,OAAAnB,EAAAoB,IAAAC,QAAAC,gBACAT,KAAA,IApQAhB,EAAApC,UAAAlB,OAAAY,OAAAU,EAAAJ,WACAoC,EAAApC,UAAA2B,YAAAS,EAsJAA,EAAApC,UAAAuD,MAAA,SAAAhB,GACA,IAMAuB,EAAAC,EANAC,EAAA,GACAC,EAAA1B,KAAA2B,SAAA3B,EAAA2B,QAAA/B,KAAAI,EAAA2B,QAAA/B,KAAA,IACAgC,EAAA,IAAAC,KACAC,EAAA,IAAAD,KACAE,EAAAC,KAAAC,MAAAC,mBAAAC,gBACA/D,EAAAN,KAkBA,IAdA0D,EADAxB,KAAA2B,SAAA3B,EAAA2B,QAAAH,QACAxB,EAAA2B,QAAAH,QAEA,8CAGAY,OAAAC,eAEAb,EAAAY,OAAAE,KAAAC,QAAAC,SAAAC,eAAA,GACAf,EAAAU,OAAAE,KAAAC,QAAAC,SAAAE,mBAAA,IAIAZ,EAAAa,WAAAf,EAAAgB,aAAAlB,EAAAF,EAAA3C,OAAA,IAEA0C,EAAA,EAAkBA,EAAAQ,EAAAlD,OAA2B0C,IAC7C,IAAAQ,EAAAR,GAAAsB,OAAA,IAAAd,EAAAR,GAAAsB,QACApB,EAAAvD,KAAA6D,EAAAR,IACAW,mBAAAY,QAAAf,EAAAR,GAAAtB,KAIAnC,KAAAiB,KAAA,UACA,CACAmC,MAAA,CAAA5B,EAAA,+BACS,CACT4B,MAAA,CACA5B,EAAA,cAAAsC,EAAAmB,WAAA,IACAvD,EAAAG,QAAAiC,EAAAoB,cAAA,IAAAxD,EAAAG,QAAAiC,EAAAgB,gBAES,CACT1B,MAAA,CACA5B,EAAA,qCAAAwC,EAAAiB,WAAA,IACAvD,EAAAG,QAAAmC,EAAAkB,cAAA,IAAAxD,EAAAG,QAAAmC,EAAAc,kBAKAK,WAAA,WACA,IAIAjE,EAAAkE,EAJAC,EAAA3B,EAAA3C,OACAgC,EAAA,EAAwBK,MAAA,CAAA5B,EAAA,cAAAA,EAAA,QAAAA,EAAA,WACxB8D,EAAA,GACAC,EAAA,GAIA,IAAArE,EAAA,EAAwBA,EAAAmE,EAAenE,IACvCqE,EAAAC,KAAAC,KAAA,yCAAA7B,EAAA,IAAAF,EAAAxC,IACAoE,GAAA,yBAAA5B,EAAAxC,GAAA,KAAAqE,EAAA,KAYA,KAVAA,IAAAG,MAAA,OACAC,QACAJ,EAAAI,QACAJ,EAAAK,MACAL,EAAAM,QAAA,SAAAC,GACAV,EAAAU,EAAAC,OAAAC,QAAA,UAA8C,KAAAN,MAAA,KAC9C3C,EAAA3C,KAAA,CAAuBgD,MAAA,CAAAgC,EAAA,GAAAA,EAAA,MAAAa,KAAAC,MAAAd,EAAA,SAEvB9E,EAAAW,KAAA,SAAA8B,GAEA7B,EAAA,EAAwBA,EAAAyC,EAAA5C,OAAgCG,IACxDkD,mBAAA+B,SAAAxC,EAAAzC,GAAAiB,KAzNA,SAAAY,GACA,IAAAqD,EAGA,GAAA9B,OAAAE,KAAAC,QAAA,CA6FA,GAzFA2B,EAAAZ,KAAAa,OAAAnC,KAAAoC,UAAA,CACAC,QAAA,CACA,WACA,YACA,YACA,mBACA,eACA,oBACA,gBACA,uBACA,uBACA,yBACA,wBACA,mBACA,wBACA,WACA,cACA,QACA,gBACA,cACA,aACA,YACA,cACA,UACA,UACA,cACA,kBACA,gBACA,aACA,qBACA,SACA,gBACA,kBACA,UACA,WACA,aACA,iBACA,YACA,YACA,YACA,eACA,YACA,WACA,WACA,gBACA,gBACA,cACA,mBACA,gBACA,gBACA,gBACA,UACA,YACA,SACA,aACA,eACA,cACA,mBACA,UACA,eACA,oBACA,WACA,SACA,SACA,WACA,WACA,cACA,cACA,aACA,aACA,gBACA,aACA,QACA,mBACA,kBACA,aACA,QACA,SACA,SACA,UACA,UACA,kBACA,iBACA,eACA,cACA,oBAIAxD,EACA,KACAqD,EAAAlC,KAAAC,MAAAiC,IACAb,OAAAiB,WAAAzD,EACAqD,EAAAlC,KAAAoC,UAAAF,GACS,MAAAK,GAETL,EAAAlC,KAAAoC,UAAA,CAAmCI,QAAA,EAAAC,OAAA,GAAApB,OAAAxC,IAKnCuB,OAAAE,KAAAC,QAAAmC,QAAA,uBACAC,QAAA,CACAC,eAAA,qCAEAC,OAAA,MACAC,OAAA,SAAAP,EAAAQ,KAIAC,KAAA,QAAAd,KAqGAe,CAAA7B,IACK,IAyCLxH,EAAAD,QAAA,CACAuJ,OAAA,SAAAlF,EAAA/B,GACAA,KAEAkH,UAAA,SAAAnF,EAAA/B,GACAA,EAAA,UAEAmH,eAAA,SAAApF,EAAA/B,GAEAsB,EAAA8F,KAAA,CACAjJ,KAAAgG,OAAAE,KAAAgD,YAAAC,SACAC,KAAAxF,EAAAwF,KAAA,QACS,WACTlG,EAAAC,EAAAD,QACArB,EAAA,MAA4BwH,QAAA,CAAA1F,EAAAC,wCCjT5B,IAAAnC,EAAcpC,EAAQ,GACtBiK,EAAcjK,EAAQ,GACtBkK,EAAA,IAAA9H,EAeA,SAAA+H,EAAA/E,GACA,IAAAvB,EAAA,IAAAoG,EAAA7E,GAEA8E,EAAAE,EAAAF,EAAArG,kBACAqG,EAAAG,SAAAxG,EAAAwG,SACAH,EAAAI,SAAAzG,EAAAyG,SAOAJ,EAAAK,gBAAA,KAYAL,EAAAN,KAAA,SAAArF,EAAA/B,GACA,IAAAgI,EAaAhI,KAAA,KACA+B,EAAAkG,IAAAlG,EAAAkG,KAAA,OACAlG,EAAAwF,KAAAxF,EAAAwF,MAAA,OAGAxF,EAAA5D,OAAAuJ,EAAAK,iBAEAJ,IACA,OAAA3H,GACAA,EAAA,SAGAgI,EAAA,IAAAE,gBAEArB,OAAA,WACA,IAAAsB,EAAAC,EAEA,IACAA,EAAArE,KAAAC,MAAAgE,EAAAK,cACa,MAAA/B,GACb6B,EAAA7B,EAGA6B,EACAH,EAAAM,QAAAH,IAEAR,EAAAS,GACA,OAAApI,GACAA,EAAA,MAIA0H,EAAA5H,OAAA,SAEA4H,EAAA5G,KAAA,UAKAkH,EAAAO,UAAAP,EAAAM,QAAA,SAAAhC,GACAqB,IAEA,OAAA3H,GACAA,EAAA,MAIA0H,EAAA5H,OAAA,UAEA4H,EAAA5G,KAAA,QAAAwF,IAIA0B,EAAAQ,KAAA,MAAAzG,EAAAwF,KAAA,IAAAxF,EAAA5D,KAAA,IAAA4D,EAAAkG,KAAA,GACAD,EAAAS,KAAA,QAMA9K,EAAAD,QAAAgK,6DC3GA,SAAAD,QAAA1F,QACA,IAAAa,KAAA8F,KAGA3G,eAAA,GACAa,KAAAb,OAAAa,MAAA,GACAA,KAAA,IAAAA,KAAA,QAGA8F,KAAA3G,OAAA2G,KASA7I,KAAAwB,QAAA,SAAAsH,GACA,OAAA/F,KAAA,IAAA+F,OAYA9I,KAAAgI,SAAA,SAAAe,EAAAD,GACA,OAAA/F,KAAAgG,IAAAhG,KAAAgG,GAAAD,OAaA9I,KAAAiI,SAAA,SAAAa,MAAAE,OAAAhK,OAIA,IAAAQ,EAAAyJ,WAQA,OAAAlG,MAAA8F,MAAA9F,KAAA,IAAA+F,QACAG,WAAAC,KAAA,OAAAlK,MAAA,KAAiD6J,KAAAG,QAEjD,kBAAAC,aACAA,wBAIAlG,KAAA,IAAA+F,OAAAG,aAIA,IAAAjK,MAAA8J,MAAAE,QAMApB,QAAAjI,UAAA2B,YAAAsG,QAIA9J,OAAAD,QAAA+J","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Base Events Emitter implementation.\n *\n * @see http://nodejs.org/api/events.html\n * @constructor\n *\n * @example\n * var emitter = new Emitter();\n */\nfunction Emitter () {\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // if ( DEVELOP ) {\n    //     if ( typeof this !== 'object' ) { throw new Error(__filename + ': must be constructed via new'); }\n    // }\n\n    /**\n     * Inner hash table for event names and linked callbacks.\n     * Manual editing should be avoided.\n     *\n     * @member {Object.<string, function[]>}\n     *\n     * @example\n     * {\n     *     click: [\n     *         function click1 () { ... },\n     *         function click2 () { ... }\n     *     ],\n     *     keydown: [\n     *         function () { ... }\n     *     ]\n     * }\n     **/\n    this.events = {};\n}\n\n\nEmitter.prototype = {\n    /**\n     * Bind an event to the given callback function.\n     * The same callback function can be added multiple times for the same event name.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.addListener('click', function ( data ) { ... });\n     * // one more click handler\n     * emitter.addListener('click', function ( data ) { ... });\n     */\n    addListener: function ( name, callback ) {\n        console.assert(arguments.length === 2, 'wrong arguments number');\n        console.assert(typeof name === 'string', 'wrong name type');\n        console.assert(name.length > 0, 'empty name');\n        console.assert(typeof callback === 'function', 'callback should be a function');\n\n        // if ( DEVELOP ) {\n        //     if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        //     if ( typeof name !== 'string' || name.length === 0 ) { throw new Error(__filename + ': wrong or empty name'); }\n        //     if ( typeof callback !== 'function' ) { throw new Error(__filename + ': wrong callback type'); }\n        // }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(callback);\n    },\n\n\n    /**\n     * Add a one time listener for the event.\n     * This listener is invoked only the next time the event is fired, after which it is removed.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.once('click', function ( data ) { ... });\n     */\n    once: function ( name, callback ) {\n        // current execution context\n        var self = this;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n        }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(function onceWrapper () {\n            self.removeListener(name, onceWrapper);\n            callback.apply(self, arguments);\n        });\n    },\n\n\n    /**\n     * Apply multiple listeners at once.\n     *\n     * @param {Object} callbacks event names with callbacks\n     *\n     * @example\n     * emitter.addListeners({\n     *     click: function ( data ) {},\n     *     close: function ( data ) {}\n     * });\n     */\n    addListeners: function ( callbacks ) {\n        var name;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof callbacks !== 'object' ) {\n                throw new Error(__filename + ': wrong callbacks type');\n            }\n            if ( Object.keys(callbacks).length === 0 ) {\n                throw new Error(__filename + ': no callbacks given');\n            }\n        }\n\n        for ( name in callbacks ) {\n            if ( callbacks.hasOwnProperty(name) ) {\n                this.addListener(name, callbacks[name]);\n            }\n        }\n    },\n\n\n    /**\n     * Remove all instances of the given callback.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to remove\n     *\n     * @example\n     * emitter.removeListener('click', func1);\n     */\n    removeListener: function ( name, callback ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n            if ( this.events[name] && !Array.isArray(this.events[name]) ) {\n                throw new Error(__filename + ': corrupted inner data');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( this.events[name] ) {\n            // rework the callback list to exclude the given one\n            this.events[name] = this.events[name].filter(function callbacksFilter ( fn ) { return fn !== callback; });\n            // event has no more callbacks so clean it\n            if ( this.events[name].length === 0 ) {\n                // as if there were no listeners at all\n                this.events[name] = undefined;\n            }\n        }\n    },\n\n\n    /**\n     * Remove all callbacks for the given event name.\n     * Without event name clears all events.\n     *\n     * @param {string} [name] event identifier\n     *\n     * @example\n     * emitter.removeAllListeners('click');\n     * emitter.removeAllListeners();\n     *\n     * @deprecated\n     */\n    /*removeAllListeners: function ( name ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 0 && (typeof name !== 'string' || name.length === 0) ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // check input\n        if ( arguments.length === 0 ) {\n            // no arguments so remove everything\n            this.events = {};\n        } else if ( name ) {\n            if ( DEVELOP ) {\n                if ( this.events[name] ) { throw new Error(__filename + ': event is not removed'); }\n            }\n\n            // only name is given so remove all callbacks for the given event\n            // but object structure modification should be avoided\n            this.events[name] = undefined;\n        }\n    },*/\n\n\n    /**\n     * Execute each of the listeners in the given order with the supplied arguments.\n     *\n     * @param {string} name event identifier\n     *\n     * @example\n     * emitter.emit('init');\n     * emitter.emit('click', {src: panel1, dst: panel2});\n     * emitter.emit('load', error, data);\n     *\n     * // it's a good idea to emit event only when there are some listeners\n     * if ( this.events['click'] ) {\n     *     this.emit('click', {event: event});\n     * }\n     */\n    emit: function ( name ) {\n        var event = this.events[name],\n            index;\n\n        if ( DEVELOP ) {\n            if ( arguments.length < 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( event ) {\n            if ( DEVELOP ) {\n                if ( !Array.isArray(event) ) {\n                    throw new Error(__filename + ': wrong event type');\n                }\n            }\n\n            for ( index = 0; index < event.length; index++ ) {\n                if ( DEVELOP ) {\n                    if ( typeof event[index] !== 'function' ) {\n                        throw new Error(__filename + ': wrong event callback type');\n                    }\n                }\n\n                // invoke the callback with parameters\n                event[index].apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n    }\n};\n\n\n// correct constructor name\nEmitter.prototype.constructor = Emitter;\n\n\n// public\nmodule.exports = Emitter;\n","/**\n * Created by bas.\n */\n\n'use strict';\n\nvar gettextWrapper = require('mag-gettext'),\n    Emitter        = require('cjs-emitter'),\n    tools          = {\n        ids: {\n            base: 'network',\n            test: 'traceroute'\n        },\n        addZero: function ( time ) {\n            return (time < 10 ? '0' + time : time);\n        }\n    },\n    test, gettext;\n\n\n/**\n * Update manager. Listening daemon for records changes and emitting corresponding events to application.\n * Can emit events: progress, state, add, remove.\n *\n * @constructor\n * @extends Emitter\n */\nfunction Test () {\n    Emitter.call(this);\n    /**\n     * Stop this client and remove all it listeners. Use it for cleanup before application exit.\n     */\n    this.destroy = function () { this.events = {}; };\n}\n\nTest.prototype = Object.create(Emitter.prototype);\nTest.prototype.constructor = Test;\n\n\nfunction sendStatistic ( data ) {\n    var envs;\n\n    // statistic needs only for stalker\n    if ( !window.core.backend ) {\n\n        return;\n    }\n    envs = gSTB.GetEnv(JSON.stringify({\n        varList: [\n            'language',\n            'igmp_conf',\n            'upnp_conf',\n            'mc_proxy_enabled',\n            'mc_proxy_url',\n            'input_buffer_size',\n            'timezone_conf',\n            'audio_initial_volume',\n            'audio_dyn_range_comp',\n            'audio_operational_mode',\n            'audio_stereo_out_mode',\n            'audio_spdif_mode',\n            'audio_hdmi_audio_mode',\n            'lan_noip',\n            'ipaddr_conf',\n            'dnsip',\n            'pppoe_enabled',\n            'pppoe_login',\n            'pppoe_dns1',\n            'wifi_ssid',\n            'wifi_int_ip',\n            'portal1',\n            'portal2',\n            'portal_dhcp',\n            'use_portal_dhcp',\n            'bootstrap_url',\n            'update_url',\n            'update_channel_url',\n            'ntpurl',\n            'mcip_img_conf',\n            'mcport_img_conf',\n            'netmask',\n            'tvsystem',\n            'graphicres',\n            'auto_framerate',\n            'force_dvi',\n            'gatewayip',\n            'pppoe_pwd',\n            'wifi_int_dns',\n            'wifi_auth',\n            'wifi_enc',\n            'wifi_psk',\n            'wifi_wep_key1',\n            'wifi_int_mask',\n            'wifi_int_gw',\n            'wifi_wep_def_key',\n            'wifi_wep_key2',\n            'wifi_wep_key3',\n            'wifi_wep_key4',\n            'ethinit',\n            'partition',\n            'kernel',\n            'Ver_Forced',\n            'componentout',\n            'bootupgrade',\n            'do_factory_reset',\n            'serial#',\n            'Boot_Version',\n            'timezone_conf_int',\n            'showlogo',\n            'logo_x',\n            'logo_y',\n            'bg_color',\n            'fg_color',\n            'video_clock',\n            'front_panel',\n            'ts_endType',\n            'Image_Date',\n            'Image_Version',\n            'Image_Desc',\n            'ts_on',\n            'lang_audiotracks',\n            'autoupdate_cond',\n            'settMaster',\n            'stdin',\n            'stdout',\n            'stderr',\n            'bootcmd',\n            'ethaddr',\n            'betaupdate_cond',\n            'lang_subtitles',\n            'subtitles_on',\n            'ssaverDelay',\n            'autoupdateURL'\n        ]\n    }));\n\n    if ( data ) {\n        try {\n            envs = JSON.parse(envs);\n            envs.result.traceroute = data;\n            envs = JSON.stringify(envs);\n        } catch ( error ) {\n            console.log(error);\n            envs = JSON.stringify({errCode: 0, errMsg: '', result: data});\n        }\n    }\n\n    //console.log('send this:' + 'body=' + envs);\n    window.core.backend.request('/network-diagnostic', {\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        method: 'PUT',\n        onload: function ( error, loadedData ) {\n            console.log('result stalker answer data: ' + JSON.stringify(loadedData));\n            console.log('result stalker error data: ' + JSON.stringify(error));\n        },\n        body: 'body=' + envs\n    });\n    //    } else {\n    //        // statistic for portal for aura models\n    //        request = new XMLHttpRequest();\n    //        request.open('PUT', 'http://freetvstat.iptv.infomir.com.ua/api/env/' + gSTB.GetDeviceMacAddress(), true);\n    //        request.setRequestHeader('Content-Type', 'application/json');\n    //        request.onreadystatechange = function () {\n    //            if ( request.readyState === 4 ) {\n    //                if ( request.status === 200 ) {\n    //                    console.log(request.responseText, 'success stat sending');\n    //                } else if ( request.status === 0 || request.status === 404 ) {\n    //                    console.log('Sending vars error');\n    //                }\n    //            }\n    //        };\n    //        request.send(envs);\n    //    }\n}\n\n\n/**\n * Start test.\n *\n * @param {Object} config config\n * @param {Object} config.options config\n * @param {Object} config.options.time custom test duration\n * @param {Object} config.options.domains custom test domains\n */\nTest.prototype.start = function ( config ) {\n    var activeDownloads = [],\n        duration        = config && config.options && config.options.time ? config.options.time : 120,\n        startTime       = new Date(),\n        endTime         = new Date(),\n        allDownloads    = JSON.parse(stbDownloadManager.GetQueueInfo()),\n        self            = this,\n        ind, domains;\n\n    if ( config && config.options && config.options.domains ) {\n        domains = config.options.domains;\n    } else {\n        domains = ['echo-01.infomir.com', 'echo-03.infomir.com'];\n    }\n\n    if ( window.MODE_STALKER ) {\n        // stalker mode\n        domains = window.core.backend.settings.mtr_hostnames || [];\n        duration = window.core.backend.settings.mtr_report_cycles || 60;\n    }\n\n    // strange calculation for finish time\n    endTime.setSeconds(startTime.getSeconds() + (duration * domains.length) + 60);\n    // save all active jobs, because mtr can ruin downloads\n    for ( ind = 0; ind < allDownloads.length; ind++ ) {\n        if ( allDownloads[ind].state === 1 || allDownloads[ind].state === 2 ) {\n            activeDownloads.push(allDownloads[ind]);\n            stbDownloadManager.StopJob(allDownloads[ind].id);\n        }\n    }\n\n    this.emit('render', [\n        {\n            items: [gettext('Perform diagnostics') + '...']\n        }, {\n            items: [\n                gettext('Start') + ': ' + startTime.getHours() + ':' +\n                tools.addZero(startTime.getMinutes()) + ':' + tools.addZero(startTime.getSeconds())\n            ]\n        }, {\n            items: [\n                gettext('Estimated time of completion') + ': ' + endTime.getHours() + ':' +\n                tools.addZero(endTime.getMinutes()) + ':' + tools.addZero(endTime.getSeconds())\n            ]\n        }\n    ]);\n    // hack to run mtr before browser render all page\n    setTimeout(function () {\n        var count   = domains.length,\n            data    = [{items: [gettext('IP Address'), gettext('Loss'), gettext('Ping')]}],\n            results = '',\n            result  = '',\n            index, text;\n\n        //console.log('start measure for ' + JSON.stringify(domains));\n        for ( index = 0; index < count; index++ ) {\n            result = gSTB.RDir('mtr --report --no-dns --report-cycles ' + duration + ' ' + domains[index]);\n            results += 'Traceroute to domain: ' + domains[index] + '\\n' + result + '\\n';\n        }\n        result = result.split('\\n');\n        result.shift();\n        result.shift();\n        result.pop();\n        result.forEach(function ( item ) {\n            text = item.trim().replace(/\\s{2,}/g, ' ').split(' ');\n            data.push({items: [text[1], text[2], '' + Math.round(text[5])]});\n        });\n        self.emit('render', data);\n        // restore active downloads\n        for ( index = 0; index < activeDownloads.length; index++ ) {\n            stbDownloadManager.StartJob(activeDownloads[index].id);\n        }\n        sendStatistic(results);\n    }, 0);\n};\n\n\nfunction buildSettingsItem ( config ) {\n    test = new Test();\n\n    return {\n        id: 'networkDiagnostics',\n        name: gettext('Network diagnostics'),\n        parent: tools.ids.base,\n        type: 'option',\n        description: gettext('Get info about network state'),\n        icon: 'theme-icon-settings',\n        title: 'network diagnostics',\n        config: {focusable: false},\n        // You can not interrupt the test before it is completed\n        // Вы не сможете прервать тест до его завершения\n        // Ви не зможете перервати тест до його завершення\n        warningText: gettext('Attention') + ': ' + gettext('Estimated time to complete the test - 10 minutes.'),\n        events: {\n            click: function () {\n                var self = this;\n\n                self.$node.classList.add('padded');\n                test.events['render'] = undefined;\n                test.addListener('render', function ( data ) {\n                    self.init({data: data, size: data.length > 5 ? 5 : data.length});\n                });\n                test.start(config);\n            }\n        },\n        prepareForRender: function ( data, callback ) {\n            callback([{items: [gettext('Perform diagnostics')]}]);\n        },\n        render: config.api.renders.popupLayoutList,\n        data: {}\n    };\n}\n\n\nmodule.exports = {\n    onInit: function ( config, callback ) {\n        callback();\n    },\n    onAppInit: function ( config, callback ) {\n        callback(null, {});\n    },\n    onSettingsInit: function ( config, callback ) {\n        // lang load\n        gettextWrapper.load({\n            name: window.core.environment.language,\n            path: config.path + 'lang'\n        }, function () {\n            gettext = gettextWrapper.gettext;\n            callback(null, {content: [buildSettingsItem(config)]});\n        });\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    Gettext = require('cjs-gettext'),\n    loader  = new Emitter();\n\n\nif ( DEVELOP ) {\n    loader._ = loader.gettext = loader.pgettext = loader.ngettext = function () {\n        throw new Error(__filename + ': you cannot use this function before mag-gettext not yet loaded');\n    };\n}\n\n/**\n * Wrap the given data with gettext instance\n * and export methods to the global scope.\n *\n * @param {Object} [data] localization data\n */\nfunction prepare ( data ) {\n    var gettext = new Gettext(data);\n\n    loader._ = loader.gettext = gettext.gettext;\n    loader.pgettext = gettext.pgettext;\n    loader.ngettext = gettext.ngettext;\n}\n\n\n/**\n * Main application language\n */\nloader.defaultLanguage = 'en';\n\n\n/**\n * Simple gettext implementation.\n *\n * @param {Object} config options\n * @param {string} [config.path=lang] relative path to project root\n * @param {string} config.name language name\n * @param {string} [config.ext=json] language file extension\n * @param {function} callback hook on ready\n */\nloader.load = function ( config, callback ) {\n    var xhr;\n\n    if ( DEVELOP ) {\n        if ( !config.name || typeof config.name !== 'string' ) {\n            throw new Error(__filename + ': config.name must be a nonempty string');\n        }\n        if ( callback && typeof callback !== 'function' ) {\n            throw new Error(__filename + ': wrong callback type');\n        }\n    }\n\n    // defaults\n\n    callback = callback || null;\n    config.ext  = config.ext  || 'json';\n    config.path = config.path || 'lang';\n\n    // is it necessary to request a localization file?\n    if ( config.name === loader.defaultLanguage ) {\n        // no\n        prepare();\n        if ( callback !== null ) {\n            callback(null);\n        }\n    } else {\n        xhr = new XMLHttpRequest();\n\n        xhr.onload = function () {\n            var jsonParseError, json;\n\n            try {\n                json = JSON.parse(xhr.responseText);\n            } catch ( error ) {\n                jsonParseError = error;\n            }\n\n            if ( jsonParseError ) {\n                xhr.onerror(jsonParseError);\n            } else {\n                prepare(json);\n                if ( callback !== null ) {\n                    callback(null);\n                }\n\n                // there are some listeners\n                if ( loader.events['load'] ) {\n                    // notify listeners\n                    loader.emit('load');\n                }\n            }\n        };\n\n        xhr.ontimeout = xhr.onerror = function ( error ) {\n            prepare();\n\n            if ( callback !== null ) {\n                callback(null);\n            }\n\n            // there are some listeners\n            if ( loader.events['error'] ) {\n                // notify listeners\n                loader.emit('error', error);\n            }\n        };\n\n        xhr.open('GET', config.path + '/' + config.name + '.' + config.ext, true);\n        xhr.send(null);\n    }\n};\n\n\n// public\nmodule.exports = loader;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Translations handler.\n *\n * @constructor\n *\n * @param {Object} config init parameters\n */\nfunction Gettext ( config ) {\n    var data, meta;\n\n    // sanitize\n    config   = config || {};\n    data     = config.data || {};\n    data[''] = data[''] || {};\n\n    // shortcut\n    meta = config.meta;\n\n    /**\n     * Display the native language translation of a textual message.\n     *\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.gettext = function ( msgId ) {\n        return data[''][msgId] || msgId;\n    };\n\n\n    /**\n     * The \"p\" in \"pgettext\" stands for \"particular\": fetches a particular translation of the textual message.\n     *\n     * @param {string} context message context\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.pgettext = function ( context, msgId ) {\n        return data[context] && data[context][msgId] || msgId;\n    };\n\n\n    /**\n     * Display the native language translation of a textual message whose grammatical form depends on a number.\n     *\n     * @param {string} msgId textual message in a singular form\n     * @param {string} plural textual message in a plural form\n     * @param {number} value message number\n     *\n     * @return {string} translated text\n     */\n    this.ngettext = function ( msgId, plural, value ) {\n        /* eslint no-unused-vars: 0 */\n        /* eslint no-eval: 0 */\n        /* eslint id-length: 0 */\n        var n, evalResult;\n\n        if ( DEVELOP ) {\n            if ( Number(value) !== value ) {\n                throw new Error(__filename + ': value must be a number');\n            }\n        }\n\n        if ( data && meta && data[''][msgId] ) {\n            evalResult = eval('n = ' + value + '; ' + meta.plural);\n\n            if ( typeof evalResult === 'boolean' ) {\n                evalResult = +evalResult;\n            }\n\n            // translation\n            return data[''][msgId][evalResult];\n        }\n\n        // english\n        return value === 1 ? msgId : plural;\n    };\n}\n\n\n// correct constructor name\nGettext.prototype.constructor = Gettext;\n\n\n// public\nmodule.exports = Gettext;\n"],"sourceRoot":""}