{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/main.js","webpack:///./node_modules/cjs-emitter/index.js","webpack:///./node_modules/cjs-async/serial.js","webpack:///./node_modules/stb-keys/index.js","webpack:///./node_modules/spa-keys/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","keydownTimeoutId","Emitter","serial","setupKeyCode","set","daemon","pluginList","loadedPlugins","apiLink","pluginOnLoad","config","plugin","push","uniqueGetter","callback","self","this","pluginStorage","core","dependencyManager","getPluginStorage","setTimeout","data","keys","forEach","getItem","uniqueSaver","setItem","fulfillApiObject","api","gSTB","top","actions","reload","reboot","loadEmbedPortal","location","href","clearUserData","ResetUserFs","SetEnv","resetUserFs","ServiceControl","getters","environment","variables","emptyResult","undefinedVariables","length","JSON","parse","GetEnv","stringify","varList","result","savers","constructor","backend","session","userId","userSettings","settings","variable","request","headers","Content-Type","method","onload","error","response","window","extendCorePrototype","onerror","body","saveSettings","setKeydownHandler","taskManager","hideAll","intent","action","once","addListener","clearTimeout","onFocusDebounceTimeout","onAppInit","appInit","init","tree","dependencies","packages","packageData","tuner","packageName","version","splice","load","dependencyReady","done","loaders","map","index","Array","isArray","nameInner","instance","onSettingsInit","options","storage","path","packageMap","url","saver","option","content","item","type","toString","filter","loader","loadTree","onInit","events","onceWrapper","removeListener","apply","arguments","addListeners","callbacks","fn","undefined","emit","event","slice","tasks","isError","counter","results","handler","task","back","backspace","channelNext","tab","channelPrev","ok","enter","exit","escape","volumeUp","volumeDown","f1","f2","f3","f4","refresh","frame","phone","tv","menu","app","rewind","forward","audio","standby","keyboard","usbMounted","usbUnmounted","playPause","play","pause","stop","power","record","info","mute","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","space","pageUp","pageDown","end","home","left","up","right","down","insert","del"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","'use strict';\n\n\nvar Emitter = require('cjs-emitter'),\n\n    serial   = require('cjs-async/serial'),\n\n    setupKeyCode = require('stb-keys').set,\n\n    daemon = new Emitter(),\n\n    pluginList    = [],\n    loadedPlugins = {},\n\n    apiLink = null,\n    keydownTimeoutId;\n\n\nfunction pluginOnLoad ( config, plugin ) {\n    if ( typeof loadedPlugins[plugin.name] === 'undefined' ) {\n        loadedPlugins[plugin.name] = 1;\n        pluginList.push(plugin);\n    }\n}\n\n\nfunction saveSettings ( config, callback ) {\n    core.backend.request('users/' + core.backend.session.userId + '/settings', {\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        method: 'PUT',\n        onload: function ( error, response ) {\n            core.backend.settings[config.name] = config.value;\n            window.extendCorePrototype('backend', core.backend);\n            callback(error, response);\n        },\n        onerror: function () {\n            callback(true);\n        },\n        body: config.name + '=' + config.value\n    });\n}\n\n\nfunction uniqueGetter ( name ) {\n    /* eslint no-invalid-this: 0 */\n    return function ( callback ) {\n        var self = this,\n            pluginStorage = core.dependencyManager.getPluginStorage(name);\n\n        setTimeout(function () {\n            if ( self.data ) {\n                console.log(JSON.stringify(self.data));\n                Object.keys(self.data).forEach(function ( key ) {\n                    self.data[key] = pluginStorage.getItem(key) || self.data[key];\n                });\n                console.log(JSON.stringify(self.data));\n\n                callback(null, self.data);\n            } else {\n                callback();\n            }\n        }, 0);\n    };\n}\n\nfunction uniqueSaver ( name ) {\n    return function ( callback ) {\n        var self = this,\n            pluginStorage = core.dependencyManager.getPluginStorage(name);\n\n        setTimeout(function () {\n            console.log(JSON.stringify(self.data));\n            Object.keys(self.data).forEach(function ( key ) {\n                pluginStorage.setItem(key, self.data[key]);\n            });\n\n            callback();\n        }, 0);\n    };\n}\n\n\nfunction loadTree ( tree, callback ) {\n    var loaders, map, index;\n\n    loaders = [];\n    map = {};\n    index = 0;\n\n    Object.keys(tree).forEach(function ( name ) {\n        map[name] = index;\n        console.log(name + ' in tree, index: ' + index);\n        ++index;\n        if ( tree[name] !== null ) {\n            if ( Array.isArray(tree[name]) ) {\n                tree[name].forEach(function ( nameInner ) {\n                    map[nameInner] = index;\n                    console.log(nameInner + ' in tree, index: ' + index);\n                    ++index;\n                });\n            }\n        }\n    });\n\n    // if not in tree, gather all others plugins\n    if ( index < pluginList.length ) {\n        while ( index < pluginList.length ) {\n            if ( !map[pluginList[index].name] ) {\n                console.log('not found in tree ' + pluginList[index].name);\n                map[pluginList[index].name] = index;\n                ++index;\n            }\n            console.log(index);\n        }\n    }\n\n    loaders.length = pluginList.length;\n    pluginList.forEach(function ( plugin ) {\n        loaders[map[plugin.name]] = function ( done ) {\n            plugin.instance.onSettingsInit({\n                api: apiLink,\n                options: plugin.options,\n                storage: core.dependencyManager.getPluginStorage(plugin.name),\n                path: core.packageMap[plugin.packageName].url + '/../'\n            }, function ( error, data ) {\n                var saver = null,\n                    getter = null;\n\n                if ( data.options ) {\n                    data.options.forEach(function ( option ) {\n                        if ( typeof option.data !== 'undefined') {\n                            if ( typeof option.saver === 'undefined' ) {\n                                if ( saver === null ) {\n                                    saver = uniqueSaver(plugin.name);\n                                }\n\n                                option.saver = saver;\n                            }\n\n                            if ( typeof option.getter === 'undefined' ) {\n                                if ( getter === null ) {\n                                    getter = uniqueGetter(plugin.name);\n                                }\n\n                                option.getter = getter;\n                            }\n                        }\n                    });\n                }\n\n                if ( data.content ) {\n                    data.content.forEach(function ( item ) {\n                        if ( item.type === 'option' && typeof item.data !== 'undefined') {\n                            if ( typeof item.saver === 'undefined' ) {\n                                if ( saver === null ) {\n                                    saver = uniqueSaver(plugin.name);\n                                }\n\n                                item.saver = saver;\n                            }\n\n                            if ( typeof item.getter === 'undefined' ) {\n                                if ( getter === null ) {\n                                    getter = uniqueGetter(plugin.name);\n                                }\n\n                                item.getter = getter;\n                            }\n                        }\n                    });\n                }\n                done(error, data);\n            });\n        };\n        loaders[map[plugin.name]].toString = function () {\n            return plugin.name;\n        };\n    });\n\n    loaders = loaders.filter(function ( loader ) {\n        return !!loader;\n    });\n\n    serial(loaders, callback);\n}\n\n\nfunction fulfillApiObject ( api ) {\n    var gSTB = top.gSTB;\n\n    api.actions = api.actions || {};\n    api.actions.reload = core.reload;\n    api.actions.reboot = core.reboot;\n    api.actions.loadEmbedPortal = function () {\n        location.href = 'file:///home/web/services.html';\n    };\n    api.actions.clearUserData = function () {\n        // eslint-disable-next-line new-cap\n        gSTB.ResetUserFs();\n        // eslint-disable-next-line new-cap\n        gSTB.SetEnv('{\"language\":\"en\"}');\n    };\n    api.actions.resetUserFs = function () {\n        // eslint-disable-next-line new-cap\n        gSTB.ServiceControl('local-config', 'reset');\n    };\n\n    api.getters = api.getters || {};\n    api.getters.environment = function ( callback ) {\n        var self = this,\n            variables = Object.keys(self.environment);\n\n        setTimeout(function () {\n            var emptyResult = false,\n                undefinedVariables = [],\n                data;\n\n            variables.forEach(function ( name ) {\n                if ( typeof core.environment[name] === 'undefined' ) {\n                    console.log('not in core.environment ' + name);\n                    undefinedVariables.push(name);\n                } else if ( core.environment[name] ) {\n                    self.environment[name] = core.environment[name];\n                } else {\n                    core.environment[name] = self.environment[name];\n                }\n            });\n\n            if ( undefinedVariables.length > 0 ) {\n                if ( gSTB ) {\n                    // eslint-disable-next-line new-cap\n                    data = JSON.parse(gSTB.GetEnv(JSON.stringify({\n                        varList: undefinedVariables\n                    })));\n\n                    variables.forEach(function ( name ) {\n                        if ( data.result[name] === '' ) {\n                            emptyResult = true;\n                        } else {\n                            core.environment[name] = self.environment[name] = data.result[name];\n                        }\n                    });\n\n                    if ( emptyResult ) {\n                        // eslint-disable-next-line new-cap\n                        gSTB.SetEnv(JSON.stringify(data.result));\n                    }\n                }\n            }\n            callback(false, self.environment);\n        }, 0);\n    };\n\n    api.savers = api.savers || {};\n    api.savers.environment = function ( callback ) {\n        var self = this,\n            variables = Object.keys(self.environment);\n\n        variables.forEach(function ( name ) {\n            core.constructor.prototype.environment[name] = self.environment[name];\n        });\n\n        setTimeout(function () {\n            if ( gSTB ) {\n                // eslint-disable-next-line new-cap\n                gSTB.SetEnv(JSON.stringify(self.environment));\n            }\n\n            callback();\n        }, 0);\n    };\n\n    if ( core.backend && core.backend.session && core.backend.session.userId ) {\n        api.getters.userSettings = function ( callback ) {\n            var self = this;\n\n            setTimeout(function () {\n                var value = core.backend.settings[self.variable.name];\n\n                self.variable.value = value;\n                callback(false, value);\n            }, 0);\n        };\n\n        api.savers.userSettings = function ( callback ) {\n            saveSettings({\n                name: this.variable.name,\n                value: this.variable.value\n            }, function ( error, data ) {\n                if ( !error && data.data === true ) {\n                    callback();\n                } else {\n                    callback(true);\n                }\n            });\n        };\n    } else {\n        api.getters.userSettings = uniqueGetter('user-settings');\n        api.savers.userSettings = uniqueSaver('user-settings');\n    }\n}\n\nfunction setKeydownHandler () {\n    // TODO: rework application start during system start and remove this hardcode\n    core.taskManager.hideAll();\n    core.intent({\n        action: 'setup'\n    }, function ( error ) {\n        console.log(error);\n    });\n}\n\n\ndaemon.once('launcher:ready', function () {\n    // Ctrl+F9, SET button on MAG remote control\n    core.addListener('keydown:' + setupKeyCode, function () {\n        clearTimeout(keydownTimeoutId);\n\n        keydownTimeoutId = setTimeout(setKeydownHandler, core.environment.onFocusDebounceTimeout)\n    });\n});\n\n\nmodule.exports = {\n    onAppInit: function ( config, appInit ) {\n        appInit(null, {\n            init: function ( api, callback ) {\n                var dependencies = {},\n                    tree;\n\n                core.packages.forEach(function ( packageData ) {\n                    if ( packageData.tree && packageData.name === 'settingsStructure' ) {\n                        // plugin settings structure\n                        tree = packageData.tree;\n                        // TODO: need to rework settings customization\n                        // if ( config.options && config.options.tree ) {\n                        //     tree = JSON.parse(config.options.tree.trim());\n                        // }\n                    }\n\n                    if ( packageData.tuner ) {\n                        // plugin for settings application\n                        dependencies[packageData.packageName] = packageData.version;\n                    }\n                });\n\n                fulfillApiObject(api);\n                apiLink = api;\n\n                pluginList.splice(0);\n                core.dependencyManager.load({\n                    dependencies: dependencies,\n                    dependencyReady: pluginOnLoad,\n                    done: function () {\n                        loadTree(tree, function ( error, data ) {\n                            loadedPlugins = {};\n                            callback(error, data);\n                        });\n                    }\n                });\n            }\n        });\n    },\n    onInit: function ( config, callback ) {\n        callback(null, daemon);\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Base Events Emitter implementation.\n *\n * @see http://nodejs.org/api/events.html\n * @constructor\n *\n * @example\n * var emitter = new Emitter();\n */\nfunction Emitter () {\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // if ( DEVELOP ) {\n    //     if ( typeof this !== 'object' ) { throw new Error(__filename + ': must be constructed via new'); }\n    // }\n\n    /**\n     * Inner hash table for event names and linked callbacks.\n     * Manual editing should be avoided.\n     *\n     * @member {Object.<string, function[]>}\n     *\n     * @example\n     * {\n     *     click: [\n     *         function click1 () { ... },\n     *         function click2 () { ... }\n     *     ],\n     *     keydown: [\n     *         function () { ... }\n     *     ]\n     * }\n     **/\n    this.events = {};\n}\n\n\nEmitter.prototype = {\n    /**\n     * Bind an event to the given callback function.\n     * The same callback function can be added multiple times for the same event name.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.addListener('click', function ( data ) { ... });\n     * // one more click handler\n     * emitter.addListener('click', function ( data ) { ... });\n     */\n    addListener: function ( name, callback ) {\n        console.assert(arguments.length === 2, 'wrong arguments number');\n        console.assert(typeof name === 'string', 'wrong name type');\n        console.assert(name.length > 0, 'empty name');\n        console.assert(typeof callback === 'function', 'callback should be a function');\n\n        // if ( DEVELOP ) {\n        //     if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        //     if ( typeof name !== 'string' || name.length === 0 ) { throw new Error(__filename + ': wrong or empty name'); }\n        //     if ( typeof callback !== 'function' ) { throw new Error(__filename + ': wrong callback type'); }\n        // }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(callback);\n    },\n\n\n    /**\n     * Add a one time listener for the event.\n     * This listener is invoked only the next time the event is fired, after which it is removed.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.once('click', function ( data ) { ... });\n     */\n    once: function ( name, callback ) {\n        // current execution context\n        var self = this;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n        }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(function onceWrapper () {\n            self.removeListener(name, onceWrapper);\n            callback.apply(self, arguments);\n        });\n    },\n\n\n    /**\n     * Apply multiple listeners at once.\n     *\n     * @param {Object} callbacks event names with callbacks\n     *\n     * @example\n     * emitter.addListeners({\n     *     click: function ( data ) {},\n     *     close: function ( data ) {}\n     * });\n     */\n    addListeners: function ( callbacks ) {\n        var name;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof callbacks !== 'object' ) {\n                throw new Error(__filename + ': wrong callbacks type');\n            }\n            if ( Object.keys(callbacks).length === 0 ) {\n                throw new Error(__filename + ': no callbacks given');\n            }\n        }\n\n        for ( name in callbacks ) {\n            if ( callbacks.hasOwnProperty(name) ) {\n                this.addListener(name, callbacks[name]);\n            }\n        }\n    },\n\n\n    /**\n     * Remove all instances of the given callback.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to remove\n     *\n     * @example\n     * emitter.removeListener('click', func1);\n     */\n    removeListener: function ( name, callback ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n            if ( this.events[name] && !Array.isArray(this.events[name]) ) {\n                throw new Error(__filename + ': corrupted inner data');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( this.events[name] ) {\n            // rework the callback list to exclude the given one\n            this.events[name] = this.events[name].filter(function callbacksFilter ( fn ) { return fn !== callback; });\n            // event has no more callbacks so clean it\n            if ( this.events[name].length === 0 ) {\n                // as if there were no listeners at all\n                this.events[name] = undefined;\n            }\n        }\n    },\n\n\n    /**\n     * Remove all callbacks for the given event name.\n     * Without event name clears all events.\n     *\n     * @param {string} [name] event identifier\n     *\n     * @example\n     * emitter.removeAllListeners('click');\n     * emitter.removeAllListeners();\n     *\n     * @deprecated\n     */\n    /*removeAllListeners: function ( name ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 0 && (typeof name !== 'string' || name.length === 0) ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // check input\n        if ( arguments.length === 0 ) {\n            // no arguments so remove everything\n            this.events = {};\n        } else if ( name ) {\n            if ( DEVELOP ) {\n                if ( this.events[name] ) { throw new Error(__filename + ': event is not removed'); }\n            }\n\n            // only name is given so remove all callbacks for the given event\n            // but object structure modification should be avoided\n            this.events[name] = undefined;\n        }\n    },*/\n\n\n    /**\n     * Execute each of the listeners in the given order with the supplied arguments.\n     *\n     * @param {string} name event identifier\n     *\n     * @example\n     * emitter.emit('init');\n     * emitter.emit('click', {src: panel1, dst: panel2});\n     * emitter.emit('load', error, data);\n     *\n     * // it's a good idea to emit event only when there are some listeners\n     * if ( this.events['click'] ) {\n     *     this.emit('click', {event: event});\n     * }\n     */\n    emit: function ( name ) {\n        var event = this.events[name],\n            index;\n\n        if ( DEVELOP ) {\n            if ( arguments.length < 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( event ) {\n            if ( DEVELOP ) {\n                if ( !Array.isArray(event) ) {\n                    throw new Error(__filename + ': wrong event type');\n                }\n            }\n\n            for ( index = 0; index < event.length; index++ ) {\n                if ( DEVELOP ) {\n                    if ( typeof event[index] !== 'function' ) {\n                        throw new Error(__filename + ': wrong event callback type');\n                    }\n                }\n\n                // invoke the callback with parameters\n                event[index].apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n    }\n};\n\n\n// correct constructor name\nEmitter.prototype.constructor = Emitter;\n\n\n// public\nmodule.exports = Emitter;\n","/**\n * @module cjs-async/serial\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n/**\n * Method to be called to set task as completed.\n *\n * @callback onTaskFinishCallback\n *\n * @param {boolean} error status of the task execution\n * @param {Array} result data to return from the task\n */\n\n/**\n * Task method to be executed.\n *\n * @callback taskHandler\n *\n * @param {module:cjs-async/serial~onTaskFinishCallback} [callback] method to be called to set task as completed\n *\n * @example\n * function ( callback ) {\n *     callback(null, true);\n * }\n */\n\n/**\n * Method to be called on all given tasks completion.\n *\n * @callback onFinishCallback\n *\n * @param {boolean} error status of all tasks execution\n * @param {Array} result data received from all tasks\n */\n\n/**\n * Serial tasks execution.\n *\n * @param {module:cjs-async/serial~taskHandler[]} tasks set of tasks to execute\n * @param {module:cjs-async/serial~onFinishCallback} [callback] optional callback to run once all the tasks have completed\n *\n * @example\n * serial(taskList, function ( error, results ) {\n *     console.log(error, results);\n * });\n */\nmodule.exports = function ( tasks, callback ) {\n    var isError = false,\n        counter = 0,\n        results = [];\n\n    function handler ( task ) {\n        var done = function ( error, result ) {\n            if ( error ) {\n                // exit this task\n                // and prevent other to callback\n                isError = true;\n\n                callback(error);\n\n                return;\n            }\n\n            // fill results\n            results[counter] = result;\n\n            counter++;\n\n            // all tasks are processed\n            if ( counter >= tasks.length ) {\n                callback(null, results);\n            } else {\n                handler(tasks[counter]);\n            }\n        };\n\n        // error happened in some other task\n        if ( isError ) {\n            // callback was already used\n            return;\n        }\n\n        // actual call condition\n        if ( task.length === 0 ) {\n            done(null, task());\n        } else {\n            task(done);\n        }\n    }\n\n    // sanitize task list\n    tasks = Array.isArray(tasks) ? tasks : [];\n\n    // sanitize final handler\n    if ( typeof callback !== 'function' ) {\n        callback = function () { /* just in case */ };\n    }\n\n    // no tasks were given\n    if ( tasks.length === 0 ) {\n        // empty result\n        callback(null, results);\n    } else {\n        // run the first task\n        handler(tasks[0]);\n    }\n};\n","/**\n * Global list of non-printable control key codes.\n *\n * At the moment `keypress` and `keydown` events are emitted for the same keys (for both printable and non-printable characters).\n *\n * WARNING!!! All codes in this file (except 'volumeUp' and 'volumeDown')\n * are used in window 'keydown' handler to prevent wrong 'keypress' firings.\n * If you add new code to this file 'keypress' event with this code will never fire.\n *\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar keys = require('spa-keys');\n\n\n// extend with additional codes\nkeys.back         = keys.backspace;\nkeys.channelNext  = keys.tab;        // Tab\nkeys.channelPrev  = keys.tab + 's';  // Shift+Tab\nkeys.ok           = keys.enter;      // Enter\nkeys.exit         = keys.escape;     // Esc\nkeys.volumeUp     = 107;             // NUMPAD +\nkeys.volumeDown   = 109;             // NUMPAD -\nkeys.f1           = 112 + 'c';       // Ctrl+F1\nkeys.f2           = 113 + 'c';       // Ctrl+F2\nkeys.f3           = 114 + 'c';       // Ctrl+F3\nkeys.f4           = 115 + 'c';       // Ctrl+F4\nkeys.refresh      = 116 + 'c';       // Ctrl+F5\nkeys.frame        = 117 + 'c';       // Ctrl+F6\nkeys.phone        = 119 + 'c';       // Ctrl+F8\nkeys.set          = 120 + 'c';       // Ctrl+F9\nkeys.tv           = 121 + 'c';       // Ctrl+F10\nkeys.menu         = 122 + 'c';       // Ctrl+F11\nkeys.app          = 123 + 'c';       // Ctrl+F12\nkeys.rewind       = 66  + 'a';       // Alt+B\nkeys.forward      = 70  + 'a';       // Alt+F\nkeys.audio        = 71  + 'a';       // Alt+G\nkeys.standby      = 74  + 'a';       // Alt+J\nkeys.keyboard     = 76  + 'a';       // Alt+L\nkeys.usbMounted   = 80  + 'a';       // Alt+P\nkeys.usbUnmounted = 81  + 'a';       // Alt+Q\nkeys.playPause    = 82  + 'a';       // Alt+R\nkeys.play         = -1;              // should be redefined on some platforms\nkeys.pause        = -1;              // should be redefined on some platforms\nkeys.stop         = 83  + 'a';       // Alt+S\nkeys.power        = 85  + 'a';       // Alt+U\nkeys.record       = 87  + 'a';       // Alt+W\nkeys.info         = 89  + 'a';       // Alt+Y\nkeys.mute         = 192 + 'a';\nkeys.digit0       = 48;\nkeys.digit1       = 49;\nkeys.digit2       = 50;\nkeys.digit3       = 51;\nkeys.digit4       = 52;\nkeys.digit5       = 53;\nkeys.digit6       = 54;\nkeys.digit7       = 55;\nkeys.digit8       = 56;\nkeys.digit9       = 57;\n\n\n// public\nmodule.exports = keys;\n\n// public\n// module.exports = {\n//     getCode: function ( event ) {\n//         var code = event.keyCode;\n//\n//         // apply key modifiers\n//         if ( event.shiftKey ) { code += 1000; }\n//         if ( event.altKey )   { code += 2000; }\n//\n//         return code;\n//     },\n//\n//     codes: {\n//         back:         8,    // Backspace\n//         channelPrev:  1009, // Shift+Tab\n//         channelNext:  9,    // Tab\n//         ok:           13,   // Enter\n//         exit:         27,   // Esc\n//         pageUp:       33,\n//         pageDown:     34,\n//         end:          35,\n//         home:         36,\n//         left:         37,\n//         up:           38,\n//         right:        39,\n//         down:         40,\n//         'delete':     46,\n//         volumeUp:     107,  // NUMPAD +\n//         volumeDown:   109,  // NUMPAD -\n//         f1:           112,  // F1\n//         f2:           113,  // F2\n//         f3:           114,  // F3\n//         f4:           115,  // F4\n//         refresh:      116,  // F5\n//         frame:        117,  // F6\n//         phone:        119,  // F8\n//         set:          120,  // F9\n//         tv:           121,  // F10\n//         menu:         122,  // F11\n//         app:          123,  // F12\n//         rewind:       2066, // Alt+B\n//         forward:      2070, // Alt+F\n//         audio:        2071, // Alt+G\n//         standby:      2074, // Alt+J\n//         keyboard:     2076, // Alt+L\n//         usbMounted:   2080, // Alt+P\n//         usbUnmounted: 2081, // Alt+Q\n//         playPause:    2082, // Alt+R\n//         stop:         2083, // Alt+S\n//         power:        2085, // Alt+U\n//         record:       2087, // Alt+W\n//         info:         2089, // Alt+Y\n//         mute:         2192\n//     }\n// };\n","/**\n * Global list of non-printable control key codes.\n *\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    backspace: 8,\n    tab:       9,\n    enter:     13,\n    escape:    27,\n    space:     32,\n    pageUp:    33,\n    pageDown:  34,\n    end:       35,\n    home:      36,\n    left:      37,\n    up:        38,\n    right:     39,\n    down:      40,\n    insert:    45,\n    // not \"delete\" because of old browsers issue\n    del:       46\n};\n"],"sourceRoot":""}