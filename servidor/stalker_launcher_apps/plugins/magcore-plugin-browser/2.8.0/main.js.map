{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/main.js","webpack:///./src/js/messages.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","listener","Browser","config","self","this","isKilled","standalone","options","set","callback","stbEvent","addListener","event","data","messagesToApp","messages","toApp","JSON","parse","error","message","openTaskManager","gSTB","EnableVKButton","HideVirtualKeyboard","openSettings","notification","favoritesState","setFavicon","unsetFavicon","setLoadProgress","changeUrl","openMenu","stbWindowMgr","GetFocusedInputInfo","reload","ready","home","back","exit","windowId","search","mediaAvailable","window","onunload","sendMessage","stbWebWindow","messageSend","stringify","windowID","CloseWebWindow","closeWindow","standaloneModePortalWindowId","removeListener","initRegular","engine","core","packages","filter","pkg","type","purpose","url","length","substring","forEach","param","idx","keyValue","Array","isArray","String","openWebFace","windowHide","initStandalone","location","protocol","host","pathname","hash","split","map","item","decodeURIComponent","join","windowInit","x","y","width","screen","height","visible","stbStorage","setItem","getItem","showPortalWindow","onAppInit","messageTypes","toEngine","keys","messageReceiver","reduce"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * MAGSDK basic implementation of browser plugin.\n */\n\n'use strict';\n\nvar listener;\n\n\n/**\n * @constructor\n *\n * @param {Object} config - data for constructor\n */\nfunction Browser ( config ) {\n    var self = this;\n\n    this.isKilled = false;\n    this.standalone = (config.options || {}).standalone;\n\n    /**\n     * Get message from browser engine\n     */\n    Object.defineProperty(this, 'onMessageReceive', { // eslint-disable-line\n        set: function ( callback ) {\n            stbEvent.addListener('message', listener = function ( event ) {\n                var messagesToApp = self.messages.toApp,\n                    data;\n\n                try {\n                    data = JSON.parse(event.data);\n                } catch ( error ) {\n                    data = event.data;\n                }\n\n                switch ( event.message ) {\n                    case messagesToApp.openTaskManager:\n                        gSTB.EnableVKButton(false);\n                        gSTB.HideVirtualKeyboard();\n\n                        callback({message: messagesToApp.openTaskManager});\n                        break;\n                    case messagesToApp.openSettings:\n                        gSTB.EnableVKButton(false);\n                        gSTB.HideVirtualKeyboard();\n\n                        callback({message: messagesToApp.openSettings});\n                        break;\n                    case messagesToApp.notification:\n                        callback({message: messagesToApp.notification, data: data});\n                        break;\n                    case messagesToApp.favoritesState:\n                        callback({message: messagesToApp.favoritesState, data: data});\n                        break;\n                    case messagesToApp.setFavicon:\n                        callback({message: messagesToApp.setFavicon});\n                        break;\n                    case messagesToApp.unsetFavicon:\n                        callback({message: messagesToApp.unsetFavicon});\n                        break;\n                    case messagesToApp.setLoadProgress:\n                        callback({message: messagesToApp.setLoadProgress, data: data});\n                        break;\n                    case messagesToApp.changeUrl:\n                        callback({message: messagesToApp.changeUrl, data: data});\n                        break;\n                    case messagesToApp.openMenu:\n                        gSTB.EnableVKButton(false);\n                        gSTB.HideVirtualKeyboard();\n\n                        callback({message: messagesToApp.openMenu, data: stbWindowMgr.GetFocusedInputInfo()});\n                        break;\n                    case messagesToApp.reload:\n                        callback({message: messagesToApp.reload, data: data});\n                        break;\n                    case messagesToApp.ready:\n                        callback({message: messagesToApp.ready});\n                        break;\n                    case messagesToApp.home:\n                        gSTB.EnableVKButton(false);\n                        gSTB.HideVirtualKeyboard();\n\n                        callback({message: messagesToApp.home});\n                        break;\n                    case messagesToApp.back:\n                        gSTB.EnableVKButton(false);\n                        gSTB.HideVirtualKeyboard();\n\n                        self.exit(event.windowId);\n                        callback({message: messagesToApp.back});\n                        break;\n                    case messagesToApp.search:\n                        gSTB.EnableVKButton(false);\n                        gSTB.HideVirtualKeyboard();\n\n                        callback({message: messagesToApp.search});\n                        break;\n                    case messagesToApp.mediaAvailable:\n                        gSTB.EnableVKButton(false);\n                        gSTB.HideVirtualKeyboard();\n\n                        callback({message: messagesToApp.mediaAvailable, data: data});\n                        break;\n                }\n            });\n        }\n    });\n\n    window.onunload = this.exit;\n}\n\n\n/**\n * Send message to browser engine.\n *\n * @param {string} message - message to send in special format/information type\n * @param {*} [data] - data for transmission itself\n */\nBrowser.prototype.sendMessage = function ( message, data ) {\n    stbWebWindow.messageSend(this.windowId, message, typeof data === 'object' ? JSON.stringify(data) : data);\n};\n\n\n/**\n * Full exit.\n *\n * @param {number} windowID - ID of window to close\n */\nBrowser.prototype.exit = function ( windowID ) {\n    if ( !this.isKilled ) {\n        gSTB.CloseWebWindow();\n        stbWindowMgr.closeWindow(windowID || this.windowId);\n\n        if ( this.standalone ) {\n            stbWindowMgr.closeWindow(this.standaloneModePortalWindowId);\n        }\n\n        stbEvent.removeListener('message', listener);\n        this.isKilled = true;\n    }\n};\n\n\n/**\n * Initialize browser engine.\n *\n * @param {Object} [config] - url for passing into stbWindowMgr.openWebFace instead of built-in\n */\nBrowser.prototype.initRegular = function ( config ) {\n    var engine = core.packages.filter(function ( pkg ) {\n        return pkg.type === 'browser-engine';\n    })[0];\n\n    if ( config ) {\n        if ( config.purpose === 'parameter' ) {\n            if ( engine.url[engine.url.length - 1] === '/' ) {\n                engine.url = engine.url.substring(0, engine.url.length - 1);\n            }\n\n            engine.url += '?';\n\n            config.data.forEach(function ( param, idx ) {\n                var keyValue = Array.isArray(param) ? param[0] + '=' + param[1] : param;\n\n                engine.url += (idx === config.data.length - 1) ? keyValue : keyValue + '&';\n            });\n        } else {\n            // full replacement\n            engine.url = String(config.data);\n        }\n    }\n\n    this.windowId = stbWindowMgr.openWebFace(engine.url);\n    stbWindowMgr.windowHide(this.windowId);\n};\n\n\n/**\n * Initialize browser engine in standalone mode.\n */\nBrowser.prototype.initStandalone = function () {\n    var url = location.protocol + '//' + location.host + location.pathname,\n        urlParts, windowId;\n\n    if ( window.location.hash === '#standaloneOff' ) {\n        this.initRegular({\n            purpose: 'parameter',\n            data: [['portalWindowId', this.standaloneModePortalWindowId = +stbStorage.getItem('standaloneModePortalWindowId')]]\n        });\n\n        return;\n    }\n\n    if ( location.search ) {\n        urlParts = location.search.substring(0).split('&');\n        urlParts = urlParts.map(function ( item ) {\n            return decodeURIComponent(item);\n        });\n\n        url += '?' + urlParts.join('&');\n    }\n\n    windowId = stbWindowMgr.windowInit(JSON.stringify({\n        url: url + '#standaloneOff',\n        x: 0,\n        y: 0,\n        width: screen.width,\n        height: screen.height,\n        visible: true\n    }));\n\n    stbStorage.setItem('standaloneModePortalWindowId', windowId);\n};\n\n\n/**\n * Make the \"Internal Portal\" window active.\n */\nBrowser.prototype.showPortalWindow = function () {\n    stbWindowMgr.showPortalWindow();\n};\n\n\n/**\n * Define whole set of messages for communication between browser app and its engine part.\n */\nBrowser.prototype.messages = require('./messages');\n\n\nmodule.exports = {\n    onAppInit: function ( config, callback ) {\n        // dome some asynchronous operations\n        callback(null, new Browser(config));\n    }\n};\n","/**\n * Define whole set of messages for communication between browser app and its engine part.\n */\n\n'use strict';\n\nvar messageTypes = {\n    toEngine: [\n        'reload',\n        'stopLoad',\n        'navigateForward',\n        'navigateBackward',\n        'hideWebWindow',\n        'openVirtualKeyboard',\n        'search',\n        'setFullScreen',\n        'userTextInput',\n        'userSettings',\n        'showWebWindow',\n        'intentUrl'\n    ],\n    toApp: [\n        'ready',\n        'openTaskManager',\n        'openMenu',\n        'home',\n        'back',\n        'search',\n        'openSettings',\n        'notification',\n        'favoritesState',\n        'setFavicon',\n        'unsetFavicon',\n        'setLoadProgress',\n        'changeUrl',\n        'reload',\n        'mediaAvailable'\n    ]\n};\n\nObject.keys(messageTypes).forEach(function ( messageReceiver ) {\n    messageTypes[messageReceiver] = messageTypes[messageReceiver].reduce(function ( messages, message ) {\n        messages[message] = message;\n\n        return messages;\n    }, {});\n});\n\n\nmodule.exports = messageTypes;\n"],"sourceRoot":""}