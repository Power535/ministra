{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/spa-app/lib/core.js","webpack:///./node_modules/stb-keys/index.js","webpack:///./node_modules/mag-app/index.js","webpack:///./node_modules/cjs-emitter/index.js","webpack:///./node_modules/spa-component/index.js","webpack:///./node_modules/stb-component/index.js","webpack:///./node_modules/stb-app/lib/css.js","webpack:///./node_modules/stb-component-page/index.js","webpack:///./node_modules/mag-component-layout-list/index.js","webpack:///./src/js/main.js","webpack:///./node_modules/mag-app/lib/main.js","webpack:///./node_modules/cjs-query/index.js","webpack:///./src/js/config.js","webpack:///./node_modules/spa-app/lib/events.js","webpack:///./node_modules/stb-shim-classlist/index.js","webpack:///./node_modules/stb-app/lib/metrics.js","webpack:///./src/js/metrics.js","webpack:///./node_modules/mag-app/lib/css.js","webpack:///./node_modules/spa-gettext/index.js","webpack:///./node_modules/cjs-gettext/index.js","webpack:///./src/js/pages/main.js","webpack:///./node_modules/spa-component-page/index.js","webpack:///./node_modules/spa-keys/index.js","webpack:///./src/js/modules/menu.js","webpack:///./node_modules/mag-component-list/index.js","webpack:///./node_modules/mag-component-layout/index.js","webpack:///./src/js/modules/player.panel.js","webpack:///./src/js/modules/runner.js","webpack:///./src/js/pages/clear.js","webpack:///./node_modules/stb-component-panel/index.js","webpack:///./node_modules/spa-component-panel/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Emitter","parse","app","query","document","location","search","substring","config","activePage","route","pageTo","data","page","pageFrom","active","id","$node","classList","remove","events","emit","add","showPage","this","from","to","keys","back","backspace","channelNext","tab","channelPrev","ok","enter","exit","escape","volumeUp","volumeDown","f1","f2","f3","f4","refresh","frame","phone","set","tv","menu","rewind","forward","audio","standby","keyboard","usbMounted","usbUnmounted","playPause","play","pause","stop","power","record","info","mute","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","addListener","callback","push","once","self","onceWrapper","removeListener","apply","arguments","addListeners","callbacks","filter","fn","length","undefined","index","event","Array","slice","constructor","counter","Component","visible","focusable","$body","parent","children","propagate","createElement","className","hide","defaultEvents","forEach","eventName","addEventListener","focus","stopPropagation","child","parentNode","appendChild","item","activeComponent","blur","splice","indexOf","removeChild","activeItem","show","setTimeout","link","rel","href","metrics","height","head","List","Layout","LayoutList","handlers","links","$noData","fixedData","$item","layout","inner","focusIndex","focusItem","renderItemDefault","layoutConfig","currentNode","currentData","ready","items","childNodes","innerText","firstChild","$parentItem","click","setData","init","$wrap","noData","innerHTML","Element","renderItem","load","core","environment","language","error","pages","main","clear","window","getCoreInstance","platform","body","setAttribute","type","contextmenu","preventDefault","split","part","decodeURIComponent","stringify","params","encodeURIComponent","join","DOMContentLoaded","unload","keydown","eventLocal","code","keyCode","ctrlKey","altKey","shiftKey","keypress","mousewheel","documentElement","DOMTokenList","el","_element","_classCache","classes","replace","token","contains","toString","toggle","screenHeight","screen","availHeight","availTop","availBottom","availWidth","width","availLeft","availRight","480","576","720","1080","linkCSS","theme","path","Gettext","loader","prepare","gettext","_","pgettext","ngettext","defaultLanguage","xhr","ext","XMLHttpRequest","onload","JSON","responseText","onerror","ontimeout","open","send","meta","msgId","context","plural","evalResult","eval","currentPlayIntent","player","mainMenu","getElementById","Menu","PlayerPanel","runner","$title","$mediaInfo","codec","lang","$img","rotate","random","slideShow","timeout","current","modes","timer","buttons","$playPauseBtn","setSlideShowTimeout","nextPrevContent","clearTimeout","state","resetInfo","next","prev","style","webkitTransform","$rightText","background","src","slideshow","icon","title","buttonName","$text","$icon","size","up","onPlay","onPrevNext","direction","right","left","onRotate","fnConfig","styleString","transform","down","intent","action","currentIntent","uri","$focusItem","disabled","totalCount","currentPosition","notify","startPlay","pageDown","pageUp","Page","space","end","home","insert","del","normalize","result","TYPE_HORIZONTAL","viewIndex","TYPE_VERTICAL","cycle","scroll","provider","wheelDeltaY","move","wheelDeltaX","idx","currSize","onClick","render","blocked","realSize","maxCount","viewSize","pos","blurItem","renderView","itemData","prevIndex","currIndex","mark","scrollTo","force","previousSibling","lastChild","nextSibling","$prev","$curr","markItem","$wrapper","HTMLElement","wrap","componentClickHandler","textContent","Player","$buttonsWrapper","$leftText","getElementsByClassName","initButtons","enabledCount","cache","encodeURI","Image","panel","Panel","close"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    parse   = require('cjs-query').parse,\n    app     = new Emitter();\n\n\n/**\n * Make the given inactive/hidden page active/visible.\n * Pass some data to the page and trigger the corresponding event.\n *\n * @param {Page} page item to show\n * @param {*} [data] data to send to page\n *\n * @return {boolean} operation status\n */\nfunction showPage ( page, data ) {\n    // page available and can be hidden\n    if ( page && !page.active ) {\n        // apply visibility\n        page.$node.classList.add('active');\n        page.active = true;\n        app.activePage = page;\n\n        debug.info('show component ' + page.name + '#' + page.id, null, {\n            tags: ['show', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' show', 'green');\n\n        // there are some listeners\n        if ( page.events['show'] ) {\n            // notify listeners\n            page.emit('show', {data: data});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n/**\n * Make the given active/visible page inactive/hidden and trigger the corresponding event.\n *\n * @param {Page} page item to hide\n *\n * @return {boolean} operation status\n */\nfunction hidePage ( page ) {\n    // page available and can be hidden\n    if ( page && page.active ) {\n        // apply visibility\n        page.$node.classList.remove('active');\n        page.active  = false;\n        app.activePage = null;\n\n        debug.info('hide component ' + page.name + '#' + page.id, null, {\n            tags: ['hide', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' hide', 'grey');\n\n        // there are some listeners\n        if ( page.events['hide'] ) {\n            // notify listeners\n            page.emit('hide');\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n// url request params\napp.query = parse(document.location.search.substring(1));\n\n\n// global application configuration\n// in config.js file in js root\napp.config = require('app:config');\n\n\n// the only visible page\napp.activePage = null;\n\n\n/**\n * Browse to a given page.\n * Do nothing if the link is invalid. Otherwise hide the current, show new and update the \"previous\" link.\n *\n * @param {Page} pageTo instance of the page to show\n * @param {*} [data] options to pass to the page on show\n *\n * @return {boolean} operation status\n */\napp.route = function ( pageTo, data ) {\n    var pageFrom = app.activePage;\n\n    if ( DEVELOP ) {\n        //if ( router.pages.length > 0 ) {\n        if ( !pageTo || typeof pageTo !== 'object' ) {\n            throw new Error(__filename + ': wrong pageTo type');\n        }\n        if ( !('active' in pageTo) ) {\n            throw new Error(__filename + ': missing field \"active\" in pageTo');\n        }\n        //}\n    }\n\n    // valid not already active page\n    if ( pageTo && !pageTo.active ) {\n        //debug.log('router.navigate: ' + pageTo.id, pageTo === pageFrom ? 'grey' : 'green');\n        debug.info('app route: ' + pageTo.name + '#' + pageTo.id, null, {tags: ['route', pageTo.name, pageTo.id]});\n\n        // update url\n        //location.hash = this.stringify(name, data);\n\n        // apply visibility\n        hidePage(app.activePage);\n        showPage(pageTo, data);\n\n        // there are some listeners\n        if ( this.events['route'] ) {\n            // notify listeners\n            this.emit('route', {from: pageFrom, to: pageTo});\n        }\n\n        // store\n        //this.history.push(pageTo);\n\n        return true;\n    }\n\n    //debug.warn('invalid page to route: ' + pageTo.id, null, {tags: ['route', 'page', pageTo.id]});\n    console.warn('invalid page to route: ' + pageTo.id);\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = app;\n","/**\n * Global list of non-printable control key codes.\n *\n * At the moment `keypress` and `keydown` events are emitted for the same keys (for both printable and non-printable characters).\n *\n * WARNING!!! All codes in this file (except 'volumeUp' and 'volumeDown')\n * are used in window 'keydown' handler to prevent wrong 'keypress' firings.\n * If you add new code to this file 'keypress' event with this code will never fire.\n *\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar keys = require('spa-keys');\n\n\n// extend with additional codes\nkeys.back         = keys.backspace;\nkeys.channelNext  = keys.tab;        // Tab\nkeys.channelPrev  = keys.tab + 's';  // Shift+Tab\nkeys.ok           = keys.enter;      // Enter\nkeys.exit         = keys.escape;     // Esc\nkeys.volumeUp     = 107;             // NUMPAD +\nkeys.volumeDown   = 109;             // NUMPAD -\nkeys.f1           = 112 + 'c';       // Ctrl+F1\nkeys.f2           = 113 + 'c';       // Ctrl+F2\nkeys.f3           = 114 + 'c';       // Ctrl+F3\nkeys.f4           = 115 + 'c';       // Ctrl+F4\nkeys.refresh      = 116 + 'c';       // Ctrl+F5\nkeys.frame        = 117 + 'c';       // Ctrl+F6\nkeys.phone        = 119 + 'c';       // Ctrl+F8\nkeys.set          = 120 + 'c';       // Ctrl+F9\nkeys.tv           = 121 + 'c';       // Ctrl+F10\nkeys.menu         = 122 + 'c';       // Ctrl+F11\nkeys.app          = 123 + 'c';       // Ctrl+F12\nkeys.rewind       = 66  + 'a';       // Alt+B\nkeys.forward      = 70  + 'a';       // Alt+F\nkeys.audio        = 71  + 'a';       // Alt+G\nkeys.standby      = 74  + 'a';       // Alt+J\nkeys.keyboard     = 76  + 'a';       // Alt+L\nkeys.usbMounted   = 80  + 'a';       // Alt+P\nkeys.usbUnmounted = 81  + 'a';       // Alt+Q\nkeys.playPause    = 82  + 'a';       // Alt+R\nkeys.play         = -1;              // should be redefined on some platforms\nkeys.pause        = -1;              // should be redefined on some platforms\nkeys.stop         = 83  + 'a';       // Alt+S\nkeys.power        = 85  + 'a';       // Alt+U\nkeys.record       = 87  + 'a';       // Alt+W\nkeys.info         = 89  + 'a';       // Alt+Y\nkeys.mute         = 192 + 'a';\nkeys.digit0       = 48;\nkeys.digit1       = 49;\nkeys.digit2       = 50;\nkeys.digit3       = 51;\nkeys.digit4       = 52;\nkeys.digit5       = 53;\nkeys.digit6       = 54;\nkeys.digit7       = 55;\nkeys.digit8       = 56;\nkeys.digit9       = 57;\n\n\n// public\nmodule.exports = keys;\n\n// public\n// module.exports = {\n//     getCode: function ( event ) {\n//         var code = event.keyCode;\n//\n//         // apply key modifiers\n//         if ( event.shiftKey ) { code += 1000; }\n//         if ( event.altKey )   { code += 2000; }\n//\n//         return code;\n//     },\n//\n//     codes: {\n//         back:         8,    // Backspace\n//         channelPrev:  1009, // Shift+Tab\n//         channelNext:  9,    // Tab\n//         ok:           13,   // Enter\n//         exit:         27,   // Esc\n//         pageUp:       33,\n//         pageDown:     34,\n//         end:          35,\n//         home:         36,\n//         left:         37,\n//         up:           38,\n//         right:        39,\n//         down:         40,\n//         'delete':     46,\n//         volumeUp:     107,  // NUMPAD +\n//         volumeDown:   109,  // NUMPAD -\n//         f1:           112,  // F1\n//         f2:           113,  // F2\n//         f3:           114,  // F3\n//         f4:           115,  // F4\n//         refresh:      116,  // F5\n//         frame:        117,  // F6\n//         phone:        119,  // F8\n//         set:          120,  // F9\n//         tv:           121,  // F10\n//         menu:         122,  // F11\n//         app:          123,  // F12\n//         rewind:       2066, // Alt+B\n//         forward:      2070, // Alt+F\n//         audio:        2071, // Alt+G\n//         standby:      2074, // Alt+J\n//         keyboard:     2076, // Alt+L\n//         usbMounted:   2080, // Alt+P\n//         usbUnmounted: 2081, // Alt+Q\n//         playPause:    2082, // Alt+R\n//         stop:         2083, // Alt+S\n//         power:        2085, // Alt+U\n//         record:       2087, // Alt+W\n//         info:         2089, // Alt+Y\n//         mute:         2192\n//     }\n// };\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar app = require('./lib/main');\n\n\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Base Events Emitter implementation.\n *\n * @see http://nodejs.org/api/events.html\n * @constructor\n *\n * @example\n * var emitter = new Emitter();\n */\nfunction Emitter () {\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // if ( DEVELOP ) {\n    //     if ( typeof this !== 'object' ) { throw new Error(__filename + ': must be constructed via new'); }\n    // }\n\n    /**\n     * Inner hash table for event names and linked callbacks.\n     * Manual editing should be avoided.\n     *\n     * @member {Object.<string, function[]>}\n     *\n     * @example\n     * {\n     *     click: [\n     *         function click1 () { ... },\n     *         function click2 () { ... }\n     *     ],\n     *     keydown: [\n     *         function () { ... }\n     *     ]\n     * }\n     **/\n    this.events = {};\n}\n\n\nEmitter.prototype = {\n    /**\n     * Bind an event to the given callback function.\n     * The same callback function can be added multiple times for the same event name.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.addListener('click', function ( data ) { ... });\n     * // one more click handler\n     * emitter.addListener('click', function ( data ) { ... });\n     */\n    addListener: function ( name, callback ) {\n        console.assert(arguments.length === 2, 'wrong arguments number');\n        console.assert(typeof name === 'string', 'wrong name type');\n        console.assert(name.length > 0, 'empty name');\n        console.assert(typeof callback === 'function', 'callback should be a function');\n\n        // if ( DEVELOP ) {\n        //     if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        //     if ( typeof name !== 'string' || name.length === 0 ) { throw new Error(__filename + ': wrong or empty name'); }\n        //     if ( typeof callback !== 'function' ) { throw new Error(__filename + ': wrong callback type'); }\n        // }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(callback);\n    },\n\n\n    /**\n     * Add a one time listener for the event.\n     * This listener is invoked only the next time the event is fired, after which it is removed.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.once('click', function ( data ) { ... });\n     */\n    once: function ( name, callback ) {\n        // current execution context\n        var self = this;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n        }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(function onceWrapper () {\n            self.removeListener(name, onceWrapper);\n            callback.apply(self, arguments);\n        });\n    },\n\n\n    /**\n     * Apply multiple listeners at once.\n     *\n     * @param {Object} callbacks event names with callbacks\n     *\n     * @example\n     * emitter.addListeners({\n     *     click: function ( data ) {},\n     *     close: function ( data ) {}\n     * });\n     */\n    addListeners: function ( callbacks ) {\n        var name;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof callbacks !== 'object' ) {\n                throw new Error(__filename + ': wrong callbacks type');\n            }\n            if ( Object.keys(callbacks).length === 0 ) {\n                throw new Error(__filename + ': no callbacks given');\n            }\n        }\n\n        for ( name in callbacks ) {\n            if ( callbacks.hasOwnProperty(name) ) {\n                this.addListener(name, callbacks[name]);\n            }\n        }\n    },\n\n\n    /**\n     * Remove all instances of the given callback.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to remove\n     *\n     * @example\n     * emitter.removeListener('click', func1);\n     */\n    removeListener: function ( name, callback ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n            if ( this.events[name] && !Array.isArray(this.events[name]) ) {\n                throw new Error(__filename + ': corrupted inner data');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( this.events[name] ) {\n            // rework the callback list to exclude the given one\n            this.events[name] = this.events[name].filter(function callbacksFilter ( fn ) { return fn !== callback; });\n            // event has no more callbacks so clean it\n            if ( this.events[name].length === 0 ) {\n                // as if there were no listeners at all\n                this.events[name] = undefined;\n            }\n        }\n    },\n\n\n    /**\n     * Remove all callbacks for the given event name.\n     * Without event name clears all events.\n     *\n     * @param {string} [name] event identifier\n     *\n     * @example\n     * emitter.removeAllListeners('click');\n     * emitter.removeAllListeners();\n     *\n     * @deprecated\n     */\n    /*removeAllListeners: function ( name ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 0 && (typeof name !== 'string' || name.length === 0) ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // check input\n        if ( arguments.length === 0 ) {\n            // no arguments so remove everything\n            this.events = {};\n        } else if ( name ) {\n            if ( DEVELOP ) {\n                if ( this.events[name] ) { throw new Error(__filename + ': event is not removed'); }\n            }\n\n            // only name is given so remove all callbacks for the given event\n            // but object structure modification should be avoided\n            this.events[name] = undefined;\n        }\n    },*/\n\n\n    /**\n     * Execute each of the listeners in the given order with the supplied arguments.\n     *\n     * @param {string} name event identifier\n     *\n     * @example\n     * emitter.emit('init');\n     * emitter.emit('click', {src: panel1, dst: panel2});\n     * emitter.emit('load', error, data);\n     *\n     * // it's a good idea to emit event only when there are some listeners\n     * if ( this.events['click'] ) {\n     *     this.emit('click', {event: event});\n     * }\n     */\n    emit: function ( name ) {\n        var event = this.events[name],\n            index;\n\n        if ( DEVELOP ) {\n            if ( arguments.length < 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( event ) {\n            if ( DEVELOP ) {\n                if ( !Array.isArray(event) ) {\n                    throw new Error(__filename + ': wrong event type');\n                }\n            }\n\n            for ( index = 0; index < event.length; index++ ) {\n                if ( DEVELOP ) {\n                    if ( typeof event[index] !== 'function' ) {\n                        throw new Error(__filename + ': wrong event callback type');\n                    }\n                }\n\n                // invoke the callback with parameters\n                event[index].apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n    }\n};\n\n\n// correct constructor name\nEmitter.prototype.constructor = Emitter;\n\n\n// public\nmodule.exports = Emitter;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    Emitter = require('cjs-emitter'),\n    counter = 0;\n\n\n/**\n * Base component implementation.\n *\n * Visual element that can handle sub-components.\n * Each component has a DOM element container $node with a set of classes:\n * \"component\" and some specific component class names depending on the hierarchy, for example \"page\".\n * Each component has a unique ID given either from $node.id or from data.id. If not given will generate automatically.\n *\n * @constructor\n * @extends Emitter\n *\n * @param {Object} [config={}] init parameters\n * @param {Element} [config.id] component unique identifier (generated if not set)\n * @param {string} [config.className] space-separated list of classes for \"className\" property of this.$node\n * @param {Element} [config.$node] DOM element/fragment to be a component outer container\n * @param {Element} [config.$body] DOM element/fragment to be a component inner container (by default is the same as $node)\n * @param {Component} [config.parent] link to the parent component which has this component as a child\n * @param {Array.<Component>} [config.children=[]] list of components in this component\n * @param {Object.<string, function>} [config.events={}] list of event callbacks\n * @param {boolean} [config.visible=true] component initial visibility state flag\n * @param {boolean} [config.focusable=true] component can accept focus or not\n * @param {boolean} [config.propagate=false] allow to emit events to the parent component\n *\n * @fires module:stb/component~Component#click\n *\n * @example\n * var component = new Component({\n *     $node: document.getElementById(id),\n *     className: 'bootstrap responsive',\n *     events: {\n *         click: function () { ... }\n *     }\n * });\n * component.add( ... );\n * component.focus();\n */\nfunction Component ( config ) {\n    // current execution context\n    var self = this,\n        name;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.id && typeof config.id !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.id');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$node && !(config.$node instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$node type');\n        }\n        if ( config.$body && !(config.$body instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$body type');\n        }\n        if ( config.parent && !(config.parent instanceof Component) ) {\n            throw new Error(__filename + ': wrong config.parent type');\n        }\n        if ( config.children && !Array.isArray(config.children) ) {\n            throw new Error(__filename + ': wrong config.children type');\n        }\n    }\n\n    /**\n     * Component visibility state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.visible = true;\n\n    /**\n     * Component can accept focus or not.\n     *\n     * @type {boolean}\n     */\n    this.focusable = true;\n\n    /**\n     * DOM outer handle.\n     *\n     * @type {Element}\n     */\n    this.$node = null;\n\n    /**\n     * DOM inner handle.\n     * In simple cases is the same as $node.\n     *\n     * @type {Element}\n     */\n    this.$body = null;\n\n    /**\n     * Link to the parent component which has this component as a child.\n     *\n     * @type {Component}\n     */\n    this.parent = null;\n\n    /**\n     * List of all children components.\n     *\n     * @type {Component[]}\n     */\n    this.children = [];\n\n    /**\n     * allow to emit events to the parent component\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.propagate = !!config.propagate;\n\n    // parent constructor call\n    Emitter.call(this);\n\n    // outer handle - empty div in case nothing is given\n    this.$node = config.$node || document.createElement('div');\n\n    // inner handle - the same as outer handler in case nothing is given\n    this.$body = config.$body || this.$node;\n\n    // set CSS class names\n    //this.$node.className += ' component ' + (config.className || '');\n    // previous approach is not good as it mess with components hierarchy\n    this.$node.className = this.name + ' ' + (config.className || '');\n\n    // apply component id if given, generate otherwise\n    this.id = config.id || this.$node.id || 'cid' + counter++;\n\n    // apply hierarchy\n    if ( config.parent ) {\n        // add to parent component\n        config.parent.add(this);\n    }\n\n    // apply given visibility\n    if ( config.visible === false ) {\n        // default state is visible\n        this.hide();\n    }\n\n    // apply focus handling method\n    if ( config.focusable === false ) {\n        // can't accept focus\n        this.focusable = false;\n    }\n\n    // a descendant defined own events\n    if ( this.defaultEvents ) {\n        // sanitize\n        config.events = config.events || {};\n\n        if ( DEVELOP ) {\n            if ( typeof config.events !== 'object' ) {\n                throw new Error(__filename + ': wrong config.events type');\n            }\n            if ( typeof this.defaultEvents !== 'object' ) {\n                throw new Error(__filename + ': wrong this.defaultEvents type');\n            }\n        }\n\n        for ( name in this.defaultEvents ) {\n            // overwrite default events with user-defined\n            config.events[name] = config.events[name] || this.defaultEvents[name];\n        }\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( eventName ) {\n            self.addListener(eventName, config.events[eventName]);\n        });\n    }\n\n    // apply the given children components\n    if ( config.children ) {\n        // apply\n        this.add.apply(this, config.children);\n    }\n\n    // component activation by mouse\n    this.$node.addEventListener('click', function ( event ) {\n        // left mouse button\n        //if ( event.button === 0 ) {\n        // activate if possible\n        self.focus();\n\n        // there are some listeners\n        if ( self.events['click'] ) {\n            /**\n             * Mouse click event.\n             *\n             * @event module:stb/component~Component#click\n             *\n             * @type {Object}\n             * @property {Event} event click event data\n             */\n            self.emit('click', event);\n        }\n        //}\n\n        if ( DEVELOP ) {\n            // middle mouse button\n            if ( event.button === 1 ) {\n                //debug.inspect(self, 0);\n                debug.info('\"window.link\" or \"' + self.id + '.component\"', 'this component is now available in global scope');\n                window.link = self;\n                self.$node.classList.toggle('wired');\n            }\n        }\n\n        event.stopPropagation();\n    });\n\n    if ( DEVELOP ) {\n        // expose inner ID to global scope\n        window[self.id] = self.$node;\n\n        // expose a link\n        this.$node.component = this.$body.component = this;\n        this.$node.title = this.name + '#' + this.id + ' (outer)';\n        this.$body.title = this.name + '#' + this.id + ' (inner)';\n    }\n\n    debug.info('create component ' + this.name + '#' + this.id, null, {\n        tags: ['create', 'component', this.name, this.id]\n    });\n}\n\n\n// inheritance\nComponent.prototype = Object.create(Emitter.prototype);\nComponent.prototype.constructor = Component;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nComponent.prototype.defaultEvents = null;\n\n\n/**\n * Add a new component as a child.\n *\n * @param {...Component} [child] variable number of elements to append\n *\n * @files Component#add\n *\n * @example\n * panel.add(\n *     new Button( ... ),\n *     new Button( ... )\n * );\n */\nComponent.prototype.add = function ( child ) {\n    var index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        child = arguments[index];\n\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        // apply\n        this.children.push(child);\n        child.parent = this;\n\n        // correct DOM parent/child connection if necessary\n        if ( child.$node && child.$node.parentNode === null ) {\n            this.$body.appendChild(child.$node);\n        }\n\n        debug.info('add component ' + child.name + '#' + child.id + ' to ' + this.name + '#' + this.id, null, {\n            tags: ['add', 'component', this.name, this.id, child.name, child.id]\n        });\n\n        // there are some listeners\n        if ( this.events['add'] ) {\n            /**\n             * A child component is added.\n             *\n             * @event module:stb/component~Component#add\n             *\n             * @type {Object}\n             * @property {Component} item new component added\n             */\n            this.emit('add', {item: child});\n        }\n\n        //debug.log('component ' + this.name + '#' + this.id + ' new child: ' + child.name + '#' + child.id);\n    }\n};\n\n\n/* @todo: consider activation in future */\n///**\n// * Insert component into the specific position.\n// *\n// * @param {Component} child component instance to insert\n// * @param {number} index insertion position\n// */\n//Component.prototype.insert = function ( child, index ) {\n//    var prevIndex = this.children.indexOf(child);\n//\n//    if ( DEVELOP ) {\n//        if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n//        if ( !(child instanceof Component) ) { throw new Error(__filename + ': wrong child type'); }\n//    }\n//\n//    if ( prevIndex !== -1 ) {\n//        this.children.splice(prevIndex, 1);\n//        this.$body.removeChild(child.$node);\n//    }\n//\n//    if ( index === this.children.length ) {\n//        this.$body.appendChild(child.$node);\n//    } else {\n//        this.$body.insertBefore(child.$node, this.$body.children[index]);\n//    }\n//    this.children.splice(index, 0, child);\n//\n//    if ( !child.parent ) {\n//        child.parent = this;\n//    }\n//};\n\n\n/**\n * Delete this component and clear all associated events.\n *\n * @fires module:stb/component~Component#remove\n */\nComponent.prototype.remove = function () {\n    // really inserted somewhere\n    if ( this.parent ) {\n        if ( DEVELOP ) {\n            if ( !(this.parent instanceof Component) ) {\n                throw new Error(__filename + ': wrong this.parent type');\n            }\n        }\n\n        // active at the moment\n        if ( app.activePage.activeComponent === this ) {\n            this.blur();\n            this.parent.focus();\n        }\n        this.parent.children.splice(this.parent.children.indexOf(this), 1);\n    }\n\n    // remove all children\n    this.children.forEach(function ( child ) {\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        child.remove();\n    });\n\n    this.$node.parentNode.removeChild(this.$node);\n\n    // there are some listeners\n    if ( this.events['remove'] ) {\n        /**\n         * Delete this component.\n         *\n         * @event module:stb/component~Component#remove\n         */\n        this.emit('remove');\n    }\n\n    // remove all listeners\n    this.events = {};\n\n    //debug.log('component ' + this.name + '#' + this.id + ' remove', 'red');\n    debug.info('remove component ' + this.name + '#' + this.id, null, {\n        tags: ['remove', 'component', this.name, this.id]\n    });\n};\n\n\n/**\n * Activate the component.\n * Notify the owner-page and apply CSS class.\n *\n * @param {Object} [data] custom data which passed into handlers\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#focus\n */\nComponent.prototype.focus = function ( data ) {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // this is a visual component on a page\n    // not already focused and can accept focus\n    if ( this.focusable && this !== activeItem ) {\n        // notify the current active component\n        if ( activeItem ) { activeItem.blur(); }\n\n        /* eslint consistent-this: 0 */\n\n        // apply\n        activePage.activeComponent = activeItem = this;\n        activeItem.$node.classList.add('focus');\n\n        //debug.log('component ' + this.name + '#' + this.id + ' focus');\n        debug.info('focus component ' + this.name + '#' + this.id, null, {\n            tags: ['focus', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( activeItem.events['focus'] ) {\n            /**\n             * Make this component focused.\n             *\n             * @event module:stb/component~Component#focus\n             */\n            activeItem.emit('focus', data);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Remove focus.\n * Change page.activeComponent and notify subscribers.\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#blur\n */\nComponent.prototype.blur = function () {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // apply visuals anyway\n    this.$node.classList.remove('focus');\n\n    // this is the active component\n    if ( this === activeItem ) {\n        activePage.activeComponent = null;\n\n        //debug.log('component ' + this.name + '#' + this.id + ' blur', 'grey');\n        debug.info('blur component ' + this.name + '#' + this.id, null, {\n            tags: ['blur', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['blur'] ) {\n            /**\n             * Remove focus from this component.\n             *\n             * @event module:stb/component~Component#blur\n             */\n            this.emit('blur');\n        }\n\n        return true;\n    }\n\n    debug.warn('component ' + this.name + '#' + this.id + ' attempt to blur without link to a page', null, {\n        tags: ['blur', 'component', this.name, this.id]\n    });\n\n    // nothing was done\n    return false;\n};\n\n\n/*function show ( self, data ) {\n    // correct style\n    self.$node.classList.remove('hidden');\n    // flag\n    self.visible = true;\n\n    debug.info('show component ' + self.name + '#' + self.id, null, {\n        tags: ['show', 'component', self.name, self.id]\n    });\n\n    // there are some listeners\n    if ( self.events['show'] ) {\n        /!**\n         * Make the component visible.\n         *\n         * @event module:stb/component~Component#show\n         *!/\n        self.emit('show', data);\n    }\n}*/\n\n/**\n * Make the component visible and notify subscribers.\n *\n * @param {Object} [data] custom data which passed into handlers\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#show\n */\nComponent.prototype.show = function ( data, callback ) {\n    //var self = this;\n\n    // is it hidden\n    if ( !this.visible ) {\n        /*if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(function () {\n                show(self, data);\n                callback();\n            });\n        } else {\n            // sync call\n            show(this, data);\n        }*/\n\n        // correct style\n        this.$node.classList.remove('hidden');\n        // flag\n        this.visible = true;\n\n        debug.info('show component ' + this.name + '#' + this.id, null, {\n            tags: ['show', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['show'] ) {\n            /**\n             * Make the component visible.\n             *\n             * @event module:stb/component~Component#show\n             */\n            this.emit('show', data);\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Make the component hidden and notify subscribers.\n *\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#hide\n */\nComponent.prototype.hide = function ( callback ) {\n    // is it visible\n    if ( this.visible ) {\n        // correct style\n        this.$node.classList.add('hidden');\n        // flag\n        this.visible = false;\n\n        debug.info('hide component ' + this.name + '#' + this.id, null, {\n            tags: ['hide', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['hide'] ) {\n            /**\n             * Make the component hidden.\n             *\n             * @event module:stb/component~Component#hide\n             */\n            this.emit('hide');\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = Component;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component');\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core');\n//    metrics = require('app:metrics'),\n//    linkCSS;\n\n\n// global link\n//app.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\n//app.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\n//app.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n// // set max browser window size\n// window.moveTo(0, 0);\n// window.resizeTo(metrics.width, metrics.height);\n\n// load CSS file base on resolution\n/*linkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = 'css/' + (DEVELOP ? 'develop.' : 'release.') + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);*/\n\n\n// public\nmodule.exports = function ( name ) {\n    var link = document.createElement('link');\n\n    link.rel  = 'stylesheet';\n    link.href = 'css/' + name + '.' + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\n    document.head.appendChild(link);\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-page');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-page';\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar List = require('mag-component-list'),\n    Layout = require('mag-component-layout');\n\n/**\n *  Layout list contains array of layout components\n *\n * @constructor\n * @extends List\n *\n * @param {Object} config object\n * @param {Element} [config.noData=''] element or string to display if set empty data\n *\n * @example\n * var LayoutList = require('mag-component-layout-list'),\n *     list = new LayoutList({\n *         propagate: true,\n *         size: 7,\n *         focusIndex: 0,\n *         noData: 'No channels'\n *         data: [\n *                 {\n *                     items: [\n *                         {\n *                             className: 'star',\n *                             name: '$text'\n *                         },\n *                         'Some text'\n *                     ],\n *                     click: function () {\n *                         // do something\n *                     },\n *                     name: 'starItem'\n *                 },\n *                 {\n *                     items: [\n *                         'Hello world',\n *                         {\n *                             value: 'hi',\n *                             className: 'status'\n *                         }\n *                     ],\n *                     value:{\n *                         uri: 'http://55.55.55.55/some'\n *                     },\n *                     click: someHandler\n *                 },\n *                 {\n *                     items: [\n *                         {\n *                             className: 'big',\n *                             value: ' Some'\n *                         },\n *                         {\n *                             value: new Input()\n *                         }\n *                     ]\n *                 },\n *                 {\n *                     items: [\n *                         new Button({value: 'Ok'}),\n *                         new Button({value: 'Cancel'}),\n *                         new Button({value: 'Exit'})\n *                     ]\n *                 }\n *             ]\n * });\n *\n * list.links.starItem.links.$text.innerText = 'new Text';\n *\n */\nfunction LayoutList ( config ) {\n    var self = this;\n\n    config = config || {};\n\n    /**\n     * Elements handlers\n     */\n    this.handlers = {};\n\n    /**\n     * Hash map of layouts links\n     */\n    this.links = {};\n\n    /**\n     * No data placeholder\n     *\n     * @type {Element}\n     */\n    this.$noData = null;\n\n    //config.className = 'layoutList ' + (config.className || '');\n\n    config.propagate = config.propagate === undefined ? true : config.propagate;\n\n    /**\n     * Set data layout to be fixed to cache HTML elements\n     *\n     * @type {boolean|*}\n     */\n    this.fixedData = config.fixedData || false;\n\n    //config.$body = document.createElement('div');\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    this.$noData = document.createElement('div');\n    this.$noData.className = 'noData hidden';\n\n    List.call(this, config);\n\n    this.$node.appendChild(this.$body);\n    this.$node.appendChild(this.$noData);\n\n    // add handler to focus inner layout\n    this.addListener('click:item', function ( event ) {\n        // focus inner layout of item\n        if ( event.$item.layout.children.length && !event.inner ) {\n            event.$item.layout.children[event.$item.layout.focusIndex].focus();\n        }\n\n        // only focus item if we click mouse\n        if ( event.inner ) {\n            self.focus();\n            self.focusItem(event.$item);\n        }\n        // do click callback if it present\n        if ( self.handlers[event.$item.index] ) {\n            self.handlers[event.$item.index](event.$item);\n        }\n    });\n}\n\n\nLayoutList.prototype = Object.create(List.prototype);\nLayoutList.prototype.constructor = LayoutList;\n\n// set component name\nLayoutList.prototype.name = 'mag-component-layout-list';\n\n\n/*eslint id-length:0*/\n/**\n * Default render function\n *\n * @param {Element} $item in list\n * @param {Object} config to render layout element\n */\nLayoutList.prototype.renderItemDefault = function ( $item, config ) {\n    var layout, layoutConfig,\n        currentNode,\n        currentData,\n        i;\n\n    if ( $item.ready && this.fixedData ) {\n        for ( i = 0; i < config.items.length; i++ ) {\n            currentData = config.items[i];\n            if ( typeof currentData.value === 'string' || currentData.value === undefined ) {\n                currentNode = $item.layout.$node.childNodes[i];\n                currentNode.innerText = currentData.value || '';\n                currentNode.className = currentData.className || '';\n            }\n        }\n    } else {\n        // clear inner content\n        while ( $item.firstChild ) {\n            $item.removeChild($item.firstChild);\n        }\n\n        layoutConfig = {\n            focusable: false,\n            data: config.items\n        };\n\n        if ( config.className ) {\n            layoutConfig.className = config.className;\n        }\n\n        layout = new Layout(layoutConfig);\n\n        if ( config.name ) {\n            this.links[config.name] = layout;\n        }\n\n        $item.appendChild(layout.$node);\n        $item.layout = layout;\n        layout.parent = this;\n        layout.$parentItem = $item;\n\n        // focus layoutList if click on layout\n        layout.addListener('click', function () {\n            // add inner property to set that event comes from inner component\n            layout.parent.emit('click:item', {$item: $item, inner: true});\n        });\n\n        if ( config.click ) {\n            this.handlers[$item.index] = config.click;\n        }\n        // item is rendered\n        $item.ready = true;\n    }\n    $item.value = config.value || {};\n};\n\n\nLayoutList.prototype.setData = function ( config ) {\n    this.links = {};\n    List.prototype.setData.call(this, config);\n\n    if ( config.data && config.data.length ) {\n        this.$noData.classList.add('hidden');\n    } else {\n        this.$noData.classList.remove('hidden');\n    }\n};\n\n\nLayoutList.prototype.init = function ( config ) {\n    var $wrap;\n\n    List.prototype.init.call(this, config);\n    if ( config.noData ) {\n        if ( DEVELOP ) {\n            if ( typeof config.noData !== 'string' && !(config.noData instanceof Element) ) {\n                throw new Error(__filename + ': wrong config.$noData type');\n            }\n        }\n\n        this.$noData.innerHTML = '';\n        if ( config.noData instanceof Element ) {\n            this.$noData.appendChild(config.noData);\n        } else if ( typeof config.noData === 'string' ) {\n            $wrap = document.createElement('div');\n            $wrap.innerText = config.noData;\n            this.$noData.appendChild($wrap);\n        }\n    }\n\n    if ( config.data && config.data.length ) {\n        this.$noData.classList.add('hidden');\n    } else {\n        this.$noData.classList.remove('hidden');\n    }\n};\n\nLayoutList.prototype.renderItem = LayoutList.prototype.renderItemDefault;\n\n\nmodule.exports = LayoutList;\n","/**\n * Main application entry point.\n */\n\n'use strict';\n\nvar app    = require('mag-app');\n\n// main application events\napp.once('load', function () {\n    require('spa-gettext').load({name: core.environment.language || 'en'}, function ( error ) {\n\n        if ( error ) {\n            console.log(error);\n        }\n\n        console.log('===========================================', '');\n        console.log('PHOTO viewer', '');\n        console.log('===========================================', '');\n        app.pages = {\n            main: require('./pages/main'),\n            clear: require('./pages/clear')\n        };\n\n        // go to the main page when necessary\n        app.route(app.pages.main);\n\n\n    });\n});\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app    = require('spa-app/lib/core'),\n    events = require('spa-app/lib/events');\n\n\n// get instance\nwindow.core = window.parent.getCoreInstance(window, app);\n\n// shims\nrequire('stb-shim-classlist');\n\n// apply geometry\nrequire('stb-app/lib/metrics');\n\n// load sdk css\nrequire('stb-app/lib/css')('sdk');\n\n// load theme css\nrequire('./css');\n\n// load app css\nrequire('stb-app/lib/css')('app');\n\n/**\n * Specify platform name\n *\n * @type {string}\n */\napp.platform = 'mag';\n\n/**\n * Show app.\n */\napp.ready = function () {\n    // if ( this.events['show'] ) {\n    //     this.emit('show');\n    // }\n    window.core.call('app:ready');\n};\n\n\n/**\n * Exit from app.\n * Destroy all application instance.\n * If callback function provided, and callback returns boolean 'true', application will stay alive.\n *\n * @fires module:/stb/app#exit\n */\napp.exit = function () {\n    if ( app.events['exit'] ) {\n        app.emit('exit');\n    }\n\n    core.call('exit');\n};\n\n\nevents.load = function ( event ) {\n    //window.core = window.parent.getCoreInstanse(window, app);\n    document.body.setAttribute('platform', app.platform);\n\n    if ( core.ready ) {\n        if ( app.events['load'] ) {\n            // notify listeners\n            app.emit('load', {});\n        }\n    } else {\n        core.once('load', function () {\n            //core.ready = true;\n            if ( app.events[event.type] ) {\n                // notify listeners\n                app.emit(event.type, event);\n            }\n        });\n    }\n};\n\n\n// activate development mechanisms and tools\nif ( DEVELOP ) {\n    //require('stb-develop');\n    require('./develop/main');\n} else {\n    // disable context menu\n    events.contextmenu = function ( event ) {\n        event.preventDefault();\n    };\n}\n\n\n//apply DOM events\nObject.keys(events).forEach(function ( name ) {\n    window.addEventListener(name, events[name]);\n});\n\n\n// new way of string handling\n// all strings are in UTF-16\n// since stbapp 2.18\n// if ( window.gSTB && gSTB.SetNativeStringMode ) {\n//     /* eslint new-cap: 0 */\n//     gSTB.SetNativeStringMode(true);\n// }\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nmodule.exports = {\n    /**\n     * Parse the given location search string into object.\n     *\n     * @param {string} query string to parse\n     *\n     * @return {Object.<string, string>} result data\n     */\n    parse: function ( query ) {\n        var data = {};\n\n        // parse and fill the data\n        query.split('&').forEach(function ( part ) {\n            part = part.split('=');\n            // valid number on params\n            if ( part.length === 2 ) {\n                data[part[0]] = decodeURIComponent(part[1]);\n            }\n        });\n\n        return data;\n    },\n\n\n    /**\n     * Make uri query part in a string form.\n     *\n     * @param {Object} params data to stringify\n     *\n     * @return {string} query string\n     */\n    stringify: function ( params ) {\n        var data = [];\n\n        Object.keys(params).forEach(function ( name ) {\n            data.push(name + '=' + encodeURIComponent(params[name]));\n        });\n\n        return data.join('&');\n    }\n};\n","/**\n * Global application configuration.\n * Can store run-time options, API urls, paths, execution flags and so on.\n * Automatically loaded on application initialization and available as app.config.\n */\n\n'use strict';\n\n// public\nmodule.exports = {};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('./core');\n\n\n// public\nmodule.exports = {\n    DOMContentLoaded: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // there are some listeners\n        if ( app.events['dom'] ) {\n            // notify listeners\n            app.emit('dom', event);\n            //console.log('DOMContentLoaded');\n        }\n    },\n\n    /**\n     * The load event is fired when a resource and its dependent resources have finished loading.\n     *\n     * Control flow:\n     *   1. Global handler.\n     *   2. Each page handler.\n     *   3. Application DONE event.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/load\n     *\n     * @param {Event} event generated object with event data\n     */\n    load: function ( event ) {\n        //var path;\n\n        //debug.event(event);\n        //console.log(event);\n\n        // time mark\n        //app.data.time.load = event.timeStamp;\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' load', 'green');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n\n        // time mark\n        //app.data.time.done = +new Date();\n\n        // everything is ready\n        // and there are some listeners\n        // if ( app.events['done'] ) {\n        //     // notify listeners\n        //     app.emit('done', event);\n        // }\n    },\n\n    /**\n     * The unload event is fired when the document or a child resource is being unloaded.\n     *\n     * Control flow:\n     *   1. Each page handler.\n     *   2. Global handler.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/unload\n     *\n     * @param {Event} event generated object with event data\n     */\n    unload: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' unload', 'red');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n    },\n\n    /**\n     * The error event is fired when a resource failed to load.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/error\n     *\n     * @param {Event} event generated object with event data\n     */\n    error: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n        //debug.fail('app event: ' + event.message, event, {tags: [event.type, 'event']});\n        console.error('app event: ' + event.message, event);\n    },\n\n    /**\n     * The keydown event is fired when a key is pressed down.\n     * Set event.stop to true in order to prevent bubbling.\n     *\n     * Control flow:\n     *   1. Current active component on the active page.\n     *   2. Current active page itself.\n     *   3. Application.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keydown\n     *\n     * @param {Event} event generated object with event data\n     */\n    keydown: function ( event ) {\n        var page = app.activePage,\n            eventLocal = {\n                code: event.keyCode,\n                stop: false\n            },\n            activeComponent;\n\n        if ( DEVELOP ) {\n            if ( !page ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        // filter phantoms\n        //if ( event.keyCode === 0 ) { return; }\n\n        // combined key code\n        //event.code = event.keyCode;\n\n        // apply key modifiers\n        if ( event.ctrlKey )  { eventLocal.code += 'c'; }\n        if ( event.altKey )   { eventLocal.code += 'a'; }\n        if ( event.shiftKey ) { eventLocal.code += 's'; }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + eventLocal.code, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + eventLocal.code, event);\n\n        // page.activeComponent can be set to null in event handles\n        activeComponent = page.activeComponent;\n\n        // current component handler\n        if ( activeComponent && activeComponent !== page ) {\n            // component is available and not page itself\n            if ( activeComponent.events[event.type] ) {\n                // there are some listeners\n                activeComponent.emit(event.type, eventLocal, event);\n            }\n\n            // todo: bubble event recursively\n            // bubbling\n            if (\n                !eventLocal.stop &&\n                activeComponent.propagate &&\n                activeComponent.parent &&\n                activeComponent.parent.events[event.type]\n            ) {\n                activeComponent.parent.emit(event.type, eventLocal, event);\n            }\n        }\n\n        // page handler\n        if ( !eventLocal.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, eventLocal, event);\n            }\n\n            // global app handler\n            if ( !event.stop ) {\n                // not prevented\n                if ( app.events[event.type] ) {\n                    // there are some listeners\n                    app.emit(event.type, eventLocal, event);\n                }\n            }\n        }\n\n        //// suppress non-printable keys in stb device (not in your browser)\n        //if ( app.data.host && keyCodes[event.code] ) {\n        //    event.preventDefault();\n        //}\n    },\n\n    /**\n     * The keypress event is fired when press a printable character.\n     * Delivers the event only to activeComponent at active page.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keypress\n     *\n     * @param {Event} event generated object with event data\n     * @param {string} event.char entered character\n     */\n    keypress: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + event.key, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + event.key, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n    },\n\n    /**\n     * The click event is fired when a pointing device button (usually a mouse button) is pressed and released on a single element.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/click\n     *\n     * @param {Event} event generated object with event data\n     */\n    /*click: function ( event ) {\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n     },*/\n\n    /**\n     * The contextmenu event is fired when the right button of the mouse is clicked (before the context menu is displayed),\n     * or when the context menu key is pressed (in which case the context menu is displayed at the bottom left of the focused\n     * element, unless the element is a tree, in which case the context menu is displayed at the bottom left of the current row).\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/contextmenu\n     *\n     * @param {Event} event generated object with event data\n     */\n    // contextmenu: function ( event ) {\n    //     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n    //\n    //     if ( !DEVELOP ) {\n    //         // disable right click in release mode\n    //         event.preventDefault();\n    //     }\n    // },\n\n    /*contextmenu: function ( event ) {\n     //var kbEvent = {}; //Object.create(document.createEvent('KeyboardEvent'));\n\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n\n     //kbEvent.type    = 'keydown';\n     //kbEvent.keyCode = 8;\n\n     //debug.log(kbEvent.type);\n\n     //globalEventListenerKeydown(kbEvent);\n     //var event = document.createEvent('KeyboardEvent');\n     //event.initEvent('keydown', true, true);\n\n     //document.dispatchEvent(kbEvent);\n\n     if ( !DEVELOP ) {\n     // disable right click in release mode\n     event.preventDefault();\n     }\n     },*/\n\n    /**\n     * The wheel event is fired when a wheel button of a pointing device (usually a mouse) is rotated.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel\n     *\n     * @param {Event} event generated object with event data\n     */\n    mousewheel: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n\n        // page handler\n        if ( !event.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, event);\n            }\n        }\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint-disable */\n\n'use strict';\n\n\nif ( !document.documentElement.classList ) {\n    var prototype = Array.prototype,\n        indexOf   = prototype.indexOf,\n        slice     = prototype.slice,\n        push      = prototype.push,\n        splice    = prototype.splice,\n        join      = prototype.join;\n\n    window.DOMTokenList = function ( el ) {\n        this._element = el;\n        if (el.className !== this._classCache) {\n            this._classCache = el.className;\n            if (!this._classCache) { return; }\n            var classes = this._classCache.replace(/^\\s+|\\s+$/g,'').split(/\\s+/),\n                i;\n            for (i = 0; i < classes.length; i++) {\n                push.call(this, classes[i]);\n            }\n        }\n    };\n\n    window.DOMTokenList.prototype = {\n        add: function ( token ) {\n            if(this.contains(token)) { return; }\n            push.call(this, token);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        contains: function ( token ) {\n            return indexOf.call(this, token) !== -1;\n        },\n\n        item: function ( index ) {\n            return this[index] || null;\n        },\n\n        remove: function ( token ) {\n            var i = indexOf.call(this, token);\n            if (i === -1) {\n                return;\n            }\n            splice.call(this, i, 1);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        toString: function () {\n            return join.call(this, ' ');\n        },\n\n        toggle: function ( token ) {\n            if (!this.contains(token)) {\n                this.add(token);\n            } else {\n                this.remove(token);\n            }\n            return this.contains(token);\n        }\n    };\n\n    Object.defineProperty(Element.prototype, 'classList', {\n        get: function () {\n            return new window.DOMTokenList(this);\n        }\n    });\n}\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    metrics = require('app:metrics');\n\n\n// global link\napp.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\napp.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\napp.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n\n// public\n//module.exports = app;\n","/**\n * Application geometry options.\n * Automatically loaded on application initialization and available as app.metrics.\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    480: {\n        // screen base dimension\n        height: 480,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  32,\n        availLeft:   48\n        // project-specific vars\n        // put here ...\n    },\n\n    576: {\n        // screen base dimension\n        height: 576,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  26,\n        availLeft:   54\n        // project-specific vars\n        // put here ...\n    },\n\n    720: {\n        // screen base dimension\n        height: 720,\n        width:  1280,\n        // safe zone margins\n        availTop:    30,\n        availBottom: 30,\n        availRight:  40,\n        availLeft:   40\n        // project-specific vars\n        // put here ...\n    },\n\n    1080: {\n        // screen base dimension\n        height: 1080,\n        width:  1920,\n        // safe zone margins\n        availTop:    45,\n        availBottom: 45,\n        availRight:  60,\n        availLeft:   60\n        // project-specific vars\n        // put here ...\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core'),\n    //metrics = require('app:metrics'),\n    linkCSS;\n\n\n//window.core = window.parent.getCoreInstance(window, app);\n\n\nlinkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = window.core.theme.path + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);\n\n\n// public\nmodule.exports = linkCSS;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    Gettext = require('cjs-gettext'),\n    loader  = new Emitter();\n\n\n/**\n * Wrap the given data with gettext instance\n * and export methods to the global scope.\n *\n * @param {Object} [data] localization data\n *\n * @return {Gettext} gettext instance\n */\nfunction prepare ( data ) {\n    var gettext = new Gettext(data);\n\n    // make it global\n    window.gettext  = window._ = gettext.gettext;\n    window.pgettext = gettext.pgettext;\n    window.ngettext = gettext.ngettext;\n\n    return gettext;\n}\n\n\n/**\n * Main application language\n */\nloader.defaultLanguage = 'en';\n\n\n/**\n * Simple gettext implementation.\n *\n * @param {Object} config options\n * @param {string} [config.path=lang] relative path to project root\n * @param {string} config.name language name\n * @param {string} [config.ext=json] language file extension\n * @param {function} callback hook on ready\n *\n * @return {boolean} flag is ajax request was made\n */\nloader.load = function ( config, callback ) {\n    var xhr;\n\n    if ( DEVELOP ) {\n        if ( !config.name || typeof config.name !== 'string' ) {\n            throw new Error(__filename + ': config.name must be a nonempty string');\n        }\n        if ( typeof callback !== 'function' ) {\n            throw new Error(__filename + ': wrong callback type');\n        }\n    }\n\n    // defaults\n    config.ext  = config.ext  || 'json';\n    config.path = config.path || 'lang';\n\n    // is it necessary to request a localization file?\n    if ( config.name === loader.defaultLanguage ) {\n        // no\n        prepare();\n        callback(null);\n\n        return false;\n    }\n\n    // yes\n    xhr = new XMLHttpRequest();\n\n    xhr.onload = function () {\n        var json;\n\n        try {\n            json = JSON.parse(xhr.responseText);\n\n            prepare(json);\n            callback(null);\n\n            // there are some listeners\n            if ( loader.events['load'] ) {\n                // notify listeners\n                loader.emit('load');\n            }\n        } catch ( error ) {\n            xhr.onerror(error);\n        }\n    };\n\n    xhr.ontimeout = xhr.onerror = function ( error ) {\n        prepare();\n        callback(error);\n\n        // there are some listeners\n        if ( loader.events['error'] ) {\n            // notify listeners\n            loader.emit('error', error);\n        }\n    };\n\n    xhr.open('GET', config.path + '/' + config.name + '.' + config.ext, true);\n    xhr.send(null);\n\n    return true;\n};\n\n\n// public\nmodule.exports = loader;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Translations handler.\n *\n * @constructor\n *\n * @param {Object} config init parameters\n */\nfunction Gettext ( config ) {\n    var data, meta;\n\n    // sanitize\n    config   = config || {};\n    data     = config.data || {};\n    data[''] = data[''] || {};\n\n    // shortcut\n    meta = config.meta;\n\n    /**\n     * Display the native language translation of a textual message.\n     *\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.gettext = function ( msgId ) {\n        return data[''][msgId] || msgId;\n    };\n\n\n    /**\n     * The \"p\" in \"pgettext\" stands for \"particular\": fetches a particular translation of the textual message.\n     *\n     * @param {string} context message context\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.pgettext = function ( context, msgId ) {\n        return data[context] && data[context][msgId] || msgId;\n    };\n\n\n    /**\n     * Display the native language translation of a textual message whose grammatical form depends on a number.\n     *\n     * @param {string} msgId textual message in a singular form\n     * @param {string} plural textual message in a plural form\n     * @param {number} value message number\n     *\n     * @return {string} translated text\n     */\n    this.ngettext = function ( msgId, plural, value ) {\n        /* eslint no-unused-vars: 0 */\n        /* eslint no-eval: 0 */\n        /* eslint id-length: 0 */\n        var n, evalResult;\n\n        if ( DEVELOP ) {\n            if ( Number(value) !== value ) {\n                throw new Error(__filename + ': value must be a number');\n            }\n        }\n\n        if ( data && meta && data[''][msgId] ) {\n            evalResult = eval('n = ' + value + '; ' + meta.plural);\n\n            if ( typeof evalResult === 'boolean' ) {\n                evalResult = +evalResult;\n            }\n\n            // translation\n            return data[''][msgId][evalResult];\n        }\n\n        // english\n        return value === 1 ? msgId : plural;\n    };\n}\n\n\n// correct constructor name\nGettext.prototype.constructor = Gettext;\n\n\n// public\nmodule.exports = Gettext;\n","/**\n * Main page\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar id     = 'pMain',\n    Page   = require('stb-component-page'),\n    page   = new Page({$node: document.getElementById(id)}),\n    app    = require('mag-app'),\n    keys   = require('stb-keys'),\n    Menu   = require('../modules/menu'),\n    PlayerPanel = require('../modules/player.panel'),\n    runner = require('../modules/runner'),\n    $title = document.getElementById('contentTitle'),\n    $mediaInfo = {\n        codec: document.getElementById('codecInfo'),\n        lang: document.getElementById('langInfo')\n    },\n    $img = document.getElementById('canvas'),\n    config = {\n        rotate: 0,\n        random: false,\n        slideShow: {\n            active: false,\n            timeout: 0,\n            current: 0,\n            modes: [3, 5, 7]\n\n        }\n    },\n    timer = {\n        progress: null,\n        contentInfo: null,\n        panelHide: null\n\n    },\n    buttons = {},\n    currentPlayIntent,\n    player,\n    mainMenu;\n\n/* eslint no-use-before-define:0 */\n//\n\nbuttons.slideshow = {\n    icon: 'theme-icon theme-icon-slideshow',\n    title: gettext('Slide show') + ': 3 ' + gettext('sec'),\n    buttonName: 'slideShow',\n    click: changeSlideShowMode\n};\n\n\nbuttons.mode = {\n    icon: 'theme-icon theme-icon-repeat',\n    title: gettext('Repeat'),\n    buttonName: 'mode',\n    click: function () {\n        config.random = !config.random;\n        if ( config.random ) {\n            mainMenu.links.mode.links.$text.innerText = gettext('Random');\n            mainMenu.links.mode.links.$icon.className = 'theme-icon theme-icon-shuffle';\n        } else {\n            mainMenu.links.mode.links.$text.innerText = gettext('Repeat');\n            mainMenu.links.mode.links.$icon.className = 'theme-icon theme-icon-repeat';\n        }\n    }\n};\n\n\npage.add(mainMenu = new Menu({\n    $node: document.getElementById('pMainMenu'),\n    focusIndex: 1,\n    size: 2,\n    propagate: false,\n    data: [buttons.mode, buttons.slideshow]\n}));\n\n\nmainMenu.addListener('keydown', function ( event ) {\n    if ( event.code === keys.up ) {\n        player.focus();\n    }\n});\n\n\npage.add(\n    player = new PlayerPanel({\n        $node: document.getElementById('pMainPlayerPanel'),\n        onPlay: playPause,\n        onPrevNext: function ( event ) {\n            switch ( event.direction ) {\n                case keys.right:\n                    nextPrevContent(true);\n                    break;\n                case keys.left:\n                    nextPrevContent(false);\n                    break;\n            }\n        },\n        onRotate: rotate,\n        events: {\n            keydown: function ( event ) {\n                if ( event.code === keys.down ) {\n                    mainMenu.focus();\n                }\n            }\n        }\n    })\n);\nmainMenu.init({\n    data: [buttons.mode, buttons.slideshow],\n    size: 2,\n    focusIndex: 1\n});\nresetInfo();\n\n\npage.addListener('show', function () {\n    player.focus();\n});\n\n\n//core.events = {};\n\ncore.addListener('intent', function ( intent, callback ) {\n    debug.log('player catch intent', 'blue');\n\n    switch ( intent.action ) {\n        case 'play':\n            startPlay(intent, callback);\n            break;\n    }\n});\n\n\nfunction rotate ( fnConfig ) {\n    var styleString;\n\n    switch ( fnConfig.direction ) {\n        case keys.right:\n            config.rotate += 90;\n            break;\n        case keys.left:\n            config.rotate -= 90;\n            break;\n    }\n    styleString = 'rotate(' + config.rotate + 'deg)';\n    $img.style.webkitTransform = styleString;\n    $img.style.transform = styleString;\n    $img.style.height = app.metrics.height + 'px';\n\n}\n\nfunction startPlay ( intent, callback ) {\n    // error\n    if ( !intent.data /*|| !intent.data.uri*/ ) {\n        callback(true, null);\n\n        return;\n    }\n\n    console.log(intent, 'intent');\n\n    app.currentIntent = currentPlayIntent = intent;\n    resetInfo();\n\n    if ( !intent.context ) {\n        app.route(app.pages.main);\n        player.focus();\n    }\n    $title.innerText = intent.data.title || intent.data.uri;\n\n    intent.once('start', function () {\n        // hidePanel(PANEL_HIDE_TIMEOUT);\n    });\n\n\n    if ( player.buttons.$focusItem.data.disabled ) {\n        player.buttons.focusIndex(2);\n    }\n\n    if ( intent.data.totalCount && intent.data.currentPosition ) {\n        player.$rightText.innerText = intent.data.currentPosition + '/' + intent.data.totalCount;\n    }\n\n    runner.show({\n        uri: intent.data.uri,\n        onerror: function () {\n            core.notify({\n                title: 'Error opening ' + (intent.data.title || intent.data.uri),\n                icon: 'alert',\n                type: 'error',\n                timeout: 3000\n            });\n        }\n    });\n    if ( callback ) {\n        callback(false, {});\n    }\n}\n\npage.addListener('keydown', function ( event ) {\n\n    clearTimeout(timer.panelHide);\n    switch ( event.code ) {\n        case keys.back:\n            app.route(app.pages.clear);\n            break;\n        case keys.info:\n            app.route(app.pages.clear);\n            break;\n    }\n});\n\napp.addListener('keydown', function ( event ) {\n    switch ( event.code ) {\n        case keys.forward:\n        case keys.channelNext:\n        case keys.pageDown:\n            nextPrevContent(true);\n            break;\n        case keys.rewind:\n        case keys.channelPrev:\n        case keys.pageUp:\n            nextPrevContent(false);\n            break;\n        case keys.playPause:\n            playPause();\n            break;\n        case keys.exit:\n            resetInfo();\n            break;\n    }\n});\n\napp.nextPrevContent = function ( state ) {\n    if (currentPlayIntent.events.next || currentPlayIntent.events.prev ) {\n        nextPrevContent(state);\n    }\n};\n\nfunction changeSlideShowMode () {\n    config.slideShow.current++;\n\n    if ( config.slideShow.current > config.slideShow.modes.length - 1 ) {\n        config.slideShow.current = 0;\n    }\n\n    mainMenu.links.slideShow.links.$text.innerText =\n        gettext('Slide show') + ': ' + config.slideShow.modes[config.slideShow.current] + ' ' + gettext('sec');\n\n}\n\nfunction playPause () {\n    config.slideShow.active = !config.slideShow.active;\n\n    if ( config.slideShow.active ) {\n        player.$playPauseBtn.className = 'theme-icon theme-icon-pause';\n        config.slideShow.timeout = setTimeout(setSlideShowTimeout, config.slideShow.modes[config.slideShow.current] * 1000);\n    } else {\n        player.$playPauseBtn.className = 'theme-icon theme-icon-play';\n        clearTimeout(config.slideShow.timeout);\n    }\n\n    function setSlideShowTimeout () {\n        nextPrevContent(true);\n        config.slideShow.timeout = setTimeout(setSlideShowTimeout, config.slideShow.modes[config.slideShow.current] * 1000);\n    }\n\n}\n\n/**\n * Send initiator app to get next/prev content.\n *\n * @param {boolean} state - state to get data: true - next, false - prev content\n */\nfunction nextPrevContent ( state ) {\n    resetInfo();\n\n\n    if ( state && currentPlayIntent.events.next ) {\n        currentPlayIntent.emit('next', {random: config.random});\n    } else if ( !state && currentPlayIntent.events.prev ) {\n        currentPlayIntent.emit('prev');\n    }\n}\n\nfunction resetInfo () {\n    config.rotate = 0;\n    $img.style.webkitTransform = '';\n    player.$rightText.innerText = '';\n    $img.style.background = 'transparent';\n    $mediaInfo.codec.src = '';\n    $mediaInfo.lang.innerText = '';\n}\n\napp.addListener('close', function () {\n    //\n    clearTimeout(config.slideShow.timeout);\n    config.slideShow.active = false;\n    player.$playPauseBtn.className = 'theme-icon theme-icon-play';\n\n});\n\ncore.addListener('hide', function () {\n    debug.log('Player hiding', 'red');\n    resetInfo();\n    if ( currentPlayIntent ) {\n        // emit to initiate app that player is hide\n        currentPlayIntent.emit('hide');\n    }\n    clearTimeout(config.slideShow.timeout);\n    config.slideShow.active = false;\n    player.$playPauseBtn.className = 'theme-icon theme-icon-play';\n\n});\n//\n// function hidePanel ( sec ) {\n//     sec = sec || 5;\n//\n//     clearTimeout(timer.panelHide);\n//     timer.panelHide = setTimeout(function () {\n//         app.route(app.pages.clear);\n//     }, 1000 * sec);\n// }\n\n\napp.ready();\n\n// public\nmodule.exports = page;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base page implementation.\n *\n * A full-screen top-level layer that can operate as an independent separate entity.\n * It is added to the document body on creation if not already linked.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n *\n * @example\n * var Page = require('stb/ui/page'),\n *     page = new Page({\n *         $node: document.getElementById(id)\n *     });\n *\n * page.addListener('show', function show () {\n *     // page is visible now\n * });\n */\nfunction Page ( config ) {\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    /**\n     * Page visibility/active state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.active = false;\n\n    /**\n     * Link to the currently active component with focus.\n     *\n     * @readonly\n     * @type {Component}\n     */\n    this.activeComponent = null;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'page ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // state flag\n    this.active = this.$node.classList.contains('active');\n\n    // correct DOM parent/child connection if necessary\n    if ( this.$node.parentNode === null ) {\n        document.body.appendChild(this.$node);\n    }\n\n    // always itself\n    this.page = this;\n}\n\n\n// inheritance\nPage.prototype = Object.create(Component.prototype);\nPage.prototype.constructor = Page;\n\n// set component name\nPage.prototype.name = 'spa-component-page';\n\n\n// public\nmodule.exports = Page;\n","/**\n * Global list of non-printable control key codes.\n *\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    backspace: 8,\n    tab:       9,\n    enter:     13,\n    escape:    27,\n    space:     32,\n    pageUp:    33,\n    pageDown:  34,\n    end:       35,\n    home:      36,\n    left:      37,\n    up:        38,\n    right:     39,\n    down:      40,\n    insert:    45,\n    // not \"delete\" because of old browsers issue\n    del:       46\n};\n","/**\n *\n * @author Aleynikov Boris <alynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar LayoutList = require('mag-component-layout-list'),\n    keys       = require('stb-keys');\n\n/**\n * Convert data to layout list format.\n *\n * @param {Array} data - data to convert\n * @return {Array} converted data\n */\nfunction normalize ( data ) {\n    var result = [],\n        index;\n\n    if ( DEVELOP ) {\n        if ( !Array.isArray(data) ) { throw new Error(__filename + ': wrong data type'); }\n    }\n\n    for ( index = 0; index < data.length; index++ ) {\n        result.push({\n            click: data[index].click,\n            items: [\n                {\n                    className: data[index].icon,\n                    name: '$icon'\n                },\n                {\n                    className: 'title',\n                    value: data[index].title,\n                    name: '$text'\n                }\n            ],\n            name: data[index].buttonName\n        });\n    }\n\n    return result;\n}\n\n\n/**\n * Graphite horizontal menu implementation\n *\n * @extends LayoutList\n *\n * @param {Object} config - config object\n * @constructor\n */\nfunction Menu ( config ) {\n    config = config || {};\n\n    config.type = LayoutList.prototype.TYPE_HORIZONTAL;\n\n    config.data = normalize(config.data);\n\n    config.className = 'horizontalMenu ' + (config.className || '');\n\n    config.events = {\n        keydown: function ( event ) {\n            if ( event.code !== keys.pageDown && event.code !== keys.pageUp ) {\n                LayoutList.prototype.defaultEvents.keydown.call(this, event);\n            }\n        }\n    };\n\n    LayoutList.call(this, config);\n\n}\n\nMenu.prototype = Object.create(LayoutList.prototype);\nMenu.prototype.constructor = Menu;\n\n\nMenu.prototype.init = function ( config ) {\n    config = config || {};\n    config.data = normalize(config.data);\n    LayoutList.prototype.init.call(this, config);\n};\n\n\nmodule.exports = Menu;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n/* eslint complexity: [error, 37] */\n/* eslint max-lines-per-function: 1 */\n/* eslint no-fallthrough: 1 */\n/* eslint complexity: 1 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n\n/**\n * Mouse click event.\n *\n * @event module:stb/ui/list~List#click:item\n *\n * @type {Object}\n * @property {Element} $item clicked HTML item\n * @property {Event} event click event data\n */\n\n\n/**\n * Base list implementation.\n *\n * Each data item can be either a primitive value or an object with these fields:\n *\n *  Name    | Description\n * ---------|-------------\n *  value   | actual cell value to render\n *  mark    | is it necessary or not to render this cell as marked\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array}    [config.data=[]]     component data to visualize\n * @param {function} [config.render]      method to build each grid cell content\n * @param {function} [config.navigate]    method to move focus according to pressed keys\n * @param {number}   [config.size=5]      amount of visible items on a page\n * @param {number}   [config.viewIndex=0] move view window to this position on init\n * @param {number}   [config.focusIndex]  list item index to make item focused (move view window to this position)\n * @param {boolean}  [config.cycle=true]  allow or not to jump to the opposite side of a list when there is nowhere to go next\n * @param {boolean}  [config.scroll=null] associated ScrollBar component link\n * @param {Object}   [config.provider]    data provider\n *\n * @fires module:stb/ui/list~List#click:item\n */\nfunction List ( config ) {\n    // current execution context\n    //var self = this;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Link to the currently focused DOM element.\n     *\n     * @type {Element}\n     */\n    this.$focusItem = null;\n\n    /**\n     * Position of the visible window to render.\n     *\n     * @type {number}\n     */\n    this.viewIndex = null;\n\n    /**\n     * Component data to visualize.\n     *\n     * @type {Array}\n     */\n    this.data = [];\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Amount of visible items on a page.\n     *\n     * @type {number}\n     */\n    this.size = 5;\n\n    /**\n     * Allow or not to jump to the opposite side of a list when there is nowhere to go next.\n     *\n     * @type {boolean}\n     */\n    this.cycle = false;\n\n    /**\n     * Associated ScrollBar component link.\n     *\n     * @type {ScrollBar}\n     */\n    this.scroll = null;\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    /**\n     * Associated data provider\n     *\n     * @type {Provider}\n     */\n    this.provider = null;\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    //config.className += ' theme-main';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // component setup\n    this.init(config);\n\n    // custom navigation method\n    //if ( config.navigate ) {\n    //    if ( DEVELOP ) {\n    //        if ( typeof config.navigate !== 'function' ) { throw new Error(__filename + ': wrong config.navigate type'); }\n    //    }\n    //    // apply\n    //    this.navigate = config.navigate;\n    //}\n\n    // navigation by keyboard\n    //this.addListener('keydown', this.navigate);\n\n    // navigation by mouse\n    //this.$body.addEventListener('mousewheel', function ( event ) {\n    //    // scrolling by Y axis\n    //    if ( self.type === self.TYPE_VERTICAL && event.wheelDeltaY ) {\n    //        self.move(event.wheelDeltaY > 0 ? 38 : keys.down);\n    //    }\n    //\n    //    // scrolling by X axis\n    //    if ( self.type === self.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n    //        self.move(event.wheelDeltaX > 0 ? 37 : 39);\n    //    }\n    //});\n}\n\n\n// inheritance\nList.prototype = Object.create(Component.prototype);\nList.prototype.constructor = List;\n\n// set component name\nList.prototype.name = 'mag-component-list';\n\nList.prototype.TYPE_VERTICAL   = 1;\nList.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Fill the given item with data.\n *\n * @param {Element} $item item DOM link\n * @param {*} data associated with this item data\n */\nList.prototype.renderItemDefault = function ( $item, data ) {\n    $item.innerText = data.value;\n};\n\n\n/**\n * Method to build each list item content.\n * Can be redefined to provide custom rendering.\n *\n * @type {function}\n */\nList.prototype.renderItem = List.prototype.renderItemDefault;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nList.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse wheel events.\n     *\n     * @param {Event} event generated event\n     */\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        if ( this.type === this.TYPE_VERTICAL && event.wheelDeltaY ) {\n            this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n        }\n\n        // scrolling by X axis\n        if ( this.type === this.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n            this.move(event.wheelDeltaX > 0 ? keys.left : keys.right);\n        }\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n            case keys.right:\n            case keys.left:\n            case keys.pageUp:\n            case keys.pageDown:\n            case keys.home:\n            case keys.end:\n                // cursor move only on arrow keys\n                this.move(event.code);\n                break;\n            case keys.enter:\n                // there are some listeners\n                if ( this.events['click:item'] && this.$focusItem ) {\n                    // notify listeners\n                    this.emit('click:item', {$item: this.$focusItem, event: event});\n                }\n                break;\n        }\n    }\n};\n\n\n/**\n * Default method to move focus according to pressed keys.\n *\n * @param {Object} event generated event source of movement\n */\n//List.prototype.navigateDefault = function ( event ) {\n//    switch ( event.code ) {\n//        case 38:\n//        case 40:\n//        case 39:\n//        case 37:\n//        case 33:\n//        case 34:\n//        case 36:\n//        case 35:\n//            // cursor move only on arrow keys\n//            this.move(event.code);\n//            break;\n//        case 13:\n//            // there are some listeners\n//            if ( this.events['click:item'] ) {\n//                // notify listeners\n//                this.emit('click:item', {$item: this.$focusItem, event: event});\n//            }\n//            break;\n//    }\n//};\n\n\n/**\n * Current active method to move focus according to pressed keys.\n * Can be redefined to provide custom navigation.\n *\n * @type {function}\n */\n//List.prototype.navigate = List.prototype.navigateDefault;\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var idx, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( idx = 0; idx < data.length; idx++ ) {\n        // cell value\n        item = data[idx];\n        // primitive value\n        if ( typeof item !== 'object' ) {\n            // wrap with defaults\n            item = data[idx] = {\n                value: data[idx]\n            };\n        }\n\n        if ( DEVELOP ) {\n            //if ( !('value' in item) ) { throw new Error(__filename + ': field \"value\" is missing'); }\n            if ( ('mark' in item) && Boolean(item.mark) !== item.mark ) {\n                throw new Error(__filename + ': item.mark must be boolean');\n            }\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.init = function ( config ) {\n    var self     = this,\n        currSize = this.$body.children.length,\n        /**\n         * Item mouse click handler.\n         *\n         * @param {Event} event click event data\n         *\n         * @this Element\n         *\n         * @fires module:stb/ui/list~List#click:item\n         */\n        onClick = function ( event ) {\n            if ( this.data ) {\n                self.focusItem(this);\n\n                // there are some listeners\n                if ( self.events['click:item'] ) {\n                    // notify listeners\n                    self.emit('click:item', {$item: this, event: event});\n                }\n            }\n        },\n        item, idx;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // apply cycle behaviour\n    if ( config.cycle !== undefined ) { this.cycle = config.cycle; }\n\n    // apply ScrollBar link\n    if ( config.scroll ) { this.scroll = config.scroll; }\n\n    // apply data provider\n    if ( config.provider ) { this.provider = config.provider; }\n\n\n    // custom render method\n    if ( config.render ) {\n        if ( DEVELOP ) {\n            if ( typeof config.render !== 'function' ) {\n                throw new Error(__filename + ': wrong config.render type');\n            }\n        }\n\n        // apply\n        this.renderItem = config.render;\n    }\n\n    // list items amount on page\n    if ( config.size ) {\n        if ( DEVELOP ) {\n            if ( Number(config.size) !== config.size ) {\n                throw new Error(__filename + ': config.size must be a number');\n            }\n            if ( config.size <= 0 ) {\n                throw new Error(__filename + ': config.size should be positive');\n            }\n        }\n\n        // apply\n        this.size = config.size;\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( name ) {\n            self.events[name] = null;\n            self.addListener(name, config.events[name]);\n        });\n    }\n\n    // geometry has changed or initial draw\n    if ( this.size !== currSize ) {\n        // non-empty list\n        if ( currSize > 0 ) {\n            // clear old items\n            this.$body.innerText = null;\n        }\n\n        // create new items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            item = document.createElement('div');\n            item.index = idx;\n            //item.className = 'item theme-list-item';\n            item.className = 'item';\n\n            item.addEventListener('click', onClick);\n            this.$body.appendChild(item);\n        }\n    }\n\n    if ( this.provider ) {\n        if ( this.provider.blocked ) {\n            return;\n        }\n\n        this.provider.get( null, function ( error, data ) {\n            if ( error ) {\n                if ( self.events['data:error'] ) {\n                    /**\n                     * Provider get error while take new data\n                     *\n                     * @event module:stb/ui/list~List#data:error\n                     */\n                    self.emit('data:error', error);\n                }\n            } else {\n                if ( data ) {\n                    config.data = data;\n                    self.setData(config);\n                    if ( self.scroll ) {\n                        self.scroll.init({\n                            realSize: self.provider.maxCount,\n                            viewSize: self.provider.size,\n                            value: self.provider.head + self.provider.pos\n                        });\n                    }\n                }\n                if ( self.events['data:get'] ) {\n                    /**\n                     * Provider request new data\n                     *\n                     * @event module:stb/ui/list~List#data:get\n                     *\n                     * @type {Object}\n                     */\n                    self.emit('data:get');\n                }\n            }\n        });\n    } else if ( config.data ) {\n        this.setData(config);\n    }\n};\n\n/**\n * Set data and render inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.setData = function ( config ) {\n    // apply list of items\n\n    if ( config.data ) {\n        if ( DEVELOP ) {\n            if ( !Array.isArray(config.data) ) { throw new Error(__filename + ': wrong config.data type'); }\n        }\n        // prepare user data\n        this.data = normalize(config.data);\n    }\n\n    // view window position\n    if ( DEVELOP ) {\n        if ( config.viewIndex !== undefined ) {\n            if ( Number(config.viewIndex) !== config.viewIndex ) {\n                throw new Error(__filename + ': config.viewIndex must be a number');\n            }\n            if ( config.viewIndex < 0 ) {\n                throw new Error(__filename + ': config.viewIndex should be positive');\n            }\n        }\n    }\n\n    // reset current view window position\n    this.viewIndex = null;\n\n    if ( this.$focusItem ) {\n        this.blurItem(this.$focusItem);\n    }\n\n    if ( this.scroll ) {\n        if ( this.provider ) {\n            if ( this.scroll.realSize !== this.provider.maxCount ) {\n                this.scroll.init({\n                    realSize: this.provider.maxCount,\n                    viewSize: this.provider.size,\n                    value: this.provider.head + this.provider.pos\n                });\n            }\n        } else {\n            this.scroll.init({\n                realSize: this.data.length,\n                viewSize: this.size,\n                value: config.viewIndex || 0\n            });\n        }\n    }\n\n    // set focus item\n    if ( config.focusIndex !== undefined && this.data.length ) {\n        if ( DEVELOP ) {\n            if ( Number(config.focusIndex) !== config.focusIndex ) {\n                throw new Error(__filename + ': config.focusIndex must be a number');\n            }\n            if ( config.focusIndex < 0 ) {\n                throw new Error(__filename + ': config.focusIndex should be positive');\n            }\n            // if ( config.focusIndex > this.data.length - 1 ) {\n            //     throw new Error(__filename + ': config.focusIndex should be less than data size');\n            // }\n        }\n\n        // jump to the necessary item\n        this.focusIndex(config.focusIndex);\n    } else {\n        // go to the first page\n        this.renderView(config.viewIndex || 0);\n    }\n};\n\n\n/**\n * Shift the visible view window event.\n *\n * @event module:stb/ui/list~List#move:view\n *\n * @type {Object}\n * @property {number} prevIndex previous view window position\n * @property {number} currIndex current view window position\n */\n\n\n/**\n * Draw the visible window.\n *\n * @param {number} index start position to render\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#move:view\n */\nList.prototype.renderView = function ( index ) {\n    var $item, idx, itemData, prevIndex, currIndex;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be more than zero');\n        }\n        // if ( index >= this.data.length ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // has the view window position changed\n    if ( this.viewIndex !== index ) {\n        // save for emit\n        prevIndex = this.viewIndex;\n        // sync global pointer\n        this.viewIndex = currIndex = index;\n\n        // rebuild all visible items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            // shortcuts\n            $item    = this.$body.children[idx];\n            itemData = this.data[index];\n\n            // real item or stub\n            if ( itemData ) {\n                // correct inner data/index and render\n                $item.data  = itemData;\n                $item.index = index;\n                this.renderItem($item, itemData);\n\n                // apply CSS\n                if ( itemData.mark ) {\n                    $item.classList.add('mark');\n                } else {\n                    $item.classList.remove('mark');\n                }\n            } else {\n                // nothing to render\n                $item.data = $item.index = undefined;\n                $item.innerHTML = '&nbsp;';\n                $item.ready = false;\n            }\n            index++;\n        }\n\n        // there are some listeners\n        if ( this.events['move:view'] ) {\n            // notify listeners\n            this.emit('move:view', {prevIndex: prevIndex, currIndex: currIndex});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            this.emit('select:item', {$item: $item});\n        }\n\n        // update a linked scroll component\n        if ( this.scroll ) {\n            this.scroll.scrollTo(this.provider ? this.provider.head + this.provider.pos : this.viewIndex);\n        }\n\n        // full rebuild\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Move focus to the given direction.\n *\n * @param {number} direction arrow key code\n *\n * @fires module:stb/ui/list~List#cycle\n * @fires module:stb/ui/list~List#overflow\n */\nList.prototype.move = function ( direction ) {\n    var self = this,\n        force = false;\n\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(direction) !== direction ) {\n            throw new Error(__filename + ': direction must be a number');\n        }\n    }\n\n    // empty list\n    if ( !this.data.length ) {\n        return;\n    }\n\n    switch ( direction ) {\n        case keys.left:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.up:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index > 0 ) {\n                    if ( this.$focusItem === this.$body.firstChild ) {\n                        this.renderView(this.viewIndex - 1);\n                    } else {\n                        this.focusItem(this.$focusItem.previousSibling);\n                    }\n                } else if ( this.provider ) {\n                    if ( this.provider.blocked ) {\n                        return;\n                    }\n\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the end of the list\n                        this.move(keys.end);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.right:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.down:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index < this.data.length - 1 ) {\n                    if ( this.$focusItem === this.$body.lastChild ) {\n                        this.renderView(this.viewIndex + 1);\n                    } else {\n                        this.focusItem(this.$focusItem.nextSibling);\n                    }\n                } else if ( this.provider ) {\n                    if ( this.provider.blocked ) {\n                        return;\n                    }\n\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the beginning of the list\n                        this.move(keys.home);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.pageUp:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n\n                return;\n            }\n            if ( this.viewIndex < this.size ) {\n                // first page\n                this.renderView(0);\n            } else {\n                // second page and further\n                this.renderView(this.viewIndex - this.size + 1);\n            }\n\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.pageDown:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            // data is bigger then one page\n            if ( this.data.length > this.size ) {\n                // determine jump size\n                if ( this.viewIndex > this.data.length - this.size * 2 ) {\n                    // last page\n                    this.renderView(this.data.length - this.size);\n                } else {\n                    // before the last page\n                    this.renderView(this.viewIndex + this.size - 1);\n                }\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n        case keys.home:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n                break;\n            }\n            this.renderView(0);\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.end:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            if ( this.data.length > this.size ) {\n                this.renderView(this.data.length - this.size);\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n    }\n};\n\n\n/**\n * Highlight the given DOM element as focused.\n * Remove focus from the previously focused item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.focusItem = function ( $item ) {\n    var $prev = this.$focusItem;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n    }\n\n    // different element\n    if ( $item && $prev !== $item ) {\n        if ( DEVELOP ) {\n            if ( !($item instanceof Element) ) {\n                throw new Error(__filename + ': wrong $item type');\n            }\n            if ( $item.parentNode !== this.$body ) {\n                throw new Error(__filename + ': wrong $item parent element');\n            }\n        }\n\n        // some item is focused already\n        if ( $prev !== null ) {\n            if ( DEVELOP ) {\n                if ( !($prev instanceof Element) ) {\n                    throw new Error(__filename + ': wrong $prev type');\n                }\n            }\n\n            // style\n            $prev.classList.remove('focus');\n            //$prev.classList.remove('theme-focus');\n\n            // there are some listeners\n            if ( this.events['blur:item'] ) {\n                /**\n                 * Remove focus from an element.\n                 *\n                 * @event module:stb/ui/list~List#blur:item\n                 *\n                 * @type {Object}\n                 * @property {Element} $item previously focused HTML element\n                 */\n                this.emit('blur:item', {$item: $prev});\n            }\n        }\n        // reassign\n        this.$focusItem = $item;\n\n        this.$focusItem.data = this.data[this.$focusItem.index];\n\n        // correct CSS\n        $item.classList.add('focus');\n        //$item.classList.add('theme-focus');\n\n        // there are some listeners\n        if ( this.events['focus:item'] ) {\n            /**\n             * Set focus to a DOM element.\n             *\n             * @event module:stb/ui/list~List#focus:item\n             *\n             * @type {Object}\n             * @property {Element} $prev old/previous focused HTML element\n             * @property {Element} $curr new/current focused HTML element\n             */\n            this.emit('focus:item', {$prev: $prev, $curr: $item});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            /**\n             * Set focus to a list item.\n             *\n             * @event module:stb/ui/list~List#select:item\n             *\n             * @type {Object}\n             * @property {Element} $item new/current focused item\n             */\n            this.emit('select:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Highlight the given DOM element as blur.\n * Remove focus from the item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.blurItem = function ( $item ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) { throw new Error(__filename + ': wrong arguments number'); }\n    }\n\n    // different element\n    if ( $item ) {\n        if ( $item === this.$focusItem ) {\n            this.$focusItem = null;\n        }\n\n        $item.classList.remove('focus');\n        //$item.classList.remove('theme-focus');\n\n        // there are some listeners\n        if ( this.events['blur:item'] ) {\n            /**\n             * Remove focus from an element.\n             *\n             * @event module:stb/ui/list~List#blur:item\n             *\n             * @type {Object}\n             * @property {Element} $item previously focused HTML element\n             */\n            this.emit('blur:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Set the given item focused by item index.\n *\n * @param {number} index item data index\n */\nList.prototype.focusIndex = function ( index ) {\n    var viewIndex = this.viewIndex || 0;\n\n    if ( DEVELOP ) {\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be positive');\n        }\n        // if ( index > this.data.length - 1 ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // determine direction\n    if ( index >= viewIndex + this.size ) {\n        // check range\n        index = index < this.data.length - 1 ? index : this.data.length - 1;\n        // move down\n        this.renderView(index - this.size + 1);\n        this.focusItem(this.$body.lastChild);\n    } else if ( index < viewIndex ) {\n        // check range\n        index = index > 0 ? index : 0;\n        // move up\n        this.renderView(index);\n        this.focusItem(this.$body.firstChild);\n    } else {\n        // no move\n        if ( this.viewIndex === null ) {\n            // first attempt\n            this.renderView(0);\n        }\n        this.focusItem(this.$body.children[index - viewIndex]);\n    }\n};\n\n\n/**\n * Set item state and appearance as marked.\n *\n * @param {Node|Element} $item element to focus\n * @param {boolean} state true - marked, false - not marked\n */\nList.prototype.markItem = function ( $item, state ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 2 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !($item instanceof Element) ) {\n            throw new Error(__filename + ': wrong $item type');\n        }\n        if ( $item.parentNode !== this.$body ) {\n            throw new Error(__filename + ': wrong $item parent element');\n        }\n        if ( Boolean(state) !== state ) {\n            throw new Error(__filename + ': state must be boolean');\n        }\n    }\n\n    // correct CSS\n    if ( state ) {\n        $item.classList.add('mark');\n    } else {\n        $item.classList.remove('mark');\n    }\n\n    // apply flag\n    $item.data.mark = state;\n};\n\n\n// public\nmodule.exports = List;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n/**\n * Layout component implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array} [config.data] array of items to add to layout\n */\nfunction Layout ( config ) {\n    var self = this;\n\n    // sanitize\n    config = config || {};\n\n    /**\n     * Index of focused child component\n     * @type {number}\n     */\n    this.focusIndex = 0;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && config.className !== undefined && typeof config.className !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    //config.className = 'layout ' + (config.className || '');\n\n    /**\n     * Component data\n     * @type {Array}\n     */\n    this.data = [];\n\n    /**\n     *  Hash map of item links\n     */\n    this.links = {};\n\n    Component.call(this, config);\n\n    this.init(config);\n\n    // add listener to move focus between children\n    this.addListener('keydown', function ( event ) {\n        switch ( event.code ) {\n            case keys.right:\n                if ( self.children.length && self.focusIndex < self.children.length - 1 ) {\n                    self.children[++self.focusIndex].focus();\n                }\n                break;\n            case keys.left:\n                if ( self.children.length && self.focusIndex > 0 ) {\n                    self.children[--self.focusIndex].focus();\n                }\n                break;\n            case keys.back:\n                // focus parent focused item if parent is layout list\n                if ( self.parent ) {\n                    self.parent.focus();\n                    if ( self.$parentItem ) {\n                        self.parent.focusItem(self.$parentItem);\n                    }\n                }\n                break;\n        }\n    });\n}\n\n\nLayout.prototype = Object.create(Component.prototype);\nLayout.prototype.constructor = Layout;\n\n// set component name\nLayout.prototype.name = 'mag-component-layout';\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var index, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( index = 0; index < data.length; index++ ) {\n        // cell value\n        item = data[index];\n        // plain text\n        if ( typeof item === 'object' ) {\n            // HTML element or component\n            if ( item instanceof Component || item instanceof HTMLElement ) {\n                data[index] = {\n                    value: item,\n                    wrap: false\n                };\n            } else {\n                data[index].wrap = true;\n            }\n        } else {\n            // wrap with defaults\n            data[index] = {\n                value: data[index],\n                wrap: true\n            };\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nLayout.prototype.init = function ( config ) {\n    var self = this,\n        data = normalize(config.data),\n        item, $wrapper, index;\n\n    // clear element if reinit\n    while (this.$node.firstChild) {\n        this.$node.removeChild(this.$node.firstChild);\n    }\n\n    this.data = data;\n\n    /**\n     * @this Component\n     */\n    function componentClickHandler () {\n        self.focusIndex = this.index;\n    }\n\n    for ( index = 0; index < data.length; index++ ) {\n        item = data[index];\n        // plain text\n        if ( typeof item.value === 'string' ) {\n            $wrapper = document.createElement('div');\n            $wrapper.textContent = item.value;\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n            if ( item.name ) {\n                this.links[item.name] = $wrapper;\n            }\n        } else if ( item.value instanceof HTMLElement ) {\n            // HTML Element\n\n            // if with wrapper\n            if ( item.wrap ) {\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value);\n                this.$node.appendChild($wrapper);\n                if ( item.name ) {\n                    this.links[item.name] = $wrapper;\n                }\n            } else {\n                // without wrapper\n                this.$node.appendChild(item.value);\n                if ( item.name ) {\n                    this.links[item.name] = item.value;\n                }\n            }\n        } else if ( item.value instanceof Component ) {\n            // component\n            // force propagate events\n            item.value.propagate = true;\n\n            // set index to current component\n            item.value.index = this.children.length;\n\n            // change layout focus index if click component\n            item.value.addListener('click', componentClickHandler);\n\n            // append component\n            if ( item.wrap ) {\n                // with wrapper\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value.$node);\n                this.$node.appendChild($wrapper);\n                this.children.push(item.value);\n                item.value.parent = this;\n                if ( item.name ) {\n                    this.links[item.name] = $wrapper;\n                }\n            } else {\n                // without wrapper\n                this.add(item.value);\n                if ( item.name ) {\n                    this.links[item.name] = item.value;\n                }\n            }\n        } else {\n            $wrapper = document.createElement('div');\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n            if ( item.name ) {\n                this.links[item.name] = $wrapper;\n            }\n        }\n    }\n};\n\n\nmodule.exports = Layout;\n","/**\n * PLayer Panel component\n * @author Aleynikov Boris <alynikov.boris@gmail.com>.\n */\n\n'use strict';\n/* eslint no-path-concat: 0 */\n/* eslint no-use-before-define:0*/\n\nvar Component   = require('stb-component'),\n    keys        = require('stb-keys'),\n    LayoutList  = require('mag-component-layout-list');\n\n\nfunction Player ( config ) {\n    var $buttonsWrapper;\n\n    config = config || {};\n\n    config.className = 'playerPanel ' + (config.className || '');\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n\n    Component.call(this, config);\n\n    this.$node.appendChild(this.$body);\n\n\n    this.$body.appendChild(this.$leftText = document.createElement('div'));\n    this.$leftText.className = 'leftText';\n\n    this.$body.appendChild($buttonsWrapper = document.createElement('div'));\n    $buttonsWrapper.className = 'buttonsWrapper';\n\n    this.buttons = new LayoutList({\n        focusIndex: 2,\n        cycle: true,\n        propagate: true,\n        parent: this,\n        type: LayoutList.prototype.TYPE_HORIZONTAL,\n        className: 'playerButtons',\n        data: [],\n        events: {\n            keydown: function ( event ) {\n                if ( event.code !== keys.pageDown && event.code !== keys.pageUp ) {\n                    LayoutList.prototype.defaultEvents.keydown.call(this, event);\n                }\n            }\n        }\n    });\n\n    $buttonsWrapper.appendChild(this.buttons.$node);\n\n    this.$body.appendChild(this.$rightText = document.createElement('div'));\n    this.$rightText.className = 'rightText';\n\n    // this.buttons.move = function ( dir ) {\n    //     customMove.call(this, dir);\n    // };\n\n    this.init(config);\n}\n\n\nPlayer.prototype = Object.create(Component.prototype);\nPlayer.prototype.constructor = Player;\n\nPlayer.prototype.init = function ( config ) {\n    var buttons = [\n        {\n            // channel - btn\n            items: [{value: '<', className: 'button theme-icon theme-icon-rotate'}],\n            click: function () { if ( config.onRotate ) { config.onRotate({direction: keys.left}); } }\n        },\n        {\n            // prev content btn\n            items: [{value: '', className: 'button theme-icon theme-icon-previous'}],\n            click: function () { if ( config.onPrevNext ) { config.onPrevNext({direction: keys.left}); } }\n        },\n        {\n            // play/pause btn\n            items: [{value: '', className: 'button theme-icon theme-icon-play'}],\n            click: function () { if ( config.onPlay ) { config.onPlay(); } }\n        },\n        {\n            // next content btn\n            items: [{value: '', className: 'button theme-icon theme-icon-next'}],\n            click: function () { if ( config.onPrevNext ) { config.onPrevNext({direction: keys.right}); } }\n        },\n        {\n            // channel + btn\n            items: [{value: '>', className: 'button theme-icon theme-icon-rotate-back'}],\n            click: function () { if ( config.onRotate ) { config.onRotate({direction: keys.right}); } }\n        }\n    ];\n\n\n    this.buttons.init({\n        data: buttons,\n        size: buttons.length,\n        focusIndex: 2\n    });\n\n\n    if ( config.play !== false ) {\n        this.$playPauseBtn = document.getElementsByClassName('theme-icon-play')[0];\n    }\n\n    /*this.buttons.addListener('focus:item', function ( event ) {\n        var next = event.$curr,\n            prev = event.$prev;\n\n\n       *//* if ( next.index > prev.index && next.data.disabled ) {\n            self.buttons.emit('keydown', {code:keys.right});\n        } else if ( next.index < prev.index && next.data.disabled ) {\n            self.buttons.emit('keydown', {code:keys.left});\n        }*//*\n\n        *//*if ( event.$curr.data.disabled ) {\n            self.buttons.focusItem(event.$prev);\n            debug.log('try to focus disabled', 'yellow');\n        }*//*\n    });*/\n\n};\n\n/*eslint no-invalid-this:0*/\n\nPlayer.prototype.focus = function () {\n    this.buttons.focus();\n};\n\n\n// 0 rotate left - btn\n// 1 prev content btn\n// 2 pause btn\n// 3 next content btn\n// 4 rotate right btn\n\nPlayer.prototype.initButtons = function ( config ) {\n    config = config || {};\n\n    this.buttons.enabledCount = 0;\n\n\n    if ( config.prev ) {\n        this.buttons.$body.children[1].classList.remove('disabled');\n        this.buttons.$body.children[1].data.disabled = false;\n        this.buttons.enabledCount++;\n    } else {\n        this.buttons.$body.children[1].classList.add('disabled');\n        this.buttons.$body.children[1].data.disabled = true;\n    }\n\n\n    if ( config.play ) {\n        this.buttons.$body.children[3].classList.remove('disabled');\n        this.buttons.$body.children[3].data.disabled = false;\n        this.buttons.enabledCount++;\n    } else {\n        this.buttons.$body.children[3].classList.add('disabled');\n        this.buttons.$body.children[3].data.disabled = true;\n    }\n\n\n    if ( config.next ) {\n        this.buttons.$body.children[3].classList.remove('disabled');\n        this.buttons.$body.children[3].data.disabled = false;\n        this.buttons.enabledCount++;\n    } else {\n        this.buttons.$body.children[3].classList.add('disabled');\n        this.buttons.$body.children[3].data.disabled = true;\n    }\n};\n\nmodule.exports = Player;\n","/**\n *\n * @author Aleynikov Boris <alynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar cache,\n    $img = document.getElementById('canvas'),\n    runner = {};\n\n\nrunner.show = function ( config ) {\n    var uri = config.uri || '';\n\n\n    // uri = 'file://' + uri;\n    uri = encodeURI(uri);\n    cache = new Image();\n    cache.onload = function () {\n        if ( config.onload ) {\n            config.onload();\n        }\n        $img.style.background = 'url(' + uri + ') no-repeat center';\n    };\n    cache.onerror = config.onerror;\n    cache.src = uri;\n\n};\n\nmodule.exports = runner;\n","/**\n *\n * @author Aleynikov Boris <alynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar id     = 'pClear',\n    Page   = require('stb-component-page'),\n    page   = new Page({$node: document.getElementById(id)}),\n    Panel = require('stb-component-panel'),\n    app    = require('mag-app'),\n    keys   = require('stb-keys'),\n\n    //\n    panel;\n\n\npanel = new Panel({\n    focusable: true\n});\n\n\npage.add(panel);\npage.addListener('keydown', function ( event ) {\n    switch ( event.code ) {\n        case keys.ok:\n            app.route(app.pages.main);\n            break;\n        case keys.back:\n            app.currentIntent.close();\n            app.emit('close');\n            break;\n    }\n});\n\n\npage.addListener('show', function () {\n    debug.log('p clear ---->', 'green');\n    panel.focus();\n});\n\nmodule.exports = page;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-panel');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-panel';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base panel implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n *\n * @example\n * var Panel = require('stb/ui/panel'),\n *     panel = new Panel({\n *         $node: document.getElementById('someId'),\n *         children: [\n *             new Panel({\n *                 $node: document.getElementById('anotherId')\n *             })\n *         ]\n *     });\n *\n * panel.add(\n *     new Button(),\n *     new Button(),\n *     new Button()\n * );\n *\n * page.add(panel);\n */\nfunction Panel ( config ) {\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'panel ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n}\n\n\n// inheritance\nPanel.prototype = Object.create(Component.prototype);\nPanel.prototype.constructor = Panel;\n\n// set component name\nPanel.prototype.name = 'spa-component-panel';\n\n\n// public\nmodule.exports = Panel;\n"],"sourceRoot":""}