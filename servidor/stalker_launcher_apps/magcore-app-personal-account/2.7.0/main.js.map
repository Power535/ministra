{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/stb-component/index.js","webpack:///./node_modules/stb-keys/index.js","webpack:///./node_modules/spa-app/lib/core.js","webpack:///./node_modules/spa-component/index.js","webpack:///./node_modules/cjs-emitter/index.js","webpack:///./src/js/config.js","webpack:///./node_modules/mag-app/index.js","webpack:///./node_modules/stb-app/lib/css.js","webpack:///./node_modules/mag-component-layout/index.js","webpack:///./src/js/main.js","webpack:///./node_modules/mag-app/lib/main.js","webpack:///./node_modules/cjs-query/index.js","webpack:///./node_modules/spa-app/lib/events.js","webpack:///./node_modules/stb-shim-classlist/index.js","webpack:///./node_modules/stb-app/lib/metrics.js","webpack:///./src/js/metrics.js","webpack:///./node_modules/mag-app/lib/css.js","webpack:///./node_modules/spa-gettext/index.js","webpack:///./node_modules/cjs-gettext/index.js","webpack:///./src/js/pages/main.js","webpack:///./node_modules/stb-component-page/index.js","webpack:///./node_modules/spa-component-page/index.js","webpack:///./node_modules/mag-component-panel-set/index.js","webpack:///./node_modules/spa-keys/index.js","webpack:///./node_modules/mag-component-panel/index.js","webpack:///./node_modules/mag-component-layout-list/index.js","webpack:///./node_modules/mag-component-list/index.js","webpack:///./node_modules/mag-component-modal/index.js","webpack:///./node_modules/stb-component-modal/index.js","webpack:///./node_modules/spa-component-modal/index.js","webpack:///./node_modules/spa-dom/index.js","webpack:///./node_modules/stb-component-scrollbar/index.js","webpack:///./node_modules/spa-component-scrollbar/index.js","webpack:///./node_modules/spa-component-flicker/index.js","webpack:///./node_modules/mag-component-scroll-area/index.js","webpack:///./node_modules/mag-component-footer/index.js","webpack:///./src/js/modules/device.info.js","webpack:///./src/js/modules/tizen.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","keys","back","backspace","channelNext","tab","channelPrev","ok","enter","exit","escape","volumeUp","volumeDown","f1","f2","f3","f4","refresh","frame","phone","set","tv","menu","app","rewind","forward","audio","standby","keyboard","usbMounted","usbUnmounted","playPause","play","pause","stop","power","record","info","mute","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","Emitter","parse","query","document","location","search","substring","config","activePage","route","pageTo","data","page","pageFrom","active","id","$node","classList","remove","events","emit","add","showPage","this","from","to","counter","Component","self","visible","focusable","$body","parent","children","propagate","createElement","className","hide","defaultEvents","forEach","eventName","addListener","apply","addEventListener","event","focus","stopPropagation","constructor","child","index","arguments","length","push","parentNode","appendChild","item","activeComponent","blur","splice","indexOf","removeChild","activeItem","show","callback","setTimeout","once","onceWrapper","removeListener","addListeners","callbacks","filter","fn","undefined","Array","slice","user","account","login","mac","status","tariff","support","link","rel","href","metrics","height","head","Layout","focusIndex","init","code","right","left","$parentItem","focusItem","$wrapper","HTMLElement","wrap","normalize","firstChild","componentClickHandler","textContent","gettext","load","core","environment","language","error","pages","main","ready","window","getCoreInstance","platform","body","setAttribute","type","contextmenu","preventDefault","split","part","decodeURIComponent","stringify","params","encodeURIComponent","join","DOMContentLoaded","unload","keydown","eventLocal","keyCode","ctrlKey","altKey","shiftKey","keypress","mousewheel","documentElement","DOMTokenList","el","_element","_classCache","classes","replace","token","contains","toString","toggle","Element","screenHeight","screen","availHeight","availTop","availBottom","availWidth","width","availLeft","availRight","480","576","720","1080","linkCSS","theme","path","Gettext","loader","prepare","_","pgettext","ngettext","defaultLanguage","xhr","ext","XMLHttpRequest","onload","JSON","responseText","onerror","ontimeout","open","send","meta","msgId","context","plural","evalResult","eval","$itemsCountWrapper","$itemsCount","footerButtons","leftPanelContent","Page","getElementById","PanelSet","Panel","LayoutList","Modal","dom","ScrollBar","Flicker","ScrollArea","Footer","getDeviceInfo","showLogOutWarning","notify","title","icon","buttons","click","backend","logout","tag","clock","interval","render","$item","time","Date","hours","getHours","mins","getMinutes","innerText","start","middle","action","panelSet","modalActions","footer","middlePanel","cycle","size","items","modalExit","leftPanel","unshift","list","scroll","focus:item","rightPanel","reset","noData","innerHTML","platformSpecificItems","$focusItem","textArea","step","$fragment","$htmlElement","area","fragment","panels","request","version","method","response","fname","tariff_plan","keydownHandler","space","pageUp","pageDown","end","home","up","down","insert","del","$overlay","$shadow","isArray","$title","List","handlers","$noData","fixedData","layout","inner","renderItemDefault","layoutConfig","currentNode","currentData","childNodes","setData","$wrap","renderItem","viewIndex","TYPE_VERTICAL","provider","TYPE_HORIZONTAL","wheelDeltaY","move","wheelDeltaX","idx","currSize","onClick","blocked","realSize","maxCount","viewSize","pos","blurItem","renderView","itemData","prevIndex","currIndex","mark","scrollTo","direction","force","previousSibling","lastChild","nextSibling","$prev","$curr","markItem","state","StbComponentModal","onkeydown","$header","$text","$icon","tagName","attrList","content","node","createTextNode","createDocumentFragment","tagDst","Node","nodes","count","clear","thumbRect","trackRect","$thumb","style","getBoundingClientRect","marginTop","marginLeft","curr","prev","timerId","run","clearTimeout","defaultRender","realHeight","viewHeight","topPosition","delta","top","Math","ceil","offsetHeight","currentTab","tabs","codes","$table","insertRow","rows","insertCell","$left","cells","$right","currTab","$tab","$tabChildren","addClick","ind","disabled","visibility","onclick","getTizenVersion","result","tizen","application","getAppInfo","getTvVersion","webapis","productinfo","getRealModel","getDeviceMac","network","getMac"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component');\n","/**\n * Global list of non-printable control key codes.\n *\n * At the moment `keypress` and `keydown` events are emitted for the same keys (for both printable and non-printable characters).\n *\n * WARNING!!! All codes in this file (except 'volumeUp' and 'volumeDown')\n * are used in window 'keydown' handler to prevent wrong 'keypress' firings.\n * If you add new code to this file 'keypress' event with this code will never fire.\n *\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar keys = require('spa-keys');\n\n\n// extend with additional codes\nkeys.back         = keys.backspace;\nkeys.channelNext  = keys.tab;        // Tab\nkeys.channelPrev  = keys.tab + 's';  // Shift+Tab\nkeys.ok           = keys.enter;      // Enter\nkeys.exit         = keys.escape;     // Esc\nkeys.volumeUp     = 107;             // NUMPAD +\nkeys.volumeDown   = 109;             // NUMPAD -\nkeys.f1           = 112 + 'c';       // Ctrl+F1\nkeys.f2           = 113 + 'c';       // Ctrl+F2\nkeys.f3           = 114 + 'c';       // Ctrl+F3\nkeys.f4           = 115 + 'c';       // Ctrl+F4\nkeys.refresh      = 116 + 'c';       // Ctrl+F5\nkeys.frame        = 117 + 'c';       // Ctrl+F6\nkeys.phone        = 119 + 'c';       // Ctrl+F8\nkeys.set          = 120 + 'c';       // Ctrl+F9\nkeys.tv           = 121 + 'c';       // Ctrl+F10\nkeys.menu         = 122 + 'c';       // Ctrl+F11\nkeys.app          = 123 + 'c';       // Ctrl+F12\nkeys.rewind       = 66  + 'a';       // Alt+B\nkeys.forward      = 70  + 'a';       // Alt+F\nkeys.audio        = 71  + 'a';       // Alt+G\nkeys.standby      = 74  + 'a';       // Alt+J\nkeys.keyboard     = 76  + 'a';       // Alt+L\nkeys.usbMounted   = 80  + 'a';       // Alt+P\nkeys.usbUnmounted = 81  + 'a';       // Alt+Q\nkeys.playPause    = 82  + 'a';       // Alt+R\nkeys.play         = -1;              // should be redefined on some platforms\nkeys.pause        = -1;              // should be redefined on some platforms\nkeys.stop         = 83  + 'a';       // Alt+S\nkeys.power        = 85  + 'a';       // Alt+U\nkeys.record       = 87  + 'a';       // Alt+W\nkeys.info         = 89  + 'a';       // Alt+Y\nkeys.mute         = 192 + 'a';\nkeys.digit0       = 48;\nkeys.digit1       = 49;\nkeys.digit2       = 50;\nkeys.digit3       = 51;\nkeys.digit4       = 52;\nkeys.digit5       = 53;\nkeys.digit6       = 54;\nkeys.digit7       = 55;\nkeys.digit8       = 56;\nkeys.digit9       = 57;\n\n\n// public\nmodule.exports = keys;\n\n// public\n// module.exports = {\n//     getCode: function ( event ) {\n//         var code = event.keyCode;\n//\n//         // apply key modifiers\n//         if ( event.shiftKey ) { code += 1000; }\n//         if ( event.altKey )   { code += 2000; }\n//\n//         return code;\n//     },\n//\n//     codes: {\n//         back:         8,    // Backspace\n//         channelPrev:  1009, // Shift+Tab\n//         channelNext:  9,    // Tab\n//         ok:           13,   // Enter\n//         exit:         27,   // Esc\n//         pageUp:       33,\n//         pageDown:     34,\n//         end:          35,\n//         home:         36,\n//         left:         37,\n//         up:           38,\n//         right:        39,\n//         down:         40,\n//         'delete':     46,\n//         volumeUp:     107,  // NUMPAD +\n//         volumeDown:   109,  // NUMPAD -\n//         f1:           112,  // F1\n//         f2:           113,  // F2\n//         f3:           114,  // F3\n//         f4:           115,  // F4\n//         refresh:      116,  // F5\n//         frame:        117,  // F6\n//         phone:        119,  // F8\n//         set:          120,  // F9\n//         tv:           121,  // F10\n//         menu:         122,  // F11\n//         app:          123,  // F12\n//         rewind:       2066, // Alt+B\n//         forward:      2070, // Alt+F\n//         audio:        2071, // Alt+G\n//         standby:      2074, // Alt+J\n//         keyboard:     2076, // Alt+L\n//         usbMounted:   2080, // Alt+P\n//         usbUnmounted: 2081, // Alt+Q\n//         playPause:    2082, // Alt+R\n//         stop:         2083, // Alt+S\n//         power:        2085, // Alt+U\n//         record:       2087, // Alt+W\n//         info:         2089, // Alt+Y\n//         mute:         2192\n//     }\n// };\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    parse   = require('cjs-query').parse,\n    app     = new Emitter();\n\n\n/**\n * Make the given inactive/hidden page active/visible.\n * Pass some data to the page and trigger the corresponding event.\n *\n * @param {Page} page item to show\n * @param {*} [data] data to send to page\n *\n * @return {boolean} operation status\n */\nfunction showPage ( page, data ) {\n    // page available and can be hidden\n    if ( page && !page.active ) {\n        // apply visibility\n        page.$node.classList.add('active');\n        page.active = true;\n        app.activePage = page;\n\n        debug.info('show component ' + page.name + '#' + page.id, null, {\n            tags: ['show', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' show', 'green');\n\n        // there are some listeners\n        if ( page.events['show'] ) {\n            // notify listeners\n            page.emit('show', {data: data});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n/**\n * Make the given active/visible page inactive/hidden and trigger the corresponding event.\n *\n * @param {Page} page item to hide\n *\n * @return {boolean} operation status\n */\nfunction hidePage ( page ) {\n    // page available and can be hidden\n    if ( page && page.active ) {\n        // apply visibility\n        page.$node.classList.remove('active');\n        page.active  = false;\n        app.activePage = null;\n\n        debug.info('hide component ' + page.name + '#' + page.id, null, {\n            tags: ['hide', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' hide', 'grey');\n\n        // there are some listeners\n        if ( page.events['hide'] ) {\n            // notify listeners\n            page.emit('hide');\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n// url request params\napp.query = parse(document.location.search.substring(1));\n\n\n// global application configuration\n// in config.js file in js root\napp.config = require('app:config');\n\n\n// the only visible page\napp.activePage = null;\n\n\n/**\n * Browse to a given page.\n * Do nothing if the link is invalid. Otherwise hide the current, show new and update the \"previous\" link.\n *\n * @param {Page} pageTo instance of the page to show\n * @param {*} [data] options to pass to the page on show\n *\n * @return {boolean} operation status\n */\napp.route = function ( pageTo, data ) {\n    var pageFrom = app.activePage;\n\n    if ( DEVELOP ) {\n        //if ( router.pages.length > 0 ) {\n        if ( !pageTo || typeof pageTo !== 'object' ) {\n            throw new Error(__filename + ': wrong pageTo type');\n        }\n        if ( !('active' in pageTo) ) {\n            throw new Error(__filename + ': missing field \"active\" in pageTo');\n        }\n        //}\n    }\n\n    // valid not already active page\n    if ( pageTo && !pageTo.active ) {\n        //debug.log('router.navigate: ' + pageTo.id, pageTo === pageFrom ? 'grey' : 'green');\n        debug.info('app route: ' + pageTo.name + '#' + pageTo.id, null, {tags: ['route', pageTo.name, pageTo.id]});\n\n        // update url\n        //location.hash = this.stringify(name, data);\n\n        // apply visibility\n        hidePage(app.activePage);\n        showPage(pageTo, data);\n\n        // there are some listeners\n        if ( this.events['route'] ) {\n            // notify listeners\n            this.emit('route', {from: pageFrom, to: pageTo});\n        }\n\n        // store\n        //this.history.push(pageTo);\n\n        return true;\n    }\n\n    //debug.warn('invalid page to route: ' + pageTo.id, null, {tags: ['route', 'page', pageTo.id]});\n    console.warn('invalid page to route: ' + pageTo.id);\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    Emitter = require('cjs-emitter'),\n    counter = 0;\n\n\n/**\n * Base component implementation.\n *\n * Visual element that can handle sub-components.\n * Each component has a DOM element container $node with a set of classes:\n * \"component\" and some specific component class names depending on the hierarchy, for example \"page\".\n * Each component has a unique ID given either from $node.id or from data.id. If not given will generate automatically.\n *\n * @constructor\n * @extends Emitter\n *\n * @param {Object} [config={}] init parameters\n * @param {Element} [config.id] component unique identifier (generated if not set)\n * @param {string} [config.className] space-separated list of classes for \"className\" property of this.$node\n * @param {Element} [config.$node] DOM element/fragment to be a component outer container\n * @param {Element} [config.$body] DOM element/fragment to be a component inner container (by default is the same as $node)\n * @param {Component} [config.parent] link to the parent component which has this component as a child\n * @param {Array.<Component>} [config.children=[]] list of components in this component\n * @param {Object.<string, function>} [config.events={}] list of event callbacks\n * @param {boolean} [config.visible=true] component initial visibility state flag\n * @param {boolean} [config.focusable=true] component can accept focus or not\n * @param {boolean} [config.propagate=false] allow to emit events to the parent component\n *\n * @fires module:stb/component~Component#click\n *\n * @example\n * var component = new Component({\n *     $node: document.getElementById(id),\n *     className: 'bootstrap responsive',\n *     events: {\n *         click: function () { ... }\n *     }\n * });\n * component.add( ... );\n * component.focus();\n */\nfunction Component ( config ) {\n    // current execution context\n    var self = this,\n        name;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.id && typeof config.id !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.id');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$node && !(config.$node instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$node type');\n        }\n        if ( config.$body && !(config.$body instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$body type');\n        }\n        if ( config.parent && !(config.parent instanceof Component) ) {\n            throw new Error(__filename + ': wrong config.parent type');\n        }\n        if ( config.children && !Array.isArray(config.children) ) {\n            throw new Error(__filename + ': wrong config.children type');\n        }\n    }\n\n    /**\n     * Component visibility state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.visible = true;\n\n    /**\n     * Component can accept focus or not.\n     *\n     * @type {boolean}\n     */\n    this.focusable = true;\n\n    /**\n     * DOM outer handle.\n     *\n     * @type {Element}\n     */\n    this.$node = null;\n\n    /**\n     * DOM inner handle.\n     * In simple cases is the same as $node.\n     *\n     * @type {Element}\n     */\n    this.$body = null;\n\n    /**\n     * Link to the parent component which has this component as a child.\n     *\n     * @type {Component}\n     */\n    this.parent = null;\n\n    /**\n     * List of all children components.\n     *\n     * @type {Component[]}\n     */\n    this.children = [];\n\n    /**\n     * allow to emit events to the parent component\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.propagate = !!config.propagate;\n\n    // parent constructor call\n    Emitter.call(this);\n\n    // outer handle - empty div in case nothing is given\n    this.$node = config.$node || document.createElement('div');\n\n    // inner handle - the same as outer handler in case nothing is given\n    this.$body = config.$body || this.$node;\n\n    // set CSS class names\n    //this.$node.className += ' component ' + (config.className || '');\n    // previous approach is not good as it mess with components hierarchy\n    this.$node.className = this.name + ' ' + (config.className || '');\n\n    // apply component id if given, generate otherwise\n    this.id = config.id || this.$node.id || 'cid' + counter++;\n\n    // apply hierarchy\n    if ( config.parent ) {\n        // add to parent component\n        config.parent.add(this);\n    }\n\n    // apply given visibility\n    if ( config.visible === false ) {\n        // default state is visible\n        this.hide();\n    }\n\n    // apply focus handling method\n    if ( config.focusable === false ) {\n        // can't accept focus\n        this.focusable = false;\n    }\n\n    // a descendant defined own events\n    if ( this.defaultEvents ) {\n        // sanitize\n        config.events = config.events || {};\n\n        if ( DEVELOP ) {\n            if ( typeof config.events !== 'object' ) {\n                throw new Error(__filename + ': wrong config.events type');\n            }\n            if ( typeof this.defaultEvents !== 'object' ) {\n                throw new Error(__filename + ': wrong this.defaultEvents type');\n            }\n        }\n\n        for ( name in this.defaultEvents ) {\n            // overwrite default events with user-defined\n            config.events[name] = config.events[name] || this.defaultEvents[name];\n        }\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( eventName ) {\n            self.addListener(eventName, config.events[eventName]);\n        });\n    }\n\n    // apply the given children components\n    if ( config.children ) {\n        // apply\n        this.add.apply(this, config.children);\n    }\n\n    // component activation by mouse\n    this.$node.addEventListener('click', function ( event ) {\n        // left mouse button\n        //if ( event.button === 0 ) {\n        // activate if possible\n        self.focus();\n\n        // there are some listeners\n        if ( self.events['click'] ) {\n            /**\n             * Mouse click event.\n             *\n             * @event module:stb/component~Component#click\n             *\n             * @type {Object}\n             * @property {Event} event click event data\n             */\n            self.emit('click', event);\n        }\n        //}\n\n        if ( DEVELOP ) {\n            // middle mouse button\n            if ( event.button === 1 ) {\n                //debug.inspect(self, 0);\n                debug.info('\"window.link\" or \"' + self.id + '.component\"', 'this component is now available in global scope');\n                window.link = self;\n                self.$node.classList.toggle('wired');\n            }\n        }\n\n        event.stopPropagation();\n    });\n\n    if ( DEVELOP ) {\n        // expose inner ID to global scope\n        window[self.id] = self.$node;\n\n        // expose a link\n        this.$node.component = this.$body.component = this;\n        this.$node.title = this.name + '#' + this.id + ' (outer)';\n        this.$body.title = this.name + '#' + this.id + ' (inner)';\n    }\n\n    debug.info('create component ' + this.name + '#' + this.id, null, {\n        tags: ['create', 'component', this.name, this.id]\n    });\n}\n\n\n// inheritance\nComponent.prototype = Object.create(Emitter.prototype);\nComponent.prototype.constructor = Component;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nComponent.prototype.defaultEvents = null;\n\n\n/**\n * Add a new component as a child.\n *\n * @param {...Component} [child] variable number of elements to append\n *\n * @files Component#add\n *\n * @example\n * panel.add(\n *     new Button( ... ),\n *     new Button( ... )\n * );\n */\nComponent.prototype.add = function ( child ) {\n    var index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        child = arguments[index];\n\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        // apply\n        this.children.push(child);\n        child.parent = this;\n\n        // correct DOM parent/child connection if necessary\n        if ( child.$node && child.$node.parentNode === null ) {\n            this.$body.appendChild(child.$node);\n        }\n\n        debug.info('add component ' + child.name + '#' + child.id + ' to ' + this.name + '#' + this.id, null, {\n            tags: ['add', 'component', this.name, this.id, child.name, child.id]\n        });\n\n        // there are some listeners\n        if ( this.events['add'] ) {\n            /**\n             * A child component is added.\n             *\n             * @event module:stb/component~Component#add\n             *\n             * @type {Object}\n             * @property {Component} item new component added\n             */\n            this.emit('add', {item: child});\n        }\n\n        //debug.log('component ' + this.name + '#' + this.id + ' new child: ' + child.name + '#' + child.id);\n    }\n};\n\n\n/* @todo: consider activation in future */\n///**\n// * Insert component into the specific position.\n// *\n// * @param {Component} child component instance to insert\n// * @param {number} index insertion position\n// */\n//Component.prototype.insert = function ( child, index ) {\n//    var prevIndex = this.children.indexOf(child);\n//\n//    if ( DEVELOP ) {\n//        if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n//        if ( !(child instanceof Component) ) { throw new Error(__filename + ': wrong child type'); }\n//    }\n//\n//    if ( prevIndex !== -1 ) {\n//        this.children.splice(prevIndex, 1);\n//        this.$body.removeChild(child.$node);\n//    }\n//\n//    if ( index === this.children.length ) {\n//        this.$body.appendChild(child.$node);\n//    } else {\n//        this.$body.insertBefore(child.$node, this.$body.children[index]);\n//    }\n//    this.children.splice(index, 0, child);\n//\n//    if ( !child.parent ) {\n//        child.parent = this;\n//    }\n//};\n\n\n/**\n * Delete this component and clear all associated events.\n *\n * @fires module:stb/component~Component#remove\n */\nComponent.prototype.remove = function () {\n    // really inserted somewhere\n    if ( this.parent ) {\n        if ( DEVELOP ) {\n            if ( !(this.parent instanceof Component) ) {\n                throw new Error(__filename + ': wrong this.parent type');\n            }\n        }\n\n        // active at the moment\n        if ( app.activePage.activeComponent === this ) {\n            this.blur();\n            this.parent.focus();\n        }\n        this.parent.children.splice(this.parent.children.indexOf(this), 1);\n    }\n\n    // remove all children\n    this.children.forEach(function ( child ) {\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        child.remove();\n    });\n\n    this.$node.parentNode.removeChild(this.$node);\n\n    // there are some listeners\n    if ( this.events['remove'] ) {\n        /**\n         * Delete this component.\n         *\n         * @event module:stb/component~Component#remove\n         */\n        this.emit('remove');\n    }\n\n    // remove all listeners\n    this.events = {};\n\n    //debug.log('component ' + this.name + '#' + this.id + ' remove', 'red');\n    debug.info('remove component ' + this.name + '#' + this.id, null, {\n        tags: ['remove', 'component', this.name, this.id]\n    });\n};\n\n\n/**\n * Activate the component.\n * Notify the owner-page and apply CSS class.\n *\n * @param {Object} [data] custom data which passed into handlers\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#focus\n */\nComponent.prototype.focus = function ( data ) {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // this is a visual component on a page\n    // not already focused and can accept focus\n    if ( this.focusable && this !== activeItem ) {\n        // notify the current active component\n        if ( activeItem ) { activeItem.blur(); }\n\n        /* eslint consistent-this: 0 */\n\n        // apply\n        activePage.activeComponent = activeItem = this;\n        activeItem.$node.classList.add('focus');\n\n        //debug.log('component ' + this.name + '#' + this.id + ' focus');\n        debug.info('focus component ' + this.name + '#' + this.id, null, {\n            tags: ['focus', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( activeItem.events['focus'] ) {\n            /**\n             * Make this component focused.\n             *\n             * @event module:stb/component~Component#focus\n             */\n            activeItem.emit('focus', data);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Remove focus.\n * Change page.activeComponent and notify subscribers.\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#blur\n */\nComponent.prototype.blur = function () {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // apply visuals anyway\n    this.$node.classList.remove('focus');\n\n    // this is the active component\n    if ( this === activeItem ) {\n        activePage.activeComponent = null;\n\n        //debug.log('component ' + this.name + '#' + this.id + ' blur', 'grey');\n        debug.info('blur component ' + this.name + '#' + this.id, null, {\n            tags: ['blur', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['blur'] ) {\n            /**\n             * Remove focus from this component.\n             *\n             * @event module:stb/component~Component#blur\n             */\n            this.emit('blur');\n        }\n\n        return true;\n    }\n\n    debug.warn('component ' + this.name + '#' + this.id + ' attempt to blur without link to a page', null, {\n        tags: ['blur', 'component', this.name, this.id]\n    });\n\n    // nothing was done\n    return false;\n};\n\n\n/*function show ( self, data ) {\n    // correct style\n    self.$node.classList.remove('hidden');\n    // flag\n    self.visible = true;\n\n    debug.info('show component ' + self.name + '#' + self.id, null, {\n        tags: ['show', 'component', self.name, self.id]\n    });\n\n    // there are some listeners\n    if ( self.events['show'] ) {\n        /!**\n         * Make the component visible.\n         *\n         * @event module:stb/component~Component#show\n         *!/\n        self.emit('show', data);\n    }\n}*/\n\n/**\n * Make the component visible and notify subscribers.\n *\n * @param {Object} [data] custom data which passed into handlers\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#show\n */\nComponent.prototype.show = function ( data, callback ) {\n    //var self = this;\n\n    // is it hidden\n    if ( !this.visible ) {\n        /*if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(function () {\n                show(self, data);\n                callback();\n            });\n        } else {\n            // sync call\n            show(this, data);\n        }*/\n\n        // correct style\n        this.$node.classList.remove('hidden');\n        // flag\n        this.visible = true;\n\n        debug.info('show component ' + this.name + '#' + this.id, null, {\n            tags: ['show', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['show'] ) {\n            /**\n             * Make the component visible.\n             *\n             * @event module:stb/component~Component#show\n             */\n            this.emit('show', data);\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Make the component hidden and notify subscribers.\n *\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#hide\n */\nComponent.prototype.hide = function ( callback ) {\n    // is it visible\n    if ( this.visible ) {\n        // correct style\n        this.$node.classList.add('hidden');\n        // flag\n        this.visible = false;\n\n        debug.info('hide component ' + this.name + '#' + this.id, null, {\n            tags: ['hide', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['hide'] ) {\n            /**\n             * Make the component hidden.\n             *\n             * @event module:stb/component~Component#hide\n             */\n            this.emit('hide');\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = Component;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Base Events Emitter implementation.\n *\n * @see http://nodejs.org/api/events.html\n * @constructor\n *\n * @example\n * var emitter = new Emitter();\n */\nfunction Emitter () {\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // if ( DEVELOP ) {\n    //     if ( typeof this !== 'object' ) { throw new Error(__filename + ': must be constructed via new'); }\n    // }\n\n    /**\n     * Inner hash table for event names and linked callbacks.\n     * Manual editing should be avoided.\n     *\n     * @member {Object.<string, function[]>}\n     *\n     * @example\n     * {\n     *     click: [\n     *         function click1 () { ... },\n     *         function click2 () { ... }\n     *     ],\n     *     keydown: [\n     *         function () { ... }\n     *     ]\n     * }\n     **/\n    this.events = {};\n}\n\n\nEmitter.prototype = {\n    /**\n     * Bind an event to the given callback function.\n     * The same callback function can be added multiple times for the same event name.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.addListener('click', function ( data ) { ... });\n     * // one more click handler\n     * emitter.addListener('click', function ( data ) { ... });\n     */\n    addListener: function ( name, callback ) {\n        console.assert(arguments.length === 2, 'wrong arguments number');\n        console.assert(typeof name === 'string', 'wrong name type');\n        console.assert(name.length > 0, 'empty name');\n        console.assert(typeof callback === 'function', 'callback should be a function');\n\n        // if ( DEVELOP ) {\n        //     if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        //     if ( typeof name !== 'string' || name.length === 0 ) { throw new Error(__filename + ': wrong or empty name'); }\n        //     if ( typeof callback !== 'function' ) { throw new Error(__filename + ': wrong callback type'); }\n        // }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(callback);\n    },\n\n\n    /**\n     * Add a one time listener for the event.\n     * This listener is invoked only the next time the event is fired, after which it is removed.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.once('click', function ( data ) { ... });\n     */\n    once: function ( name, callback ) {\n        // current execution context\n        var self = this;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n        }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(function onceWrapper () {\n            self.removeListener(name, onceWrapper);\n            callback.apply(self, arguments);\n        });\n    },\n\n\n    /**\n     * Apply multiple listeners at once.\n     *\n     * @param {Object} callbacks event names with callbacks\n     *\n     * @example\n     * emitter.addListeners({\n     *     click: function ( data ) {},\n     *     close: function ( data ) {}\n     * });\n     */\n    addListeners: function ( callbacks ) {\n        var name;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof callbacks !== 'object' ) {\n                throw new Error(__filename + ': wrong callbacks type');\n            }\n            if ( Object.keys(callbacks).length === 0 ) {\n                throw new Error(__filename + ': no callbacks given');\n            }\n        }\n\n        for ( name in callbacks ) {\n            if ( callbacks.hasOwnProperty(name) ) {\n                this.addListener(name, callbacks[name]);\n            }\n        }\n    },\n\n\n    /**\n     * Remove all instances of the given callback.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to remove\n     *\n     * @example\n     * emitter.removeListener('click', func1);\n     */\n    removeListener: function ( name, callback ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n            if ( this.events[name] && !Array.isArray(this.events[name]) ) {\n                throw new Error(__filename + ': corrupted inner data');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( this.events[name] ) {\n            // rework the callback list to exclude the given one\n            this.events[name] = this.events[name].filter(function callbacksFilter ( fn ) { return fn !== callback; });\n            // event has no more callbacks so clean it\n            if ( this.events[name].length === 0 ) {\n                // as if there were no listeners at all\n                this.events[name] = undefined;\n            }\n        }\n    },\n\n\n    /**\n     * Remove all callbacks for the given event name.\n     * Without event name clears all events.\n     *\n     * @param {string} [name] event identifier\n     *\n     * @example\n     * emitter.removeAllListeners('click');\n     * emitter.removeAllListeners();\n     *\n     * @deprecated\n     */\n    /*removeAllListeners: function ( name ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 0 && (typeof name !== 'string' || name.length === 0) ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // check input\n        if ( arguments.length === 0 ) {\n            // no arguments so remove everything\n            this.events = {};\n        } else if ( name ) {\n            if ( DEVELOP ) {\n                if ( this.events[name] ) { throw new Error(__filename + ': event is not removed'); }\n            }\n\n            // only name is given so remove all callbacks for the given event\n            // but object structure modification should be avoided\n            this.events[name] = undefined;\n        }\n    },*/\n\n\n    /**\n     * Execute each of the listeners in the given order with the supplied arguments.\n     *\n     * @param {string} name event identifier\n     *\n     * @example\n     * emitter.emit('init');\n     * emitter.emit('click', {src: panel1, dst: panel2});\n     * emitter.emit('load', error, data);\n     *\n     * // it's a good idea to emit event only when there are some listeners\n     * if ( this.events['click'] ) {\n     *     this.emit('click', {event: event});\n     * }\n     */\n    emit: function ( name ) {\n        var event = this.events[name],\n            index;\n\n        if ( DEVELOP ) {\n            if ( arguments.length < 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( event ) {\n            if ( DEVELOP ) {\n                if ( !Array.isArray(event) ) {\n                    throw new Error(__filename + ': wrong event type');\n                }\n            }\n\n            for ( index = 0; index < event.length; index++ ) {\n                if ( DEVELOP ) {\n                    if ( typeof event[index] !== 'function' ) {\n                        throw new Error(__filename + ': wrong event callback type');\n                    }\n                }\n\n                // invoke the callback with parameters\n                event[index].apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n    }\n};\n\n\n// correct constructor name\nEmitter.prototype.constructor = Emitter;\n\n\n// public\nmodule.exports = Emitter;\n","/**\n * Global application configuration.\n * Should store run-time options, paths, flags and so on.\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    user: {\n        account: '',\n        login: '',\n        name: '',\n        id: 0,\n        mac: '',\n        phone: '',\n        status: false,\n        tariff: ''\n    },\n    support: ''\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar app = require('./lib/main');\n\n\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core');\n//    metrics = require('app:metrics'),\n//    linkCSS;\n\n\n// global link\n//app.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\n//app.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\n//app.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n// // set max browser window size\n// window.moveTo(0, 0);\n// window.resizeTo(metrics.width, metrics.height);\n\n// load CSS file base on resolution\n/*linkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = 'css/' + (DEVELOP ? 'develop.' : 'release.') + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);*/\n\n\n// public\nmodule.exports = function ( name ) {\n    var link = document.createElement('link');\n\n    link.rel  = 'stylesheet';\n    link.href = 'css/' + name + '.' + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\n    document.head.appendChild(link);\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n/**\n * Layout component implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array} [config.data] array of items to add to layout\n */\nfunction Layout ( config ) {\n    var self = this;\n\n    // sanitize\n    config = config || {};\n\n    /**\n     * Index of focused child component\n     * @type {number}\n     */\n    this.focusIndex = 0;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && config.className !== undefined && typeof config.className !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    //config.className = 'layout ' + (config.className || '');\n\n    /**\n     * Component data\n     * @type {Array}\n     */\n    this.data = [];\n\n    Component.call(this, config);\n\n    this.init(config);\n\n    // add listener to move focus between children\n    this.addListener('keydown', function ( event ) {\n        switch ( event.code ) {\n            case keys.right:\n                if ( self.children.length && self.focusIndex < self.children.length - 1 ) {\n                    self.children[++self.focusIndex].focus();\n                }\n                break;\n            case keys.left:\n                if ( self.children.length && self.focusIndex > 0 ) {\n                    self.children[--self.focusIndex].focus();\n                }\n                break;\n            case keys.back:\n                // focus parent focused item if parent is layout list\n                if ( self.parent ) {\n                    self.parent.focus();\n                    if ( self.$parentItem ) {\n                        self.parent.focusItem(self.$parentItem);\n                    }\n                }\n                break;\n        }\n    });\n}\n\n\nLayout.prototype = Object.create(Component.prototype);\nLayout.prototype.constructor = Layout;\n\n// set component name\nLayout.prototype.name = 'mag-component-layout';\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var index, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( index = 0; index < data.length; index++ ) {\n        // cell value\n        item = data[index];\n        // plain text\n        if ( typeof item === 'object' ) {\n            // HTML element or component\n            if ( item instanceof Component || item instanceof HTMLElement ) {\n                data[index] = {\n                    value: item,\n                    wrap: false\n                };\n            } else {\n                data[index].wrap = true;\n            }\n        } else {\n            // wrap with defaults\n            data[index] = {\n                value: data[index],\n                wrap: true\n            };\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nLayout.prototype.init = function ( config ) {\n    var self = this,\n        data = normalize(config.data),\n        item, $wrapper, index;\n\n    // clear element if reinit\n    while (this.$node.firstChild) {\n        this.$node.removeChild(this.$node.firstChild);\n    }\n\n    this.data = data;\n\n    /**\n     * @this Component\n     */\n    function componentClickHandler (  ) {\n        self.focusIndex = this.index;\n    }\n\n    for ( index = 0; index < data.length; index++ ) {\n        item = data[index];\n        // plain text\n        if ( typeof item.value === 'string' ) {\n            $wrapper = document.createElement('div');\n            $wrapper.textContent = item.value;\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n        } else if ( item.value instanceof HTMLElement ) {\n            // HTML Element\n\n            // if with wrapper\n            if ( item.wrap ) {\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value);\n                this.$node.appendChild($wrapper);\n            } else {\n                // without wrapper\n                this.$node.appendChild(item.value);\n            }\n        } else if ( item.value instanceof Component ) {\n            // component\n            // force propagate events\n            item.value.propagate = true;\n\n            // set index to current component\n            item.value.index = this.children.length;\n\n            // change layout focus index if click component\n            item.value.addListener('click', componentClickHandler);\n\n            // append component\n            if ( item.wrap ) {\n                // with wrapper\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value.$node);\n                this.$node.appendChild($wrapper);\n                this.children.push(item.value);\n                item.value.parent = this;\n            } else {\n                // without wrapper\n                this.add(item.value);\n            }\n        } else {\n            $wrapper = document.createElement('div');\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n        }\n    }\n};\n\n\nmodule.exports = Layout;\n","/**\n * Main application entry point.\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar app     = require('mag-app'),\n    gettext = require('spa-gettext');\n\n// main application events\napp.once('load', function () {\n    // load language first\n    gettext.load({name: core.environment.language}, function ( error ) {\n        if ( error ) {\n            debug.info('language load error');\n        }\n\n        // set pages\n        app.pages = {\n            main: require('./pages/main')\n        };\n\n        app.ready();\n    });\n});\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app    = require('spa-app/lib/core'),\n    events = require('spa-app/lib/events');\n\n\n// get instance\nwindow.core = window.parent.getCoreInstance(window, app);\n\n// shims\nrequire('stb-shim-classlist');\n\n// apply geometry\nrequire('stb-app/lib/metrics');\n\n// load sdk css\nrequire('stb-app/lib/css')('sdk');\n\n// load theme css\nrequire('./css');\n\n// load app css\nrequire('stb-app/lib/css')('app');\n\n/**\n * Specify platform name\n *\n * @type {string}\n */\napp.platform = 'mag';\n\n/**\n * Show app.\n */\napp.ready = function () {\n    // if ( this.events['show'] ) {\n    //     this.emit('show');\n    // }\n    window.core.call('app:ready');\n};\n\n\n/**\n * Exit from app.\n * Destroy all application instance.\n * If callback function provided, and callback returns boolean 'true', application will stay alive.\n *\n * @fires module:/stb/app#exit\n */\napp.exit = function () {\n    if ( app.events['exit'] ) {\n        app.emit('exit');\n    }\n\n    core.call('exit');\n};\n\n\nevents.load = function ( event ) {\n    //window.core = window.parent.getCoreInstanse(window, app);\n    document.body.setAttribute('platform', app.platform);\n\n    if ( core.ready ) {\n        if ( app.events['load'] ) {\n            // notify listeners\n            app.emit('load', {});\n        }\n    } else {\n        core.once('load', function () {\n            //core.ready = true;\n            if ( app.events[event.type] ) {\n                // notify listeners\n                app.emit(event.type, event);\n            }\n        });\n    }\n};\n\n\n// activate development mechanisms and tools\nif ( DEVELOP ) {\n    //require('stb-develop');\n    require('./develop/main');\n} else {\n    // disable context menu\n    events.contextmenu = function ( event ) {\n        event.preventDefault();\n    };\n}\n\n\n//apply DOM events\nObject.keys(events).forEach(function ( name ) {\n    window.addEventListener(name, events[name]);\n});\n\n\n// new way of string handling\n// all strings are in UTF-16\n// since stbapp 2.18\n// if ( window.gSTB && gSTB.SetNativeStringMode ) {\n//     /* eslint new-cap: 0 */\n//     gSTB.SetNativeStringMode(true);\n// }\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nmodule.exports = {\n    /**\n     * Parse the given location search string into object.\n     *\n     * @param {string} query string to parse\n     *\n     * @return {Object.<string, string>} result data\n     */\n    parse: function ( query ) {\n        var data = {};\n\n        // parse and fill the data\n        query.split('&').forEach(function ( part ) {\n            part = part.split('=');\n            // valid number on params\n            if ( part.length === 2 ) {\n                data[part[0]] = decodeURIComponent(part[1]);\n            }\n        });\n\n        return data;\n    },\n\n\n    /**\n     * Make uri query part in a string form.\n     *\n     * @param {Object} params data to stringify\n     *\n     * @return {string} query string\n     */\n    stringify: function ( params ) {\n        var data = [];\n\n        Object.keys(params).forEach(function ( name ) {\n            data.push(name + '=' + encodeURIComponent(params[name]));\n        });\n\n        return data.join('&');\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('./core');\n\n\n// public\nmodule.exports = {\n    DOMContentLoaded: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // there are some listeners\n        if ( app.events['dom'] ) {\n            // notify listeners\n            app.emit('dom', event);\n            //console.log('DOMContentLoaded');\n        }\n    },\n\n    /**\n     * The load event is fired when a resource and its dependent resources have finished loading.\n     *\n     * Control flow:\n     *   1. Global handler.\n     *   2. Each page handler.\n     *   3. Application DONE event.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/load\n     *\n     * @param {Event} event generated object with event data\n     */\n    load: function ( event ) {\n        //var path;\n\n        //debug.event(event);\n        //console.log(event);\n\n        // time mark\n        //app.data.time.load = event.timeStamp;\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' load', 'green');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n\n        // time mark\n        //app.data.time.done = +new Date();\n\n        // everything is ready\n        // and there are some listeners\n        // if ( app.events['done'] ) {\n        //     // notify listeners\n        //     app.emit('done', event);\n        // }\n    },\n\n    /**\n     * The unload event is fired when the document or a child resource is being unloaded.\n     *\n     * Control flow:\n     *   1. Each page handler.\n     *   2. Global handler.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/unload\n     *\n     * @param {Event} event generated object with event data\n     */\n    unload: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' unload', 'red');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n    },\n\n    /**\n     * The error event is fired when a resource failed to load.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/error\n     *\n     * @param {Event} event generated object with event data\n     */\n    error: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n        //debug.fail('app event: ' + event.message, event, {tags: [event.type, 'event']});\n        console.error('app event: ' + event.message, event);\n    },\n\n    /**\n     * The keydown event is fired when a key is pressed down.\n     * Set event.stop to true in order to prevent bubbling.\n     *\n     * Control flow:\n     *   1. Current active component on the active page.\n     *   2. Current active page itself.\n     *   3. Application.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keydown\n     *\n     * @param {Event} event generated object with event data\n     */\n    keydown: function ( event ) {\n        var page = app.activePage,\n            eventLocal = {\n                code: event.keyCode,\n                stop: false\n            },\n            activeComponent;\n\n        if ( DEVELOP ) {\n            if ( !page ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        // filter phantoms\n        //if ( event.keyCode === 0 ) { return; }\n\n        // combined key code\n        //event.code = event.keyCode;\n\n        // apply key modifiers\n        if ( event.ctrlKey )  { eventLocal.code += 'c'; }\n        if ( event.altKey )   { eventLocal.code += 'a'; }\n        if ( event.shiftKey ) { eventLocal.code += 's'; }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + eventLocal.code, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + eventLocal.code, event);\n\n        // page.activeComponent can be set to null in event handles\n        activeComponent = page.activeComponent;\n\n        // current component handler\n        if ( activeComponent && activeComponent !== page ) {\n            // component is available and not page itself\n            if ( activeComponent.events[event.type] ) {\n                // there are some listeners\n                activeComponent.emit(event.type, eventLocal, event);\n            }\n\n            // todo: bubble event recursively\n            // bubbling\n            if (\n                !eventLocal.stop &&\n                activeComponent.propagate &&\n                activeComponent.parent &&\n                activeComponent.parent.events[event.type]\n            ) {\n                activeComponent.parent.emit(event.type, eventLocal, event);\n            }\n        }\n\n        // page handler\n        if ( !eventLocal.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, eventLocal, event);\n            }\n\n            // global app handler\n            if ( !event.stop ) {\n                // not prevented\n                if ( app.events[event.type] ) {\n                    // there are some listeners\n                    app.emit(event.type, eventLocal, event);\n                }\n            }\n        }\n\n        //// suppress non-printable keys in stb device (not in your browser)\n        //if ( app.data.host && keyCodes[event.code] ) {\n        //    event.preventDefault();\n        //}\n    },\n\n    /**\n     * The keypress event is fired when press a printable character.\n     * Delivers the event only to activeComponent at active page.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keypress\n     *\n     * @param {Event} event generated object with event data\n     * @param {string} event.char entered character\n     */\n    keypress: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + event.key, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + event.key, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n    },\n\n    /**\n     * The click event is fired when a pointing device button (usually a mouse button) is pressed and released on a single element.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/click\n     *\n     * @param {Event} event generated object with event data\n     */\n    /*click: function ( event ) {\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n     },*/\n\n    /**\n     * The contextmenu event is fired when the right button of the mouse is clicked (before the context menu is displayed),\n     * or when the context menu key is pressed (in which case the context menu is displayed at the bottom left of the focused\n     * element, unless the element is a tree, in which case the context menu is displayed at the bottom left of the current row).\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/contextmenu\n     *\n     * @param {Event} event generated object with event data\n     */\n    // contextmenu: function ( event ) {\n    //     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n    //\n    //     if ( !DEVELOP ) {\n    //         // disable right click in release mode\n    //         event.preventDefault();\n    //     }\n    // },\n\n    /*contextmenu: function ( event ) {\n     //var kbEvent = {}; //Object.create(document.createEvent('KeyboardEvent'));\n\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n\n     //kbEvent.type    = 'keydown';\n     //kbEvent.keyCode = 8;\n\n     //debug.log(kbEvent.type);\n\n     //globalEventListenerKeydown(kbEvent);\n     //var event = document.createEvent('KeyboardEvent');\n     //event.initEvent('keydown', true, true);\n\n     //document.dispatchEvent(kbEvent);\n\n     if ( !DEVELOP ) {\n     // disable right click in release mode\n     event.preventDefault();\n     }\n     },*/\n\n    /**\n     * The wheel event is fired when a wheel button of a pointing device (usually a mouse) is rotated.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel\n     *\n     * @param {Event} event generated object with event data\n     */\n    mousewheel: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n\n        // page handler\n        if ( !event.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, event);\n            }\n        }\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint-disable */\n\n'use strict';\n\n\nif ( !document.documentElement.classList ) {\n    var prototype = Array.prototype,\n        indexOf   = prototype.indexOf,\n        slice     = prototype.slice,\n        push      = prototype.push,\n        splice    = prototype.splice,\n        join      = prototype.join;\n\n    window.DOMTokenList = function ( el ) {\n        this._element = el;\n        if (el.className !== this._classCache) {\n            this._classCache = el.className;\n            if (!this._classCache) { return; }\n            var classes = this._classCache.replace(/^\\s+|\\s+$/g,'').split(/\\s+/),\n                i;\n            for (i = 0; i < classes.length; i++) {\n                push.call(this, classes[i]);\n            }\n        }\n    };\n\n    window.DOMTokenList.prototype = {\n        add: function ( token ) {\n            if(this.contains(token)) { return; }\n            push.call(this, token);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        contains: function ( token ) {\n            return indexOf.call(this, token) !== -1;\n        },\n\n        item: function ( index ) {\n            return this[index] || null;\n        },\n\n        remove: function ( token ) {\n            var i = indexOf.call(this, token);\n            if (i === -1) {\n                return;\n            }\n            splice.call(this, i, 1);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        toString: function () {\n            return join.call(this, ' ');\n        },\n\n        toggle: function ( token ) {\n            if (!this.contains(token)) {\n                this.add(token);\n            } else {\n                this.remove(token);\n            }\n            return this.contains(token);\n        }\n    };\n\n    Object.defineProperty(Element.prototype, 'classList', {\n        get: function () {\n            return new window.DOMTokenList(this);\n        }\n    });\n}\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    metrics = require('app:metrics');\n\n\n// global link\napp.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\napp.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\napp.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n\n// public\n//module.exports = app;\n","/**\n * Application geometry options.\n * Automatically loaded on application initialization and available as app.metrics.\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    480: {\n        // screen base dimension\n        height: 480,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  32,\n        availLeft:   48\n        // project-specific vars\n        // put here ...\n    },\n\n    576: {\n        // screen base dimension\n        height: 576,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  26,\n        availLeft:   54\n        // project-specific vars\n        // put here ...\n    },\n\n    720: {\n        // screen base dimension\n        height: 720,\n        width:  1280,\n        // safe zone margins\n        availTop:    30,\n        availBottom: 30,\n        availRight:  40,\n        availLeft:   40\n        // project-specific vars\n        // put here ...\n    },\n\n    1080: {\n        // screen base dimension\n        height: 1080,\n        width:  1920,\n        // safe zone margins\n        availTop:    45,\n        availBottom: 45,\n        availRight:  60,\n        availLeft:   60\n        // project-specific vars\n        // put here ...\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core'),\n    //metrics = require('app:metrics'),\n    linkCSS;\n\n\n//window.core = window.parent.getCoreInstance(window, app);\n\n\nlinkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = window.core.theme.path + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);\n\n\n// public\nmodule.exports = linkCSS;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    Gettext = require('cjs-gettext'),\n    loader  = new Emitter();\n\n\n/**\n * Wrap the given data with gettext instance\n * and export methods to the global scope.\n *\n * @param {Object} [data] localization data\n *\n * @return {Gettext} gettext instance\n */\nfunction prepare ( data ) {\n    var gettext = new Gettext(data);\n\n    // make it global\n    window.gettext  = window._ = gettext.gettext;\n    window.pgettext = gettext.pgettext;\n    window.ngettext = gettext.ngettext;\n\n    return gettext;\n}\n\n\n/**\n * Main application language\n */\nloader.defaultLanguage = 'en';\n\n\n/**\n * Simple gettext implementation.\n *\n * @param {Object} config options\n * @param {string} [config.path=lang] relative path to project root\n * @param {string} config.name language name\n * @param {string} [config.ext=json] language file extension\n * @param {function} callback hook on ready\n *\n * @return {boolean} flag is ajax request was made\n */\nloader.load = function ( config, callback ) {\n    var xhr;\n\n    if ( DEVELOP ) {\n        if ( !config.name || typeof config.name !== 'string' ) {\n            throw new Error(__filename + ': config.name must be a nonempty string');\n        }\n        if ( typeof callback !== 'function' ) {\n            throw new Error(__filename + ': wrong callback type');\n        }\n    }\n\n    // defaults\n    config.ext  = config.ext  || 'json';\n    config.path = config.path || 'lang';\n\n    // is it necessary to request a localization file?\n    if ( config.name === loader.defaultLanguage ) {\n        // no\n        prepare();\n        callback(null);\n\n        return false;\n    }\n\n    // yes\n    xhr = new XMLHttpRequest();\n\n    xhr.onload = function () {\n        var json;\n\n        try {\n            json = JSON.parse(xhr.responseText);\n\n            prepare(json);\n            callback(null);\n\n            // there are some listeners\n            if ( loader.events['load'] ) {\n                // notify listeners\n                loader.emit('load');\n            }\n        } catch ( error ) {\n            xhr.onerror(error);\n        }\n    };\n\n    xhr.ontimeout = xhr.onerror = function ( error ) {\n        prepare();\n        callback(error);\n\n        // there are some listeners\n        if ( loader.events['error'] ) {\n            // notify listeners\n            loader.emit('error', error);\n        }\n    };\n\n    xhr.open('GET', config.path + '/' + config.name + '.' + config.ext, true);\n    xhr.send(null);\n\n    return true;\n};\n\n\n// public\nmodule.exports = loader;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Translations handler.\n *\n * @constructor\n *\n * @param {Object} config init parameters\n */\nfunction Gettext ( config ) {\n    var data, meta;\n\n    // sanitize\n    config   = config || {};\n    data     = config.data || {};\n    data[''] = data[''] || {};\n\n    // shortcut\n    meta = config.meta;\n\n    /**\n     * Display the native language translation of a textual message.\n     *\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.gettext = function ( msgId ) {\n        return data[''][msgId] || msgId;\n    };\n\n\n    /**\n     * The \"p\" in \"pgettext\" stands for \"particular\": fetches a particular translation of the textual message.\n     *\n     * @param {string} context message context\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.pgettext = function ( context, msgId ) {\n        return data[context] && data[context][msgId] || msgId;\n    };\n\n\n    /**\n     * Display the native language translation of a textual message whose grammatical form depends on a number.\n     *\n     * @param {string} msgId textual message in a singular form\n     * @param {string} plural textual message in a plural form\n     * @param {number} value message number\n     *\n     * @return {string} translated text\n     */\n    this.ngettext = function ( msgId, plural, value ) {\n        /* eslint no-unused-vars: 0 */\n        /* eslint no-eval: 0 */\n        /* eslint id-length: 0 */\n        var n, evalResult;\n\n        if ( DEVELOP ) {\n            if ( Number(value) !== value ) {\n                throw new Error(__filename + ': value must be a number');\n            }\n        }\n\n        if ( data && meta && data[''][msgId] ) {\n            evalResult = eval('n = ' + value + '; ' + meta.plural);\n\n            if ( typeof evalResult === 'boolean' ) {\n                evalResult = +evalResult;\n            }\n\n            // translation\n            return data[''][msgId][evalResult];\n        }\n\n        // english\n        return value === 1 ? msgId : plural;\n    };\n}\n\n\n// correct constructor name\nGettext.prototype.constructor = Gettext;\n\n\n// public\nmodule.exports = Gettext;\n","/**\n * Main page implementation.\n *\n * @author Dmytro Fedotov <d.fedotov@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar id            = 'pageMain',\n    Page          = require('stb-component-page'),\n    config        = require('../config'),\n    app           = require('mag-app'),\n    page          = new Page({$node: document.getElementById(id)}),\n    PanelSet      = require('mag-component-panel-set'),\n    Panel         = require('mag-component-panel'),\n    LayoutList    = require('mag-component-layout-list'),\n    Modal         = require('mag-component-modal'),\n    dom           = require('spa-dom'),\n    keys          = require('stb-keys'),\n    ScrollBar     = require('stb-component-scrollbar'),\n    Flicker       = require('spa-component-flicker'),\n    ScrollArea    = require('mag-component-scroll-area'),\n    Footer        = require('mag-component-footer'),\n    getDeviceInfo = require('../modules/device.info'),\n    $itemsCountWrapper, $itemsCount, footerButtons, leftPanelContent;\n\n\nfunction showLogOutWarning () {\n    core.notify({\n        title:   gettext('Are you sure you want to log out?'),\n        icon:    'alert',\n        buttons: [\n            {\n                value: gettext('Cancel')\n            },\n            {\n                value: gettext('Ok'),\n                click: function () {\n                    core.backend.logout();\n                }\n            }\n        ]\n    });\n}\n\n\n$itemsCountWrapper = dom.tag(\n    'div',\n    {className: 'amountContainer'},\n    $itemsCount = dom.tag('div', {className: 'amount'}, '0')\n);\n\n\npage.add(\n    page.clock = new Flicker({\n        className: 'clock',\n        interval:  1000,\n        render:    function ( $item ) {\n            var time  = new Date(),\n                hours = time.getHours(),\n                mins  = time.getMinutes();\n\n            $item.innerText = (hours > 9 ? hours : '0' + hours) + ':' + (mins > 9 ? mins : '0' + mins);\n        }\n    })\n);\n\npage.clock.start();\n\n\nif ( typeof core.backend.logout === 'function' ) {\n    footerButtons = {\n        middle: [\n            {\n                code:   keys.f1,\n                title:  gettext('Logout'),\n                action: showLogOutWarning\n            }\n        ]\n    };\n\n    footerButtons.left = {\n        code: keys.menu,\n        action: function () {\n            page.panelSet.blur();\n            page.modalActions.show();\n        }\n    };\n\n    page.footer = new Footer({\n        visible: true,\n        parent: page,\n        data: footerButtons\n    });\n\n    // modal message: all actions for middle list item\n    page.add(\n        page.modalActions = new Modal({\n            visible:  false,\n            title:    gettext('actions'),\n            events:   {\n                show: function () {\n                    this.focus();\n                },\n                hide: function () {\n                    page.middlePanel.focus();\n                }\n            },\n            children: [\n                new LayoutList({\n                    cycle:      true,\n                    focusIndex: 0,\n                    size:       1,\n                    data:       [\n                        {\n                            items: [\n                                {className: 'theme-icon theme-icon-rc-f1', value: ''},\n                                {value: gettext('Logout')}\n                            ],\n                            click: showLogOutWarning\n                        }\n                    ],\n                    propagate:  true\n                })\n            ]\n        })\n    );\n}\n\n\n// modal message: exit\npage.add(\n    page.modalExit = new Modal({\n        title:     gettext('Exit'),\n        className: 'modalExit',\n        events:    {\n            show: function () {\n                this.focus();\n            },\n            hide: function () {\n                page.panelSet.focus();\n            }\n        },\n        children:  [\n            new LayoutList({\n                size:       2,\n                focusIndex: 0,\n                data:       [\n                    {\n                        items: [{value: gettext('Yes')}],\n                        click: function () {\n                            page.modalExit.hide();\n                            app.exit();\n                        }\n                    },\n                    {\n                        items: [{value: gettext('No')}],\n                        click: function () {\n                            page.modalExit.hide();\n                        }\n                    }\n                ],\n                propagate:  true\n            })\n        ]\n    })\n);\n\n\n// left panel (menu)\npage.leftPanel = new Panel({\n    title:     gettext('Menu'),\n    children:  [],\n    className: 'leftPanel'\n});\n\nleftPanelContent = [\n    {\n        items: [{className: 'theme-icon theme-icon-exit', value: ''}, {value: gettext('Exit')}],\n        click: function () {\n            page.panelSet.blur();\n            page.modalExit.show();\n        }\n    }\n];\n\nif ( typeof core.backend.logout === 'function' ) {\n    leftPanelContent.unshift({\n        items: [\n            {className: 'theme-icon theme-icon-logout', value: ''},\n            {value: gettext('Logout')}\n        ],\n        click: showLogOutWarning\n    });\n}\n\npage.leftPanel.add(\n    page.leftPanel.list = new LayoutList({\n        cycle:      true,\n        focusIndex: 0,\n        data:       leftPanelContent\n    })\n);\n\n\n// middle panel (list)\npage.middlePanel = new Panel({\n    title:     [\n        {value: gettext('List'), className: 'name'},\n        $itemsCountWrapper\n    ],\n    main:      true,\n    children:  [],\n    className: 'middlePanel'\n});\n\npage.middlePanel.scroll = new ScrollBar({});\n\npage.middlePanel.add(\n    page.middlePanel.list = new LayoutList({\n        cycle:      true,\n        focusIndex: 0,\n        size:       7,\n        data:       [],\n        scroll:     page.middlePanel.scroll,\n        events:     {\n            'focus:item': function ( data ) {\n                page.rightPanel.reset(data);\n            }\n        },\n        noData:     dom.tag(\n            'div',\n            {className: 'panelHint'},\n            dom.tag(\n                'div',\n                {className: 'hint'},\n                dom.tag('div', {className: 'hint', innerHTML: gettext('No data')})\n            )\n        )\n    }),\n    page.middlePanel.scroll\n);\n\npage.middlePanel.reset = function () {\n    var list                  = page.middlePanel.list,\n        platformSpecificItems = getDeviceInfo(),\n        data                  = [\n            {\n                items: [\n                    {className: 'theme-icon theme-icon-avatar'},\n                    {\n                        value: gettext('About user'),\n                        data: [\n                            {type: 'title', data: gettext('User login')},\n                            {type: 'text', data: config.user.login},\n                            {type: 'title', data: gettext('Account number')},\n                            {type: 'text', data: config.user.account},\n                            {type: 'title', data: gettext('Tariff')},\n                            {type: 'text', data: config.user.tariff}\n                        ]\n                    }\n                ]\n            },\n            {\n                items: [\n                    {className: 'theme-icon theme-icon-support'},\n                    {\n                        value: gettext('Support'),\n                        data: [\n                            {type: 'title', data: gettext('Call center')},\n                            {type: 'html', data: config.support}\n                        ]\n                    }\n                ]\n            }\n        ];\n\n    if ( platformSpecificItems ) {\n        data.splice(1, 0, platformSpecificItems);\n    }\n\n    $itemsCount.innerText = data.length;\n    list.init({\n        data:       data,\n        focusIndex: list.$focusItem && list.$focusItem.index ? list.$focusItem.index : 0\n    });\n};\n\n\n// right panel (information)\npage.rightPanel = new Panel({\n    title:     gettext('Details'),\n    className: 'rightPanel'\n});\n\npage.rightPanel.scroll = new ScrollBar({});\n\npage.rightPanel.textArea = new ScrollArea({\n    propagate: true,\n    step:      5,\n    scroll:    page.rightPanel.scroll\n});\n\npage.rightPanel.add(page.rightPanel.textArea, page.rightPanel.scroll);\n\npage.rightPanel.reset = function () {\n    var area = page.rightPanel.textArea,\n        data = null,\n        $fragment, index, $htmlElement;\n\n    area.$body.innerHTML = '';\n\n    if ( page.middlePanel.list.$focusItem && page.middlePanel.list.$focusItem.data ) {\n        data = page.middlePanel.list.$focusItem.data.items[1].data;\n    }\n\n    if ( data && data.length ) {\n        $fragment = dom.fragment();\n        for ( index = 0; index < data.length; index++ ) {\n            if ( data[index].type === 'title' ) {\n                $fragment.appendChild(dom.tag('div', {className: 'title theme-subhead-color'}, data[index].data));\n            } else if ( data[index].type === 'text' ) {\n                $fragment.appendChild(dom.tag('div', {}, data[index].data));\n            } else if ( data[index].type === 'html' ) {\n                $htmlElement = document.createElement('div');\n                $htmlElement.innerHTML = data[index].data;\n                $fragment.appendChild($htmlElement);\n            }\n        }\n        area.$body.appendChild($fragment);\n        page.rightPanel.textArea.show();\n        page.rightPanel.textArea.init();\n    } else {\n        page.rightPanel.textArea.hide();\n    }\n};\n\n\n// panel set: main\npage.add(\n    page.panelSet = new PanelSet({\n        visible:    true,\n        $node:      document.getElementById('panelSetMain'),\n        focusIndex: 0,\n        panels:     [page.leftPanel, page.middlePanel, page.rightPanel]\n    })\n);\n\n\n// listeners\npage.addListeners({\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.back:\n                page.panelSet.blur();\n                // exit but stay in the task manager\n                core.call('stop');\n                break;\n        }\n    },\n    show:    function () {\n        page.panelSet.show();\n        page.panelSet.focus();\n        page.middlePanel.reset();\n\n        core.backend.request('profile', {\n            version: 3,\n            method:  'GET',\n            onload:  function ( error, response ) {\n                if ( error ) {\n                    console.log('ajax error: can\\'t get profile');\n                    console.log(error);\n                    console.log(response);\n                } else {\n                    config.user.login = response.data.login || '';\n                    config.user.account = response.data.account || '';\n                    config.user.name = response.data.fname || '';\n                    config.user.id = response.data.id || '';\n                    config.user.tariff = response.data.tariff_plan || '';\n                    config.user.mac = response.data.mac || '';\n                    page.middlePanel.reset();\n                }\n            },\n            onerror: function () {\n                console.log('ajax error: can\\'t get profile');\n            }\n        });\n\n        core.backend.request('support', {\n            version: 3,\n            method:  'GET',\n            onload:  function ( error, response ) {\n                if ( error ) {\n                    console.log('ajax error: can\\'t get support');\n                } else {\n                    config.support = response.data;\n                    page.middlePanel.reset();\n                }\n            },\n            onerror: function () {\n                console.log('ajax error: can\\'t get profile');\n            }\n        });\n    }\n});\n\ncore.addListeners({\n    show: page.clock.start,\n    hide: page.clock.stop\n});\n\n\napp.route(page);\npage.show();\n\n\n// public\nmodule.exports = page;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-page');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-page';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base page implementation.\n *\n * A full-screen top-level layer that can operate as an independent separate entity.\n * It is added to the document body on creation if not already linked.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n *\n * @example\n * var Page = require('stb/ui/page'),\n *     page = new Page({\n *         $node: document.getElementById(id)\n *     });\n *\n * page.addListener('show', function show () {\n *     // page is visible now\n * });\n */\nfunction Page ( config ) {\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    /**\n     * Page visibility/active state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.active = false;\n\n    /**\n     * Link to the currently active component with focus.\n     *\n     * @readonly\n     * @type {Component}\n     */\n    this.activeComponent = null;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'page ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // state flag\n    this.active = this.$node.classList.contains('active');\n\n    // correct DOM parent/child connection if necessary\n    if ( this.$node.parentNode === null ) {\n        document.body.appendChild(this.$node);\n    }\n\n    // always itself\n    this.page = this;\n}\n\n\n// inheritance\nPage.prototype = Object.create(Component.prototype);\nPage.prototype.constructor = Page;\n\n// set component name\nPage.prototype.name = 'spa-component-page';\n\n\n// public\nmodule.exports = Page;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n/**\n * Magsdk panel set implementation\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {Array} [config.panels] array of panels to use\n * @param {Array} [config.focusIndex=0] focus panel index\n * @constructor\n * @extends Component\n */\nfunction PanelSet ( config ) {\n    var self = this,\n        index;\n\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.panels && !Array.isArray(config.panels) || !config.panels.length ) {\n            throw new Error(__filename + ': wrong config.panels type');\n        }\n    }\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'panelSet ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    this.panels = config.panels;\n\n    /**\n     * Index of current active panel\n     *\n     * @type {number}\n     */\n    this.focusIndex = 0;\n\n    // set special panels classes\n    if ( config.panels && !config.panels[0].main ) {\n        config.panels[0].$node.classList.add('left');\n        // small resolution special class\n        config.panels[0].$node.classList.add('expand');\n    }\n\n    if (  config.panels && config.panels[1] && config.panels[1].main ) {\n        // small resolution special class\n        config.panels[1].$node.classList.add('position-right');\n    }\n\n    if ( config.panels && config.panels[2] && config.panels[1].main ) {\n        config.panels[2].$node.classList.add('right');\n    }\n\n    // add panels\n    if ( config.panels ) {\n        this.add.apply(this, config.panels);\n    }\n\n    // panel keydown handler to set focus panel\n    function keydownHandler ( event ) {\n        switch ( event.code ) {\n            case keys.left:\n                if ( self.focusIndex > 0 ) {\n                    self.panels[self.focusIndex - 1].focus();\n                }\n                break;\n            case keys.right:\n                if ( self.focusIndex < self.panels.length - 1 ) {\n                    self.panels[self.focusIndex + 1].focus();\n                }\n                break;\n        }\n    }\n\n    // add special listener\n    for ( index = 0; index < this.panels.length; index++ ) {\n        this.panels[index].addListeners({\n            keydown: keydownHandler\n        });\n        // set panels indexes\n        this.panels[index].index = index;\n    }\n\n    /*if ( config.focusIndex && config.focusIndex < this.panels.length ) {\n     this.panels[config.focusIndex].focus();\n     } else {\n     if ( config.panels.length > 1 ) {\n     this.panels[1].focus();\n     } else {\n     this.panels[0].focus();\n     }\n     }*/\n}\n\nPanelSet.prototype = Object.create(Component.prototype);\nPanelSet.prototype.constructor = PanelSet;\n\n// set component name\nPanelSet.prototype.name = 'mag-component-panel-set';\n\n\n/**\n *\n */\nPanelSet.prototype.focus = function () {\n    Component.prototype.focus.call(this);\n    this.panels[this.focusIndex].focus();\n};\n\n/**\n *\n */\nPanelSet.prototype.blur = function () {\n    this.panels[this.focusIndex].blur();\n};\n\nmodule.exports = PanelSet;\n","/**\n * Global list of non-printable control key codes.\n *\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    backspace: 8,\n    tab:       9,\n    enter:     13,\n    escape:    27,\n    space:     32,\n    pageUp:    33,\n    pageDown:  34,\n    end:       35,\n    home:      36,\n    left:      37,\n    up:        38,\n    right:     39,\n    down:      40,\n    insert:    45,\n    // not \"delete\" because of old browsers issue\n    del:       46\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    Layout = require('mag-component-layout');\n\n/**\n * Extended panel implementation\n\n * @constructor\n * @extends Component\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {boolean} [config.main=false] set panel as main\n * @param {boolean} [config.size=1] size of panel width\n *\n * @example\n *\n * main = new Panel({\n *            size: 1,\n *             title: ['Left Panel', {className: 'info'}],\n *             main:true,\n *             children:[\n *                 new List({\n *                     data:['1 bla', '2 bro', '3 car', '4 hoho', 'Search'],\n *                     size:5\n *                 })\n *             ]\n *         });\n */\nfunction Panel ( config ) {\n    var $overlay;\n\n    config = config || {};\n\n    /**\n     * Size of panel\n     *\n     * @type {number}\n     */\n    this.size = 1;\n\n    /**\n     * Set panel as main\n     *\n     * @type {boolean}\n     */\n    this.main = false;\n\n    /**\n     * Index in panel set\n     *\n     * @type {number}\n     */\n    this.index = 0;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    // set default className if classList property empty or undefined\n    //config.className = 'Panel ' + (config.className || '');\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    //this.$node.classList.add('theme-main');\n    //this.$node.classList.add('theme-panel');\n\n    // add special class to set component size\n    if ( config.size ) {\n        this.size = config.size;\n        this.$node.classList.add('size' + config.size);\n    }\n\n    // add special class to set main panel\n    if ( config.main ) {\n        this.main = true;\n        this.$node.classList.add('main');\n    }\n\n    // create elements to set as component shadow\n    this.$shadow = {\n        left: document.createElement('div'),\n        right: document.createElement('div')\n    };\n\n    this.$shadow.left.className = 'shadow left';\n    this.$node.appendChild(this.$shadow.left);\n\n    this.$shadow.right.className = 'shadow right';\n    this.$node.appendChild(this.$shadow.right);\n\n    // add title to panel\n    if ( config.title ) {\n        if ( !Array.isArray(config.title) ) {\n            config.title = [config.title];\n        }\n        this.$title = new Layout({\n            //className: 'title theme-header theme-title',\n            className: 'title',\n            data: config.title,\n            focusable: false\n        });\n        this.$node.appendChild(this.$title.$node);\n    }\n\n    this.$node.appendChild(this.$body);\n\n    $overlay = document.createElement('div');\n    $overlay.className = 'overlay';\n    this.$node.appendChild($overlay);\n}\n\n// inheritance\nPanel.prototype = Object.create(Component.prototype);\nPanel.prototype.constructor = Panel;\n\n// set component name\nPanel.prototype.name = 'mag-component-panel';\n\n\n/**\n * Default events\n *\n * @type {{focus: Function}} try to focus first child component if it present\n */\nPanel.prototype.defaultEvents = {\n    focus: function () {\n        if ( this.children.length ) {\n            this.children[0].focus();\n        }\n    }\n};\n\n\n/**\n * Redefine default component focus to set panel as active even when give focus to children components\n */\nPanel.prototype.focus = function () {\n    if ( this.focusable ) {\n        this.parent.panels[this.parent.focusIndex].$node.classList.remove('active');\n        this.parent.panels[this.parent.focusIndex].$node.classList.remove('top');\n        Component.prototype.focus.call(this);\n        this.parent.focusIndex = this.index;\n        this.$node.classList.add('active');\n        this.$node.classList.add('top');\n        if ( this.index === 0 && this.parent.panels[1] && this.parent.panels[1].main ) {\n            this.parent.panels[1].$node.classList.remove('position-left');\n            this.parent.panels[1].$node.classList.add('position-right');\n            if ( this.parent.panels[2] ) {\n                this.parent.panels[2].$node.classList.remove('expand');\n            }\n            this.$node.classList.add('expand');\n\n        } else if ( this.index === 2 && this.parent.panels[1].main ) {\n            this.parent.panels[1].$node.classList.remove('position-right');\n            this.parent.panels[1].$node.classList.add('position-left');\n            this.parent.panels[0].$node.classList.remove('expand');\n            this.$node.classList.add('expand');\n        }\n    }\n};\n\n/**\n * Blur panel\n */\nPanel.prototype.blur = function () {\n    this.parent.panels[this.parent.focusIndex].$node.classList.remove('active');\n    Component.prototype.blur.call(this);\n};\n\n\n// public\nmodule.exports = Panel;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar List = require('mag-component-list'),\n    Layout = require('mag-component-layout');\n\n/**\n *  Layout list contains array of layout components\n *\n * @constructor\n * @extends List\n *\n * @param {Object} config object\n * @param {Element} [config.noData=''] element or string to display if set empty data\n *\n * @example\n * var CheckList = require('../stb/ui/layout.list'),\n *     list = new LayoutList({\n *         propagate: true,\n *         size: 7,\n *         focusIndex: 0,\n *         noData: 'No channels'\n *         data: [\n *                 {\n *                     items: [\n *                         {\n *                             className: 'star'\n *                         },\n *                         'Some text'\n *                     ],\n *                     click: function () {\n *                         // do something\n *                     }\n *                 },\n *                 {\n *                     items: [\n *                         'Hello world',\n *                         {\n *                             value: 'hi',\n *                             className: 'status'\n *                         }\n *                     ],\n *                     value:{\n *                         uri: 'http://55.55.55.55/some'\n *                     },\n *                     click: someHandler\n *                 },\n *                 {\n *                     items: [\n *                         {\n *                             className: 'big',\n *                             value: ' Some'\n *                         },\n *                         {\n *                             value: new Input()\n *                         }\n *                     ]\n *                 },\n *                 {\n *                     items: [\n *                         new Button({value: 'Ok'}),\n *                         new Button({value: 'Cancel'}),\n *                         new Button({value: 'Exit'})\n *                     ]\n *                 }\n *             ]\n * });\n */\nfunction LayoutList ( config ) {\n    var self = this;\n\n    config = config || {};\n\n    /**\n     * Elements handlers\n     */\n    this.handlers = {};\n\n    /**\n     * No data placeholder\n     *\n     * @type {Element}\n     */\n    this.$noData = null;\n\n    //config.className = 'layoutList ' + (config.className || '');\n\n    config.propagate = config.propagate === undefined ? true : config.propagate;\n\n    /**\n     * Set data layout to be fixed to cache HTML elements\n     *\n     * @type {boolean|*}\n     */\n    this.fixedData = config.fixedData || false;\n\n    //config.$body = document.createElement('div');\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    this.$noData = document.createElement('div');\n    this.$noData.className = 'noData hidden';\n\n    List.call(this, config);\n\n    this.$node.appendChild(this.$body);\n    this.$node.appendChild(this.$noData);\n\n    // add handler to focus inner layout\n    this.addListener('click:item', function ( event ) {\n        // focus inner layout of item\n        if ( event.$item.layout.children.length && !event.inner ) {\n            event.$item.layout.children[event.$item.layout.focusIndex].focus();\n        }\n\n        // only focus item if we click mouse\n        if ( event.inner ) {\n            self.focus();\n            self.focusItem(event.$item);\n        }\n        // do click callback if it present\n        if ( self.handlers[event.$item.index] ) {\n            self.handlers[event.$item.index](event.$item);\n        }\n    });\n}\n\n\nLayoutList.prototype = Object.create(List.prototype);\nLayoutList.prototype.constructor = LayoutList;\n\n// set component name\nLayoutList.prototype.name = 'mag-component-layout-list';\n\n\n/*eslint id-length:0*/\n/**\n * Default render function\n *\n * @param {Element} $item in list\n * @param {Object} config to render layout element\n */\nLayoutList.prototype.renderItemDefault = function ( $item, config ) {\n    var layout, layoutConfig,\n        currentNode,\n        currentData,\n        i;\n\n    if ( $item.ready && this.fixedData ) {\n        for ( i = 0; i < config.items.length; i++ ) {\n            currentData = config.items[i];\n            if ( typeof currentData.value === 'string' || currentData.value === undefined ) {\n                currentNode = $item.layout.$node.childNodes[i];\n                currentNode.innerText = currentData.value || '';\n                currentNode.className = currentData.className || '';\n            }\n        }\n    } else {\n        // clear inner content\n        while ( $item.firstChild ) {\n            $item.removeChild($item.firstChild);\n        }\n\n        layoutConfig = {\n            focusable: false,\n            data: config.items\n        };\n\n        if ( config.className ) {\n            layoutConfig.className = config.className;\n        }\n\n        layout = new Layout(layoutConfig);\n\n        $item.appendChild(layout.$node);\n        $item.layout = layout;\n        layout.parent = this;\n        layout.$parentItem = $item;\n\n        // focus layoutList if click on layout\n        layout.addListener('click', function () {\n            // add inner property to set that event comes from inner component\n            layout.parent.emit('click:item', {$item: $item, inner: true});\n        });\n\n        if ( config.click ) {\n            this.handlers[$item.index] = config.click;\n        }\n        // item is rendered\n        $item.ready = true;\n    }\n    $item.value = config.value || {};\n};\n\n\nLayoutList.prototype.setData = function ( config ) {\n    List.prototype.setData.call(this, config);\n\n    if ( config.data && config.data.length ) {\n        this.$noData.classList.add('hidden');\n    } else {\n        this.$noData.classList.remove('hidden');\n    }\n};\n\n\nLayoutList.prototype.init = function ( config ) {\n    var $wrap;\n\n    List.prototype.init.call(this, config);\n    if ( config.noData ) {\n        if ( DEVELOP ) {\n            if ( typeof config.noData !== 'string' && !(config.noData instanceof Element) ) {\n                throw new Error(__filename + ': wrong config.$noData type');\n            }\n        }\n\n        this.$noData.innerHTML = '';\n        if ( config.noData instanceof Element ) {\n            this.$noData.appendChild(config.noData);\n        } else if ( typeof config.noData === 'string' ) {\n            $wrap = document.createElement('div');\n            $wrap.innerText = config.noData;\n            this.$noData.appendChild($wrap);\n        }\n    }\n\n    if ( config.data && config.data.length ) {\n        this.$noData.classList.add('hidden');\n    } else {\n        this.$noData.classList.remove('hidden');\n    }\n};\n\nLayoutList.prototype.renderItem = LayoutList.prototype.renderItemDefault;\n\n\nmodule.exports = LayoutList;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n/* eslint complexity: [error, 37] */\n/* eslint max-lines-per-function: 1 */\n/* eslint no-fallthrough: 1 */\n/* eslint complexity: 1 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n\n/**\n * Mouse click event.\n *\n * @event module:stb/ui/list~List#click:item\n *\n * @type {Object}\n * @property {Element} $item clicked HTML item\n * @property {Event} event click event data\n */\n\n\n/**\n * Base list implementation.\n *\n * Each data item can be either a primitive value or an object with these fields:\n *\n *  Name    | Description\n * ---------|-------------\n *  value   | actual cell value to render\n *  mark    | is it necessary or not to render this cell as marked\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array}    [config.data=[]]     component data to visualize\n * @param {function} [config.render]      method to build each grid cell content\n * @param {function} [config.navigate]    method to move focus according to pressed keys\n * @param {number}   [config.size=5]      amount of visible items on a page\n * @param {number}   [config.viewIndex=0] move view window to this position on init\n * @param {number}   [config.focusIndex]  list item index to make item focused (move view window to this position)\n * @param {boolean}  [config.cycle=true]  allow or not to jump to the opposite side of a list when there is nowhere to go next\n * @param {boolean}  [config.scroll=null] associated ScrollBar component link\n * @param {Object}   [config.provider]    data provider\n *\n * @fires module:stb/ui/list~List#click:item\n */\nfunction List ( config ) {\n    // current execution context\n    //var self = this;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Link to the currently focused DOM element.\n     *\n     * @type {Element}\n     */\n    this.$focusItem = null;\n\n    /**\n     * Position of the visible window to render.\n     *\n     * @type {number}\n     */\n    this.viewIndex = null;\n\n    /**\n     * Component data to visualize.\n     *\n     * @type {Array}\n     */\n    this.data = [];\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Amount of visible items on a page.\n     *\n     * @type {number}\n     */\n    this.size = 5;\n\n    /**\n     * Allow or not to jump to the opposite side of a list when there is nowhere to go next.\n     *\n     * @type {boolean}\n     */\n    this.cycle = false;\n\n    /**\n     * Associated ScrollBar component link.\n     *\n     * @type {ScrollBar}\n     */\n    this.scroll = null;\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    /**\n     * Associated data provider\n     *\n     * @type {Provider}\n     */\n    this.provider = null;\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    //config.className += ' theme-main';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // component setup\n    this.init(config);\n\n    // custom navigation method\n    //if ( config.navigate ) {\n    //    if ( DEVELOP ) {\n    //        if ( typeof config.navigate !== 'function' ) { throw new Error(__filename + ': wrong config.navigate type'); }\n    //    }\n    //    // apply\n    //    this.navigate = config.navigate;\n    //}\n\n    // navigation by keyboard\n    //this.addListener('keydown', this.navigate);\n\n    // navigation by mouse\n    //this.$body.addEventListener('mousewheel', function ( event ) {\n    //    // scrolling by Y axis\n    //    if ( self.type === self.TYPE_VERTICAL && event.wheelDeltaY ) {\n    //        self.move(event.wheelDeltaY > 0 ? 38 : keys.down);\n    //    }\n    //\n    //    // scrolling by X axis\n    //    if ( self.type === self.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n    //        self.move(event.wheelDeltaX > 0 ? 37 : 39);\n    //    }\n    //});\n}\n\n\n// inheritance\nList.prototype = Object.create(Component.prototype);\nList.prototype.constructor = List;\n\n// set component name\nList.prototype.name = 'mag-component-list';\n\nList.prototype.TYPE_VERTICAL   = 1;\nList.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Fill the given item with data.\n *\n * @param {Element} $item item DOM link\n * @param {*} data associated with this item data\n */\nList.prototype.renderItemDefault = function ( $item, data ) {\n    $item.innerText = data.value;\n};\n\n\n/**\n * Method to build each list item content.\n * Can be redefined to provide custom rendering.\n *\n * @type {function}\n */\nList.prototype.renderItem = List.prototype.renderItemDefault;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nList.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse wheel events.\n     *\n     * @param {Event} event generated event\n     */\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        if ( this.type === this.TYPE_VERTICAL && event.wheelDeltaY ) {\n            this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n        }\n\n        // scrolling by X axis\n        if ( this.type === this.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n            this.move(event.wheelDeltaX > 0 ? keys.left : keys.right);\n        }\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n            case keys.right:\n            case keys.left:\n            case keys.pageUp:\n            case keys.pageDown:\n            case keys.home:\n            case keys.end:\n                // cursor move only on arrow keys\n                this.move(event.code);\n                break;\n            case keys.enter:\n                // there are some listeners\n                if ( this.events['click:item'] && this.$focusItem ) {\n                    // notify listeners\n                    this.emit('click:item', {$item: this.$focusItem, event: event});\n                }\n                break;\n        }\n    }\n};\n\n\n/**\n * Default method to move focus according to pressed keys.\n *\n * @param {Object} event generated event source of movement\n */\n//List.prototype.navigateDefault = function ( event ) {\n//    switch ( event.code ) {\n//        case 38:\n//        case 40:\n//        case 39:\n//        case 37:\n//        case 33:\n//        case 34:\n//        case 36:\n//        case 35:\n//            // cursor move only on arrow keys\n//            this.move(event.code);\n//            break;\n//        case 13:\n//            // there are some listeners\n//            if ( this.events['click:item'] ) {\n//                // notify listeners\n//                this.emit('click:item', {$item: this.$focusItem, event: event});\n//            }\n//            break;\n//    }\n//};\n\n\n/**\n * Current active method to move focus according to pressed keys.\n * Can be redefined to provide custom navigation.\n *\n * @type {function}\n */\n//List.prototype.navigate = List.prototype.navigateDefault;\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var idx, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( idx = 0; idx < data.length; idx++ ) {\n        // cell value\n        item = data[idx];\n        // primitive value\n        if ( typeof item !== 'object' ) {\n            // wrap with defaults\n            item = data[idx] = {\n                value: data[idx]\n            };\n        }\n\n        if ( DEVELOP ) {\n            //if ( !('value' in item) ) { throw new Error(__filename + ': field \"value\" is missing'); }\n            if ( ('mark' in item) && Boolean(item.mark) !== item.mark ) {\n                throw new Error(__filename + ': item.mark must be boolean');\n            }\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.init = function ( config ) {\n    var self     = this,\n        currSize = this.$body.children.length,\n        /**\n         * Item mouse click handler.\n         *\n         * @param {Event} event click event data\n         *\n         * @this Element\n         *\n         * @fires module:stb/ui/list~List#click:item\n         */\n        onClick = function ( event ) {\n            if ( this.data ) {\n                self.focusItem(this);\n\n                // there are some listeners\n                if ( self.events['click:item'] ) {\n                    // notify listeners\n                    self.emit('click:item', {$item: this, event: event});\n                }\n            }\n        },\n        item, idx;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // apply cycle behaviour\n    if ( config.cycle !== undefined ) { this.cycle = config.cycle; }\n\n    // apply ScrollBar link\n    if ( config.scroll ) { this.scroll = config.scroll; }\n\n    // apply data provider\n    if ( config.provider ) { this.provider = config.provider; }\n\n\n    // custom render method\n    if ( config.render ) {\n        if ( DEVELOP ) {\n            if ( typeof config.render !== 'function' ) {\n                throw new Error(__filename + ': wrong config.render type');\n            }\n        }\n\n        // apply\n        this.renderItem = config.render;\n    }\n\n    // list items amount on page\n    if ( config.size ) {\n        if ( DEVELOP ) {\n            if ( Number(config.size) !== config.size ) {\n                throw new Error(__filename + ': config.size must be a number');\n            }\n            if ( config.size <= 0 ) {\n                throw new Error(__filename + ': config.size should be positive');\n            }\n        }\n\n        // apply\n        this.size = config.size;\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( name ) {\n            self.events[name] = null;\n            self.addListener(name, config.events[name]);\n        });\n    }\n\n    // geometry has changed or initial draw\n    if ( this.size !== currSize ) {\n        // non-empty list\n        if ( currSize > 0 ) {\n            // clear old items\n            this.$body.innerText = null;\n        }\n\n        // create new items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            item = document.createElement('div');\n            item.index = idx;\n            //item.className = 'item theme-list-item';\n            item.className = 'item';\n\n            item.addEventListener('click', onClick);\n            this.$body.appendChild(item);\n        }\n    }\n\n    if ( this.provider ) {\n        if ( this.provider.blocked ) {\n            return;\n        }\n\n        this.provider.get( null, function ( error, data ) {\n            if ( error ) {\n                if ( self.events['data:error'] ) {\n                    /**\n                     * Provider get error while take new data\n                     *\n                     * @event module:stb/ui/list~List#data:error\n                     */\n                    self.emit('data:error', error);\n                }\n            } else {\n                if ( data ) {\n                    config.data = data;\n                    self.setData(config);\n                    if ( self.scroll ) {\n                        self.scroll.init({\n                            realSize: self.provider.maxCount,\n                            viewSize: self.provider.size,\n                            value: self.provider.head + self.provider.pos\n                        });\n                    }\n                }\n                if ( self.events['data:get'] ) {\n                    /**\n                     * Provider request new data\n                     *\n                     * @event module:stb/ui/list~List#data:get\n                     *\n                     * @type {Object}\n                     */\n                    self.emit('data:get');\n                }\n            }\n        });\n    } else if ( config.data ) {\n        this.setData(config);\n    }\n};\n\n/**\n * Set data and render inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.setData = function ( config ) {\n    // apply list of items\n\n    if ( config.data ) {\n        if ( DEVELOP ) {\n            if ( !Array.isArray(config.data) ) { throw new Error(__filename + ': wrong config.data type'); }\n        }\n        // prepare user data\n        this.data = normalize(config.data);\n    }\n\n    // view window position\n    if ( DEVELOP ) {\n        if ( config.viewIndex !== undefined ) {\n            if ( Number(config.viewIndex) !== config.viewIndex ) {\n                throw new Error(__filename + ': config.viewIndex must be a number');\n            }\n            if ( config.viewIndex < 0 ) {\n                throw new Error(__filename + ': config.viewIndex should be positive');\n            }\n        }\n    }\n\n    // reset current view window position\n    this.viewIndex = null;\n\n    if ( this.$focusItem ) {\n        this.blurItem(this.$focusItem);\n    }\n\n    if ( this.scroll ) {\n        if ( this.provider ) {\n            if ( this.scroll.realSize !== this.provider.maxCount ) {\n                this.scroll.init({\n                    realSize: this.provider.maxCount,\n                    viewSize: this.provider.size,\n                    value: this.provider.head + this.provider.pos\n                });\n            }\n        } else {\n            this.scroll.init({\n                realSize: this.data.length,\n                viewSize: this.size,\n                value: config.viewIndex || 0\n            });\n        }\n    }\n\n    // set focus item\n    if ( config.focusIndex !== undefined && this.data.length ) {\n        if ( DEVELOP ) {\n            if ( Number(config.focusIndex) !== config.focusIndex ) {\n                throw new Error(__filename + ': config.focusIndex must be a number');\n            }\n            if ( config.focusIndex < 0 ) {\n                throw new Error(__filename + ': config.focusIndex should be positive');\n            }\n            // if ( config.focusIndex > this.data.length - 1 ) {\n            //     throw new Error(__filename + ': config.focusIndex should be less than data size');\n            // }\n        }\n\n        // jump to the necessary item\n        this.focusIndex(config.focusIndex);\n    } else {\n        // go to the first page\n        this.renderView(config.viewIndex || 0);\n    }\n};\n\n\n/**\n * Shift the visible view window event.\n *\n * @event module:stb/ui/list~List#move:view\n *\n * @type {Object}\n * @property {number} prevIndex previous view window position\n * @property {number} currIndex current view window position\n */\n\n\n/**\n * Draw the visible window.\n *\n * @param {number} index start position to render\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#move:view\n */\nList.prototype.renderView = function ( index ) {\n    var $item, idx, itemData, prevIndex, currIndex;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be more than zero');\n        }\n        // if ( index >= this.data.length ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // has the view window position changed\n    if ( this.viewIndex !== index ) {\n        // save for emit\n        prevIndex = this.viewIndex;\n        // sync global pointer\n        this.viewIndex = currIndex = index;\n\n        // rebuild all visible items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            // shortcuts\n            $item    = this.$body.children[idx];\n            itemData = this.data[index];\n\n            // real item or stub\n            if ( itemData ) {\n                // correct inner data/index and render\n                $item.data  = itemData;\n                $item.index = index;\n                this.renderItem($item, itemData);\n\n                // apply CSS\n                if ( itemData.mark ) {\n                    $item.classList.add('mark');\n                } else {\n                    $item.classList.remove('mark');\n                }\n            } else {\n                // nothing to render\n                $item.data = $item.index = undefined;\n                $item.innerHTML = '&nbsp;';\n                $item.ready = false;\n            }\n            index++;\n        }\n\n        // there are some listeners\n        if ( this.events['move:view'] ) {\n            // notify listeners\n            this.emit('move:view', {prevIndex: prevIndex, currIndex: currIndex});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            this.emit('select:item', {$item: $item});\n        }\n\n        // update a linked scroll component\n        if ( this.scroll ) {\n            this.scroll.scrollTo(this.provider ? this.provider.head + this.provider.pos : this.viewIndex);\n        }\n\n        // full rebuild\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Move focus to the given direction.\n *\n * @param {number} direction arrow key code\n *\n * @fires module:stb/ui/list~List#cycle\n * @fires module:stb/ui/list~List#overflow\n */\nList.prototype.move = function ( direction ) {\n    var self = this,\n        force = false;\n\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(direction) !== direction ) {\n            throw new Error(__filename + ': direction must be a number');\n        }\n    }\n\n    // empty list\n    if ( !this.data.length ) {\n        return;\n    }\n\n    switch ( direction ) {\n        case keys.left:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.up:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index > 0 ) {\n                    if ( this.$focusItem === this.$body.firstChild ) {\n                        this.renderView(this.viewIndex - 1);\n                    } else {\n                        this.focusItem(this.$focusItem.previousSibling);\n                    }\n                } else if ( this.provider ) {\n                    if ( this.provider.blocked ) {\n                        return;\n                    }\n\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the end of the list\n                        this.move(keys.end);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.right:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.down:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index < this.data.length - 1 ) {\n                    if ( this.$focusItem === this.$body.lastChild ) {\n                        this.renderView(this.viewIndex + 1);\n                    } else {\n                        this.focusItem(this.$focusItem.nextSibling);\n                    }\n                } else if ( this.provider ) {\n                    if ( this.provider.blocked ) {\n                        return;\n                    }\n\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the beginning of the list\n                        this.move(keys.home);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.pageUp:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n\n                return;\n            }\n            if ( this.viewIndex < this.size ) {\n                // first page\n                this.renderView(0);\n            } else {\n                // second page and further\n                this.renderView(this.viewIndex - this.size + 1);\n            }\n\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.pageDown:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            // data is bigger then one page\n            if ( this.data.length > this.size ) {\n                // determine jump size\n                if ( this.viewIndex > this.data.length - this.size * 2 ) {\n                    // last page\n                    this.renderView(this.data.length - this.size);\n                } else {\n                    // before the last page\n                    this.renderView(this.viewIndex + this.size - 1);\n                }\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n        case keys.home:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n                break;\n            }\n            this.renderView(0);\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.end:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            if ( this.data.length > this.size ) {\n                this.renderView(this.data.length - this.size);\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n    }\n};\n\n\n/**\n * Highlight the given DOM element as focused.\n * Remove focus from the previously focused item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.focusItem = function ( $item ) {\n    var $prev = this.$focusItem;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n    }\n\n    // different element\n    if ( $item && $prev !== $item ) {\n        if ( DEVELOP ) {\n            if ( !($item instanceof Element) ) {\n                throw new Error(__filename + ': wrong $item type');\n            }\n            if ( $item.parentNode !== this.$body ) {\n                throw new Error(__filename + ': wrong $item parent element');\n            }\n        }\n\n        // some item is focused already\n        if ( $prev !== null ) {\n            if ( DEVELOP ) {\n                if ( !($prev instanceof Element) ) {\n                    throw new Error(__filename + ': wrong $prev type');\n                }\n            }\n\n            // style\n            $prev.classList.remove('focus');\n            //$prev.classList.remove('theme-focus');\n\n            // there are some listeners\n            if ( this.events['blur:item'] ) {\n                /**\n                 * Remove focus from an element.\n                 *\n                 * @event module:stb/ui/list~List#blur:item\n                 *\n                 * @type {Object}\n                 * @property {Element} $item previously focused HTML element\n                 */\n                this.emit('blur:item', {$item: $prev});\n            }\n        }\n        // reassign\n        this.$focusItem = $item;\n\n        this.$focusItem.data = this.data[this.$focusItem.index];\n\n        // correct CSS\n        $item.classList.add('focus');\n        //$item.classList.add('theme-focus');\n\n        // there are some listeners\n        if ( this.events['focus:item'] ) {\n            /**\n             * Set focus to a DOM element.\n             *\n             * @event module:stb/ui/list~List#focus:item\n             *\n             * @type {Object}\n             * @property {Element} $prev old/previous focused HTML element\n             * @property {Element} $curr new/current focused HTML element\n             */\n            this.emit('focus:item', {$prev: $prev, $curr: $item});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            /**\n             * Set focus to a list item.\n             *\n             * @event module:stb/ui/list~List#select:item\n             *\n             * @type {Object}\n             * @property {Element} $item new/current focused item\n             */\n            this.emit('select:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Highlight the given DOM element as blur.\n * Remove focus from the item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.blurItem = function ( $item ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) { throw new Error(__filename + ': wrong arguments number'); }\n    }\n\n    // different element\n    if ( $item ) {\n        if ( $item === this.$focusItem ) {\n            this.$focusItem = null;\n        }\n\n        $item.classList.remove('focus');\n        //$item.classList.remove('theme-focus');\n\n        // there are some listeners\n        if ( this.events['blur:item'] ) {\n            /**\n             * Remove focus from an element.\n             *\n             * @event module:stb/ui/list~List#blur:item\n             *\n             * @type {Object}\n             * @property {Element} $item previously focused HTML element\n             */\n            this.emit('blur:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Set the given item focused by item index.\n *\n * @param {number} index item data index\n */\nList.prototype.focusIndex = function ( index ) {\n    var viewIndex = this.viewIndex || 0;\n\n    if ( DEVELOP ) {\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be positive');\n        }\n        // if ( index > this.data.length - 1 ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // determine direction\n    if ( index >= viewIndex + this.size ) {\n        // check range\n        index = index < this.data.length - 1 ? index : this.data.length - 1;\n        // move down\n        this.renderView(index - this.size + 1);\n        this.focusItem(this.$body.lastChild);\n    } else if ( index < viewIndex ) {\n        // check range\n        index = index > 0 ? index : 0;\n        // move up\n        this.renderView(index);\n        this.focusItem(this.$body.firstChild);\n    } else {\n        // no move\n        if ( this.viewIndex === null ) {\n            // first attempt\n            this.renderView(0);\n        }\n        this.focusItem(this.$body.children[index - viewIndex]);\n    }\n};\n\n\n/**\n * Set item state and appearance as marked.\n *\n * @param {Node|Element} $item element to focus\n * @param {boolean} state true - marked, false - not marked\n */\nList.prototype.markItem = function ( $item, state ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 2 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !($item instanceof Element) ) {\n            throw new Error(__filename + ': wrong $item type');\n        }\n        if ( $item.parentNode !== this.$body ) {\n            throw new Error(__filename + ': wrong $item parent element');\n        }\n        if ( Boolean(state) !== state ) {\n            throw new Error(__filename + ': state must be boolean');\n        }\n    }\n\n    // correct CSS\n    if ( state ) {\n        $item.classList.add('mark');\n    } else {\n        $item.classList.remove('mark');\n    }\n\n    // apply flag\n    $item.data.mark = state;\n};\n\n\n// public\nmodule.exports = List;\n","/**\n * @license The MIT License (MIT)\n * @copyright Dmitry Fedotov <bas.jsdev@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\nvar StbComponentModal = require('stb-component-modal'),\n    Component         = require('stb-component'),\n    keys              = require('stb-keys');\n\n\n/**\n * Modal window implementation.\n *\n * @constructor\n * @extends StbComponentModal\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {Object} [config.title] message title\n * @param {Object} [config.className] message classname\n * @param {Object} [config.icon] icon at header\n * @param {Object} [config.visible] visibility flag\n * @param {Object} [config.children] content (inherited from the parent)\n *\n * @example\n * var modalSort = new Modal({\n *     visible: false,\n *     title: 'sort',\n *     events: {\n *         show: function () {\n *             list.focus();\n *         },\n *         hide: function () {\n *             page.panelSet.focus();\n *         }\n *     },\n *     children: [list = new RadioList({})]\n * });\n * page.add(modalSort);\n */\nfunction Modal ( config ) {\n    var self = this,\n        $overlay, $body, onkeydown;\n\n    // sanitize\n    config = config || {};\n    config.events = config.events || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.icon && typeof config.icon !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.icon');\n        }\n        if ( config.title && typeof config.title !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.title');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body ) {\n            throw new Error(__filename + ': config.$body should not be provided in Modal manually');\n        }\n    }\n\n    // usually can't accept focus\n    config.focusable = config.focusable || false;\n    // hide by default\n    config.visible = config.visible || false;\n    // add default close by click\n    config.events.click = config.events.click || function () { self.hide(); };\n    // add close window behavior, when pushed a back button or a menu button\n    onkeydown = config.events.keydown;\n    config.events.keydown = function ( event ) {\n        if ( onkeydown ) {\n            onkeydown.call(this, event);\n        }\n        if ( event.code === keys.back || event.code === keys.menu ) {\n            event.stop = true;\n            self.hide();\n        }\n    };\n\n    // parent constructor call\n    StbComponentModal.call(this, config);\n\n    // add table-cell wrappers\n    this.$node.appendChild(document.createElement('div'));\n    this.$node.firstChild.classList.add('alignBox');\n    this.$node.firstChild.appendChild(document.createElement('div'));\n\n    // add header div\n    this.$header = document.createElement('div');\n    this.$header.className = 'header';\n\n    // insert caption placeholder\n    this.$text = this.$header.appendChild(document.createElement('div'));\n    this.$text.classList.add('text');\n    this.$text.innerText = config.title || '';\n\n    // optional icon\n    if ( config.icon ) {\n        this.$icon = this.$header.appendChild(document.createElement('div'));\n        this.$icon.className = 'icon ' + config.icon;\n    }\n\n    $overlay = document.createElement('div');\n    $overlay.className = 'overlay';\n\n    // add to dom\n    // add body wrapper\n    $body = this.$body.parentNode.removeChild(this.$body);\n    this.$node.firstChild.firstChild.appendChild(this.$header);\n    this.$node.firstChild.firstChild.appendChild($body);\n    this.$node.firstChild.firstChild.appendChild($overlay);\n}\n\n\n// inheritance\nModal.prototype = Object.create(StbComponentModal.prototype);\nModal.prototype.constructor = Modal;\n\n// set component name\nModal.prototype.name = 'mag-component-modal';\n\n\n/**\n * Redefine default component focus to set additional css\n */\nModal.prototype.focus = function () {\n    this.$node.classList.add('active');\n    StbComponentModal.prototype.focus.call(this);\n    if ( this.children[0] && this.children[0] instanceof Component ) {\n        this.children[0].focus();\n    }\n};\n\n\n/**\n * Blur message\n */\nModal.prototype.blur = function () {\n    this.$node.classList.remove('active');\n    StbComponentModal.prototype.blur.call(this);\n};\n\n\n// public\nmodule.exports = Modal;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-modal');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-modal';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base modal window implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n */\nfunction Modal ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body ) {\n            throw new Error(__filename + ': config.$body should not be provided manually');\n        }\n    }\n\n    // create centered div\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // add table-cell wrapper\n    this.$node.appendChild(document.createElement('div').appendChild(this.$body).parentNode);\n}\n\n\n// inheritance\nModal.prototype = Object.create(Component.prototype);\nModal.prototype.constructor = Modal;\n\n// set component name\nModal.prototype.name = 'spa-component-modal';\n\n\n// public\nmodule.exports = Modal;\n","/**\n * HTML elements low-level handling.\n *\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n/* eslint no-unused-vars: 0 */\n\n/**\n * DOM manipulation module\n */\nvar dom = {};\n\n\n/**\n * Create a new HTML element.\n *\n * @param {string} tagName mandatory tag name\n * @param {Object|null} [attrList] element attributes\n * @param {...*} [content] element content (primitive value/values or other nodes)\n * @return {Node|null} HTML element or null on failure\n *\n * @example\n * dom.tag('table');\n * dom.tag('div', {}, 'some text');\n * dom.tag('div', {className:'top'}, dom.tag('span'), dom.tag('br'));\n * dom.tag('link', {rel:'stylesheet', type:'text/css', href:'http://some.url/'});\n */\ndom.tag = function ( tagName, attrList, content ) {\n    var node = null,\n        index, name;\n\n    // minimal param is given\n    if ( tagName ) {\n        // empty element\n        node = document.createElement(tagName);\n\n        // optional attribute list is given\n        if ( attrList && typeof attrList === 'object' ) {\n            for ( name in attrList ) {\n                // extend a new node with the given attributes\n                node[name] = attrList[name];\n            }\n        }\n\n        // content (arguments except the first two)\n        for ( index = 2; index < arguments.length; index++ ) {\n            // some data is given\n            if ( arguments[index] ) {\n                // regular HTML tag or plain data\n                node.appendChild(\n                    typeof arguments[index] === 'object' ? arguments[index] : document.createTextNode(arguments[index])\n                );\n            }\n        }\n\n    }\n\n    return node;\n};\n\n\n/**\n * Create a new DocumentFragment filled with the given non-empty elements if any.\n *\n * @param {...*} [node] fragment content (primitive value/values or other nodes)\n * @return {DocumentFragment} new placeholder\n *\n * @example\n * // gives an empty fragment element\n * dom.fragment();\n * // gives a fragment element with 3 div element inside\n * dom.fragment(dom.tag('div'), div2, div3);\n * // mixed case\n * dom.fragment('some text', 123, div3);\n */\ndom.fragment = function ( node ) {\n    // prepare placeholder\n    var fragment = document.createDocumentFragment(),\n        index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        node = arguments[index];\n        // some data is given\n        if ( node ) {\n            // regular HTML tag or plain data\n            fragment.appendChild(typeof node === 'object' ? node : document.createTextNode(node));\n        }\n    }\n\n    return fragment;\n};\n\n\n/**\n * Add the given non-empty data (HTML element/text or list) to the destination element.\n *\n * @param {Node} tagDst element to receive children\n * @param {...*} [content] element content (primitive value/values or other nodes)\n * @return {Node|null} the destination element - owner of all added data\n *\n * @example\n * // simple text value\n * add(some_div, 'Hello world');\n * // single DOM Element\n * add(some_div, some_other_div);\n * // DOM Element list\n * add(some_div, div1, div2, div3);\n * // mixed case\n * add(some_div, div1, 'hello', 'world');\n */\ndom.add = function ( tagDst, content ) {\n    var index;\n\n    // valid HTML tag as the destination\n    if ( tagDst instanceof Node ) {\n        // append all except the first one\n        for ( index = 1; index < arguments.length; index++ ) {\n            // some data is given\n            if ( arguments[index] ) {\n                // regular HTML tag or plain data\n                tagDst.appendChild(\n                    typeof arguments[index] === 'object' ? arguments[index] : document.createTextNode(arguments[index])\n                );\n            }\n        }\n\n        return tagDst;\n    }\n\n    return null;\n};\n\n\n/**\n * Remove the given elements from the DOM.\n *\n * @param {...Node} [nodes] element to be removed\n * @return {boolean} operation status (true - all given elements removed)\n *\n * @example\n * dom.remove(document.querySelector('div.test'));\n * dom.remove(div1, div2, div3);\n */\ndom.remove = function ( nodes ) {\n    // amount of successfully removed nodes\n    var count = 0,\n        index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        // valid non-empty tag\n        if ( arguments[index] && arguments[index].parentNode ) {\n            if ( arguments[index].parentNode.removeChild(arguments[index]) === arguments[index] ) {\n                count++;\n            }\n        }\n    }\n\n    return arguments.length > 0 && count === arguments.length;\n};\n\n\ndom.clear = function ( node ) {\n    while ( node.lastChild ) {\n        node.removeChild(node.lastChild);\n    }\n};\n\n\n// public\nmodule.exports = dom;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-scrollbar');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-scrollbar';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base scroll bar implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {number} [config.value=0] initial thumb position\n * @param {number} [config.realSize=100] actual scroll size\n * @param {number} [config.viewSize=10] visible area size\n * @param {number} [config.type] direction\n *\n * @example\n * var ScrollBar = require('stb/ui/scroll.bar'),\n *     scrollBar = new ScrollBar({\n *         viewSize: 5,\n *         realSize: 25,\n *         events: {\n *             done: function () {\n *                 debug.log('ScrollBar: done');\n *             },\n *             change: function ( data ) {\n *                 debug.log('ScrollBar: change to ' + data.curr + ' from ' + data.prev);\n *             }\n *         }\n *     });\n */\nfunction ScrollBar ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Visible area size.\n     *\n     * @type {number}\n     */\n    this.viewSize = 10;\n\n    /**\n     * Scroll area actual height or width (if scroll is horizontal).\n     *\n     * @type {number}\n     */\n    this.realSize = 100;\n\n    /**\n     * Scroll thumb position.\n     *\n     * @type {number}\n     */\n    this.value = 0;\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Geometry of the scroll thumb element.\n     *\n     * @type {ClientRect}\n     */\n    this.thumbRect = null;\n\n    /**\n     * Geometry of the scroll track element.\n     *\n     * @type {ClientRect}\n     */\n    this.trackRect = null;\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'scrollBar ' + (config.className || '');\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // insert thumb line\n    this.$thumb = this.$body.appendChild(document.createElement('div'));\n\n    // correct CSS class name\n    this.$thumb.className = 'thumb';\n\n    // component setup\n    this.init(config);\n}\n\n\n// inheritance\nScrollBar.prototype = Object.create(Component.prototype);\nScrollBar.prototype.constructor = ScrollBar;\n\n// set component name\nScrollBar.prototype.name = 'spa-component-scrollbar';\n\nScrollBar.prototype.TYPE_VERTICAL   = 1;\nScrollBar.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Init or re-init realSize/viewSize/value parameters.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nScrollBar.prototype.init = function ( config ) {\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // set actual scroll size\n    if ( config.realSize !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.realSize) !== config.realSize ) {\n                throw new Error(__filename + ': config.realSize value must be a number');\n            }\n        }\n\n        // apply\n        this.realSize = config.realSize;\n    }\n\n    // set visible area size\n    if ( config.viewSize !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.viewSize) !== config.viewSize ) {\n                throw new Error(__filename + ': config.viewSize value must be a number');\n            }\n            if ( config.viewSize < 0 ) {\n                throw new Error(__filename + ': config.viewSize value must be greater than 0');\n            }\n        }\n\n        // apply\n        this.viewSize = config.viewSize;\n    }\n\n    // show or hide thumb\n    if ( this.viewSize >= this.realSize ) {\n        this.$thumb.classList.add('hidden');\n    } else {\n        this.$thumb.classList.remove('hidden');\n    }\n\n    // set thumb position\n    if ( config.value !== undefined ) {\n        // apply\n        this.scrollTo(config.value);\n    }\n\n    // set thumb size\n    if ( this.type === this.TYPE_VERTICAL ) {\n        this.$thumb.style.height = (this.viewSize / this.realSize * 100) + '%';\n    } else {\n        this.$thumb.style.width = (this.viewSize / this.realSize * 100) + '%';\n    }\n\n    // geometry\n    this.thumbRect = this.$thumb.getBoundingClientRect();\n    this.trackRect = this.$node.getBoundingClientRect();\n};\n\n\n/**\n * Set position of the given value.\n * Does nothing in case when scroll is in the end and passed value is more than scroll bar length.\n *\n * @param {number} value new value to set\n * @return {boolean} operation result\n *\n * @fires module:stb/ui/scroll.bar~ScrollBar#done\n * @fires module:stb/ui/scroll.bar~ScrollBar#change\n */\nScrollBar.prototype.scrollTo = function ( value ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(value) !== value ) {\n            throw new Error(__filename + ': value must be a number');\n        }\n        if ( this.realSize > this.viewSize && value > this.realSize - this.viewSize ) {\n            throw new Error(__filename + ': value is greater than this.realSize-this.viewSize');\n        }\n        if ( value < 0 ) {\n            throw new Error(__filename + ': value is less then 0');\n        }\n    }\n\n    // value has changed\n    if ( this.value !== value ) {\n        // track and thumb geometry was not set\n        if ( this.thumbRect.height === 0 || this.thumbRect.width === 0 ) {\n            // apply\n            this.trackRect = this.$node.getBoundingClientRect();\n            this.thumbRect = this.$thumb.getBoundingClientRect();\n        }\n\n        // set scroll bar width\n        if ( this.type === this.TYPE_VERTICAL ) {\n            this.$thumb.style.marginTop = ((this.trackRect.height - this.thumbRect.height) * value / (this.realSize - this.viewSize)) + 'px';\n        } else {\n            this.$thumb.style.marginLeft = ((this.trackRect.width - this.thumbRect.width) * value / (this.realSize - this.viewSize)) + 'px';\n        }\n\n        // there are some listeners\n        if ( this.events['change'] ) {\n            /**\n             * Update scroll value.\n             *\n             * @event module:stb/ui/scroll.bar~ScrollBar#change\n             *\n             * @type {Object}\n             * @property {number} prev old/previous scroll value\n             * @property {number} curr new/current scroll value\n             */\n            this.emit('change', {curr: value, prev: this.value});\n        }\n\n        // is it the end?\n        if ( value >= this.realSize ) {\n            value = this.realSize;\n\n            // there are some listeners\n            if ( this.events['done'] ) {\n                /**\n                 * Set scroll to its maximum value.\n                 *\n                 * @event module:stb/ui/scroll.bar~ScrollBar#done\n                 */\n                this.emit('done');\n            }\n        }\n\n        // set new value\n        this.value = value;\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = ScrollBar;\n","/**\n * @license The MIT License (MIT)\n * @author Yaroslav Surilov <y.surilov@infomir.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component');\n\n\n/**\n * Base flicker implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {function} [config.render] custom render function\n * @param {number} [config.interval=1000] interval for flicking\n * @param {string} [config.value] value to set in flickering container\n */\nfunction Flicker ( config ) {\n    var interval;\n\n    // sanitize\n    config = config || {};\n\n    this.timerId = 0;\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( !config.value && !config.render ) {\n            throw new Error(__filename + ': nothing to render (absent value and render method)');\n        }\n        if ( config.render && typeof config.render !== 'function' ) {\n            throw new Error(__filename + ': wrong config.render type');\n        }\n    }\n\n    if ( config.render ) {\n        this.render = config.render;\n    }\n\n    config.focusable = false;\n\n    config.visible = config.visible || true;\n\n    this.value = config.value;\n\n    // initial state\n    this.active = false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'flicker ' + (config.className || '');\n\n    Object.defineProperty(this, 'interval', {\n        set: function ( value ) {\n            if ( DEVELOP ) {\n                // interval must be 0 or positive integer\n                if ( !(typeof value === 'number' && isFinite(value) && !(value % 1) && value >= 0) ) {\n                    throw new Error(__filename + ': wrong interval value');\n                }\n            }\n\n            interval = value;\n        },\n        get: function () {\n            return interval;\n        }\n    });\n\n    this.interval = config.interval || 1000;\n\n    // parent constructor call\n    Component.call(this, config);\n}\n\n\n// inheritance\nFlicker.prototype = Object.create(Component.prototype);\nFlicker.prototype.constructor = Flicker;\n\n// set component name\nFlicker.prototype.name = 'spa-component-flicker';\n\n\n/**\n * Start flickering.\n */\nFlicker.prototype.start = function () {\n    var self = this;\n\n    if ( !this.active ) {\n        this.active = true;\n        // starts immediately\n        (function run () {\n            self.render(self.$node, self.value);\n            self.timerId = setTimeout(run, self.interval);\n        })();\n    }\n};\n\n\n/**\n * Stop flickering.\n */\nFlicker.prototype.stop = function () {\n    if ( this.active ) {\n        this.active = false;\n        clearTimeout(this.timerId);\n    }\n};\n\n\n/**\n * Fill the given item with data.\n *\n * @param {Element} $item item DOM link\n * @param {string} value associated with this item data\n */\nFlicker.prototype.defaultRender = function ( $item, value ) {\n    $item.innerText = value;\n};\n\n\n/**\n * Can be redefined to provide custom rendering.\n *\n * @type {function}\n */\nFlicker.prototype.render = Flicker.prototype.defaultRender;\n\n\n// public\nmodule.exports = Flicker;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component'),\n    keys      = require('stb-keys');\n\n\n/**\n * Scroll area implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} config object\n * @param {number} [config.step] step in % of screen height to scroll area\n */\nfunction ScrollArea ( config ) {\n\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    /**\n     * Step to scroll area in % of screen height\n     *\n     * @type {number}\n     */\n    this.step = 5;\n\n    /**\n     * Real height of scroll area\n     *\n     * @type {number}\n     */\n    this.realHeight = 0;\n\n    /**\n     * Visible height of area\n     *\n     * @type {number}\n     */\n    this.viewHeight = 0;\n\n    /**\n     * Top position of scroll container\n     *\n     * @type {number}\n     */\n    this.topPosition = 0;\n\n    /**\n     * Associated ScrollBar component link.\n     *\n     * @type {ScrollBar}\n     */\n    this.scroll = null;\n\n    Component.call(this, config);\n\n    this.$node.appendChild(this.$body);\n\n    // component setup\n    this.init(config);\n}\n\n\nScrollArea.prototype = Object.create(Component.prototype);\nScrollArea.prototype.constructor = ScrollArea;\n\n// set component name\nScrollArea.prototype.name = 'mag-component-scroll-area';\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nScrollArea.prototype.defaultEvents = {\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n                this.move(event.code);\n                break;\n        }\n    },\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n    }\n};\n\n\n/**\n * Attempt to go beyond the edge of the list.\n *\n * @event\n *\n * @type {Object}\n * @property {number} direction key code initiator of movement\n */\n\n\n/**\n * Move ScrollArea content\n *\n * @param {number} direction to move\n */\nScrollArea.prototype.move = function ( direction ) {\n    var height = screen.height,\n        delta  = this.viewHeight - this.realHeight;\n\n    // run logic only if it's reasonable to navigate\n    if ( delta < 0 ) {\n        switch ( direction ) {\n            case keys.down:\n                if ( this.topPosition - this.step * height / 100 < delta ) {\n                    this.scroll.scrollTo(-delta);\n                    this.$body.style.top = delta + 'px';\n                    this.emit('overflow', {direction: direction});\n\n                    return;\n                }\n\n                this.topPosition -= Math.ceil(this.step * height / 100);\n\n                if ( this.scroll ) {\n                    this.scroll.scrollTo(-this.topPosition);\n                }\n                this.$body.style.top = this.topPosition + 'px';\n                break;\n            case keys.up:\n                if ( this.topPosition + this.step * height / 100 > 0 ) {\n                    this.scroll.scrollTo(0);\n                    this.$body.style.top = '0px';\n                    this.emit('overflow', {direction: direction});\n\n                    return;\n                }\n                this.topPosition += Math.ceil(this.step * height / 100);\n\n                if ( this.scroll ) {\n                    this.scroll.scrollTo(-this.topPosition);\n                }\n                this.$body.style.top = this.topPosition + 'px';\n                break;\n        }\n    } else {\n        this.emit('overflow', {direction: direction});\n    }\n};\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nScrollArea.prototype.init = function ( config ) {\n\n    config = config || {};\n\n    this.realHeight = this.$body.offsetHeight;\n    this.viewHeight = this.$node.offsetHeight;\n    this.topPosition = 0;\n    this.$body.style.top = this.topPosition + 'px';\n\n    if ( config.scroll ) {\n        this.scroll = config.scroll;\n    }\n\n    if ( config.step ) {\n        this.step = config.step;\n    }\n\n    if ( this.scroll ) {\n        this.scroll.init({\n            realSize: this.realHeight,\n            viewSize: this.viewHeight,\n            value: this.topPosition\n        });\n    }\n};\n\nmodule.exports = ScrollArea;\n","/**\n * @license The MIT License (MIT)\n * @copyright Dmitry Fedotov <bas.jsdev@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys'),\n    classes   = {};\n\n\n// initialize classes\nclasses[keys.f1] = 'theme-icon-rc-f1';\nclasses[keys.f2] = 'theme-icon-rc-f2';\nclasses[keys.f3] = 'theme-icon-rc-f3';\nclasses[keys.f4] = 'theme-icon-rc-f4';\nclasses[keys.menu] = 'theme-icon-rc-menu';\nclasses[keys.ok] = 'theme-icon-rc-ok';\nclasses[keys.info] = 'theme-icon-rc-info';\nclasses[keys.playPause] = 'theme-icon-rc-play-pause';\nclasses[keys.back] = 'theme-icon-rc-back';\nclasses[keys.exit] = 'theme-icon-rc-home';\nclasses[keys.keyboard] = 'theme-icon-rc-vk';\nclasses[keys.refresh] = 'theme-icon-rc-refresh';\nclasses[keys.frame] = 'theme-icon-rc-aspect';\n\n/**\n * Footer.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}  config={} - init parameters\n * @param {Object}  config.parent - parent page\n * @param {boolean} [config.visible] - visibility flag\n * @param {Object}  [config.data] - footer buttons config\n * @param {Object}  [config.data.left] - left button config\n * @param {Object}  [config.data.middle] - middle buttons config\n * @param {Object}  [config.data.right] - right button config\n * @param {number}  [config.data.middle.code] - button key code\n * @param {Object}  [config.data.middle.title] - button title\n * @param {Object}  [config.data.middle.action] - button press (click) action\n * @param {Object}  [config.data.label] - button config (for remote control with long press)\n * @param {number}  [config.data.label.code] - button key code\n * @param {Object}  [config.data.label.title] - button title\n * @param {Object}  [config.data.label.action] - button press (click) action\n *\n * @example\n * page.footer = new Footer({\n *     parent: page,\n *     data: {\n *         left: {\n *             code: keys.menu, action: function () {}\n *         },\n *         middle: [\n *             {code: 55, action: function () {}},\n *             {code: keys.f1, title: 'stop', action: function () {}},\n *             {code: 9000, className: 'customIcon', title: 'start', action: function () {}},\n *             {code: keys.f4, title: 'end', action: function () {}}\n *         ],\n *         right: {\n *             code: 65, action: function () {}\n *         },\n *         label: {\n *             code: keys.menu, title: 'Hold OK button to open the task options', action: function () {}\n *         }\n *     }\n * });\n */\n\n/* eslint max-statements: 0 */\nfunction Footer ( config ) {\n    var currentTab = 0,\n        self       = this,\n        $body;\n\n    // sanitize\n    config = config || {};\n    // can't accept focus\n    config.focusable = false;\n    // hide by default\n    config.visible = config.visible || false;\n    // create centered div\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    this.tabs = [\n        {codes: {}},\n        {codes: {}},\n        {codes: {}},\n        {codes: {}}\n    ];\n\n    this.tab = 0;\n\n    this.$table = this.$node.appendChild(document.createElement('table'));\n    this.$table.insertRow();\n    this.$table.rows[0].insertCell(-1);\n\n    if ( TARGET !== 'android-stb' && TARGET !== 'android-app' ) {\n        this.$table.rows[0].insertCell(-1);\n        this.$table.rows[0].insertCell(-1);\n\n        this.$left = this.$table.rows[0].cells[0].appendChild(document.createElement('div'));\n        this.$left.className = 'theme-icon';\n\n        this.$table.rows[0].cells[1].className = 'central';\n        $body = this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    } else {\n        this.$table.rows[0].cells[0].className = 'central noButtons';\n        $body = this.tabs[currentTab].$body = this.$table.rows[0].cells[0].appendChild(document.createElement('div'));\n    }\n\n    $body.className = 'wrapper hidden';\n    $body.appendChild(document.createElement('div'));\n    $body.lastChild.className = 'button';\n    $body.lastChild.appendChild(document.createElement('div'));\n\n    if ( TARGET !== 'android-stb' && TARGET !== 'android-app' ) {\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n        $body = this.tabs[++currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n        $body.className = 'wrapper hidden';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n\n        $body = this.tabs[++currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n        $body.className = 'wrapper hidden';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n\n        $body = this.tabs[++currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n        $body.className = 'wrapper hidden';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n\n\n        this.$right = this.$table.rows[0].cells[2].appendChild(document.createElement('div'));\n        this.$right.className = 'theme-icon';\n    } else {\n        $body.lastChild.lastChild.className = 'title label';\n    }\n\n    this.init(config.data);\n\n    this.parent.addListener('keydown', function ( event ) {\n        var currTab = self.tabs[self.tab];\n\n        if ( self.visible ) {\n            if ( currTab.codes[event.code] && typeof currTab.codes[event.code].action === 'function' ) {\n                currTab.codes[event.code].action();\n            }\n        }\n    });\n}\n\n\n// inheritance\nFooter.prototype = Object.create(Component.prototype);\nFooter.prototype.constructor = Footer;\n\n// set component name\nFooter.prototype.name = 'mag-component-footer';\n\n\nif ( TARGET !== 'android-stb' && TARGET !== 'android-app' ) {\n    /**\n     * Redefine buttons\n     *\n     * @param {Object} [config] - footer buttons config\n     * @param {Object} [config.left] - left button config\n     * @param {number} [config.left.code] - left button key code\n     * @param {boolean} [config.left.disabled] - left button is disabled\n     * @param {Object} [config.left.action] - left button press (click) action\n     * @param {Object} [config.middle] - middle buttons config\n     * @param {Object} [config.right] - right button config\n     * @param {number} [config.right.code] - right button key code\n     * @param {boolean} [config.right.disabled] - right button is disabled\n     * @param {Object} [config.right.action] - right button press (click) action\n     * @param {number} [config.middle.code] - button key code\n     * @param {Object} [config.middle.title] - button title\n     * @param {boolean} [config.middle.disabled] - button is disabled\n     * @param {Object} [config.middle.action] - button press (click) action\n     * @param {Object} [config.label] - button config\n     * @param {number} [config.label.code] - button key code\n     * @param {Object} [config.label.title] - button title\n     * @param {Object} [config.label.action] - button press (click) action\n     *\n     * page.Footer.init({\n     *     left: {\n     *         code: keys.menu, action: function () {}\n     *     },\n     *     middle: [\n     *         {code: 55, action: function () {}},\n     *         {code: keys.f1, title: 'stop', action: function () {}},\n     *         {code: 9000, className: 'customIcon', title: 'start', action: function () {}},\n     *         {code: keys.f4, title: 'end', disabled: true}\n     *     ],\n     *     right: {\n     *         code: 65, action: function () {}\n     *     }\n     * });\n     *\n     */\n    Footer.prototype.init = function ( config ) {\n        var index, $tab, $tabChildren;\n\n        config = config || {};\n\n        if ( DEVELOP ) {\n            if ( config.middle && config.middle.length > 4 ) {\n                throw new Error(__filename + ': only 4 buttons allowed in footer');\n            }\n            if ( config.middle && Array.isArray(config.middle) ) {\n                for ( index = 0; index < config.middle.length; index++ ) {\n                    if ( typeof config.middle[index].action !== 'function' && !config.middle[index].disabled ) {\n                        throw new Error(__filename + ': action must be a function');\n                    }\n                    ++index;\n                }\n            }\n            if ( config.left && typeof config.left.action !== 'function' && !config.left.disabled ) {\n                throw new Error(__filename + ': action must be a function');\n            }\n            if ( config.right && typeof config.right.action !== 'function' && !config.right.disabled ) {\n                throw new Error(__filename + ': action must be a function');\n            }\n        }\n\n        // hide old tab\n        this.tabs[this.tab].$body.classList.add('hidden');\n        this.tab = config.middle && config.middle.length ? config.middle.length - 1 : 0;\n        // current tab shortcut\n        $tab = this.tabs[this.tab];\n        // reset all actions\n        $tab.codes = {};\n\n        // left button\n        if ( config.left ) {\n            this.$left.className = config.left.className || ('theme-icon ' + (classes[config.left.code] || 'theme-icon-warning'));\n            if ( config.left.disabled ) {\n                this.$left.classList.add('disabled');\n            } else {\n                $tab.codes[config.left.code] = {action: config.left.action};\n                this.$left.style.visibility = 'inherit';\n                this.$left.onclick = function () {\n                    if ( typeof config.left.action === 'function' ) {\n                        config.left.action();\n                    }\n                };\n            }\n        } else if ( this.$left.style.visibility !== 'hidden' ) {\n            this.$left.style.visibility = 'hidden';\n        }\n\n        // right button\n        if ( config.right ) {\n            this.$right.className = config.right.className || ('theme-icon ' + (classes[config.right.code] || 'theme-icon-warning'));\n            if ( config.right.disabled ) {\n                this.$right.classList.add('disabled');\n            } else {\n                $tab.codes[config.right.code] = {action: config.right.action};\n                this.$right.style.visibility = 'inherit';\n                this.$right.onclick = function () {\n                    if ( typeof config.right.action === 'function' ) {\n                        config.right.action();\n                    }\n                };\n            }\n        } else if ( this.$right.style.visibility !== 'hidden' ) {\n            this.$right.style.visibility = 'hidden';\n        }\n\n        function addClick ( ind ) {\n            return function () {\n                if ( typeof config.middle[ind].action === 'function' ) {\n                    config.middle[ind].action();\n                }\n            };\n        }\n\n        // middle buttons\n        if ( config.middle && config.middle.length ) {\n            for ( index = 0; index < config.middle.length; index++ ) {\n                $tab.codes[config.middle[index].code] = {action: config.middle[index].action};\n                if ( config.middle[index].disabled ) {\n                    $tab.$body.children[index].classList.add('disabled');\n                } else {\n                    $tab.$body.children[index].classList.remove('disabled');\n                    $tab.$body.children[index].onclick = addClick(index);\n                }\n                // shortcut\n                $tabChildren = $tab.$body.children[index].children;\n                $tabChildren[0].className = 'iconImg ' +\n                    (config.middle[index].className || ('theme-icon ' + (classes[config.middle[index].code] || 'theme-icon-warning')));\n\n                $tabChildren[1].innerText = config.middle[index].title || '';\n            }\n            $tab.$body.classList.remove('hidden');\n        }\n    };\n} else {\n    /**\n     * Redefine buttons for android\n     *\n     * @param {Object} [config] - footer config\n     * @param {Object} [config.label] - button config\n     * @param {number} [config.label.code] - button key code\n     * @param {Object} [config.label.title] - button title\n     * @param {Object} [config.label.action] - button press (click) action\n     *\n     * initLongPressMode({\n     *     label: {code: keys.menu, title: 'Hold OK button to open the task options', action: function () {}}\n     * });\n     *\n     */\n    Footer.prototype.init = function ( config ) {\n        var $tab, $tabChildren;\n\n        config = config || {};\n\n        // current tab shortcut\n        $tab = this.tabs[0];\n        // reset\n        $tab.codes = {};\n        $tab.$body.classList.add('hidden');\n\n        if ( config.label && typeof config.label.action === 'function' ) {\n            // label button\n            $tab.codes[config.label.code] = {action: config.label.action};\n            $tab.$body.children[0].onclick = function () {\n                if ( typeof config.label.action === 'function' ) {\n                    config.label.action();\n                }\n            };\n            // shortcut\n            $tabChildren = $tab.$body.children[0].children;\n            // $tabChildren[0].className = '';\n            $tabChildren[0].innerText = config.label.title || '';\n\n            $tab.$body.classList.remove('hidden');\n        }\n    };\n}\n\n\n// public\nmodule.exports = Footer;\n","/**\n *\n * @author Aleynikov Boris <alynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar config = require('../config'),\n    tizen  = require('./tizen');\n\n\nmodule.exports = function () {\n    var result;\n\n    if ( PLATFORM === 'TIZEN' ) {\n        result = {\n            items: [\n                {className: 'theme-icon theme-icon-monitor'},\n                {\n                    value: gettext('About device'),\n                    data: [\n                        {type: 'title', data: gettext('User MAC')},\n                        {type: 'text', data: tizen.getDeviceMac()},\n                        {type: 'title', data: gettext('Tizen version')},\n                        {type: 'text', data: tizen.getTizenVersion()},\n                        {type: 'title', data: gettext('TV model')},\n                        {type: 'text', data: tizen.getTvVersion()}\n                    ]\n                }\n            ]\n        };\n    } else {\n        result = {\n            items: [\n                {className: 'theme-icon theme-icon-monitor'},\n                {\n                    value: gettext('About device'),\n                    data: [\n                        {type: 'title', data: gettext('User MAC')},\n                        {type: 'text', data: config.user.mac}\n                    ]\n                }\n            ]\n        };\n    }\n\n    return result;\n};\n","/**\n * Created by bas on 08.12.16.\n * Tizen device info getter\n */\n\n\n'use strict';\n\n// public\nmodule.exports = {\n    getTizenVersion: function () {\n        var result;\n\n        try {\n            result = window.top.tizen.application.getAppInfo().version;\n        } catch ( error ) {\n            debug.log('error' + error);\n            result = '';\n        }\n\n        return result;\n    },\n    getTvVersion: function () {\n        var result;\n\n        try {\n            result = window.top.webapis.productinfo.getRealModel();\n        } catch ( error ) {\n            debug.log('error' + error);\n            result = '';\n        }\n\n        return result;\n    },\n    getDeviceMac: function () {\n        var result;\n\n        try {\n            result = window.top.webapis.network.getMac();\n        } catch ( error ) {\n            debug.log('error' + error);\n            result = '';\n        }\n\n        return result;\n    }\n};\n"],"sourceRoot":""}