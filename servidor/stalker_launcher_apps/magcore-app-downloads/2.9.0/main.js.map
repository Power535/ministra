{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/stb-keys/index.js","webpack:///./node_modules/stb-component/index.js","webpack:///./node_modules/spa-app/lib/core.js","webpack:///./node_modules/spa-component/index.js","webpack:///./node_modules/mag-app/index.js","webpack:///./node_modules/stb-component-page/index.js","webpack:///./node_modules/mag-component-panel-set/index.js","webpack:///./node_modules/mag-component-panel/index.js","webpack:///./node_modules/spa-component-flicker/index.js","webpack:///./node_modules/cjs-emitter/index.js","webpack:///./src/js/config.js","webpack:///./node_modules/mag-component-layout-list/index.js","webpack:///./node_modules/mag-component-list/index.js","webpack:///./node_modules/stb-component-button/index.js","webpack:///./src/js/modules/tools.js","webpack:///./node_modules/stb-component-scrollbar/index.js","webpack:///./node_modules/spa-dom/index.js","webpack:///./node_modules/mag-component-modal/index.js","webpack:///./node_modules/stb-app/lib/css.js","webpack:///./node_modules/spa-keys/index.js","webpack:///./node_modules/mag-component-layout/index.js","webpack:///./node_modules/mag-component-scroll-area/index.js","webpack:///./node_modules/mag-component-radio-list/index.js","webpack:///./src/js/main.js","webpack:///./node_modules/mag-app/lib/main.js","webpack:///./node_modules/cjs-query/index.js","webpack:///./node_modules/spa-app/lib/events.js","webpack:///./node_modules/stb-shim-classlist/index.js","webpack:///./node_modules/stb-app/lib/metrics.js","webpack:///./src/js/metrics.js","webpack:///./node_modules/mag-app/lib/css.js","webpack:///./node_modules/spa-gettext/index.js","webpack:///./node_modules/cjs-gettext/index.js","webpack:///./src/js/pages/info.js","webpack:///./node_modules/spa-component-page/index.js","webpack:///./node_modules/spa-component-button/index.js","webpack:///./src/js/pages/more.js","webpack:///./node_modules/spa-component-scrollbar/index.js","webpack:///./src/js/pages/add.js","webpack:///./node_modules/stb-component-modal/index.js","webpack:///./node_modules/spa-component-modal/index.js","webpack:///./src/js/pages/main.js","webpack:///./node_modules/mag-component-modal-check-list/index.js","webpack:///./node_modules/mag-component-check-list/index.js","webpack:///./node_modules/mag-component-footer/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","keys","back","backspace","channelNext","tab","channelPrev","ok","enter","exit","escape","volumeUp","volumeDown","f1","f2","f3","f4","refresh","frame","phone","set","tv","menu","app","rewind","forward","audio","standby","keyboard","usbMounted","usbUnmounted","playPause","play","pause","stop","power","record","info","mute","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","Emitter","parse","query","document","location","search","substring","config","activePage","route","pageTo","data","page","pageFrom","active","id","$node","classList","remove","events","emit","add","showPage","this","from","to","counter","Component","self","visible","focusable","$body","parent","children","propagate","createElement","className","hide","defaultEvents","forEach","eventName","addListener","apply","addEventListener","event","focus","stopPropagation","constructor","child","index","arguments","length","push","parentNode","appendChild","item","activeComponent","blur","splice","indexOf","removeChild","activeItem","show","callback","setTimeout","PanelSet","keydownHandler","code","left","focusIndex","panels","right","main","addListeners","keydown","Layout","Panel","$overlay","size","$shadow","title","Array","isArray","$title","Flicker","interval","timerId","render","start","run","clearTimeout","defaultRender","$item","innerText","once","onceWrapper","removeListener","callbacks","filter","fn","undefined","slice","list","filterFiles","filterStatus","filterSearch","sort","constants","BY_NAME","BY_CATEGORY","BY_SIZE","List","LayoutList","handlers","$noData","fixedData","layout","inner","focusItem","renderItemDefault","layoutConfig","currentNode","currentData","ready","items","childNodes","firstChild","$parentItem","click","setData","init","$wrap","noData","innerHTML","Element","renderItem","$focusItem","viewIndex","type","TYPE_VERTICAL","cycle","scroll","provider","TYPE_HORIZONTAL","mousewheel","wheelDeltaY","move","up","down","wheelDeltaX","pageUp","pageDown","home","end","idx","currSize","onClick","blocked","error","realSize","maxCount","viewSize","head","pos","normalize","blurItem","renderView","itemData","prevIndex","currIndex","mark","scrollTo","direction","force","previousSibling","lastChild","nextSibling","$prev","$curr","markItem","state","convert","Math","floor","gettext","checkSize","url","xhr","XMLHttpRequest","onreadystatechange","readyState","getResponseHeader","open","send","dom","tag","tagName","attrList","content","node","createTextNode","fragment","createDocumentFragment","tagDst","Node","nodes","count","clear","StbComponentModal","Modal","onkeydown","$header","$text","icon","$icon","link","rel","href","metrics","height","space","insert","del","$wrapper","HTMLElement","wrap","componentClickHandler","textContent","ScrollArea","step","realHeight","viewHeight","topPosition","screen","delta","style","top","ceil","offsetHeight","classIcon","classIconActive","RadioList","classChecked","checkedData","checkedIndex","previousCheckedData","checkIndex","defaultCheckedIndex","defaultFocusIndex","resetData","clearChecked","table","tr","td","check","checkBox","getItemNodeByIndex","load","window","core","environment","language","pages","more","getCoreInstance","platform","body","setAttribute","contextmenu","preventDefault","split","part","decodeURIComponent","stringify","params","encodeURIComponent","join","DOMContentLoaded","unload","eventLocal","keyCode","ctrlKey","altKey","shiftKey","keypress","documentElement","DOMTokenList","el","_element","_classCache","classes","replace","token","contains","toString","toggle","screenHeight","availHeight","availTop","availBottom","availWidth","width","availLeft","availRight","480","576","720","1080","linkCSS","theme","path","Gettext","loader","prepare","_","pgettext","ngettext","defaultLanguage","ext","onload","JSON","responseText","onerror","ontimeout","meta","msgId","context","plural","evalResult","eval","Page","getElementById","PanelExtended","Button","tools","statuses","clock","time","Date","hours","getHours","mins","getMinutes","panelDetails","reset","initData","storage","label","button","overflow","click:item","panelSet","download","clickDuration","Scroll","area","ScrollBar","thumbRect","trackRect","$thumb","getBoundingClientRect","marginTop","marginLeft","curr","prev","appConf","ModalMessage","downloadManager","plugins","modalSelectDevice","storages","panelAdd","input","intent","action","description","done","currStorage","fileName","freeSize","notify","mountPath","pop","message","close","text","free","all","uri","$channelsCountWrapper","$channelsCount","ModalCheckList","fileSystem","fs","downloadStates","states","Footer","extensionByType","mediaTypes","video","playlist","image","concat","diskImage","stateToClass","stateToText","STOPPED","WAITING","RUNNING","FINISHED","TEMPORARY_ERROR","PERMANENT_ERROR","getMountPoints","getHDDInfo","downloads","footer","playFocusedFile","playable","middlePanel","toLowerCase","mime","deleteFocusedTask","resetFilters","arr","$catChilds","leftPanel","modalFilterStatus","modalFilterFiles","modalActions","fill","unshift","resume","modalReset","titleCounter","checked:change","$count","unique","visibility","map","scrollWidth","clientWidth","modalSort","modalExit","inputText","focus:item","middle","updateDelay","rightPanel","onFocusDebounceTimeout","resetTimeOut","index2","fileType","extension","newData","sortOrderHash","itemClick","trim","Number","progress","decodeURI","first","next","localeCompare","textArea","$url","$storage","$size","$state","onMount","restore","validate","CheckList","listClickEvents","uniqueItem","changeState","$titleCount","defaultState","currentTab","tabs","codes","$table","insertRow","rows","insertCell","$left","cells","$right","currTab","$tab","$tabChildren","addClick","ind","disabled","onclick"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n","/**\n * Global list of non-printable control key codes.\n *\n * At the moment `keypress` and `keydown` events are emitted for the same keys (for both printable and non-printable characters).\n *\n * WARNING!!! All codes in this file (except 'volumeUp' and 'volumeDown')\n * are used in window 'keydown' handler to prevent wrong 'keypress' firings.\n * If you add new code to this file 'keypress' event with this code will never fire.\n *\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar keys = require('spa-keys');\n\n\n// extend with additional codes\nkeys.back         = keys.backspace;\nkeys.channelNext  = keys.tab;        // Tab\nkeys.channelPrev  = keys.tab + 's';  // Shift+Tab\nkeys.ok           = keys.enter;      // Enter\nkeys.exit         = keys.escape;     // Esc\nkeys.volumeUp     = 107;             // NUMPAD +\nkeys.volumeDown   = 109;             // NUMPAD -\nkeys.f1           = 112 + 'c';       // Ctrl+F1\nkeys.f2           = 113 + 'c';       // Ctrl+F2\nkeys.f3           = 114 + 'c';       // Ctrl+F3\nkeys.f4           = 115 + 'c';       // Ctrl+F4\nkeys.refresh      = 116 + 'c';       // Ctrl+F5\nkeys.frame        = 117 + 'c';       // Ctrl+F6\nkeys.phone        = 119 + 'c';       // Ctrl+F8\nkeys.set          = 120 + 'c';       // Ctrl+F9\nkeys.tv           = 121 + 'c';       // Ctrl+F10\nkeys.menu         = 122 + 'c';       // Ctrl+F11\nkeys.app          = 123 + 'c';       // Ctrl+F12\nkeys.rewind       = 66  + 'a';       // Alt+B\nkeys.forward      = 70  + 'a';       // Alt+F\nkeys.audio        = 71  + 'a';       // Alt+G\nkeys.standby      = 74  + 'a';       // Alt+J\nkeys.keyboard     = 76  + 'a';       // Alt+L\nkeys.usbMounted   = 80  + 'a';       // Alt+P\nkeys.usbUnmounted = 81  + 'a';       // Alt+Q\nkeys.playPause    = 82  + 'a';       // Alt+R\nkeys.play         = -1;              // should be redefined on some platforms\nkeys.pause        = -1;              // should be redefined on some platforms\nkeys.stop         = 83  + 'a';       // Alt+S\nkeys.power        = 85  + 'a';       // Alt+U\nkeys.record       = 87  + 'a';       // Alt+W\nkeys.info         = 89  + 'a';       // Alt+Y\nkeys.mute         = 192 + 'a';\nkeys.digit0       = 48;\nkeys.digit1       = 49;\nkeys.digit2       = 50;\nkeys.digit3       = 51;\nkeys.digit4       = 52;\nkeys.digit5       = 53;\nkeys.digit6       = 54;\nkeys.digit7       = 55;\nkeys.digit8       = 56;\nkeys.digit9       = 57;\n\n\n// public\nmodule.exports = keys;\n\n// public\n// module.exports = {\n//     getCode: function ( event ) {\n//         var code = event.keyCode;\n//\n//         // apply key modifiers\n//         if ( event.shiftKey ) { code += 1000; }\n//         if ( event.altKey )   { code += 2000; }\n//\n//         return code;\n//     },\n//\n//     codes: {\n//         back:         8,    // Backspace\n//         channelPrev:  1009, // Shift+Tab\n//         channelNext:  9,    // Tab\n//         ok:           13,   // Enter\n//         exit:         27,   // Esc\n//         pageUp:       33,\n//         pageDown:     34,\n//         end:          35,\n//         home:         36,\n//         left:         37,\n//         up:           38,\n//         right:        39,\n//         down:         40,\n//         'delete':     46,\n//         volumeUp:     107,  // NUMPAD +\n//         volumeDown:   109,  // NUMPAD -\n//         f1:           112,  // F1\n//         f2:           113,  // F2\n//         f3:           114,  // F3\n//         f4:           115,  // F4\n//         refresh:      116,  // F5\n//         frame:        117,  // F6\n//         phone:        119,  // F8\n//         set:          120,  // F9\n//         tv:           121,  // F10\n//         menu:         122,  // F11\n//         app:          123,  // F12\n//         rewind:       2066, // Alt+B\n//         forward:      2070, // Alt+F\n//         audio:        2071, // Alt+G\n//         standby:      2074, // Alt+J\n//         keyboard:     2076, // Alt+L\n//         usbMounted:   2080, // Alt+P\n//         usbUnmounted: 2081, // Alt+Q\n//         playPause:    2082, // Alt+R\n//         stop:         2083, // Alt+S\n//         power:        2085, // Alt+U\n//         record:       2087, // Alt+W\n//         info:         2089, // Alt+Y\n//         mute:         2192\n//     }\n// };\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component');\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    parse   = require('cjs-query').parse,\n    app     = new Emitter();\n\n\n/**\n * Make the given inactive/hidden page active/visible.\n * Pass some data to the page and trigger the corresponding event.\n *\n * @param {Page} page item to show\n * @param {*} [data] data to send to page\n *\n * @return {boolean} operation status\n */\nfunction showPage ( page, data ) {\n    // page available and can be hidden\n    if ( page && !page.active ) {\n        // apply visibility\n        page.$node.classList.add('active');\n        page.active = true;\n        app.activePage = page;\n\n        debug.info('show component ' + page.name + '#' + page.id, null, {\n            tags: ['show', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' show', 'green');\n\n        // there are some listeners\n        if ( page.events['show'] ) {\n            // notify listeners\n            page.emit('show', {data: data});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n/**\n * Make the given active/visible page inactive/hidden and trigger the corresponding event.\n *\n * @param {Page} page item to hide\n *\n * @return {boolean} operation status\n */\nfunction hidePage ( page ) {\n    // page available and can be hidden\n    if ( page && page.active ) {\n        // apply visibility\n        page.$node.classList.remove('active');\n        page.active  = false;\n        app.activePage = null;\n\n        debug.info('hide component ' + page.name + '#' + page.id, null, {\n            tags: ['hide', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' hide', 'grey');\n\n        // there are some listeners\n        if ( page.events['hide'] ) {\n            // notify listeners\n            page.emit('hide');\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n// url request params\napp.query = parse(document.location.search.substring(1));\n\n\n// global application configuration\n// in config.js file in js root\napp.config = require('app:config');\n\n\n// the only visible page\napp.activePage = null;\n\n\n/**\n * Browse to a given page.\n * Do nothing if the link is invalid. Otherwise hide the current, show new and update the \"previous\" link.\n *\n * @param {Page} pageTo instance of the page to show\n * @param {*} [data] options to pass to the page on show\n *\n * @return {boolean} operation status\n */\napp.route = function ( pageTo, data ) {\n    var pageFrom = app.activePage;\n\n    if ( DEVELOP ) {\n        //if ( router.pages.length > 0 ) {\n        if ( !pageTo || typeof pageTo !== 'object' ) {\n            throw new Error(__filename + ': wrong pageTo type');\n        }\n        if ( !('active' in pageTo) ) {\n            throw new Error(__filename + ': missing field \"active\" in pageTo');\n        }\n        //}\n    }\n\n    // valid not already active page\n    if ( pageTo && !pageTo.active ) {\n        //debug.log('router.navigate: ' + pageTo.id, pageTo === pageFrom ? 'grey' : 'green');\n        debug.info('app route: ' + pageTo.name + '#' + pageTo.id, null, {tags: ['route', pageTo.name, pageTo.id]});\n\n        // update url\n        //location.hash = this.stringify(name, data);\n\n        // apply visibility\n        hidePage(app.activePage);\n        showPage(pageTo, data);\n\n        // there are some listeners\n        if ( this.events['route'] ) {\n            // notify listeners\n            this.emit('route', {from: pageFrom, to: pageTo});\n        }\n\n        // store\n        //this.history.push(pageTo);\n\n        return true;\n    }\n\n    //debug.warn('invalid page to route: ' + pageTo.id, null, {tags: ['route', 'page', pageTo.id]});\n    console.warn('invalid page to route: ' + pageTo.id);\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    Emitter = require('cjs-emitter'),\n    counter = 0;\n\n\n/**\n * Base component implementation.\n *\n * Visual element that can handle sub-components.\n * Each component has a DOM element container $node with a set of classes:\n * \"component\" and some specific component class names depending on the hierarchy, for example \"page\".\n * Each component has a unique ID given either from $node.id or from data.id. If not given will generate automatically.\n *\n * @constructor\n * @extends Emitter\n *\n * @param {Object} [config={}] init parameters\n * @param {Element} [config.id] component unique identifier (generated if not set)\n * @param {string} [config.className] space-separated list of classes for \"className\" property of this.$node\n * @param {Element} [config.$node] DOM element/fragment to be a component outer container\n * @param {Element} [config.$body] DOM element/fragment to be a component inner container (by default is the same as $node)\n * @param {Component} [config.parent] link to the parent component which has this component as a child\n * @param {Array.<Component>} [config.children=[]] list of components in this component\n * @param {Object.<string, function>} [config.events={}] list of event callbacks\n * @param {boolean} [config.visible=true] component initial visibility state flag\n * @param {boolean} [config.focusable=true] component can accept focus or not\n * @param {boolean} [config.propagate=false] allow to emit events to the parent component\n *\n * @fires module:stb/component~Component#click\n *\n * @example\n * var component = new Component({\n *     $node: document.getElementById(id),\n *     className: 'bootstrap responsive',\n *     events: {\n *         click: function () { ... }\n *     }\n * });\n * component.add( ... );\n * component.focus();\n */\nfunction Component ( config ) {\n    // current execution context\n    var self = this,\n        name;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.id && typeof config.id !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.id');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$node && !(config.$node instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$node type');\n        }\n        if ( config.$body && !(config.$body instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$body type');\n        }\n        if ( config.parent && !(config.parent instanceof Component) ) {\n            throw new Error(__filename + ': wrong config.parent type');\n        }\n        if ( config.children && !Array.isArray(config.children) ) {\n            throw new Error(__filename + ': wrong config.children type');\n        }\n    }\n\n    /**\n     * Component visibility state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.visible = true;\n\n    /**\n     * Component can accept focus or not.\n     *\n     * @type {boolean}\n     */\n    this.focusable = true;\n\n    /**\n     * DOM outer handle.\n     *\n     * @type {Element}\n     */\n    this.$node = null;\n\n    /**\n     * DOM inner handle.\n     * In simple cases is the same as $node.\n     *\n     * @type {Element}\n     */\n    this.$body = null;\n\n    /**\n     * Link to the parent component which has this component as a child.\n     *\n     * @type {Component}\n     */\n    this.parent = null;\n\n    /**\n     * List of all children components.\n     *\n     * @type {Component[]}\n     */\n    this.children = [];\n\n    /**\n     * allow to emit events to the parent component\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.propagate = !!config.propagate;\n\n    // parent constructor call\n    Emitter.call(this);\n\n    // outer handle - empty div in case nothing is given\n    this.$node = config.$node || document.createElement('div');\n\n    // inner handle - the same as outer handler in case nothing is given\n    this.$body = config.$body || this.$node;\n\n    // set CSS class names\n    //this.$node.className += ' component ' + (config.className || '');\n    // previous approach is not good as it mess with components hierarchy\n    this.$node.className = this.name + ' ' + (config.className || '');\n\n    // apply component id if given, generate otherwise\n    this.id = config.id || this.$node.id || 'cid' + counter++;\n\n    // apply hierarchy\n    if ( config.parent ) {\n        // add to parent component\n        config.parent.add(this);\n    }\n\n    // apply given visibility\n    if ( config.visible === false ) {\n        // default state is visible\n        this.hide();\n    }\n\n    // apply focus handling method\n    if ( config.focusable === false ) {\n        // can't accept focus\n        this.focusable = false;\n    }\n\n    // a descendant defined own events\n    if ( this.defaultEvents ) {\n        // sanitize\n        config.events = config.events || {};\n\n        if ( DEVELOP ) {\n            if ( typeof config.events !== 'object' ) {\n                throw new Error(__filename + ': wrong config.events type');\n            }\n            if ( typeof this.defaultEvents !== 'object' ) {\n                throw new Error(__filename + ': wrong this.defaultEvents type');\n            }\n        }\n\n        for ( name in this.defaultEvents ) {\n            // overwrite default events with user-defined\n            config.events[name] = config.events[name] || this.defaultEvents[name];\n        }\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( eventName ) {\n            self.addListener(eventName, config.events[eventName]);\n        });\n    }\n\n    // apply the given children components\n    if ( config.children ) {\n        // apply\n        this.add.apply(this, config.children);\n    }\n\n    // component activation by mouse\n    this.$node.addEventListener('click', function ( event ) {\n        // left mouse button\n        //if ( event.button === 0 ) {\n        // activate if possible\n        self.focus();\n\n        // there are some listeners\n        if ( self.events['click'] ) {\n            /**\n             * Mouse click event.\n             *\n             * @event module:stb/component~Component#click\n             *\n             * @type {Object}\n             * @property {Event} event click event data\n             */\n            self.emit('click', event);\n        }\n        //}\n\n        if ( DEVELOP ) {\n            // middle mouse button\n            if ( event.button === 1 ) {\n                //debug.inspect(self, 0);\n                debug.info('\"window.link\" or \"' + self.id + '.component\"', 'this component is now available in global scope');\n                window.link = self;\n                self.$node.classList.toggle('wired');\n            }\n        }\n\n        event.stopPropagation();\n    });\n\n    if ( DEVELOP ) {\n        // expose inner ID to global scope\n        window[self.id] = self.$node;\n\n        // expose a link\n        this.$node.component = this.$body.component = this;\n        this.$node.title = this.name + '#' + this.id + ' (outer)';\n        this.$body.title = this.name + '#' + this.id + ' (inner)';\n    }\n\n    debug.info('create component ' + this.name + '#' + this.id, null, {\n        tags: ['create', 'component', this.name, this.id]\n    });\n}\n\n\n// inheritance\nComponent.prototype = Object.create(Emitter.prototype);\nComponent.prototype.constructor = Component;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nComponent.prototype.defaultEvents = null;\n\n\n/**\n * Add a new component as a child.\n *\n * @param {...Component} [child] variable number of elements to append\n *\n * @files Component#add\n *\n * @example\n * panel.add(\n *     new Button( ... ),\n *     new Button( ... )\n * );\n */\nComponent.prototype.add = function ( child ) {\n    var index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        child = arguments[index];\n\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        // apply\n        this.children.push(child);\n        child.parent = this;\n\n        // correct DOM parent/child connection if necessary\n        if ( child.$node && child.$node.parentNode === null ) {\n            this.$body.appendChild(child.$node);\n        }\n\n        debug.info('add component ' + child.name + '#' + child.id + ' to ' + this.name + '#' + this.id, null, {\n            tags: ['add', 'component', this.name, this.id, child.name, child.id]\n        });\n\n        // there are some listeners\n        if ( this.events['add'] ) {\n            /**\n             * A child component is added.\n             *\n             * @event module:stb/component~Component#add\n             *\n             * @type {Object}\n             * @property {Component} item new component added\n             */\n            this.emit('add', {item: child});\n        }\n\n        //debug.log('component ' + this.name + '#' + this.id + ' new child: ' + child.name + '#' + child.id);\n    }\n};\n\n\n/* @todo: consider activation in future */\n///**\n// * Insert component into the specific position.\n// *\n// * @param {Component} child component instance to insert\n// * @param {number} index insertion position\n// */\n//Component.prototype.insert = function ( child, index ) {\n//    var prevIndex = this.children.indexOf(child);\n//\n//    if ( DEVELOP ) {\n//        if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n//        if ( !(child instanceof Component) ) { throw new Error(__filename + ': wrong child type'); }\n//    }\n//\n//    if ( prevIndex !== -1 ) {\n//        this.children.splice(prevIndex, 1);\n//        this.$body.removeChild(child.$node);\n//    }\n//\n//    if ( index === this.children.length ) {\n//        this.$body.appendChild(child.$node);\n//    } else {\n//        this.$body.insertBefore(child.$node, this.$body.children[index]);\n//    }\n//    this.children.splice(index, 0, child);\n//\n//    if ( !child.parent ) {\n//        child.parent = this;\n//    }\n//};\n\n\n/**\n * Delete this component and clear all associated events.\n *\n * @fires module:stb/component~Component#remove\n */\nComponent.prototype.remove = function () {\n    // really inserted somewhere\n    if ( this.parent ) {\n        if ( DEVELOP ) {\n            if ( !(this.parent instanceof Component) ) {\n                throw new Error(__filename + ': wrong this.parent type');\n            }\n        }\n\n        // active at the moment\n        if ( app.activePage.activeComponent === this ) {\n            this.blur();\n            this.parent.focus();\n        }\n        this.parent.children.splice(this.parent.children.indexOf(this), 1);\n    }\n\n    // remove all children\n    this.children.forEach(function ( child ) {\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        child.remove();\n    });\n\n    this.$node.parentNode.removeChild(this.$node);\n\n    // there are some listeners\n    if ( this.events['remove'] ) {\n        /**\n         * Delete this component.\n         *\n         * @event module:stb/component~Component#remove\n         */\n        this.emit('remove');\n    }\n\n    // remove all listeners\n    this.events = {};\n\n    //debug.log('component ' + this.name + '#' + this.id + ' remove', 'red');\n    debug.info('remove component ' + this.name + '#' + this.id, null, {\n        tags: ['remove', 'component', this.name, this.id]\n    });\n};\n\n\n/**\n * Activate the component.\n * Notify the owner-page and apply CSS class.\n *\n * @param {Object} [data] custom data which passed into handlers\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#focus\n */\nComponent.prototype.focus = function ( data ) {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // this is a visual component on a page\n    // not already focused and can accept focus\n    if ( this.focusable && this !== activeItem ) {\n        // notify the current active component\n        if ( activeItem ) { activeItem.blur(); }\n\n        /* eslint consistent-this: 0 */\n\n        // apply\n        activePage.activeComponent = activeItem = this;\n        activeItem.$node.classList.add('focus');\n\n        //debug.log('component ' + this.name + '#' + this.id + ' focus');\n        debug.info('focus component ' + this.name + '#' + this.id, null, {\n            tags: ['focus', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( activeItem.events['focus'] ) {\n            /**\n             * Make this component focused.\n             *\n             * @event module:stb/component~Component#focus\n             */\n            activeItem.emit('focus', data);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Remove focus.\n * Change page.activeComponent and notify subscribers.\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#blur\n */\nComponent.prototype.blur = function () {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // apply visuals anyway\n    this.$node.classList.remove('focus');\n\n    // this is the active component\n    if ( this === activeItem ) {\n        activePage.activeComponent = null;\n\n        //debug.log('component ' + this.name + '#' + this.id + ' blur', 'grey');\n        debug.info('blur component ' + this.name + '#' + this.id, null, {\n            tags: ['blur', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['blur'] ) {\n            /**\n             * Remove focus from this component.\n             *\n             * @event module:stb/component~Component#blur\n             */\n            this.emit('blur');\n        }\n\n        return true;\n    }\n\n    debug.warn('component ' + this.name + '#' + this.id + ' attempt to blur without link to a page', null, {\n        tags: ['blur', 'component', this.name, this.id]\n    });\n\n    // nothing was done\n    return false;\n};\n\n\n/*function show ( self, data ) {\n    // correct style\n    self.$node.classList.remove('hidden');\n    // flag\n    self.visible = true;\n\n    debug.info('show component ' + self.name + '#' + self.id, null, {\n        tags: ['show', 'component', self.name, self.id]\n    });\n\n    // there are some listeners\n    if ( self.events['show'] ) {\n        /!**\n         * Make the component visible.\n         *\n         * @event module:stb/component~Component#show\n         *!/\n        self.emit('show', data);\n    }\n}*/\n\n/**\n * Make the component visible and notify subscribers.\n *\n * @param {Object} [data] custom data which passed into handlers\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#show\n */\nComponent.prototype.show = function ( data, callback ) {\n    //var self = this;\n\n    // is it hidden\n    if ( !this.visible ) {\n        /*if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(function () {\n                show(self, data);\n                callback();\n            });\n        } else {\n            // sync call\n            show(this, data);\n        }*/\n\n        // correct style\n        this.$node.classList.remove('hidden');\n        // flag\n        this.visible = true;\n\n        debug.info('show component ' + this.name + '#' + this.id, null, {\n            tags: ['show', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['show'] ) {\n            /**\n             * Make the component visible.\n             *\n             * @event module:stb/component~Component#show\n             */\n            this.emit('show', data);\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Make the component hidden and notify subscribers.\n *\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#hide\n */\nComponent.prototype.hide = function ( callback ) {\n    // is it visible\n    if ( this.visible ) {\n        // correct style\n        this.$node.classList.add('hidden');\n        // flag\n        this.visible = false;\n\n        debug.info('hide component ' + this.name + '#' + this.id, null, {\n            tags: ['hide', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['hide'] ) {\n            /**\n             * Make the component hidden.\n             *\n             * @event module:stb/component~Component#hide\n             */\n            this.emit('hide');\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = Component;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar app = require('./lib/main');\n\n\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-page');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-page';\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n/**\n * Magsdk panel set implementation\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {Array} [config.panels] array of panels to use\n * @param {Array} [config.focusIndex=0] focus panel index\n * @constructor\n * @extends Component\n */\nfunction PanelSet ( config ) {\n    var self = this,\n        index;\n\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.panels && !Array.isArray(config.panels) || !config.panels.length ) {\n            throw new Error(__filename + ': wrong config.panels type');\n        }\n    }\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'panelSet ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    this.panels = config.panels;\n\n    /**\n     * Index of current active panel\n     *\n     * @type {number}\n     */\n    this.focusIndex = 0;\n\n    // set special panels classes\n    if ( config.panels && !config.panels[0].main ) {\n        config.panels[0].$node.classList.add('left');\n        // small resolution special class\n        config.panels[0].$node.classList.add('expand');\n    }\n\n    if (  config.panels && config.panels[1] && config.panels[1].main ) {\n        // small resolution special class\n        config.panels[1].$node.classList.add('position-right');\n    }\n\n    if ( config.panels && config.panels[2] && config.panels[1].main ) {\n        config.panels[2].$node.classList.add('right');\n    }\n\n    // add panels\n    if ( config.panels ) {\n        this.add.apply(this, config.panels);\n    }\n\n    // panel keydown handler to set focus panel\n    function keydownHandler ( event ) {\n        switch ( event.code ) {\n            case keys.left:\n                if ( self.focusIndex > 0 ) {\n                    self.panels[self.focusIndex - 1].focus();\n                }\n                break;\n            case keys.right:\n                if ( self.focusIndex < self.panels.length - 1 ) {\n                    self.panels[self.focusIndex + 1].focus();\n                }\n                break;\n        }\n    }\n\n    // add special listener\n    for ( index = 0; index < this.panels.length; index++ ) {\n        this.panels[index].addListeners({\n            keydown: keydownHandler\n        });\n        // set panels indexes\n        this.panels[index].index = index;\n    }\n\n    /*if ( config.focusIndex && config.focusIndex < this.panels.length ) {\n     this.panels[config.focusIndex].focus();\n     } else {\n     if ( config.panels.length > 1 ) {\n     this.panels[1].focus();\n     } else {\n     this.panels[0].focus();\n     }\n     }*/\n}\n\nPanelSet.prototype = Object.create(Component.prototype);\nPanelSet.prototype.constructor = PanelSet;\n\n// set component name\nPanelSet.prototype.name = 'mag-component-panel-set';\n\n\n/**\n *\n */\nPanelSet.prototype.focus = function () {\n    Component.prototype.focus.call(this);\n    this.panels[this.focusIndex].focus();\n};\n\n/**\n *\n */\nPanelSet.prototype.blur = function () {\n    this.panels[this.focusIndex].blur();\n};\n\nmodule.exports = PanelSet;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    Layout = require('mag-component-layout');\n\n/**\n * Extended panel implementation\n\n * @constructor\n * @extends Component\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {boolean} [config.main=false] set panel as main\n * @param {boolean} [config.size=1] size of panel width\n *\n * @example\n *\n * main = new Panel({\n *            size: 1,\n *             title: ['Left Panel', {className: 'info'}],\n *             main:true,\n *             children:[\n *                 new List({\n *                     data:['1 bla', '2 bro', '3 car', '4 hoho', 'Search'],\n *                     size:5\n *                 })\n *             ]\n *         });\n */\nfunction Panel ( config ) {\n    var $overlay;\n\n    config = config || {};\n\n    /**\n     * Size of panel\n     *\n     * @type {number}\n     */\n    this.size = 1;\n\n    /**\n     * Set panel as main\n     *\n     * @type {boolean}\n     */\n    this.main = false;\n\n    /**\n     * Index in panel set\n     *\n     * @type {number}\n     */\n    this.index = 0;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    // set default className if classList property empty or undefined\n    //config.className = 'Panel ' + (config.className || '');\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    //this.$node.classList.add('theme-main');\n    //this.$node.classList.add('theme-panel');\n\n    // add special class to set component size\n    if ( config.size ) {\n        this.size = config.size;\n        this.$node.classList.add('size' + config.size);\n    }\n\n    // add special class to set main panel\n    if ( config.main ) {\n        this.main = true;\n        this.$node.classList.add('main');\n    }\n\n    // create elements to set as component shadow\n    this.$shadow = {\n        left: document.createElement('div'),\n        right: document.createElement('div')\n    };\n\n    this.$shadow.left.className = 'shadow left';\n    this.$node.appendChild(this.$shadow.left);\n\n    this.$shadow.right.className = 'shadow right';\n    this.$node.appendChild(this.$shadow.right);\n\n    // add title to panel\n    if ( config.title ) {\n        if ( !Array.isArray(config.title) ) {\n            config.title = [config.title];\n        }\n        this.$title = new Layout({\n            //className: 'title theme-header theme-title',\n            className: 'title',\n            data: config.title,\n            focusable: false\n        });\n        this.$node.appendChild(this.$title.$node);\n    }\n\n    this.$node.appendChild(this.$body);\n\n    $overlay = document.createElement('div');\n    $overlay.className = 'overlay';\n    this.$node.appendChild($overlay);\n}\n\n// inheritance\nPanel.prototype = Object.create(Component.prototype);\nPanel.prototype.constructor = Panel;\n\n// set component name\nPanel.prototype.name = 'mag-component-panel';\n\n\n/**\n * Default events\n *\n * @type {{focus: Function}} try to focus first child component if it present\n */\nPanel.prototype.defaultEvents = {\n    focus: function () {\n        if ( this.children.length ) {\n            this.children[0].focus();\n        }\n    }\n};\n\n\n/**\n * Redefine default component focus to set panel as active even when give focus to children components\n */\nPanel.prototype.focus = function () {\n    if ( this.focusable ) {\n        this.parent.panels[this.parent.focusIndex].$node.classList.remove('active');\n        this.parent.panels[this.parent.focusIndex].$node.classList.remove('top');\n        Component.prototype.focus.call(this);\n        this.parent.focusIndex = this.index;\n        this.$node.classList.add('active');\n        this.$node.classList.add('top');\n        if ( this.index === 0 && this.parent.panels[1] && this.parent.panels[1].main ) {\n            this.parent.panels[1].$node.classList.remove('position-left');\n            this.parent.panels[1].$node.classList.add('position-right');\n            if ( this.parent.panels[2] ) {\n                this.parent.panels[2].$node.classList.remove('expand');\n            }\n            this.$node.classList.add('expand');\n\n        } else if ( this.index === 2 && this.parent.panels[1].main ) {\n            this.parent.panels[1].$node.classList.remove('position-right');\n            this.parent.panels[1].$node.classList.add('position-left');\n            this.parent.panels[0].$node.classList.remove('expand');\n            this.$node.classList.add('expand');\n        }\n    }\n};\n\n/**\n * Blur panel\n */\nPanel.prototype.blur = function () {\n    this.parent.panels[this.parent.focusIndex].$node.classList.remove('active');\n    Component.prototype.blur.call(this);\n};\n\n\n// public\nmodule.exports = Panel;\n","/**\n * @license The MIT License (MIT)\n * @author Yaroslav Surilov <y.surilov@infomir.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component');\n\n\n/**\n * Base flicker implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {function} [config.render] custom render function\n * @param {number} [config.interval=1000] interval for flicking\n * @param {string} [config.value] value to set in flickering container\n */\nfunction Flicker ( config ) {\n    var interval;\n\n    // sanitize\n    config = config || {};\n\n    this.timerId = 0;\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( !config.value && !config.render ) {\n            throw new Error(__filename + ': nothing to render (absent value and render method)');\n        }\n        if ( config.render && typeof config.render !== 'function' ) {\n            throw new Error(__filename + ': wrong config.render type');\n        }\n    }\n\n    if ( config.render ) {\n        this.render = config.render;\n    }\n\n    config.focusable = false;\n\n    config.visible = config.visible || true;\n\n    this.value = config.value;\n\n    // initial state\n    this.active = false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'flicker ' + (config.className || '');\n\n    Object.defineProperty(this, 'interval', {\n        set: function ( value ) {\n            if ( DEVELOP ) {\n                // interval must be 0 or positive integer\n                if ( !(typeof value === 'number' && isFinite(value) && !(value % 1) && value >= 0) ) {\n                    throw new Error(__filename + ': wrong interval value');\n                }\n            }\n\n            interval = value;\n        },\n        get: function () {\n            return interval;\n        }\n    });\n\n    this.interval = config.interval || 1000;\n\n    // parent constructor call\n    Component.call(this, config);\n}\n\n\n// inheritance\nFlicker.prototype = Object.create(Component.prototype);\nFlicker.prototype.constructor = Flicker;\n\n// set component name\nFlicker.prototype.name = 'spa-component-flicker';\n\n\n/**\n * Start flickering.\n */\nFlicker.prototype.start = function () {\n    var self = this;\n\n    if ( !this.active ) {\n        this.active = true;\n        // starts immediately\n        (function run () {\n            self.render(self.$node, self.value);\n            self.timerId = setTimeout(run, self.interval);\n        })();\n    }\n};\n\n\n/**\n * Stop flickering.\n */\nFlicker.prototype.stop = function () {\n    if ( this.active ) {\n        this.active = false;\n        clearTimeout(this.timerId);\n    }\n};\n\n\n/**\n * Fill the given item with data.\n *\n * @param {Element} $item item DOM link\n * @param {string} value associated with this item data\n */\nFlicker.prototype.defaultRender = function ( $item, value ) {\n    $item.innerText = value;\n};\n\n\n/**\n * Can be redefined to provide custom rendering.\n *\n * @type {function}\n */\nFlicker.prototype.render = Flicker.prototype.defaultRender;\n\n\n// public\nmodule.exports = Flicker;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Base Events Emitter implementation.\n *\n * @see http://nodejs.org/api/events.html\n * @constructor\n *\n * @example\n * var emitter = new Emitter();\n */\nfunction Emitter () {\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // if ( DEVELOP ) {\n    //     if ( typeof this !== 'object' ) { throw new Error(__filename + ': must be constructed via new'); }\n    // }\n\n    /**\n     * Inner hash table for event names and linked callbacks.\n     * Manual editing should be avoided.\n     *\n     * @member {Object.<string, function[]>}\n     *\n     * @example\n     * {\n     *     click: [\n     *         function click1 () { ... },\n     *         function click2 () { ... }\n     *     ],\n     *     keydown: [\n     *         function () { ... }\n     *     ]\n     * }\n     **/\n    this.events = {};\n}\n\n\nEmitter.prototype = {\n    /**\n     * Bind an event to the given callback function.\n     * The same callback function can be added multiple times for the same event name.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.addListener('click', function ( data ) { ... });\n     * // one more click handler\n     * emitter.addListener('click', function ( data ) { ... });\n     */\n    addListener: function ( name, callback ) {\n        console.assert(arguments.length === 2, 'wrong arguments number');\n        console.assert(typeof name === 'string', 'wrong name type');\n        console.assert(name.length > 0, 'empty name');\n        console.assert(typeof callback === 'function', 'callback should be a function');\n\n        // if ( DEVELOP ) {\n        //     if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        //     if ( typeof name !== 'string' || name.length === 0 ) { throw new Error(__filename + ': wrong or empty name'); }\n        //     if ( typeof callback !== 'function' ) { throw new Error(__filename + ': wrong callback type'); }\n        // }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(callback);\n    },\n\n\n    /**\n     * Add a one time listener for the event.\n     * This listener is invoked only the next time the event is fired, after which it is removed.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.once('click', function ( data ) { ... });\n     */\n    once: function ( name, callback ) {\n        // current execution context\n        var self = this;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n        }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(function onceWrapper () {\n            self.removeListener(name, onceWrapper);\n            callback.apply(self, arguments);\n        });\n    },\n\n\n    /**\n     * Apply multiple listeners at once.\n     *\n     * @param {Object} callbacks event names with callbacks\n     *\n     * @example\n     * emitter.addListeners({\n     *     click: function ( data ) {},\n     *     close: function ( data ) {}\n     * });\n     */\n    addListeners: function ( callbacks ) {\n        var name;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof callbacks !== 'object' ) {\n                throw new Error(__filename + ': wrong callbacks type');\n            }\n            if ( Object.keys(callbacks).length === 0 ) {\n                throw new Error(__filename + ': no callbacks given');\n            }\n        }\n\n        for ( name in callbacks ) {\n            if ( callbacks.hasOwnProperty(name) ) {\n                this.addListener(name, callbacks[name]);\n            }\n        }\n    },\n\n\n    /**\n     * Remove all instances of the given callback.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to remove\n     *\n     * @example\n     * emitter.removeListener('click', func1);\n     */\n    removeListener: function ( name, callback ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n            if ( this.events[name] && !Array.isArray(this.events[name]) ) {\n                throw new Error(__filename + ': corrupted inner data');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( this.events[name] ) {\n            // rework the callback list to exclude the given one\n            this.events[name] = this.events[name].filter(function callbacksFilter ( fn ) { return fn !== callback; });\n            // event has no more callbacks so clean it\n            if ( this.events[name].length === 0 ) {\n                // as if there were no listeners at all\n                this.events[name] = undefined;\n            }\n        }\n    },\n\n\n    /**\n     * Remove all callbacks for the given event name.\n     * Without event name clears all events.\n     *\n     * @param {string} [name] event identifier\n     *\n     * @example\n     * emitter.removeAllListeners('click');\n     * emitter.removeAllListeners();\n     *\n     * @deprecated\n     */\n    /*removeAllListeners: function ( name ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 0 && (typeof name !== 'string' || name.length === 0) ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // check input\n        if ( arguments.length === 0 ) {\n            // no arguments so remove everything\n            this.events = {};\n        } else if ( name ) {\n            if ( DEVELOP ) {\n                if ( this.events[name] ) { throw new Error(__filename + ': event is not removed'); }\n            }\n\n            // only name is given so remove all callbacks for the given event\n            // but object structure modification should be avoided\n            this.events[name] = undefined;\n        }\n    },*/\n\n\n    /**\n     * Execute each of the listeners in the given order with the supplied arguments.\n     *\n     * @param {string} name event identifier\n     *\n     * @example\n     * emitter.emit('init');\n     * emitter.emit('click', {src: panel1, dst: panel2});\n     * emitter.emit('load', error, data);\n     *\n     * // it's a good idea to emit event only when there are some listeners\n     * if ( this.events['click'] ) {\n     *     this.emit('click', {event: event});\n     * }\n     */\n    emit: function ( name ) {\n        var event = this.events[name],\n            index;\n\n        if ( DEVELOP ) {\n            if ( arguments.length < 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( event ) {\n            if ( DEVELOP ) {\n                if ( !Array.isArray(event) ) {\n                    throw new Error(__filename + ': wrong event type');\n                }\n            }\n\n            for ( index = 0; index < event.length; index++ ) {\n                if ( DEVELOP ) {\n                    if ( typeof event[index] !== 'function' ) {\n                        throw new Error(__filename + ': wrong event callback type');\n                    }\n                }\n\n                // invoke the callback with parameters\n                event[index].apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n    }\n};\n\n\n// correct constructor name\nEmitter.prototype.constructor = Emitter;\n\n\n// public\nmodule.exports = Emitter;\n","/**\n * Global application configuration.\n * Should store run-time options, paths, flags and so on.\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    list: {\n        filterFiles: [],\n        filterStatus: null,\n        filterSearch: '',\n        sort: 0\n    },\n    constants: {\n        sort: {\n            BY_NAME: 0,\n            BY_CATEGORY: 1,\n            BY_SIZE: 2\n        }\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar List = require('mag-component-list'),\n    Layout = require('mag-component-layout');\n\n/**\n *  Layout list contains array of layout components\n *\n * @constructor\n * @extends List\n *\n * @param {Object} config object\n * @param {Element} [config.noData=''] element or string to display if set empty data\n *\n * @example\n * var CheckList = require('../stb/ui/layout.list'),\n *     list = new LayoutList({\n *         propagate: true,\n *         size: 7,\n *         focusIndex: 0,\n *         noData: 'No channels'\n *         data: [\n *                 {\n *                     items: [\n *                         {\n *                             className: 'star'\n *                         },\n *                         'Some text'\n *                     ],\n *                     click: function () {\n *                         // do something\n *                     }\n *                 },\n *                 {\n *                     items: [\n *                         'Hello world',\n *                         {\n *                             value: 'hi',\n *                             className: 'status'\n *                         }\n *                     ],\n *                     value:{\n *                         uri: 'http://55.55.55.55/some'\n *                     },\n *                     click: someHandler\n *                 },\n *                 {\n *                     items: [\n *                         {\n *                             className: 'big',\n *                             value: ' Some'\n *                         },\n *                         {\n *                             value: new Input()\n *                         }\n *                     ]\n *                 },\n *                 {\n *                     items: [\n *                         new Button({value: 'Ok'}),\n *                         new Button({value: 'Cancel'}),\n *                         new Button({value: 'Exit'})\n *                     ]\n *                 }\n *             ]\n * });\n */\nfunction LayoutList ( config ) {\n    var self = this;\n\n    config = config || {};\n\n    /**\n     * Elements handlers\n     */\n    this.handlers = {};\n\n    /**\n     * No data placeholder\n     *\n     * @type {Element}\n     */\n    this.$noData = null;\n\n    //config.className = 'layoutList ' + (config.className || '');\n\n    config.propagate = config.propagate === undefined ? true : config.propagate;\n\n    /**\n     * Set data layout to be fixed to cache HTML elements\n     *\n     * @type {boolean|*}\n     */\n    this.fixedData = config.fixedData || false;\n\n    //config.$body = document.createElement('div');\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    this.$noData = document.createElement('div');\n    this.$noData.className = 'noData hidden';\n\n    List.call(this, config);\n\n    this.$node.appendChild(this.$body);\n    this.$node.appendChild(this.$noData);\n\n    // add handler to focus inner layout\n    this.addListener('click:item', function ( event ) {\n        // focus inner layout of item\n        if ( event.$item.layout.children.length && !event.inner ) {\n            event.$item.layout.children[event.$item.layout.focusIndex].focus();\n        }\n\n        // only focus item if we click mouse\n        if ( event.inner ) {\n            self.focus();\n            self.focusItem(event.$item);\n        }\n        // do click callback if it present\n        if ( self.handlers[event.$item.index] ) {\n            self.handlers[event.$item.index](event.$item);\n        }\n    });\n}\n\n\nLayoutList.prototype = Object.create(List.prototype);\nLayoutList.prototype.constructor = LayoutList;\n\n// set component name\nLayoutList.prototype.name = 'mag-component-layout-list';\n\n\n/*eslint id-length:0*/\n/**\n * Default render function\n *\n * @param {Element} $item in list\n * @param {Object} config to render layout element\n */\nLayoutList.prototype.renderItemDefault = function ( $item, config ) {\n    var layout, layoutConfig,\n        currentNode,\n        currentData,\n        i;\n\n    if ( $item.ready && this.fixedData ) {\n        for ( i = 0; i < config.items.length; i++ ) {\n            currentData = config.items[i];\n            if ( typeof currentData.value === 'string' || currentData.value === undefined ) {\n                currentNode = $item.layout.$node.childNodes[i];\n                currentNode.innerText = currentData.value || '';\n                currentNode.className = currentData.className || '';\n            }\n        }\n    } else {\n        // clear inner content\n        while ( $item.firstChild ) {\n            $item.removeChild($item.firstChild);\n        }\n\n        layoutConfig = {\n            focusable: false,\n            data: config.items\n        };\n\n        if ( config.className ) {\n            layoutConfig.className = config.className;\n        }\n\n        layout = new Layout(layoutConfig);\n\n        $item.appendChild(layout.$node);\n        $item.layout = layout;\n        layout.parent = this;\n        layout.$parentItem = $item;\n\n        // focus layoutList if click on layout\n        layout.addListener('click', function () {\n            // add inner property to set that event comes from inner component\n            layout.parent.emit('click:item', {$item: $item, inner: true});\n        });\n\n        if ( config.click ) {\n            this.handlers[$item.index] = config.click;\n        }\n        // item is rendered\n        $item.ready = true;\n    }\n    $item.value = config.value || {};\n};\n\n\nLayoutList.prototype.setData = function ( config ) {\n    List.prototype.setData.call(this, config);\n\n    if ( config.data && config.data.length ) {\n        this.$noData.classList.add('hidden');\n    } else {\n        this.$noData.classList.remove('hidden');\n    }\n};\n\n\nLayoutList.prototype.init = function ( config ) {\n    var $wrap;\n\n    List.prototype.init.call(this, config);\n    if ( config.noData ) {\n        if ( DEVELOP ) {\n            if ( typeof config.noData !== 'string' && !(config.noData instanceof Element) ) {\n                throw new Error(__filename + ': wrong config.$noData type');\n            }\n        }\n\n        this.$noData.innerHTML = '';\n        if ( config.noData instanceof Element ) {\n            this.$noData.appendChild(config.noData);\n        } else if ( typeof config.noData === 'string' ) {\n            $wrap = document.createElement('div');\n            $wrap.innerText = config.noData;\n            this.$noData.appendChild($wrap);\n        }\n    }\n\n    if ( config.data && config.data.length ) {\n        this.$noData.classList.add('hidden');\n    } else {\n        this.$noData.classList.remove('hidden');\n    }\n};\n\nLayoutList.prototype.renderItem = LayoutList.prototype.renderItemDefault;\n\n\nmodule.exports = LayoutList;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n/* eslint complexity: [error, 37] */\n/* eslint max-lines-per-function: 1 */\n/* eslint no-fallthrough: 1 */\n/* eslint complexity: 1 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n\n/**\n * Mouse click event.\n *\n * @event module:stb/ui/list~List#click:item\n *\n * @type {Object}\n * @property {Element} $item clicked HTML item\n * @property {Event} event click event data\n */\n\n\n/**\n * Base list implementation.\n *\n * Each data item can be either a primitive value or an object with these fields:\n *\n *  Name    | Description\n * ---------|-------------\n *  value   | actual cell value to render\n *  mark    | is it necessary or not to render this cell as marked\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array}    [config.data=[]]     component data to visualize\n * @param {function} [config.render]      method to build each grid cell content\n * @param {function} [config.navigate]    method to move focus according to pressed keys\n * @param {number}   [config.size=5]      amount of visible items on a page\n * @param {number}   [config.viewIndex=0] move view window to this position on init\n * @param {number}   [config.focusIndex]  list item index to make item focused (move view window to this position)\n * @param {boolean}  [config.cycle=true]  allow or not to jump to the opposite side of a list when there is nowhere to go next\n * @param {boolean}  [config.scroll=null] associated ScrollBar component link\n * @param {Object}   [config.provider]    data provider\n *\n * @fires module:stb/ui/list~List#click:item\n */\nfunction List ( config ) {\n    // current execution context\n    //var self = this;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Link to the currently focused DOM element.\n     *\n     * @type {Element}\n     */\n    this.$focusItem = null;\n\n    /**\n     * Position of the visible window to render.\n     *\n     * @type {number}\n     */\n    this.viewIndex = null;\n\n    /**\n     * Component data to visualize.\n     *\n     * @type {Array}\n     */\n    this.data = [];\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Amount of visible items on a page.\n     *\n     * @type {number}\n     */\n    this.size = 5;\n\n    /**\n     * Allow or not to jump to the opposite side of a list when there is nowhere to go next.\n     *\n     * @type {boolean}\n     */\n    this.cycle = false;\n\n    /**\n     * Associated ScrollBar component link.\n     *\n     * @type {ScrollBar}\n     */\n    this.scroll = null;\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    /**\n     * Associated data provider\n     *\n     * @type {Provider}\n     */\n    this.provider = null;\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    //config.className += ' theme-main';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // component setup\n    this.init(config);\n\n    // custom navigation method\n    //if ( config.navigate ) {\n    //    if ( DEVELOP ) {\n    //        if ( typeof config.navigate !== 'function' ) { throw new Error(__filename + ': wrong config.navigate type'); }\n    //    }\n    //    // apply\n    //    this.navigate = config.navigate;\n    //}\n\n    // navigation by keyboard\n    //this.addListener('keydown', this.navigate);\n\n    // navigation by mouse\n    //this.$body.addEventListener('mousewheel', function ( event ) {\n    //    // scrolling by Y axis\n    //    if ( self.type === self.TYPE_VERTICAL && event.wheelDeltaY ) {\n    //        self.move(event.wheelDeltaY > 0 ? 38 : keys.down);\n    //    }\n    //\n    //    // scrolling by X axis\n    //    if ( self.type === self.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n    //        self.move(event.wheelDeltaX > 0 ? 37 : 39);\n    //    }\n    //});\n}\n\n\n// inheritance\nList.prototype = Object.create(Component.prototype);\nList.prototype.constructor = List;\n\n// set component name\nList.prototype.name = 'mag-component-list';\n\nList.prototype.TYPE_VERTICAL   = 1;\nList.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Fill the given item with data.\n *\n * @param {Element} $item item DOM link\n * @param {*} data associated with this item data\n */\nList.prototype.renderItemDefault = function ( $item, data ) {\n    $item.innerText = data.value;\n};\n\n\n/**\n * Method to build each list item content.\n * Can be redefined to provide custom rendering.\n *\n * @type {function}\n */\nList.prototype.renderItem = List.prototype.renderItemDefault;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nList.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse wheel events.\n     *\n     * @param {Event} event generated event\n     */\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        if ( this.type === this.TYPE_VERTICAL && event.wheelDeltaY ) {\n            this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n        }\n\n        // scrolling by X axis\n        if ( this.type === this.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n            this.move(event.wheelDeltaX > 0 ? keys.left : keys.right);\n        }\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n            case keys.right:\n            case keys.left:\n            case keys.pageUp:\n            case keys.pageDown:\n            case keys.home:\n            case keys.end:\n                // cursor move only on arrow keys\n                this.move(event.code);\n                break;\n            case keys.enter:\n                // there are some listeners\n                if ( this.events['click:item'] && this.$focusItem ) {\n                    // notify listeners\n                    this.emit('click:item', {$item: this.$focusItem, event: event});\n                }\n                break;\n        }\n    }\n};\n\n\n/**\n * Default method to move focus according to pressed keys.\n *\n * @param {Object} event generated event source of movement\n */\n//List.prototype.navigateDefault = function ( event ) {\n//    switch ( event.code ) {\n//        case 38:\n//        case 40:\n//        case 39:\n//        case 37:\n//        case 33:\n//        case 34:\n//        case 36:\n//        case 35:\n//            // cursor move only on arrow keys\n//            this.move(event.code);\n//            break;\n//        case 13:\n//            // there are some listeners\n//            if ( this.events['click:item'] ) {\n//                // notify listeners\n//                this.emit('click:item', {$item: this.$focusItem, event: event});\n//            }\n//            break;\n//    }\n//};\n\n\n/**\n * Current active method to move focus according to pressed keys.\n * Can be redefined to provide custom navigation.\n *\n * @type {function}\n */\n//List.prototype.navigate = List.prototype.navigateDefault;\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var idx, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( idx = 0; idx < data.length; idx++ ) {\n        // cell value\n        item = data[idx];\n        // primitive value\n        if ( typeof item !== 'object' ) {\n            // wrap with defaults\n            item = data[idx] = {\n                value: data[idx]\n            };\n        }\n\n        if ( DEVELOP ) {\n            //if ( !('value' in item) ) { throw new Error(__filename + ': field \"value\" is missing'); }\n            if ( ('mark' in item) && Boolean(item.mark) !== item.mark ) {\n                throw new Error(__filename + ': item.mark must be boolean');\n            }\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.init = function ( config ) {\n    var self     = this,\n        currSize = this.$body.children.length,\n        /**\n         * Item mouse click handler.\n         *\n         * @param {Event} event click event data\n         *\n         * @this Element\n         *\n         * @fires module:stb/ui/list~List#click:item\n         */\n        onClick = function ( event ) {\n            if ( this.data ) {\n                self.focusItem(this);\n\n                // there are some listeners\n                if ( self.events['click:item'] ) {\n                    // notify listeners\n                    self.emit('click:item', {$item: this, event: event});\n                }\n            }\n        },\n        item, idx;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // apply cycle behaviour\n    if ( config.cycle !== undefined ) { this.cycle = config.cycle; }\n\n    // apply ScrollBar link\n    if ( config.scroll ) { this.scroll = config.scroll; }\n\n    // apply data provider\n    if ( config.provider ) { this.provider = config.provider; }\n\n\n    // custom render method\n    if ( config.render ) {\n        if ( DEVELOP ) {\n            if ( typeof config.render !== 'function' ) {\n                throw new Error(__filename + ': wrong config.render type');\n            }\n        }\n\n        // apply\n        this.renderItem = config.render;\n    }\n\n    // list items amount on page\n    if ( config.size ) {\n        if ( DEVELOP ) {\n            if ( Number(config.size) !== config.size ) {\n                throw new Error(__filename + ': config.size must be a number');\n            }\n            if ( config.size <= 0 ) {\n                throw new Error(__filename + ': config.size should be positive');\n            }\n        }\n\n        // apply\n        this.size = config.size;\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( name ) {\n            self.events[name] = null;\n            self.addListener(name, config.events[name]);\n        });\n    }\n\n    // geometry has changed or initial draw\n    if ( this.size !== currSize ) {\n        // non-empty list\n        if ( currSize > 0 ) {\n            // clear old items\n            this.$body.innerText = null;\n        }\n\n        // create new items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            item = document.createElement('div');\n            item.index = idx;\n            //item.className = 'item theme-list-item';\n            item.className = 'item';\n\n            item.addEventListener('click', onClick);\n            this.$body.appendChild(item);\n        }\n    }\n\n    if ( this.provider ) {\n        if ( this.provider.blocked ) {\n            return;\n        }\n\n        this.provider.get( null, function ( error, data ) {\n            if ( error ) {\n                if ( self.events['data:error'] ) {\n                    /**\n                     * Provider get error while take new data\n                     *\n                     * @event module:stb/ui/list~List#data:error\n                     */\n                    self.emit('data:error', error);\n                }\n            } else {\n                if ( data ) {\n                    config.data = data;\n                    self.setData(config);\n                    if ( self.scroll ) {\n                        self.scroll.init({\n                            realSize: self.provider.maxCount,\n                            viewSize: self.provider.size,\n                            value: self.provider.head + self.provider.pos\n                        });\n                    }\n                }\n                if ( self.events['data:get'] ) {\n                    /**\n                     * Provider request new data\n                     *\n                     * @event module:stb/ui/list~List#data:get\n                     *\n                     * @type {Object}\n                     */\n                    self.emit('data:get');\n                }\n            }\n        });\n    } else if ( config.data ) {\n        this.setData(config);\n    }\n};\n\n/**\n * Set data and render inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.setData = function ( config ) {\n    // apply list of items\n\n    if ( config.data ) {\n        if ( DEVELOP ) {\n            if ( !Array.isArray(config.data) ) { throw new Error(__filename + ': wrong config.data type'); }\n        }\n        // prepare user data\n        this.data = normalize(config.data);\n    }\n\n    // view window position\n    if ( DEVELOP ) {\n        if ( config.viewIndex !== undefined ) {\n            if ( Number(config.viewIndex) !== config.viewIndex ) {\n                throw new Error(__filename + ': config.viewIndex must be a number');\n            }\n            if ( config.viewIndex < 0 ) {\n                throw new Error(__filename + ': config.viewIndex should be positive');\n            }\n        }\n    }\n\n    // reset current view window position\n    this.viewIndex = null;\n\n    if ( this.$focusItem ) {\n        this.blurItem(this.$focusItem);\n    }\n\n    if ( this.scroll ) {\n        if ( this.provider ) {\n            if ( this.scroll.realSize !== this.provider.maxCount ) {\n                this.scroll.init({\n                    realSize: this.provider.maxCount,\n                    viewSize: this.provider.size,\n                    value: this.provider.head + this.provider.pos\n                });\n            }\n        } else {\n            this.scroll.init({\n                realSize: this.data.length,\n                viewSize: this.size,\n                value: config.viewIndex || 0\n            });\n        }\n    }\n\n    // set focus item\n    if ( config.focusIndex !== undefined && this.data.length ) {\n        if ( DEVELOP ) {\n            if ( Number(config.focusIndex) !== config.focusIndex ) {\n                throw new Error(__filename + ': config.focusIndex must be a number');\n            }\n            if ( config.focusIndex < 0 ) {\n                throw new Error(__filename + ': config.focusIndex should be positive');\n            }\n            // if ( config.focusIndex > this.data.length - 1 ) {\n            //     throw new Error(__filename + ': config.focusIndex should be less than data size');\n            // }\n        }\n\n        // jump to the necessary item\n        this.focusIndex(config.focusIndex);\n    } else {\n        // go to the first page\n        this.renderView(config.viewIndex || 0);\n    }\n};\n\n\n/**\n * Shift the visible view window event.\n *\n * @event module:stb/ui/list~List#move:view\n *\n * @type {Object}\n * @property {number} prevIndex previous view window position\n * @property {number} currIndex current view window position\n */\n\n\n/**\n * Draw the visible window.\n *\n * @param {number} index start position to render\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#move:view\n */\nList.prototype.renderView = function ( index ) {\n    var $item, idx, itemData, prevIndex, currIndex;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be more than zero');\n        }\n        // if ( index >= this.data.length ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // has the view window position changed\n    if ( this.viewIndex !== index ) {\n        // save for emit\n        prevIndex = this.viewIndex;\n        // sync global pointer\n        this.viewIndex = currIndex = index;\n\n        // rebuild all visible items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            // shortcuts\n            $item    = this.$body.children[idx];\n            itemData = this.data[index];\n\n            // real item or stub\n            if ( itemData ) {\n                // correct inner data/index and render\n                $item.data  = itemData;\n                $item.index = index;\n                this.renderItem($item, itemData);\n\n                // apply CSS\n                if ( itemData.mark ) {\n                    $item.classList.add('mark');\n                } else {\n                    $item.classList.remove('mark');\n                }\n            } else {\n                // nothing to render\n                $item.data = $item.index = undefined;\n                $item.innerHTML = '&nbsp;';\n                $item.ready = false;\n            }\n            index++;\n        }\n\n        // there are some listeners\n        if ( this.events['move:view'] ) {\n            // notify listeners\n            this.emit('move:view', {prevIndex: prevIndex, currIndex: currIndex});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            this.emit('select:item', {$item: $item});\n        }\n\n        // update a linked scroll component\n        if ( this.scroll ) {\n            this.scroll.scrollTo(this.provider ? this.provider.head + this.provider.pos : this.viewIndex);\n        }\n\n        // full rebuild\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Move focus to the given direction.\n *\n * @param {number} direction arrow key code\n *\n * @fires module:stb/ui/list~List#cycle\n * @fires module:stb/ui/list~List#overflow\n */\nList.prototype.move = function ( direction ) {\n    var self = this,\n        force = false;\n\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(direction) !== direction ) {\n            throw new Error(__filename + ': direction must be a number');\n        }\n    }\n\n    // empty list\n    if ( !this.data.length ) {\n        return;\n    }\n\n    switch ( direction ) {\n        case keys.left:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.up:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index > 0 ) {\n                    if ( this.$focusItem === this.$body.firstChild ) {\n                        this.renderView(this.viewIndex - 1);\n                    } else {\n                        this.focusItem(this.$focusItem.previousSibling);\n                    }\n                } else if ( this.provider ) {\n                    if ( this.provider.blocked ) {\n                        return;\n                    }\n\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the end of the list\n                        this.move(keys.end);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.right:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.down:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index < this.data.length - 1 ) {\n                    if ( this.$focusItem === this.$body.lastChild ) {\n                        this.renderView(this.viewIndex + 1);\n                    } else {\n                        this.focusItem(this.$focusItem.nextSibling);\n                    }\n                } else if ( this.provider ) {\n                    if ( this.provider.blocked ) {\n                        return;\n                    }\n\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the beginning of the list\n                        this.move(keys.home);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.pageUp:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n\n                return;\n            }\n            if ( this.viewIndex < this.size ) {\n                // first page\n                this.renderView(0);\n            } else {\n                // second page and further\n                this.renderView(this.viewIndex - this.size + 1);\n            }\n\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.pageDown:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            // data is bigger then one page\n            if ( this.data.length > this.size ) {\n                // determine jump size\n                if ( this.viewIndex > this.data.length - this.size * 2 ) {\n                    // last page\n                    this.renderView(this.data.length - this.size);\n                } else {\n                    // before the last page\n                    this.renderView(this.viewIndex + this.size - 1);\n                }\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n        case keys.home:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n                break;\n            }\n            this.renderView(0);\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.end:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            if ( this.data.length > this.size ) {\n                this.renderView(this.data.length - this.size);\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n    }\n};\n\n\n/**\n * Highlight the given DOM element as focused.\n * Remove focus from the previously focused item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.focusItem = function ( $item ) {\n    var $prev = this.$focusItem;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n    }\n\n    // different element\n    if ( $item && $prev !== $item ) {\n        if ( DEVELOP ) {\n            if ( !($item instanceof Element) ) {\n                throw new Error(__filename + ': wrong $item type');\n            }\n            if ( $item.parentNode !== this.$body ) {\n                throw new Error(__filename + ': wrong $item parent element');\n            }\n        }\n\n        // some item is focused already\n        if ( $prev !== null ) {\n            if ( DEVELOP ) {\n                if ( !($prev instanceof Element) ) {\n                    throw new Error(__filename + ': wrong $prev type');\n                }\n            }\n\n            // style\n            $prev.classList.remove('focus');\n            //$prev.classList.remove('theme-focus');\n\n            // there are some listeners\n            if ( this.events['blur:item'] ) {\n                /**\n                 * Remove focus from an element.\n                 *\n                 * @event module:stb/ui/list~List#blur:item\n                 *\n                 * @type {Object}\n                 * @property {Element} $item previously focused HTML element\n                 */\n                this.emit('blur:item', {$item: $prev});\n            }\n        }\n        // reassign\n        this.$focusItem = $item;\n\n        this.$focusItem.data = this.data[this.$focusItem.index];\n\n        // correct CSS\n        $item.classList.add('focus');\n        //$item.classList.add('theme-focus');\n\n        // there are some listeners\n        if ( this.events['focus:item'] ) {\n            /**\n             * Set focus to a DOM element.\n             *\n             * @event module:stb/ui/list~List#focus:item\n             *\n             * @type {Object}\n             * @property {Element} $prev old/previous focused HTML element\n             * @property {Element} $curr new/current focused HTML element\n             */\n            this.emit('focus:item', {$prev: $prev, $curr: $item});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            /**\n             * Set focus to a list item.\n             *\n             * @event module:stb/ui/list~List#select:item\n             *\n             * @type {Object}\n             * @property {Element} $item new/current focused item\n             */\n            this.emit('select:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Highlight the given DOM element as blur.\n * Remove focus from the item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.blurItem = function ( $item ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) { throw new Error(__filename + ': wrong arguments number'); }\n    }\n\n    // different element\n    if ( $item ) {\n        if ( $item === this.$focusItem ) {\n            this.$focusItem = null;\n        }\n\n        $item.classList.remove('focus');\n        //$item.classList.remove('theme-focus');\n\n        // there are some listeners\n        if ( this.events['blur:item'] ) {\n            /**\n             * Remove focus from an element.\n             *\n             * @event module:stb/ui/list~List#blur:item\n             *\n             * @type {Object}\n             * @property {Element} $item previously focused HTML element\n             */\n            this.emit('blur:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Set the given item focused by item index.\n *\n * @param {number} index item data index\n */\nList.prototype.focusIndex = function ( index ) {\n    var viewIndex = this.viewIndex || 0;\n\n    if ( DEVELOP ) {\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be positive');\n        }\n        // if ( index > this.data.length - 1 ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // determine direction\n    if ( index >= viewIndex + this.size ) {\n        // check range\n        index = index < this.data.length - 1 ? index : this.data.length - 1;\n        // move down\n        this.renderView(index - this.size + 1);\n        this.focusItem(this.$body.lastChild);\n    } else if ( index < viewIndex ) {\n        // check range\n        index = index > 0 ? index : 0;\n        // move up\n        this.renderView(index);\n        this.focusItem(this.$body.firstChild);\n    } else {\n        // no move\n        if ( this.viewIndex === null ) {\n            // first attempt\n            this.renderView(0);\n        }\n        this.focusItem(this.$body.children[index - viewIndex]);\n    }\n};\n\n\n/**\n * Set item state and appearance as marked.\n *\n * @param {Node|Element} $item element to focus\n * @param {boolean} state true - marked, false - not marked\n */\nList.prototype.markItem = function ( $item, state ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 2 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !($item instanceof Element) ) {\n            throw new Error(__filename + ': wrong $item type');\n        }\n        if ( $item.parentNode !== this.$body ) {\n            throw new Error(__filename + ': wrong $item parent element');\n        }\n        if ( Boolean(state) !== state ) {\n            throw new Error(__filename + ': state must be boolean');\n        }\n    }\n\n    // correct CSS\n    if ( state ) {\n        $item.classList.add('mark');\n    } else {\n        $item.classList.remove('mark');\n    }\n\n    // apply flag\n    $item.data.mark = state;\n};\n\n\n// public\nmodule.exports = List;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-button');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-button';\n","/**\n *\n * @author Aleynikov Boris <alynikov.boris@gmail.com>.\n */\n\n'use strict';\n\n\nmodule.exports = {\n    /**\n     * Convert bytes to human readable text value (GB/MB/KB/B)\n     * @param {number} size file size in bytes\n     * @return {string} size localised size\n     */\n    convert: function ( size ) {\n        if ( !size || size < 0 ) { return 'n/a'; }\n\n        if ( size > (1024 * 1024 * 1024) ) {\n            return (Math.floor(size / 1024 / 1024 / 1024 * 100) / 100) + ' ' + gettext('GB');\n        }\n        if ( size > (1024 * 1024) ) {\n            return (Math.floor(size / 1024 / 1024 * 100) / 100) + ' ' + gettext('MB');\n        }\n        if ( size > (1024) ) {\n            return (Math.floor(size / 1024 * 100) / 100) + ' ' + gettext('KB');\n        }\n\n        return size + ' ' + gettext('B');\n    },\n    /**\n     * Get file size by url\n     * @param {string} url path to file\n     * @param {function} callback callback file size in bytes\n     */\n    checkSize: function ( url, callback ) {\n        var xhr = new XMLHttpRequest();\n\n        xhr.onreadystatechange = function () {\n            if ( xhr.readyState === 4 ) {\n                if ( typeof callback === 'function' ) {\n                    // debug.log('AJAX->answered, Length:' + xhr.getResponseHeader('Content-Length'));\n                    callback(xhr.getResponseHeader('Content-Length'));\n                }\n            }\n        };\n        xhr.open('HEAD', url, true);\n        xhr.send(null);\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-scrollbar');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-scrollbar';\n","/**\n * HTML elements low-level handling.\n *\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n/* eslint no-unused-vars: 0 */\n\n/**\n * DOM manipulation module\n */\nvar dom = {};\n\n\n/**\n * Create a new HTML element.\n *\n * @param {string} tagName mandatory tag name\n * @param {Object|null} [attrList] element attributes\n * @param {...*} [content] element content (primitive value/values or other nodes)\n * @return {Node|null} HTML element or null on failure\n *\n * @example\n * dom.tag('table');\n * dom.tag('div', {}, 'some text');\n * dom.tag('div', {className:'top'}, dom.tag('span'), dom.tag('br'));\n * dom.tag('link', {rel:'stylesheet', type:'text/css', href:'http://some.url/'});\n */\ndom.tag = function ( tagName, attrList, content ) {\n    var node = null,\n        index, name;\n\n    // minimal param is given\n    if ( tagName ) {\n        // empty element\n        node = document.createElement(tagName);\n\n        // optional attribute list is given\n        if ( attrList && typeof attrList === 'object' ) {\n            for ( name in attrList ) {\n                // extend a new node with the given attributes\n                node[name] = attrList[name];\n            }\n        }\n\n        // content (arguments except the first two)\n        for ( index = 2; index < arguments.length; index++ ) {\n            // some data is given\n            if ( arguments[index] ) {\n                // regular HTML tag or plain data\n                node.appendChild(\n                    typeof arguments[index] === 'object' ? arguments[index] : document.createTextNode(arguments[index])\n                );\n            }\n        }\n\n    }\n\n    return node;\n};\n\n\n/**\n * Create a new DocumentFragment filled with the given non-empty elements if any.\n *\n * @param {...*} [node] fragment content (primitive value/values or other nodes)\n * @return {DocumentFragment} new placeholder\n *\n * @example\n * // gives an empty fragment element\n * dom.fragment();\n * // gives a fragment element with 3 div element inside\n * dom.fragment(dom.tag('div'), div2, div3);\n * // mixed case\n * dom.fragment('some text', 123, div3);\n */\ndom.fragment = function ( node ) {\n    // prepare placeholder\n    var fragment = document.createDocumentFragment(),\n        index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        node = arguments[index];\n        // some data is given\n        if ( node ) {\n            // regular HTML tag or plain data\n            fragment.appendChild(typeof node === 'object' ? node : document.createTextNode(node));\n        }\n    }\n\n    return fragment;\n};\n\n\n/**\n * Add the given non-empty data (HTML element/text or list) to the destination element.\n *\n * @param {Node} tagDst element to receive children\n * @param {...*} [content] element content (primitive value/values or other nodes)\n * @return {Node|null} the destination element - owner of all added data\n *\n * @example\n * // simple text value\n * add(some_div, 'Hello world');\n * // single DOM Element\n * add(some_div, some_other_div);\n * // DOM Element list\n * add(some_div, div1, div2, div3);\n * // mixed case\n * add(some_div, div1, 'hello', 'world');\n */\ndom.add = function ( tagDst, content ) {\n    var index;\n\n    // valid HTML tag as the destination\n    if ( tagDst instanceof Node ) {\n        // append all except the first one\n        for ( index = 1; index < arguments.length; index++ ) {\n            // some data is given\n            if ( arguments[index] ) {\n                // regular HTML tag or plain data\n                tagDst.appendChild(\n                    typeof arguments[index] === 'object' ? arguments[index] : document.createTextNode(arguments[index])\n                );\n            }\n        }\n\n        return tagDst;\n    }\n\n    return null;\n};\n\n\n/**\n * Remove the given elements from the DOM.\n *\n * @param {...Node} [nodes] element to be removed\n * @return {boolean} operation status (true - all given elements removed)\n *\n * @example\n * dom.remove(document.querySelector('div.test'));\n * dom.remove(div1, div2, div3);\n */\ndom.remove = function ( nodes ) {\n    // amount of successfully removed nodes\n    var count = 0,\n        index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        // valid non-empty tag\n        if ( arguments[index] && arguments[index].parentNode ) {\n            if ( arguments[index].parentNode.removeChild(arguments[index]) === arguments[index] ) {\n                count++;\n            }\n        }\n    }\n\n    return arguments.length > 0 && count === arguments.length;\n};\n\n\ndom.clear = function ( node ) {\n    while ( node.lastChild ) {\n        node.removeChild(node.lastChild);\n    }\n};\n\n\n// public\nmodule.exports = dom;\n","/**\n * @license The MIT License (MIT)\n * @copyright Dmitry Fedotov <bas.jsdev@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\nvar StbComponentModal = require('stb-component-modal'),\n    Component         = require('stb-component'),\n    keys              = require('stb-keys');\n\n\n/**\n * Modal window implementation.\n *\n * @constructor\n * @extends StbComponentModal\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {Object} [config.title] message title\n * @param {Object} [config.className] message classname\n * @param {Object} [config.icon] icon at header\n * @param {Object} [config.visible] visibility flag\n * @param {Object} [config.children] content (inherited from the parent)\n *\n * @example\n * var modalSort = new Modal({\n *     visible: false,\n *     title: 'sort',\n *     events: {\n *         show: function () {\n *             list.focus();\n *         },\n *         hide: function () {\n *             page.panelSet.focus();\n *         }\n *     },\n *     children: [list = new RadioList({})]\n * });\n * page.add(modalSort);\n */\nfunction Modal ( config ) {\n    var self = this,\n        $overlay, $body, onkeydown;\n\n    // sanitize\n    config = config || {};\n    config.events = config.events || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.icon && typeof config.icon !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.icon');\n        }\n        if ( config.title && typeof config.title !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.title');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body ) {\n            throw new Error(__filename + ': config.$body should not be provided in Modal manually');\n        }\n    }\n\n    // usually can't accept focus\n    config.focusable = config.focusable || false;\n    // hide by default\n    config.visible = config.visible || false;\n    // add default close by click\n    config.events.click = config.events.click || function () { self.hide(); };\n    // add close window behavior, when pushed a back button or a menu button\n    onkeydown = config.events.keydown;\n    config.events.keydown = function ( event ) {\n        if ( onkeydown ) {\n            onkeydown.call(this, event);\n        }\n        if ( event.code === keys.back || event.code === keys.menu ) {\n            event.stop = true;\n            self.hide();\n        }\n    };\n\n    // parent constructor call\n    StbComponentModal.call(this, config);\n\n    // add table-cell wrappers\n    this.$node.appendChild(document.createElement('div'));\n    this.$node.firstChild.classList.add('alignBox');\n    this.$node.firstChild.appendChild(document.createElement('div'));\n\n    // add header div\n    this.$header = document.createElement('div');\n    this.$header.className = 'header';\n\n    // insert caption placeholder\n    this.$text = this.$header.appendChild(document.createElement('div'));\n    this.$text.classList.add('text');\n    this.$text.innerText = config.title || '';\n\n    // optional icon\n    if ( config.icon ) {\n        this.$icon = this.$header.appendChild(document.createElement('div'));\n        this.$icon.className = 'icon ' + config.icon;\n    }\n\n    $overlay = document.createElement('div');\n    $overlay.className = 'overlay';\n\n    // add to dom\n    // add body wrapper\n    $body = this.$body.parentNode.removeChild(this.$body);\n    this.$node.firstChild.firstChild.appendChild(this.$header);\n    this.$node.firstChild.firstChild.appendChild($body);\n    this.$node.firstChild.firstChild.appendChild($overlay);\n}\n\n\n// inheritance\nModal.prototype = Object.create(StbComponentModal.prototype);\nModal.prototype.constructor = Modal;\n\n// set component name\nModal.prototype.name = 'mag-component-modal';\n\n\n/**\n * Redefine default component focus to set additional css\n */\nModal.prototype.focus = function () {\n    this.$node.classList.add('active');\n    StbComponentModal.prototype.focus.call(this);\n    if ( this.children[0] && this.children[0] instanceof Component ) {\n        this.children[0].focus();\n    }\n};\n\n\n/**\n * Blur message\n */\nModal.prototype.blur = function () {\n    this.$node.classList.remove('active');\n    StbComponentModal.prototype.blur.call(this);\n};\n\n\n// public\nmodule.exports = Modal;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core');\n//    metrics = require('app:metrics'),\n//    linkCSS;\n\n\n// global link\n//app.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\n//app.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\n//app.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n// // set max browser window size\n// window.moveTo(0, 0);\n// window.resizeTo(metrics.width, metrics.height);\n\n// load CSS file base on resolution\n/*linkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = 'css/' + (DEVELOP ? 'develop.' : 'release.') + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);*/\n\n\n// public\nmodule.exports = function ( name ) {\n    var link = document.createElement('link');\n\n    link.rel  = 'stylesheet';\n    link.href = 'css/' + name + '.' + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\n    document.head.appendChild(link);\n};\n","/**\n * Global list of non-printable control key codes.\n *\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    backspace: 8,\n    tab:       9,\n    enter:     13,\n    escape:    27,\n    space:     32,\n    pageUp:    33,\n    pageDown:  34,\n    end:       35,\n    home:      36,\n    left:      37,\n    up:        38,\n    right:     39,\n    down:      40,\n    insert:    45,\n    // not \"delete\" because of old browsers issue\n    del:       46\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n/**\n * Layout component implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array} [config.data] array of items to add to layout\n */\nfunction Layout ( config ) {\n    var self = this;\n\n    // sanitize\n    config = config || {};\n\n    /**\n     * Index of focused child component\n     * @type {number}\n     */\n    this.focusIndex = 0;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && config.className !== undefined && typeof config.className !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    //config.className = 'layout ' + (config.className || '');\n\n    /**\n     * Component data\n     * @type {Array}\n     */\n    this.data = [];\n\n    Component.call(this, config);\n\n    this.init(config);\n\n    // add listener to move focus between children\n    this.addListener('keydown', function ( event ) {\n        switch ( event.code ) {\n            case keys.right:\n                if ( self.children.length && self.focusIndex < self.children.length - 1 ) {\n                    self.children[++self.focusIndex].focus();\n                }\n                break;\n            case keys.left:\n                if ( self.children.length && self.focusIndex > 0 ) {\n                    self.children[--self.focusIndex].focus();\n                }\n                break;\n            case keys.back:\n                // focus parent focused item if parent is layout list\n                if ( self.parent ) {\n                    self.parent.focus();\n                    if ( self.$parentItem ) {\n                        self.parent.focusItem(self.$parentItem);\n                    }\n                }\n                break;\n        }\n    });\n}\n\n\nLayout.prototype = Object.create(Component.prototype);\nLayout.prototype.constructor = Layout;\n\n// set component name\nLayout.prototype.name = 'mag-component-layout';\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var index, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( index = 0; index < data.length; index++ ) {\n        // cell value\n        item = data[index];\n        // plain text\n        if ( typeof item === 'object' ) {\n            // HTML element or component\n            if ( item instanceof Component || item instanceof HTMLElement ) {\n                data[index] = {\n                    value: item,\n                    wrap: false\n                };\n            } else {\n                data[index].wrap = true;\n            }\n        } else {\n            // wrap with defaults\n            data[index] = {\n                value: data[index],\n                wrap: true\n            };\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nLayout.prototype.init = function ( config ) {\n    var self = this,\n        data = normalize(config.data),\n        item, $wrapper, index;\n\n    // clear element if reinit\n    while (this.$node.firstChild) {\n        this.$node.removeChild(this.$node.firstChild);\n    }\n\n    this.data = data;\n\n    /**\n     * @this Component\n     */\n    function componentClickHandler (  ) {\n        self.focusIndex = this.index;\n    }\n\n    for ( index = 0; index < data.length; index++ ) {\n        item = data[index];\n        // plain text\n        if ( typeof item.value === 'string' ) {\n            $wrapper = document.createElement('div');\n            $wrapper.textContent = item.value;\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n        } else if ( item.value instanceof HTMLElement ) {\n            // HTML Element\n\n            // if with wrapper\n            if ( item.wrap ) {\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value);\n                this.$node.appendChild($wrapper);\n            } else {\n                // without wrapper\n                this.$node.appendChild(item.value);\n            }\n        } else if ( item.value instanceof Component ) {\n            // component\n            // force propagate events\n            item.value.propagate = true;\n\n            // set index to current component\n            item.value.index = this.children.length;\n\n            // change layout focus index if click component\n            item.value.addListener('click', componentClickHandler);\n\n            // append component\n            if ( item.wrap ) {\n                // with wrapper\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value.$node);\n                this.$node.appendChild($wrapper);\n                this.children.push(item.value);\n                item.value.parent = this;\n            } else {\n                // without wrapper\n                this.add(item.value);\n            }\n        } else {\n            $wrapper = document.createElement('div');\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n        }\n    }\n};\n\n\nmodule.exports = Layout;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component'),\n    keys      = require('stb-keys');\n\n\n/**\n * Scroll area implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} config object\n * @param {number} [config.step] step in % of screen height to scroll area\n */\nfunction ScrollArea ( config ) {\n\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    /**\n     * Step to scroll area in % of screen height\n     *\n     * @type {number}\n     */\n    this.step = 5;\n\n    /**\n     * Real height of scroll area\n     *\n     * @type {number}\n     */\n    this.realHeight = 0;\n\n    /**\n     * Visible height of area\n     *\n     * @type {number}\n     */\n    this.viewHeight = 0;\n\n    /**\n     * Top position of scroll container\n     *\n     * @type {number}\n     */\n    this.topPosition = 0;\n\n    /**\n     * Associated ScrollBar component link.\n     *\n     * @type {ScrollBar}\n     */\n    this.scroll = null;\n\n    Component.call(this, config);\n\n    this.$node.appendChild(this.$body);\n\n    // component setup\n    this.init(config);\n}\n\n\nScrollArea.prototype = Object.create(Component.prototype);\nScrollArea.prototype.constructor = ScrollArea;\n\n// set component name\nScrollArea.prototype.name = 'mag-component-scroll-area';\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nScrollArea.prototype.defaultEvents = {\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n                this.move(event.code);\n                break;\n        }\n    },\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n    }\n};\n\n\n/**\n * Attempt to go beyond the edge of the list.\n *\n * @event\n *\n * @type {Object}\n * @property {number} direction key code initiator of movement\n */\n\n\n/**\n * Move ScrollArea content\n *\n * @param {number} direction to move\n */\nScrollArea.prototype.move = function ( direction ) {\n    var height = screen.height,\n        delta  = this.viewHeight - this.realHeight;\n\n    // run logic only if it's reasonable to navigate\n    if ( delta < 0 ) {\n        switch ( direction ) {\n            case keys.down:\n                if ( this.topPosition - this.step * height / 100 < delta ) {\n                    this.scroll.scrollTo(-delta);\n                    this.$body.style.top = delta + 'px';\n                    this.emit('overflow', {direction: direction});\n\n                    return;\n                }\n\n                this.topPosition -= Math.ceil(this.step * height / 100);\n\n                if ( this.scroll ) {\n                    this.scroll.scrollTo(-this.topPosition);\n                }\n                this.$body.style.top = this.topPosition + 'px';\n                break;\n            case keys.up:\n                if ( this.topPosition + this.step * height / 100 > 0 ) {\n                    this.scroll.scrollTo(0);\n                    this.$body.style.top = '0px';\n                    this.emit('overflow', {direction: direction});\n\n                    return;\n                }\n                this.topPosition += Math.ceil(this.step * height / 100);\n\n                if ( this.scroll ) {\n                    this.scroll.scrollTo(-this.topPosition);\n                }\n                this.$body.style.top = this.topPosition + 'px';\n                break;\n        }\n    } else {\n        this.emit('overflow', {direction: direction});\n    }\n};\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nScrollArea.prototype.init = function ( config ) {\n\n    config = config || {};\n\n    this.realHeight = this.$body.offsetHeight;\n    this.viewHeight = this.$node.offsetHeight;\n    this.topPosition = 0;\n    this.$body.style.top = this.topPosition + 'px';\n\n    if ( config.scroll ) {\n        this.scroll = config.scroll;\n    }\n\n    if ( config.step ) {\n        this.step = config.step;\n    }\n\n    if ( this.scroll ) {\n        this.scroll.init({\n            realSize: this.realHeight,\n            viewSize: this.viewHeight,\n            value: this.topPosition\n        });\n    }\n};\n\nmodule.exports = ScrollArea;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar List             = require('mag-component-list'),\n    classChecked     = 'checked',\n    classIcon        = 'theme-icon theme-icon-radio',\n    classIconActive  = 'theme-icon theme-icon-radio-active';\n\n\n/**\n * Base radio list implementation\n *\n * @constructor\n * @extends List\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {string} [config.classIcon] icon default state class name\n * @param {string} [config.classIconActive] icon active state class name\n * @param {string} [config.classChecked] checked item class\n */\nfunction RadioList ( config ) {\n    var self = this;\n\n    if ( config.classIcon ) {\n        classIcon = config.classIcon;\n    }\n    if ( config.classIconActive ) {\n        classIconActive = config.classIconActive;\n    }\n    if ( config.classChecked ) {\n        classIcon = config.classChecked;\n    }\n\n    /**\n     * Checked item data\n     *\n     * @type {Element}\n     */\n    this.checkedData = null;\n\n    /**\n     * Checked element index\n     *\n     * @type {number}\n     */\n    this.checkedIndex = null;\n\n    List.call(this, config);\n\n    this.addListener('click:item', function ( event ) {\n        var $item = event.$item,\n            previousCheckedData = self.checkedData;\n\n        self.checkIndex($item.index);\n\n        if ( previousCheckedData !== $item.data ) {\n            /**\n             * Select element from list\n             *\n             * @event select\n             * @property {Element} $item object\n             */\n            self.emit('select', $item);\n        }\n    });\n}\n\n\nRadioList.prototype = Object.create(List.prototype);\nRadioList.prototype.constructor = RadioList;\n\n// set component name\nRadioList.prototype.name = 'mag-component-radio-list';\n\nRadioList.prototype.init = function ( config ) {\n    config = config || {};\n    List.prototype.init.call(this, config);\n};\n\n\n/**\n * Set data and render inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nRadioList.prototype.setData = function ( config ) {\n    List.prototype.setData.call(this, config);\n\n    this.defaultCheckedIndex = this.checkedIndex;\n\n    if ( this.$focusItem ) {\n        this.defaultFocusIndex = this.$focusItem.index;\n    } else {\n        this.defaultFocusIndex = 0;\n    }\n};\n\n\n/**\n * Reset data to default state and render inner structures and HTML.\n */\nRadioList.prototype.resetData = function () {\n    this.checkIndex(this.defaultCheckedIndex);\n    this.focusIndex(this.defaultFocusIndex);\n};\n\n\n/**\n * Set all states to false and render inner structures and HTML.\n *\n * @param {number} [focusIndex] focus index\n */\nRadioList.prototype.clearChecked = function ( focusIndex ) {\n    var index = 0;\n\n    for ( index; index < this.data.length; index++ ) {\n        this.data[index].state = false;\n    }\n\n    // no focusIndex, focusIndex may be 0\n    if ( !focusIndex && focusIndex !== 0 ) {\n        focusIndex = this.$focusItem ? this.$focusItem.index : 0;\n    }\n\n    this.setData({data: this.data, focusIndex: focusIndex});\n};\n\n\n/**\n * Default render function\n *\n * @param {Element} $item in list\n * @param {Object} data to render layout element\n * @param {string} [data.title] title of checkbox\n * @param {boolean} [data.state] state of checkbox: checked or not\n * @param {string} [data.value] special value of item\n */\nRadioList.prototype.renderItemDefault = function ( $item, data ) {\n    var table,\n        tr,\n        td,\n        check;\n\n    if ( $item.ready ) {\n        $item.$title.innerText = data.title || '';\n\n        if ( data.state ) {\n            $item.classList.add(classChecked);\n            $item.checkBox.className = classIconActive;\n        } else {\n            $item.classList.remove(classChecked);\n            $item.checkBox.className = classIcon;\n        }\n\n        $item.state = data.state;\n        $item.value = data.value;\n\n    } else {\n        $item.innerHTML = '';\n        table = document.createElement('table');\n        tr = document.createElement('tr');\n        td = document.createElement('td');\n        check = document.createElement('div');\n\n        if ( data.state ) {\n            $item.classList.add(classChecked);\n            check.className = classIconActive;\n        } else {\n            $item.classList.remove(classChecked);\n            check.className = classIcon;\n        }\n\n        table.appendChild(tr);\n        td.appendChild(check);\n\n        td.className = 'checkBoxWrapper';\n        tr.appendChild(td);\n\n        td = document.createElement('td');\n        td.className = 'title';\n        td.innerText = data.title || '';\n        tr.appendChild(td);\n\n        $item.checkBox = check;\n        $item.state = data.state;\n        $item.value = data.value;\n        $item.$title = td;\n\n        $item.appendChild(table);\n\n        if ( data.state ) {\n            this.checkedData = data;\n            this.checkedIndex = $item.index;\n        }\n\n        $item.ready = true;\n    }\n};\n\n\n/**\n * Check element by index\n *\n * @param {number} index of element to check\n */\nRadioList.prototype.checkIndex = function ( index ) {\n    var $node;\n\n    if ( DEVELOP ) {\n        if ( index >= this.data.length ) {\n            throw new Error(__filename + ': wrong index to check');\n        }\n    }\n\n    // do not need to do the same\n    if ( index === this.checkedIndex ) { return; }\n\n    if ( this.checkedIndex !== null && this.$node.children.length ) {\n        this.data[this.checkedIndex].state = false;\n        $node = this.getItemNodeByIndex(this.checkedIndex);\n        if ( $node ) {\n            $node.checkBox.className = classIcon;\n            $node.classList.remove(classChecked);\n        }\n    }\n\n    $node = this.getItemNodeByIndex(index);\n    if ( $node ) {\n        $node.checkBox.className = classIconActive;\n        $node.classList.add(classChecked);\n        $node.state = true;\n    }\n\n    this.data[index].state = true;\n    this.checkedData = this.data[index];\n    this.checkedIndex = index;\n};\n\n\n/**\n * Get list item node by item index\n *\n * @param {number} index of item to find node\n * @return {?Element} item node link\n */\nRadioList.prototype.getItemNodeByIndex = function ( index ) {\n    var children = this.$node.children;\n\n    index -= this.viewIndex;\n    if ( index < this.size && index >= 0 ) {\n        return children[index];\n    }\n\n    return null;\n};\n\nRadioList.prototype.renderItem = RadioList.prototype.renderItemDefault;\n\nmodule.exports = RadioList;\n","/**\n * Main application entry point.\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar app     = require('mag-app'),\n    gettext = require('spa-gettext');\n\n// main application events\napp.once('load', function () {\n    // load language first\n    gettext.load({name: window.core.environment.language}, function ( error ) {\n        if ( error ) {\n            debug.info('language load error');\n        }\n\n        // set pages\n        app.pages = {\n            info: require('./pages/info'),\n            more: require('./pages/more'),\n            add: require('./pages/add'),\n            main: require('./pages/main')\n        };\n\n        app.ready();\n    });\n});\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app    = require('spa-app/lib/core'),\n    events = require('spa-app/lib/events');\n\n\n// get instance\nwindow.core = window.parent.getCoreInstance(window, app);\n\n// shims\nrequire('stb-shim-classlist');\n\n// apply geometry\nrequire('stb-app/lib/metrics');\n\n// load sdk css\nrequire('stb-app/lib/css')('sdk');\n\n// load theme css\nrequire('./css');\n\n// load app css\nrequire('stb-app/lib/css')('app');\n\n/**\n * Specify platform name\n *\n * @type {string}\n */\napp.platform = 'mag';\n\n/**\n * Show app.\n */\napp.ready = function () {\n    // if ( this.events['show'] ) {\n    //     this.emit('show');\n    // }\n    window.core.call('app:ready');\n};\n\n\n/**\n * Exit from app.\n * Destroy all application instance.\n * If callback function provided, and callback returns boolean 'true', application will stay alive.\n *\n * @fires module:/stb/app#exit\n */\napp.exit = function () {\n    if ( app.events['exit'] ) {\n        app.emit('exit');\n    }\n\n    core.call('exit');\n};\n\n\nevents.load = function ( event ) {\n    //window.core = window.parent.getCoreInstanse(window, app);\n    document.body.setAttribute('platform', app.platform);\n\n    if ( core.ready ) {\n        if ( app.events['load'] ) {\n            // notify listeners\n            app.emit('load', {});\n        }\n    } else {\n        core.once('load', function () {\n            //core.ready = true;\n            if ( app.events[event.type] ) {\n                // notify listeners\n                app.emit(event.type, event);\n            }\n        });\n    }\n};\n\n\n// activate development mechanisms and tools\nif ( DEVELOP ) {\n    //require('stb-develop');\n    require('./develop/main');\n} else {\n    // disable context menu\n    events.contextmenu = function ( event ) {\n        event.preventDefault();\n    };\n}\n\n\n//apply DOM events\nObject.keys(events).forEach(function ( name ) {\n    window.addEventListener(name, events[name]);\n});\n\n\n// new way of string handling\n// all strings are in UTF-16\n// since stbapp 2.18\n// if ( window.gSTB && gSTB.SetNativeStringMode ) {\n//     /* eslint new-cap: 0 */\n//     gSTB.SetNativeStringMode(true);\n// }\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nmodule.exports = {\n    /**\n     * Parse the given location search string into object.\n     *\n     * @param {string} query string to parse\n     *\n     * @return {Object.<string, string>} result data\n     */\n    parse: function ( query ) {\n        var data = {};\n\n        // parse and fill the data\n        query.split('&').forEach(function ( part ) {\n            part = part.split('=');\n            // valid number on params\n            if ( part.length === 2 ) {\n                data[part[0]] = decodeURIComponent(part[1]);\n            }\n        });\n\n        return data;\n    },\n\n\n    /**\n     * Make uri query part in a string form.\n     *\n     * @param {Object} params data to stringify\n     *\n     * @return {string} query string\n     */\n    stringify: function ( params ) {\n        var data = [];\n\n        Object.keys(params).forEach(function ( name ) {\n            data.push(name + '=' + encodeURIComponent(params[name]));\n        });\n\n        return data.join('&');\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('./core');\n\n\n// public\nmodule.exports = {\n    DOMContentLoaded: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // there are some listeners\n        if ( app.events['dom'] ) {\n            // notify listeners\n            app.emit('dom', event);\n            //console.log('DOMContentLoaded');\n        }\n    },\n\n    /**\n     * The load event is fired when a resource and its dependent resources have finished loading.\n     *\n     * Control flow:\n     *   1. Global handler.\n     *   2. Each page handler.\n     *   3. Application DONE event.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/load\n     *\n     * @param {Event} event generated object with event data\n     */\n    load: function ( event ) {\n        //var path;\n\n        //debug.event(event);\n        //console.log(event);\n\n        // time mark\n        //app.data.time.load = event.timeStamp;\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' load', 'green');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n\n        // time mark\n        //app.data.time.done = +new Date();\n\n        // everything is ready\n        // and there are some listeners\n        // if ( app.events['done'] ) {\n        //     // notify listeners\n        //     app.emit('done', event);\n        // }\n    },\n\n    /**\n     * The unload event is fired when the document or a child resource is being unloaded.\n     *\n     * Control flow:\n     *   1. Each page handler.\n     *   2. Global handler.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/unload\n     *\n     * @param {Event} event generated object with event data\n     */\n    unload: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' unload', 'red');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n    },\n\n    /**\n     * The error event is fired when a resource failed to load.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/error\n     *\n     * @param {Event} event generated object with event data\n     */\n    error: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n        //debug.fail('app event: ' + event.message, event, {tags: [event.type, 'event']});\n        console.error('app event: ' + event.message, event);\n    },\n\n    /**\n     * The keydown event is fired when a key is pressed down.\n     * Set event.stop to true in order to prevent bubbling.\n     *\n     * Control flow:\n     *   1. Current active component on the active page.\n     *   2. Current active page itself.\n     *   3. Application.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keydown\n     *\n     * @param {Event} event generated object with event data\n     */\n    keydown: function ( event ) {\n        var page = app.activePage,\n            eventLocal = {\n                code: event.keyCode,\n                stop: false\n            },\n            activeComponent;\n\n        if ( DEVELOP ) {\n            if ( !page ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        // filter phantoms\n        //if ( event.keyCode === 0 ) { return; }\n\n        // combined key code\n        //event.code = event.keyCode;\n\n        // apply key modifiers\n        if ( event.ctrlKey )  { eventLocal.code += 'c'; }\n        if ( event.altKey )   { eventLocal.code += 'a'; }\n        if ( event.shiftKey ) { eventLocal.code += 's'; }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + eventLocal.code, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + eventLocal.code, event);\n\n        // page.activeComponent can be set to null in event handles\n        activeComponent = page.activeComponent;\n\n        // current component handler\n        if ( activeComponent && activeComponent !== page ) {\n            // component is available and not page itself\n            if ( activeComponent.events[event.type] ) {\n                // there are some listeners\n                activeComponent.emit(event.type, eventLocal, event);\n            }\n\n            // todo: bubble event recursively\n            // bubbling\n            if (\n                !eventLocal.stop &&\n                activeComponent.propagate &&\n                activeComponent.parent &&\n                activeComponent.parent.events[event.type]\n            ) {\n                activeComponent.parent.emit(event.type, eventLocal, event);\n            }\n        }\n\n        // page handler\n        if ( !eventLocal.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, eventLocal, event);\n            }\n\n            // global app handler\n            if ( !event.stop ) {\n                // not prevented\n                if ( app.events[event.type] ) {\n                    // there are some listeners\n                    app.emit(event.type, eventLocal, event);\n                }\n            }\n        }\n\n        //// suppress non-printable keys in stb device (not in your browser)\n        //if ( app.data.host && keyCodes[event.code] ) {\n        //    event.preventDefault();\n        //}\n    },\n\n    /**\n     * The keypress event is fired when press a printable character.\n     * Delivers the event only to activeComponent at active page.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keypress\n     *\n     * @param {Event} event generated object with event data\n     * @param {string} event.char entered character\n     */\n    keypress: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + event.key, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + event.key, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n    },\n\n    /**\n     * The click event is fired when a pointing device button (usually a mouse button) is pressed and released on a single element.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/click\n     *\n     * @param {Event} event generated object with event data\n     */\n    /*click: function ( event ) {\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n     },*/\n\n    /**\n     * The contextmenu event is fired when the right button of the mouse is clicked (before the context menu is displayed),\n     * or when the context menu key is pressed (in which case the context menu is displayed at the bottom left of the focused\n     * element, unless the element is a tree, in which case the context menu is displayed at the bottom left of the current row).\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/contextmenu\n     *\n     * @param {Event} event generated object with event data\n     */\n    // contextmenu: function ( event ) {\n    //     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n    //\n    //     if ( !DEVELOP ) {\n    //         // disable right click in release mode\n    //         event.preventDefault();\n    //     }\n    // },\n\n    /*contextmenu: function ( event ) {\n     //var kbEvent = {}; //Object.create(document.createEvent('KeyboardEvent'));\n\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n\n     //kbEvent.type    = 'keydown';\n     //kbEvent.keyCode = 8;\n\n     //debug.log(kbEvent.type);\n\n     //globalEventListenerKeydown(kbEvent);\n     //var event = document.createEvent('KeyboardEvent');\n     //event.initEvent('keydown', true, true);\n\n     //document.dispatchEvent(kbEvent);\n\n     if ( !DEVELOP ) {\n     // disable right click in release mode\n     event.preventDefault();\n     }\n     },*/\n\n    /**\n     * The wheel event is fired when a wheel button of a pointing device (usually a mouse) is rotated.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel\n     *\n     * @param {Event} event generated object with event data\n     */\n    mousewheel: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n\n        // page handler\n        if ( !event.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, event);\n            }\n        }\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint-disable */\n\n'use strict';\n\n\nif ( !document.documentElement.classList ) {\n    var prototype = Array.prototype,\n        indexOf   = prototype.indexOf,\n        slice     = prototype.slice,\n        push      = prototype.push,\n        splice    = prototype.splice,\n        join      = prototype.join;\n\n    window.DOMTokenList = function ( el ) {\n        this._element = el;\n        if (el.className !== this._classCache) {\n            this._classCache = el.className;\n            if (!this._classCache) { return; }\n            var classes = this._classCache.replace(/^\\s+|\\s+$/g,'').split(/\\s+/),\n                i;\n            for (i = 0; i < classes.length; i++) {\n                push.call(this, classes[i]);\n            }\n        }\n    };\n\n    window.DOMTokenList.prototype = {\n        add: function ( token ) {\n            if(this.contains(token)) { return; }\n            push.call(this, token);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        contains: function ( token ) {\n            return indexOf.call(this, token) !== -1;\n        },\n\n        item: function ( index ) {\n            return this[index] || null;\n        },\n\n        remove: function ( token ) {\n            var i = indexOf.call(this, token);\n            if (i === -1) {\n                return;\n            }\n            splice.call(this, i, 1);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        toString: function () {\n            return join.call(this, ' ');\n        },\n\n        toggle: function ( token ) {\n            if (!this.contains(token)) {\n                this.add(token);\n            } else {\n                this.remove(token);\n            }\n            return this.contains(token);\n        }\n    };\n\n    Object.defineProperty(Element.prototype, 'classList', {\n        get: function () {\n            return new window.DOMTokenList(this);\n        }\n    });\n}\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    metrics = require('app:metrics');\n\n\n// global link\napp.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\napp.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\napp.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n\n// public\n//module.exports = app;\n","/**\n * Application geometry options.\n * Automatically loaded on application initialization and available as app.metrics.\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    480: {\n        // screen base dimension\n        height: 480,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  32,\n        availLeft:   48\n        // project-specific vars\n        // put here ...\n    },\n\n    576: {\n        // screen base dimension\n        height: 576,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  26,\n        availLeft:   54\n        // project-specific vars\n        // put here ...\n    },\n\n    720: {\n        // screen base dimension\n        height: 720,\n        width:  1280,\n        // safe zone margins\n        availTop:    30,\n        availBottom: 30,\n        availRight:  40,\n        availLeft:   40\n        // project-specific vars\n        // put here ...\n    },\n\n    1080: {\n        // screen base dimension\n        height: 1080,\n        width:  1920,\n        // safe zone margins\n        availTop:    45,\n        availBottom: 45,\n        availRight:  60,\n        availLeft:   60\n        // project-specific vars\n        // put here ...\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core'),\n    //metrics = require('app:metrics'),\n    linkCSS;\n\n\n//window.core = window.parent.getCoreInstance(window, app);\n\n\nlinkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = window.core.theme.path + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);\n\n\n// public\nmodule.exports = linkCSS;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    Gettext = require('cjs-gettext'),\n    loader  = new Emitter();\n\n\n/**\n * Wrap the given data with gettext instance\n * and export methods to the global scope.\n *\n * @param {Object} [data] localization data\n *\n * @return {Gettext} gettext instance\n */\nfunction prepare ( data ) {\n    var gettext = new Gettext(data);\n\n    // make it global\n    window.gettext  = window._ = gettext.gettext;\n    window.pgettext = gettext.pgettext;\n    window.ngettext = gettext.ngettext;\n\n    return gettext;\n}\n\n\n/**\n * Main application language\n */\nloader.defaultLanguage = 'en';\n\n\n/**\n * Simple gettext implementation.\n *\n * @param {Object} config options\n * @param {string} [config.path=lang] relative path to project root\n * @param {string} config.name language name\n * @param {string} [config.ext=json] language file extension\n * @param {function} callback hook on ready\n *\n * @return {boolean} flag is ajax request was made\n */\nloader.load = function ( config, callback ) {\n    var xhr;\n\n    if ( DEVELOP ) {\n        if ( !config.name || typeof config.name !== 'string' ) {\n            throw new Error(__filename + ': config.name must be a nonempty string');\n        }\n        if ( typeof callback !== 'function' ) {\n            throw new Error(__filename + ': wrong callback type');\n        }\n    }\n\n    // defaults\n    config.ext  = config.ext  || 'json';\n    config.path = config.path || 'lang';\n\n    // is it necessary to request a localization file?\n    if ( config.name === loader.defaultLanguage ) {\n        // no\n        prepare();\n        callback(null);\n\n        return false;\n    }\n\n    // yes\n    xhr = new XMLHttpRequest();\n\n    xhr.onload = function () {\n        var json;\n\n        try {\n            json = JSON.parse(xhr.responseText);\n\n            prepare(json);\n            callback(null);\n\n            // there are some listeners\n            if ( loader.events['load'] ) {\n                // notify listeners\n                loader.emit('load');\n            }\n        } catch ( error ) {\n            xhr.onerror(error);\n        }\n    };\n\n    xhr.ontimeout = xhr.onerror = function ( error ) {\n        prepare();\n        callback(error);\n\n        // there are some listeners\n        if ( loader.events['error'] ) {\n            // notify listeners\n            loader.emit('error', error);\n        }\n    };\n\n    xhr.open('GET', config.path + '/' + config.name + '.' + config.ext, true);\n    xhr.send(null);\n\n    return true;\n};\n\n\n// public\nmodule.exports = loader;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Translations handler.\n *\n * @constructor\n *\n * @param {Object} config init parameters\n */\nfunction Gettext ( config ) {\n    var data, meta;\n\n    // sanitize\n    config   = config || {};\n    data     = config.data || {};\n    data[''] = data[''] || {};\n\n    // shortcut\n    meta = config.meta;\n\n    /**\n     * Display the native language translation of a textual message.\n     *\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.gettext = function ( msgId ) {\n        return data[''][msgId] || msgId;\n    };\n\n\n    /**\n     * The \"p\" in \"pgettext\" stands for \"particular\": fetches a particular translation of the textual message.\n     *\n     * @param {string} context message context\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.pgettext = function ( context, msgId ) {\n        return data[context] && data[context][msgId] || msgId;\n    };\n\n\n    /**\n     * Display the native language translation of a textual message whose grammatical form depends on a number.\n     *\n     * @param {string} msgId textual message in a singular form\n     * @param {string} plural textual message in a plural form\n     * @param {number} value message number\n     *\n     * @return {string} translated text\n     */\n    this.ngettext = function ( msgId, plural, value ) {\n        /* eslint no-unused-vars: 0 */\n        /* eslint no-eval: 0 */\n        /* eslint id-length: 0 */\n        var n, evalResult;\n\n        if ( DEVELOP ) {\n            if ( Number(value) !== value ) {\n                throw new Error(__filename + ': value must be a number');\n            }\n        }\n\n        if ( data && meta && data[''][msgId] ) {\n            evalResult = eval('n = ' + value + '; ' + meta.plural);\n\n            if ( typeof evalResult === 'boolean' ) {\n                evalResult = +evalResult;\n            }\n\n            // translation\n            return data[''][msgId][evalResult];\n        }\n\n        // english\n        return value === 1 ? msgId : plural;\n    };\n}\n\n\n// correct constructor name\nGettext.prototype.constructor = Gettext;\n\n\n// public\nmodule.exports = Gettext;\n","/**\n * Main page implementation.\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar id            = 'pageInfo',\n    Page          = require('stb-component-page'),\n    app           = require('mag-app'),\n    page          = new Page({$node: document.getElementById(id)}),\n    PanelSet      = require('mag-component-panel-set'),\n    PanelExtended = require('mag-component-panel'),\n    LayoutList    = require('mag-component-layout-list'),\n    Button        = require('stb-component-button'),\n    Flicker       = require('spa-component-flicker'),\n    keys          = require('stb-keys'),\n    tools         = require('../modules/tools'),\n    statuses      = [\n        gettext('Paused'),\n        gettext('Waiting'),\n        gettext('Running'),\n        gettext('Completed'),\n        gettext('Error'),\n        gettext('Error')\n    ];\n\n\npage.clock = new Flicker({\n    className: 'clock',\n    interval: 1000,\n    render: function ( $item ) {\n        var time  = new Date(),\n            hours = time.getHours(),\n            mins  = time.getMinutes();\n\n        $item.innerText = (hours > 9 ? hours : '0' + hours) + ':' + (mins > 9 ? mins : '0' + mins);\n    }\n});\npage.add(page.clock);\npage.clock.start();\n\n// details panel\npage.panelDetails = new PanelExtended({\n    title: gettext('About download'),\n    main: true,\n    visible: true,\n    className: 'panelDetails',\n    children: []\n});\n\npage.panelDetails.reset = function () {\n    page.panelDetails.list.init({\n        focusIndex: 0,\n        data: [\n            {\n                items: [\n                    {className: 'item name theme-subhead-color', value: gettext('URL:')},\n                    {className: 'item text', value: page.initData.url}\n                ]\n            },\n            {\n                items: [\n                    {className: 'item name theme-subhead-color', value: gettext('File name:')},\n                    {className: 'item text', value: decodeURIComponent(page.initData.name)}\n                ]\n            },\n            {\n                items: [\n                    {className: 'item name theme-subhead-color', value: gettext('Size:')},\n                    {className: 'item text', value: tools.convert(page.initData.size)}\n                ]\n            },\n            {\n                items: [\n                    {className: 'item name theme-subhead-color', value: gettext('Device:')},\n                    {\n                        className: 'item text',\n                        value: page.initData.storage ? page.initData.storage.label : gettext('Not connected')\n                    }\n                ]\n            },\n            {\n                items: [\n                    {className: 'item name theme-subhead-color', value: gettext('Status:')},\n                    {className: 'item text', value: statuses[page.initData.state]}\n                ]\n            }\n        ]\n    });\n    page.panelDetails.$node.classList.add('disabled');\n    page.panelDetails.focus();\n    if ( page.panelDetails.list.$focusItem ) {\n        page.panelDetails.list.$focusItem.classList.remove('focus');\n    }\n    page.panelDetails.button.focus();\n};\n\npage.panelDetails.add(page.panelDetails.list = new LayoutList({\n    focusIndex: 0,\n    size: 5,\n    events: {\n        overflow: function () {\n            page.panelDetails.list.$focusItem.classList.remove('focus');\n            page.panelDetails.button.focus();\n        },\n        'click:item': function ( data ) {\n            if ( page.panelDetails.list.$focusItem ) {\n                app.route(app.pages.more, data);\n            }\n        },\n        keydown: function ( event ) {\n            LayoutList.prototype.defaultEvents.keydown.call(this, event);\n        }\n    },\n    data: [\n        {items: [{className: 'item name', value: gettext('URL:')}, {className: 'item text', value: ''}]},\n        {items: [{className: 'item name', value: gettext('File name:')}, {className: 'item text', value: ''}]},\n        {items: [{className: 'item name', value: gettext('Size:')}, {className: 'item text', value: ''}]},\n        {items: [{className: 'item name', value: gettext('Device:')}, {className: 'item text', value: ''}]},\n        {items: [{className: 'item name', value: gettext('Status:')}, {className: 'item text', value: ''}]}\n    ]\n}));\n\npage.panelDetails.add(page.panelDetails.button = new Button({\n    value: gettext('Close'),\n    className: 'bottom theme-footer',\n    $node: page.panelDetails.$node.appendChild(document.createElement('div')),\n    events: {\n        click: function () {\n            app.route(app.pages.main);\n        },\n        keydown: function ( event ) {\n            if ( event.code === keys.up ) {\n                page.panelDetails.list.focus();\n                // restore taken focus class\n                page.panelDetails.list.$focusItem.classList.add('focus');\n                page.panelDetails.list.focusIndex(page.panelDetails.list.data.length - 1);\n            } else if ( event.code === keys.down ) {\n                page.panelDetails.list.focus();\n                // restore taken focus class\n                page.panelDetails.list.$focusItem.classList.add('focus');\n                page.panelDetails.list.focusIndex(0);\n            } else if ( event.code === keys.ok && page.panelDetails.button.events['click'] ) {\n                page.panelDetails.button.emit('click', {event: event});\n            }\n        }\n    }\n}));\n\n// panel set: download details\npage.panelSet = new PanelSet({\n    visible: false,\n    $node: document.getElementById('panelSetInfo'),\n    focusIndex: 0,\n    panels: [page.panelDetails]\n});\npage.add(page.panelSet);\n\n\npage.addListener('keydown', function ( event ) {\n    switch ( event.code ) {\n        case keys.back:\n            app.route(app.pages.main);\n            break;\n    }\n});\n\npage.addListener('show', function ( data ) {\n    page.panelSet.show();\n    if ( data && data.data && data.data.data ) {\n        page.initData = data.data.data.items[1].download.data;\n        page.panelDetails.reset();\n    }\n});\n\n\n// public\nmodule.exports = page;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base page implementation.\n *\n * A full-screen top-level layer that can operate as an independent separate entity.\n * It is added to the document body on creation if not already linked.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n *\n * @example\n * var Page = require('stb/ui/page'),\n *     page = new Page({\n *         $node: document.getElementById(id)\n *     });\n *\n * page.addListener('show', function show () {\n *     // page is visible now\n * });\n */\nfunction Page ( config ) {\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    /**\n     * Page visibility/active state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.active = false;\n\n    /**\n     * Link to the currently active component with focus.\n     *\n     * @readonly\n     * @type {Component}\n     */\n    this.activeComponent = null;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'page ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // state flag\n    this.active = this.$node.classList.contains('active');\n\n    // correct DOM parent/child connection if necessary\n    if ( this.$node.parentNode === null ) {\n        document.body.appendChild(this.$node);\n    }\n\n    // always itself\n    this.page = this;\n}\n\n\n// inheritance\nPage.prototype = Object.create(Component.prototype);\nPage.prototype.constructor = Page;\n\n// set component name\nPage.prototype.name = 'spa-component-page';\n\n\n// public\nmodule.exports = Page;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component'),\n    keys      = require('spa-keys');\n\n\n/**\n * Base button implementation.\n *\n * Has global options:\n *     Button.prototype.clickDuration - time to apply \"click\" class, does not apply if 0\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {string} [config.value] button caption text (generated if not set)\n * @param {string} [config.icon] button icon name\n *\n * @example\n * var Button = require('stb/ui/button'),\n *     btnSimple, btnIcon, btnDetached;\n *\n * btnSimple = new Button({\n *     $node: document.getElementById('btnSimple'),\n *     value: 'Simple button'\n * });\n *\n * btnIcon = new Button({\n *     $node: document.getElementById('btnIcon'),\n *     icon: 'menu'\n *     value: 'Button with icon'\n * });\n *\n * btnDetached = new Button({\n *     value: 'Button not added to the page',\n *     className: 'wide'\n * });\n */\nfunction Button ( config ) {\n    // current execution context\n    //var self = this;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.icon && typeof config.icon !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.icon');\n        }\n        if ( config.value && typeof config.value !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.value');\n        }\n    }\n\n    //config.name = 'spa-component-button' + (config.className || '');\n\n    // set default className if classList property empty or undefined\n    //config.className = this.name + ' ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // optional dom\n    if ( config.icon ) {\n        // insert icon\n        this.$icon = this.$body.appendChild(document.createElement('div'));\n        this.$icon.className = 'icon ' + config.icon;\n    }\n\n    // insert caption placeholder\n    this.$text = this.$body.appendChild(document.createElement('div'));\n    this.$text.classList.add('text');\n\n    if ( config.value ) {\n        // fill it\n        this.$text.innerText = config.value;\n    }\n}\n\n\n// inheritance\nButton.prototype = Object.create(Component.prototype);\nButton.prototype.constructor = Button;\n\n// set component name\nButton.prototype.name = 'spa-component-button';\n\n\n// time to apply \"click\" class, does not apply if 0\nButton.prototype.clickDuration = 200;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nButton.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse click events.\n     */\n    click: function () {\n        // current execution context\n        var self = this;\n\n        this.$node.classList.add('click');\n\n        setTimeout(function () {\n            self.$node.classList.remove('click');\n        }, this.clickDuration);\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        if ( event.code === keys.enter ) {\n            // emulate click\n            // there are some listeners\n            if ( this.events['click'] ) {\n                /**\n                 * Mouse click event emulation.\n                 *\n                 * @event module:stb/ui/button~Button#click\n                 *\n                 * @type {Object}\n                 * @property {Event} event click event data\n                 */\n                this.emit('click', {event: event});\n            }\n        }\n    }\n};\n\n\n// public\nmodule.exports = Button;\n","/**\n * Main page implementation.\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar id            = 'pageMore',\n    app           = require('mag-app'),\n    Page          = require('stb-component-page'),\n    page          = new Page({$node: document.getElementById(id)}),\n    ScrollArea    = require('mag-component-scroll-area'),\n    Scroll        = require('stb-component-scrollbar'),\n    PanelSet      = require('mag-component-panel-set'),\n    PanelExtended = require('mag-component-panel'),\n    Button        = require('stb-component-button'),\n    Flicker       = require('spa-component-flicker'),\n    keys          = require('stb-keys');\n\n\npage.clock = new Flicker({\n    className: 'clock',\n    interval: 1000,\n    render: function ( $item ) {\n        var time  = new Date(),\n            hours = time.getHours(),\n            mins  = time.getMinutes();\n\n        $item.innerText = (hours > 9 ? hours : '0' + hours) + ':' + (mins > 9 ? mins : '0' + mins);\n    }\n});\npage.add(page.clock);\npage.clock.start();\n\npage.panelDetails = new PanelExtended({\n    main: true, visible: true, className: 'panelDetails', children: [], title: '_'\n});\npage.panelDetails.reset = function ( data ) {\n    page.panelDetails.$title.$node.innerText = data.title;\n    page.panelDetails.scroll.init({value: 0});\n    page.panelDetails.area.$body.innerText = data.value;\n    page.panelDetails.area.$body.style.top = '0px';\n    page.panelDetails.area.init();\n    page.panelDetails.focus();\n    if ( page.panelDetails.scroll.viewSize < page.panelDetails.scroll.realSize ) {\n        page.panelDetails.area.focus();\n    } else {\n        page.panelDetails.button.focus();\n    }\n};\n\npage.panelDetails.button = new Button({\n    value: gettext('Close'),\n    className: 'bottom theme-footer',\n    $node: page.panelDetails.$node.appendChild(document.createElement('div')),\n    events: {\n        click: function () {\n            app.route(app.pages.info);\n        },\n        keydown: function ( event ) {\n            if ( event.code === keys.up && page.panelDetails.scroll.viewSize < page.panelDetails.scroll.realSize ) {\n                page.panelDetails.area.focus();\n            } else if ( event.code === keys.ok && page.panelDetails.button.events['click'] ) {\n                page.panelDetails.button.emit('click', {event: event});\n            }\n        }\n    }\n});\npage.panelDetails.add(page.panelDetails.button);\n\npage.panelDetails.scroll = new Scroll({});\npage.panelDetails.area = new ScrollArea({\n    visible: true,\n    scroll: page.panelDetails.scroll,\n    events: {\n        overflow: function ( data ) {\n            if ( data.direction === keys.down ) {\n                page.panelDetails.area.blur();\n                page.panelDetails.button.focus();\n            }\n        }\n    }\n});\npage.panelDetails.add(page.panelDetails.area, page.panelDetails.scroll);\n\n// panel set: download details\npage.panelSet = new PanelSet({\n    visible: false,\n    $node: document.getElementById('panelSetMore'),\n    focusIndex: 0,\n    panels: [page.panelDetails]\n});\npage.add(page.panelSet);\n\npage.addListener('keydown', function ( event ) {\n    switch ( event.code ) {\n        case keys.back:\n            app.route(app.pages.info);\n            break;\n    }\n});\n\npage.addListener('show', function ( data ) {\n    page.panelSet.show();\n    page.panelDetails.reset({\n        title: data.data.$item.data.items[0].value,\n        value: data.data.$item.data.items[1].value\n    });\n});\n\n\n// public\nmodule.exports = page;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base scroll bar implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {number} [config.value=0] initial thumb position\n * @param {number} [config.realSize=100] actual scroll size\n * @param {number} [config.viewSize=10] visible area size\n * @param {number} [config.type] direction\n *\n * @example\n * var ScrollBar = require('stb/ui/scroll.bar'),\n *     scrollBar = new ScrollBar({\n *         viewSize: 5,\n *         realSize: 25,\n *         events: {\n *             done: function () {\n *                 debug.log('ScrollBar: done');\n *             },\n *             change: function ( data ) {\n *                 debug.log('ScrollBar: change to ' + data.curr + ' from ' + data.prev);\n *             }\n *         }\n *     });\n */\nfunction ScrollBar ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Visible area size.\n     *\n     * @type {number}\n     */\n    this.viewSize = 10;\n\n    /**\n     * Scroll area actual height or width (if scroll is horizontal).\n     *\n     * @type {number}\n     */\n    this.realSize = 100;\n\n    /**\n     * Scroll thumb position.\n     *\n     * @type {number}\n     */\n    this.value = 0;\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Geometry of the scroll thumb element.\n     *\n     * @type {ClientRect}\n     */\n    this.thumbRect = null;\n\n    /**\n     * Geometry of the scroll track element.\n     *\n     * @type {ClientRect}\n     */\n    this.trackRect = null;\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'scrollBar ' + (config.className || '');\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // insert thumb line\n    this.$thumb = this.$body.appendChild(document.createElement('div'));\n\n    // correct CSS class name\n    this.$thumb.className = 'thumb';\n\n    // component setup\n    this.init(config);\n}\n\n\n// inheritance\nScrollBar.prototype = Object.create(Component.prototype);\nScrollBar.prototype.constructor = ScrollBar;\n\n// set component name\nScrollBar.prototype.name = 'spa-component-scrollbar';\n\nScrollBar.prototype.TYPE_VERTICAL   = 1;\nScrollBar.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Init or re-init realSize/viewSize/value parameters.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nScrollBar.prototype.init = function ( config ) {\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // set actual scroll size\n    if ( config.realSize !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.realSize) !== config.realSize ) {\n                throw new Error(__filename + ': config.realSize value must be a number');\n            }\n        }\n\n        // apply\n        this.realSize = config.realSize;\n    }\n\n    // set visible area size\n    if ( config.viewSize !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.viewSize) !== config.viewSize ) {\n                throw new Error(__filename + ': config.viewSize value must be a number');\n            }\n            if ( config.viewSize < 0 ) {\n                throw new Error(__filename + ': config.viewSize value must be greater than 0');\n            }\n        }\n\n        // apply\n        this.viewSize = config.viewSize;\n    }\n\n    // show or hide thumb\n    if ( this.viewSize >= this.realSize ) {\n        this.$thumb.classList.add('hidden');\n    } else {\n        this.$thumb.classList.remove('hidden');\n    }\n\n    // set thumb position\n    if ( config.value !== undefined ) {\n        // apply\n        this.scrollTo(config.value);\n    }\n\n    // set thumb size\n    if ( this.type === this.TYPE_VERTICAL ) {\n        this.$thumb.style.height = (this.viewSize / this.realSize * 100) + '%';\n    } else {\n        this.$thumb.style.width = (this.viewSize / this.realSize * 100) + '%';\n    }\n\n    // geometry\n    this.thumbRect = this.$thumb.getBoundingClientRect();\n    this.trackRect = this.$node.getBoundingClientRect();\n};\n\n\n/**\n * Set position of the given value.\n * Does nothing in case when scroll is in the end and passed value is more than scroll bar length.\n *\n * @param {number} value new value to set\n * @return {boolean} operation result\n *\n * @fires module:stb/ui/scroll.bar~ScrollBar#done\n * @fires module:stb/ui/scroll.bar~ScrollBar#change\n */\nScrollBar.prototype.scrollTo = function ( value ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(value) !== value ) {\n            throw new Error(__filename + ': value must be a number');\n        }\n        if ( this.realSize > this.viewSize && value > this.realSize - this.viewSize ) {\n            throw new Error(__filename + ': value is greater than this.realSize-this.viewSize');\n        }\n        if ( value < 0 ) {\n            throw new Error(__filename + ': value is less then 0');\n        }\n    }\n\n    // value has changed\n    if ( this.value !== value ) {\n        // track and thumb geometry was not set\n        if ( this.thumbRect.height === 0 || this.thumbRect.width === 0 ) {\n            // apply\n            this.trackRect = this.$node.getBoundingClientRect();\n            this.thumbRect = this.$thumb.getBoundingClientRect();\n        }\n\n        // set scroll bar width\n        if ( this.type === this.TYPE_VERTICAL ) {\n            this.$thumb.style.marginTop = ((this.trackRect.height - this.thumbRect.height) * value / (this.realSize - this.viewSize)) + 'px';\n        } else {\n            this.$thumb.style.marginLeft = ((this.trackRect.width - this.thumbRect.width) * value / (this.realSize - this.viewSize)) + 'px';\n        }\n\n        // there are some listeners\n        if ( this.events['change'] ) {\n            /**\n             * Update scroll value.\n             *\n             * @event module:stb/ui/scroll.bar~ScrollBar#change\n             *\n             * @type {Object}\n             * @property {number} prev old/previous scroll value\n             * @property {number} curr new/current scroll value\n             */\n            this.emit('change', {curr: value, prev: this.value});\n        }\n\n        // is it the end?\n        if ( value >= this.realSize ) {\n            value = this.realSize;\n\n            // there are some listeners\n            if ( this.events['done'] ) {\n                /**\n                 * Set scroll to its maximum value.\n                 *\n                 * @event module:stb/ui/scroll.bar~ScrollBar#done\n                 */\n                this.emit('done');\n            }\n        }\n\n        // set new value\n        this.value = value;\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = ScrollBar;\n","/**\n * Main page implementation.\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar id              = 'pageAdd',\n    app             = require('mag-app'),\n    appConf         = require('../config'),\n    Page            = require('stb-component-page'),\n    page            = new Page({$node: document.getElementById(id)}),\n    dom             = require('spa-dom'),\n    PanelSet        = require('mag-component-panel-set'),\n    PanelExtended   = require('mag-component-panel'),\n    LayoutList      = require('mag-component-layout-list'),\n    ModalMessage    = require('mag-component-modal'),\n    RadioList       = require('mag-component-radio-list'),\n    Button          = require('stb-component-button'),\n    Flicker         = require('spa-component-flicker'),\n    keys            = require('stb-keys'),\n    tools           = require('../modules/tools'),\n    downloadManager = window.core.plugins.downloadManager;\n\n\npage.clock = new Flicker({\n    className: 'clock',\n    interval: 1000,\n    render: function ( $item ) {\n        var time  = new Date(),\n            hours = time.getHours(),\n            mins  = time.getMinutes();\n\n        $item.innerText = (hours > 9 ? hours : '0' + hours) + ':' + (mins > 9 ? mins : '0' + mins);\n    }\n});\npage.add(page.clock);\npage.clock.start();\n\n// modal message: select device\npage.modalSelectDevice = new ModalMessage({\n    title: gettext('devices'),\n    className: 'modalSelectDevice',\n    visible: false,\n    events: {\n        show: function () {\n            var body = [],\n                index;\n\n            for ( index = 0; index < appConf.storages.length; index++ ) {\n                body.push({state: !index, title: appConf.storages[index].label, value: appConf.storages[index]});\n            }\n            this.children[0].init({data: body, size: body.length, focusIndex: 0});\n            this.focus();\n        },\n        hide: function () {\n            page.panelSet.focus();\n        }\n    },\n    children: [\n        new RadioList({\n            cycle: true,\n            focusIndex: 0,\n            size: 3,\n            data: [],\n            propagate: true,\n            events: {\n                'click:item': function ( event ) {\n                    page.modalSelectDevice.hide();\n                    page.reset({storage: event.$item.data.value});\n                }\n            }\n        })\n    ]\n});\npage.add(page.modalSelectDevice);\n\n\n// panel: add new download\npage.panelAdd = new PanelExtended({\n    title: gettext('new download'),\n    main: true,\n    visible: true,\n    className: 'panelAdd'\n});\n\npage.panelAdd.add(page.panelAdd.list = new LayoutList({\n    focusIndex: 0,\n    size: 2,\n    events: {\n        overflow: function () {\n            page.panelAdd.list.$focusItem.classList.remove('focus');\n            page.panelAdd.button.focus();\n        },\n        keydown: function ( event ) {\n            LayoutList.prototype.defaultEvents.keydown.call(this, event);\n        }\n    },\n    data: [\n        {\n            items: [\n                {className: 'item name theme-subhead-color', value: gettext('URL:')},\n                page.panelAdd.input = dom.tag('div', {className: 'item text'}),\n                {className: 'item placeholder theme-item-editable', value: ''}\n            ],\n            click: function () {\n                window.core.intent({\n                    action: 'keyboard',\n                    data: {\n                        type: 'text',\n                        mode: 'qwerty',\n                        title: gettext('ENTER URL'),\n                        description: gettext('DOWNLOADS'),\n                        value: page.panelAdd.input.innerText\n                    },\n                    events: {\n                        done: function ( event ) {\n                            page.panelAdd.input.innerText = event.value;\n                        }\n                    }\n                }, function ( error ) {\n                    console.log(error);\n                });\n            }\n        }, {\n            items: [\n                {className: 'item name theme-subhead-color', value: gettext('Device:')},\n                {className: 'item text', value: gettext('Connect device')},\n                {className: 'item placeholder theme-item-more', value: ''}\n            ],\n            click: function () {\n                if ( appConf.storages.length ) {\n                    page.panelSet.blur();\n                    page.modalSelectDevice.show();\n                    page.panelSet.visible = false;\n                }\n            }\n        }\n    ]\n}));\n\npage.panelAdd.add(page.panelAdd.button = new Button({\n    value: gettext('Create'),\n    className: 'bottom theme-footer',\n    $node: page.panelAdd.$node.appendChild(document.createElement('div')),\n    events: {\n        click: function () {\n            if ( page.panelAdd.currStorage ) {\n                tools.checkSize(page.panelAdd.input.innerText, function ( length ) {\n                    var fileName;\n\n                    if ( length > page.panelAdd.currStorage.freeSize ) {\n                        window.core.notify({\n                            title: gettext('Not enough free space in storage') + ' ' + gettext('File size:') +\n                            ' ' + tools.convert(length || 0) + gettext('Free space:') + ' ' +\n                            tools.convert(page.panelAdd.currStorage ? page.panelAdd.currStorage.freeSize : 0),\n                            icon: 'alert',\n                            type: 'warning'\n                        });\n                    } else if ( page.panelAdd.currStorage ) {\n                        //console.log('url:' + page.panelAdd.input.innerText);\n                        //console.log('click->start ' + (page.panelAdd.currStorage ? (page.panelAdd.currStorage.mountPath\n                        //   + '/' + page.panelAdd.input.innerText.split('/').pop()) : ''));\n                        if ( app.intent && app.intent.data && app.intent.data.title ) {\n                            fileName = page.panelAdd.currStorage.mountPath + '/' + app.intent.data.title;\n                        } else {\n                            fileName = page.panelAdd.currStorage.mountPath + '/' + page.panelAdd.input.innerText.split('/').pop();\n                        }\n                        downloadManager.add({\n                            url: page.panelAdd.input.innerText,\n                            name: fileName\n                        }, function ( error ) {\n                            if ( error ) {\n                                window.core.notify({title: error.message, icon: 'alert', type: 'warning'});\n                            } else {\n                                if ( app.intent && app.intent.close ) {\n                                    app.intent.close();\n                                    app.intent = null;\n                                }\n                                app.route(app.pages.main);\n                            }\n                        });\n                    }\n                });\n            }\n        },\n        keydown: function ( event ) {\n            if ( event.code === keys.up ) {\n                page.panelAdd.list.$focusItem.classList.add('focus');\n                page.panelAdd.list.focus();\n                page.panelAdd.list.focusIndex(page.panelAdd.list.data.length - 1);\n            } else if ( event.code === keys.down ) {\n                page.panelAdd.list.$focusItem.classList.add('focus');\n                page.panelAdd.list.focus();\n                page.panelAdd.list.focusIndex(0);\n            } else if ( event.code === keys.ok ) {\n                if ( page.panelAdd.button.events['click'] ) {\n                    page.panelAdd.button.emit('click', {event: event});\n                }\n            }\n        }\n    }\n}));\n\n// panel set: add download\npage.panelSet = new PanelSet({\n    visible: true,\n    $node: document.getElementById('panelSetAdd'),\n    focusIndex: 0,\n    panels: [page.panelAdd]\n});\npage.add(page.panelSet);\n\npage.reset = function ( config ) {\n    var text, free, all;\n\n    if ( config && config.storage ) {\n        free = gettext('Free space:') + ' ' + tools.convert(config.storage.freeSize);\n        all = tools.convert(config.storage.size);\n        text = '<div class=\"itemHalf\">' + config.storage.label + '</div><div class=\"itemHalf\">' + free + gettext(' of ') + all + '</div>';\n        page.panelAdd.currStorage = config.storage;\n    } else if ( appConf.storages.length ) {\n        free = gettext('Free space:') + ' ' + tools.convert(appConf.storages[0].freeSize);\n        all = tools.convert(appConf.storages[0].size);\n        text = '<div class=\"itemHalf\">' + appConf.storages[0].label + '</div><div class=\"itemHalf\">' + free + gettext(' of ') + all + '</div>';\n        page.panelAdd.currStorage = appConf.storages[0];\n    } else {\n        text = gettext('Connect device');\n        page.panelAdd.currStorage = null;\n    }\n\n    if ( app.intent ) {\n        page.panelAdd.input.innerText = app.intent.data.uri;\n    }\n\n    page.panelAdd.list.$body.children[1].children[0].children[1].innerHTML = text ? text : '';\n    page.panelAdd.list.$focusItem.classList.add('focus');\n    page.panelAdd.list.focus();\n};\n\npage.addListener('keydown', function ( event ) {\n    switch ( event.code ) {\n        case keys.back:\n            if ( app.intent && app.intent.close ) {\n                app.intent.close();\n                app.intent = null;\n                app.route(app.pages.main);\n            } else {\n                app.route(app.pages.main);\n            }\n            break;\n    }\n});\n\npage.addListener('show', function () {\n    page.panelAdd.input.innerText = '';\n    page.reset();\n    page.panelSet.focus();\n});\n\n\n// public\nmodule.exports = page;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-modal');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-modal';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base modal window implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n */\nfunction Modal ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body ) {\n            throw new Error(__filename + ': config.$body should not be provided manually');\n        }\n    }\n\n    // create centered div\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // add table-cell wrapper\n    this.$node.appendChild(document.createElement('div').appendChild(this.$body).parentNode);\n}\n\n\n// inheritance\nModal.prototype = Object.create(Component.prototype);\nModal.prototype.constructor = Modal;\n\n// set component name\nModal.prototype.name = 'spa-component-modal';\n\n\n// public\nmodule.exports = Modal;\n","/**\n * Main page implementation.\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar id              = 'pageMain',\n    Page            = require('stb-component-page'),\n    app             = require('mag-app'),\n    appConf         = require('../config'),\n    page            = new Page({$node: document.getElementById(id)}),\n    PanelSet        = require('mag-component-panel-set'),\n    PanelExtended   = require('mag-component-panel'),\n    LayoutList      = require('mag-component-layout-list'),\n    ModalCheckList  = require('mag-component-modal-check-list'),\n    ModalMessage    = require('mag-component-modal'),\n    RadioList       = require('mag-component-radio-list'),\n    dom             = require('spa-dom'),\n    keys            = require('stb-keys'),\n    tools           = require('../modules/tools'),\n    Scroll          = require('stb-component-scrollbar'),\n    Flicker         = require('spa-component-flicker'),\n    ScrollArea      = require('mag-component-scroll-area'),\n    fileSystem      = window.core.plugins.fs,\n    downloadManager = window.core.plugins.downloadManager,\n    downloadStates  = downloadManager.states,\n    Footer          = require('mag-component-footer'),\n    extensionByType = [\n        {id: 1, title: 'video', data: fileSystem.mediaTypes.video},\n        {id: 2, title: 'audio', data: fileSystem.mediaTypes.audio},\n        {id: 3, title: 'playlist', data: fileSystem.mediaTypes.playlist},\n        {id: 4, title: 'image', data: fileSystem.mediaTypes.image},\n        {id: 5, title: 'files', data: fileSystem.mediaTypes.text.concat(fileSystem.mediaTypes.diskImage)}\n    ],\n    stateToClass    = {},\n    stateToText     = {},\n    $channelsCountWrapper, $channelsCount;\n\n\n// define class name for each state\nstateToClass[downloadStates.STOPPED] = 'theme-icon-pause';\nstateToClass[downloadStates.WAITING] = 'theme-icon-clock theme-color-error';\nstateToClass[downloadStates.RUNNING] = 'theme-icon-play';\nstateToClass[downloadStates.FINISHED] = 'theme-icon-ok theme-color-success';\nstateToClass[downloadStates.TEMPORARY_ERROR] = 'theme-icon-warning theme-color-warning';\nstateToClass[downloadStates.PERMANENT_ERROR] = 'theme-icon-warning theme-color-warning';\n// define text for each state\nstateToText[downloadStates.STOPPED] = gettext('Paused');\nstateToText[downloadStates.WAITING] = gettext('Waiting');\nstateToText[downloadStates.RUNNING] = gettext('Running');\nstateToText[downloadStates.FINISHED] = gettext('Completed');\nstateToText[downloadStates.TEMPORARY_ERROR] = gettext('Error');\nstateToText[downloadStates.PERMANENT_ERROR] = gettext('Error');\n\nappConf.storages = (fileSystem.getMountPoints().concat(fileSystem.getHDDInfo()) || []);\n\n$channelsCountWrapper = dom.tag(\n    'div',\n    {className: 'amountContainer'},\n    $channelsCount = dom.tag('div', {className: 'amount'}, '0')\n);\n\n// Collect all downloads to one array\napp.downloads = [];\n\npage.clock = new Flicker({\n    className: 'clock',\n    interval: 1000,\n    render: function ( $item ) {\n        var time  = new Date(),\n            hours = time.getHours(),\n            mins  = time.getMinutes();\n\n        $item.innerText = (hours > 9 ? hours : '0' + hours) + ':' + (mins > 9 ? mins : '0' + mins);\n    }\n});\npage.add(page.clock);\npage.clock.start();\n\npage.footer = new Footer({visible: false, parent: page});\n\n/**\n * Send intent to player with play action and currently focused task file path\n */\npage.playFocusedFile = function () {\n    var playable = fileSystem.mediaTypes.playable,\n        // focused file data\n        data     = page.middlePanel.list.$focusItem.data.items[1].download.data,\n        ext      = (data.name.split('.').pop() || '').toLowerCase();\n\n    // file loaded and have playable format\n    if ( data.state === downloadStates.FINISHED && playable.indexOf(ext) !== -1 ) {\n        window.core.intent({\n            action: 'play', mime: 'content/video', data: {uri: data.path + '/' + data.name, title: data.name}\n        }, function ( error ) {\n            if ( error ) { window.core.notify({title: error.message, icon: 'alert', type: 'warning'}); }\n        });\n    }\n};\n\n/**\n * Remove currently focused item\n */\npage.deleteFocusedTask = function () {\n    downloadManager.remove(page.middlePanel.list.$focusItem.data.items[1].download, false, function ( error ) {\n        if ( error ) {\n            window.core.notify({title: error.message, icon: 'alert', type: 'warning'});\n        }\n        page.middlePanel.reset();\n    });\n};\n\n/**\n * Set search, file and status filters to default value\n */\npage.resetFilters = function () {\n    var $catChilds = page.leftPanel.list.$body.children,\n        arr, index;\n\n    appConf.list.filterSearch = '';\n    page.leftPanel.search.innerText = gettext('Search');\n    $catChilds[1].children[0].children[0].classList.remove('active');\n\n    // reset status filter and corresponding modal window\n    if ( appConf.list.filterStatus !== null ) {\n        arr = page.modalFilterStatus.children[0].data;\n        for ( index = 0; index < arr.length; index++ ) {\n            arr[index].state = !index;\n        }\n        page.modalFilterStatus.children[0].init({data: arr, focusIndex: 0});\n        appConf.list.filterStatus = null;\n        $catChilds[2].layout.$node.children[1].innerText = gettext('All categories');\n        $catChilds[2].layout.$node.children[0].classList.remove('active');\n    }\n\n    // reset files filter and corresponding modal window\n    if ( appConf.list.filterFiles.length ) {\n        page.modalFilterFiles.clearChecked();\n    }\n\n    page.footer.hide();\n    page.middlePanel.reset();\n};\n\n\n// modal message: all actions for middle list item\npage.modalActions = new ModalMessage({\n    visible: false,\n    title: gettext('actions'),\n    events: {\n        show: function () {\n            this.focus();\n        },\n        hide: function () {\n            page.middlePanel.focus();\n        }\n    },\n    children: [\n        new LayoutList({\n            cycle: true,\n            data: [],\n            propagate: true\n        })\n    ]\n});\npage.modalActions.fill = function ( data ) {\n    // Timeout 1 of 2\n    // Was added to fix visual artifacts during long and buggy dom rendering at mag322\n    setTimeout(function () {\n        var item     = data.$item.data.items[1].download,\n            ext      = (item.data.name.split('.').pop() || '').toLowerCase(),\n            playable = fileSystem.mediaTypes.playable,\n            body     = [\n                {\n                    items: [\n                        {className: 'theme-icon', value: ''},\n                        {value: gettext('Details')}\n                    ],\n                    click: function () {\n                        page.modalActions.hide();\n                        page.panelSet.blur();\n                        app.route(app.pages.info, page.middlePanel.list.$focusItem);\n                    }\n                }, {\n                    items: [\n                        {className: 'theme-icon theme-icon-rc-f1', value: ''},\n                        {value: gettext('Delete task')}\n                    ],\n                    click: function () {\n                        downloadManager.remove(item, false, function ( error ) {\n                            if ( error ) {\n                                window.core.notify({title: error.message, icon: 'alert', type: 'warning'});\n                            } else {\n                                page.modalActions.hide();\n                                page.middlePanel.focus();\n                                page.middlePanel.reset();\n                            }\n                        });\n                    }\n                }, {\n                    items: [\n                        {className: 'theme-icon', value: ''},\n                        {value: gettext('Delete task and file')}\n                    ],\n                    click: function () {\n                        downloadManager.remove(item, true, function ( error ) {\n                            if ( error ) {\n                                window.core.notify({title: error.message, icon: 'alert', type: 'warning'});\n                            } else {\n                                page.modalActions.hide();\n                                page.middlePanel.focus();\n                                page.middlePanel.reset();\n                            }\n                        });\n                    }\n                }\n            ];\n\n        // Task state: 0 – Stopped, 1 – WaitingQueue, 2 – Running,\n        //             3 – Completed, 4 – TemporaryError, 5 - PermanentError\n        // play playable file\n        if ( item.data.state === downloadStates.FINISHED && playable.indexOf(ext) !== -1 ) {\n            body.unshift({\n                items: [\n                    {className: 'theme-icon theme-icon-play', value: ''},\n                    {value: gettext('Play file')}\n                ],\n                click: function () {\n                    page.modalActions.hide();\n                    page.panelSet.focus();\n                    window.core.intent({\n                        action: 'play',\n                        mime: 'content/video',\n                        data: {\n                            uri: item.data.path + '/' + item.data.name,\n                            title: item.data.name\n                        }\n                    }, function ( error ) {\n                        if ( error ) { debug.log('error at play intent'); }\n                    });\n                }\n            });\n        }\n        // Pause task\n        if ( item.data.state === downloadStates.RUNNING ) {\n            body.unshift({\n                items: [\n                    {className: 'theme-icon theme-icon-rc-play-pause', value: ''},\n                    {value: gettext('Pause')}\n                ],\n                click: function () {\n                    page.modalActions.hide();\n                    page.panelSet.focus();\n                    page.middlePanel.reset();\n                    item.pause();\n                }\n            });\n        }\n        // Resume file loading\n        if ( item.data.state === downloadStates.STOPPED ) {\n            body.unshift({\n                items: [\n                    {className: 'theme-icon theme-icon-rc-play-pause', value: ''},\n                    {value: gettext('Resume')}\n                ],\n                click: function () {\n                    page.modalActions.hide();\n                    page.panelSet.focus();\n                    page.middlePanel.reset();\n                    item.resume();\n                }\n            });\n        }\n\n        page.modalActions.children[0].init({data: body, size: body.length, focusIndex: 0});\n\n        // Timeout 2 of 2\n        // Was added to fix visual artifacts during long and buggy dom rendering at mag322\n        setTimeout(function () {\n            page.modalActions.show();\n        }, 0);\n    }, 0);\n};\npage.add(page.modalActions);\n\n\n// modal message: reset all filters\npage.modalReset = new ModalMessage({\n    visible: false,\n    title: gettext('actions'),\n    events: {\n        show: function () { this.focus(); },\n        hide: function () { page.leftPanel.focus(); }\n    },\n    children: [\n        new LayoutList({\n            focusIndex: 0,\n            cycle: true,\n            size: 1,\n            data: [\n                {\n                    items: [\n                        {className: 'theme-icon theme-icon-rc-f1', value: ''},\n                        {value: gettext('Reset filters')}\n                    ],\n                    click: function () {\n                        page.resetFilters();\n                        page.modalReset.hide();\n                        page.panelSet.focus();\n                    }\n                }\n            ],\n            propagate: true\n        })\n    ]\n});\npage.add(page.modalReset);\n\n\n// modal message: filter tasks by file type\npage.modalFilterFiles = new ModalCheckList({\n    visible: false,\n    title: gettext('filter'),\n    titleCounter: true,\n\n    events: {\n        show: function () { this.focus(); },\n        hide: function () {\n            page.middlePanel.reset();\n            page.modalFilterFiles.hide();\n            page.panelSet.focus();\n        },\n\n        'checked:change': function ( event ) {\n            var $item  = page.leftPanel.list.$body.children[3].children[0],\n                $icon  = $item.children[0],\n                $title = $item.children[1],\n                $count = $item.children[2],\n                data   = event.checkedData,\n                count;\n\n\n            if ( data.length === 0 || data[0].unique ) {\n                $icon.classList.remove('active');\n                $title.innerText = gettext('All files');\n                $count.style.visibility = 'hidden';\n                appConf.list.filterFiles = [];\n            } else {\n                appConf.list.filterFiles = data.map(function ( item ) { return item.value; });\n                $icon.classList.add('active');\n                count = data.length - 2;\n\n                if ( count >= 0 ) {\n                    $title.innerText = data[0].title + ', ' + data[1].title;\n                    if ( $title.scrollWidth > $title.clientWidth ) {\n                        $title.innerText = data[0].title;\n                        count++;\n                    }\n\n                    if ( count > 0 ) {\n                        $count.style.visibility = 'inherit';\n                        $count.firstChild.firstChild.innerText = '+' + count;\n                    } else {\n                        $count.style.visibility = 'hidden';\n                    }\n\n                } else {\n                    $title.innerText = data[0].title;\n                    $count.style.visibility = 'hidden';\n                }\n            }\n        }\n    },\n\n    list: {\n        cycle: true,\n        focusIndex: 0,\n        size: 5,\n        data: [\n            {state: true, title: gettext('All files'), value: 0, className: 'theme-header', unique: true},\n            {state: false, title: gettext('Video'), value: 1},\n            {state: false, title: gettext('Music'), value: 2},\n            {state: false, title: gettext('Playlists'), value: 3},\n            {state: false, title: gettext('Images'), value: 4},\n            {state: false, title: gettext('Files'), value: 5}\n        ]\n    }\n});\npage.add(page.modalFilterFiles);\n\n\n// modal message: filter by download status\n// (0 – Stopped, 1 – WaitingQueue, 2 – Running, 3 – Completed, 4 – TemporaryError, 5 - PermanentError)\npage.modalFilterStatus = new ModalMessage({\n    visible: false,\n    title: gettext('categories'),\n    events: {\n        show: function () { this.focus(); },\n        hide: function () { page.panelSet.focus(); }\n    },\n    children: [\n        new RadioList({\n            cycle: true,\n            focusIndex: 0,\n            size: 5,\n            propagate: true,\n            data: [\n                {state: true, title: gettext('All categories'), value: null},\n                {state: false, title: gettext('Paused'), value: 0},\n                {state: false, title: gettext('Completed'), value: 3},\n                {state: false, title: gettext('In progress'), value: 2},\n                {state: false, title: gettext('Waiting'), value: 1},\n                {state: false, title: gettext('Error'), value: 5}\n            ],\n            events: {\n                'click:item': function ( event ) {\n                    var $item = page.leftPanel.list.$body.children[2].children[0];\n\n                    if ( event.$item.data.value === null ) {\n                        $item.children[0].classList.remove('active');\n                    } else {\n                        $item.children[0].classList.add('active');\n                    }\n                    $item.children[1].innerText = event.$item.data.title;\n                    appConf.list.filterStatus = event.$item.data.value;\n                    page.middlePanel.reset();\n                    page.modalFilterStatus.hide();\n                }\n            }\n        })\n    ]\n});\npage.add(page.modalFilterStatus);\n\n\n// modal message: sort\npage.modalSort = new ModalMessage({\n    visible: false,\n    title: gettext('sort'),\n    events: {\n        show: function () { this.focus(); },\n        hide: function () { page.panelSet.focus(); }\n    },\n    children: [\n        new RadioList({\n            cycle: true,\n            focusIndex: 0,\n            size: 3,\n            data: [\n                {state: true, title: gettext('By name'), value: appConf.constants.sort.BY_NAME},\n                {state: false, title: gettext('By category'), value: appConf.constants.sort.BY_CATEGORY},\n                {state: false, title: gettext('By size'), value: appConf.constants.sort.BY_SIZE}\n            ],\n            propagate: true,\n            events: {\n                'click:item': function ( event ) {\n                    page.leftPanel.list.$focusItem.layout.$node.children[1].innerText = event.$item.data.title;\n                    appConf.list.sort = event.$item.data.value;\n                    page.middlePanel.reset();\n                    page.modalSort.hide();\n                }\n            }\n        })\n    ]\n});\npage.add(page.modalSort);\n\n\n// modal message: exit\npage.modalExit = new ModalMessage({\n    title: gettext('Exit'),\n    className: 'modalExit',\n    events: {\n        show: function () { this.children[0].focus(); },\n        hide: function () { page.panelSet.focus(); }\n    },\n    children: [\n        new LayoutList({\n            size: 2,\n            focusIndex: 0,\n            data: [\n                {\n                    items: [{value: gettext('Yes')}],\n                    click: function () {\n                        page.modalExit.hide();\n                        app.exit();\n                    }\n                }, {\n                    items: [{value: gettext('No')}],\n                    click: function () { page.modalExit.hide(); }\n                }\n            ],\n            propagate: true\n        })\n    ]\n});\npage.add(page.modalExit);\n\n\n// left panel (menu)\npage.leftPanel = new PanelExtended({title: gettext('Menu'), children: [], className: 'leftPanel'});\npage.leftPanel.add(page.leftPanel.list = new LayoutList({\n    cycle: true,\n    focusIndex: 0,\n    size: 6,\n    data: [\n        {\n            items: [\n                {className: 'theme-icon theme-icon-plus', value: ''},\n                {value: gettext('Create')}\n            ],\n            click: function () {\n                page.panelSet.blur();\n                app.route(app.pages.add);\n            }\n        }, {\n            items: [\n                {className: 'theme-icon theme-icon-search', value: ''},\n                page.leftPanel.search = dom.tag('div', {className: 'searchText'}, gettext('Search'))\n            ],\n            click: function () {\n                var inputText = page.leftPanel.search.innerText;\n\n                window.core.intent({\n                    action: 'keyboard',\n                    data: {\n                        type: 'text',\n                        mode: 'qwerty',\n                        title: gettext('SEARCH DOWNLOADS'),\n                        description: gettext('DOWNLOADS'),\n                        value: inputText === gettext('Search') ? '' : inputText\n                    },\n                    events: {\n                        done: function ( event ) {\n                            var $icon = page.leftPanel.list.$body.children[1].children[0].children[0];\n\n                            if ( event.value ) {\n                                $icon.classList.add('active');\n                            } else {\n                                $icon.classList.remove('active');\n                            }\n                            page.leftPanel.search.innerText = event.value || gettext('Search');\n                            appConf.list.filterSearch = event.value;\n                            page.middlePanel.reset();\n                        }\n                    }\n                }, function ( error ) {\n                    console.log(error);\n                });\n            }\n        }, {\n            items: [\n                {className: 'theme-icon theme-icon-categories', value: ''},\n                {value: gettext('All categories')}\n            ],\n            click: function () {\n                page.panelSet.blur();\n                page.modalFilterStatus.show();\n            },\n            className: 'theme-item-more'\n        }, {\n            items: [\n                {className: 'theme-icon theme-icon-filter', value: ''},\n                {value: gettext('All files')},\n                dom.tag(\n                    'div',\n                    {className: 'theme-icon hidden'},\n                    dom.tag(\n                        'div',\n                        {className: 'theme-counter'},\n                        dom.tag('div')\n                    )\n                )\n            ],\n            click: function () {\n                page.panelSet.blur();\n                page.modalFilterFiles.show();\n            },\n            className: 'theme-item-more'\n        }, {\n            items: [\n                {className: 'theme-icon theme-icon-sort-az', value: ''},\n                {value: gettext('By name')}\n            ],\n            click: function () {\n                page.panelSet.blur();\n                page.modalSort.show();\n            },\n            className: 'theme-item-more'\n        }, {\n            items: [\n                {className: 'theme-icon theme-icon-exit', value: ''},\n                {value: gettext('Exit')}\n            ],\n            click: function () {\n                page.panelSet.blur();\n                page.modalExit.show();\n            }\n        }\n    ],\n    events: {\n        'focus:item': function () {\n            if ( appConf.list.filterSearch || appConf.list.filterStatus !== null || appConf.list.filterFiles.length ) {\n                page.footer.init({\n                    middle: [{code: keys.f1, title: gettext('Reset filters'), action: page.resetFilters}],\n                    left: {\n                        code: keys.menu,\n                        action: function () {\n                            page.panelSet.blur();\n                            page.modalReset.show();\n                        }\n                    }\n                });\n                page.footer.show();\n            } else {\n                console.log('hide');\n                page.footer.hide();\n            }\n        },\n        focus: function () {\n            if ( appConf.list.filterSearch || appConf.list.filterStatus !== null || appConf.list.filterFiles.length ) {\n                page.footer.init({\n                    middle: [{code: keys.f1, title: gettext('Reset filters'), action: page.resetFilters}],\n                    left: {\n                        code: keys.menu,\n                        action: function () {\n                            page.panelSet.blur();\n                            page.modalReset.show();\n                        }\n                    }\n                });\n                page.footer.show();\n            } else {\n                page.footer.hide();\n            }\n        },\n        blur: function () {\n            page.footer.hide();\n        }\n    }\n}));\n\n\n// middle panel (downloads list)\npage.middlePanel = new PanelExtended({\n    title: [{value: gettext('Downloads'), className: 'name'}, $channelsCountWrapper],\n    main: true,\n    children: [],\n    className: 'middlePanel'\n});\n// delay between buttons press and refreshing action menu and right panel\npage.middlePanel.updateDelay = null;\npage.middlePanel.scroll = new Scroll({});\n\npage.middlePanel.add(page.middlePanel.list = new LayoutList({\n    cycle: true,\n    focusIndex: 0,\n    size: 7,\n    data: [],\n    scroll: page.middlePanel.scroll,\n    events: {\n        'focus:item': function ( data ) {\n            var body, ext;\n\n            // abort previous update function call\n            clearTimeout(page.middlePanel.updateDelay);\n            page.middlePanel.updateDelay = setTimeout(function () {\n                var focusItem = page.middlePanel.list.$focusItem;\n\n                // update only if middle list is focused\n                if ( page.activeComponent === page.middlePanel.list ) {\n                    if ( data ) {\n                        body = {\n                            middle: [\n                                {\n                                    code: keys.f1,\n                                    title: gettext('Delete task'),\n                                    action: page.deleteFocusedTask\n                                }\n                            ],\n                            left: {\n                                code: keys.menu,\n                                action: function () {\n                                    // redefine menu to fix first item delayed add\n                                    page.panelSet.blur();\n                                    page.modalActions.fill({$item: page.middlePanel.list.$focusItem});\n                                }\n                            }\n                        };\n\n                        page.rightPanel.reset(data);\n\n                        if ( focusItem && focusItem.data && focusItem.data.items[1].download.data.state === downloadStates.FINISHED ) {\n                            ext = (focusItem.data.items[1].download.data.name.split('.').pop() || '').toLowerCase();\n                            if ( fileSystem.mediaTypes.playable.indexOf(ext) !== -1 ) {\n                                body.middle.push({\n                                    code: keys.f2,\n                                    title: gettext('Play file'),\n                                    action: page.playFocusedFile\n                                });\n                            }\n                        }\n                        page.footer.init(body);\n                        page.footer.show();\n                    } else {\n                        // bad item, hide footer\n                        page.footer.hide();\n                    }\n                }\n            }, window.core.environment.onFocusDebounceTimeout);\n        },\n        focus: function () {\n            // show footer if list have at least one item\n            var ext,\n                body = {\n                    middle: [{code: keys.f1, title: gettext('Delete task'), action: page.deleteFocusedTask}],\n                    left: {\n                        code: keys.menu,\n                        action: function () {\n                            page.panelSet.blur();\n                            page.modalActions.fill({$item: page.middlePanel.list.$focusItem});\n                        }\n                    }\n                };\n\n            // if finished and playable, add 'Play file' footer button\n            if ( page.middlePanel.list.$focusItem && page.middlePanel.list.$focusItem.data ) {\n                ext = (page.middlePanel.list.$focusItem.data.items[1].download.data.name.split('.').pop() || '').toLowerCase();\n                if ( fileSystem.mediaTypes.playable.indexOf(ext) !== -1 ) {\n                    // playable file\n                    if ( page.middlePanel.list.$focusItem.data.items[1].download.data.state === downloadStates.FINISHED ) {\n                        body.middle.push({code: keys.f2, title: gettext('Play file'), action: page.playFocusedFile});\n                    }\n                }\n                page.footer.init(body);\n                page.footer.show();\n            } else {\n                // empty list so hide footer\n                page.footer.hide();\n            }\n        },\n        blur: function () {\n            // hide footer\n            page.footer.hide();\n        }\n    },\n    noData: dom.tag(\n        'div',\n        {className: 'panelHint'},\n        dom.tag(\n            'div',\n            {className: 'hint'},\n            dom.tag('div', {className: 'hint', innerHTML: gettext('No downloads')})\n        )\n    )\n}), page.middlePanel.scroll);\n\npage.middlePanel.reset = function () {\n    // prevent reset call spam\n    clearTimeout(page.middlePanel.resetTimeOut);\n    // Check downloads info change every \"n\" (depends on plugin config) seconds.\n    page.middlePanel.resetTimeOut = setTimeout(function () {\n        var body, index, index2, fileType, extension,\n            downloads     = app.downloads.slice(),\n            newData       = [],\n            sortOrderHash = {},\n            list          = page.middlePanel.list;\n\n        // predefined additional sort order by task state for sort by category\n        sortOrderHash[downloadStates.STOPPED] = 3;\n        sortOrderHash[downloadStates.WAITING] = 2;\n        sortOrderHash[downloadStates.RUNNING] = 1;\n        sortOrderHash[downloadStates.FINISHED] = 4;\n        sortOrderHash[downloadStates.TEMPORARY_ERROR] = 5;\n        sortOrderHash[downloadStates.PERMANENT_ERROR] = 6;\n\n        function itemClick () {\n            if ( page.middlePanel.list.$focusItem ) {\n                page.panelSet.blur();\n                page.modalActions.fill({$item: page.middlePanel.list.$focusItem});\n            }\n        }\n\n        for ( index = 0; index < downloads.length; index++ ) {\n            // check if it correspond file filter\n            // i need \"continue\" to make algorithm fast and simple\n            /* eslint no-continue: 0 */\n            if ( appConf.list.filterFiles.length && appConf.list.filterFiles[0] ) {\n                extension = downloads[index].data.name.split('.').pop().toLowerCase();\n                for ( index2 = 0; index2 < extensionByType.length; index2++ ) {\n                    if ( extensionByType[index2].data.indexOf(extension) !== -1 ) {\n                        fileType = extensionByType[index2].id;\n                        break;\n                    }\n                }\n                if ( appConf.list.filterFiles.indexOf(fileType) === -1 ) { continue; }\n            }\n            // check if it correspond to status filter\n            if ( appConf.list.filterStatus !== null ) {\n                if ( downloads[index].data.state !== appConf.list.filterStatus ) { continue; }\n            }\n            // check if it correspond to search filter\n            if ( appConf.list.filterSearch.trim() &&\n                downloads[index].data.name.indexOf(appConf.list.filterSearch) === -1 &&\n                downloads[index].data.url.indexOf(appConf.list.filterSearch) === -1 ) {\n                continue;\n            }\n            // add info about storage\n            for ( index2 = 0; index2 < appConf.storages.length; index2++ ) {\n                if ( downloads[index].data.path === appConf.storages[index2].mountPath ) {\n                    downloads[index].data.storage = appConf.storages[index2];\n                    break;\n                }\n            }\n\n            newData.push({\n                // (0 – Stopped, 1 – WaitingQueue, 2 – Running, 3 – Completed, 4 – TemporaryError, 5 - PermanentError)\n                items: [\n                    {\n                        className: 'theme-icon ' + stateToClass[Number(downloads[index].data.state)],\n                        value: ''\n                    },\n                    {\n                        value: Math.floor(downloads[index].data.progress >= 0 ? downloads[index].data.progress : 0)\n                        + '% ' + decodeURI(downloads[index].data.name),\n                        download: downloads[index],\n                        className: 'title'\n                    }\n                ],\n                click: itemClick\n            });\n        }\n        // sort it\n        if ( newData.length ) {\n            if ( !appConf.list.sort ) {\n                // by name\n                newData.sort(function ( first, next ) {\n                    return first.items[1].download.data.name.toLowerCase().localeCompare(next.items[1].download.data.name.toLowerCase());\n                });\n            } else if ( appConf.list.sort === appConf.constants.sort.BY_CATEGORY ) {\n                // by category\n                newData.sort(function ( first, next ) {\n                    return sortOrderHash[first.items[1].download.data.state] - sortOrderHash[next.items[1].download.data.state];\n                });\n            } else {\n                // by size\n                newData.sort(function ( first, next ) {\n                    return next.items[1].download.data.size - first.items[1].download.data.size;\n                });\n            }\n        }\n\n        body = {data: newData};\n        $channelsCount.innerText = newData.length;\n        if ( newData.length ) {\n            body.focusIndex = list.$focusItem && list.$focusItem.index < newData.length ? list.$focusItem.index : 0;\n            page.middlePanel.scroll.init({realSize: newData.length, viewSize: 7});\n            page.middlePanel.scroll.show();\n        } else {\n            page.rightPanel.reset();\n            if ( page.activeComponent === page.middlePanel.list ) { page.footer.hide(); }\n            page.middlePanel.scroll.hide();\n        }\n        list.init(body);\n    }, 300);\n};\n\n// right panel (download information)\npage.rightPanel = new PanelExtended({title: gettext('Details'), className: 'rightPanel'});\npage.rightPanel.scroll = new Scroll({});\npage.rightPanel.textArea = new ScrollArea({propagate: true, step: 5, scroll: page.rightPanel.scroll});\npage.rightPanel.add(page.rightPanel.textArea, page.rightPanel.scroll);\npage.rightPanel.reset = function ( data ) {\n    var area = page.rightPanel.textArea,\n        item;\n\n    if ( !area.$url ) {\n        area.$body.appendChild(dom.fragment(\n            dom.tag('div', {className: 'title theme-subhead-color'}, gettext('URL:')),\n            area.$url = dom.tag('div', {}),\n            dom.tag('div', {className: 'title theme-subhead-color'}, gettext('Storage:')),\n            area.$storage = dom.tag('div', {}),\n            dom.tag('div', {className: 'title theme-subhead-color'}, gettext('Size:')),\n            area.$size = dom.tag('div', {}),\n            dom.tag('div', {className: 'title theme-subhead-color'}, gettext('State:')),\n            area.$state = dom.tag('div', {})\n        ));\n    }\n    if ( data && data.$curr && data.$curr.data ) {\n        item = data.$curr.data.items[1].download.data;\n        area.$url.innerText = decodeURIComponent(item.url);\n        area.$storage.innerText = item.storage ? item.storage.label : gettext('Not connected');\n        area.$size.innerText = tools.convert(item.size);\n        area.$state.innerText = stateToText[Number(item.state)];\n        page.rightPanel.textArea.show();\n        page.rightPanel.textArea.init();\n    } else {\n        page.rightPanel.textArea.hide();\n    }\n};\n\n\nfileSystem.onMount = function ( state ) {\n    //debug.info('onMount: ' + state);\n    appConf.storages = fileSystem.getMountPoints().concat(fileSystem.getHDDInfo());\n    if ( app.pages.add.active ) {\n        if ( app.pages.add.modalSelectDevice.visible ) {\n            app.pages.add.modalSelectDevice.hide();\n        }\n        app.pages.add.panelSet.reset();\n        app.pages.add.panelSet.focus();\n    }\n    if ( state ) {\n        // restore old tasks from new storage device\n        appConf.storages.forEach(function ( item ) {\n            downloadManager.restore(item.mountPath, function ( error ) {\n                if ( error ) { debug.log('error during records restore from storage ' + error); }\n            });\n        });\n    } else if ( downloadManager.validate ) {\n        // cleanup trash tasks left after storage removal\n        downloadManager.validate();\n    }\n};\n\n// panel set: main\npage.panelSet = new PanelSet({\n    visible: true,\n    $node: document.getElementById('panelSetMain'),\n    focusIndex: 0,\n    panels: [page.leftPanel, page.middlePanel, page.rightPanel]\n});\npage.add(page.panelSet);\n\n// restore old tasks from all connected storage devices\nappConf.storages.forEach(function ( item ) {\n    downloadManager.restore(item.mountPath, function ( error ) {\n        if ( error ) { debug.log('error during records restore from storage ' + error); }\n    });\n});\n\n// download manager events - reset old, add new\ndownloadManager.events = {};\ndownloadManager.addListeners({\n    add: function ( config ) {\n        if (\n            config.item.data.state === downloadStates.PERMANENT_ERROR\n            || config.item.data.state === downloadStates.TEMPORARY_ERROR\n        ) {\n            window.core.notify({title: gettext('Download error'), icon: 'alert', type: 'warning'});\n        }\n        app.downloads.push(config.item);\n        page.middlePanel.reset();\n    },\n    remove: function ( config ) {\n        app.downloads.splice(app.downloads.indexOf(config.item), 1);\n        page.middlePanel.reset();\n    },\n    progress: function () {\n        page.middlePanel.reset();\n    },\n    state: function ( config ) {\n        if (\n            config.item.data.state === downloadStates.PERMANENT_ERROR\n            || config.item.data.state === downloadStates.TEMPORARY_ERROR\n        ) {\n            window.core.notify({title: gettext('Download error'), icon: 'alert', type: 'warning'});\n        }\n        page.middlePanel.reset();\n    }\n});\ndownloadManager.reset();\n\n// window.core.intent({action: 'download',data: {uri: 'http://10.110.22.65:4343/mags.mp4', title: 'video.mp4'}}, function () {console.log('callback intent');});\nwindow.core.addListener('intent', function ( intent, callback ) {\n    if ( intent.action === 'download' ) {\n        app.intent = intent;\n        app.route(app.pages.add);\n        app.pages.add.reset();\n        callback(false, {});\n    }\n});\n\n\npage.addListener('keydown', function ( event ) {\n    switch ( event.code ) {\n        case keys.back:\n            page.panelSet.blur();\n            window.core.call('stop');\n            break;\n    }\n});\n\npage.addListener('show', function () {\n    page.panelSet.show();\n    page.panelSet.focus();\n});\n\nwindow.core.addListeners({\n    show: function () { page.clock.start(); },\n    hide: function () { page.clock.stop(); },\n    exit: function () {\n        downloadManager.events = {};\n        downloadManager.reset();\n    }\n});\n\napp.route(page);\npage.show();\n\n// public\nmodule.exports = page;\n","/**\n * @license The MIT License (MIT)\n * @copyright Dmitry Fedotov <bas.jsdev@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\nvar Modal     = require('mag-component-modal'),\n    CheckList = require('mag-component-check-list'),\n    Scroll    = require('stb-component-scrollbar'),\n    dom       = require('spa-dom');\n\n\n/**\n * Modal window implementation.\n *\n * @constructor\n * @extends Modal\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {String} [config.title] message title\n * @param {boolean} [config.titleCounter] counter in title\n * @param {String} [config.className] message class name\n * @param {String} [config.icon] icon at header\n * @param {boolean} [config.visible] visibility flag\n * @param {Array} [config.children] content (inherited from the parent)\n * @param {Object} [config.list] all init parameters for mag-component-check-list constructor\n *\n * @example\n * var modalCheckList = new ModalCheckList({\n *     title: 'sort',\n *     events: {\n *         hide: function () {\n *             page.panelSet.focus();\n *         }\n *     },\n *     list: {\n *         size: 2,\n *         data: [\n *             {state: true, title: 'All content', value: 1, unique: true},\n *             {state: false, title: 'Music', value: 2},\n *             {state: false, title: 'Video', value: 3}\n *         ]\n *     }\n * });\n *\n * page.add(modalCheckList);\n *\n * leftPanel.add(leftPanelList = new LayoutList({\n *     size: 6,\n *     data: [\n *         {\n *             items: page.modalCheckList.getListItem(),\n *             click: function () {\n *                 panelSet.blur();\n *                 modalCheckList.show();\n *             }\n *         }\n *     ]\n * }));\n *\n */\n\n\nfunction ModalCheckList ( config ) {\n    var self = this,\n        index, listClickEvents;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        if ( !config.list ) {\n            throw new Error(__filename + ': wrong or empty mag-component-check-list component config config.list');\n        }\n    }\n\n    // sanitize\n    config = config || {};\n    config.list = config.list || {};\n    config.list.events = config.list.events || {};\n    config.list.propagate = config.list.propagate !== false;\n\n    config.children = config.children || [];\n\n    this.scroll = new Scroll({});\n    config.list.scroll = this.scroll;\n\n    this.list = new CheckList(config.list);\n\n    for ( index = 0; index < this.list.data.length; index++ ) {\n        if ( this.list.data[index].unique ) {\n            this.uniqueItem = {\n                data: this.list.data[index],\n                index: index\n            };\n\n            break;\n        }\n    }\n\n    if ( this.uniqueItem && this.uniqueItem.data.state && this.list.checkedData.length > 1 ) {\n        this.list.clearChecked();\n        if ( this.uniqueItem.index < this.list.$node.children.length + this.list.viewIndex && this.uniqueItem.index < this.list.viewIndex ) {\n            this.list.changeState(this.list.$node.children[this.uniqueItem.index - this.list.viewIndex]);\n        } else {\n            this.uniqueItem.data.state = true;\n            this.list.checkedData.push(this.uniqueItem.data);\n        }\n    }\n\n    this.checkedData = this.list.checkedData;\n\n    config.children.push(this.list);\n    config.children.push(this.scroll);\n\n\n    // parent constructor call\n    Modal.call(this, config);\n\n    if ( config.titleCounter ) {\n        this.$header.appendChild(\n            dom.tag(\n                'div',\n                {className: 'theme-icon'},\n                dom.tag(\n                    'div',\n                    {className: 'theme-counter'},\n                    self.$titleCount = dom.tag(\n                        'div',\n                        {},\n                        this.list.data.length && self.uniqueItem ?  this.list.data.length - 1 :  this.list.data.length\n                    )\n                )\n            )\n        );\n\n        this.list.setData = function ( data ) {\n            CheckList.prototype.setData.call(self.list, data);\n            self.$titleCount.innerText = data.data.length && self.uniqueItem ? data.data.length - 1 : data.data.length;\n        };\n    }\n\n    if ( config.list.data && config.list.data.length ) {\n        this.scroll.show();\n        this.scroll.init({realSize: config.list.data.length, viewSize: config.list.size || 5});\n    } else {\n        this.scroll.hide();\n    }\n\n    this.addListener('focus',\n        /**\n        * @this ModalCheckList\n        */\n        function () {\n            this.list.focus();\n        });\n\n    listClickEvents = this.list.events['click:item'] || [];\n    this.list.events['click:item'] = [];\n    this.list.addListener('click:item',\n        /**\n         * @param {Object} event click event\n         *\n         * @this ModalCheckList.list\n         */\n        function ( event ) {\n            var $item   = event.$item,\n                data = $item.data;\n\n            if ( self.uniqueItem ) {\n                if ( data.unique && !data.state ) {\n                    this.changeState($item);\n\n                    return;\n                }\n\n                if ( data.unique ) {\n                    this.clearChecked();\n                    this.changeState($item);\n                } else {\n                    if ( self.uniqueItem.data.state ) {\n                        index = self.uniqueItem.index - this.viewIndex;\n                        if ( index < this.$node.children.length && index >= 0 ) {\n                            this.changeState(this.$node.children[index]);\n                        } else {\n                            self.uniqueItem.data.state = false;\n                            index = this.checkedData.indexOf(self.uniqueItem.data);\n                            if ( index !== -1 ) {\n                                this.checkedData.splice(index, 1);\n                            }\n                        }\n                    }\n\n                    if ( this.checkedData.length === this.data.length - 1 ) {\n                        this.clearChecked();\n                        index = self.uniqueItem.index - this.viewIndex;\n                        if ( index < this.$node.children.length && index >= 0 ) {\n                            this.changeState(this.$node.children[index]);\n                        } else {\n                            self.uniqueItem.data.state = true;\n                            this.checkedData.push(self.uniqueItem.data);\n                        }\n                    }\n                }\n            }\n\n            for ( index = 0; index < listClickEvents.length; index++ ) {\n                listClickEvents[index].call(this, event);\n            }\n\n            self.checkedData = this.checkedData;\n\n            self.emit('checked:change', {checkedData: this.checkedData});\n        });\n}\n\n\n// inheritance\nModalCheckList.prototype = Object.create(Modal.prototype);\nModalCheckList.prototype.constructor = ModalCheckList;\n\n// set component name\nModalCheckList.prototype.name = 'mag-component-modal mag-component-modal-check-list';\n\n\n/**\n * Reset data to default state and render inner structures and HTML.\n */\nModalCheckList.prototype.resetData = function () {\n    this.list.resetData();\n\n    if ( this.uniqueItem && this.uniqueItem.data.state && this.list.checkedData.length > 1 ) {\n        this.list.clearChecked();\n        if ( this.uniqueItem.index < this.list.$node.children.length + this.list.viewIndex && this.uniqueItem.index < this.list.viewIndex ) {\n            this.list.changeState(this.list.$node.children[this.uniqueItem.index - this.list.viewIndex]);\n        } else {\n            this.uniqueItem.data.state = true;\n            this.list.checkedData.push(this.uniqueItem.data);\n        }\n    }\n\n    this.checkedData = this.list.checkedData;\n    this.emit('checked:change', {checkedData: this.checkedData});\n};\n\n\n/**\n * Set all states to false and render inner structures and HTML.\n *\n * @param {number} focusIndex focus index\n */\nModalCheckList.prototype.clearChecked = function ( focusIndex ) {\n    var state = this.uniqueItem && this.uniqueItem.data.defaultState;\n\n    this.list.clearChecked(focusIndex);\n\n    if ( state ) {\n        this.uniqueItem.data.defaultState = state;\n        if ( this.uniqueItem.index < this.list.$node.children.length + this.list.viewIndex && this.uniqueItem.index >= this.list.viewIndex ) {\n            this.list.changeState(this.list.$node.children[this.uniqueItem.index - this.list.viewIndex]);\n        } else {\n            this.uniqueItem.data.state = true;\n            this.list.checkedData.push(this.uniqueItem.data);\n        }\n    }\n\n    this.checkedData = this.list.checkedData;\n    this.emit('checked:change', {checkedData: this.checkedData});\n};\n\n\n// public\nmodule.exports = ModalCheckList;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n'use strict';\n\nvar List            = require('mag-component-list'),\n    keys            = require('stb-keys'),\n    classChecked    = 'checked',\n    classIcon       = 'theme-icon theme-icon-checkbox',\n    classIconActive = 'theme-icon theme-icon-checkbox-active';\n\n\n/**\n * Base check list implementation\n *\n * @constructor\n * @extends List\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {string} [config.classIcon] icon default state class name\n * @param {string} [config.classIconActive] icon active state class name\n * @param {string} [config.classChecked] checked item class\n */\nfunction CheckList ( config ) {\n    /**\n     * Checked data array\n     */\n    this.checkedData = [];\n\n    if ( config.classIcon ) {\n        classIcon = config.classIcon;\n    }\n    if ( config.classIconActive ) {\n        classIconActive = config.classIconActive;\n    }\n    if ( config.classChecked ) {\n        classIcon = config.classChecked;\n    }\n\n    List.call(this, config);\n}\n\n\nCheckList.prototype = Object.create(List.prototype);\nCheckList.prototype.constructor = CheckList;\n\n// set component name\nCheckList.prototype.name = 'mag-component-check-list';\n\n\n/**\n * Set data and render inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nCheckList.prototype.setData = function ( config ) {\n    var index = 0;\n\n    List.prototype.setData.call(this, config);\n    this.checkedData = [];\n\n    for ( index; index < this.data.length; index++ ) {\n        this.data[index].defaultState = this.data[index].state;\n        if ( this.data[index].state ) {\n            this.checkedData.push(this.data[index]);\n        }\n    }\n\n    if ( this.$focusItem ) {\n        this.defaultFocusIndex = this.$focusItem.index;\n    } else {\n        this.defaultFocusIndex = 0;\n    }\n};\n\n\n/**\n * Reset data to default state and render inner structures and HTML.\n */\nCheckList.prototype.resetData = function () {\n    var index = 0;\n\n    for ( index; index < this.data.length; index++ ) {\n        this.data[index].state = this.data[index].defaultState;\n    }\n\n    this.setData({data: this.data, focusIndex: this.defaultFocusIndex});\n};\n\n\n/**\n * Set all states to false and render inner structures and HTML.\n *\n * @param {number} [focusIndex] focus index\n */\nCheckList.prototype.clearChecked = function ( focusIndex ) {\n    var index = 0;\n\n    for ( index; index < this.data.length; index++ ) {\n        this.data[index].state = false;\n    }\n\n    // no focusIndex, focusIndex may be 0\n    if ( !focusIndex && focusIndex !== 0 ) {\n        focusIndex = this.$focusItem ? this.$focusItem.index : 0;\n    }\n\n    this.setData({data: this.data, focusIndex: focusIndex});\n};\n\n\n/**\n * CheckList of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nCheckList.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse wheel events.\n     *\n     * @param {Event} event generated event\n     */\n    mousewheel: List.prototype.defaultEvents.mousewheel,\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n            case keys.right:\n            case keys.left:\n            case keys.pageUp:\n            case keys.pageDown:\n            case keys.home:\n            case keys.end:\n                event.stop = true;\n                // cursor move only on arrow keys\n                this.move(event.code);\n                break;\n            case keys.enter:\n                this.changeState(this.$focusItem);\n                // there are some listeners\n                if ( this.events['click:item'] && this.$focusItem ) {\n                    // notify listeners\n                    this.emit('click:item', {$item: this.$focusItem, event: event});\n                }\n                break;\n        }\n    }\n};\n\n\nCheckList.prototype.changeState = function ( $item ) {\n    var state = !$item.state,\n        data = this.data[$item.index],\n        index = -1;\n\n    $item.state = state;\n    data.state = state;\n    if ( state ) {\n        $item.classList.add(classChecked);\n        $item.checkBox.className = classIconActive;\n    } else {\n        $item.classList.remove(classChecked);\n        $item.checkBox.className = classIcon;\n    }\n\n    if ( state ) {\n        this.checkedData.push(data);\n    } else {\n        index = this.checkedData.indexOf(data);\n        if ( index !== -1 ) {\n            this.checkedData.splice(index, 1);\n        }\n    }\n\n    if ( this.events['change:item'] ) {\n        // notify listeners\n        this.emit('change:item', {$item: $item, state: state});\n    }\n};\n\n\n/**\n * Default render function\n *\n * @param {Element} $item in list\n * @param {Array} data to render layout element\n * @param {string} [data.title] title of checkbox\n * @param {boolean} [data.state] state of checkbox: checked or not\n * @param {string} [data.value] special value of item\n */\nCheckList.prototype.renderItemDefault = function ( $item, data ) {\n    var table, tr, td,\n        check;\n\n    if ( data.className ) {\n        $item.className = 'item ' + data.className;\n        if ( $item === this.$focusItem ) {\n            $item.className += ' focus';\n        }\n    }\n\n    if ( $item.ready ) {\n        $item.$title.innerText = data.title || '';\n        if ( data.state ) {\n            $item.classList.add(classChecked);\n            $item.checkBox.className = classIconActive;\n        } else {\n            $item.classList.remove(classChecked);\n            $item.checkBox.className = classIcon;\n        }\n\n        $item.state = data.state;\n        $item.value = data.value;\n    } else {\n        $item.innerHTML = '';\n        table = document.createElement('table');\n        tr = document.createElement('tr');\n        td = document.createElement('td');\n        check = document.createElement('div');\n        if ( data.state ) {\n            $item.classList.add(classChecked);\n            check.className = classIconActive;\n        } else {\n            $item.classList.remove(classChecked);\n            check.className = classIcon;\n        }\n\n        table.appendChild(tr);\n        td.appendChild(check);\n\n        td.className = 'checkBoxWrapper';\n        tr.appendChild(td);\n\n        td = document.createElement('td');\n        td.className = 'title';\n        td.innerText = data.title || '';\n        tr.appendChild(td);\n\n        $item.checkBox = check;\n        $item.state = data.state;\n        $item.value = data.value;\n        $item.$title = td;\n\n        $item.appendChild(table);\n\n        $item.ready = true;\n    }\n};\n\n\nCheckList.prototype.renderItem = CheckList.prototype.renderItemDefault;\n\n\n// public\nmodule.exports = CheckList;\n","/**\n * @license The MIT License (MIT)\n * @copyright Dmitry Fedotov <bas.jsdev@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys'),\n    classes   = {};\n\n\n// initialize classes\nclasses[keys.f1] = 'theme-icon-rc-f1';\nclasses[keys.f2] = 'theme-icon-rc-f2';\nclasses[keys.f3] = 'theme-icon-rc-f3';\nclasses[keys.f4] = 'theme-icon-rc-f4';\nclasses[keys.menu] = 'theme-icon-rc-menu';\nclasses[keys.ok] = 'theme-icon-rc-ok';\nclasses[keys.info] = 'theme-icon-rc-info';\nclasses[keys.playPause] = 'theme-icon-rc-play-pause';\nclasses[keys.back] = 'theme-icon-rc-back';\nclasses[keys.exit] = 'theme-icon-rc-home';\nclasses[keys.keyboard] = 'theme-icon-rc-vk';\nclasses[keys.refresh] = 'theme-icon-rc-refresh';\nclasses[keys.frame] = 'theme-icon-rc-aspect';\n\n/**\n * Footer.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}  config={} init parameters\n * @param {Object}  config.parent parent page\n * @param {boolean} [config.visible] visibility flag\n * @param {Object}  [config.data] footer buttons config\n * @param {Object}  [config.data.left] left button config\n * @param {Object}  [config.data.middle] middle buttons config\n * @param {Object}  [config.data.right] right button config\n * @param {number}  [config.data.middle.code] button key code\n * @param {Object}  [config.data.middle.title] button title\n * @param {Object}  [config.data.middle.action] button press (click) action\n *\n * @example\n * page.footer = new Footer({\n *     parent: page,\n *     data: {\n *         left: {\n *             code: keys.menu, action: function () {}\n *         },\n *         middle: [\n *             {code: 55, action: function () {}},\n *             {code: keys.f1, title: 'stop', action: function () {}},\n *             {code: 9000, className: 'customIcon', title: 'start', action: function () {}},\n *             {code: keys.f4, title: 'end', action: function () {}}\n *         ],\n *         right: {\n *             code: 65, action: function () {}\n *         }\n *     }\n * });\n */\n\n/* eslint max-statements: 0 */\nfunction Footer ( config ) {\n    var currentTab = 0,\n        self = this;\n\n    // sanitize\n    config = config || {};\n    // can't accept focus\n    config.focusable = false;\n    // hide by default\n    config.visible = config.visible || false;\n    // create centered div\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    this.tabs = [\n        {codes: {}},\n        {codes: {}},\n        {codes: {}},\n        {codes: {}}\n    ];\n\n    this.tab = 0;\n\n    this.$table = this.$node.appendChild(document.createElement('table'));\n\n    this.$table.insertRow();\n    this.$table.rows[0].insertCell(-1);\n    this.$left = this.$table.rows[0].cells[0].appendChild(document.createElement('div'));\n    this.$left.className = 'theme-icon';\n\n    this.$table.rows[0].insertCell(-1);\n    this.$table.rows[0].cells[1].className = 'central';\n\n\n    this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.className = 'wrapper hidden';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n\n    ++currentTab;\n    this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.className = 'wrapper hidden';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n\n    ++currentTab;\n    this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.className = 'wrapper hidden';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n\n    ++currentTab;\n    this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.className = 'wrapper hidden';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n\n    this.$table.rows[0].insertCell(-1);\n    this.$right = this.$table.rows[0].cells[2].appendChild(document.createElement('div'));\n    this.$right.className = 'theme-icon';\n\n    this.init(config.data);\n\n    this.parent.addListener('keydown', function ( event ) {\n        var currTab = self.tabs[self.tab];\n\n        if ( self.visible ) {\n            if ( currTab.codes[event.code] && typeof currTab.codes[event.code].action === 'function' ) {\n                currTab.codes[event.code].action();\n            }\n        }\n    });\n}\n\n\n// inheritance\nFooter.prototype = Object.create(Component.prototype);\nFooter.prototype.constructor = Footer;\n\n// set component name\nFooter.prototype.name = 'mag-component-footer';\n\n\n/**\n * Redefine buttons\n *\n * @param {Object} [config] footer buttons config\n * @param {Object} [config.left] left button config\n * @param {number} [config.left.code] left button key code\n * @param {boolean} [config.left.disabled] left button is disabled\n * @param {Object} [config.left.action] left button press (click) action\n * @param {Object} [config.middle] middle buttons config\n * @param {Object} [config.right] right button config\n * @param {number} [config.right.code] right button key code\n * @param {boolean} [config.right.disabled] right button is disabled\n * @param {Object} [config.right.action] right button press (click) action\n * @param {number} [config.middle.code] button key code\n * @param {Object} [config.middle.title] button title\n * @param {boolean} [config.middle.disabled] button is disabled\n * @param {Object} [config.middle.action] button press (click) action\n *\n * page.Footer.init({\n *     left: {\n *         code: keys.menu, action: function () {}\n *     },\n *     middle: [\n *         {code: 55, action: function () {}},\n *         {code: keys.f1, title: 'stop', action: function () {}},\n *         {code: 9000, className: 'customIcon', title: 'start', action: function () {}},\n *         {code: keys.f4, title: 'end', disabled: true}\n *     ],\n *     right: {\n *         code: 65, action: function () {}\n *     }\n * });\n *\n */\nFooter.prototype.init = function ( config ) {\n    var index, $tab, $tabChildren;\n\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( config.middle && config.middle.length > 4 ) {\n            throw new Error(__filename + ': only 4 buttons allowed in footer');\n        }\n        if ( config.middle && Array.isArray(config.middle) ) {\n            for ( index = 0; index < config.middle.length; index++ ) {\n                if ( typeof config.middle[index].action !== 'function' && !config.middle[index].disabled ) {\n                    throw new Error(__filename + ': action must be a function');\n                }\n                ++index;\n            }\n        }\n        if ( config.left && typeof config.left.action !== 'function' && !config.left.disabled ) {\n            throw new Error(__filename + ': action must be a function');\n        }\n        if ( config.right && typeof config.right.action !== 'function' && !config.right.disabled ) {\n            throw new Error(__filename + ': action must be a function');\n        }\n    }\n\n    // hide old tab\n    this.tabs[this.tab].$body.classList.add('hidden');\n    this.tab = config.middle && config.middle.length ? config.middle.length - 1 : 0;\n    // current tab shortcut\n    $tab = this.tabs[this.tab];\n    // reset all actions\n    $tab.codes = {};\n\n    // left button\n    if ( config.left ) {\n        this.$left.className = config.left.className || ('theme-icon ' + (classes[config.left.code] || 'theme-icon-warning'));\n        if ( config.left.disabled ) {\n            this.$left.classList.add('disabled');\n        } else {\n            $tab.codes[config.left.code] = {action: config.left.action};\n            this.$left.style.visibility = 'inherit';\n            this.$left.onclick = function () {\n                if ( typeof config.left.action === 'function' ) {\n                    config.left.action();\n                }\n            };\n        }\n    } else if ( this.$left.style.visibility !== 'hidden' ) {\n        this.$left.style.visibility = 'hidden';\n    }\n\n    // right button\n    if ( config.right ) {\n        this.$right.className = config.right.className || ('theme-icon ' + (classes[config.right.code] || 'theme-icon-warning'));\n        if ( config.right.disabled ) {\n            this.$right.classList.add('disabled');\n        } else {\n            $tab.codes[config.right.code] = {action: config.right.action};\n            this.$right.style.visibility = 'inherit';\n            this.$right.onclick = function () {\n                if ( typeof config.right.action === 'function' ) {\n                    config.right.action();\n                }\n            };\n        }\n    } else if ( this.$right.style.visibility !== 'hidden' ) {\n        this.$right.style.visibility = 'hidden';\n    }\n\n    function addClick ( ind ) {\n        return function () {\n            if ( typeof config.middle[ind].action === 'function' ) {\n                config.middle[ind].action();\n            }\n        };\n    }\n\n    // middle buttons\n    if ( config.middle && config.middle.length ) {\n        for ( index = 0; index < config.middle.length; index++ ) {\n            $tab.codes[config.middle[index].code] = {action: config.middle[index].action};\n            if ( config.middle[index].disabled ) {\n                $tab.$body.children[index].classList.add('disabled');\n            } else {\n                $tab.$body.children[index].classList.remove('disabled');\n                $tab.$body.children[index].onclick = addClick(index);\n            }\n            // shortcut\n            $tabChildren = $tab.$body.children[index].children;\n            $tabChildren[0].className = 'iconImg ' +\n                (config.middle[index].className || ('theme-icon ' + (classes[config.middle[index].code] || 'theme-icon-warning')));\n\n            $tabChildren[1].innerText = config.middle[index].title || '';\n        }\n        $tab.$body.classList.remove('hidden');\n    }\n};\n\n\n// public\nmodule.exports = Footer;\n"],"sourceRoot":""}