{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/spa-app/lib/core.js","webpack:///./node_modules/cjs-emitter/index.js","webpack:///./src/js/metrics.js","webpack:///./node_modules/stb-keys/index.js","webpack:///./node_modules/mag-app/index.js","webpack:///./node_modules/stb-app/lib/css.js","webpack:///./node_modules/spa-component/index.js","webpack:///./src/js/main.js","webpack:///./node_modules/mag-app/lib/main.js","webpack:///./node_modules/cjs-query/index.js","webpack:///./src/js/config.js","webpack:///./node_modules/spa-app/lib/events.js","webpack:///./node_modules/stb-shim-classlist/index.js","webpack:///./node_modules/stb-app/lib/metrics.js","webpack:///./node_modules/mag-app/lib/css.js","webpack:///./node_modules/spa-gettext/index.js","webpack:///./node_modules/cjs-gettext/index.js","webpack:///./src/js/pages/main.js","webpack:///./node_modules/spa-keys/index.js","webpack:///./node_modules/stb-component-page/index.js","webpack:///./node_modules/spa-component-page/index.js","webpack:///./src/js/components/grid.js","webpack:///./src/js/modules/app.data.provider.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Emitter","parse","app","query","document","location","search","substring","config","activePage","route","pageTo","data","page","pageFrom","active","id","$node","classList","remove","events","emit","add","showPage","this","from","to","addListener","callback","push","once","self","onceWrapper","removeListener","apply","arguments","addListeners","callbacks","filter","fn","length","undefined","index","event","Array","slice","constructor","480","height","width","availTop","availBottom","availRight","availLeft","listSize","listSmallSize","576","720","1080","keys","back","backspace","channelNext","tab","channelPrev","ok","enter","exit","escape","volumeUp","volumeDown","f1","f2","f3","f4","refresh","frame","phone","set","tv","menu","rewind","forward","audio","standby","keyboard","usbMounted","usbUnmounted","playPause","play","pause","stop","power","record","info","mute","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","link","createElement","rel","href","metrics","head","appendChild","counter","Component","visible","focusable","$body","parent","children","propagate","className","hide","defaultEvents","forEach","eventName","addEventListener","focus","stopPropagation","child","parentNode","item","activeComponent","blur","splice","indexOf","removeChild","activeItem","show","setTimeout","load","core","environment","language","pages","main","window","getCoreInstance","platform","ready","body","setAttribute","type","contextmenu","preventDefault","split","part","decodeURIComponent","stringify","params","encodeURIComponent","join","DOMContentLoaded","unload","error","keydown","eventLocal","code","keyCode","ctrlKey","altKey","shiftKey","keypress","mousewheel","documentElement","DOMTokenList","el","_element","_classCache","classes","replace","token","contains","toString","toggle","Element","screenHeight","screen","availHeight","availWidth","linkCSS","theme","path","Gettext","loader","prepare","gettext","_","pgettext","ngettext","defaultLanguage","xhr","ext","XMLHttpRequest","onload","JSON","responseText","onerror","ontimeout","open","send","meta","msgId","context","plural","evalResult","eval","appList","Page","Grid","getElementById","$pageMainFooter","$pageMainArrowLeft","$pageMainArrowRight","lastIntent","stopKeydown","showDescription","style","visibility","display","showNoAppsNotification","innerHTML","renderApps","provider","pageSize","sizeX","init","sizeY","taskManager","runHistory","$table","xPos","yPos","translate","map","renderItem","cycleX","cycleY","render","$item","$normal","$active","$activeCloseIcon","$activeContent","$normalContent","$normalIcon","$activeIcon","$normalName","$activeName","$normalLock","$activeLock","$normalGradientOverlay","$activeGradientOverlay","locked","disable","backgroundImage","innerText","backgroundColor","color","colors","splashFont","splashBackground","uris","icons","logoNormal","logoActive","data:ready","direction","right","focusItem","click:item","osdStack","osd","$iframe","src","source","sources","system","runApp","applicationState","intent","action","pid","up","$focusItem","close","apps","topApp","pop","onready","localEvent","space","pageUp","pageDown","end","home","left","down","insert","del","focusX","focusY","fill","dX","dY","yCoord","xCoord","renderItemDefault","wheelDeltaY","move","wheelDeltaX","$row","$tbody","itemData","newData","draw","onItemClick","construct","colSpan","rowSpan","normalize","insertRow","insertCell","mark","result","fresh","defaultTranslate","arr","overflow","cycle","$prev","$curr","markItem","state","pageIndex","DataProvider","endIndex","size"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    parse   = require('cjs-query').parse,\n    app     = new Emitter();\n\n\n/**\n * Make the given inactive/hidden page active/visible.\n * Pass some data to the page and trigger the corresponding event.\n *\n * @param {Page} page item to show\n * @param {*} [data] data to send to page\n *\n * @return {boolean} operation status\n */\nfunction showPage ( page, data ) {\n    // page available and can be hidden\n    if ( page && !page.active ) {\n        // apply visibility\n        page.$node.classList.add('active');\n        page.active = true;\n        app.activePage = page;\n\n        debug.info('show component ' + page.name + '#' + page.id, null, {\n            tags: ['show', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' show', 'green');\n\n        // there are some listeners\n        if ( page.events['show'] ) {\n            // notify listeners\n            page.emit('show', {data: data});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n/**\n * Make the given active/visible page inactive/hidden and trigger the corresponding event.\n *\n * @param {Page} page item to hide\n *\n * @return {boolean} operation status\n */\nfunction hidePage ( page ) {\n    // page available and can be hidden\n    if ( page && page.active ) {\n        // apply visibility\n        page.$node.classList.remove('active');\n        page.active  = false;\n        app.activePage = null;\n\n        debug.info('hide component ' + page.name + '#' + page.id, null, {\n            tags: ['hide', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' hide', 'grey');\n\n        // there are some listeners\n        if ( page.events['hide'] ) {\n            // notify listeners\n            page.emit('hide');\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n// url request params\napp.query = parse(document.location.search.substring(1));\n\n\n// global application configuration\n// in config.js file in js root\napp.config = require('app:config');\n\n\n// the only visible page\napp.activePage = null;\n\n\n/**\n * Browse to a given page.\n * Do nothing if the link is invalid. Otherwise hide the current, show new and update the \"previous\" link.\n *\n * @param {Page} pageTo instance of the page to show\n * @param {*} [data] options to pass to the page on show\n *\n * @return {boolean} operation status\n */\napp.route = function ( pageTo, data ) {\n    var pageFrom = app.activePage;\n\n    if ( DEVELOP ) {\n        //if ( router.pages.length > 0 ) {\n        if ( !pageTo || typeof pageTo !== 'object' ) {\n            throw new Error(__filename + ': wrong pageTo type');\n        }\n        if ( !('active' in pageTo) ) {\n            throw new Error(__filename + ': missing field \"active\" in pageTo');\n        }\n        //}\n    }\n\n    // valid not already active page\n    if ( pageTo && !pageTo.active ) {\n        //debug.log('router.navigate: ' + pageTo.id, pageTo === pageFrom ? 'grey' : 'green');\n        debug.info('app route: ' + pageTo.name + '#' + pageTo.id, null, {tags: ['route', pageTo.name, pageTo.id]});\n\n        // update url\n        //location.hash = this.stringify(name, data);\n\n        // apply visibility\n        hidePage(app.activePage);\n        showPage(pageTo, data);\n\n        // there are some listeners\n        if ( this.events['route'] ) {\n            // notify listeners\n            this.emit('route', {from: pageFrom, to: pageTo});\n        }\n\n        // store\n        //this.history.push(pageTo);\n\n        return true;\n    }\n\n    //debug.warn('invalid page to route: ' + pageTo.id, null, {tags: ['route', 'page', pageTo.id]});\n    console.warn('invalid page to route: ' + pageTo.id);\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Base Events Emitter implementation.\n *\n * @see http://nodejs.org/api/events.html\n * @constructor\n *\n * @example\n * var emitter = new Emitter();\n */\nfunction Emitter () {\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // if ( DEVELOP ) {\n    //     if ( typeof this !== 'object' ) { throw new Error(__filename + ': must be constructed via new'); }\n    // }\n\n    /**\n     * Inner hash table for event names and linked callbacks.\n     * Manual editing should be avoided.\n     *\n     * @member {Object.<string, function[]>}\n     *\n     * @example\n     * {\n     *     click: [\n     *         function click1 () { ... },\n     *         function click2 () { ... }\n     *     ],\n     *     keydown: [\n     *         function () { ... }\n     *     ]\n     * }\n     **/\n    this.events = {};\n}\n\n\nEmitter.prototype = {\n    /**\n     * Bind an event to the given callback function.\n     * The same callback function can be added multiple times for the same event name.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.addListener('click', function ( data ) { ... });\n     * // one more click handler\n     * emitter.addListener('click', function ( data ) { ... });\n     */\n    addListener: function ( name, callback ) {\n        console.assert(arguments.length === 2, 'wrong arguments number');\n        console.assert(typeof name === 'string', 'wrong name type');\n        console.assert(name.length > 0, 'empty name');\n        console.assert(typeof callback === 'function', 'callback should be a function');\n\n        // if ( DEVELOP ) {\n        //     if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        //     if ( typeof name !== 'string' || name.length === 0 ) { throw new Error(__filename + ': wrong or empty name'); }\n        //     if ( typeof callback !== 'function' ) { throw new Error(__filename + ': wrong callback type'); }\n        // }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(callback);\n    },\n\n\n    /**\n     * Add a one time listener for the event.\n     * This listener is invoked only the next time the event is fired, after which it is removed.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.once('click', function ( data ) { ... });\n     */\n    once: function ( name, callback ) {\n        // current execution context\n        var self = this;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n        }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(function onceWrapper () {\n            self.removeListener(name, onceWrapper);\n            callback.apply(self, arguments);\n        });\n    },\n\n\n    /**\n     * Apply multiple listeners at once.\n     *\n     * @param {Object} callbacks event names with callbacks\n     *\n     * @example\n     * emitter.addListeners({\n     *     click: function ( data ) {},\n     *     close: function ( data ) {}\n     * });\n     */\n    addListeners: function ( callbacks ) {\n        var name;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof callbacks !== 'object' ) {\n                throw new Error(__filename + ': wrong callbacks type');\n            }\n            if ( Object.keys(callbacks).length === 0 ) {\n                throw new Error(__filename + ': no callbacks given');\n            }\n        }\n\n        for ( name in callbacks ) {\n            if ( callbacks.hasOwnProperty(name) ) {\n                this.addListener(name, callbacks[name]);\n            }\n        }\n    },\n\n\n    /**\n     * Remove all instances of the given callback.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to remove\n     *\n     * @example\n     * emitter.removeListener('click', func1);\n     */\n    removeListener: function ( name, callback ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n            if ( this.events[name] && !Array.isArray(this.events[name]) ) {\n                throw new Error(__filename + ': corrupted inner data');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( this.events[name] ) {\n            // rework the callback list to exclude the given one\n            this.events[name] = this.events[name].filter(function callbacksFilter ( fn ) { return fn !== callback; });\n            // event has no more callbacks so clean it\n            if ( this.events[name].length === 0 ) {\n                // as if there were no listeners at all\n                this.events[name] = undefined;\n            }\n        }\n    },\n\n\n    /**\n     * Remove all callbacks for the given event name.\n     * Without event name clears all events.\n     *\n     * @param {string} [name] event identifier\n     *\n     * @example\n     * emitter.removeAllListeners('click');\n     * emitter.removeAllListeners();\n     *\n     * @deprecated\n     */\n    /*removeAllListeners: function ( name ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 0 && (typeof name !== 'string' || name.length === 0) ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // check input\n        if ( arguments.length === 0 ) {\n            // no arguments so remove everything\n            this.events = {};\n        } else if ( name ) {\n            if ( DEVELOP ) {\n                if ( this.events[name] ) { throw new Error(__filename + ': event is not removed'); }\n            }\n\n            // only name is given so remove all callbacks for the given event\n            // but object structure modification should be avoided\n            this.events[name] = undefined;\n        }\n    },*/\n\n\n    /**\n     * Execute each of the listeners in the given order with the supplied arguments.\n     *\n     * @param {string} name event identifier\n     *\n     * @example\n     * emitter.emit('init');\n     * emitter.emit('click', {src: panel1, dst: panel2});\n     * emitter.emit('load', error, data);\n     *\n     * // it's a good idea to emit event only when there are some listeners\n     * if ( this.events['click'] ) {\n     *     this.emit('click', {event: event});\n     * }\n     */\n    emit: function ( name ) {\n        var event = this.events[name],\n            index;\n\n        if ( DEVELOP ) {\n            if ( arguments.length < 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( event ) {\n            if ( DEVELOP ) {\n                if ( !Array.isArray(event) ) {\n                    throw new Error(__filename + ': wrong event type');\n                }\n            }\n\n            for ( index = 0; index < event.length; index++ ) {\n                if ( DEVELOP ) {\n                    if ( typeof event[index] !== 'function' ) {\n                        throw new Error(__filename + ': wrong event callback type');\n                    }\n                }\n\n                // invoke the callback with parameters\n                event[index].apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n    }\n};\n\n\n// correct constructor name\nEmitter.prototype.constructor = Emitter;\n\n\n// public\nmodule.exports = Emitter;\n","/**\n * Application geometry options for js/less.\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    480: {\n        // screen base dimension\n        height: 480,\n        width: 720,\n        // safe zone margins\n        availTop: 24,\n        availBottom: 24,\n        availRight: 62,\n        availLeft: 62,\n        // project-specific vars\n        listSize: 4,\n        listSmallSize: 2\n    },\n\n    576: {\n        // screen base dimension\n        height: 576,\n        width: 720,\n        // safe zone margins\n        availTop: 24,\n        availBottom: 24,\n        availRight: 62,\n        availLeft: 62,\n        // project-specific vars\n        listSize: 4,\n        listSmallSize: 2\n    },\n\n    720: {\n        // screen base dimension\n        height: 720,\n        width: 1280,\n        // safe zone margins\n        availTop: 28,\n        availBottom: 28,\n        availRight: 66,\n        availLeft: 66,\n        // project-specific vars\n        listSize: 6,\n        listSmallSize: 5\n    },\n\n    1080: {\n        // screen base dimension\n        height: 1080,\n        width: 1920,\n        // safe zone margins\n        availTop: 42,\n        availBottom: 42,\n        availRight: 75,\n        availLeft: 75,\n        // project-specific vars\n        listSize: 6,\n        listSmallSize: 4\n    }\n};\n","/**\n * Global list of non-printable control key codes.\n *\n * At the moment `keypress` and `keydown` events are emitted for the same keys (for both printable and non-printable characters).\n *\n * WARNING!!! All codes in this file (except 'volumeUp' and 'volumeDown')\n * are used in window 'keydown' handler to prevent wrong 'keypress' firings.\n * If you add new code to this file 'keypress' event with this code will never fire.\n *\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar keys = require('spa-keys');\n\n\n// extend with additional codes\nkeys.back         = keys.backspace;\nkeys.channelNext  = keys.tab;        // Tab\nkeys.channelPrev  = keys.tab + 's';  // Shift+Tab\nkeys.ok           = keys.enter;      // Enter\nkeys.exit         = keys.escape;     // Esc\nkeys.volumeUp     = 107;             // NUMPAD +\nkeys.volumeDown   = 109;             // NUMPAD -\nkeys.f1           = 112 + 'c';       // Ctrl+F1\nkeys.f2           = 113 + 'c';       // Ctrl+F2\nkeys.f3           = 114 + 'c';       // Ctrl+F3\nkeys.f4           = 115 + 'c';       // Ctrl+F4\nkeys.refresh      = 116 + 'c';       // Ctrl+F5\nkeys.frame        = 117 + 'c';       // Ctrl+F6\nkeys.phone        = 119 + 'c';       // Ctrl+F8\nkeys.set          = 120 + 'c';       // Ctrl+F9\nkeys.tv           = 121 + 'c';       // Ctrl+F10\nkeys.menu         = 122 + 'c';       // Ctrl+F11\nkeys.app          = 123 + 'c';       // Ctrl+F12\nkeys.rewind       = 66  + 'a';       // Alt+B\nkeys.forward      = 70  + 'a';       // Alt+F\nkeys.audio        = 71  + 'a';       // Alt+G\nkeys.standby      = 74  + 'a';       // Alt+J\nkeys.keyboard     = 76  + 'a';       // Alt+L\nkeys.usbMounted   = 80  + 'a';       // Alt+P\nkeys.usbUnmounted = 81  + 'a';       // Alt+Q\nkeys.playPause    = 82  + 'a';       // Alt+R\nkeys.play         = -1;              // should be redefined on some platforms\nkeys.pause        = -1;              // should be redefined on some platforms\nkeys.stop         = 83  + 'a';       // Alt+S\nkeys.power        = 85  + 'a';       // Alt+U\nkeys.record       = 87  + 'a';       // Alt+W\nkeys.info         = 89  + 'a';       // Alt+Y\nkeys.mute         = 192 + 'a';\nkeys.digit0       = 48;\nkeys.digit1       = 49;\nkeys.digit2       = 50;\nkeys.digit3       = 51;\nkeys.digit4       = 52;\nkeys.digit5       = 53;\nkeys.digit6       = 54;\nkeys.digit7       = 55;\nkeys.digit8       = 56;\nkeys.digit9       = 57;\n\n\n// public\nmodule.exports = keys;\n\n// public\n// module.exports = {\n//     getCode: function ( event ) {\n//         var code = event.keyCode;\n//\n//         // apply key modifiers\n//         if ( event.shiftKey ) { code += 1000; }\n//         if ( event.altKey )   { code += 2000; }\n//\n//         return code;\n//     },\n//\n//     codes: {\n//         back:         8,    // Backspace\n//         channelPrev:  1009, // Shift+Tab\n//         channelNext:  9,    // Tab\n//         ok:           13,   // Enter\n//         exit:         27,   // Esc\n//         pageUp:       33,\n//         pageDown:     34,\n//         end:          35,\n//         home:         36,\n//         left:         37,\n//         up:           38,\n//         right:        39,\n//         down:         40,\n//         'delete':     46,\n//         volumeUp:     107,  // NUMPAD +\n//         volumeDown:   109,  // NUMPAD -\n//         f1:           112,  // F1\n//         f2:           113,  // F2\n//         f3:           114,  // F3\n//         f4:           115,  // F4\n//         refresh:      116,  // F5\n//         frame:        117,  // F6\n//         phone:        119,  // F8\n//         set:          120,  // F9\n//         tv:           121,  // F10\n//         menu:         122,  // F11\n//         app:          123,  // F12\n//         rewind:       2066, // Alt+B\n//         forward:      2070, // Alt+F\n//         audio:        2071, // Alt+G\n//         standby:      2074, // Alt+J\n//         keyboard:     2076, // Alt+L\n//         usbMounted:   2080, // Alt+P\n//         usbUnmounted: 2081, // Alt+Q\n//         playPause:    2082, // Alt+R\n//         stop:         2083, // Alt+S\n//         power:        2085, // Alt+U\n//         record:       2087, // Alt+W\n//         info:         2089, // Alt+Y\n//         mute:         2192\n//     }\n// };\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar app = require('./lib/main');\n\n\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core');\n//    metrics = require('app:metrics'),\n//    linkCSS;\n\n\n// global link\n//app.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\n//app.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\n//app.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n// // set max browser window size\n// window.moveTo(0, 0);\n// window.resizeTo(metrics.width, metrics.height);\n\n// load CSS file base on resolution\n/*linkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = 'css/' + (DEVELOP ? 'develop.' : 'release.') + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);*/\n\n\n// public\nmodule.exports = function ( name ) {\n    var link = document.createElement('link');\n\n    link.rel  = 'stylesheet';\n    link.href = 'css/' + name + '.' + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\n    document.head.appendChild(link);\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    Emitter = require('cjs-emitter'),\n    counter = 0;\n\n\n/**\n * Base component implementation.\n *\n * Visual element that can handle sub-components.\n * Each component has a DOM element container $node with a set of classes:\n * \"component\" and some specific component class names depending on the hierarchy, for example \"page\".\n * Each component has a unique ID given either from $node.id or from data.id. If not given will generate automatically.\n *\n * @constructor\n * @extends Emitter\n *\n * @param {Object} [config={}] init parameters\n * @param {Element} [config.id] component unique identifier (generated if not set)\n * @param {string} [config.className] space-separated list of classes for \"className\" property of this.$node\n * @param {Element} [config.$node] DOM element/fragment to be a component outer container\n * @param {Element} [config.$body] DOM element/fragment to be a component inner container (by default is the same as $node)\n * @param {Component} [config.parent] link to the parent component which has this component as a child\n * @param {Array.<Component>} [config.children=[]] list of components in this component\n * @param {Object.<string, function>} [config.events={}] list of event callbacks\n * @param {boolean} [config.visible=true] component initial visibility state flag\n * @param {boolean} [config.focusable=true] component can accept focus or not\n * @param {boolean} [config.propagate=false] allow to emit events to the parent component\n *\n * @fires module:stb/component~Component#click\n *\n * @example\n * var component = new Component({\n *     $node: document.getElementById(id),\n *     className: 'bootstrap responsive',\n *     events: {\n *         click: function () { ... }\n *     }\n * });\n * component.add( ... );\n * component.focus();\n */\nfunction Component ( config ) {\n    // current execution context\n    var self = this,\n        name;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.id && typeof config.id !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.id');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$node && !(config.$node instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$node type');\n        }\n        if ( config.$body && !(config.$body instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$body type');\n        }\n        if ( config.parent && !(config.parent instanceof Component) ) {\n            throw new Error(__filename + ': wrong config.parent type');\n        }\n        if ( config.children && !Array.isArray(config.children) ) {\n            throw new Error(__filename + ': wrong config.children type');\n        }\n    }\n\n    /**\n     * Component visibility state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.visible = true;\n\n    /**\n     * Component can accept focus or not.\n     *\n     * @type {boolean}\n     */\n    this.focusable = true;\n\n    /**\n     * DOM outer handle.\n     *\n     * @type {Element}\n     */\n    this.$node = null;\n\n    /**\n     * DOM inner handle.\n     * In simple cases is the same as $node.\n     *\n     * @type {Element}\n     */\n    this.$body = null;\n\n    /**\n     * Link to the parent component which has this component as a child.\n     *\n     * @type {Component}\n     */\n    this.parent = null;\n\n    /**\n     * List of all children components.\n     *\n     * @type {Component[]}\n     */\n    this.children = [];\n\n    /**\n     * allow to emit events to the parent component\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.propagate = !!config.propagate;\n\n    // parent constructor call\n    Emitter.call(this);\n\n    // outer handle - empty div in case nothing is given\n    this.$node = config.$node || document.createElement('div');\n\n    // inner handle - the same as outer handler in case nothing is given\n    this.$body = config.$body || this.$node;\n\n    // set CSS class names\n    //this.$node.className += ' component ' + (config.className || '');\n    // previous approach is not good as it mess with components hierarchy\n    this.$node.className = this.name + ' ' + (config.className || '');\n\n    // apply component id if given, generate otherwise\n    this.id = config.id || this.$node.id || 'cid' + counter++;\n\n    // apply hierarchy\n    if ( config.parent ) {\n        // add to parent component\n        config.parent.add(this);\n    }\n\n    // apply given visibility\n    if ( config.visible === false ) {\n        // default state is visible\n        this.hide();\n    }\n\n    // apply focus handling method\n    if ( config.focusable === false ) {\n        // can't accept focus\n        this.focusable = false;\n    }\n\n    // a descendant defined own events\n    if ( this.defaultEvents ) {\n        // sanitize\n        config.events = config.events || {};\n\n        if ( DEVELOP ) {\n            if ( typeof config.events !== 'object' ) {\n                throw new Error(__filename + ': wrong config.events type');\n            }\n            if ( typeof this.defaultEvents !== 'object' ) {\n                throw new Error(__filename + ': wrong this.defaultEvents type');\n            }\n        }\n\n        for ( name in this.defaultEvents ) {\n            // overwrite default events with user-defined\n            config.events[name] = config.events[name] || this.defaultEvents[name];\n        }\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( eventName ) {\n            self.addListener(eventName, config.events[eventName]);\n        });\n    }\n\n    // apply the given children components\n    if ( config.children ) {\n        // apply\n        this.add.apply(this, config.children);\n    }\n\n    // component activation by mouse\n    this.$node.addEventListener('click', function ( event ) {\n        // left mouse button\n        //if ( event.button === 0 ) {\n        // activate if possible\n        self.focus();\n\n        // there are some listeners\n        if ( self.events['click'] ) {\n            /**\n             * Mouse click event.\n             *\n             * @event module:stb/component~Component#click\n             *\n             * @type {Object}\n             * @property {Event} event click event data\n             */\n            self.emit('click', event);\n        }\n        //}\n\n        if ( DEVELOP ) {\n            // middle mouse button\n            if ( event.button === 1 ) {\n                //debug.inspect(self, 0);\n                debug.info('\"window.link\" or \"' + self.id + '.component\"', 'this component is now available in global scope');\n                window.link = self;\n                self.$node.classList.toggle('wired');\n            }\n        }\n\n        event.stopPropagation();\n    });\n\n    if ( DEVELOP ) {\n        // expose inner ID to global scope\n        window[self.id] = self.$node;\n\n        // expose a link\n        this.$node.component = this.$body.component = this;\n        this.$node.title = this.name + '#' + this.id + ' (outer)';\n        this.$body.title = this.name + '#' + this.id + ' (inner)';\n    }\n\n    debug.info('create component ' + this.name + '#' + this.id, null, {\n        tags: ['create', 'component', this.name, this.id]\n    });\n}\n\n\n// inheritance\nComponent.prototype = Object.create(Emitter.prototype);\nComponent.prototype.constructor = Component;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nComponent.prototype.defaultEvents = null;\n\n\n/**\n * Add a new component as a child.\n *\n * @param {...Component} [child] variable number of elements to append\n *\n * @files Component#add\n *\n * @example\n * panel.add(\n *     new Button( ... ),\n *     new Button( ... )\n * );\n */\nComponent.prototype.add = function ( child ) {\n    var index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        child = arguments[index];\n\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        // apply\n        this.children.push(child);\n        child.parent = this;\n\n        // correct DOM parent/child connection if necessary\n        if ( child.$node && child.$node.parentNode === null ) {\n            this.$body.appendChild(child.$node);\n        }\n\n        debug.info('add component ' + child.name + '#' + child.id + ' to ' + this.name + '#' + this.id, null, {\n            tags: ['add', 'component', this.name, this.id, child.name, child.id]\n        });\n\n        // there are some listeners\n        if ( this.events['add'] ) {\n            /**\n             * A child component is added.\n             *\n             * @event module:stb/component~Component#add\n             *\n             * @type {Object}\n             * @property {Component} item new component added\n             */\n            this.emit('add', {item: child});\n        }\n\n        //debug.log('component ' + this.name + '#' + this.id + ' new child: ' + child.name + '#' + child.id);\n    }\n};\n\n\n/* @todo: consider activation in future */\n///**\n// * Insert component into the specific position.\n// *\n// * @param {Component} child component instance to insert\n// * @param {number} index insertion position\n// */\n//Component.prototype.insert = function ( child, index ) {\n//    var prevIndex = this.children.indexOf(child);\n//\n//    if ( DEVELOP ) {\n//        if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n//        if ( !(child instanceof Component) ) { throw new Error(__filename + ': wrong child type'); }\n//    }\n//\n//    if ( prevIndex !== -1 ) {\n//        this.children.splice(prevIndex, 1);\n//        this.$body.removeChild(child.$node);\n//    }\n//\n//    if ( index === this.children.length ) {\n//        this.$body.appendChild(child.$node);\n//    } else {\n//        this.$body.insertBefore(child.$node, this.$body.children[index]);\n//    }\n//    this.children.splice(index, 0, child);\n//\n//    if ( !child.parent ) {\n//        child.parent = this;\n//    }\n//};\n\n\n/**\n * Delete this component and clear all associated events.\n *\n * @fires module:stb/component~Component#remove\n */\nComponent.prototype.remove = function () {\n    // really inserted somewhere\n    if ( this.parent ) {\n        if ( DEVELOP ) {\n            if ( !(this.parent instanceof Component) ) {\n                throw new Error(__filename + ': wrong this.parent type');\n            }\n        }\n\n        // active at the moment\n        if ( app.activePage.activeComponent === this ) {\n            this.blur();\n            this.parent.focus();\n        }\n        this.parent.children.splice(this.parent.children.indexOf(this), 1);\n    }\n\n    // remove all children\n    this.children.forEach(function ( child ) {\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        child.remove();\n    });\n\n    this.$node.parentNode.removeChild(this.$node);\n\n    // there are some listeners\n    if ( this.events['remove'] ) {\n        /**\n         * Delete this component.\n         *\n         * @event module:stb/component~Component#remove\n         */\n        this.emit('remove');\n    }\n\n    // remove all listeners\n    this.events = {};\n\n    //debug.log('component ' + this.name + '#' + this.id + ' remove', 'red');\n    debug.info('remove component ' + this.name + '#' + this.id, null, {\n        tags: ['remove', 'component', this.name, this.id]\n    });\n};\n\n\n/**\n * Activate the component.\n * Notify the owner-page and apply CSS class.\n *\n * @param {Object} [data] custom data which passed into handlers\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#focus\n */\nComponent.prototype.focus = function ( data ) {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // this is a visual component on a page\n    // not already focused and can accept focus\n    if ( this.focusable && this !== activeItem ) {\n        // notify the current active component\n        if ( activeItem ) { activeItem.blur(); }\n\n        /* eslint consistent-this: 0 */\n\n        // apply\n        activePage.activeComponent = activeItem = this;\n        activeItem.$node.classList.add('focus');\n\n        //debug.log('component ' + this.name + '#' + this.id + ' focus');\n        debug.info('focus component ' + this.name + '#' + this.id, null, {\n            tags: ['focus', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( activeItem.events['focus'] ) {\n            /**\n             * Make this component focused.\n             *\n             * @event module:stb/component~Component#focus\n             */\n            activeItem.emit('focus', data);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Remove focus.\n * Change page.activeComponent and notify subscribers.\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#blur\n */\nComponent.prototype.blur = function () {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // apply visuals anyway\n    this.$node.classList.remove('focus');\n\n    // this is the active component\n    if ( this === activeItem ) {\n        activePage.activeComponent = null;\n\n        //debug.log('component ' + this.name + '#' + this.id + ' blur', 'grey');\n        debug.info('blur component ' + this.name + '#' + this.id, null, {\n            tags: ['blur', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['blur'] ) {\n            /**\n             * Remove focus from this component.\n             *\n             * @event module:stb/component~Component#blur\n             */\n            this.emit('blur');\n        }\n\n        return true;\n    }\n\n    debug.warn('component ' + this.name + '#' + this.id + ' attempt to blur without link to a page', null, {\n        tags: ['blur', 'component', this.name, this.id]\n    });\n\n    // nothing was done\n    return false;\n};\n\n\n/*function show ( self, data ) {\n    // correct style\n    self.$node.classList.remove('hidden');\n    // flag\n    self.visible = true;\n\n    debug.info('show component ' + self.name + '#' + self.id, null, {\n        tags: ['show', 'component', self.name, self.id]\n    });\n\n    // there are some listeners\n    if ( self.events['show'] ) {\n        /!**\n         * Make the component visible.\n         *\n         * @event module:stb/component~Component#show\n         *!/\n        self.emit('show', data);\n    }\n}*/\n\n/**\n * Make the component visible and notify subscribers.\n *\n * @param {Object} [data] custom data which passed into handlers\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#show\n */\nComponent.prototype.show = function ( data, callback ) {\n    //var self = this;\n\n    // is it hidden\n    if ( !this.visible ) {\n        /*if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(function () {\n                show(self, data);\n                callback();\n            });\n        } else {\n            // sync call\n            show(this, data);\n        }*/\n\n        // correct style\n        this.$node.classList.remove('hidden');\n        // flag\n        this.visible = true;\n\n        debug.info('show component ' + this.name + '#' + this.id, null, {\n            tags: ['show', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['show'] ) {\n            /**\n             * Make the component visible.\n             *\n             * @event module:stb/component~Component#show\n             */\n            this.emit('show', data);\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Make the component hidden and notify subscribers.\n *\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#hide\n */\nComponent.prototype.hide = function ( callback ) {\n    // is it visible\n    if ( this.visible ) {\n        // correct style\n        this.$node.classList.add('hidden');\n        // flag\n        this.visible = false;\n\n        debug.info('hide component ' + this.name + '#' + this.id, null, {\n            tags: ['hide', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['hide'] ) {\n            /**\n             * Make the component hidden.\n             *\n             * @event module:stb/component~Component#hide\n             */\n            this.emit('hide');\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = Component;\n","/**\n * Main application entry point.\n */\n\n'use strict';\n\nvar app = require('mag-app');\n\n\n// everything is ready\napp.once('load', function () {\n    require('spa-gettext').load({name: core.environment.language}, function () {\n        // load pages\n        app.pages = {\n            main: require('./pages/main')\n        };\n\n        // show main page\n        app.route(app.pages.main);\n    });\n});\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app    = require('spa-app/lib/core'),\n    events = require('spa-app/lib/events');\n\n\n// get instance\nwindow.core = window.parent.getCoreInstance(window, app);\n\n// shims\nrequire('stb-shim-classlist');\n\n// apply geometry\nrequire('stb-app/lib/metrics');\n\n// load sdk css\nrequire('stb-app/lib/css')('sdk');\n\n// load theme css\nrequire('./css');\n\n// load app css\nrequire('stb-app/lib/css')('app');\n\n/**\n * Specify platform name\n *\n * @type {string}\n */\napp.platform = 'mag';\n\n/**\n * Show app.\n */\napp.ready = function () {\n    // if ( this.events['show'] ) {\n    //     this.emit('show');\n    // }\n    window.core.call('app:ready');\n};\n\n\n/**\n * Exit from app.\n * Destroy all application instance.\n * If callback function provided, and callback returns boolean 'true', application will stay alive.\n *\n * @fires module:/stb/app#exit\n */\napp.exit = function () {\n    if ( app.events['exit'] ) {\n        app.emit('exit');\n    }\n\n    core.call('exit');\n};\n\n\nevents.load = function ( event ) {\n    //window.core = window.parent.getCoreInstanse(window, app);\n    document.body.setAttribute('platform', app.platform);\n\n    if ( core.ready ) {\n        if ( app.events['load'] ) {\n            // notify listeners\n            app.emit('load', {});\n        }\n    } else {\n        core.once('load', function () {\n            //core.ready = true;\n            if ( app.events[event.type] ) {\n                // notify listeners\n                app.emit(event.type, event);\n            }\n        });\n    }\n};\n\n\n// activate development mechanisms and tools\nif ( DEVELOP ) {\n    //require('stb-develop');\n    require('./develop/main');\n} else {\n    // disable context menu\n    events.contextmenu = function ( event ) {\n        event.preventDefault();\n    };\n}\n\n\n//apply DOM events\nObject.keys(events).forEach(function ( name ) {\n    window.addEventListener(name, events[name]);\n});\n\n\n// new way of string handling\n// all strings are in UTF-16\n// since stbapp 2.18\n// if ( window.gSTB && gSTB.SetNativeStringMode ) {\n//     /* eslint new-cap: 0 */\n//     gSTB.SetNativeStringMode(true);\n// }\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nmodule.exports = {\n    /**\n     * Parse the given location search string into object.\n     *\n     * @param {string} query string to parse\n     *\n     * @return {Object.<string, string>} result data\n     */\n    parse: function ( query ) {\n        var data = {};\n\n        // parse and fill the data\n        query.split('&').forEach(function ( part ) {\n            part = part.split('=');\n            // valid number on params\n            if ( part.length === 2 ) {\n                data[part[0]] = decodeURIComponent(part[1]);\n            }\n        });\n\n        return data;\n    },\n\n\n    /**\n     * Make uri query part in a string form.\n     *\n     * @param {Object} params data to stringify\n     *\n     * @return {string} query string\n     */\n    stringify: function ( params ) {\n        var data = [];\n\n        Object.keys(params).forEach(function ( name ) {\n            data.push(name + '=' + encodeURIComponent(params[name]));\n        });\n\n        return data.join('&');\n    }\n};\n","/**\n * Global application configuration.\n * Can store run-time options, API urls, paths, execution flags and so on.\n * Automatically loaded on application initialization and available as app.config.\n */\n\n'use strict';\n\n// public\nmodule.exports = {};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('./core');\n\n\n// public\nmodule.exports = {\n    DOMContentLoaded: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // there are some listeners\n        if ( app.events['dom'] ) {\n            // notify listeners\n            app.emit('dom', event);\n            //console.log('DOMContentLoaded');\n        }\n    },\n\n    /**\n     * The load event is fired when a resource and its dependent resources have finished loading.\n     *\n     * Control flow:\n     *   1. Global handler.\n     *   2. Each page handler.\n     *   3. Application DONE event.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/load\n     *\n     * @param {Event} event generated object with event data\n     */\n    load: function ( event ) {\n        //var path;\n\n        //debug.event(event);\n        //console.log(event);\n\n        // time mark\n        //app.data.time.load = event.timeStamp;\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' load', 'green');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n\n        // time mark\n        //app.data.time.done = +new Date();\n\n        // everything is ready\n        // and there are some listeners\n        // if ( app.events['done'] ) {\n        //     // notify listeners\n        //     app.emit('done', event);\n        // }\n    },\n\n    /**\n     * The unload event is fired when the document or a child resource is being unloaded.\n     *\n     * Control flow:\n     *   1. Each page handler.\n     *   2. Global handler.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/unload\n     *\n     * @param {Event} event generated object with event data\n     */\n    unload: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' unload', 'red');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n    },\n\n    /**\n     * The error event is fired when a resource failed to load.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/error\n     *\n     * @param {Event} event generated object with event data\n     */\n    error: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n        //debug.fail('app event: ' + event.message, event, {tags: [event.type, 'event']});\n        console.error('app event: ' + event.message, event);\n    },\n\n    /**\n     * The keydown event is fired when a key is pressed down.\n     * Set event.stop to true in order to prevent bubbling.\n     *\n     * Control flow:\n     *   1. Current active component on the active page.\n     *   2. Current active page itself.\n     *   3. Application.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keydown\n     *\n     * @param {Event} event generated object with event data\n     */\n    keydown: function ( event ) {\n        var page = app.activePage,\n            eventLocal = {\n                code: event.keyCode,\n                stop: false\n            },\n            activeComponent;\n\n        if ( DEVELOP ) {\n            if ( !page ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        // filter phantoms\n        //if ( event.keyCode === 0 ) { return; }\n\n        // combined key code\n        //event.code = event.keyCode;\n\n        // apply key modifiers\n        if ( event.ctrlKey )  { eventLocal.code += 'c'; }\n        if ( event.altKey )   { eventLocal.code += 'a'; }\n        if ( event.shiftKey ) { eventLocal.code += 's'; }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + eventLocal.code, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + eventLocal.code, event);\n\n        // page.activeComponent can be set to null in event handles\n        activeComponent = page.activeComponent;\n\n        // current component handler\n        if ( activeComponent && activeComponent !== page ) {\n            // component is available and not page itself\n            if ( activeComponent.events[event.type] ) {\n                // there are some listeners\n                activeComponent.emit(event.type, eventLocal, event);\n            }\n\n            // todo: bubble event recursively\n            // bubbling\n            if (\n                !eventLocal.stop &&\n                activeComponent.propagate &&\n                activeComponent.parent &&\n                activeComponent.parent.events[event.type]\n            ) {\n                activeComponent.parent.emit(event.type, eventLocal, event);\n            }\n        }\n\n        // page handler\n        if ( !eventLocal.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, eventLocal, event);\n            }\n\n            // global app handler\n            if ( !event.stop ) {\n                // not prevented\n                if ( app.events[event.type] ) {\n                    // there are some listeners\n                    app.emit(event.type, eventLocal, event);\n                }\n            }\n        }\n\n        //// suppress non-printable keys in stb device (not in your browser)\n        //if ( app.data.host && keyCodes[event.code] ) {\n        //    event.preventDefault();\n        //}\n    },\n\n    /**\n     * The keypress event is fired when press a printable character.\n     * Delivers the event only to activeComponent at active page.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keypress\n     *\n     * @param {Event} event generated object with event data\n     * @param {string} event.char entered character\n     */\n    keypress: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + event.key, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + event.key, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n    },\n\n    /**\n     * The click event is fired when a pointing device button (usually a mouse button) is pressed and released on a single element.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/click\n     *\n     * @param {Event} event generated object with event data\n     */\n    /*click: function ( event ) {\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n     },*/\n\n    /**\n     * The contextmenu event is fired when the right button of the mouse is clicked (before the context menu is displayed),\n     * or when the context menu key is pressed (in which case the context menu is displayed at the bottom left of the focused\n     * element, unless the element is a tree, in which case the context menu is displayed at the bottom left of the current row).\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/contextmenu\n     *\n     * @param {Event} event generated object with event data\n     */\n    // contextmenu: function ( event ) {\n    //     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n    //\n    //     if ( !DEVELOP ) {\n    //         // disable right click in release mode\n    //         event.preventDefault();\n    //     }\n    // },\n\n    /*contextmenu: function ( event ) {\n     //var kbEvent = {}; //Object.create(document.createEvent('KeyboardEvent'));\n\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n\n     //kbEvent.type    = 'keydown';\n     //kbEvent.keyCode = 8;\n\n     //debug.log(kbEvent.type);\n\n     //globalEventListenerKeydown(kbEvent);\n     //var event = document.createEvent('KeyboardEvent');\n     //event.initEvent('keydown', true, true);\n\n     //document.dispatchEvent(kbEvent);\n\n     if ( !DEVELOP ) {\n     // disable right click in release mode\n     event.preventDefault();\n     }\n     },*/\n\n    /**\n     * The wheel event is fired when a wheel button of a pointing device (usually a mouse) is rotated.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel\n     *\n     * @param {Event} event generated object with event data\n     */\n    mousewheel: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n\n        // page handler\n        if ( !event.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, event);\n            }\n        }\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint-disable */\n\n'use strict';\n\n\nif ( !document.documentElement.classList ) {\n    var prototype = Array.prototype,\n        indexOf   = prototype.indexOf,\n        slice     = prototype.slice,\n        push      = prototype.push,\n        splice    = prototype.splice,\n        join      = prototype.join;\n\n    window.DOMTokenList = function ( el ) {\n        this._element = el;\n        if (el.className !== this._classCache) {\n            this._classCache = el.className;\n            if (!this._classCache) { return; }\n            var classes = this._classCache.replace(/^\\s+|\\s+$/g,'').split(/\\s+/),\n                i;\n            for (i = 0; i < classes.length; i++) {\n                push.call(this, classes[i]);\n            }\n        }\n    };\n\n    window.DOMTokenList.prototype = {\n        add: function ( token ) {\n            if(this.contains(token)) { return; }\n            push.call(this, token);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        contains: function ( token ) {\n            return indexOf.call(this, token) !== -1;\n        },\n\n        item: function ( index ) {\n            return this[index] || null;\n        },\n\n        remove: function ( token ) {\n            var i = indexOf.call(this, token);\n            if (i === -1) {\n                return;\n            }\n            splice.call(this, i, 1);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        toString: function () {\n            return join.call(this, ' ');\n        },\n\n        toggle: function ( token ) {\n            if (!this.contains(token)) {\n                this.add(token);\n            } else {\n                this.remove(token);\n            }\n            return this.contains(token);\n        }\n    };\n\n    Object.defineProperty(Element.prototype, 'classList', {\n        get: function () {\n            return new window.DOMTokenList(this);\n        }\n    });\n}\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    metrics = require('app:metrics');\n\n\n// global link\napp.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\napp.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\napp.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n\n// public\n//module.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core'),\n    //metrics = require('app:metrics'),\n    linkCSS;\n\n\n//window.core = window.parent.getCoreInstance(window, app);\n\n\nlinkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = window.core.theme.path + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);\n\n\n// public\nmodule.exports = linkCSS;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    Gettext = require('cjs-gettext'),\n    loader  = new Emitter();\n\n\n/**\n * Wrap the given data with gettext instance\n * and export methods to the global scope.\n *\n * @param {Object} [data] localization data\n *\n * @return {Gettext} gettext instance\n */\nfunction prepare ( data ) {\n    var gettext = new Gettext(data);\n\n    // make it global\n    window.gettext  = window._ = gettext.gettext;\n    window.pgettext = gettext.pgettext;\n    window.ngettext = gettext.ngettext;\n\n    return gettext;\n}\n\n\n/**\n * Main application language\n */\nloader.defaultLanguage = 'en';\n\n\n/**\n * Simple gettext implementation.\n *\n * @param {Object} config options\n * @param {string} [config.path=lang] relative path to project root\n * @param {string} config.name language name\n * @param {string} [config.ext=json] language file extension\n * @param {function} callback hook on ready\n *\n * @return {boolean} flag is ajax request was made\n */\nloader.load = function ( config, callback ) {\n    var xhr;\n\n    if ( DEVELOP ) {\n        if ( !config.name || typeof config.name !== 'string' ) {\n            throw new Error(__filename + ': config.name must be a nonempty string');\n        }\n        if ( typeof callback !== 'function' ) {\n            throw new Error(__filename + ': wrong callback type');\n        }\n    }\n\n    // defaults\n    config.ext  = config.ext  || 'json';\n    config.path = config.path || 'lang';\n\n    // is it necessary to request a localization file?\n    if ( config.name === loader.defaultLanguage ) {\n        // no\n        prepare();\n        callback(null);\n\n        return false;\n    }\n\n    // yes\n    xhr = new XMLHttpRequest();\n\n    xhr.onload = function () {\n        var json;\n\n        try {\n            json = JSON.parse(xhr.responseText);\n\n            prepare(json);\n            callback(null);\n\n            // there are some listeners\n            if ( loader.events['load'] ) {\n                // notify listeners\n                loader.emit('load');\n            }\n        } catch ( error ) {\n            xhr.onerror(error);\n        }\n    };\n\n    xhr.ontimeout = xhr.onerror = function ( error ) {\n        prepare();\n        callback(error);\n\n        // there are some listeners\n        if ( loader.events['error'] ) {\n            // notify listeners\n            loader.emit('error', error);\n        }\n    };\n\n    xhr.open('GET', config.path + '/' + config.name + '.' + config.ext, true);\n    xhr.send(null);\n\n    return true;\n};\n\n\n// public\nmodule.exports = loader;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Translations handler.\n *\n * @constructor\n *\n * @param {Object} config init parameters\n */\nfunction Gettext ( config ) {\n    var data, meta;\n\n    // sanitize\n    config   = config || {};\n    data     = config.data || {};\n    data[''] = data[''] || {};\n\n    // shortcut\n    meta = config.meta;\n\n    /**\n     * Display the native language translation of a textual message.\n     *\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.gettext = function ( msgId ) {\n        return data[''][msgId] || msgId;\n    };\n\n\n    /**\n     * The \"p\" in \"pgettext\" stands for \"particular\": fetches a particular translation of the textual message.\n     *\n     * @param {string} context message context\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.pgettext = function ( context, msgId ) {\n        return data[context] && data[context][msgId] || msgId;\n    };\n\n\n    /**\n     * Display the native language translation of a textual message whose grammatical form depends on a number.\n     *\n     * @param {string} msgId textual message in a singular form\n     * @param {string} plural textual message in a plural form\n     * @param {number} value message number\n     *\n     * @return {string} translated text\n     */\n    this.ngettext = function ( msgId, plural, value ) {\n        /* eslint no-unused-vars: 0 */\n        /* eslint no-eval: 0 */\n        /* eslint id-length: 0 */\n        var n, evalResult;\n\n        if ( DEVELOP ) {\n            if ( Number(value) !== value ) {\n                throw new Error(__filename + ': value must be a number');\n            }\n        }\n\n        if ( data && meta && data[''][msgId] ) {\n            evalResult = eval('n = ' + value + '; ' + meta.plural);\n\n            if ( typeof evalResult === 'boolean' ) {\n                evalResult = +evalResult;\n            }\n\n            // translation\n            return data[''][msgId][evalResult];\n        }\n\n        // english\n        return value === 1 ? msgId : plural;\n    };\n}\n\n\n// correct constructor name\nGettext.prototype.constructor = Gettext;\n\n\n// public\nmodule.exports = Gettext;\n","/**\n * Main page implementation.\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar keys          = require('stb-keys'),\n    app           = require('mag-app'),\n\n    Page          = require('stb-component-page'),\n    Grid          = require('../components/grid'),\n\n    metrics       = require('../metrics'),\n    listSize      = metrics[screen.height] ? metrics[screen.height].listSize : metrics[720].listSize,\n    // listSmallSize = metrics[screen.height] ? metrics[screen.height].listSmallSize : metrics[720].listSmallSize,\n\n    page          = new Page({$node: document.getElementById('pageMain')}),\n\n    $pageMainFooter = document.getElementById('pageMainFooter'),\n    $pageMainArrowLeft = document.getElementById('pageMainArrowLeft'),\n    $pageMainArrowRight = document.getElementById('pageMainArrowRight'),\n\n    lastIntent    = null,\n    stopKeydown   = false,\n    appList;\n\n\nappList = new Grid({\n    $node: document.getElementById('pageMainAppList'),\n    className: 'app-list',\n    cycleX: false,\n    cycleY: false,\n    sizeX: listSize,\n    sizeY: 1,\n    provider: require('../modules/app.data.provider'),\n    render: function ( $item, data ) {\n        if ( !$item.ready ) {\n            $item.$body = document.createElement('div');\n            $item.$normal = document.createElement('div');\n            $item.$active = document.createElement('div');\n            $item.$activeCloseIcon = document.createElement('div');\n            $item.$activeContent = document.createElement('div');\n            $item.$normalContent = document.createElement('div');\n            $item.$activeContent = document.createElement('div');\n            $item.$normalIcon = document.createElement('div');\n            $item.$activeIcon = document.createElement('div');\n            $item.$normalName = document.createElement('div');\n            $item.$activeName = document.createElement('div');\n            $item.$normalLock = document.createElement('div');\n            $item.$activeLock = document.createElement('div');\n            $item.$normalGradientOverlay = document.createElement('div');\n            $item.$activeGradientOverlay = document.createElement('div');\n\n            $item.className = 'app';\n            $item.$body.className = 'app__body';\n            $item.$normal.className = 'app__normal';\n            $item.$active.className = 'app__active';\n            $item.$activeCloseIcon.className = 'app__icon close';\n            $item.$normalContent.className = 'app__content';\n            $item.$activeContent.className = 'app__content';\n            $item.$normalLock.className = 'app__locked';\n            $item.$activeLock.className = 'app__locked';\n            $item.$normalName.className = 'app__name';\n            $item.$activeName.className = 'app__name';\n            $item.$normalIcon.className = 'app__icon';\n            $item.$activeIcon.className = 'app__icon';\n            $item.$normalGradientOverlay.className = 'app__overlay';\n            $item.$activeGradientOverlay.className = 'app__overlay';\n\n            $item.$normalContent.appendChild($item.$normalIcon);\n            $item.$normalContent.appendChild($item.$normalName);\n            $item.$normalContent.appendChild($item.$normalLock);\n            $item.$activeContent.appendChild($item.$activeIcon);\n            $item.$activeContent.appendChild($item.$activeName);\n            $item.$activeContent.appendChild($item.$activeLock);\n\n            $item.$normal.appendChild($item.$normalContent);\n            $item.$normal.appendChild($item.$normalGradientOverlay);\n            $item.$active.appendChild($item.$activeCloseIcon);\n            $item.$active.appendChild($item.$activeContent);\n            $item.$active.appendChild($item.$activeGradientOverlay);\n\n            $item.$body.appendChild($item.$normal);\n            $item.$body.appendChild($item.$active);\n\n            $item.appendChild($item.$body);\n\n            $item.ready = true;\n        }\n\n        if ( data.config.locked ) {\n            $item.$normalLock.style.visibility = $item.$activeLock.style.visibility = 'inherit';\n        } else {\n            $item.$normalLock.style.visibility = $item.$activeLock.style.visibility = 'hidden';\n        }\n\n        if ( data.disable ) {\n            $item.classList.add('disable');\n            $item.$activeCloseIcon.style.backgroundImage =\n                $item.$activeIcon.style.backgroundImage = $item.$normalIcon.style.backgroundImage = 'none';\n            $item.$normalName.innerText = $item.$activeName.innerText = '';\n            $item.$normalContent.style.backgroundColor = $item.$activeContent.style.backgroundColor = 'transparent';\n        } else {\n            //console.log(' render ' + data.config.name);\n            $item.$normalName.innerText = $item.$activeName.innerText = data.config.name;\n            $item.$normalName.style.color = $item.$activeName.style.color = data.config.colors.splashFont;\n            $item.$normalContent.style.backgroundColor = $item.$activeContent.style.backgroundColor = data.config.colors.splashBackground;\n            $item.$normalIcon.style.backgroundImage = 'url(\"' + data.config.uris.icons.logoNormal + '\")';\n            $item.$activeIcon.style.backgroundImage = 'url(\"' + data.config.uris.icons.logoActive + '\")';\n            $item.$activeCloseIcon.style.backgroundImage = '';\n            $item.classList.remove('disable');\n        }\n    },\n    events: {\n        'data:ready': function ( direction ) {\n            if ( page.active ) {\n                this.focus();\n\n                if ( direction && direction === keys.right ) {\n                    this.focusItem(this.map[0][5]);\n                } else {\n                    this.focusItem(this.map[0][0]);\n                }\n            }\n        },\n        'click:item': function ( event ) {\n            console.log('CLICK ITEM');\n\n            if ( !event.$item.data.disable ) {\n                core.taskManager.osdStack.forEach(function ( osd ) {\n                    if ( osd.$iframe.src !== location.href ) {\n                        osd.core.emit('hide', {source: core.sources.system});\n                    }\n                });\n\n                core.taskManager.runApp({\n                    config: event.$item.data.config,\n                    visible: true,\n                    onload: function () {\n                        console.log('ONLOAD');\n\n                        core.call('hide');\n                        core.call('blur');\n\n                        if ( lastIntent ) {\n                            lastIntent.emit('block', false);\n                        }\n                    }\n                });\n            }\n        }\n    }\n});\n\n\nfunction showDescription () {\n    $pageMainArrowLeft.style.visibility = '';\n    $pageMainArrowRight.style.visibility = '';\n    $pageMainFooter.style.display = '';\n}\n\n\nfunction showNoAppsNotification () {\n    appList.$body.innerHTML = '<span>' + gettext('No apps') + '</span>';\n    $pageMainArrowLeft.style.visibility = 'hidden';\n    $pageMainArrowRight.style.visibility = 'hidden';\n    $pageMainFooter.style.display = 'none';\n}\n\n\nfunction renderApps () {\n    var refresh = false;\n\n    if ( appList.provider.pageSize !== listSize ) {\n        refresh = true;\n        appList.provider.pageSize = listSize;\n        appList.sizeX = listSize;\n    }\n\n    if ( refresh ) {\n        appList.init({\n            sizeX: appList.sizeX,\n            sizeY: appList.sizeY,\n            provider: appList.provider\n        });\n\n        showDescription();\n\n        appList.focus();\n    } else if ( core.taskManager.runHistory.length > 0 ) {\n        appList.focus();\n\n        appList.$body.innerHTML = '';\n        showDescription();\n\n        appList.$body.appendChild(appList.$table);\n\n        appList.provider.get(null, function ( error, data ) {\n            var xPos, yPos;\n\n            if ( error ) {\n                if ( appList.events['data:error'] ) {\n                    /**\n                     * Provider get error while take new data\n                     *\n                     * @event module:stb/ui/grid~Grid#data:error\n                     */\n                    appList.emit('data:error', error);\n                }\n\n                return;\n            }\n\n            if ( data ) {\n                appList.data = appList.translate(data);\n\n                for ( xPos = 0; xPos < appList.sizeY; xPos++ ) {\n                    for ( yPos = 0; yPos < appList.sizeX; yPos++ ) {\n                        appList.map[xPos][yPos].data = appList.data[xPos][yPos];\n                        appList.renderItem(appList.map[xPos][yPos], appList.data[xPos][yPos]);\n                    }\n                }\n\n                if ( appList.events['data:ready'] ) {\n                    /**\n                     * Provider get new data and reinit grid\n                     *\n                     * @event module:stb/ui/grid~Grid#data:ready\n                     */\n                    appList.emit('data:ready');\n                }\n            }\n        });\n    } else {\n        appList.blur();\n\n        showNoAppsNotification();\n    }\n}\n\ncore.addListener('keydown:' + keys.app, function () {\n    console.log(core.applicationState.visible);\n\n    if ( core.applicationState.visible ) {\n        core.call('hide');\n        core.call('blur');\n\n        if ( lastIntent ) {\n            lastIntent.emit('close');\n            lastIntent = null;\n        }\n    } else {\n        lastIntent = null;\n\n        if ( lastIntent ) {\n            lastIntent = null;\n        }\n\n        renderApps();\n\n        core.call('show');\n        core.call('focus');\n    }\n});\n\ncore.addListener('hide', function () {\n    console.log('HIDE FROM CORE, app.visible: ' + core.applicationState.visible);\n\n    core.call('hide');\n\n    if ( lastIntent ) {\n        lastIntent.emit('close');\n        lastIntent = null;\n    }\n});\n\ncore.addListener('intent', function ( intent ) {\n    if ( intent.action === 'taskmanager:show' ) {\n        if ( lastIntent ) {\n            lastIntent = null;\n        }\n\n        renderApps();\n\n        core.call('show');\n        core.call('focus');\n\n        lastIntent = intent;\n\n        intent.once('close', function () {\n            lastIntent = null;\n        });\n    }\n});\n\nappList.addListener('keydown', function ( event ) {\n    var pid;\n\n    if ( stopKeydown ) {\n        return;\n    }\n\n    if ( event.code === keys.up ) {\n        stopKeydown = true;\n\n        if ( core.taskManager.runHistory.length === 1 ) {\n            pid = appList.$focusItem.data.config.pid;\n\n            core.call('hide');\n            core.call('blur');\n\n            core.taskManager.close(core.taskManager.apps[pid]);\n            pid = core.taskManager.runHistory.indexOf(appList.$focusItem.data.config);\n            core.taskManager.runHistory.splice(pid, 1);\n\n            if ( lastIntent ) {\n                lastIntent.emit('block', false);\n            }\n        } else if ( !core.taskManager.topApp ) {\n            // in launcher\n            pid = appList.$focusItem.data.config.pid;\n            core.taskManager.close(core.taskManager.apps[pid], true);\n\n            pid = core.taskManager.runHistory.indexOf(appList.$focusItem.data.config);\n            core.taskManager.runHistory.splice(pid, 1);\n\n            core.call('show');\n            core.call('focus');\n        } else if ( core.taskManager.runHistory.length > 0 ) {\n            pid = appList.$focusItem.data.config.pid;\n            core.taskManager.close(core.taskManager.apps[pid]);\n\n            pid = core.taskManager.runHistory.indexOf(appList.$focusItem.data.config);\n            core.taskManager.runHistory.splice(pid, 1);\n\n            core.taskManager.runApp({\n                config: core.taskManager.runHistory.pop(),\n                visible: true,\n                onready: function () {\n                    setTimeout(function () {\n                        core.call('show');\n                        core.call('focus');\n                    }, 0);\n                }\n            });\n        }\n\n        renderApps();\n\n        stopKeydown = false;\n    }\n});\n\napp.addListener('keydown', function ( event ) {\n    if ( event.code === keys.back ) {\n        core.call('hide');\n        core.call('blur');\n\n        lastIntent.emit('close');\n        lastIntent = null;\n    }\n});\n\npage.addListener('keydown', function ( localEvent, event ) {\n    if ( localEvent.code === 0 ) {\n        return;\n    }\n\n    if ( page.activeComponent === null ) {\n        switch ( localEvent.code ) {\n            case keys.app:\n            case keys.exit:\n            case keys.volumeUp:\n            case keys.volumeDown:\n                return;\n        }\n\n        if ( event.ctrlKey || event.altKey || event.shiftKey ) {\n            return;\n        }\n\n        core.call('hide');\n        core.call('blur');\n    }\n});\n\nshowNoAppsNotification();\ndocument.getElementById('pageMainFooterLabel').innerText = gettext('Press OK to open or Up to close application');\n\npage.add(appList);\npage.once('show', function () {\n    renderApps();\n});\n\n// public\nmodule.exports = page;\n","/**\n * Global list of non-printable control key codes.\n *\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    backspace: 8,\n    tab:       9,\n    enter:     13,\n    escape:    27,\n    space:     32,\n    pageUp:    33,\n    pageDown:  34,\n    end:       35,\n    home:      36,\n    left:      37,\n    up:        38,\n    right:     39,\n    down:      40,\n    insert:    45,\n    // not \"delete\" because of old browsers issue\n    del:       46\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-page');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-page';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base page implementation.\n *\n * A full-screen top-level layer that can operate as an independent separate entity.\n * It is added to the document body on creation if not already linked.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n *\n * @example\n * var Page = require('stb/ui/page'),\n *     page = new Page({\n *         $node: document.getElementById(id)\n *     });\n *\n * page.addListener('show', function show () {\n *     // page is visible now\n * });\n */\nfunction Page ( config ) {\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    /**\n     * Page visibility/active state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.active = false;\n\n    /**\n     * Link to the currently active component with focus.\n     *\n     * @readonly\n     * @type {Component}\n     */\n    this.activeComponent = null;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'page ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // state flag\n    this.active = this.$node.classList.contains('active');\n\n    // correct DOM parent/child connection if necessary\n    if ( this.$node.parentNode === null ) {\n        document.body.appendChild(this.$node);\n    }\n\n    // always itself\n    this.page = this;\n}\n\n\n// inheritance\nPage.prototype = Object.create(Component.prototype);\nPage.prototype.constructor = Page;\n\n// set component name\nPage.prototype.name = 'spa-component-page';\n\n\n// public\nmodule.exports = Page;\n","/**\n * @module stb/ui/grid\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar Component = require('spa-component'),\n    keys      = require('stb-keys');\n\n\n/**\n * Mouse click event.\n *\n * @event module:stb/ui/grid~Grid#click:item\n *\n * @type {Object}\n * @property {Element} $item clicked HTML item\n * @property {Event} event click event data\n */\n\n\n/**\n * Base grid/table implementation.\n *\n * For navigation map implementation and tests see {@link https://gist.github.com/DarkPark/8c0c2926bfa234043ed1}.\n *\n * Each data cell can be either a primitive value or an object with these fields:\n *\n *  Name    | Description\n * ---------|-------------\n *  value   | actual cell value to render\n *  colSpan | amount of cells to merge horizontally\n *  rowSpan | amount of cells to merge vertically\n *  mark    | is it necessary or not to render this cell as marked\n *  focus   | is it necessary or not to render this cell as focused\n *  disable | is it necessary or not to set this cell as disabled\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}] init parameters (all inherited from the parent)\n * @param {Array[]}  [config.data=[]] component data to visualize\n * @param {function} [config.render] method to build each grid cell content\n * @param {function} [config.navigate] method to move focus according to pressed keys\n * @param {boolean}  [config.cycleX=true] allow or not to jump to the opposite side of line when there is nowhere to go next\n * @param {boolean}  [config.cycleY=true] allow or not to jump to the opposite side of column when there is nowhere to go next\n * @param {Object}   [config.provider] data provider\n * @param {number}   [config.sizeX] grid columns count\n * @param {number}   [config.sizeX] grid rows count\n *\n * @fires module:stb/ui/grid~Grid#click:item\n *\n * @example\n * var Grid = require('stb/ui/grid'),\n *     grid = new Grid({\n *         data: [\n *             [1,   2,  3, {value: '4;8;12;16', focus: true, rowSpan: 4}],\n *             [5,   6,  7],\n *             [9,  10, 11],\n *             [13, 14, {value: 15, disable: true}]\n *         ],\n *         render: function ( $item, data ) {\n *             $item.innerHTML = '<div>' + (data.value) + '</div>';\n *         },\n *         cycleX: false\n *     });\n */\nfunction Grid ( config ) {\n    // current execution context\n    //var self = this;\n\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) { throw new Error(__filename + ': wrong config type'); }\n        // init parameters checks\n        if ( config.className && typeof config.className !== 'string' ) { throw new Error(__filename + ': wrong or empty config.className'); }\n        //if ( config.navigate  && typeof config.navigate  !== 'function' ) { throw new Error(__filename + ': wrong config.navigate type'); }\n    }\n\n    /**\n     * List of DOM elements representing the component cells.\n     * Necessary for navigation calculations.\n     *\n     * @type {Element[][]}\n     */\n    this.map = [];\n\n    /**\n     * Link to the currently focused DOM element.\n     *\n     * @type {Element}\n     */\n    this.$focusItem = null;\n\n    /**\n     * Component data to visualize.\n     *\n     * @type {Array[]}\n     */\n    this.data = [];\n\n    /**\n     * Allow or not to jump to the opposite side of line when there is nowhere to go next.\n     *\n     * @type {boolean}\n     */\n    this.cycleX = true;\n\n    /**\n     * Allow or not to jump to the opposite side of column when there is nowhere to go next.\n     *\n     * @type {boolean}\n     */\n    this.cycleY = true;\n\n    /**\n     * Current navigation map horizontal position.\n     *\n     * @type {number}\n     */\n    this.focusX = 0;\n\n    /**\n     * Current navigation map vertical position.\n     *\n     * @type {number}\n     */\n    this.focusY = 0;\n\n    // set default className if classList property empty or undefined\n    config.className = 'grid ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // component setup\n    this.init(config);\n\n    // custom navigation method\n    //if ( config.navigate ) {\n    //    // apply\n    //    this.navigate = config.navigate;\n    //}\n\n    // navigation by keyboard\n    //this.addListener('keydown', this.navigate);\n\n    // navigation by mouse\n    //this.$body.addEventListener('mousewheel', function ( event ) {\n    //    // scrolling by Y axis\n    //    if ( event.wheelDeltaY ) {\n    //        self.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n    //    }\n    //\n    //    // scrolling by X axis\n    //    if ( event.wheelDeltaX ) {\n    //        self.move(event.wheelDeltaX > 0 ? keys.left : keys.right);\n    //    }\n    //});\n}\n\n\n// inheritance\nGrid.prototype = Object.create(Component.prototype);\nGrid.prototype.constructor = Grid;\n\n\n/**\n * Fill the given cell with data.\n * $item.data can contain the old data (from the previous render).\n *\n * @param {Element} $item item DOM link\n * @param {*} data associated with this item data\n */\nGrid.prototype.renderItemDefault = function ( $item, data ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        if ( !($item instanceof Element) ) { throw new Error(__filename + ': wrong $item type'); }\n    }\n\n    $item.innerText = data.value;\n};\n\n\n/**\n * Method to build each grid cell content.\n * Can be redefined to provide custom rendering.\n *\n * @type {function}\n */\nGrid.prototype.renderItem = Grid.prototype.renderItemDefault;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nGrid.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse wheel events.\n     *\n     * @param {Event} event generated event\n     */\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        if ( event.wheelDeltaY ) {\n            this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n        }\n\n        // scrolling by X axis\n        if ( event.wheelDeltaX ) {\n            this.move(event.wheelDeltaX > 0 ? keys.left : keys.right);\n        }\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Event} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n            case keys.right:\n            case keys.left:\n                // cursor move only on arrow keys\n                this.move(event.code);\n                break;\n            case keys.ok:\n                // there are some listeners\n                if ( this.events['click:item'] ) {\n                    // notify listeners\n                    this.emit('click:item', {$item: this.$focusItem, event: event});\n                }\n                break;\n        }\n    }\n};\n\n\n/**\n * Default method to move focus according to pressed keys.\n *\n * @param {Event} event generated event source of movement\n */\n//Grid.prototype.navigateDefault = function ( event ) {\n//    switch ( event.code ) {\n//        case keys.up:\n//        case keys.down:\n//        case keys.right:\n//        case keys.left:\n//            // cursor move only on arrow keys\n//            this.move(event.code);\n//            break;\n//        case keys.ok:\n//            // there are some listeners\n//            if ( this.events['click:item'] ) {\n//                // notify listeners\n//                this.emit('click:item', {$item: this.$focusItem, event: event});\n//            }\n//            break;\n//    }\n//};\n\n\n/**\n * Current active method to move focus according to pressed keys.\n * Can be redefined to provide custom navigation.\n *\n * @type {function}\n */\n//Grid.prototype.navigate = Grid.prototype.navigateDefault;\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary and add missing properties.\n *\n * @param {Array[]} data user 2-dimensional array\n * @return {Array[]} reworked incoming data\n */\nfunction normalize ( data ) {\n    var yCoord, xCoord, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) { throw new Error(__filename + ': wrong arguments number'); }\n        if ( !Array.isArray(data) ) { throw new Error(__filename + ': wrong data type'); }\n    }\n\n    // rows\n    for ( yCoord = 0; yCoord < data.length; yCoord++ ) {\n        // cols\n        for ( xCoord = 0; xCoord < data[yCoord].length; xCoord++ ) {\n            // cell value\n            item = data[yCoord][xCoord];\n            // primitive value\n            if ( typeof item === 'object' ) {\n                // always at least one row/col\n                item.colSpan = item.colSpan || 1;\n                item.rowSpan = item.rowSpan || 1;\n            } else {\n                // wrap with defaults\n                item = data[yCoord][xCoord] = {\n                    value: data[yCoord][xCoord],\n                    colSpan: 1,\n                    rowSpan: 1\n                };\n            }\n\n            if ( DEVELOP ) {\n                //if ( !('value' in item) ) { throw new Error(__filename + ': field \"value\" is missing'); }\n                if ( Number(item.colSpan) !== item.colSpan ) { throw new Error(__filename + ': item.colSpan must be a number'); }\n                if ( Number(item.rowSpan) !== item.rowSpan ) { throw new Error(__filename + ': item.rowSpan must be a number'); }\n                if ( item.colSpan <= 0 ) { throw new Error(__filename + ': item.colSpan should be positive'); }\n                if ( item.rowSpan <= 0 ) { throw new Error(__filename + ': item.rowSpan should be positive'); }\n                if ( ('focus' in item) && Boolean(item.focus) !== item.focus ) { throw new Error(__filename + ': item.focus must be boolean'); }\n                if ( ('disable' in item) && Boolean(item.disable) !== item.disable ) {\n                    throw new Error(__filename + ': item.disable must be boolean');\n                }\n            }\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Fill the given rectangle area with value.\n *\n * @param {Array[]} map link to navigation map\n * @param {number} xPos current horizontal position\n * @param {number} yPos current vertical position\n * @param {number} dX amount of horizontal cell to fill\n * @param {number} dY amount of vertical cell to fill\n * @param {*} value filling data\n */\nfunction fill ( map, xPos, yPos, dX, dY, value ) {\n    var yCoord, xCoord;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 6 ) { throw new Error(__filename + ': wrong arguments number'); }\n        if ( !Array.isArray(map) ) { throw new Error(__filename + ': wrong map type'); }\n    }\n\n    // rows\n    for ( yCoord = yPos; yCoord < yPos + dY; yCoord++ ) {\n        // expand map rows\n        if ( map.length < yCoord + 1 ) { map.push([]); }\n\n        // compensate long columns from previous rows\n        while ( map[yCoord][xPos] !== undefined ) {\n            xPos++;\n        }\n\n        // cols\n        for ( xCoord = xPos; xCoord < xPos + dX; xCoord++ ) {\n            // expand map row cols\n            if ( map[yCoord].length < xCoord + 1 ) { map[yCoord].push(); }\n            // fill\n            map[yCoord][xCoord] = value;\n            // apply coordinates for future mouse clicks\n            if ( value.xPos === undefined ) { value.xPos = xCoord; }\n            if ( value.yPos === undefined ) { value.yPos = yCoord; }\n        }\n    }\n}\n\n\n/**\n * Create a navigation map from incoming data.\n *\n * @param {Array[]} data user 2-dimensional array of objects\n * @return {Array[]} navigation map\n */\nfunction map ( data ) {\n    var result = [],\n        yCoord, xCoord, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) { throw new Error(__filename + ': wrong arguments number'); }\n        if ( !Array.isArray(data) ) { throw new Error(__filename + ': wrong data type'); }\n    }\n\n    // rows\n    for ( yCoord = 0; yCoord < data.length; yCoord++ ) {\n        // cols\n        for ( xCoord = 0; xCoord < data[yCoord].length; xCoord++ ) {\n            // cell value\n            item = data[yCoord][xCoord];\n            // process a cell\n            fill(result, xCoord, yCoord, item.colSpan, item.rowSpan, item.$item);\n            // clear redundant info\n            delete item.$item;\n        }\n    }\n\n    return result;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nGrid.prototype.init = function ( config ) {\n    var self = this,\n        draw = false,\n        yCoord, xCoord,\n        $row, $item, $tbody, $focusItem,\n        itemData, newData,\n        /**\n         * Cell mouse click handler.\n         *\n         * @param {Event} event click event data\n         *\n         * @this Element\n         *\n         * @fires module:stb/ui/grid~Grid#click:item\n         */\n        onItemClick = function ( event ) {\n            // allow to accept focus\n            if ( this.data.disable !== true ) {\n                // visualize\n                self.focusItem(this);\n\n                // there are some listeners\n                if ( self.events['click:item'] ) {\n                    // notify listeners\n                    self.emit('click:item', {$item: this, event: event});\n                }\n            }\n        },\n        /**\n         * Construct grid when receive new data\n         *\n         * @param {Array} data to render\n         */\n        construct = function ( data ) {\n\n            // apply data\n            if ( data ) {\n                // new data is different\n                if ( self.data !== data ) {\n                    // apply\n                    self.data = data;\n                    // need to redraw table\n                    draw = true;\n                }\n            }\n\n            // custom render method\n            if ( config.render ) {\n                // new render is different\n                if ( self.renderItem !== config.render ) {\n                    // apply\n                    self.renderItem = config.render;\n                    // need to redraw table\n                    draw = true;\n                }\n            }\n\n            if ( !draw ) {\n                // do not redraw table\n                return;\n            }\n\n            // export pointer to inner table\n            self.$table = document.createElement('table');\n            $tbody = document.createElement('tbody');\n\n            // prepare user data\n            self.data = normalize(self.data);\n\n            // rows\n            for ( yCoord = 0; yCoord < self.data.length; yCoord++ ) {\n                // dom\n                $row = $tbody.insertRow();\n\n                // cols\n                for ( xCoord = 0; xCoord < self.data[yCoord].length; xCoord++ ) {\n                    // dom\n                    $item = $row.insertCell(-1);\n                    // additional params\n                    $item.className = 'item';\n\n                    // shortcut\n                    itemData = self.data[yCoord][xCoord];\n\n                    // for map\n                    itemData.$item = $item;\n\n                    // merge columns\n                    $item.colSpan = itemData.colSpan;\n\n                    // merge rows\n                    $item.rowSpan = itemData.rowSpan;\n\n                    // active cell\n                    if ( itemData.focus ) {\n                        // store and clean\n                        $focusItem = $item;\n                    }\n\n                    // disabled cell\n                    if ( itemData.disable ) {\n                        // apply CSS\n                        $item.classList.add('disable');\n                    }\n\n                    // marked cell\n                    if ( itemData.mark ) {\n                        // apply CSS\n                        $item.classList.add('mark');\n                    }\n\n                    // visualize\n                    self.renderItem($item, itemData);\n\n                    // save data link\n                    $item.data = itemData;\n\n                    // manual focusing\n                    $item.addEventListener('click', onItemClick);\n                }\n                // row is ready\n                $tbody.appendChild($row);\n            }\n\n            // navigation map filling\n            self.map = map(self.data);\n\n            // clear all table\n            self.$body.innerText = null;\n\n            // everything is ready\n            self.$table.appendChild($tbody);\n            self.$body.appendChild(self.$table);\n\n            // apply focus\n            if ( $focusItem ) {\n                // focus item was given in data\n                self.focusItem($focusItem);\n            } else {\n                // just the first cell\n                self.focusItem(self.map[0][0]);\n            }\n        };\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) { throw new Error(__filename + ': wrong arguments number'); }\n        if ( typeof config !== 'object' ) { throw new Error(__filename + ': wrong config type'); }\n        if ( config.data && (!Array.isArray(config.data) || !Array.isArray(config.data[0])) ) {\n            throw new Error(__filename + ': wrong config.data type');\n        }\n        if ( config.render && typeof config.render !== 'function' ) { throw new Error(__filename + ': wrong config.render type'); }\n    }\n\n    // apply cycle behaviour\n    if ( config.cycleX !== undefined ) {\n        this.cycleX = config.cycleX;\n    }\n    if ( config.cycleY !== undefined ) {\n        this.cycleY = config.cycleY;\n    }\n\n\n    if ( config.provider ) {\n        if ( DEVELOP ) {\n            if ( !config.sizeX || !config.sizeY ) {    throw new Error(__filename + ': wrong grid data size');    }\n        }\n\n        this.provider = config.provider;\n        this.sizeX = config.sizeX;\n        this.sizeY = config.sizeY;\n    }\n\n    if ( config.translate ) {\n        this.translate = config.translate;\n    }\n\n    if ( config.provider ) {\n        newData = this.provider.get(null, function ( error, data ) {\n            if ( error ) {\n                if ( self.events['data:error'] ) {\n                    /**\n                     * Provider get error while take new data\n                     *\n                     * @event module:stb/ui/grid~Grid#data:error\n                     */\n                    self.emit('data:error', error);\n                }\n            }\n            construct(self.translate(data));\n\n            if ( self.events['data:ready'] ) {\n                /**\n                 * Provider get new data and reinit grid\n                 *\n                 * @event module:stb/ui/grid~Grid#data:ready\n                 */\n                self.emit('data:ready');\n            }\n        });\n\n        if ( this.events['data:get'] ) {\n            /**\n             * Provider request new data\n             *\n             * @event module:stb/ui/grid~Grid#data:get\n             *\n             * @type {Object}\n             * @property {boolean} fresh status of data to response\n             */\n            this.emit('data:get', {fresh: newData});\n        }\n    } else {\n        construct(config.data);\n    }\n\n\n};\n\n/**\n * Default translate function\n *\n * @param {Array} data to translate\n * @return {Array} data to use as grid data\n */\nGrid.prototype.defaultTranslate = function ( data ) {\n    var result = [],\n        yCoord, xCoord, arr;\n\n    console.log(data.locked + ' !!');\n    for ( yCoord = 0; yCoord < this.sizeY; yCoord++ ) {\n        arr = [];\n        for ( xCoord = 0; xCoord < this.sizeX; xCoord++ ) {\n            arr[xCoord] = data[yCoord * this.sizeX + xCoord];\n        }\n        result[yCoord] = arr;\n    }\n\n    return result;\n};\n\n\n/**\n * Method to translate given array to array adapted to use as grid data\n * Can be redefined to provide custom translate.\n *\n * @type {function}\n */\nGrid.prototype.translate = Grid.prototype.defaultTranslate;\n\n\n/**\n * Move focus to the given direction.\n *\n * @param {number} direction arrow key code\n *\n * @fires module:stb/ui/grid~Grid#cycle\n * @fires module:stb/ui/grid~Grid#overflow\n * @fires module:stb/ui/grid~Grid#data:get\n * @fires module:stb/ui/grid~Grid#data:ready\n * @fires module:stb/ui/grid~Grid#data:error\n */\nGrid.prototype.move = function ( direction ) {\n    var self = this,\n        xPos        = this.focusX,\n        yPos        = this.focusY,\n        move     = true,\n        overflow = false,\n        cycle    = false,\n        newData, yCoord, xCoord;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) { throw new Error(__filename + ': wrong arguments number'); }\n        if ( Number(direction) !== direction ) { throw new Error(__filename + ': direction must be a number'); }\n    }\n\n    // shift till full stop\n    while ( move ) {\n        // arrow keys\n        switch ( direction ) {\n            case keys.up:\n                if ( yPos > 0 ) {\n                    // can go one step up\n                    yPos--;\n                } else {\n                    if ( this.cycleY ) {\n                        // jump to the last row\n                        yPos = this.map.length - 1;\n                        cycle = true;\n                    }\n                    // grid edge\n                    overflow = true;\n                }\n                break;\n\n            case keys.down:\n                if ( yPos < this.map.length - 1 ) {\n                    // can go one step down\n                    yPos++;\n                } else {\n                    if ( this.cycleY ) {\n                        // jump to the first row\n                        yPos = 0;\n                        cycle = true;\n                    }\n                    // grid edge\n                    overflow = true;\n                }\n                break;\n\n            case keys.right:\n                if ( xPos < this.map[yPos].length - 1 ) {\n                    // can go one step right\n                    xPos++;\n                } else {\n                    if ( this.cycleX ) {\n                        // jump to the first column\n                        xPos = 0;\n                        cycle = true;\n                    }\n                    // grid edge\n                    overflow = true;\n                }\n                break;\n            case keys.left:\n                if ( xPos > 0 ) {\n                    // can go one step left\n                    xPos--;\n                } else {\n                    if ( this.cycleX ) {\n                        // jump to the last column\n                        xPos = this.map[yPos].length - 1;\n                        cycle = true;\n                    }\n                    // grid edge\n                    overflow = true;\n\n                }\n                break;\n        }\n\n        // full cycle - has come to the start point\n        if ( xPos === this.focusX && yPos === this.focusY ) {\n            // full stop\n            move = false;\n        }\n\n        // focus item has changed and it's not disabled\n        if ( this.map[yPos][xPos] !== this.map[this.focusY][this.focusX] && this.map[yPos][xPos].data.disable !== true ) {\n            // full stop\n            move = false;\n        }\n\n        // the last cell in a row/col\n        if ( overflow ) {\n            // full stop\n            move = false;\n            // but it's disabled so need to go back\n            if ( this.map[yPos][xPos].data.disable === true ) {\n                // return to the start point\n                xPos = this.focusX;\n                yPos = this.focusY;\n            }\n        }\n    }\n\n    this.focusItem(this.map[yPos][xPos]);\n\n    // correct coordinates\n    // focusItem set approximate values\n    this.focusX = xPos;\n    this.focusY = yPos;\n\n    if ( overflow ) {\n        //\n        if (this.provider) {\n            newData = this.provider.get(direction, function ( error, data ) {\n                if ( error ) {\n\n                    if ( self.events['data:error'] ) {\n                        /**\n                         * Provider get error while take new data\n                         *\n                         * @event module:stb/ui/grid~Grid#data:error\n                         */\n                        self.emit('data:error', error);\n\n                        return;\n                    }\n                }\n\n                if ( data ) {\n                    self.data = self.translate(data);\n                    for ( yCoord = 0; yCoord < self.sizeY; yCoord++ ) {\n                        for ( xCoord = 0; xCoord < self.sizeX; xCoord++ ) {\n                            self.map[yCoord][xCoord].data = self.data[yCoord][xCoord];\n                            self.renderItem(self.map[yCoord][xCoord], self.data[yCoord][xCoord]);\n                        }\n                    }\n\n                    if ( self.events['data:ready'] ) {\n                        /**\n                         * Provider get new data and reinit grid\n                         *\n                         * @event module:stb/ui/grid~Grid#data:ready\n                         */\n                        self.emit('data:ready', direction);\n                    }\n                }\n\n            });\n\n            if ( this.events['data:get'] ) {\n                /**\n                 * Provider request new data\n                 *\n                 * @event module:stb/ui/grid~Grid#data:get\n                 *\n                 * @type {Object}\n                 * @property {boolean} fresh status of data to response\n                 */\n                this.emit('data:get', {fresh: newData});\n            }\n        }\n\n        // there are some listeners\n        if ( this.events['overflow'] ) {\n            /**\n             * Attempt to go beyond the edge of the grid.\n             *\n             * @event module:stb/ui/grid~Grid#overflow\n             *\n             * @type {Object}\n             * @property {number} direction key code initiator of movement\n             * @property {number} cycle ...\n             */\n            this.emit('overflow', {direction: direction, cycle: cycle});\n        }\n    }\n\n    // report\n    debug.info(this.focusX + ' : ' + xPos, 'X old/new');\n    debug.info(this.focusY + ' : ' + yPos, 'Y old/new');\n    debug.info(cycle, 'cycle');\n    debug.info(overflow, 'overflow');\n\n\n};\n\n\n/**\n * Highlight the given DOM element as focused.\n * Remove focus from the previously focused item.\n *\n * @param {Node|Element} $item element to focus\n * @param {number} $item.xPos the item horizontal position\n * @param {number} $item.yPos the item vertical position\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/grid~Grid#focus:item\n * @fires module:stb/ui/grid~Grid#blur:item\n */\nGrid.prototype.focusItem = function ( $item ) {\n    var $prev = this.$focusItem;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) { throw new Error(__filename + ': wrong arguments number'); }\n    }\n\n    // different element\n    if ( $item && $prev !== $item && $item.data.disable !== true ) {\n        if ( DEVELOP ) {\n            if ( !($item instanceof Element) ) { throw new Error(__filename + ': wrong $item type'); }\n            if ( $item.parentNode.parentNode.parentNode.parentNode !== this.$body ) { throw new Error(__filename + ': wrong $item parent element'); }\n        }\n\n        // some item is focused already\n        if ( $prev !== null ) {\n            if ( DEVELOP ) {\n                if ( !($prev instanceof Element) ) { throw new Error(__filename + ': wrong $prev type'); }\n            }\n\n            // style\n            $prev.classList.remove('focus');\n\n            // there are some listeners\n            if ( this.events['blur:item'] ) {\n                /**\n                 * Remove focus from an element.\n                 *\n                 * @event module:stb/ui/grid~Grid#blur:item\n                 *\n                 * @type {Object}\n                 * @property {Element} $item previously focused HTML element\n                 */\n                this.emit('blur:item', {$item: $prev});\n            }\n        }\n\n        // draft coordinates\n        this.focusX = $item.xPos;\n        this.focusY = $item.yPos;\n\n        // reassign\n        this.$focusItem = $item;\n\n        // correct CSS\n        $item.classList.add('focus');\n\n        // there are some listeners\n        if ( this.events['focus:item'] ) {\n            /**\n             * Set focus to an element.\n             *\n             * @event module:stb/ui/grid~Grid#focus:item\n             *\n             * @type {Object}\n             * @property {Element} $prev old/previous focused HTML element\n             * @property {Element} $curr new/current focused HTML element\n             */\n            this.emit('focus:item', {$prev: $prev, $curr: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Set item state and appearance as marked.\n *\n * @param {Node|Element} $item element to focus\n * @param {boolean} state true - marked, false - not marked\n */\nGrid.prototype.markItem = function ( $item, state ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        if ( !($item instanceof Element) ) { throw new Error(__filename + ': wrong $item type'); }\n        if ( $item.parentNode.parentNode.parentNode.parentNode !== this.$body ) { throw new Error(__filename + ': wrong $item parent element'); }\n        if ( Boolean(state) !== state ) { throw new Error(__filename + ': state must be boolean'); }\n    }\n\n    // correct CSS\n    if ( state ) {\n        $item.classList.add('mark');\n    } else {\n        $item.classList.remove('mark');\n    }\n\n    // apply flag\n    $item.data.mark = state;\n};\n\n\nif ( DEVELOP ) {\n    // expose to the global scope\n    window.ComponentGrid = Grid;\n}\n\n\n// public\nmodule.exports = Grid;\n","/**\n * Basic data provider template\n *\n * @author Aleynikov Boris <alynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar Emitter   = require('cjs-emitter'),\n    keys      = require('stb-keys'),\n\n    metrics = require('../metrics'),\n    listSize = metrics[screen.height] ? metrics[screen.height].listSize : metrics[720].listSize,\n\n\n    pageIndex = -1;\n\n\n/**\n * Data provider\n *\n * @param {Object} config init parameters\n * @constructor\n */\nfunction DataProvider () {\n    Emitter.call(this);\n}\n\nDataProvider.prototype = Object.create(Emitter.prototype);\nDataProvider.prototype.constructor = DataProvider;\n\n\nDataProvider.prototype.pageSize = listSize;\n\n\n/**\n * Callback after success getting data\n *\n * @callback getCallback\n * @param {Object} error object contains error information\n * @param {array} data to return\n */\n\n\n/**\n * Get next part of data.\n *\n * @param {number} direction to get data\n * @param {function} callback after getting data\n */\nDataProvider.prototype.get = function ( direction, callback ) {\n    var data = [],\n        size = window.core.taskManager.runHistory.length,\n        endIndex, index;\n\n    if ( direction === keys.right ) {\n        if ( pageIndex < size - this.pageSize ) {\n            ++pageIndex;\n        }\n    } else if ( direction === keys.left && pageIndex > 0 ) {\n        --pageIndex;\n    } else if ( direction !== null ) {\n        return;\n    } else if ( size > 0 ) {\n        pageIndex = 0;\n    }\n\n    if ( size <= this.pageSize ) {\n        endIndex = 0;\n    } else {\n        size = size - pageIndex;\n        endIndex = size - this.pageSize;\n    }\n\n    for ( index = size - 1; index >= endIndex; --index ) {\n        data.push({\n            config: window.core.taskManager.runHistory[index]\n        });\n    }\n\n    if ( data.length > 0 ) {\n        while ( data.length < this.pageSize ) {\n            data.push({\n                config: {name: ''},\n                disable: true\n            });\n        }\n        callback(false, data);\n    } else {\n        callback(false, [\n            {\n                config: {name: ''},\n                disable: true\n            },\n            {\n                config: {name: ''},\n                disable: true\n            },\n            {\n                config: {name: ''},\n                disable: true\n            },\n            {\n                config: {name: ''},\n                disable: true\n            },\n            {\n                config: {name: ''},\n                disable: true\n            },\n            {\n                config: {name: ''},\n                disable: true\n            }\n        ]);\n    }\n};\n\nmodule.exports = new DataProvider();\n"],"sourceRoot":""}