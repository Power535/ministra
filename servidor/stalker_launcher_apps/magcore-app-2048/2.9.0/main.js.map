{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/spa-app/lib/core.js","webpack:///./node_modules/spa-component/index.js","webpack:///./node_modules/cjs-emitter/index.js","webpack:///./node_modules/stb-app/lib/css.js","webpack:///./node_modules/stb-component-page/index.js","webpack:///./node_modules/spa-keys/index.js","webpack:///./src/js/game/tile.js","webpack:///./src/js/main.js","webpack:///./node_modules/mag-app/index.js","webpack:///./node_modules/mag-app/lib/main.js","webpack:///./node_modules/cjs-query/index.js","webpack:///./src/js/config.js","webpack:///./node_modules/spa-app/lib/events.js","webpack:///./node_modules/stb-shim-classlist/index.js","webpack:///./node_modules/stb-app/lib/metrics.js","webpack:///./src/js/metrics.js","webpack:///./node_modules/mag-app/lib/css.js","webpack:///./src/js/game/animframe_polyfill.js","webpack:///./src/js/pages/init.js","webpack:///./node_modules/spa-component-page/index.js","webpack:///./src/js/pages/main.js","webpack:///./node_modules/stb-keys/index.js","webpack:///./node_modules/spa-component-panel/index.js","webpack:///./node_modules/stb-component-button/index.js","webpack:///./node_modules/spa-component-button/index.js","webpack:///./node_modules/stb-component-modal/index.js","webpack:///./node_modules/spa-component-modal/index.js","webpack:///./src/js/game/game_manager.js","webpack:///./src/js/game/grid.js","webpack:///./src/js/game/html_actuator.js","webpack:///./src/js/game/local_storage_manager.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Emitter","parse","app","query","document","location","search","substring","config","activePage","route","pageTo","data","page","pageFrom","active","id","$node","classList","remove","events","emit","add","showPage","this","from","to","counter","Component","self","visible","focusable","$body","parent","children","propagate","createElement","className","hide","defaultEvents","keys","forEach","eventName","addListener","apply","addEventListener","event","focus","stopPropagation","constructor","child","index","arguments","length","push","parentNode","appendChild","item","activeComponent","blur","splice","indexOf","removeChild","activeItem","show","callback","setTimeout","once","onceWrapper","removeListener","addListeners","callbacks","filter","fn","undefined","Array","slice","link","rel","href","metrics","height","head","backspace","tab","enter","escape","space","pageUp","pageDown","end","home","left","up","right","down","insert","del","Tile","position","x","y","previousPosition","mergedFrom","savePosition","updatePosition","serialize","pages","init","main","ready","window","core","getCoreInstance","platform","exit","load","body","setAttribute","type","contextmenu","preventDefault","split","part","decodeURIComponent","stringify","params","encodeURIComponent","join","DOMContentLoaded","unload","error","keydown","eventLocal","code","keyCode","stop","ctrlKey","altKey","shiftKey","keypress","mousewheel","documentElement","DOMTokenList","el","_element","_classCache","classes","replace","token","contains","toString","toggle","Element","screenHeight","screen","availHeight","availTop","availBottom","availWidth","width","availLeft","availRight","480","576","720","1080","linkCSS","theme","path","lastTime","vendors","requestAnimationFrame","cancelAnimationFrame","currTime","Date","getTime","timeToCall","Math","max","clearTimeout","pageInit","Page","game","getElementById","Panel","Button","ModalBox","GameManager","HTMLActuator","LocalStorageManager","gameBoard","modalLost","back","restart","click","modalWin","_keepPlaying","control","$left","$right","$top","$bot","last","timer","innerText","actuator","lose","win","move","direction","animateControl","f2","notify","title","icon","buttons","timeout","storageManager","_saveSate","channelNext","channelPrev","ok","volumeUp","volumeDown","f1","f3","f4","refresh","frame","phone","set","tv","menu","rewind","forward","audio","standby","keyboard","usbMounted","usbUnmounted","playPause","play","pause","power","record","info","mute","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","$icon","$text","clickDuration","Modal","Grid","size","Actuator","StorageManager","startTiles","setup","clearGameState","continueGame","keepPlaying","isGameTerminated","over","won","previousState","getGameState","grid","cells","score","addStartTiles","actuate","addRandomTile","tile","cellsAvailable","random","randomAvailableCell","insertTile","getBestScore","setBestScore","setGameState","bestScore","terminated","prepareTiles","eachCell","moveTile","cell","vector","traversals","moved","38","39","40","37","getVector","buildTraversals","merged","positions","next","cellContent","findFarthestPosition","removeTile","farthest","positionsEqual","movesAvailable","0","1","2","3","pos","reverse","previous","withinBounds","cellAvailable","tileMatchesAvailable","other","first","second","fromState","empty","row","state","availableCells","floor","cellOccupied","cellState","tileContainer","scoreContainer","bestContainer","metadata","clearContainer","column","addTile","updateScore","updateBestScore","clearMessage","container","firstChild","wrapper","inner","positionClass","applyClasses","textContent","element","normalizePosition","message","messageContainer","getElementsByTagName","bestScoreKey","gameStateKey","real","localStorageSupported","storage","fakeStorage","_data","setItem","val","String","getItem","removeItem","clear","top","stbStorage","localStorage","stateJSON","JSON","_getGameState","gameState","_clearGameState","gSTB","SaveUserData","best","result","LoadUserData","e"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    parse   = require('cjs-query').parse,\n    app     = new Emitter();\n\n\n/**\n * Make the given inactive/hidden page active/visible.\n * Pass some data to the page and trigger the corresponding event.\n *\n * @param {Page} page item to show\n * @param {*} [data] data to send to page\n *\n * @return {boolean} operation status\n */\nfunction showPage ( page, data ) {\n    // page available and can be hidden\n    if ( page && !page.active ) {\n        // apply visibility\n        page.$node.classList.add('active');\n        page.active = true;\n        app.activePage = page;\n\n        debug.info('show component ' + page.name + '#' + page.id, null, {\n            tags: ['show', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' show', 'green');\n\n        // there are some listeners\n        if ( page.events['show'] ) {\n            // notify listeners\n            page.emit('show', {data: data});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n/**\n * Make the given active/visible page inactive/hidden and trigger the corresponding event.\n *\n * @param {Page} page item to hide\n *\n * @return {boolean} operation status\n */\nfunction hidePage ( page ) {\n    // page available and can be hidden\n    if ( page && page.active ) {\n        // apply visibility\n        page.$node.classList.remove('active');\n        page.active  = false;\n        app.activePage = null;\n\n        debug.info('hide component ' + page.name + '#' + page.id, null, {\n            tags: ['hide', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' hide', 'grey');\n\n        // there are some listeners\n        if ( page.events['hide'] ) {\n            // notify listeners\n            page.emit('hide');\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n// url request params\napp.query = parse(document.location.search.substring(1));\n\n\n// global application configuration\n// in config.js file in js root\napp.config = require('app:config');\n\n\n// the only visible page\napp.activePage = null;\n\n\n/**\n * Browse to a given page.\n * Do nothing if the link is invalid. Otherwise hide the current, show new and update the \"previous\" link.\n *\n * @param {Page} pageTo instance of the page to show\n * @param {*} [data] options to pass to the page on show\n *\n * @return {boolean} operation status\n */\napp.route = function ( pageTo, data ) {\n    var pageFrom = app.activePage;\n\n    if ( DEVELOP ) {\n        //if ( router.pages.length > 0 ) {\n        if ( !pageTo || typeof pageTo !== 'object' ) {\n            throw new Error(__filename + ': wrong pageTo type');\n        }\n        if ( !('active' in pageTo) ) {\n            throw new Error(__filename + ': missing field \"active\" in pageTo');\n        }\n        //}\n    }\n\n    // valid not already active page\n    if ( pageTo && !pageTo.active ) {\n        //debug.log('router.navigate: ' + pageTo.id, pageTo === pageFrom ? 'grey' : 'green');\n        debug.info('app route: ' + pageTo.name + '#' + pageTo.id, null, {tags: ['route', pageTo.name, pageTo.id]});\n\n        // update url\n        //location.hash = this.stringify(name, data);\n\n        // apply visibility\n        hidePage(app.activePage);\n        showPage(pageTo, data);\n\n        // there are some listeners\n        if ( this.events['route'] ) {\n            // notify listeners\n            this.emit('route', {from: pageFrom, to: pageTo});\n        }\n\n        // store\n        //this.history.push(pageTo);\n\n        return true;\n    }\n\n    //debug.warn('invalid page to route: ' + pageTo.id, null, {tags: ['route', 'page', pageTo.id]});\n    console.warn('invalid page to route: ' + pageTo.id);\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    Emitter = require('cjs-emitter'),\n    counter = 0;\n\n\n/**\n * Base component implementation.\n *\n * Visual element that can handle sub-components.\n * Each component has a DOM element container $node with a set of classes:\n * \"component\" and some specific component class names depending on the hierarchy, for example \"page\".\n * Each component has a unique ID given either from $node.id or from data.id. If not given will generate automatically.\n *\n * @constructor\n * @extends Emitter\n *\n * @param {Object} [config={}] init parameters\n * @param {Element} [config.id] component unique identifier (generated if not set)\n * @param {string} [config.className] space-separated list of classes for \"className\" property of this.$node\n * @param {Element} [config.$node] DOM element/fragment to be a component outer container\n * @param {Element} [config.$body] DOM element/fragment to be a component inner container (by default is the same as $node)\n * @param {Component} [config.parent] link to the parent component which has this component as a child\n * @param {Array.<Component>} [config.children=[]] list of components in this component\n * @param {Object.<string, function>} [config.events={}] list of event callbacks\n * @param {boolean} [config.visible=true] component initial visibility state flag\n * @param {boolean} [config.focusable=true] component can accept focus or not\n * @param {boolean} [config.propagate=false] allow to emit events to the parent component\n *\n * @fires module:stb/component~Component#click\n *\n * @example\n * var component = new Component({\n *     $node: document.getElementById(id),\n *     className: 'bootstrap responsive',\n *     events: {\n *         click: function () { ... }\n *     }\n * });\n * component.add( ... );\n * component.focus();\n */\nfunction Component ( config ) {\n    // current execution context\n    var self = this,\n        name;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.id && typeof config.id !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.id');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$node && !(config.$node instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$node type');\n        }\n        if ( config.$body && !(config.$body instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$body type');\n        }\n        if ( config.parent && !(config.parent instanceof Component) ) {\n            throw new Error(__filename + ': wrong config.parent type');\n        }\n        if ( config.children && !Array.isArray(config.children) ) {\n            throw new Error(__filename + ': wrong config.children type');\n        }\n    }\n\n    /**\n     * Component visibility state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.visible = true;\n\n    /**\n     * Component can accept focus or not.\n     *\n     * @type {boolean}\n     */\n    this.focusable = true;\n\n    /**\n     * DOM outer handle.\n     *\n     * @type {Element}\n     */\n    this.$node = null;\n\n    /**\n     * DOM inner handle.\n     * In simple cases is the same as $node.\n     *\n     * @type {Element}\n     */\n    this.$body = null;\n\n    /**\n     * Link to the parent component which has this component as a child.\n     *\n     * @type {Component}\n     */\n    this.parent = null;\n\n    /**\n     * List of all children components.\n     *\n     * @type {Component[]}\n     */\n    this.children = [];\n\n    /**\n     * allow to emit events to the parent component\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.propagate = !!config.propagate;\n\n    // parent constructor call\n    Emitter.call(this);\n\n    // outer handle - empty div in case nothing is given\n    this.$node = config.$node || document.createElement('div');\n\n    // inner handle - the same as outer handler in case nothing is given\n    this.$body = config.$body || this.$node;\n\n    // set CSS class names\n    //this.$node.className += ' component ' + (config.className || '');\n    // previous approach is not good as it mess with components hierarchy\n    this.$node.className = this.name + ' ' + (config.className || '');\n\n    // apply component id if given, generate otherwise\n    this.id = config.id || this.$node.id || 'cid' + counter++;\n\n    // apply hierarchy\n    if ( config.parent ) {\n        // add to parent component\n        config.parent.add(this);\n    }\n\n    // apply given visibility\n    if ( config.visible === false ) {\n        // default state is visible\n        this.hide();\n    }\n\n    // apply focus handling method\n    if ( config.focusable === false ) {\n        // can't accept focus\n        this.focusable = false;\n    }\n\n    // a descendant defined own events\n    if ( this.defaultEvents ) {\n        // sanitize\n        config.events = config.events || {};\n\n        if ( DEVELOP ) {\n            if ( typeof config.events !== 'object' ) {\n                throw new Error(__filename + ': wrong config.events type');\n            }\n            if ( typeof this.defaultEvents !== 'object' ) {\n                throw new Error(__filename + ': wrong this.defaultEvents type');\n            }\n        }\n\n        for ( name in this.defaultEvents ) {\n            // overwrite default events with user-defined\n            config.events[name] = config.events[name] || this.defaultEvents[name];\n        }\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( eventName ) {\n            self.addListener(eventName, config.events[eventName]);\n        });\n    }\n\n    // apply the given children components\n    if ( config.children ) {\n        // apply\n        this.add.apply(this, config.children);\n    }\n\n    // component activation by mouse\n    this.$node.addEventListener('click', function ( event ) {\n        // left mouse button\n        //if ( event.button === 0 ) {\n        // activate if possible\n        self.focus();\n\n        // there are some listeners\n        if ( self.events['click'] ) {\n            /**\n             * Mouse click event.\n             *\n             * @event module:stb/component~Component#click\n             *\n             * @type {Object}\n             * @property {Event} event click event data\n             */\n            self.emit('click', event);\n        }\n        //}\n\n        if ( DEVELOP ) {\n            // middle mouse button\n            if ( event.button === 1 ) {\n                //debug.inspect(self, 0);\n                debug.info('\"window.link\" or \"' + self.id + '.component\"', 'this component is now available in global scope');\n                window.link = self;\n                self.$node.classList.toggle('wired');\n            }\n        }\n\n        event.stopPropagation();\n    });\n\n    if ( DEVELOP ) {\n        // expose inner ID to global scope\n        window[self.id] = self.$node;\n\n        // expose a link\n        this.$node.component = this.$body.component = this;\n        this.$node.title = this.name + '#' + this.id + ' (outer)';\n        this.$body.title = this.name + '#' + this.id + ' (inner)';\n    }\n\n    debug.info('create component ' + this.name + '#' + this.id, null, {\n        tags: ['create', 'component', this.name, this.id]\n    });\n}\n\n\n// inheritance\nComponent.prototype = Object.create(Emitter.prototype);\nComponent.prototype.constructor = Component;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nComponent.prototype.defaultEvents = null;\n\n\n/**\n * Add a new component as a child.\n *\n * @param {...Component} [child] variable number of elements to append\n *\n * @files Component#add\n *\n * @example\n * panel.add(\n *     new Button( ... ),\n *     new Button( ... )\n * );\n */\nComponent.prototype.add = function ( child ) {\n    var index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        child = arguments[index];\n\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        // apply\n        this.children.push(child);\n        child.parent = this;\n\n        // correct DOM parent/child connection if necessary\n        if ( child.$node && child.$node.parentNode === null ) {\n            this.$body.appendChild(child.$node);\n        }\n\n        debug.info('add component ' + child.name + '#' + child.id + ' to ' + this.name + '#' + this.id, null, {\n            tags: ['add', 'component', this.name, this.id, child.name, child.id]\n        });\n\n        // there are some listeners\n        if ( this.events['add'] ) {\n            /**\n             * A child component is added.\n             *\n             * @event module:stb/component~Component#add\n             *\n             * @type {Object}\n             * @property {Component} item new component added\n             */\n            this.emit('add', {item: child});\n        }\n\n        //debug.log('component ' + this.name + '#' + this.id + ' new child: ' + child.name + '#' + child.id);\n    }\n};\n\n\n/* @todo: consider activation in future */\n///**\n// * Insert component into the specific position.\n// *\n// * @param {Component} child component instance to insert\n// * @param {number} index insertion position\n// */\n//Component.prototype.insert = function ( child, index ) {\n//    var prevIndex = this.children.indexOf(child);\n//\n//    if ( DEVELOP ) {\n//        if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n//        if ( !(child instanceof Component) ) { throw new Error(__filename + ': wrong child type'); }\n//    }\n//\n//    if ( prevIndex !== -1 ) {\n//        this.children.splice(prevIndex, 1);\n//        this.$body.removeChild(child.$node);\n//    }\n//\n//    if ( index === this.children.length ) {\n//        this.$body.appendChild(child.$node);\n//    } else {\n//        this.$body.insertBefore(child.$node, this.$body.children[index]);\n//    }\n//    this.children.splice(index, 0, child);\n//\n//    if ( !child.parent ) {\n//        child.parent = this;\n//    }\n//};\n\n\n/**\n * Delete this component and clear all associated events.\n *\n * @fires module:stb/component~Component#remove\n */\nComponent.prototype.remove = function () {\n    // really inserted somewhere\n    if ( this.parent ) {\n        if ( DEVELOP ) {\n            if ( !(this.parent instanceof Component) ) {\n                throw new Error(__filename + ': wrong this.parent type');\n            }\n        }\n\n        // active at the moment\n        if ( app.activePage.activeComponent === this ) {\n            this.blur();\n            this.parent.focus();\n        }\n        this.parent.children.splice(this.parent.children.indexOf(this), 1);\n    }\n\n    // remove all children\n    this.children.forEach(function ( child ) {\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        child.remove();\n    });\n\n    this.$node.parentNode.removeChild(this.$node);\n\n    // there are some listeners\n    if ( this.events['remove'] ) {\n        /**\n         * Delete this component.\n         *\n         * @event module:stb/component~Component#remove\n         */\n        this.emit('remove');\n    }\n\n    // remove all listeners\n    this.events = {};\n\n    //debug.log('component ' + this.name + '#' + this.id + ' remove', 'red');\n    debug.info('remove component ' + this.name + '#' + this.id, null, {\n        tags: ['remove', 'component', this.name, this.id]\n    });\n};\n\n\n/**\n * Activate the component.\n * Notify the owner-page and apply CSS class.\n *\n * @param {Object} [data] custom data which passed into handlers\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#focus\n */\nComponent.prototype.focus = function ( data ) {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // this is a visual component on a page\n    // not already focused and can accept focus\n    if ( this.focusable && this !== activeItem ) {\n        // notify the current active component\n        if ( activeItem ) { activeItem.blur(); }\n\n        /* eslint consistent-this: 0 */\n\n        // apply\n        activePage.activeComponent = activeItem = this;\n        activeItem.$node.classList.add('focus');\n\n        //debug.log('component ' + this.name + '#' + this.id + ' focus');\n        debug.info('focus component ' + this.name + '#' + this.id, null, {\n            tags: ['focus', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( activeItem.events['focus'] ) {\n            /**\n             * Make this component focused.\n             *\n             * @event module:stb/component~Component#focus\n             */\n            activeItem.emit('focus', data);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Remove focus.\n * Change page.activeComponent and notify subscribers.\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#blur\n */\nComponent.prototype.blur = function () {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // apply visuals anyway\n    this.$node.classList.remove('focus');\n\n    // this is the active component\n    if ( this === activeItem ) {\n        activePage.activeComponent = null;\n\n        //debug.log('component ' + this.name + '#' + this.id + ' blur', 'grey');\n        debug.info('blur component ' + this.name + '#' + this.id, null, {\n            tags: ['blur', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['blur'] ) {\n            /**\n             * Remove focus from this component.\n             *\n             * @event module:stb/component~Component#blur\n             */\n            this.emit('blur');\n        }\n\n        return true;\n    }\n\n    debug.warn('component ' + this.name + '#' + this.id + ' attempt to blur without link to a page', null, {\n        tags: ['blur', 'component', this.name, this.id]\n    });\n\n    // nothing was done\n    return false;\n};\n\n\n/*function show ( self, data ) {\n    // correct style\n    self.$node.classList.remove('hidden');\n    // flag\n    self.visible = true;\n\n    debug.info('show component ' + self.name + '#' + self.id, null, {\n        tags: ['show', 'component', self.name, self.id]\n    });\n\n    // there are some listeners\n    if ( self.events['show'] ) {\n        /!**\n         * Make the component visible.\n         *\n         * @event module:stb/component~Component#show\n         *!/\n        self.emit('show', data);\n    }\n}*/\n\n/**\n * Make the component visible and notify subscribers.\n *\n * @param {Object} [data] custom data which passed into handlers\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#show\n */\nComponent.prototype.show = function ( data, callback ) {\n    //var self = this;\n\n    // is it hidden\n    if ( !this.visible ) {\n        /*if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(function () {\n                show(self, data);\n                callback();\n            });\n        } else {\n            // sync call\n            show(this, data);\n        }*/\n\n        // correct style\n        this.$node.classList.remove('hidden');\n        // flag\n        this.visible = true;\n\n        debug.info('show component ' + this.name + '#' + this.id, null, {\n            tags: ['show', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['show'] ) {\n            /**\n             * Make the component visible.\n             *\n             * @event module:stb/component~Component#show\n             */\n            this.emit('show', data);\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Make the component hidden and notify subscribers.\n *\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#hide\n */\nComponent.prototype.hide = function ( callback ) {\n    // is it visible\n    if ( this.visible ) {\n        // correct style\n        this.$node.classList.add('hidden');\n        // flag\n        this.visible = false;\n\n        debug.info('hide component ' + this.name + '#' + this.id, null, {\n            tags: ['hide', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['hide'] ) {\n            /**\n             * Make the component hidden.\n             *\n             * @event module:stb/component~Component#hide\n             */\n            this.emit('hide');\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = Component;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Base Events Emitter implementation.\n *\n * @see http://nodejs.org/api/events.html\n * @constructor\n *\n * @example\n * var emitter = new Emitter();\n */\nfunction Emitter () {\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // if ( DEVELOP ) {\n    //     if ( typeof this !== 'object' ) { throw new Error(__filename + ': must be constructed via new'); }\n    // }\n\n    /**\n     * Inner hash table for event names and linked callbacks.\n     * Manual editing should be avoided.\n     *\n     * @member {Object.<string, function[]>}\n     *\n     * @example\n     * {\n     *     click: [\n     *         function click1 () { ... },\n     *         function click2 () { ... }\n     *     ],\n     *     keydown: [\n     *         function () { ... }\n     *     ]\n     * }\n     **/\n    this.events = {};\n}\n\n\nEmitter.prototype = {\n    /**\n     * Bind an event to the given callback function.\n     * The same callback function can be added multiple times for the same event name.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.addListener('click', function ( data ) { ... });\n     * // one more click handler\n     * emitter.addListener('click', function ( data ) { ... });\n     */\n    addListener: function ( name, callback ) {\n        console.assert(arguments.length === 2, 'wrong arguments number');\n        console.assert(typeof name === 'string', 'wrong name type');\n        console.assert(name.length > 0, 'empty name');\n        console.assert(typeof callback === 'function', 'callback should be a function');\n\n        // if ( DEVELOP ) {\n        //     if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        //     if ( typeof name !== 'string' || name.length === 0 ) { throw new Error(__filename + ': wrong or empty name'); }\n        //     if ( typeof callback !== 'function' ) { throw new Error(__filename + ': wrong callback type'); }\n        // }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(callback);\n    },\n\n\n    /**\n     * Add a one time listener for the event.\n     * This listener is invoked only the next time the event is fired, after which it is removed.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.once('click', function ( data ) { ... });\n     */\n    once: function ( name, callback ) {\n        // current execution context\n        var self = this;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n        }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(function onceWrapper () {\n            self.removeListener(name, onceWrapper);\n            callback.apply(self, arguments);\n        });\n    },\n\n\n    /**\n     * Apply multiple listeners at once.\n     *\n     * @param {Object} callbacks event names with callbacks\n     *\n     * @example\n     * emitter.addListeners({\n     *     click: function ( data ) {},\n     *     close: function ( data ) {}\n     * });\n     */\n    addListeners: function ( callbacks ) {\n        var name;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof callbacks !== 'object' ) {\n                throw new Error(__filename + ': wrong callbacks type');\n            }\n            if ( Object.keys(callbacks).length === 0 ) {\n                throw new Error(__filename + ': no callbacks given');\n            }\n        }\n\n        for ( name in callbacks ) {\n            if ( callbacks.hasOwnProperty(name) ) {\n                this.addListener(name, callbacks[name]);\n            }\n        }\n    },\n\n\n    /**\n     * Remove all instances of the given callback.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to remove\n     *\n     * @example\n     * emitter.removeListener('click', func1);\n     */\n    removeListener: function ( name, callback ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n            if ( this.events[name] && !Array.isArray(this.events[name]) ) {\n                throw new Error(__filename + ': corrupted inner data');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( this.events[name] ) {\n            // rework the callback list to exclude the given one\n            this.events[name] = this.events[name].filter(function callbacksFilter ( fn ) { return fn !== callback; });\n            // event has no more callbacks so clean it\n            if ( this.events[name].length === 0 ) {\n                // as if there were no listeners at all\n                this.events[name] = undefined;\n            }\n        }\n    },\n\n\n    /**\n     * Remove all callbacks for the given event name.\n     * Without event name clears all events.\n     *\n     * @param {string} [name] event identifier\n     *\n     * @example\n     * emitter.removeAllListeners('click');\n     * emitter.removeAllListeners();\n     *\n     * @deprecated\n     */\n    /*removeAllListeners: function ( name ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 0 && (typeof name !== 'string' || name.length === 0) ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // check input\n        if ( arguments.length === 0 ) {\n            // no arguments so remove everything\n            this.events = {};\n        } else if ( name ) {\n            if ( DEVELOP ) {\n                if ( this.events[name] ) { throw new Error(__filename + ': event is not removed'); }\n            }\n\n            // only name is given so remove all callbacks for the given event\n            // but object structure modification should be avoided\n            this.events[name] = undefined;\n        }\n    },*/\n\n\n    /**\n     * Execute each of the listeners in the given order with the supplied arguments.\n     *\n     * @param {string} name event identifier\n     *\n     * @example\n     * emitter.emit('init');\n     * emitter.emit('click', {src: panel1, dst: panel2});\n     * emitter.emit('load', error, data);\n     *\n     * // it's a good idea to emit event only when there are some listeners\n     * if ( this.events['click'] ) {\n     *     this.emit('click', {event: event});\n     * }\n     */\n    emit: function ( name ) {\n        var event = this.events[name],\n            index;\n\n        if ( DEVELOP ) {\n            if ( arguments.length < 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( event ) {\n            if ( DEVELOP ) {\n                if ( !Array.isArray(event) ) {\n                    throw new Error(__filename + ': wrong event type');\n                }\n            }\n\n            for ( index = 0; index < event.length; index++ ) {\n                if ( DEVELOP ) {\n                    if ( typeof event[index] !== 'function' ) {\n                        throw new Error(__filename + ': wrong event callback type');\n                    }\n                }\n\n                // invoke the callback with parameters\n                event[index].apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n    }\n};\n\n\n// correct constructor name\nEmitter.prototype.constructor = Emitter;\n\n\n// public\nmodule.exports = Emitter;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core');\n//    metrics = require('app:metrics'),\n//    linkCSS;\n\n\n// global link\n//app.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\n//app.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\n//app.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n// // set max browser window size\n// window.moveTo(0, 0);\n// window.resizeTo(metrics.width, metrics.height);\n\n// load CSS file base on resolution\n/*linkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = 'css/' + (DEVELOP ? 'develop.' : 'release.') + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);*/\n\n\n// public\nmodule.exports = function ( name ) {\n    var link = document.createElement('link');\n\n    link.rel  = 'stylesheet';\n    link.href = 'css/' + name + '.' + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\n    document.head.appendChild(link);\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-page');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-page';\n","/**\n * Global list of non-printable control key codes.\n *\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    backspace: 8,\n    tab:       9,\n    enter:     13,\n    escape:    27,\n    space:     32,\n    pageUp:    33,\n    pageDown:  34,\n    end:       35,\n    home:      36,\n    left:      37,\n    up:        38,\n    right:     39,\n    down:      40,\n    insert:    45,\n    // not \"delete\" because of old browsers issue\n    del:       46\n};\n","'use strict';\n\nfunction Tile ( position, value ) {\n    this.x = position.x;\n    this.y = position.y;\n    this.value = value || 2;\n\n    this.previousPosition = null;\n    // Tracks tiles that merged together\n    this.mergedFrom = null;\n}\n\nTile.prototype.savePosition = function () {\n    this.previousPosition = {x: this.x, y: this.y};\n};\n\nTile.prototype.updatePosition = function ( position ) {\n    this.x = position.x;\n    this.y = position.y;\n};\n\nTile.prototype.serialize = function () {\n    return {\n        position: {\n            x: this.x,\n            y: this.y\n        },\n        value: this.value\n    };\n};\n\nmodule.exports = Tile;\n","/**\n * Main application entry point.\n */\n\n'use strict';\n\nvar app = require('mag-app');\n\nrequire('./game/animframe_polyfill');\n\n// everything is ready\napp.once('load', function () {\n    // load pages\n    app.pages = {\n        init: require('./pages/init'),\n        main: require('./pages/main')\n    };\n\n    // show splash screen\n    //app.route(app.pages.init);\n\n    // show main page\n    setTimeout(function () {\n        app.ready();\n        app.route(app.pages.main);\n    }, 300);\n});\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar app = require('./lib/main');\n\n\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app    = require('spa-app/lib/core'),\n    events = require('spa-app/lib/events');\n\n\n// get instance\nwindow.core = window.parent.getCoreInstance(window, app);\n\n// shims\nrequire('stb-shim-classlist');\n\n// apply geometry\nrequire('stb-app/lib/metrics');\n\n// load sdk css\nrequire('stb-app/lib/css')('sdk');\n\n// load theme css\nrequire('./css');\n\n// load app css\nrequire('stb-app/lib/css')('app');\n\n/**\n * Specify platform name\n *\n * @type {string}\n */\napp.platform = 'mag';\n\n/**\n * Show app.\n */\napp.ready = function () {\n    // if ( this.events['show'] ) {\n    //     this.emit('show');\n    // }\n    window.core.call('app:ready');\n};\n\n\n/**\n * Exit from app.\n * Destroy all application instance.\n * If callback function provided, and callback returns boolean 'true', application will stay alive.\n *\n * @fires module:/stb/app#exit\n */\napp.exit = function () {\n    if ( app.events['exit'] ) {\n        app.emit('exit');\n    }\n\n    core.call('exit');\n};\n\n\nevents.load = function ( event ) {\n    //window.core = window.parent.getCoreInstanse(window, app);\n    document.body.setAttribute('platform', app.platform);\n\n    if ( core.ready ) {\n        if ( app.events['load'] ) {\n            // notify listeners\n            app.emit('load', {});\n        }\n    } else {\n        core.once('load', function () {\n            //core.ready = true;\n            if ( app.events[event.type] ) {\n                // notify listeners\n                app.emit(event.type, event);\n            }\n        });\n    }\n};\n\n\n// activate development mechanisms and tools\nif ( DEVELOP ) {\n    //require('stb-develop');\n    require('./develop/main');\n} else {\n    // disable context menu\n    events.contextmenu = function ( event ) {\n        event.preventDefault();\n    };\n}\n\n\n//apply DOM events\nObject.keys(events).forEach(function ( name ) {\n    window.addEventListener(name, events[name]);\n});\n\n\n// new way of string handling\n// all strings are in UTF-16\n// since stbapp 2.18\n// if ( window.gSTB && gSTB.SetNativeStringMode ) {\n//     /* eslint new-cap: 0 */\n//     gSTB.SetNativeStringMode(true);\n// }\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nmodule.exports = {\n    /**\n     * Parse the given location search string into object.\n     *\n     * @param {string} query string to parse\n     *\n     * @return {Object.<string, string>} result data\n     */\n    parse: function ( query ) {\n        var data = {};\n\n        // parse and fill the data\n        query.split('&').forEach(function ( part ) {\n            part = part.split('=');\n            // valid number on params\n            if ( part.length === 2 ) {\n                data[part[0]] = decodeURIComponent(part[1]);\n            }\n        });\n\n        return data;\n    },\n\n\n    /**\n     * Make uri query part in a string form.\n     *\n     * @param {Object} params data to stringify\n     *\n     * @return {string} query string\n     */\n    stringify: function ( params ) {\n        var data = [];\n\n        Object.keys(params).forEach(function ( name ) {\n            data.push(name + '=' + encodeURIComponent(params[name]));\n        });\n\n        return data.join('&');\n    }\n};\n","/**\n * Global application configuration.\n * Can store run-time options, API urls, paths, execution flags and so on.\n * Automatically loaded on application initialization and available as app.config.\n */\n\n'use strict';\n\n// public\nmodule.exports = {};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('./core');\n\n\n// public\nmodule.exports = {\n    DOMContentLoaded: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // there are some listeners\n        if ( app.events['dom'] ) {\n            // notify listeners\n            app.emit('dom', event);\n            //console.log('DOMContentLoaded');\n        }\n    },\n\n    /**\n     * The load event is fired when a resource and its dependent resources have finished loading.\n     *\n     * Control flow:\n     *   1. Global handler.\n     *   2. Each page handler.\n     *   3. Application DONE event.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/load\n     *\n     * @param {Event} event generated object with event data\n     */\n    load: function ( event ) {\n        //var path;\n\n        //debug.event(event);\n        //console.log(event);\n\n        // time mark\n        //app.data.time.load = event.timeStamp;\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' load', 'green');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n\n        // time mark\n        //app.data.time.done = +new Date();\n\n        // everything is ready\n        // and there are some listeners\n        // if ( app.events['done'] ) {\n        //     // notify listeners\n        //     app.emit('done', event);\n        // }\n    },\n\n    /**\n     * The unload event is fired when the document or a child resource is being unloaded.\n     *\n     * Control flow:\n     *   1. Each page handler.\n     *   2. Global handler.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/unload\n     *\n     * @param {Event} event generated object with event data\n     */\n    unload: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' unload', 'red');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n    },\n\n    /**\n     * The error event is fired when a resource failed to load.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/error\n     *\n     * @param {Event} event generated object with event data\n     */\n    error: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n        //debug.fail('app event: ' + event.message, event, {tags: [event.type, 'event']});\n        console.error('app event: ' + event.message, event);\n    },\n\n    /**\n     * The keydown event is fired when a key is pressed down.\n     * Set event.stop to true in order to prevent bubbling.\n     *\n     * Control flow:\n     *   1. Current active component on the active page.\n     *   2. Current active page itself.\n     *   3. Application.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keydown\n     *\n     * @param {Event} event generated object with event data\n     */\n    keydown: function ( event ) {\n        var page = app.activePage,\n            eventLocal = {\n                code: event.keyCode,\n                stop: false\n            },\n            activeComponent;\n\n        if ( DEVELOP ) {\n            if ( !page ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        // filter phantoms\n        //if ( event.keyCode === 0 ) { return; }\n\n        // combined key code\n        //event.code = event.keyCode;\n\n        // apply key modifiers\n        if ( event.ctrlKey )  { eventLocal.code += 'c'; }\n        if ( event.altKey )   { eventLocal.code += 'a'; }\n        if ( event.shiftKey ) { eventLocal.code += 's'; }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + eventLocal.code, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + eventLocal.code, event);\n\n        // page.activeComponent can be set to null in event handles\n        activeComponent = page.activeComponent;\n\n        // current component handler\n        if ( activeComponent && activeComponent !== page ) {\n            // component is available and not page itself\n            if ( activeComponent.events[event.type] ) {\n                // there are some listeners\n                activeComponent.emit(event.type, eventLocal, event);\n            }\n\n            // todo: bubble event recursively\n            // bubbling\n            if (\n                !eventLocal.stop &&\n                activeComponent.propagate &&\n                activeComponent.parent &&\n                activeComponent.parent.events[event.type]\n            ) {\n                activeComponent.parent.emit(event.type, eventLocal, event);\n            }\n        }\n\n        // page handler\n        if ( !eventLocal.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, eventLocal, event);\n            }\n\n            // global app handler\n            if ( !event.stop ) {\n                // not prevented\n                if ( app.events[event.type] ) {\n                    // there are some listeners\n                    app.emit(event.type, eventLocal, event);\n                }\n            }\n        }\n\n        //// suppress non-printable keys in stb device (not in your browser)\n        //if ( app.data.host && keyCodes[event.code] ) {\n        //    event.preventDefault();\n        //}\n    },\n\n    /**\n     * The keypress event is fired when press a printable character.\n     * Delivers the event only to activeComponent at active page.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keypress\n     *\n     * @param {Event} event generated object with event data\n     * @param {string} event.char entered character\n     */\n    keypress: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + event.key, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + event.key, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n    },\n\n    /**\n     * The click event is fired when a pointing device button (usually a mouse button) is pressed and released on a single element.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/click\n     *\n     * @param {Event} event generated object with event data\n     */\n    /*click: function ( event ) {\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n     },*/\n\n    /**\n     * The contextmenu event is fired when the right button of the mouse is clicked (before the context menu is displayed),\n     * or when the context menu key is pressed (in which case the context menu is displayed at the bottom left of the focused\n     * element, unless the element is a tree, in which case the context menu is displayed at the bottom left of the current row).\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/contextmenu\n     *\n     * @param {Event} event generated object with event data\n     */\n    // contextmenu: function ( event ) {\n    //     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n    //\n    //     if ( !DEVELOP ) {\n    //         // disable right click in release mode\n    //         event.preventDefault();\n    //     }\n    // },\n\n    /*contextmenu: function ( event ) {\n     //var kbEvent = {}; //Object.create(document.createEvent('KeyboardEvent'));\n\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n\n     //kbEvent.type    = 'keydown';\n     //kbEvent.keyCode = 8;\n\n     //debug.log(kbEvent.type);\n\n     //globalEventListenerKeydown(kbEvent);\n     //var event = document.createEvent('KeyboardEvent');\n     //event.initEvent('keydown', true, true);\n\n     //document.dispatchEvent(kbEvent);\n\n     if ( !DEVELOP ) {\n     // disable right click in release mode\n     event.preventDefault();\n     }\n     },*/\n\n    /**\n     * The wheel event is fired when a wheel button of a pointing device (usually a mouse) is rotated.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel\n     *\n     * @param {Event} event generated object with event data\n     */\n    mousewheel: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n\n        // page handler\n        if ( !event.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, event);\n            }\n        }\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint-disable */\n\n'use strict';\n\n\nif ( !document.documentElement.classList ) {\n    var prototype = Array.prototype,\n        indexOf   = prototype.indexOf,\n        slice     = prototype.slice,\n        push      = prototype.push,\n        splice    = prototype.splice,\n        join      = prototype.join;\n\n    window.DOMTokenList = function ( el ) {\n        this._element = el;\n        if (el.className !== this._classCache) {\n            this._classCache = el.className;\n            if (!this._classCache) { return; }\n            var classes = this._classCache.replace(/^\\s+|\\s+$/g,'').split(/\\s+/),\n                i;\n            for (i = 0; i < classes.length; i++) {\n                push.call(this, classes[i]);\n            }\n        }\n    };\n\n    window.DOMTokenList.prototype = {\n        add: function ( token ) {\n            if(this.contains(token)) { return; }\n            push.call(this, token);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        contains: function ( token ) {\n            return indexOf.call(this, token) !== -1;\n        },\n\n        item: function ( index ) {\n            return this[index] || null;\n        },\n\n        remove: function ( token ) {\n            var i = indexOf.call(this, token);\n            if (i === -1) {\n                return;\n            }\n            splice.call(this, i, 1);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        toString: function () {\n            return join.call(this, ' ');\n        },\n\n        toggle: function ( token ) {\n            if (!this.contains(token)) {\n                this.add(token);\n            } else {\n                this.remove(token);\n            }\n            return this.contains(token);\n        }\n    };\n\n    Object.defineProperty(Element.prototype, 'classList', {\n        get: function () {\n            return new window.DOMTokenList(this);\n        }\n    });\n}\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    metrics = require('app:metrics');\n\n\n// global link\napp.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\napp.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\napp.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n\n// public\n//module.exports = app;\n","/**\n * Application geometry options.\n * Automatically loaded on application initialization and available as app.metrics.\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    480: {\n        // screen base dimension\n        height: 480,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  32,\n        availLeft:   48\n        // project-specific vars\n        // put here ...\n    },\n\n    576: {\n        // screen base dimension\n        height: 576,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  26,\n        availLeft:   54\n        // project-specific vars\n        // put here ...\n    },\n\n    720: {\n        // screen base dimension\n        height: 720,\n        width:  1280,\n        // safe zone margins\n        availTop:    30,\n        availBottom: 30,\n        availRight:  40,\n        availLeft:   40\n        // project-specific vars\n        // put here ...\n    },\n\n    1080: {\n        // screen base dimension\n        height: 1080,\n        width:  1920,\n        // safe zone margins\n        availTop:    45,\n        availBottom: 45,\n        availRight:  60,\n        availLeft:   60\n        // project-specific vars\n        // put here ...\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core'),\n    //metrics = require('app:metrics'),\n    linkCSS;\n\n\n//window.core = window.parent.getCoreInstance(window, app);\n\n\nlinkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = window.core.theme.path + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);\n\n\n// public\nmodule.exports = linkCSS;\n","'use strict';\n/*eslint-disable*/\n(function () {\n\tvar lastTime = 0,\n\t\tvendors = ['webkit', 'moz'],\n\t\tx;\n\n\tfor ( x = 0; x < vendors.length && !window.requestAnimationFrame; ++x ) {\n\t\twindow.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n\t\twindow.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] ||\n\t\twindow[vendors[x] + 'CancelRequestAnimationFrame'];\n\t}\n\n\tif ( !window.requestAnimationFrame ) {\n\t\twindow.requestAnimationFrame = function ( callback ) {\n\t\t\tvar currTime = new Date().getTime(),\n\t\t\t\ttimeToCall = Math.max(0, 16 - (currTime - lastTime)),\n\t\t\t\tid;\n\n\t\t\tid = window.setTimeout(function () {\n\t\t\t\t\tcallback(currTime + timeToCall);\n\t\t\t\t},\n\t\t\t\ttimeToCall);\n\t\t\tlastTime = currTime + timeToCall;\n\t\t\treturn id;\n\t\t};\n\t}\n\n\tif ( !window.cancelAnimationFrame ) {\n\t\twindow.cancelAnimationFrame = function ( id ) {\n\t\t\tclearTimeout(id);\n\t\t};\n\t}\n}());\n","/**\n * Loading page implementation.\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar Page = require('stb-component-page'),\n    page = new Page({$node: window.pageInit});\n\n\n// public\nmodule.exports = page;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base page implementation.\n *\n * A full-screen top-level layer that can operate as an independent separate entity.\n * It is added to the document body on creation if not already linked.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n *\n * @example\n * var Page = require('stb/ui/page'),\n *     page = new Page({\n *         $node: document.getElementById(id)\n *     });\n *\n * page.addListener('show', function show () {\n *     // page is visible now\n * });\n */\nfunction Page ( config ) {\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    /**\n     * Page visibility/active state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.active = false;\n\n    /**\n     * Link to the currently active component with focus.\n     *\n     * @readonly\n     * @type {Component}\n     */\n    this.activeComponent = null;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'page ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // state flag\n    this.active = this.$node.classList.contains('active');\n\n    // correct DOM parent/child connection if necessary\n    if ( this.$node.parentNode === null ) {\n        document.body.appendChild(this.$node);\n    }\n\n    // always itself\n    this.page = this;\n}\n\n\n// inheritance\nPage.prototype = Object.create(Component.prototype);\nPage.prototype.constructor = Page;\n\n// set component name\nPage.prototype.name = 'spa-component-page';\n\n\n// public\nmodule.exports = Page;\n","/**\n * Main page implementation.\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n/*eslint no-underscore-dangle:0*/\n\nvar id = 'pageMain',\n    Page = require('stb-component-page'),\n    page = new Page({$node: document.getElementById(id)}),\n    keys = require('stb-keys'),\n    Panel = require('spa-component-panel'),\n    Button = require('stb-component-button'),\n    ModalBox = require('stb-component-modal'),\n\n    // game modules\n    GameManager = require('../game/game_manager'),\n    HTMLActuator = require('../game/html_actuator'),\n    LocalStorageManager = require('../game/local_storage_manager'),\n\n    // app components\n    game,\n\n    gameBoard = new Panel({\n        $node: document.getElementById('game'),\n        focusable: true\n    }),\n\n    modalLost = new ModalBox({\n        visible: false,\n        className: 'gameModal',\n        events: {\n            show: function () {\n                this.children[1].focus();\n            },\n            hide: function () {\n                gameBoard.focus();\n            }\n        },\n        children: [\n            new Panel({\n                className: 'modalTitle'\n            }),\n            new Button({\n                value: 'Restart',\n                events: {\n                    keydown: function ( event ) {\n                        Button.prototype.defaultEvents.keydown.call(this, event);\n                        switch ( event.code ) {\n                            case keys.right:\n                                modalLost.children[2].focus();\n                                break;\n                            case keys.exit:\n                            case keys.back:\n                                modalLost.hide();\n                                game.restart();\n                                break;\n                        }\n                    },\n                    click: function () {\n                        modalLost.hide();\n                        game.restart();\n                    }\n                }\n            }),\n            new Button({\n                value: 'exit',\n                events: {\n                    keydown: function ( event ) {\n                        Button.prototype.defaultEvents.keydown.call(this, event);\n                        switch ( event.code ) {\n                            case keys.left:\n                                modalLost.children[1].focus();\n                                break;\n                            case keys.exit:\n                            case keys.back:\n                                modalLost.hide();\n                                game.restart();\n                                break;\n                        }\n                    },\n                    click: function () {\n                        core.call('exit');\n                    }\n                }\n            })\n        ]\n    }),\n    modalWin = new ModalBox({\n        visible: false,\n        className: 'gameModal',\n        events: {\n            show: function () {\n                modalWin.children[1].focus();\n            },\n            hide: function () {\n                gameBoard.focus();\n            }\n        },\n        children: [\n            new Panel({\n                className: 'modalTitle'\n            }),\n            new Button({\n                value: 'Continue',\n                events: {\n                    keydown: function ( event ) {\n                        Button.prototype.defaultEvents.keydown.call(this, event);\n                        switch ( event.code ) {\n                            case keys.right:\n                                modalWin.children[2].focus();\n                                break;\n                            case keys.exit:\n                            case keys.back:\n                                modalWin.hide();\n                                game._keepPlaying();\n                                break;\n                        }\n                    },\n                    click: function () {\n                        modalWin.hide();\n                        game._keepPlaying();\n                    }\n                }\n            }),\n            new Button({\n                value: 'Restart',\n                events: {\n                    keydown: function ( event ) {\n                        Button.prototype.defaultEvents.keydown.call(this, event);\n                        switch ( event.code ) {\n                            case keys.left:\n                                modalWin.children[1].focus();\n                                break;\n                            case keys.exit:\n                            case keys.back:\n                                modalWin.hide();\n                                game._keepPlaying();\n                                break;\n                        }\n                    },\n                    click: function () {\n                        modalWin.hide();\n                        game.restart();\n                    }\n                }\n            })\n        ]\n    }),\n\n\n    // nodes\n    control = {\n        $left: document.getElementById('leftKey'),\n        $right: document.getElementById('rightKey'),\n        $top: document.getElementById('topKey'),\n        $bot: document.getElementById('botKey'),\n        last: null,\n        timer: 0\n    };\n\n\n// page.add(modalExit);\npage.add(modalLost);\npage.add(modalWin);\n// modalExit.children[0].$node.innerText = 'Are you sure you want to exit?';\nmodalLost.children[0].$node.innerText = 'Game over! :(';\nmodalWin.children[0].$node.innerText = 'You win :)';\n\npage.addListener('show', function () {\n    //requestAnimationFrame(function () {\n    window.game = game = new GameManager(4, HTMLActuator, LocalStorageManager);\n\n    //});\n\n    gameBoard.focus();\n    game.actuator.addListeners({\n        lose: function () {\n            modalLost.show();\n        },\n        win: function () {\n            modalWin.show();\n        }\n    });\n\n});\n\n\ngameBoard.addListener('keydown', function ( event ) {\n    switch ( event.code ) {\n        case keys.down:\n        case keys.up:\n        case keys.left:\n        case keys.right:\n            game.move(event.code);\n            animateControl(event.code); //eslint-disable-line\n            break;\n        case keys.f2:\n            game.restart();\n            break;\n        case keys.back:\n            exit(); //eslint-disable-line\n            break;\n    }\n});\n\n\npage.addListener('unload', function () {\n    game.storageManager._saveSate(game.serialize());\n});\n\n/**\n * Animate control keydowns.\n *\n * @param {number} direction - direction of pressed key\n */\nfunction animateControl ( direction ) {\n    if ( control.last ) {\n        control.last.classList.remove('click');\n    }\n    clearTimeout(control.timer);\n\n    switch ( direction ) {\n        case keys.left:\n            control.last = control.$left;\n            break;\n        case keys.right:\n            control.last = control.$right;\n            break;\n        case keys.up:\n            control.last = control.$top;\n            break;\n        case keys.down:\n            control.last = control.$bot;\n            break;\n    }\n    control.last.classList.add('click');\n\n    control.timer = setTimeout(function () {\n        control.last.classList.remove('click');\n    }, 100);\n}\n\nfunction exit (  ) {\n    core.notify({\n        title: 'Do you want to exit?',\n        icon: 'alert',\n        type: '',\n        buttons: [\n            {\n                value: 'Exit',\n                click: function () {\n                    core.call('exit');\n                }\n            },\n            {\n                value: 'Cancel',\n                click: function () { /**/ }\n            }\n        ],\n        timeout: 5000\n    });\n\n}\n\n\n// public\nmodule.exports = page;\n","/**\n * Global list of non-printable control key codes.\n *\n * At the moment `keypress` and `keydown` events are emitted for the same keys (for both printable and non-printable characters).\n *\n * WARNING!!! All codes in this file (except 'volumeUp' and 'volumeDown')\n * are used in window 'keydown' handler to prevent wrong 'keypress' firings.\n * If you add new code to this file 'keypress' event with this code will never fire.\n *\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar keys = require('spa-keys');\n\n\n// extend with additional codes\nkeys.back         = keys.backspace;\nkeys.channelNext  = keys.tab;        // Tab\nkeys.channelPrev  = keys.tab + 's';  // Shift+Tab\nkeys.ok           = keys.enter;      // Enter\nkeys.exit         = keys.escape;     // Esc\nkeys.volumeUp     = 107;             // NUMPAD +\nkeys.volumeDown   = 109;             // NUMPAD -\nkeys.f1           = 112 + 'c';       // Ctrl+F1\nkeys.f2           = 113 + 'c';       // Ctrl+F2\nkeys.f3           = 114 + 'c';       // Ctrl+F3\nkeys.f4           = 115 + 'c';       // Ctrl+F4\nkeys.refresh      = 116 + 'c';       // Ctrl+F5\nkeys.frame        = 117 + 'c';       // Ctrl+F6\nkeys.phone        = 119 + 'c';       // Ctrl+F8\nkeys.set          = 120 + 'c';       // Ctrl+F9\nkeys.tv           = 121 + 'c';       // Ctrl+F10\nkeys.menu         = 122 + 'c';       // Ctrl+F11\nkeys.app          = 123 + 'c';       // Ctrl+F12\nkeys.rewind       = 66  + 'a';       // Alt+B\nkeys.forward      = 70  + 'a';       // Alt+F\nkeys.audio        = 71  + 'a';       // Alt+G\nkeys.standby      = 74  + 'a';       // Alt+J\nkeys.keyboard     = 76  + 'a';       // Alt+L\nkeys.usbMounted   = 80  + 'a';       // Alt+P\nkeys.usbUnmounted = 81  + 'a';       // Alt+Q\nkeys.playPause    = 82  + 'a';       // Alt+R\nkeys.play         = -1;              // should be redefined on some platforms\nkeys.pause        = -1;              // should be redefined on some platforms\nkeys.stop         = 83  + 'a';       // Alt+S\nkeys.power        = 85  + 'a';       // Alt+U\nkeys.record       = 87  + 'a';       // Alt+W\nkeys.info         = 89  + 'a';       // Alt+Y\nkeys.mute         = 192 + 'a';\nkeys.digit0       = 48;\nkeys.digit1       = 49;\nkeys.digit2       = 50;\nkeys.digit3       = 51;\nkeys.digit4       = 52;\nkeys.digit5       = 53;\nkeys.digit6       = 54;\nkeys.digit7       = 55;\nkeys.digit8       = 56;\nkeys.digit9       = 57;\n\n\n// public\nmodule.exports = keys;\n\n// public\n// module.exports = {\n//     getCode: function ( event ) {\n//         var code = event.keyCode;\n//\n//         // apply key modifiers\n//         if ( event.shiftKey ) { code += 1000; }\n//         if ( event.altKey )   { code += 2000; }\n//\n//         return code;\n//     },\n//\n//     codes: {\n//         back:         8,    // Backspace\n//         channelPrev:  1009, // Shift+Tab\n//         channelNext:  9,    // Tab\n//         ok:           13,   // Enter\n//         exit:         27,   // Esc\n//         pageUp:       33,\n//         pageDown:     34,\n//         end:          35,\n//         home:         36,\n//         left:         37,\n//         up:           38,\n//         right:        39,\n//         down:         40,\n//         'delete':     46,\n//         volumeUp:     107,  // NUMPAD +\n//         volumeDown:   109,  // NUMPAD -\n//         f1:           112,  // F1\n//         f2:           113,  // F2\n//         f3:           114,  // F3\n//         f4:           115,  // F4\n//         refresh:      116,  // F5\n//         frame:        117,  // F6\n//         phone:        119,  // F8\n//         set:          120,  // F9\n//         tv:           121,  // F10\n//         menu:         122,  // F11\n//         app:          123,  // F12\n//         rewind:       2066, // Alt+B\n//         forward:      2070, // Alt+F\n//         audio:        2071, // Alt+G\n//         standby:      2074, // Alt+J\n//         keyboard:     2076, // Alt+L\n//         usbMounted:   2080, // Alt+P\n//         usbUnmounted: 2081, // Alt+Q\n//         playPause:    2082, // Alt+R\n//         stop:         2083, // Alt+S\n//         power:        2085, // Alt+U\n//         record:       2087, // Alt+W\n//         info:         2089, // Alt+Y\n//         mute:         2192\n//     }\n// };\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base panel implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n *\n * @example\n * var Panel = require('stb/ui/panel'),\n *     panel = new Panel({\n *         $node: document.getElementById('someId'),\n *         children: [\n *             new Panel({\n *                 $node: document.getElementById('anotherId')\n *             })\n *         ]\n *     });\n *\n * panel.add(\n *     new Button(),\n *     new Button(),\n *     new Button()\n * );\n *\n * page.add(panel);\n */\nfunction Panel ( config ) {\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'panel ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n}\n\n\n// inheritance\nPanel.prototype = Object.create(Component.prototype);\nPanel.prototype.constructor = Panel;\n\n// set component name\nPanel.prototype.name = 'spa-component-panel';\n\n\n// public\nmodule.exports = Panel;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-button');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-button';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component'),\n    keys      = require('spa-keys');\n\n\n/**\n * Base button implementation.\n *\n * Has global options:\n *     Button.prototype.clickDuration - time to apply \"click\" class, does not apply if 0\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {string} [config.value] button caption text (generated if not set)\n * @param {string} [config.icon] button icon name\n *\n * @example\n * var Button = require('stb/ui/button'),\n *     btnSimple, btnIcon, btnDetached;\n *\n * btnSimple = new Button({\n *     $node: document.getElementById('btnSimple'),\n *     value: 'Simple button'\n * });\n *\n * btnIcon = new Button({\n *     $node: document.getElementById('btnIcon'),\n *     icon: 'menu'\n *     value: 'Button with icon'\n * });\n *\n * btnDetached = new Button({\n *     value: 'Button not added to the page',\n *     className: 'wide'\n * });\n */\nfunction Button ( config ) {\n    // current execution context\n    //var self = this;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.icon && typeof config.icon !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.icon');\n        }\n        if ( config.value && typeof config.value !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.value');\n        }\n    }\n\n    //config.name = 'spa-component-button' + (config.className || '');\n\n    // set default className if classList property empty or undefined\n    //config.className = this.name + ' ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // optional dom\n    if ( config.icon ) {\n        // insert icon\n        this.$icon = this.$body.appendChild(document.createElement('div'));\n        this.$icon.className = 'icon ' + config.icon;\n    }\n\n    // insert caption placeholder\n    this.$text = this.$body.appendChild(document.createElement('div'));\n    this.$text.classList.add('text');\n\n    if ( config.value ) {\n        // fill it\n        this.$text.innerText = config.value;\n    }\n}\n\n\n// inheritance\nButton.prototype = Object.create(Component.prototype);\nButton.prototype.constructor = Button;\n\n// set component name\nButton.prototype.name = 'spa-component-button';\n\n\n// time to apply \"click\" class, does not apply if 0\nButton.prototype.clickDuration = 200;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nButton.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse click events.\n     */\n    click: function () {\n        // current execution context\n        var self = this;\n\n        this.$node.classList.add('click');\n\n        setTimeout(function () {\n            self.$node.classList.remove('click');\n        }, this.clickDuration);\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        if ( event.code === keys.enter ) {\n            // emulate click\n            // there are some listeners\n            if ( this.events['click'] ) {\n                /**\n                 * Mouse click event emulation.\n                 *\n                 * @event module:stb/ui/button~Button#click\n                 *\n                 * @type {Object}\n                 * @property {Event} event click event data\n                 */\n                this.emit('click', {event: event});\n            }\n        }\n    }\n};\n\n\n// public\nmodule.exports = Button;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-modal');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-modal';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base modal window implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n */\nfunction Modal ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body ) {\n            throw new Error(__filename + ': config.$body should not be provided manually');\n        }\n    }\n\n    // create centered div\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // add table-cell wrapper\n    this.$node.appendChild(document.createElement('div').appendChild(this.$body).parentNode);\n}\n\n\n// inheritance\nModal.prototype = Object.create(Component.prototype);\nModal.prototype.constructor = Modal;\n\n// set component name\nModal.prototype.name = 'spa-component-modal';\n\n\n// public\nmodule.exports = Modal;\n","'use strict';\n/*eslint-disable*/\nvar Grid = require('./grid'),\n    Tile = require('./tile');\n\nfunction GameManager ( size, /*InputManager,*/ Actuator, StorageManager ) {\n    this.size = size; // Size of the grid\n    // this.inputManager   = new InputManager;\n    this.storageManager = new StorageManager();\n    this.actuator = new Actuator();\n\n    this.startTiles = 2;\n\n    this.setup();\n}\n\n// Restart the game\nGameManager.prototype.restart = function () {\n    this.storageManager.clearGameState();\n    this.actuator.continueGame(); // Clear the game won/lost message\n    this.setup();\n};\n\n/**\n * Keep playing after winning (allows going over 2048)\n *\n * @private\n */\nGameManager.prototype._keepPlaying = function () {\n    this.keepPlaying = true;\n    this.actuator.continueGame(); // Clear the game won/lost message\n};\n\n// Return true if the game is lost, or has won and the user hasn't kept playing\nGameManager.prototype.isGameTerminated = function () {\n    return this.over || (this.won && !this.keepPlaying);\n};\n\n// Set up the game\nGameManager.prototype.setup = function () {\n    var previousState = this.storageManager.getGameState();\n\n    // Reload the game from a previous game if present\n    if ( previousState ) {\n        this.grid = new Grid(previousState.grid.size,\n            previousState.grid.cells); // Reload grid\n        this.score = previousState.score;\n        this.over = previousState.over;\n        this.won = previousState.won;\n        this.keepPlaying = previousState.keepPlaying;\n    } else {\n        this.grid = new Grid(this.size);\n        this.score = 0;\n        this.over = false;\n        this.won = false;\n        this.keepPlaying = false;\n\n        // Add the initial tiles\n        this.addStartTiles();\n    }\n\n    // Update the actuator\n    this.actuate();\n};\n\n// Set up the initial tiles to start the game with\nGameManager.prototype.addStartTiles = function () {\n    var i;\n\n    for ( i = 0; i < this.startTiles; i++ ) {\n        this.addRandomTile();\n    }\n};\n\n// Adds a tile in a random position\nGameManager.prototype.addRandomTile = function () {\n    var value, tile;\n\n    if ( this.grid.cellsAvailable() ) {\n        value = Math.random() < 0.9 ? 2 : 4;\n        tile = new Tile(this.grid.randomAvailableCell(), value);\n\n        this.grid.insertTile(tile);\n    }\n};\n\n// Sends the updated grid to the actuator\nGameManager.prototype.actuate = function () {\n    if ( this.storageManager.getBestScore() < this.score ) {\n        this.storageManager.setBestScore(this.score);\n    }\n\n    // Clear the state when the game is over (game over only, not win)\n    if ( this.over ) {\n        this.storageManager.clearGameState();\n    } else {\n        this.storageManager.setGameState(this.serialize());\n    }\n\n    this.actuator.actuate(this.grid, {\n        score: this.score,\n        over: this.over,\n        won: this.won,\n        bestScore: this.storageManager.getBestScore(),\n        terminated: this.isGameTerminated()\n    });\n\n};\n\n// Represent the current game as an object\nGameManager.prototype.serialize = function () {\n    return {\n        grid: this.grid.serialize(),\n        score: this.score,\n        over: this.over,\n        won: this.won,\n        keepPlaying: this.keepPlaying\n    };\n};\n\n// Save all tile positions and remove merger info\nGameManager.prototype.prepareTiles = function () {\n    /*eslint-disable*/\n    this.grid.eachCell(function ( x, y, tile ) {\n        if ( tile ) {\n            tile.mergedFrom = null;\n            tile.savePosition();\n        }\n    });\n};\n\n// Move a tile and its representation\nGameManager.prototype.moveTile = function ( tile, cell ) {\n    this.grid.cells[tile.x][tile.y] = null;\n    this.grid.cells[cell.x][cell.y] = tile;\n    tile.updatePosition(cell);\n};\n\n// Move tiles on the grid in the specified direction\nGameManager.prototype.move = function ( direction ) {\n    // 0: up, 1: right, 2: down, 3: left\n    var self = this,\n        cell, tile, vector, traversals, moved,\n        map = {\n            38: 0, // Up\n            39: 1, // Right\n            40: 2, // Down\n            37: 3 // Left\n        };\n\n    //\n    direction = map[direction];\n    //\n    if ( this.isGameTerminated() ) {\n        return;\n    } // Don't do anything if the game's over\n\n\n    vector = this.getVector(direction);\n    traversals = this.buildTraversals(vector);\n    moved = false;\n\n    // Save the current tile positions and remove merger information\n    this.prepareTiles();\n\n    // Traverse the grid in the right direction and move tiles\n    traversals.x.forEach(function ( x ) {\n        traversals.y.forEach(function ( y ) {\n            var merged,\n                positions,\n                next;\n\n            cell = {x: x, y: y};\n            tile = self.grid.cellContent(cell);\n\n            if ( tile ) {\n                positions = self.findFarthestPosition(cell, vector);\n                next = self.grid.cellContent(positions.next);\n\n                // Only one merger per row traversal?\n                if ( next && next.value === tile.value && !next.mergedFrom ) {\n                    merged = new Tile(positions.next, tile.value * 2);\n                    merged.mergedFrom = [tile, next];\n\n                    self.grid.insertTile(merged);\n                    self.grid.removeTile(tile);\n\n                    // Converge the two tiles' positions\n                    tile.updatePosition(positions.next);\n\n                    // Update the score\n                    self.score += merged.value;\n\n                    // The mighty 2048 tile\n                    if ( merged.value === 2048 ) { self.won = true; }\n                } else {\n                    self.moveTile(tile, positions.farthest);\n                }\n\n                if ( !self.positionsEqual(cell, tile) ) {\n                    moved = true; // The tile moved from its original cell!\n                }\n            }\n        });\n    });\n\n    if ( moved ) {\n        this.addRandomTile();\n\n        if ( !this.movesAvailable() ) {\n            this.over = true; // Game over!\n        }\n\n        this.actuate();\n    }\n};\n\n// Get the vector representing the chosen direction\nGameManager.prototype.getVector = function ( direction ) {\n    // Vectors representing tile movement\n    var map = {\n        0: {x: 0, y: -1}, // Up\n        1: {x: 1, y: 0},  // Right\n        2: {x: 0, y: 1},  // Down\n        3: {x: -1, y: 0}   // Left\n    };\n    return map[direction];\n};\n\n// Build a list of positions to traverse in the right order\nGameManager.prototype.buildTraversals = function ( vector ) {\n    var pos,\n        traversals = {x: [], y: []};\n\n    for ( pos = 0; pos < this.size; pos++ ) {\n        traversals.x.push(pos);\n        traversals.y.push(pos);\n    }\n\n    // Always traverse from the farthest cell in the chosen direction\n    if ( vector.x === 1 ) { traversals.x = traversals.x.reverse(); }\n    if ( vector.y === 1 ) { traversals.y = traversals.y.reverse(); }\n\n    return traversals;\n};\n\nGameManager.prototype.findFarthestPosition = function ( cell, vector ) {\n    var previous;\n\n    // Progress towards the vector direction until an obstacle is found\n    do {\n        previous = cell;\n        cell = {x: previous.x + vector.x, y: previous.y + vector.y};\n    } while ( this.grid.withinBounds(cell) &&\n    this.grid.cellAvailable(cell) );\n\n    return {\n        farthest: previous,\n        next: cell // Used to check if a merge is required\n    };\n};\n\nGameManager.prototype.movesAvailable = function () {\n    return this.grid.cellsAvailable() || this.tileMatchesAvailable();\n};\n\n// Check for available matches between tiles (more expensive check)\nGameManager.prototype.tileMatchesAvailable = function () {\n    var self = this,\n        tile, x, y,\n        cell, other,\n        direction, vector;\n\n\n    for ( x = 0; x < this.size; x++ ) {\n        for ( y = 0; y < this.size; y++ ) {\n            tile = this.grid.cellContent({x: x, y: y});\n\n            if ( tile ) {\n                for ( direction = 0; direction < 4; direction++ ) {\n                    vector = self.getVector(direction);\n                    cell = {x: x + vector.x, y: y + vector.y};\n\n                    other = self.grid.cellContent(cell);\n\n                    if ( other && other.value === tile.value ) {\n                        return true; // These two tiles can be merged\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n};\n\nGameManager.prototype.positionsEqual = function ( first, second ) {\n    return first.x === second.x && first.y === second.y;\n};\n\nmodule.exports = GameManager;\n","'use strict';\n\nvar Tile = require('./tile');\n\n/*eslint-disable*/\nfunction Grid ( size, previousState ) {\n\tthis.size = size;\n\tthis.cells = previousState ? this.fromState(previousState) : this.empty();\n}\n\n// Build a grid of the specified size\nGrid.prototype.empty = function () {\n\tvar cells = [];\n\n\tfor ( var x = 0; x < this.size; x++ ) {\n\t\tvar row = cells[x] = [];\n\n\t\tfor ( var y = 0; y < this.size; y++ ) {\n\t\t\trow.push(null);\n\t\t}\n\t}\n\n\treturn cells;\n};\n\nGrid.prototype.fromState = function ( state ) {\n\tvar cells = [];\n\n\tfor ( var x = 0; x < this.size; x++ ) {\n\t\tvar row = cells[x] = [];\n\n\t\tfor ( var y = 0; y < this.size; y++ ) {\n\t\t\tvar tile = state[x][y];\n\t\t\trow.push(tile ? new Tile(tile.position, tile.value) : null);\n\t\t}\n\t}\n\n\treturn cells;\n};\n\n// Find the first available random position\nGrid.prototype.randomAvailableCell = function () {\n\tvar cells = this.availableCells();\n\n\tif ( cells.length ) {\n\t\treturn cells[Math.floor(Math.random() * cells.length)];\n\t}\n};\n\nGrid.prototype.availableCells = function () {\n\tvar cells = [];\n\n\tthis.eachCell(function ( x, y, tile ) {\n\t\tif ( !tile ) {\n\t\t\tcells.push({x: x, y: y});\n\t\t}\n\t});\n\n\treturn cells;\n};\n\n// Call callback for every cell\nGrid.prototype.eachCell = function ( callback ) {\n\tfor ( var x = 0; x < this.size; x++ ) {\n\t\tfor ( var y = 0; y < this.size; y++ ) {\n\t\t\tcallback(x, y, this.cells[x][y]);\n\t\t}\n\t}\n};\n\n// Check if there are any cells available\nGrid.prototype.cellsAvailable = function () {\n\treturn !!this.availableCells().length;\n};\n\n// Check if the specified cell is taken\nGrid.prototype.cellAvailable = function ( cell ) {\n\treturn !this.cellOccupied(cell);\n};\n\nGrid.prototype.cellOccupied = function ( cell ) {\n\treturn !!this.cellContent(cell);\n};\n\nGrid.prototype.cellContent = function ( cell ) {\n\tif ( this.withinBounds(cell) ) {\n\t\treturn this.cells[cell.x][cell.y];\n\t} else {\n\t\treturn null;\n\t}\n};\n\n// Inserts a tile at its position\nGrid.prototype.insertTile = function ( tile ) {\n\tthis.cells[tile.x][tile.y] = tile;\n};\n\nGrid.prototype.removeTile = function ( tile ) {\n\tthis.cells[tile.x][tile.y] = null;\n};\n\nGrid.prototype.withinBounds = function ( position ) {\n\treturn position.x >= 0 && position.x < this.size &&\n\t\tposition.y >= 0 && position.y < this.size;\n};\n\nGrid.prototype.serialize = function () {\n\tvar cellState = [];\n\n\tfor ( var x = 0; x < this.size; x++ ) {\n\t\tvar row = cellState[x] = [];\n\n\t\tfor ( var y = 0; y < this.size; y++ ) {\n\t\t\trow.push(this.cells[x][y] ? this.cells[x][y].serialize() : null);\n\t\t}\n\t}\n\n\treturn {\n\t\tsize: this.size,\n\t\tcells: cellState\n\t};\n};\n\nmodule.exports = Grid;\n","'use strict';\n\nvar Emitter = require('cjs-emitter');\n\n/*eslint-disable*/\n\nfunction HTMLActuator () {\n    this.tileContainer = document.getElementById('tile-container');\n    this.scoreContainer = document.getElementById('score-container');\n    this.bestContainer = document.getElementById('best-container');\n    this.score = 0;\n\n\n    Emitter.call(this);\n}\n\nHTMLActuator.prototype = Object.create(Emitter.prototype);\nHTMLActuator.prototype.constructor = HTMLActuator;\n\nHTMLActuator.prototype.actuate = function ( grid, metadata ) {\n    var self = this;\n\n    window.requestAnimationFrame(function () {\n        self.clearContainer(self.tileContainer);\n\n        grid.cells.forEach(function ( column ) {\n            column.forEach(function ( cell ) {\n                if ( cell ) {\n                    self.addTile(cell);\n                }\n            });\n        });\n\n        self.updateScore(metadata.score);\n        self.updateBestScore(metadata.bestScore);\n\n        if ( metadata.terminated ) {\n            if ( metadata.over ) {\n                //self.message(false); // You lose\n                self.emit('lose');\n            } else if ( metadata.won ) {\n                //self.message(true); // You win!\n                self.emit('win');\n            }\n        }\n\n    });\n};\n\n// Continues the game (both restart and keep playing)\nHTMLActuator.prototype.continueGame = function () {\n    this.clearMessage();\n};\n\nHTMLActuator.prototype.clearContainer = function ( container ) {\n    while ( container.firstChild ) {\n        container.removeChild(container.firstChild);\n    }\n};\n\nHTMLActuator.prototype.addTile = function ( tile ) {\n    var self = this;\n\n    var wrapper = document.createElement('div');\n    var inner = document.createElement('div');\n    var position = tile.previousPosition || {x: tile.x, y: tile.y};\n    var positionClass = this.positionClass(position);\n\n    // We can't use classlist because it somehow glitches when replacing classes\n    var classes = ['tile', 'tile-' + tile.value, positionClass];\n\n    if ( tile.value > 2048 ) classes.push('tile-super');\n\n    this.applyClasses(wrapper, classes);\n\n    inner.classList.add('tile-inner');\n    inner.textContent = tile.value;\n\n    if ( tile.previousPosition ) {\n        // Make sure that the tile gets rendered in the previous position first\n        window.requestAnimationFrame(function () {\n            classes[2] = self.positionClass({x: tile.x, y: tile.y});\n            self.applyClasses(wrapper, classes); // Update the position\n        });\n    } else if ( tile.mergedFrom ) {\n        classes.push('tile-merged');\n        this.applyClasses(wrapper, classes);\n\n        // Render the tiles that merged\n        tile.mergedFrom.forEach(function ( merged ) {\n            self.addTile(merged);\n        });\n    } else {\n        classes.push('tile-new');\n        this.applyClasses(wrapper, classes);\n    }\n\n    // Add the inner part of the tile to the wrapper\n    wrapper.appendChild(inner);\n\n    // Put the tile on the board\n    this.tileContainer.appendChild(wrapper);\n};\n\nHTMLActuator.prototype.applyClasses = function ( element, classes ) {\n    element.setAttribute('class', classes.join(' '));\n};\n\nHTMLActuator.prototype.normalizePosition = function ( position ) {\n    return {x: position.x + 1, y: position.y + 1};\n};\n\nHTMLActuator.prototype.positionClass = function ( position ) {\n    position = this.normalizePosition(position);\n    return 'tile-position-' + position.x + '-' + position.y;\n};\n\nHTMLActuator.prototype.updateScore = function ( score ) {\n    this.clearContainer(this.scoreContainer);\n    this.score = score;\n\n    this.scoreContainer.textContent = this.score;\n};\n\nHTMLActuator.prototype.updateBestScore = function ( bestScore ) {\n    this.bestContainer.textContent = bestScore;\n};\n\nHTMLActuator.prototype.message = function ( won ) {\n    var type = won ? 'game-won' : 'game-over';\n    var message = won ? 'You win!' : 'Game over!';\n\n    this.messageContainer.classList.add(type);\n    this.messageContainer.getElementsByTagName('p')[0].textContent = message;\n};\n\nHTMLActuator.prototype.clearMessage = function () {\n    // IE only takes one value to remove at a time.\n    /*    this.messageContainer.classList.remove('game-won');\n    this.messageContainer.classList.remove('game-over');*/\n};\n\nmodule.exports = HTMLActuator;\n","'use strict';\n\nvar jsonFile = '2048.json';\n\n/*eslint-disable*/\n\nwindow.fakeStorage = {\n\t_data: {},\n\n\tsetItem: function ( id, val ) {\n\t\treturn this._data[id] = String(val);\n\t},\n\n\tgetItem: function ( id ) {\n\t\treturn this._data.hasOwnProperty(id) ? this._data[id] : undefined;\n\t},\n\n\tremoveItem: function ( id ) {\n\t\treturn delete this._data[id];\n\t},\n\n\tclear: function () {\n\t\treturn this._data = {};\n\t}\n};\n\nfunction LocalStorageManager () {\n\tthis.bestScoreKey = \"bestScore\";\n\tthis.gameStateKey = \"gameState\";\n\n\tthis.real = this.localStorageSupported();\n\tthis.storage = this.real || window.fakeStorage;\n}\n\nLocalStorageManager.prototype.localStorageSupported = function () {\n\tvar testKey = \"test\";\n\tvar storage = window.top.stbStorage || window.localStorage || window.top.localStorage;\n\n\ttry {\n\t\tstorage.setItem(testKey, \"1\");\n\t\tstorage.removeItem(testKey);\n\t\treturn storage;\n\t} catch ( error ) {\n\t\treturn false;\n\t}\n};\n\n// Best score getters/setters\nLocalStorageManager.prototype.getBestScore = function () {\n\treturn this.storage.getItem(this.bestScoreKey) || 0;\n};\n\nLocalStorageManager.prototype.setBestScore = function ( score ) {\n\tthis.storage.setItem(this.bestScoreKey, score);\n};\n\n// Game state getters/setters and clearing\nLocalStorageManager.prototype.getGameState = function () {\n\tif ( !this.real ) {\n\t\tdebug.log('Restore last game state from storage');\n\t\treturn this._getGameState();\n\n\t} else {\n\t\tvar stateJSON = this.storage.getItem(this.gameStateKey);\n\t\treturn stateJSON ? JSON.parse(stateJSON) : null;\n\t}\n};\n\nLocalStorageManager.prototype.setGameState = function ( gameState ) {\n\tthis.storage.setItem(this.gameStateKey, JSON.stringify(gameState));\n};\n\nLocalStorageManager.prototype.clearGameState = function () {\n\tif ( this.real ) {\n\t\tthis.storage.removeItem(this.gameStateKey);\n\t} else {\n\t\tthis._clearGameState();\n\t}\n\n};\n\n\nLocalStorageManager.prototype._saveSate = function ( gameState ) {\n\twindow.top.gSTB.SaveUserData(jsonFile, JSON.stringify({\n\t\tgame: gameState,\n\t\tbest: this.storage.getItem(this.bestScoreKey)\n\t}));\n};\n\nLocalStorageManager.prototype._clearGameState = function () {\n\twindow.top.gSTB.SaveUserData(jsonFile, JSON.stringify({\n\t\tbest: this.storage.getItem(this.bestScoreKey)\n\t}));\n};\n\nLocalStorageManager.prototype._getGameState = function () {\n\tvar result = window.top.gSTB.LoadUserData(jsonFile);\n\n\ttry {\n\t\tresult = JSON.parse(result);\n\t\tif ( result && result.best ) {\n\t\t\tthis.setBestScore(result.best);\n\t\t}\n\t\tif ( result && result.game ) {\n\t\t\tresult = result.game;\n\t\t} else {\n\t\t\tresult = null;\n\t\t}\n\t} catch ( e ) {\n\t\tresult = null;\n\t}\n\treturn result;\n};\n\nmodule.exports = LocalStorageManager;\n"],"sourceRoot":""}