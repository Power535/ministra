{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/stb-keys/index.js","webpack:///./node_modules/stb-component/index.js","webpack:///./node_modules/spa-app/lib/core.js","webpack:///./node_modules/spa-component/index.js","webpack:///./node_modules/cjs-emitter/index.js","webpack:///./node_modules/mag-app/index.js","webpack:///./src/js/config.js","webpack:///./node_modules/stb-app/lib/css.js","webpack:///./src/js/modules/geo.js","webpack:///./node_modules/spa-keys/index.js","webpack:///./node_modules/mag-component-layout-list/index.js","webpack:///./node_modules/mag-component-list/index.js","webpack:///./node_modules/mag-component-modal/index.js","webpack:///./src/js/main.js","webpack:///./node_modules/mag-app/lib/main.js","webpack:///./node_modules/cjs-query/index.js","webpack:///./node_modules/spa-app/lib/events.js","webpack:///./node_modules/stb-shim-classlist/index.js","webpack:///./node_modules/stb-app/lib/metrics.js","webpack:///./src/js/metrics.js","webpack:///./node_modules/mag-app/lib/css.js","webpack:///./node_modules/spa-gettext/index.js","webpack:///./node_modules/cjs-gettext/index.js","webpack:///./src/js/pages/main.js","webpack:///./node_modules/mag-component-panel/index.js","webpack:///./node_modules/mag-component-layout/index.js","webpack:///./node_modules/mag-component-panel-set/index.js","webpack:///./node_modules/mag-component-layout-list/node_modules/mag-component-layout/index.js","webpack:///./node_modules/stb-component-modal/index.js","webpack:///./node_modules/spa-component-modal/index.js","webpack:///./node_modules/mag-component-radio-list/index.js","webpack:///./node_modules/spa-component-checkbox/index.js","webpack:///./node_modules/stb-component-scrollbar/index.js","webpack:///./node_modules/spa-component-scrollbar/index.js","webpack:///./node_modules/mag-component-footer/index.js","webpack:///./node_modules/mag-component-scroll-area/index.js","webpack:///./node_modules/spa-dom/index.js","webpack:///./src/js/modules/weather.js","webpack:///./src/js/modules/utils/random.js","webpack:///./src/js/modules/utils/degree.2.string.js","webpack:///./src/js/modules/weather.icons.js","webpack:///./src/js/modules/app.exit.js","webpack:///./src/js/modules/keyboard.js","webpack:///./src/js/modules/forecast.builder.js","webpack:///./src/js/modules/utils/converter.js","webpack:///./node_modules/stb-component-page/index.js","webpack:///./node_modules/spa-component-page/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","keys","back","backspace","channelNext","tab","channelPrev","ok","enter","exit","escape","volumeUp","volumeDown","f1","f2","f3","f4","refresh","frame","phone","set","tv","menu","app","rewind","forward","audio","standby","keyboard","usbMounted","usbUnmounted","playPause","play","pause","stop","power","record","info","mute","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","Emitter","parse","query","document","location","search","substring","config","activePage","route","pageTo","data","page","pageFrom","active","id","$node","classList","remove","events","emit","add","showPage","this","from","to","counter","Component","self","visible","focusable","$body","parent","children","propagate","createElement","className","hide","defaultEvents","forEach","eventName","addListener","apply","addEventListener","event","focus","stopPropagation","constructor","child","index","arguments","length","push","parentNode","appendChild","item","activeComponent","blur","splice","indexOf","removeChild","activeItem","show","callback","setTimeout","once","onceWrapper","removeListener","addListeners","callbacks","filter","fn","undefined","Array","slice","searchInputDelay","weatherServerURL","getGeo","link","rel","href","metrics","height","head","geo","getLocationName","coordinates","cb","loc","language","core","environment","client","XMLHttpRequest","open","lat","lon","onload","status","JSON","responseText","error","send","displayName","address","city","state","country","load","locationName","stringify","split","param","onerror","space","pageUp","pageDown","end","home","left","up","right","down","insert","del","List","Layout","LayoutList","handlers","links","$noData","fixedData","$item","layout","inner","focusIndex","focusItem","renderItemDefault","layoutConfig","currentNode","currentData","ready","items","childNodes","innerText","firstChild","$parentItem","click","setData","init","$wrap","noData","innerHTML","Element","renderItem","$focusItem","viewIndex","type","TYPE_VERTICAL","size","cycle","scroll","provider","TYPE_HORIZONTAL","mousewheel","wheelDeltaY","move","wheelDeltaX","keydown","code","idx","currSize","onClick","render","blocked","realSize","maxCount","viewSize","pos","normalize","blurItem","renderView","itemData","prevIndex","currIndex","mark","scrollTo","direction","force","previousSibling","lastChild","nextSibling","$prev","$curr","markItem","StbComponentModal","Modal","$overlay","onkeydown","$header","$text","title","icon","$icon","userStore","pages","main","currentLocation","window","getCoreInstance","platform","body","setAttribute","contextmenu","preventDefault","part","decodeURIComponent","params","encodeURIComponent","join","DOMContentLoaded","unload","eventLocal","keyCode","ctrlKey","altKey","shiftKey","keypress","documentElement","DOMTokenList","el","_element","_classCache","classes","replace","token","contains","toString","toggle","screenHeight","screen","availHeight","availTop","availBottom","availWidth","width","availLeft","availRight","480","576","720","1080","linkCSS","theme","path","Gettext","loader","prepare","gettext","_","pgettext","ngettext","defaultLanguage","xhr","ext","ontimeout","meta","msgId","context","plural","evalResult","eval","mainPanelSet","dropdown","leftPanel","mainPanel","menuListView","settingsStore","locationsStore","menuListScroll","mainPanelSettingsList","inputContainerList","mainPanelTitle","Panel","PanelSet","ModalMessage","RadioList","ScrollBar","Footer","ScrollArea","dom","Weather","appExit","keyboardOpen","forecastBuilder","forecasts","actualLocationsList","syncLocationForecast","sessionTmpSettings","celsiusIcon","fahrenheitIcon","actualSearch","openSearchModalWindow","modals","closeModalWindow","settingsTemperature","settingsWindSpeedUnits","locationContextMenu","flags","isSettingsModalShown","isAddCityModalShown","isContextMenuModalShown","isDisplaySettings","footer","buildWeatherStructure","applySettings","temperature","windSpeedUnits","saveData","forecastBlock","forecastId","setForecast","renderList","elem","sizeLimit","scrollType","mixin","headerMenuItem","footerMenuItem","tmp","goExit","tmpData","unshift","concat","scroller","style","display","searchPlaces","response","isSearchPlaceSuccess","map","line","rePlaceTitle","placeParts","display_name","test","match","isArray","titlePlace","randomId","Math","random","Date","now","locationItemData","isPlaceAbsent","fullName","shortName","forecast","defaultValue","deleteCity","notify","buttons","target","setNoData","modifyContextMenuByMask","mask","itemToReturn","renderPage","settings","settingsListData","contextMenuList","dataLength","inputDelay","contextMenuEventHook","observeMenuListView","onCityConfig","noCityConfig","action","middle","elemSelector","trim","overflow","evt","click:item","panels","focus:item","move:view","tag","firstElementChild","getElementById","locations","mainCitiesList","goBack","shadows","$left","$right","$wrapper","HTMLElement","wrap","componentClickHandler","textContent","keydownHandler","CheckBox","group","$checkedData","checkBox","$last","table","tr","td","check","groups","thumbRect","trackRect","$thumb","getBoundingClientRect","marginTop","marginLeft","curr","prev","currentTab","tabs","codes","$table","insertRow","rows","insertCell","cells","currTab","$tab","$tabChildren","addClick","ind","disabled","visibility","onclick","step","realHeight","viewHeight","topPosition","delta","top","ceil","offsetHeight","tagName","attrList","content","node","createTextNode","fragment","createDocumentFragment","tagDst","Node","nodes","count","clear","degrToStr","weatherIcons","fullMonthNames","fullDaysOfWeek","REQUEST_TIMEOUT_TIME","UPDATE_TIMEOUT_TIME","hash","url","Image_Desc","updateTimeout","update","timeout","constructorConfig","badRequests","getForecast","RESPONSE_CODE_OK","RESPONSE_CODE_CODE_NO_DATA","RESPONSE_CODE_STALE_DATA","RESPONSE_CODE_BAD_PARAMS","RESPONSE_CODE_BAD_HASH","normalizeForecast","day","date","current","dayName","indicator","description","temperatureDay","temperatureNight","humidity","windSpeed","days","desc","windDirection","wd","tcc","thc","tlc","wsk","toFixed","h","getDay","ask","hashed","tools","round","clearTimeout","min","max","floor","north","ne","east","se","south","sw","west","nw","degree","113","116","119","122","143","176","179","182","185","200","227","230","248","260","263","266","281","284","293","296","299","302","305","308","311","314","317","320","323","326","329","332","335","338","350","353","356","359","362","365","368","371","374","377","386","389","392","395","goHome","exitModal","previousFocus","intent","done","targetElem","$msgElem","convert","doc","builder","cloneNode","lastElementChild","evalTemp","evalWind","removeZeros","currentDay","struct","DOMStruct","isDOMStructReady","temp","parseInt","wind","units","dateString","currentDayDate","currentDayTemp","currentDayIcon","src","currentDayDesc","currentDayDetailsDayTemp","currentDayDetailsNightTemp","currentDayDetailsHumidity","currentDayDetailsWind","otherDaysFirstDayDate","otherDaysFirstDayIcon","otherDaysFirstDayTemp","otherDaysSecondDayDate","otherDaysSecondDayIcon","otherDaysSecondDayTemp","otherDaysThirdDayDate","otherDaysThirdDayIcon","otherDaysThirdDayTemp","resolution","imgPath","appended","detailsSunnyIco","detailsNightIco","detailsHumidityIco","detailsWindIco","getElementsByClassName","element","buildDOMStruct","baseValue","parseFloat","CF","FC","MSKH","KHMS","MSMH","MHMS","KHMH","MHKH","Error","Page"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","/**\n * Global list of non-printable control key codes.\n *\n * At the moment `keypress` and `keydown` events are emitted for the same keys (for both printable and non-printable characters).\n *\n * WARNING!!! All codes in this file (except 'volumeUp' and 'volumeDown')\n * are used in window 'keydown' handler to prevent wrong 'keypress' firings.\n * If you add new code to this file 'keypress' event with this code will never fire.\n *\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar keys = require('spa-keys');\n\n\n// extend with additional codes\nkeys.back         = keys.backspace;\nkeys.channelNext  = keys.tab;        // Tab\nkeys.channelPrev  = keys.tab + 's';  // Shift+Tab\nkeys.ok           = keys.enter;      // Enter\nkeys.exit         = keys.escape;     // Esc\nkeys.volumeUp     = 107;             // NUMPAD +\nkeys.volumeDown   = 109;             // NUMPAD -\nkeys.f1           = 112 + 'c';       // Ctrl+F1\nkeys.f2           = 113 + 'c';       // Ctrl+F2\nkeys.f3           = 114 + 'c';       // Ctrl+F3\nkeys.f4           = 115 + 'c';       // Ctrl+F4\nkeys.refresh      = 116 + 'c';       // Ctrl+F5\nkeys.frame        = 117 + 'c';       // Ctrl+F6\nkeys.phone        = 119 + 'c';       // Ctrl+F8\nkeys.set          = 120 + 'c';       // Ctrl+F9\nkeys.tv           = 121 + 'c';       // Ctrl+F10\nkeys.menu         = 122 + 'c';       // Ctrl+F11\nkeys.app          = 123 + 'c';       // Ctrl+F12\nkeys.rewind       = 66  + 'a';       // Alt+B\nkeys.forward      = 70  + 'a';       // Alt+F\nkeys.audio        = 71  + 'a';       // Alt+G\nkeys.standby      = 74  + 'a';       // Alt+J\nkeys.keyboard     = 76  + 'a';       // Alt+L\nkeys.usbMounted   = 80  + 'a';       // Alt+P\nkeys.usbUnmounted = 81  + 'a';       // Alt+Q\nkeys.playPause    = 82  + 'a';       // Alt+R\nkeys.play         = -1;              // should be redefined on some platforms\nkeys.pause        = -1;              // should be redefined on some platforms\nkeys.stop         = 83  + 'a';       // Alt+S\nkeys.power        = 85  + 'a';       // Alt+U\nkeys.record       = 87  + 'a';       // Alt+W\nkeys.info         = 89  + 'a';       // Alt+Y\nkeys.mute         = 192 + 'a';\nkeys.digit0       = 48;\nkeys.digit1       = 49;\nkeys.digit2       = 50;\nkeys.digit3       = 51;\nkeys.digit4       = 52;\nkeys.digit5       = 53;\nkeys.digit6       = 54;\nkeys.digit7       = 55;\nkeys.digit8       = 56;\nkeys.digit9       = 57;\n\n\n// public\nmodule.exports = keys;\n\n// public\n// module.exports = {\n//     getCode: function ( event ) {\n//         var code = event.keyCode;\n//\n//         // apply key modifiers\n//         if ( event.shiftKey ) { code += 1000; }\n//         if ( event.altKey )   { code += 2000; }\n//\n//         return code;\n//     },\n//\n//     codes: {\n//         back:         8,    // Backspace\n//         channelPrev:  1009, // Shift+Tab\n//         channelNext:  9,    // Tab\n//         ok:           13,   // Enter\n//         exit:         27,   // Esc\n//         pageUp:       33,\n//         pageDown:     34,\n//         end:          35,\n//         home:         36,\n//         left:         37,\n//         up:           38,\n//         right:        39,\n//         down:         40,\n//         'delete':     46,\n//         volumeUp:     107,  // NUMPAD +\n//         volumeDown:   109,  // NUMPAD -\n//         f1:           112,  // F1\n//         f2:           113,  // F2\n//         f3:           114,  // F3\n//         f4:           115,  // F4\n//         refresh:      116,  // F5\n//         frame:        117,  // F6\n//         phone:        119,  // F8\n//         set:          120,  // F9\n//         tv:           121,  // F10\n//         menu:         122,  // F11\n//         app:          123,  // F12\n//         rewind:       2066, // Alt+B\n//         forward:      2070, // Alt+F\n//         audio:        2071, // Alt+G\n//         standby:      2074, // Alt+J\n//         keyboard:     2076, // Alt+L\n//         usbMounted:   2080, // Alt+P\n//         usbUnmounted: 2081, // Alt+Q\n//         playPause:    2082, // Alt+R\n//         stop:         2083, // Alt+S\n//         power:        2085, // Alt+U\n//         record:       2087, // Alt+W\n//         info:         2089, // Alt+Y\n//         mute:         2192\n//     }\n// };\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component');\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    parse   = require('cjs-query').parse,\n    app     = new Emitter();\n\n\n/**\n * Make the given inactive/hidden page active/visible.\n * Pass some data to the page and trigger the corresponding event.\n *\n * @param {Page} page item to show\n * @param {*} [data] data to send to page\n *\n * @return {boolean} operation status\n */\nfunction showPage ( page, data ) {\n    // page available and can be hidden\n    if ( page && !page.active ) {\n        // apply visibility\n        page.$node.classList.add('active');\n        page.active = true;\n        app.activePage = page;\n\n        debug.info('show component ' + page.name + '#' + page.id, null, {\n            tags: ['show', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' show', 'green');\n\n        // there are some listeners\n        if ( page.events['show'] ) {\n            // notify listeners\n            page.emit('show', {data: data});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n/**\n * Make the given active/visible page inactive/hidden and trigger the corresponding event.\n *\n * @param {Page} page item to hide\n *\n * @return {boolean} operation status\n */\nfunction hidePage ( page ) {\n    // page available and can be hidden\n    if ( page && page.active ) {\n        // apply visibility\n        page.$node.classList.remove('active');\n        page.active  = false;\n        app.activePage = null;\n\n        debug.info('hide component ' + page.name + '#' + page.id, null, {\n            tags: ['hide', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' hide', 'grey');\n\n        // there are some listeners\n        if ( page.events['hide'] ) {\n            // notify listeners\n            page.emit('hide');\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n// url request params\napp.query = parse(document.location.search.substring(1));\n\n\n// global application configuration\n// in config.js file in js root\napp.config = require('app:config');\n\n\n// the only visible page\napp.activePage = null;\n\n\n/**\n * Browse to a given page.\n * Do nothing if the link is invalid. Otherwise hide the current, show new and update the \"previous\" link.\n *\n * @param {Page} pageTo instance of the page to show\n * @param {*} [data] options to pass to the page on show\n *\n * @return {boolean} operation status\n */\napp.route = function ( pageTo, data ) {\n    var pageFrom = app.activePage;\n\n    if ( DEVELOP ) {\n        //if ( router.pages.length > 0 ) {\n        if ( !pageTo || typeof pageTo !== 'object' ) {\n            throw new Error(__filename + ': wrong pageTo type');\n        }\n        if ( !('active' in pageTo) ) {\n            throw new Error(__filename + ': missing field \"active\" in pageTo');\n        }\n        //}\n    }\n\n    // valid not already active page\n    if ( pageTo && !pageTo.active ) {\n        //debug.log('router.navigate: ' + pageTo.id, pageTo === pageFrom ? 'grey' : 'green');\n        debug.info('app route: ' + pageTo.name + '#' + pageTo.id, null, {tags: ['route', pageTo.name, pageTo.id]});\n\n        // update url\n        //location.hash = this.stringify(name, data);\n\n        // apply visibility\n        hidePage(app.activePage);\n        showPage(pageTo, data);\n\n        // there are some listeners\n        if ( this.events['route'] ) {\n            // notify listeners\n            this.emit('route', {from: pageFrom, to: pageTo});\n        }\n\n        // store\n        //this.history.push(pageTo);\n\n        return true;\n    }\n\n    //debug.warn('invalid page to route: ' + pageTo.id, null, {tags: ['route', 'page', pageTo.id]});\n    console.warn('invalid page to route: ' + pageTo.id);\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    Emitter = require('cjs-emitter'),\n    counter = 0;\n\n\n/**\n * Base component implementation.\n *\n * Visual element that can handle sub-components.\n * Each component has a DOM element container $node with a set of classes:\n * \"component\" and some specific component class names depending on the hierarchy, for example \"page\".\n * Each component has a unique ID given either from $node.id or from data.id. If not given will generate automatically.\n *\n * @constructor\n * @extends Emitter\n *\n * @param {Object} [config={}] init parameters\n * @param {Element} [config.id] component unique identifier (generated if not set)\n * @param {string} [config.className] space-separated list of classes for \"className\" property of this.$node\n * @param {Element} [config.$node] DOM element/fragment to be a component outer container\n * @param {Element} [config.$body] DOM element/fragment to be a component inner container (by default is the same as $node)\n * @param {Component} [config.parent] link to the parent component which has this component as a child\n * @param {Array.<Component>} [config.children=[]] list of components in this component\n * @param {Object.<string, function>} [config.events={}] list of event callbacks\n * @param {boolean} [config.visible=true] component initial visibility state flag\n * @param {boolean} [config.focusable=true] component can accept focus or not\n * @param {boolean} [config.propagate=false] allow to emit events to the parent component\n *\n * @fires module:stb/component~Component#click\n *\n * @example\n * var component = new Component({\n *     $node: document.getElementById(id),\n *     className: 'bootstrap responsive',\n *     events: {\n *         click: function () { ... }\n *     }\n * });\n * component.add( ... );\n * component.focus();\n */\nfunction Component ( config ) {\n    // current execution context\n    var self = this,\n        name;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.id && typeof config.id !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.id');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$node && !(config.$node instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$node type');\n        }\n        if ( config.$body && !(config.$body instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$body type');\n        }\n        if ( config.parent && !(config.parent instanceof Component) ) {\n            throw new Error(__filename + ': wrong config.parent type');\n        }\n        if ( config.children && !Array.isArray(config.children) ) {\n            throw new Error(__filename + ': wrong config.children type');\n        }\n    }\n\n    /**\n     * Component visibility state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.visible = true;\n\n    /**\n     * Component can accept focus or not.\n     *\n     * @type {boolean}\n     */\n    this.focusable = true;\n\n    /**\n     * DOM outer handle.\n     *\n     * @type {Element}\n     */\n    this.$node = null;\n\n    /**\n     * DOM inner handle.\n     * In simple cases is the same as $node.\n     *\n     * @type {Element}\n     */\n    this.$body = null;\n\n    /**\n     * Link to the parent component which has this component as a child.\n     *\n     * @type {Component}\n     */\n    this.parent = null;\n\n    /**\n     * List of all children components.\n     *\n     * @type {Component[]}\n     */\n    this.children = [];\n\n    /**\n     * allow to emit events to the parent component\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.propagate = !!config.propagate;\n\n    // parent constructor call\n    Emitter.call(this);\n\n    // outer handle - empty div in case nothing is given\n    this.$node = config.$node || document.createElement('div');\n\n    // inner handle - the same as outer handler in case nothing is given\n    this.$body = config.$body || this.$node;\n\n    // set CSS class names\n    //this.$node.className += ' component ' + (config.className || '');\n    // previous approach is not good as it mess with components hierarchy\n    this.$node.className = this.name + ' ' + (config.className || '');\n\n    // apply component id if given, generate otherwise\n    this.id = config.id || this.$node.id || 'cid' + counter++;\n\n    // apply hierarchy\n    if ( config.parent ) {\n        // add to parent component\n        config.parent.add(this);\n    }\n\n    // apply given visibility\n    if ( config.visible === false ) {\n        // default state is visible\n        this.hide();\n    }\n\n    // apply focus handling method\n    if ( config.focusable === false ) {\n        // can't accept focus\n        this.focusable = false;\n    }\n\n    // a descendant defined own events\n    if ( this.defaultEvents ) {\n        // sanitize\n        config.events = config.events || {};\n\n        if ( DEVELOP ) {\n            if ( typeof config.events !== 'object' ) {\n                throw new Error(__filename + ': wrong config.events type');\n            }\n            if ( typeof this.defaultEvents !== 'object' ) {\n                throw new Error(__filename + ': wrong this.defaultEvents type');\n            }\n        }\n\n        for ( name in this.defaultEvents ) {\n            // overwrite default events with user-defined\n            config.events[name] = config.events[name] || this.defaultEvents[name];\n        }\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( eventName ) {\n            self.addListener(eventName, config.events[eventName]);\n        });\n    }\n\n    // apply the given children components\n    if ( config.children ) {\n        // apply\n        this.add.apply(this, config.children);\n    }\n\n    // component activation by mouse\n    this.$node.addEventListener('click', function ( event ) {\n        // left mouse button\n        //if ( event.button === 0 ) {\n        // activate if possible\n        self.focus();\n\n        // there are some listeners\n        if ( self.events['click'] ) {\n            /**\n             * Mouse click event.\n             *\n             * @event module:stb/component~Component#click\n             *\n             * @type {Object}\n             * @property {Event} event click event data\n             */\n            self.emit('click', event);\n        }\n        //}\n\n        if ( DEVELOP ) {\n            // middle mouse button\n            if ( event.button === 1 ) {\n                //debug.inspect(self, 0);\n                debug.info('\"window.link\" or \"' + self.id + '.component\"', 'this component is now available in global scope');\n                window.link = self;\n                self.$node.classList.toggle('wired');\n            }\n        }\n\n        event.stopPropagation();\n    });\n\n    if ( DEVELOP ) {\n        // expose inner ID to global scope\n        window[self.id] = self.$node;\n\n        // expose a link\n        this.$node.component = this.$body.component = this;\n        this.$node.title = this.name + '#' + this.id + ' (outer)';\n        this.$body.title = this.name + '#' + this.id + ' (inner)';\n    }\n\n    debug.info('create component ' + this.name + '#' + this.id, null, {\n        tags: ['create', 'component', this.name, this.id]\n    });\n}\n\n\n// inheritance\nComponent.prototype = Object.create(Emitter.prototype);\nComponent.prototype.constructor = Component;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nComponent.prototype.defaultEvents = null;\n\n\n/**\n * Add a new component as a child.\n *\n * @param {...Component} [child] variable number of elements to append\n *\n * @files Component#add\n *\n * @example\n * panel.add(\n *     new Button( ... ),\n *     new Button( ... )\n * );\n */\nComponent.prototype.add = function ( child ) {\n    var index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        child = arguments[index];\n\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        // apply\n        this.children.push(child);\n        child.parent = this;\n\n        // correct DOM parent/child connection if necessary\n        if ( child.$node && child.$node.parentNode === null ) {\n            this.$body.appendChild(child.$node);\n        }\n\n        debug.info('add component ' + child.name + '#' + child.id + ' to ' + this.name + '#' + this.id, null, {\n            tags: ['add', 'component', this.name, this.id, child.name, child.id]\n        });\n\n        // there are some listeners\n        if ( this.events['add'] ) {\n            /**\n             * A child component is added.\n             *\n             * @event module:stb/component~Component#add\n             *\n             * @type {Object}\n             * @property {Component} item new component added\n             */\n            this.emit('add', {item: child});\n        }\n\n        //debug.log('component ' + this.name + '#' + this.id + ' new child: ' + child.name + '#' + child.id);\n    }\n};\n\n\n/* @todo: consider activation in future */\n///**\n// * Insert component into the specific position.\n// *\n// * @param {Component} child component instance to insert\n// * @param {number} index insertion position\n// */\n//Component.prototype.insert = function ( child, index ) {\n//    var prevIndex = this.children.indexOf(child);\n//\n//    if ( DEVELOP ) {\n//        if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n//        if ( !(child instanceof Component) ) { throw new Error(__filename + ': wrong child type'); }\n//    }\n//\n//    if ( prevIndex !== -1 ) {\n//        this.children.splice(prevIndex, 1);\n//        this.$body.removeChild(child.$node);\n//    }\n//\n//    if ( index === this.children.length ) {\n//        this.$body.appendChild(child.$node);\n//    } else {\n//        this.$body.insertBefore(child.$node, this.$body.children[index]);\n//    }\n//    this.children.splice(index, 0, child);\n//\n//    if ( !child.parent ) {\n//        child.parent = this;\n//    }\n//};\n\n\n/**\n * Delete this component and clear all associated events.\n *\n * @fires module:stb/component~Component#remove\n */\nComponent.prototype.remove = function () {\n    // really inserted somewhere\n    if ( this.parent ) {\n        if ( DEVELOP ) {\n            if ( !(this.parent instanceof Component) ) {\n                throw new Error(__filename + ': wrong this.parent type');\n            }\n        }\n\n        // active at the moment\n        if ( app.activePage.activeComponent === this ) {\n            this.blur();\n            this.parent.focus();\n        }\n        this.parent.children.splice(this.parent.children.indexOf(this), 1);\n    }\n\n    // remove all children\n    this.children.forEach(function ( child ) {\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        child.remove();\n    });\n\n    this.$node.parentNode.removeChild(this.$node);\n\n    // there are some listeners\n    if ( this.events['remove'] ) {\n        /**\n         * Delete this component.\n         *\n         * @event module:stb/component~Component#remove\n         */\n        this.emit('remove');\n    }\n\n    // remove all listeners\n    this.events = {};\n\n    //debug.log('component ' + this.name + '#' + this.id + ' remove', 'red');\n    debug.info('remove component ' + this.name + '#' + this.id, null, {\n        tags: ['remove', 'component', this.name, this.id]\n    });\n};\n\n\n/**\n * Activate the component.\n * Notify the owner-page and apply CSS class.\n *\n * @param {Object} [data] custom data which passed into handlers\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#focus\n */\nComponent.prototype.focus = function ( data ) {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // this is a visual component on a page\n    // not already focused and can accept focus\n    if ( this.focusable && this !== activeItem ) {\n        // notify the current active component\n        if ( activeItem ) { activeItem.blur(); }\n\n        /* eslint consistent-this: 0 */\n\n        // apply\n        activePage.activeComponent = activeItem = this;\n        activeItem.$node.classList.add('focus');\n\n        //debug.log('component ' + this.name + '#' + this.id + ' focus');\n        debug.info('focus component ' + this.name + '#' + this.id, null, {\n            tags: ['focus', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( activeItem.events['focus'] ) {\n            /**\n             * Make this component focused.\n             *\n             * @event module:stb/component~Component#focus\n             */\n            activeItem.emit('focus', data);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Remove focus.\n * Change page.activeComponent and notify subscribers.\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#blur\n */\nComponent.prototype.blur = function () {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // apply visuals anyway\n    this.$node.classList.remove('focus');\n\n    // this is the active component\n    if ( this === activeItem ) {\n        activePage.activeComponent = null;\n\n        //debug.log('component ' + this.name + '#' + this.id + ' blur', 'grey');\n        debug.info('blur component ' + this.name + '#' + this.id, null, {\n            tags: ['blur', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['blur'] ) {\n            /**\n             * Remove focus from this component.\n             *\n             * @event module:stb/component~Component#blur\n             */\n            this.emit('blur');\n        }\n\n        return true;\n    }\n\n    debug.warn('component ' + this.name + '#' + this.id + ' attempt to blur without link to a page', null, {\n        tags: ['blur', 'component', this.name, this.id]\n    });\n\n    // nothing was done\n    return false;\n};\n\n\n/*function show ( self, data ) {\n    // correct style\n    self.$node.classList.remove('hidden');\n    // flag\n    self.visible = true;\n\n    debug.info('show component ' + self.name + '#' + self.id, null, {\n        tags: ['show', 'component', self.name, self.id]\n    });\n\n    // there are some listeners\n    if ( self.events['show'] ) {\n        /!**\n         * Make the component visible.\n         *\n         * @event module:stb/component~Component#show\n         *!/\n        self.emit('show', data);\n    }\n}*/\n\n/**\n * Make the component visible and notify subscribers.\n *\n * @param {Object} [data] custom data which passed into handlers\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#show\n */\nComponent.prototype.show = function ( data, callback ) {\n    //var self = this;\n\n    // is it hidden\n    if ( !this.visible ) {\n        /*if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(function () {\n                show(self, data);\n                callback();\n            });\n        } else {\n            // sync call\n            show(this, data);\n        }*/\n\n        // correct style\n        this.$node.classList.remove('hidden');\n        // flag\n        this.visible = true;\n\n        debug.info('show component ' + this.name + '#' + this.id, null, {\n            tags: ['show', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['show'] ) {\n            /**\n             * Make the component visible.\n             *\n             * @event module:stb/component~Component#show\n             */\n            this.emit('show', data);\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Make the component hidden and notify subscribers.\n *\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#hide\n */\nComponent.prototype.hide = function ( callback ) {\n    // is it visible\n    if ( this.visible ) {\n        // correct style\n        this.$node.classList.add('hidden');\n        // flag\n        this.visible = false;\n\n        debug.info('hide component ' + this.name + '#' + this.id, null, {\n            tags: ['hide', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['hide'] ) {\n            /**\n             * Make the component hidden.\n             *\n             * @event module:stb/component~Component#hide\n             */\n            this.emit('hide');\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = Component;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Base Events Emitter implementation.\n *\n * @see http://nodejs.org/api/events.html\n * @constructor\n *\n * @example\n * var emitter = new Emitter();\n */\nfunction Emitter () {\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // if ( DEVELOP ) {\n    //     if ( typeof this !== 'object' ) { throw new Error(__filename + ': must be constructed via new'); }\n    // }\n\n    /**\n     * Inner hash table for event names and linked callbacks.\n     * Manual editing should be avoided.\n     *\n     * @member {Object.<string, function[]>}\n     *\n     * @example\n     * {\n     *     click: [\n     *         function click1 () { ... },\n     *         function click2 () { ... }\n     *     ],\n     *     keydown: [\n     *         function () { ... }\n     *     ]\n     * }\n     **/\n    this.events = {};\n}\n\n\nEmitter.prototype = {\n    /**\n     * Bind an event to the given callback function.\n     * The same callback function can be added multiple times for the same event name.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.addListener('click', function ( data ) { ... });\n     * // one more click handler\n     * emitter.addListener('click', function ( data ) { ... });\n     */\n    addListener: function ( name, callback ) {\n        console.assert(arguments.length === 2, 'wrong arguments number');\n        console.assert(typeof name === 'string', 'wrong name type');\n        console.assert(name.length > 0, 'empty name');\n        console.assert(typeof callback === 'function', 'callback should be a function');\n\n        // if ( DEVELOP ) {\n        //     if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        //     if ( typeof name !== 'string' || name.length === 0 ) { throw new Error(__filename + ': wrong or empty name'); }\n        //     if ( typeof callback !== 'function' ) { throw new Error(__filename + ': wrong callback type'); }\n        // }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(callback);\n    },\n\n\n    /**\n     * Add a one time listener for the event.\n     * This listener is invoked only the next time the event is fired, after which it is removed.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.once('click', function ( data ) { ... });\n     */\n    once: function ( name, callback ) {\n        // current execution context\n        var self = this;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n        }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(function onceWrapper () {\n            self.removeListener(name, onceWrapper);\n            callback.apply(self, arguments);\n        });\n    },\n\n\n    /**\n     * Apply multiple listeners at once.\n     *\n     * @param {Object} callbacks event names with callbacks\n     *\n     * @example\n     * emitter.addListeners({\n     *     click: function ( data ) {},\n     *     close: function ( data ) {}\n     * });\n     */\n    addListeners: function ( callbacks ) {\n        var name;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof callbacks !== 'object' ) {\n                throw new Error(__filename + ': wrong callbacks type');\n            }\n            if ( Object.keys(callbacks).length === 0 ) {\n                throw new Error(__filename + ': no callbacks given');\n            }\n        }\n\n        for ( name in callbacks ) {\n            if ( callbacks.hasOwnProperty(name) ) {\n                this.addListener(name, callbacks[name]);\n            }\n        }\n    },\n\n\n    /**\n     * Remove all instances of the given callback.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to remove\n     *\n     * @example\n     * emitter.removeListener('click', func1);\n     */\n    removeListener: function ( name, callback ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n            if ( this.events[name] && !Array.isArray(this.events[name]) ) {\n                throw new Error(__filename + ': corrupted inner data');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( this.events[name] ) {\n            // rework the callback list to exclude the given one\n            this.events[name] = this.events[name].filter(function callbacksFilter ( fn ) { return fn !== callback; });\n            // event has no more callbacks so clean it\n            if ( this.events[name].length === 0 ) {\n                // as if there were no listeners at all\n                this.events[name] = undefined;\n            }\n        }\n    },\n\n\n    /**\n     * Remove all callbacks for the given event name.\n     * Without event name clears all events.\n     *\n     * @param {string} [name] event identifier\n     *\n     * @example\n     * emitter.removeAllListeners('click');\n     * emitter.removeAllListeners();\n     *\n     * @deprecated\n     */\n    /*removeAllListeners: function ( name ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 0 && (typeof name !== 'string' || name.length === 0) ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // check input\n        if ( arguments.length === 0 ) {\n            // no arguments so remove everything\n            this.events = {};\n        } else if ( name ) {\n            if ( DEVELOP ) {\n                if ( this.events[name] ) { throw new Error(__filename + ': event is not removed'); }\n            }\n\n            // only name is given so remove all callbacks for the given event\n            // but object structure modification should be avoided\n            this.events[name] = undefined;\n        }\n    },*/\n\n\n    /**\n     * Execute each of the listeners in the given order with the supplied arguments.\n     *\n     * @param {string} name event identifier\n     *\n     * @example\n     * emitter.emit('init');\n     * emitter.emit('click', {src: panel1, dst: panel2});\n     * emitter.emit('load', error, data);\n     *\n     * // it's a good idea to emit event only when there are some listeners\n     * if ( this.events['click'] ) {\n     *     this.emit('click', {event: event});\n     * }\n     */\n    emit: function ( name ) {\n        var event = this.events[name],\n            index;\n\n        if ( DEVELOP ) {\n            if ( arguments.length < 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( event ) {\n            if ( DEVELOP ) {\n                if ( !Array.isArray(event) ) {\n                    throw new Error(__filename + ': wrong event type');\n                }\n            }\n\n            for ( index = 0; index < event.length; index++ ) {\n                if ( DEVELOP ) {\n                    if ( typeof event[index] !== 'function' ) {\n                        throw new Error(__filename + ': wrong event callback type');\n                    }\n                }\n\n                // invoke the callback with parameters\n                event[index].apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n    }\n};\n\n\n// correct constructor name\nEmitter.prototype.constructor = Emitter;\n\n\n// public\nmodule.exports = Emitter;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar app = require('./lib/main');\n\n\nmodule.exports = app;\n","/**\n * Global application configuration.\n * Can store run-time options, API urls, paths, execution flags and so on.\n * Automatically loaded on application initialization and available as app.config.\n */\n\n'use strict';\n\nmodule.exports = {\n    searchInputDelay: 400,\n    weatherServerURL: 'http://weather.infomir.com.ua/',\n    getGeo:           'getGeo.php'\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core');\n//    metrics = require('app:metrics'),\n//    linkCSS;\n\n\n// global link\n//app.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\n//app.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\n//app.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n// // set max browser window size\n// window.moveTo(0, 0);\n// window.resizeTo(metrics.width, metrics.height);\n\n// load CSS file base on resolution\n/*linkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = 'css/' + (DEVELOP ? 'develop.' : 'release.') + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);*/\n\n\n// public\nmodule.exports = function ( name ) {\n    var link = document.createElement('link');\n\n    link.rel  = 'stylesheet';\n    link.href = 'css/' + name + '.' + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\n    document.head.appendChild(link);\n};\n","'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    geo = new Emitter();\n\n\nfunction getLocationName ( coordinates, cb ) {\n    var loc = null,\n        language = core.environment.language,\n        client = new XMLHttpRequest();\n\n    client.open(\n        'GET',\n        'http://nominatim.openstreetmap.org/reverse?format=json&lat=' +\n        coordinates.lat +\n        '&zoom=18&addressdetails=1&lon=' +\n        coordinates.lon +\n        '&accept-language=' +\n        language\n    );\n\n    client.onload = function () {\n        if ( this.status === 200 ) {\n            try {\n                loc = JSON.parse(this.responseText);\n            } catch ( error ) {\n                debug.info(error, 'getLocality parse error');\n            }\n        }\n\n        if ( loc !== null ) {\n            geo.location = loc;\n        }\n\n        geo.emit('load', geo.location);\n        cb(geo.location);\n    };\n\n    client.send(null);\n}\n\n\nmodule.exports = geo;\n\ngeo.location = {\n    displayName: '',\n    lat: 0,\n    lon: 0,\n    address: {\n        city: '',\n        state: '',\n        country: ''\n    }\n};\n\ngeo.load = function ( location, cb ) {\n    var client = new XMLHttpRequest(),\n        locationName;\n\n    if ( location.lat && location.lon ) {\n        geo.location.lat = +location.lat;\n        geo.location.lon = +location.lon;\n\n        if ( location.name ) {\n            location.displayName = location.name;\n            geo.location = JSON.parse(JSON.stringify(location));\n            locationName = geo.location.name.split(',');\n            geo.location.address.city = locationName[0];\n            geo.location.address.state = locationName[1];\n            geo.location.address.country = locationName[2];\n            geo.emit('load', geo.location);\n        } else {\n            getLocationName(geo.location);\n        }\n\n        return;\n    }\n\n    client.open('GET', 'http://weather.infomir.com.ua/getGeo.php');\n    client.onload = function () {\n        var coordinates = {\n            data: {\n                lon: 0,\n                lat: 0\n            }\n        };\n\n        if ( this.status === 200 ) {\n            try {\n                coordinates = JSON.parse(this.responseText);\n            } catch ( error ) {\n                debug.info(error);\n            }\n\n            geo.location.lat = +coordinates.data.lat;\n            geo.location.lon = +coordinates.data.lon;\n\n            getLocationName(geo.location, cb);\n        } else {\n            geo.emit('load', geo.location);\n        }\n    };\n    client.send(null);\n};\n\n\n/**\n * Search location by its name.\n *\n * @param {Object} param - params for search engine\n * @param {string} param.language - language of search\n * @param {string} param.query - location for search\n * @param {Function} callback - method to invoke with a result of operation\n */\ngeo.search = function ( param, callback ) {\n    var client = new XMLHttpRequest();\n\n    client.open('GET', 'http://nominatim.openstreetmap.org/search?format=json&addressdetails=1&limit=5&accept-language=' + param.language + '&q=' + param.query);\n\n    client.onload = function () {\n        if ( this.status === 200 ) {\n            try {\n                callback(JSON.parse(this.responseText), false);\n            } catch ( error ) {\n                callback(null, 404);\n            }\n        } else {\n            callback(null, this.status);\n        }\n    };\n    client.onerror = function () {\n        callback(null, this.status);\n    };\n\n    client.send(null);\n};\n","/**\n * Global list of non-printable control key codes.\n *\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    backspace: 8,\n    tab:       9,\n    enter:     13,\n    escape:    27,\n    space:     32,\n    pageUp:    33,\n    pageDown:  34,\n    end:       35,\n    home:      36,\n    left:      37,\n    up:        38,\n    right:     39,\n    down:      40,\n    insert:    45,\n    // not \"delete\" because of old browsers issue\n    del:       46\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar List = require('mag-component-list'),\n    Layout = require('mag-component-layout');\n\n/**\n *  Layout list contains array of layout components\n *\n * @constructor\n * @extends List\n *\n * @param {Object} config object\n * @param {Element} [config.noData=''] element or string to display if set empty data\n *\n * @example\n * var LayoutList = require('mag-component-layout-list'),\n *     list = new LayoutList({\n *         propagate: true,\n *         size: 7,\n *         focusIndex: 0,\n *         noData: 'No channels'\n *         data: [\n *                 {\n *                     items: [\n *                         {\n *                             className: 'star',\n *                             name: '$text'\n *                         },\n *                         'Some text'\n *                     ],\n *                     click: function () {\n *                         // do something\n *                     },\n *                     name: 'starItem'\n *                 },\n *                 {\n *                     items: [\n *                         'Hello world',\n *                         {\n *                             value: 'hi',\n *                             className: 'status'\n *                         }\n *                     ],\n *                     value:{\n *                         uri: 'http://55.55.55.55/some'\n *                     },\n *                     click: someHandler\n *                 },\n *                 {\n *                     items: [\n *                         {\n *                             className: 'big',\n *                             value: ' Some'\n *                         },\n *                         {\n *                             value: new Input()\n *                         }\n *                     ]\n *                 },\n *                 {\n *                     items: [\n *                         new Button({value: 'Ok'}),\n *                         new Button({value: 'Cancel'}),\n *                         new Button({value: 'Exit'})\n *                     ]\n *                 }\n *             ]\n * });\n *\n * list.links.starItem.links.$text.innerText = 'new Text';\n *\n */\nfunction LayoutList ( config ) {\n    var self = this;\n\n    config = config || {};\n\n    /**\n     * Elements handlers\n     */\n    this.handlers = {};\n\n    /**\n     * Hash map of layouts links\n     */\n    this.links = {};\n\n    /**\n     * No data placeholder\n     *\n     * @type {Element}\n     */\n    this.$noData = null;\n\n    //config.className = 'layoutList ' + (config.className || '');\n\n    config.propagate = config.propagate === undefined ? true : config.propagate;\n\n    /**\n     * Set data layout to be fixed to cache HTML elements\n     *\n     * @type {boolean|*}\n     */\n    this.fixedData = config.fixedData || false;\n\n    //config.$body = document.createElement('div');\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    this.$noData = document.createElement('div');\n    this.$noData.className = 'noData hidden';\n\n    List.call(this, config);\n\n    this.$node.appendChild(this.$body);\n    this.$node.appendChild(this.$noData);\n\n    // add handler to focus inner layout\n    this.addListener('click:item', function ( event ) {\n        // focus inner layout of item\n        if ( event.$item.layout.children.length && !event.inner ) {\n            event.$item.layout.children[event.$item.layout.focusIndex].focus();\n        }\n\n        // only focus item if we click mouse\n        if ( event.inner ) {\n            self.focus();\n            self.focusItem(event.$item);\n        }\n        // do click callback if it present\n        if ( self.handlers[event.$item.index] ) {\n            self.handlers[event.$item.index](event.$item);\n        }\n    });\n}\n\n\nLayoutList.prototype = Object.create(List.prototype);\nLayoutList.prototype.constructor = LayoutList;\n\n// set component name\nLayoutList.prototype.name = 'mag-component-layout-list';\n\n\n/*eslint id-length:0*/\n/**\n * Default render function\n *\n * @param {Element} $item in list\n * @param {Object} config to render layout element\n */\nLayoutList.prototype.renderItemDefault = function ( $item, config ) {\n    var layout, layoutConfig,\n        currentNode,\n        currentData,\n        i;\n\n    if ( $item.ready && this.fixedData ) {\n        for ( i = 0; i < config.items.length; i++ ) {\n            currentData = config.items[i];\n            if ( typeof currentData.value === 'string' || currentData.value === undefined ) {\n                currentNode = $item.layout.$node.childNodes[i];\n                currentNode.innerText = currentData.value || '';\n                currentNode.className = currentData.className || '';\n            }\n        }\n    } else {\n        // clear inner content\n        while ( $item.firstChild ) {\n            $item.removeChild($item.firstChild);\n        }\n\n        layoutConfig = {\n            focusable: false,\n            data: config.items\n        };\n\n        if ( config.className ) {\n            layoutConfig.className = config.className;\n        }\n\n        layout = new Layout(layoutConfig);\n\n        if ( config.name ) {\n            this.links[config.name] = layout;\n        }\n\n        $item.appendChild(layout.$node);\n        $item.layout = layout;\n        layout.parent = this;\n        layout.$parentItem = $item;\n\n        // focus layoutList if click on layout\n        layout.addListener('click', function () {\n            // add inner property to set that event comes from inner component\n            layout.parent.emit('click:item', {$item: $item, inner: true});\n        });\n\n        if ( config.click ) {\n            this.handlers[$item.index] = config.click;\n        }\n        // item is rendered\n        $item.ready = true;\n    }\n    $item.value = config.value || {};\n};\n\n\nLayoutList.prototype.setData = function ( config ) {\n    this.links = {};\n    List.prototype.setData.call(this, config);\n\n    if ( config.data && config.data.length ) {\n        this.$noData.classList.add('hidden');\n    } else {\n        this.$noData.classList.remove('hidden');\n    }\n};\n\n\nLayoutList.prototype.init = function ( config ) {\n    var $wrap;\n\n    List.prototype.init.call(this, config);\n    if ( config.noData ) {\n        if ( DEVELOP ) {\n            if ( typeof config.noData !== 'string' && !(config.noData instanceof Element) ) {\n                throw new Error(__filename + ': wrong config.$noData type');\n            }\n        }\n\n        this.$noData.innerHTML = '';\n        if ( config.noData instanceof Element ) {\n            this.$noData.appendChild(config.noData);\n        } else if ( typeof config.noData === 'string' ) {\n            $wrap = document.createElement('div');\n            $wrap.innerText = config.noData;\n            this.$noData.appendChild($wrap);\n        }\n    }\n\n    if ( config.data && config.data.length ) {\n        this.$noData.classList.add('hidden');\n    } else {\n        this.$noData.classList.remove('hidden');\n    }\n};\n\nLayoutList.prototype.renderItem = LayoutList.prototype.renderItemDefault;\n\n\nmodule.exports = LayoutList;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n/* eslint complexity: [error, 37] */\n/* eslint max-lines-per-function: 1 */\n/* eslint no-fallthrough: 1 */\n/* eslint complexity: 1 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n\n/**\n * Mouse click event.\n *\n * @event module:stb/ui/list~List#click:item\n *\n * @type {Object}\n * @property {Element} $item clicked HTML item\n * @property {Event} event click event data\n */\n\n\n/**\n * Base list implementation.\n *\n * Each data item can be either a primitive value or an object with these fields:\n *\n *  Name    | Description\n * ---------|-------------\n *  value   | actual cell value to render\n *  mark    | is it necessary or not to render this cell as marked\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array}    [config.data=[]]     component data to visualize\n * @param {function} [config.render]      method to build each grid cell content\n * @param {function} [config.navigate]    method to move focus according to pressed keys\n * @param {number}   [config.size=5]      amount of visible items on a page\n * @param {number}   [config.viewIndex=0] move view window to this position on init\n * @param {number}   [config.focusIndex]  list item index to make item focused (move view window to this position)\n * @param {boolean}  [config.cycle=true]  allow or not to jump to the opposite side of a list when there is nowhere to go next\n * @param {boolean}  [config.scroll=null] associated ScrollBar component link\n * @param {Object}   [config.provider]    data provider\n *\n * @fires module:stb/ui/list~List#click:item\n */\nfunction List ( config ) {\n    // current execution context\n    //var self = this;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Link to the currently focused DOM element.\n     *\n     * @type {Element}\n     */\n    this.$focusItem = null;\n\n    /**\n     * Position of the visible window to render.\n     *\n     * @type {number}\n     */\n    this.viewIndex = null;\n\n    /**\n     * Component data to visualize.\n     *\n     * @type {Array}\n     */\n    this.data = [];\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Amount of visible items on a page.\n     *\n     * @type {number}\n     */\n    this.size = 5;\n\n    /**\n     * Allow or not to jump to the opposite side of a list when there is nowhere to go next.\n     *\n     * @type {boolean}\n     */\n    this.cycle = false;\n\n    /**\n     * Associated ScrollBar component link.\n     *\n     * @type {ScrollBar}\n     */\n    this.scroll = null;\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    /**\n     * Associated data provider\n     *\n     * @type {Provider}\n     */\n    this.provider = null;\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    //config.className += ' theme-main';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // component setup\n    this.init(config);\n\n    // custom navigation method\n    //if ( config.navigate ) {\n    //    if ( DEVELOP ) {\n    //        if ( typeof config.navigate !== 'function' ) { throw new Error(__filename + ': wrong config.navigate type'); }\n    //    }\n    //    // apply\n    //    this.navigate = config.navigate;\n    //}\n\n    // navigation by keyboard\n    //this.addListener('keydown', this.navigate);\n\n    // navigation by mouse\n    //this.$body.addEventListener('mousewheel', function ( event ) {\n    //    // scrolling by Y axis\n    //    if ( self.type === self.TYPE_VERTICAL && event.wheelDeltaY ) {\n    //        self.move(event.wheelDeltaY > 0 ? 38 : keys.down);\n    //    }\n    //\n    //    // scrolling by X axis\n    //    if ( self.type === self.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n    //        self.move(event.wheelDeltaX > 0 ? 37 : 39);\n    //    }\n    //});\n}\n\n\n// inheritance\nList.prototype = Object.create(Component.prototype);\nList.prototype.constructor = List;\n\n// set component name\nList.prototype.name = 'mag-component-list';\n\nList.prototype.TYPE_VERTICAL   = 1;\nList.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Fill the given item with data.\n *\n * @param {Element} $item item DOM link\n * @param {*} data associated with this item data\n */\nList.prototype.renderItemDefault = function ( $item, data ) {\n    $item.innerText = data.value;\n};\n\n\n/**\n * Method to build each list item content.\n * Can be redefined to provide custom rendering.\n *\n * @type {function}\n */\nList.prototype.renderItem = List.prototype.renderItemDefault;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nList.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse wheel events.\n     *\n     * @param {Event} event generated event\n     */\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        if ( this.type === this.TYPE_VERTICAL && event.wheelDeltaY ) {\n            this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n        }\n\n        // scrolling by X axis\n        if ( this.type === this.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n            this.move(event.wheelDeltaX > 0 ? keys.left : keys.right);\n        }\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n            case keys.right:\n            case keys.left:\n            case keys.pageUp:\n            case keys.pageDown:\n            case keys.home:\n            case keys.end:\n                // cursor move only on arrow keys\n                this.move(event.code);\n                break;\n            case keys.enter:\n                // there are some listeners\n                if ( this.events['click:item'] && this.$focusItem ) {\n                    // notify listeners\n                    this.emit('click:item', {$item: this.$focusItem, event: event});\n                }\n                break;\n        }\n    }\n};\n\n\n/**\n * Default method to move focus according to pressed keys.\n *\n * @param {Object} event generated event source of movement\n */\n//List.prototype.navigateDefault = function ( event ) {\n//    switch ( event.code ) {\n//        case 38:\n//        case 40:\n//        case 39:\n//        case 37:\n//        case 33:\n//        case 34:\n//        case 36:\n//        case 35:\n//            // cursor move only on arrow keys\n//            this.move(event.code);\n//            break;\n//        case 13:\n//            // there are some listeners\n//            if ( this.events['click:item'] ) {\n//                // notify listeners\n//                this.emit('click:item', {$item: this.$focusItem, event: event});\n//            }\n//            break;\n//    }\n//};\n\n\n/**\n * Current active method to move focus according to pressed keys.\n * Can be redefined to provide custom navigation.\n *\n * @type {function}\n */\n//List.prototype.navigate = List.prototype.navigateDefault;\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var idx, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( idx = 0; idx < data.length; idx++ ) {\n        // cell value\n        item = data[idx];\n        // primitive value\n        if ( typeof item !== 'object' ) {\n            // wrap with defaults\n            item = data[idx] = {\n                value: data[idx]\n            };\n        }\n\n        if ( DEVELOP ) {\n            //if ( !('value' in item) ) { throw new Error(__filename + ': field \"value\" is missing'); }\n            if ( ('mark' in item) && Boolean(item.mark) !== item.mark ) {\n                throw new Error(__filename + ': item.mark must be boolean');\n            }\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.init = function ( config ) {\n    var self     = this,\n        currSize = this.$body.children.length,\n        /**\n         * Item mouse click handler.\n         *\n         * @param {Event} event click event data\n         *\n         * @this Element\n         *\n         * @fires module:stb/ui/list~List#click:item\n         */\n        onClick = function ( event ) {\n            if ( this.data ) {\n                self.focusItem(this);\n\n                // there are some listeners\n                if ( self.events['click:item'] ) {\n                    // notify listeners\n                    self.emit('click:item', {$item: this, event: event});\n                }\n            }\n        },\n        item, idx;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // apply cycle behaviour\n    if ( config.cycle !== undefined ) { this.cycle = config.cycle; }\n\n    // apply ScrollBar link\n    if ( config.scroll ) { this.scroll = config.scroll; }\n\n    // apply data provider\n    if ( config.provider ) { this.provider = config.provider; }\n\n\n    // custom render method\n    if ( config.render ) {\n        if ( DEVELOP ) {\n            if ( typeof config.render !== 'function' ) {\n                throw new Error(__filename + ': wrong config.render type');\n            }\n        }\n\n        // apply\n        this.renderItem = config.render;\n    }\n\n    // list items amount on page\n    if ( config.size ) {\n        if ( DEVELOP ) {\n            if ( Number(config.size) !== config.size ) {\n                throw new Error(__filename + ': config.size must be a number');\n            }\n            if ( config.size <= 0 ) {\n                throw new Error(__filename + ': config.size should be positive');\n            }\n        }\n\n        // apply\n        this.size = config.size;\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( name ) {\n            self.events[name] = null;\n            self.addListener(name, config.events[name]);\n        });\n    }\n\n    // geometry has changed or initial draw\n    if ( this.size !== currSize ) {\n        // non-empty list\n        if ( currSize > 0 ) {\n            // clear old items\n            this.$body.innerText = null;\n        }\n\n        // create new items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            item = document.createElement('div');\n            item.index = idx;\n            //item.className = 'item theme-list-item';\n            item.className = 'item';\n\n            item.addEventListener('click', onClick);\n            this.$body.appendChild(item);\n        }\n    }\n\n    if ( this.provider ) {\n        if ( this.provider.blocked ) {\n            return;\n        }\n\n        this.provider.get( null, function ( error, data ) {\n            if ( error ) {\n                if ( self.events['data:error'] ) {\n                    /**\n                     * Provider get error while take new data\n                     *\n                     * @event module:stb/ui/list~List#data:error\n                     */\n                    self.emit('data:error', error);\n                }\n            } else {\n                if ( data ) {\n                    config.data = data;\n                    self.setData(config);\n                    if ( self.scroll ) {\n                        self.scroll.init({\n                            realSize: self.provider.maxCount,\n                            viewSize: self.provider.size,\n                            value: self.provider.head + self.provider.pos\n                        });\n                    }\n                }\n                if ( self.events['data:get'] ) {\n                    /**\n                     * Provider request new data\n                     *\n                     * @event module:stb/ui/list~List#data:get\n                     *\n                     * @type {Object}\n                     */\n                    self.emit('data:get');\n                }\n            }\n        });\n    } else if ( config.data ) {\n        this.setData(config);\n    }\n};\n\n/**\n * Set data and render inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.setData = function ( config ) {\n    // apply list of items\n\n    if ( config.data ) {\n        if ( DEVELOP ) {\n            if ( !Array.isArray(config.data) ) { throw new Error(__filename + ': wrong config.data type'); }\n        }\n        // prepare user data\n        this.data = normalize(config.data);\n    }\n\n    // view window position\n    if ( DEVELOP ) {\n        if ( config.viewIndex !== undefined ) {\n            if ( Number(config.viewIndex) !== config.viewIndex ) {\n                throw new Error(__filename + ': config.viewIndex must be a number');\n            }\n            if ( config.viewIndex < 0 ) {\n                throw new Error(__filename + ': config.viewIndex should be positive');\n            }\n        }\n    }\n\n    // reset current view window position\n    this.viewIndex = null;\n\n    if ( this.$focusItem ) {\n        this.blurItem(this.$focusItem);\n    }\n\n    if ( this.scroll ) {\n        if ( this.provider ) {\n            if ( this.scroll.realSize !== this.provider.maxCount ) {\n                this.scroll.init({\n                    realSize: this.provider.maxCount,\n                    viewSize: this.provider.size,\n                    value: this.provider.head + this.provider.pos\n                });\n            }\n        } else {\n            this.scroll.init({\n                realSize: this.data.length,\n                viewSize: this.size,\n                value: config.viewIndex || 0\n            });\n        }\n    }\n\n    // set focus item\n    if ( config.focusIndex !== undefined && this.data.length ) {\n        if ( DEVELOP ) {\n            if ( Number(config.focusIndex) !== config.focusIndex ) {\n                throw new Error(__filename + ': config.focusIndex must be a number');\n            }\n            if ( config.focusIndex < 0 ) {\n                throw new Error(__filename + ': config.focusIndex should be positive');\n            }\n            // if ( config.focusIndex > this.data.length - 1 ) {\n            //     throw new Error(__filename + ': config.focusIndex should be less than data size');\n            // }\n        }\n\n        // jump to the necessary item\n        this.focusIndex(config.focusIndex);\n    } else {\n        // go to the first page\n        this.renderView(config.viewIndex || 0);\n    }\n};\n\n\n/**\n * Shift the visible view window event.\n *\n * @event module:stb/ui/list~List#move:view\n *\n * @type {Object}\n * @property {number} prevIndex previous view window position\n * @property {number} currIndex current view window position\n */\n\n\n/**\n * Draw the visible window.\n *\n * @param {number} index start position to render\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#move:view\n */\nList.prototype.renderView = function ( index ) {\n    var $item, idx, itemData, prevIndex, currIndex;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be more than zero');\n        }\n        // if ( index >= this.data.length ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // has the view window position changed\n    if ( this.viewIndex !== index ) {\n        // save for emit\n        prevIndex = this.viewIndex;\n        // sync global pointer\n        this.viewIndex = currIndex = index;\n\n        // rebuild all visible items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            // shortcuts\n            $item    = this.$body.children[idx];\n            itemData = this.data[index];\n\n            // real item or stub\n            if ( itemData ) {\n                // correct inner data/index and render\n                $item.data  = itemData;\n                $item.index = index;\n                this.renderItem($item, itemData);\n\n                // apply CSS\n                if ( itemData.mark ) {\n                    $item.classList.add('mark');\n                } else {\n                    $item.classList.remove('mark');\n                }\n            } else {\n                // nothing to render\n                $item.data = $item.index = undefined;\n                $item.innerHTML = '&nbsp;';\n                $item.ready = false;\n            }\n            index++;\n        }\n\n        // there are some listeners\n        if ( this.events['move:view'] ) {\n            // notify listeners\n            this.emit('move:view', {prevIndex: prevIndex, currIndex: currIndex});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            this.emit('select:item', {$item: $item});\n        }\n\n        // update a linked scroll component\n        if ( this.scroll ) {\n            this.scroll.scrollTo(this.provider ? this.provider.head + this.provider.pos : this.viewIndex);\n        }\n\n        // full rebuild\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Move focus to the given direction.\n *\n * @param {number} direction arrow key code\n *\n * @fires module:stb/ui/list~List#cycle\n * @fires module:stb/ui/list~List#overflow\n */\nList.prototype.move = function ( direction ) {\n    var self = this,\n        force = false;\n\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(direction) !== direction ) {\n            throw new Error(__filename + ': direction must be a number');\n        }\n    }\n\n    // empty list\n    if ( !this.data.length ) {\n        return;\n    }\n\n    switch ( direction ) {\n        case keys.left:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.up:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index > 0 ) {\n                    if ( this.$focusItem === this.$body.firstChild ) {\n                        this.renderView(this.viewIndex - 1);\n                    } else {\n                        this.focusItem(this.$focusItem.previousSibling);\n                    }\n                } else if ( this.provider ) {\n                    if ( this.provider.blocked ) {\n                        return;\n                    }\n\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the end of the list\n                        this.move(keys.end);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.right:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.down:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index < this.data.length - 1 ) {\n                    if ( this.$focusItem === this.$body.lastChild ) {\n                        this.renderView(this.viewIndex + 1);\n                    } else {\n                        this.focusItem(this.$focusItem.nextSibling);\n                    }\n                } else if ( this.provider ) {\n                    if ( this.provider.blocked ) {\n                        return;\n                    }\n\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the beginning of the list\n                        this.move(keys.home);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.pageUp:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n\n                return;\n            }\n            if ( this.viewIndex < this.size ) {\n                // first page\n                this.renderView(0);\n            } else {\n                // second page and further\n                this.renderView(this.viewIndex - this.size + 1);\n            }\n\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.pageDown:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            // data is bigger then one page\n            if ( this.data.length > this.size ) {\n                // determine jump size\n                if ( this.viewIndex > this.data.length - this.size * 2 ) {\n                    // last page\n                    this.renderView(this.data.length - this.size);\n                } else {\n                    // before the last page\n                    this.renderView(this.viewIndex + this.size - 1);\n                }\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n        case keys.home:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n                break;\n            }\n            this.renderView(0);\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.end:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            if ( this.data.length > this.size ) {\n                this.renderView(this.data.length - this.size);\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n    }\n};\n\n\n/**\n * Highlight the given DOM element as focused.\n * Remove focus from the previously focused item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.focusItem = function ( $item ) {\n    var $prev = this.$focusItem;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n    }\n\n    // different element\n    if ( $item && $prev !== $item ) {\n        if ( DEVELOP ) {\n            if ( !($item instanceof Element) ) {\n                throw new Error(__filename + ': wrong $item type');\n            }\n            if ( $item.parentNode !== this.$body ) {\n                throw new Error(__filename + ': wrong $item parent element');\n            }\n        }\n\n        // some item is focused already\n        if ( $prev !== null ) {\n            if ( DEVELOP ) {\n                if ( !($prev instanceof Element) ) {\n                    throw new Error(__filename + ': wrong $prev type');\n                }\n            }\n\n            // style\n            $prev.classList.remove('focus');\n            //$prev.classList.remove('theme-focus');\n\n            // there are some listeners\n            if ( this.events['blur:item'] ) {\n                /**\n                 * Remove focus from an element.\n                 *\n                 * @event module:stb/ui/list~List#blur:item\n                 *\n                 * @type {Object}\n                 * @property {Element} $item previously focused HTML element\n                 */\n                this.emit('blur:item', {$item: $prev});\n            }\n        }\n        // reassign\n        this.$focusItem = $item;\n\n        this.$focusItem.data = this.data[this.$focusItem.index];\n\n        // correct CSS\n        $item.classList.add('focus');\n        //$item.classList.add('theme-focus');\n\n        // there are some listeners\n        if ( this.events['focus:item'] ) {\n            /**\n             * Set focus to a DOM element.\n             *\n             * @event module:stb/ui/list~List#focus:item\n             *\n             * @type {Object}\n             * @property {Element} $prev old/previous focused HTML element\n             * @property {Element} $curr new/current focused HTML element\n             */\n            this.emit('focus:item', {$prev: $prev, $curr: $item});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            /**\n             * Set focus to a list item.\n             *\n             * @event module:stb/ui/list~List#select:item\n             *\n             * @type {Object}\n             * @property {Element} $item new/current focused item\n             */\n            this.emit('select:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Highlight the given DOM element as blur.\n * Remove focus from the item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.blurItem = function ( $item ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) { throw new Error(__filename + ': wrong arguments number'); }\n    }\n\n    // different element\n    if ( $item ) {\n        if ( $item === this.$focusItem ) {\n            this.$focusItem = null;\n        }\n\n        $item.classList.remove('focus');\n        //$item.classList.remove('theme-focus');\n\n        // there are some listeners\n        if ( this.events['blur:item'] ) {\n            /**\n             * Remove focus from an element.\n             *\n             * @event module:stb/ui/list~List#blur:item\n             *\n             * @type {Object}\n             * @property {Element} $item previously focused HTML element\n             */\n            this.emit('blur:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Set the given item focused by item index.\n *\n * @param {number} index item data index\n */\nList.prototype.focusIndex = function ( index ) {\n    var viewIndex = this.viewIndex || 0;\n\n    if ( DEVELOP ) {\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be positive');\n        }\n        // if ( index > this.data.length - 1 ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // determine direction\n    if ( index >= viewIndex + this.size ) {\n        // check range\n        index = index < this.data.length - 1 ? index : this.data.length - 1;\n        // move down\n        this.renderView(index - this.size + 1);\n        this.focusItem(this.$body.lastChild);\n    } else if ( index < viewIndex ) {\n        // check range\n        index = index > 0 ? index : 0;\n        // move up\n        this.renderView(index);\n        this.focusItem(this.$body.firstChild);\n    } else {\n        // no move\n        if ( this.viewIndex === null ) {\n            // first attempt\n            this.renderView(0);\n        }\n        this.focusItem(this.$body.children[index - viewIndex]);\n    }\n};\n\n\n/**\n * Set item state and appearance as marked.\n *\n * @param {Node|Element} $item element to focus\n * @param {boolean} state true - marked, false - not marked\n */\nList.prototype.markItem = function ( $item, state ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 2 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !($item instanceof Element) ) {\n            throw new Error(__filename + ': wrong $item type');\n        }\n        if ( $item.parentNode !== this.$body ) {\n            throw new Error(__filename + ': wrong $item parent element');\n        }\n        if ( Boolean(state) !== state ) {\n            throw new Error(__filename + ': state must be boolean');\n        }\n    }\n\n    // correct CSS\n    if ( state ) {\n        $item.classList.add('mark');\n    } else {\n        $item.classList.remove('mark');\n    }\n\n    // apply flag\n    $item.data.mark = state;\n};\n\n\n// public\nmodule.exports = List;\n","/**\n * @license The MIT License (MIT)\n * @copyright Dmitry Fedotov <bas.jsdev@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\nvar StbComponentModal = require('stb-component-modal'),\n    Component         = require('stb-component'),\n    keys              = require('stb-keys');\n\n\n/**\n * Modal window implementation.\n *\n * @constructor\n * @extends StbComponentModal\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {Object} [config.title] message title\n * @param {Object} [config.className] message classname\n * @param {Object} [config.icon] icon at header\n * @param {Object} [config.visible] visibility flag\n * @param {Object} [config.children] content (inherited from the parent)\n *\n * @example\n * var modalSort = new Modal({\n *     visible: false,\n *     title: 'sort',\n *     events: {\n *         show: function () {\n *             list.focus();\n *         },\n *         hide: function () {\n *             page.panelSet.focus();\n *         }\n *     },\n *     children: [list = new RadioList({})]\n * });\n * page.add(modalSort);\n */\nfunction Modal ( config ) {\n    var self = this,\n        $overlay, $body, onkeydown;\n\n    // sanitize\n    config = config || {};\n    config.events = config.events || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.icon && typeof config.icon !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.icon');\n        }\n        if ( config.title && typeof config.title !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.title');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body ) {\n            throw new Error(__filename + ': config.$body should not be provided in Modal manually');\n        }\n    }\n\n    // usually can't accept focus\n    config.focusable = config.focusable || false;\n    // hide by default\n    config.visible = config.visible || false;\n    // add default close by click\n    config.events.click = config.events.click || function () { self.hide(); };\n    // add close window behavior, when pushed a back button or a menu button\n    onkeydown = config.events.keydown;\n    config.events.keydown = function ( event ) {\n        if ( onkeydown ) {\n            onkeydown.call(this, event);\n        }\n        if ( event.code === keys.back || event.code === keys.menu ) {\n            event.stop = true;\n            self.hide();\n        }\n    };\n\n    // parent constructor call\n    StbComponentModal.call(this, config);\n\n    // add table-cell wrappers\n    this.$node.appendChild(document.createElement('div'));\n    this.$node.firstChild.classList.add('alignBox');\n    this.$node.firstChild.appendChild(document.createElement('div'));\n\n    // add header div\n    this.$header = document.createElement('div');\n    this.$header.className = 'header';\n\n    // insert caption placeholder\n    this.$text = this.$header.appendChild(document.createElement('div'));\n    this.$text.classList.add('text');\n    this.$text.innerText = config.title || '';\n\n    // optional icon\n    if ( config.icon ) {\n        this.$icon = this.$header.appendChild(document.createElement('div'));\n        this.$icon.className = 'icon ' + config.icon;\n    }\n\n    $overlay = document.createElement('div');\n    $overlay.className = 'overlay';\n\n    // add to dom\n    // add body wrapper\n    $body = this.$body.parentNode.removeChild(this.$body);\n    this.$node.firstChild.firstChild.appendChild(this.$header);\n    this.$node.firstChild.firstChild.appendChild($body);\n    this.$node.firstChild.firstChild.appendChild($overlay);\n}\n\n\n// inheritance\nModal.prototype = Object.create(StbComponentModal.prototype);\nModal.prototype.constructor = Modal;\n\n// set component name\nModal.prototype.name = 'mag-component-modal';\n\n\n/**\n * Redefine default component focus to set additional css\n */\nModal.prototype.focus = function () {\n    this.$node.classList.add('active');\n    StbComponentModal.prototype.focus.call(this);\n    if ( this.children[0] && this.children[0] instanceof Component ) {\n        this.children[0].focus();\n    }\n};\n\n\n/**\n * Blur message\n */\nModal.prototype.blur = function () {\n    this.$node.classList.remove('active');\n    StbComponentModal.prototype.blur.call(this);\n};\n\n\n// public\nmodule.exports = Modal;\n","/**\n * Main application entry point.\n */\n\n'use strict';\n\nvar app = require('mag-app');\n\n\napp.once('load', function () {\n    var geo = require('./modules/geo');\n\n    app.userStore = core.state || null;\n\n    require('spa-gettext').load({name: core.environment.language}, function () {\n        app.pages = {\n            main: require('./pages/main')\n        };\n\n        geo.load({}, function ( data ) {\n            app.route(app.pages.main, {\n                currentLocation: data\n            });\n            app.ready();\n        });\n    });\n});\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app    = require('spa-app/lib/core'),\n    events = require('spa-app/lib/events');\n\n\n// get instance\nwindow.core = window.parent.getCoreInstance(window, app);\n\n// shims\nrequire('stb-shim-classlist');\n\n// apply geometry\nrequire('stb-app/lib/metrics');\n\n// load sdk css\nrequire('stb-app/lib/css')('sdk');\n\n// load theme css\nrequire('./css');\n\n// load app css\nrequire('stb-app/lib/css')('app');\n\n/**\n * Specify platform name\n *\n * @type {string}\n */\napp.platform = 'mag';\n\n/**\n * Show app.\n */\napp.ready = function () {\n    // if ( this.events['show'] ) {\n    //     this.emit('show');\n    // }\n    window.core.call('app:ready');\n};\n\n\n/**\n * Exit from app.\n * Destroy all application instance.\n * If callback function provided, and callback returns boolean 'true', application will stay alive.\n *\n * @fires module:/stb/app#exit\n */\napp.exit = function () {\n    if ( app.events['exit'] ) {\n        app.emit('exit');\n    }\n\n    core.call('exit');\n};\n\n\nevents.load = function ( event ) {\n    //window.core = window.parent.getCoreInstanse(window, app);\n    document.body.setAttribute('platform', app.platform);\n\n    if ( core.ready ) {\n        if ( app.events['load'] ) {\n            // notify listeners\n            app.emit('load', {});\n        }\n    } else {\n        core.once('load', function () {\n            //core.ready = true;\n            if ( app.events[event.type] ) {\n                // notify listeners\n                app.emit(event.type, event);\n            }\n        });\n    }\n};\n\n\n// activate development mechanisms and tools\nif ( DEVELOP ) {\n    //require('stb-develop');\n    require('./develop/main');\n} else {\n    // disable context menu\n    events.contextmenu = function ( event ) {\n        event.preventDefault();\n    };\n}\n\n\n//apply DOM events\nObject.keys(events).forEach(function ( name ) {\n    window.addEventListener(name, events[name]);\n});\n\n\n// new way of string handling\n// all strings are in UTF-16\n// since stbapp 2.18\n// if ( window.gSTB && gSTB.SetNativeStringMode ) {\n//     /* eslint new-cap: 0 */\n//     gSTB.SetNativeStringMode(true);\n// }\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nmodule.exports = {\n    /**\n     * Parse the given location search string into object.\n     *\n     * @param {string} query string to parse\n     *\n     * @return {Object.<string, string>} result data\n     */\n    parse: function ( query ) {\n        var data = {};\n\n        // parse and fill the data\n        query.split('&').forEach(function ( part ) {\n            part = part.split('=');\n            // valid number on params\n            if ( part.length === 2 ) {\n                data[part[0]] = decodeURIComponent(part[1]);\n            }\n        });\n\n        return data;\n    },\n\n\n    /**\n     * Make uri query part in a string form.\n     *\n     * @param {Object} params data to stringify\n     *\n     * @return {string} query string\n     */\n    stringify: function ( params ) {\n        var data = [];\n\n        Object.keys(params).forEach(function ( name ) {\n            data.push(name + '=' + encodeURIComponent(params[name]));\n        });\n\n        return data.join('&');\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('./core');\n\n\n// public\nmodule.exports = {\n    DOMContentLoaded: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // there are some listeners\n        if ( app.events['dom'] ) {\n            // notify listeners\n            app.emit('dom', event);\n            //console.log('DOMContentLoaded');\n        }\n    },\n\n    /**\n     * The load event is fired when a resource and its dependent resources have finished loading.\n     *\n     * Control flow:\n     *   1. Global handler.\n     *   2. Each page handler.\n     *   3. Application DONE event.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/load\n     *\n     * @param {Event} event generated object with event data\n     */\n    load: function ( event ) {\n        //var path;\n\n        //debug.event(event);\n        //console.log(event);\n\n        // time mark\n        //app.data.time.load = event.timeStamp;\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' load', 'green');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n\n        // time mark\n        //app.data.time.done = +new Date();\n\n        // everything is ready\n        // and there are some listeners\n        // if ( app.events['done'] ) {\n        //     // notify listeners\n        //     app.emit('done', event);\n        // }\n    },\n\n    /**\n     * The unload event is fired when the document or a child resource is being unloaded.\n     *\n     * Control flow:\n     *   1. Each page handler.\n     *   2. Global handler.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/unload\n     *\n     * @param {Event} event generated object with event data\n     */\n    unload: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' unload', 'red');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n    },\n\n    /**\n     * The error event is fired when a resource failed to load.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/error\n     *\n     * @param {Event} event generated object with event data\n     */\n    error: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n        //debug.fail('app event: ' + event.message, event, {tags: [event.type, 'event']});\n        console.error('app event: ' + event.message, event);\n    },\n\n    /**\n     * The keydown event is fired when a key is pressed down.\n     * Set event.stop to true in order to prevent bubbling.\n     *\n     * Control flow:\n     *   1. Current active component on the active page.\n     *   2. Current active page itself.\n     *   3. Application.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keydown\n     *\n     * @param {Event} event generated object with event data\n     */\n    keydown: function ( event ) {\n        var page = app.activePage,\n            eventLocal = {\n                code: event.keyCode,\n                stop: false\n            },\n            activeComponent;\n\n        if ( DEVELOP ) {\n            if ( !page ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        // filter phantoms\n        //if ( event.keyCode === 0 ) { return; }\n\n        // combined key code\n        //event.code = event.keyCode;\n\n        // apply key modifiers\n        if ( event.ctrlKey )  { eventLocal.code += 'c'; }\n        if ( event.altKey )   { eventLocal.code += 'a'; }\n        if ( event.shiftKey ) { eventLocal.code += 's'; }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + eventLocal.code, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + eventLocal.code, event);\n\n        // page.activeComponent can be set to null in event handles\n        activeComponent = page.activeComponent;\n\n        // current component handler\n        if ( activeComponent && activeComponent !== page ) {\n            // component is available and not page itself\n            if ( activeComponent.events[event.type] ) {\n                // there are some listeners\n                activeComponent.emit(event.type, eventLocal, event);\n            }\n\n            // todo: bubble event recursively\n            // bubbling\n            if (\n                !eventLocal.stop &&\n                activeComponent.propagate &&\n                activeComponent.parent &&\n                activeComponent.parent.events[event.type]\n            ) {\n                activeComponent.parent.emit(event.type, eventLocal, event);\n            }\n        }\n\n        // page handler\n        if ( !eventLocal.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, eventLocal, event);\n            }\n\n            // global app handler\n            if ( !event.stop ) {\n                // not prevented\n                if ( app.events[event.type] ) {\n                    // there are some listeners\n                    app.emit(event.type, eventLocal, event);\n                }\n            }\n        }\n\n        //// suppress non-printable keys in stb device (not in your browser)\n        //if ( app.data.host && keyCodes[event.code] ) {\n        //    event.preventDefault();\n        //}\n    },\n\n    /**\n     * The keypress event is fired when press a printable character.\n     * Delivers the event only to activeComponent at active page.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keypress\n     *\n     * @param {Event} event generated object with event data\n     * @param {string} event.char entered character\n     */\n    keypress: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + event.key, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + event.key, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n    },\n\n    /**\n     * The click event is fired when a pointing device button (usually a mouse button) is pressed and released on a single element.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/click\n     *\n     * @param {Event} event generated object with event data\n     */\n    /*click: function ( event ) {\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n     },*/\n\n    /**\n     * The contextmenu event is fired when the right button of the mouse is clicked (before the context menu is displayed),\n     * or when the context menu key is pressed (in which case the context menu is displayed at the bottom left of the focused\n     * element, unless the element is a tree, in which case the context menu is displayed at the bottom left of the current row).\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/contextmenu\n     *\n     * @param {Event} event generated object with event data\n     */\n    // contextmenu: function ( event ) {\n    //     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n    //\n    //     if ( !DEVELOP ) {\n    //         // disable right click in release mode\n    //         event.preventDefault();\n    //     }\n    // },\n\n    /*contextmenu: function ( event ) {\n     //var kbEvent = {}; //Object.create(document.createEvent('KeyboardEvent'));\n\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n\n     //kbEvent.type    = 'keydown';\n     //kbEvent.keyCode = 8;\n\n     //debug.log(kbEvent.type);\n\n     //globalEventListenerKeydown(kbEvent);\n     //var event = document.createEvent('KeyboardEvent');\n     //event.initEvent('keydown', true, true);\n\n     //document.dispatchEvent(kbEvent);\n\n     if ( !DEVELOP ) {\n     // disable right click in release mode\n     event.preventDefault();\n     }\n     },*/\n\n    /**\n     * The wheel event is fired when a wheel button of a pointing device (usually a mouse) is rotated.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel\n     *\n     * @param {Event} event generated object with event data\n     */\n    mousewheel: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n\n        // page handler\n        if ( !event.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, event);\n            }\n        }\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint-disable */\n\n'use strict';\n\n\nif ( !document.documentElement.classList ) {\n    var prototype = Array.prototype,\n        indexOf   = prototype.indexOf,\n        slice     = prototype.slice,\n        push      = prototype.push,\n        splice    = prototype.splice,\n        join      = prototype.join;\n\n    window.DOMTokenList = function ( el ) {\n        this._element = el;\n        if (el.className !== this._classCache) {\n            this._classCache = el.className;\n            if (!this._classCache) { return; }\n            var classes = this._classCache.replace(/^\\s+|\\s+$/g,'').split(/\\s+/),\n                i;\n            for (i = 0; i < classes.length; i++) {\n                push.call(this, classes[i]);\n            }\n        }\n    };\n\n    window.DOMTokenList.prototype = {\n        add: function ( token ) {\n            if(this.contains(token)) { return; }\n            push.call(this, token);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        contains: function ( token ) {\n            return indexOf.call(this, token) !== -1;\n        },\n\n        item: function ( index ) {\n            return this[index] || null;\n        },\n\n        remove: function ( token ) {\n            var i = indexOf.call(this, token);\n            if (i === -1) {\n                return;\n            }\n            splice.call(this, i, 1);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        toString: function () {\n            return join.call(this, ' ');\n        },\n\n        toggle: function ( token ) {\n            if (!this.contains(token)) {\n                this.add(token);\n            } else {\n                this.remove(token);\n            }\n            return this.contains(token);\n        }\n    };\n\n    Object.defineProperty(Element.prototype, 'classList', {\n        get: function () {\n            return new window.DOMTokenList(this);\n        }\n    });\n}\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    metrics = require('app:metrics');\n\n\n// global link\napp.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\napp.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\napp.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n\n// public\n//module.exports = app;\n","/**\n * Application geometry options.\n * Automatically loaded on application initialization and available as app.metrics.\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    480: {\n        // screen base dimension\n        height: 480,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  32,\n        availLeft:   48\n        // project-specific vars\n        // put here ...\n    },\n\n    576: {\n        // screen base dimension\n        height: 576,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  26,\n        availLeft:   54\n        // project-specific vars\n        // put here ...\n    },\n\n    720: {\n        // screen base dimension\n        height: 720,\n        width:  1280,\n        // safe zone margins\n        availTop:    30,\n        availBottom: 30,\n        availRight:  40,\n        availLeft:   40\n        // project-specific vars\n        // put here ...\n    },\n\n    1080: {\n        // screen base dimension\n        height: 1080,\n        width:  1920,\n        // safe zone margins\n        availTop:    45,\n        availBottom: 45,\n        availRight:  60,\n        availLeft:   60\n        // project-specific vars\n        // put here ...\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core'),\n    //metrics = require('app:metrics'),\n    linkCSS;\n\n\n//window.core = window.parent.getCoreInstance(window, app);\n\n\nlinkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = window.core.theme.path + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);\n\n\n// public\nmodule.exports = linkCSS;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    Gettext = require('cjs-gettext'),\n    loader  = new Emitter();\n\n\n/**\n * Wrap the given data with gettext instance\n * and export methods to the global scope.\n *\n * @param {Object} [data] localization data\n *\n * @return {Gettext} gettext instance\n */\nfunction prepare ( data ) {\n    var gettext = new Gettext(data);\n\n    // make it global\n    window.gettext  = window._ = gettext.gettext;\n    window.pgettext = gettext.pgettext;\n    window.ngettext = gettext.ngettext;\n\n    return gettext;\n}\n\n\n/**\n * Main application language\n */\nloader.defaultLanguage = 'en';\n\n\n/**\n * Simple gettext implementation.\n *\n * @param {Object} config options\n * @param {string} [config.path=lang] relative path to project root\n * @param {string} config.name language name\n * @param {string} [config.ext=json] language file extension\n * @param {function} callback hook on ready\n *\n * @return {boolean} flag is ajax request was made\n */\nloader.load = function ( config, callback ) {\n    var xhr;\n\n    if ( DEVELOP ) {\n        if ( !config.name || typeof config.name !== 'string' ) {\n            throw new Error(__filename + ': config.name must be a nonempty string');\n        }\n        if ( typeof callback !== 'function' ) {\n            throw new Error(__filename + ': wrong callback type');\n        }\n    }\n\n    // defaults\n    config.ext  = config.ext  || 'json';\n    config.path = config.path || 'lang';\n\n    // is it necessary to request a localization file?\n    if ( config.name === loader.defaultLanguage ) {\n        // no\n        prepare();\n        callback(null);\n\n        return false;\n    }\n\n    // yes\n    xhr = new XMLHttpRequest();\n\n    xhr.onload = function () {\n        var json;\n\n        try {\n            json = JSON.parse(xhr.responseText);\n\n            prepare(json);\n            callback(null);\n\n            // there are some listeners\n            if ( loader.events['load'] ) {\n                // notify listeners\n                loader.emit('load');\n            }\n        } catch ( error ) {\n            xhr.onerror(error);\n        }\n    };\n\n    xhr.ontimeout = xhr.onerror = function ( error ) {\n        prepare();\n        callback(error);\n\n        // there are some listeners\n        if ( loader.events['error'] ) {\n            // notify listeners\n            loader.emit('error', error);\n        }\n    };\n\n    xhr.open('GET', config.path + '/' + config.name + '.' + config.ext, true);\n    xhr.send(null);\n\n    return true;\n};\n\n\n// public\nmodule.exports = loader;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Translations handler.\n *\n * @constructor\n *\n * @param {Object} config init parameters\n */\nfunction Gettext ( config ) {\n    var data, meta;\n\n    // sanitize\n    config   = config || {};\n    data     = config.data || {};\n    data[''] = data[''] || {};\n\n    // shortcut\n    meta = config.meta;\n\n    /**\n     * Display the native language translation of a textual message.\n     *\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.gettext = function ( msgId ) {\n        return data[''][msgId] || msgId;\n    };\n\n\n    /**\n     * The \"p\" in \"pgettext\" stands for \"particular\": fetches a particular translation of the textual message.\n     *\n     * @param {string} context message context\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.pgettext = function ( context, msgId ) {\n        return data[context] && data[context][msgId] || msgId;\n    };\n\n\n    /**\n     * Display the native language translation of a textual message whose grammatical form depends on a number.\n     *\n     * @param {string} msgId textual message in a singular form\n     * @param {string} plural textual message in a plural form\n     * @param {number} value message number\n     *\n     * @return {string} translated text\n     */\n    this.ngettext = function ( msgId, plural, value ) {\n        /* eslint no-unused-vars: 0 */\n        /* eslint no-eval: 0 */\n        /* eslint id-length: 0 */\n        var n, evalResult;\n\n        if ( DEVELOP ) {\n            if ( Number(value) !== value ) {\n                throw new Error(__filename + ': value must be a number');\n            }\n        }\n\n        if ( data && meta && data[''][msgId] ) {\n            evalResult = eval('n = ' + value + '; ' + meta.plural);\n\n            if ( typeof evalResult === 'boolean' ) {\n                evalResult = +evalResult;\n            }\n\n            // translation\n            return data[''][msgId][evalResult];\n        }\n\n        // english\n        return value === 1 ? msgId : plural;\n    };\n}\n\n\n// correct constructor name\nGettext.prototype.constructor = Gettext;\n\n\n// public\nmodule.exports = Gettext;\n","/**\n * Main page implementation.\n */\n\n'use strict';\n\n/* eslint no-unused-expressions: off */\n\nvar pageId               = 'pageMain',\n    app                  = require('mag-app'),\n    keys                 = require('stb-keys'),\n    Panel                = require('mag-component-panel'),\n    PanelSet             = require('mag-component-panel-set'),\n    LayoutList           = require('mag-component-layout-list'),\n    ModalMessage         = require('mag-component-modal'),\n    RadioList            = require('mag-component-radio-list'),\n    ScrollBar            = require('stb-component-scrollbar'),\n    Footer               = require('mag-component-footer'),\n    ScrollArea           = require('mag-component-scroll-area'),\n    dom                  = require('spa-dom'),\n    Weather              = require('../modules/weather'),\n    geo                  = require('../modules/geo'),\n    appExit              = require('../modules/app.exit'),\n    config               = require('../config'),\n    keyboardOpen         = require('../modules/keyboard'),\n    forecastBuilder      = require('../modules/forecast.builder'),\n    page                 = new (require('stb-component-page'))({$node: window[pageId]}),\n    forecasts            = {},\n    actualLocationsList  = [],\n    syncLocationForecast = {},\n    sessionTmpSettings   = {},\n    celsiusIcon          = '\\u00B0C',\n    fahrenheitIcon       = '\\u00B0F',\n    actualSearch         = '',\n    mainPanelSet,\n    dropdown,\n    leftPanel,\n    mainPanel,\n    menuListView,\n    settingsStore,\n    locationsStore,\n    mainCitiesList,\n    menuListScroll,\n    mainPanelSettingsList,\n    inputContainerList,\n    mainPanelTitle;\n\n\napp.flags = {\n    isContextMenuModalShown: false,\n    isAddCityModalShown: false,\n    isSettingsModalShown: false,\n    isDisplaySettings: false,\n    isSearchPlaceSuccess: false\n};\n\n\n/** Save user data (locations and settings) to UserFS. */\napp.saveData = function () {\n    console.log('!!! app.saveData is called');\n    console.log(app.userStore);\n    console.log(JSON.stringify(app.userStore));\n    console.log('--------------------------------------------');\n\n    core.state = app.userStore;\n};\n\n\n/** Open modal window for adding locations on demand. */\nfunction openSearchModalWindow () {\n    mainPanel.$node.classList.remove('itemsNewProportions');\n    mainPanelSet.hide();\n    page.modals.search.show();\n    page.modals.search.focus();\n}\n\n\n/** Close modal messages and show main set of panels. */\nfunction closeModalWindow () {\n    page.modals.search.hide();\n    page.modals.settingsTemperature.hide();\n    page.modals.settingsWindSpeedUnits.hide();\n    page.modals.locationContextMenu.hide();\n    mainPanelSet.focus();\n    app.flags.isSettingsModalShown = false;\n    app.flags.isAddCityModalShown = false;\n    app.flags.isContextMenuModalShown = false;\n\n    if ( !app.isDisplaySettings ) {\n        page.footer.show();\n    }\n}\n\n\n/**\n * Build appropriate structure for LayoutList in weather details.\n *\n * @param {string} id - id of weather object data in forecasts object\n *\n * @return {Object[]} structure which is appropriate for using in LayoutList\n */\nfunction buildWeatherStructure ( id ) {\n    var data;\n\n    try {\n        data = forecasts[id];\n    } catch ( error ) {\n        console.log('Error on getting forecast!\\n' + error.message);\n    }\n\n    return data;\n}\n\n\n/** Apply user preferences to UI. */\nfunction applySettings () {\n    if ( sessionTmpSettings.temperature && settingsStore.temperature !== sessionTmpSettings.temperature ||\n         sessionTmpSettings.windSpeedUnits && settingsStore.windSpeedUnits !== sessionTmpSettings.windSpeedUnits ) {\n        if ( sessionTmpSettings.temperature && settingsStore.temperature !== sessionTmpSettings.temperature ) {\n            settingsStore.temperature = sessionTmpSettings.temperature;\n        }\n\n        if ( sessionTmpSettings.windSpeedUnits && settingsStore.windSpeedUnits !== sessionTmpSettings.windSpeedUnits ) {\n            settingsStore.windSpeedUnits = sessionTmpSettings.windSpeedUnits;\n        }\n\n        app.saveData();\n\n        if ( page.forecastBlock.forecastId ) {\n            forecastBuilder.setForecast(page.forecastBlock, buildWeatherStructure(page.forecastBlock.forecastId));\n        }\n    }\n}\n\n\n/**\n * Parse full name of particular place to get two parts: title and other info.\n *\n * @param {string} line - line for parsing (full display name from response object)\n * @return {Object[]} array of address parts\n */\nfunction parsePlaceLine ( line ) {\n    var rePlaceTitle = /^[^,]+/;\n\n    if ( (/^[^,]+$/).test(line) ) {\n        return line;\n    }\n\n    return [line.match(rePlaceTitle)[0], line.replace(rePlaceTitle, '').slice(2)];\n}\n\n\n/**\n * Re-render lists on data change/some event.\n *\n * @param {Object} elem - element that we want to re-render\n * @param {Object[]} data - new initialization data\n * @param {number} size - size of the list\n * @param {number} sizeLimit - minimum size for displaying scroll\n * @param {Object} scrollType - scroll element\n * @param {Object} [mixin] - set of additional properties\n */\nfunction renderList ( elem, data, size, sizeLimit, scrollType, mixin ) {\n    var headerMenuItem = {\n            items: [\n                {\n                    className: 'theme-icon theme-icon-plus' + (data.length ? ' theme-header' : '')\n                },\n                {\n                    value: gettext('Add city'),\n                    className: data.length ? 'theme-header' : ''\n                }\n            ],\n            click: openSearchModalWindow\n        },\n        footerMenuItem = [\n            {\n                items: [\n                    {\n                        className: 'theme-icon theme-icon-settings theme-footer'\n                    },\n                    {\n                        value: gettext('Settings'),\n                        className: 'theme-footer'\n                    }\n                ],\n                click: function () {\n                    if ( !app.isDisplaySettings ) {\n                        mainPanelTitle.tmp = mainPanelTitle.innerText;\n                        mainPanelTitle.innerText = gettext('settings');\n                        page.forecastBlock.hide();\n                        mainPanelSettingsList.show();\n                        mainPanel.$node.classList.add('itemsNewProportions');\n                        page.footer.hide();\n                        app.isDisplaySettings = true;\n                    }\n                }\n            },\n            {\n                items: [\n                    {className: 'theme-icon theme-icon-exit'},\n                    {value: gettext('Exit')}\n                ],\n                click: function () {\n                    mainPanelSet.blur();\n                    appExit.goExit();\n                }\n            }\n        ],\n        tmpData = {\n            scroll: data.length <= sizeLimit ? null : scrollType,\n            size: size,\n            data: data || [],\n            focusIndex: data.length - 1\n        };\n\n    // only for left-side list\n    if ( elem === menuListView ) {\n        tmpData.data.unshift(headerMenuItem);\n        tmpData.data = tmpData.data.concat(footerMenuItem);\n    }\n\n    if ( mixin ) {\n        Object.keys(mixin).forEach(function ( item ) {\n            tmpData[item] = mixin[item];\n        });\n    }\n\n    if ( scrollType ) {\n        if ( tmpData.data.length > sizeLimit ) {\n            if ( !elem.scroller ) {\n                elem.scroller = 1;\n                scrollType.init({\n                    realSize: tmpData.data.length\n                });\n                scrollType.$node.style.display = '';\n            }\n        } else {\n            elem.scroller = 0;\n            scrollType.$node.style.display = 'none';\n        }\n    }\n\n    elem.init(tmpData);\n}\n\n\n/**\n *  Construct appropriate structure for adding to LayoutLists with handlers.\n *\n *  @param {Object[]} places - array of received places (from response)\n *  @return {Object[]} array of ready-to-use in LayoutList objects\n */\nfunction constructDataOut ( places ) {\n    return places.map(function ( item ) {\n        var placeParts = parsePlaceLine(item.display_name),\n            isArray = Array.isArray(placeParts),\n            titlePlace = isArray ? placeParts[0] : placeParts,\n            location = {\n                lat: item.lat,\n                lon: item.lon\n            },\n            // purpose of this is binding locations and corresponding weather\n            randomId = ('id' + (Math.random() * Date.now())).replace('.', '');\n\n        return {\n            items: [\n                {\n                    value: titlePlace,\n                    className: 'placeTitleListBlock'\n                },\n                {\n                    value: isArray ? placeParts[1] : '',\n                    className: 'placeRestListBlock'\n                }\n            ],\n            click: function () {\n                var isPlaceAbsent = true,\n                    weatherObj, locationItemData, idx; // eslint-disable-line\n\n                for ( idx = locationsStore.length; idx--; ) {\n                    if ( locationsStore[idx].lat === location.lat && locationsStore[idx].lon === location.lon ) {\n                        isPlaceAbsent = false;\n                        break;\n                    }\n                }\n\n                if ( isPlaceAbsent ) {\n                    actualSearch = '';\n\n                    locationItemData = {\n                        items: [\n                            {\n                                className: 'theme-icon theme-icon-cloud-sun-2 ' + randomId\n                            },\n                            {\n                                value: titlePlace,\n                                className: 'addPlaceTitle'\n                            }\n                        ],\n                        value: {\n                            id: randomId,\n                            lat: location.lat,\n                            lon: location.lon,\n                            fullName: item.display_name\n                        },\n                        click: function () {\n                            if ( app.isDisplaySettings ) {\n                                applySettings();\n                                mainPanelTitle.innerText = mainPanelTitle.tmp;\n                                mainPanelSettingsList.hide();\n                                page.forecastBlock.show();\n                                mainPanel.$node.classList.remove('itemsNewProportions');\n                                page.footer.show();\n                                app.isDisplaySettings = false;\n                                menuListView.emit('focus:item', {$curr: {index: menuListView.$focusItem.index}});\n                            }\n                        }\n                    };\n\n                    syncLocationForecast[randomId] = locationItemData;\n                    actualLocationsList.push(locationItemData);\n                    renderList(\n                        menuListView,\n                        actualLocationsList.slice(),\n                        actualLocationsList.length > 4 ? 7 : actualLocationsList.length + 3,\n                        7,\n                        menuListScroll,\n                        {focusIndex: actualLocationsList.length}\n                    );\n\n                    // store selected place to storage. In current case user adds location\n                    locationsStore.push({\n                        fullName: item.display_name,\n                        shortName: titlePlace,\n                        lat: location.lat,\n                        lon: location.lon\n                    });\n\n                    console.log('!!! prepare for saveData');\n                    console.log(locationsStore);\n                    console.log(JSON.stringify(locationsStore));\n                    console.log('--------------------------------------------');\n\n                    app.saveData();\n\n                    weatherObj = new Weather({location: location}, function ( forecast ) {\n                        var index;\n\n                        forecasts[randomId] = forecast;\n\n                        for ( index = actualLocationsList.length; index--; ) {\n                            if ( actualLocationsList[index].value.id === randomId ) {\n                                actualLocationsList[index] = syncLocationForecast[randomId];\n                            }\n                        }\n\n                        page.forecastBlock.forecastId = randomId;\n                        forecastBuilder.setForecast(page.forecastBlock, buildWeatherStructure(randomId));\n                    });\n                }\n\n                dropdown.init({\n                    size: 5,\n                    data: []\n                });\n\n                inputContainerList.$body.children[0].children[0].children[1].innerText =\n                    inputContainerList.$body.children[0].children[0].children[1].parentNode.parentNode.data.value.defaultValue;\n                mainPanelSet.show();\n                closeModalWindow();\n            }\n        };\n    });\n}\n\n\n/**\n * Search data by Geo service with given user input.\n *\n * @param {string} value - search string\n */\nfunction searchPlaces ( value ) {\n    if ( value ) {\n        geo.search({\n            language: core.environment.language,\n            query: value\n        }, function ( response ) {\n            if ( response && response.length ) {\n                app.flags.isSearchPlaceSuccess = true;\n                renderList(dropdown, constructDataOut(response), 5, 5, null);\n                dropdown.blurItem(dropdown.$focusItem);\n            } else {\n                app.flags.isSearchPlaceSuccess = false;\n                renderList(dropdown, [], 5, 5, null);\n            }\n        });\n    }\n}\n\n\n/**\n * Delete particular city with notification before.\n */\nfunction deleteCity () {\n    core.notify({\n        title: gettext('Are you sure you want to delete this location?'),\n        icon: 'info',\n        type: '',\n        buttons: [\n            {value: gettext('Cancel')},\n            {\n                value: gettext('Ok'),\n                click: function () {\n                    var target = menuListView.$focusItem,\n                        id = target.data.value.id,\n                        idx;\n\n                    // remove particular location from all storage structures\n                    for ( idx = locationsStore.length; idx--; ) {\n                        if ( locationsStore[idx].lat === target.data.value.lat && locationsStore[idx].lon === target.data.value.lon ) {\n                            locationsStore.splice(idx, 1);\n                            break;\n                        }\n                    }\n                    app.saveData();\n\n                    // remove particular location from all runtime structures\n                    delete syncLocationForecast[id];\n                    delete forecasts[id];\n                    actualLocationsList = actualLocationsList.filter(function (item ) {\n                        return item.value.id !== id;\n                    });\n\n                    // render list with deleted location\n                    renderList(\n                        menuListView,\n                        actualLocationsList.slice(),\n                        actualLocationsList.length > 4 ? 7 : actualLocationsList.length + 3,\n                        7,\n                        menuListScroll,\n                        {focusIndex: actualLocationsList.length ? target.index : 0}\n                    );\n\n                    if ( !actualLocationsList.length ) {\n                        forecastBuilder.setNoData(page.forecastBlock);\n                        mainPanelTitle.innerText = gettext('No cities');\n                    }\n\n                    closeModalWindow();\n                }\n            }\n        ]\n    });\n}\n\n\n/**\n * Construct set of menu items according to context.\n *\n * @param {string} mask - set of active/inactive items\n * @return {Object[]} actions\n */\nfunction modifyContextMenuByMask ( mask ) {\n    var template = [\n        {\n            items: [\n                {\n                    className: 'theme-icon theme-icon-rc-f2'\n                },\n                gettext('Add city')\n            ],\n            click: function () {\n                openSearchModalWindow.itemToReturn = {idx: menuListView.$focusItem.index};\n                closeModalWindow();\n                openSearchModalWindow();\n            }\n        },\n        {\n            items: [\n                {\n                    className: 'theme-icon theme-icon-rc-f1'\n                },\n                gettext('Delete city')\n            ],\n            click: deleteCity\n        },\n        {\n            items: [\n                {\n                    className: 'theme-icon theme-icon-up'\n                },\n                gettext('Move up')\n            ],\n            click: function () {\n                var target = menuListView.$focusItem,\n                    idx = target.index - 1,\n                    tmp;\n\n                tmp = actualLocationsList[idx - 1];\n                actualLocationsList[idx - 1] = actualLocationsList[idx];\n                actualLocationsList[idx] = tmp;\n                renderList(\n                    menuListView,\n                    actualLocationsList.slice(),\n                    actualLocationsList.length > 4 ? 7 : actualLocationsList.length + 3,\n                    7,\n                    menuListScroll,\n                    {focusIndex: idx}\n                );\n                closeModalWindow();\n            }\n        },\n        {\n            items: [\n                {\n                    className: 'theme-icon theme-icon-down'\n                },\n                gettext('Move down')\n            ],\n            click: function () {\n                var target = menuListView.$focusItem,\n                    idx = target.index - 1,\n                    tmp;\n\n                tmp = actualLocationsList[idx + 1];\n                actualLocationsList[idx + 1] = actualLocationsList[idx];\n                actualLocationsList[idx] = tmp;\n                renderList(\n                    menuListView,\n                    actualLocationsList.slice(),\n                    actualLocationsList.length > 4 ? 7 : actualLocationsList.length + 3,\n                    7,\n                    menuListScroll,\n                    {focusIndex: idx + 2}\n                );\n                closeModalWindow();\n            }\n        }\n    ];\n\n    return template.filter(function ( item, idx ) {\n        return +mask[idx];\n    });\n}\n\n\n/**\n * Render whole page (all panels + auxiliary nodes).\n *\n * @param {Object[]} data - array of structured items for using in LayoutLists\n * @param {Object[]} settings - user settings for application \"Settings\"\n */\nfunction renderPage ( data, settings ) { // eslint-disable-line\n    var dataLength = data.length,\n        inputDelay = config.searchInputDelay,\n        contextMenuEventHook = {\n            keydown: function ( event ) {\n                LayoutList.prototype.defaultEvents.keydown.call(this, event);\n                if ( event.code === keys.back || event.code === keys.menu ) {\n                    event.stop = true;\n                    closeModalWindow();\n                }\n            }\n        },\n        headerMenuItem = [\n            {\n                items: [\n                    {\n                        className: 'theme-icon theme-icon-plus' + (data.length ? ' theme-header' : '')\n                    },\n                    {\n                        value: gettext('Add city'),\n                        className: data.length ? 'theme-header' : ''\n                    }\n                ],\n                click: openSearchModalWindow\n            }\n        ],\n        footerMenuItem = [\n            {\n                items: [\n                    {\n                        className: 'theme-icon theme-icon-settings theme-footer'\n                    },\n                    {\n                        value: gettext('Settings'),\n                        className: 'theme-footer'\n                    }\n                ],\n                click: function () {\n                    if ( !app.isDisplaySettings ) {\n                        mainPanelTitle.tmp = mainPanelTitle.innerText;\n                        mainPanelTitle.innerText = gettext('settings');\n                        page.forecastBlock.hide();\n                        mainPanelSettingsList.show();\n                        mainPanel.$node.classList.add('itemsNewProportions');\n                        page.footer.hide();\n                        app.isDisplaySettings = true;\n                    }\n                }\n            },\n            {\n                items: [\n                    {\n                        value: '',\n                        className: 'theme-icon theme-icon-exit'\n                    },\n                    {\n                        value: gettext('Exit'),\n                        className: ''\n                    }\n                ],\n                click: function () {\n                    mainPanelSet.blur();\n                    appExit.goExit();\n                }\n            }\n        ],\n        settingsListData, contextMenuList;\n\n    page.modals = {};\n\n\n    function observeMenuListView () {\n        var id;\n\n        if ( menuListView.$focusItem.data && menuListView.$focusItem.data.value && menuListView.$focusItem.data.value.fullName ) {\n            id = menuListView.$focusItem.data.value.id;\n            mainPanelTitle.innerText = menuListView.$focusItem.data.value.fullName;\n            page.footer.init(page.footer.onCityConfig);\n\n            page.forecastBlock.forecastId = id;\n\n            forecastBuilder.setForecast(page.forecastBlock, buildWeatherStructure(id));\n        } else {\n            page.footer.init(page.footer.noCityConfig);\n        }\n    }\n\n\n    page.footer = new Footer({parent: page});\n\n    page.footer.noCityConfig = {\n        left: {code: keys.menu, action: function () {\n            contextMenuList.init({\n                size: 1,\n                data: modifyContextMenuByMask('1000'),\n                events: contextMenuEventHook\n            });\n            mainPanelSet.blur();\n            setTimeout(function () { page.modals.locationContextMenu.show(); }, 0);\n            page.footer.hide();\n        }},\n        middle: [{code: keys.f2, title: gettext('Add city'), action: openSearchModalWindow}]\n    };\n\n    page.footer.onCityConfig = {\n        left: {code: keys.menu, action: function () {\n            var target = menuListView.$focusItem;\n\n            if ( actualLocationsList.length > 1 ) {\n                if ( target.index === 1 ) {\n                    contextMenuList.init({\n                        size: 3,\n                        data: modifyContextMenuByMask('1101'),\n                        events: contextMenuEventHook\n                    });\n                } else if ( target.index - 1 === actualLocationsList.length - 1 ) {\n                    contextMenuList.init({\n                        size: 3,\n                        data: modifyContextMenuByMask('1110'),\n                        events: contextMenuEventHook\n                    });\n                } else {\n                    contextMenuList.init({\n                        size: 4,\n                        data: modifyContextMenuByMask('1111'),\n                        events: contextMenuEventHook\n                    });\n                }\n            } else {\n                contextMenuList.init({\n                    size: 2,\n                    data: modifyContextMenuByMask('1100'),\n                    events: contextMenuEventHook\n                });\n            }\n\n            mainPanelSet.blur();\n            setTimeout(function () { page.modals.locationContextMenu.show(); }, 0);\n            page.footer.hide();\n        }},\n        middle: [\n            {code: keys.f1, title: gettext('Delete'), action: deleteCity},\n            {code: keys.f2, title: gettext('Add city'), action: openSearchModalWindow}\n        ]\n    };\n\n    settingsListData = [\n        {\n            items: [\n                {\n                    value: gettext('temperature')\n                },\n                {\n                    value: (function () {\n                        if ( settings && settings.temperature ) {\n                            return settings.temperature === 'C' ? celsiusIcon : fahrenheitIcon;\n                        }\n\n                        return celsiusIcon;\n                    })(),\n                    className: 'optionTemperatureIndicator theme-text-disabled'\n                }\n            ],\n            click: function () {\n                mainPanelSet.blur();\n                page.modals.settingsTemperature.show();\n                page.modals.settingsTemperature.focus();\n                app.flags.isSettingsModalShown = true;\n            }\n        },\n        {\n            items: [\n                {\n                    value: gettext('Wind speed')\n                },\n                {\n                    value: settings && settings.windSpeedUnits ? gettext(settings.windSpeedUnits) : gettext('m/s'),\n                    className: 'optionWindSpeedIndicator theme-text-disabled'\n                }\n            ],\n            click: function () {\n                mainPanelSet.blur();\n                page.modals.settingsWindSpeedUnits.show();\n                page.modals.settingsWindSpeedUnits.focus();\n                app.flags.isSettingsModalShown = true;\n            }\n        }\n    ];\n\n    menuListScroll = new ScrollBar({\n        viewSize: 7,\n        realSize: dataLength\n    });\n\n    page.modals.search = new ModalMessage({\n        className: 'searchPlaceModalWindow',\n        title: gettext('Add city'),\n        events: {\n            show: function () {\n                inputContainerList.focusIndex(0);\n\n                keyboardOpen({\n                    title: gettext('Add city'),\n                    elemSelector: inputContainerList.$body.children[0].children[0].children[1],\n                    value: actualSearch\n                }, function ( event ) {\n                    setTimeout(function () {\n                        searchPlaces(actualSearch = event.value.trim());\n                    }, inputDelay);\n                });\n\n                app.flags.isAddCityModalShown = true;\n                page.footer.hide();\n            },\n            hide: function () {\n                mainPanelSet.show();\n                mainPanelSet.focus();\n                page.footer.show();\n            }\n        },\n        children: [\n            inputContainerList = new LayoutList({\n                size: 1,\n                data: [\n                    {\n                        items: [\n                            {\n                                value: '',\n                                className: 'theme-icon theme-icon-search'\n                            },\n                            {\n                                value: gettext('Search'),\n                                className: 'inputSearch'\n                            }\n                        ],\n                        value: {\n                            defaultValue: gettext('Search')\n                        },\n                        click: function () {\n                            keyboardOpen({\n                                title: gettext('Add city'),\n                                elemSelector: inputContainerList.$body.children[0].children[0].children[1],\n                                value: actualSearch\n                            }, function ( event ) {\n                                setTimeout(function () {\n                                    searchPlaces(actualSearch = event.value.trim());\n                                }, inputDelay);\n                            });\n                        }\n                    }\n                ],\n                events: {\n                    overflow: function ( evt ) {\n                        if ( evt.direction === keys.down ) {\n                            if ( app.flags.isSearchPlaceSuccess ) {\n                                this.blurItem(this.$focusItem);\n                                dropdown.focus();\n                                dropdown.focusIndex(0);\n                            }\n                        }\n                    }\n                }\n            }),\n            dropdown = new LayoutList({\n                className: 'padded',\n                events: {\n                    overflow: function ( evt ) {\n                        if ( evt.direction === keys.up ) {\n                            dropdown.blurItem(dropdown.$focusItem);\n                            inputContainerList.focus();\n                            inputContainerList.focusIndex(0);\n                        }\n                    }\n                }\n            })\n        ]\n    });\n\n    page.modals.settingsTemperature = new ModalMessage({\n        title: gettext('units'),\n        events: {\n            show: function () {\n                page.modals.settingsTemperature.children[0].focus();\n                app.flags.isSettingsModalShown = true;\n            }\n        },\n        children: [\n            new RadioList({\n                focusIndex: 0,\n                size: 2,\n                events: {\n                    'click:item': function ( evt ) {\n                        if ( evt.$item.value ) {\n                            mainPanelSettingsList.$focusItem.children[0].children[1].innerText = fahrenheitIcon;\n                            sessionTmpSettings.temperature = 'F';\n                        } else {\n                            mainPanelSettingsList.$focusItem.children[0].children[1].innerText = celsiusIcon;\n                            sessionTmpSettings.temperature = 'C';\n                        }\n                        closeModalWindow();\n                    }\n                },\n                data: [\n                    {\n                        state: settingsStore ? (settingsStore.temperature === 'C') : true,\n                        title: gettext('Celsius'),\n                        value: 0\n                    },\n                    {\n                        state: settingsStore ? (settingsStore.temperature === 'F') : false,\n                        title: gettext('Fahrenheit'),\n                        value: 1\n                    }\n                ]\n            })\n        ]\n    });\n\n    page.modals.settingsWindSpeedUnits = new ModalMessage({\n        title: gettext('units'),\n        events: {\n            show: function () {\n                page.modals.settingsWindSpeedUnits.children[0].focus();\n                app.flags.isSettingsModalShown = true;\n            }\n        },\n        children: [\n            new RadioList({\n                focusIndex: 0,\n                size: 3,\n                events: {\n                    'click:item': function ( evt ) {\n                        if ( evt.$item.value === 2 ) {\n                            mainPanelSettingsList.$focusItem.children[0].children[1].innerText = gettext('m/h');\n                            sessionTmpSettings.windSpeedUnits = 'm/h';\n                        } else if ( evt.$item.value === 1 ) {\n                            mainPanelSettingsList.$focusItem.children[0].children[1].innerText = gettext('km/h');\n                            sessionTmpSettings.windSpeedUnits = 'km/h';\n                        } else {\n                            mainPanelSettingsList.$focusItem.children[0].children[1].innerText = gettext('m/s');\n                            sessionTmpSettings.windSpeedUnits = 'm/s';\n                        }\n                        closeModalWindow();\n                    }\n                },\n                data: [\n                    {\n                        state: settingsStore ? (settingsStore.windSpeedUnits === 'm/s') : true,\n                        title: gettext('m/s'),\n                        value: 0\n                    },\n                    {\n                        state: settingsStore ? (settingsStore.windSpeedUnits === 'km/h') : false,\n                        title: gettext('km/h'),\n                        value: 1\n                    },\n                    {\n                        state: settingsStore ? (settingsStore.windSpeedUnits === 'm/h') : false,\n                        title: gettext('m/h'),\n                        value: 2\n                    }\n                ]\n            })\n        ]\n    });\n\n    page.modals.locationContextMenu = new ModalMessage({\n        title: gettext('actions'),\n        events: {\n            show: function () {\n                page.modals.locationContextMenu.focus();\n                contextMenuList.focusIndex(0);\n                app.flags.isContextMenuModalShown = true;\n            },\n            hide: closeModalWindow\n        },\n        children: [\n            contextMenuList = new LayoutList({\n                cycle: true,\n                focusIndex: 0,\n                size: 0,\n                data: []\n            })\n        ]\n    });\n\n    page.forecastBlock = new ScrollArea({propagate: true});\n    page.add(page.modals.search);\n    page.add(page.modals.settingsTemperature);\n    page.add(page.modals.settingsWindSpeedUnits);\n    page.add(page.modals.locationContextMenu);\n\n    page.add(\n        mainPanelSet = new PanelSet({\n            panels: [\n                leftPanel = new Panel({\n                    size: 1,\n                    title: gettext('menu'),\n                    children: [\n                        menuListView = new LayoutList({\n                            cycle: true,\n                            size: data.length > 4 ? 7 : data.length + 3,\n                            focusIndex: +!!data.length,\n                            data: headerMenuItem.concat(data, footerMenuItem),\n                            scroll: menuListScroll,\n                            events: {\n                                'focus:item': function ( evt ) {\n                                    if ( !app.mainPanelSet || app.isDisplaySettings ) {\n                                        return;\n                                    }\n\n                                    if ( evt.$curr && evt.$curr.index ) {\n                                        observeMenuListView();\n                                    } else {\n                                        page.footer.init(page.footer.noCityConfig);\n                                    }\n                                },\n                                'move:view': function ( evt ) {\n                                    if ( !app.mainPanelSet || app.isDisplaySettings ) {\n                                        return;\n                                    }\n\n                                    if ( evt.currIndex === 1 || (evt.currIndex > 1 && evt.prevIndex) ) {\n                                        observeMenuListView();\n                                    } else {\n                                        page.footer.init(page.footer.noCityConfig);\n                                    }\n                                }\n                            }\n                        })\n                    ],\n                    events: {\n                        focus: function ( event ) {\n                            Panel.prototype.defaultEvents.focus.call(this, event);\n                            if ( menuListView.$focusItem ) {\n                                page.footer.init(page.footer[(menuListView.$focusItem.data.value ? 'on' : 'no') + 'CityConfig']);\n                            }\n                        }\n                    }\n                }),\n                mainPanel = new Panel({\n                    size: 2,\n                    title: [\n                        {\n                            className: 'forecastLocationInfo'\n                        },\n                        dom.tag('div', {className: 'amountContainer'}, dom.tag('div', {className: 'forecastUpdateInfo'}, ''))\n                    ],\n                    main: true,\n                    children: [\n                        page.forecastBlock,\n                        mainPanelSettingsList = new LayoutList({\n                            className: 'padded',\n                            cycle: true,\n                            visible: false,\n                            focusIndex: 0,\n                            size: 2,\n                            data: settingsListData\n                        })\n                    ],\n                    events: {\n                        focus: function ( event ) {\n                            Panel.prototype.defaultEvents.focus.call(this, event);\n                            page.footer.init(page.footer[(actualLocationsList.length ? 'on' : 'no') + 'CityConfig']);\n                        }\n                    }\n                })\n            ]\n        })\n    );\n\n    forecastBuilder.init(page.forecastBlock, data[0]);\n    app.mainPanelSet = mainPanelSet;\n    mainPanelTitle = mainPanel.title.$node.children[0];\n    leftPanel.$body.appendChild(menuListScroll.$node);\n\n    if ( data.length ) {\n        page.footer.init(page.footer.onCityConfig);\n        mainPanel.focus();\n        mainPanelTitle.innerText = data[0].value.fullName;\n    } else {\n        page.footer.init(page.footer.noCityConfig);\n        leftPanel.focus();\n        mainPanelTitle.innerText = gettext('No cities');\n    }\n\n    page.footer.show();\n    mainPanel.add(page.forecastBlock);\n\n    if ( data.length <= 4 ) {\n        menuListScroll.$node.style.display = 'none';\n    }\n\n    mainPanel.addListener('focus', function () {\n        app.isDisplaySettings && mainPanelSettingsList.focus();\n    });\n\n    inputContainerList.$body.firstElementChild.classList.add('bgDarken');\n}\n\n\n/**\n * Construct stored user data for using in components.\n *\n * @param {Object[]} data - data to parse\n * @return {Object[]} prepared data\n */\nfunction prepareUserDataToRender ( data ) {\n    if ( data ) {\n        return data.map(function ( item, idx ) {\n            // purpose of this is binding locations and corresponding weather\n            var randomId = ('id' + (Math.random() * Date.now())).replace('.', ''),\n                locationItemData = {\n                    items: [\n                        {\n                            className: 'theme-icon theme-icon-cloud-sun-2 ' + randomId\n                        },\n                        {\n                            value: item.shortName,\n                            className: 'addPlaceTitle'\n                        }\n                    ],\n                    value: {\n                        id: randomId,\n                        lat: item.lat,\n                        lon: item.lon,\n                        fullName: item.fullName\n                    },\n                    click: function () {\n                        if ( app.isDisplaySettings ) {\n                            applySettings();\n                            mainPanelTitle.innerText = mainPanelTitle.tmp;\n                            mainPanelSettingsList.hide();\n                            page.forecastBlock.show();\n                            mainPanel.$node.classList.remove('itemsNewProportions');\n                            page.footer.show();\n                            app.isDisplaySettings = false;\n                            menuListView.emit('focus:item', {$curr: {index: menuListView.$focusItem.index}});\n                        }\n                    }\n                },\n                weatherObj; // eslint-disable-line\n\n            syncLocationForecast[randomId] = locationItemData;\n            actualLocationsList.push(locationItemData);\n\n            weatherObj = new Weather({\n                location: {\n                    lat: item.lat,\n                    lon: item.lon\n                }\n            }, function ( forecast ) {\n                forecasts[randomId] = forecast;\n                actualLocationsList.length = 0;\n                Object.keys(syncLocationForecast).forEach(function ( location ) {\n                    actualLocationsList.push(syncLocationForecast[location]);\n                });\n\n                page.forecastBlock.forecastId = randomId;\n\n                if ( idx === menuListView.$focusItem.index - 1 ) {\n                    forecastBuilder.setForecast(page.forecastBlock, buildWeatherStructure(randomId));\n                }\n            });\n\n            return locationItemData;\n        });\n    }\n\n    return [];\n\n}\n\n\npage.once('show', function () {\n    document.getElementById('forecast').classList.add('hiddenBlock');\n\n    if ( app.userStore ) {\n        locationsStore = app.userStore.locations || [];\n        settingsStore = app.userStore.settings || {};\n\n        if ( locationsStore.length ) {\n            document.getElementById('forecast').classList.remove('hiddenBlock');\n        }\n\n        renderPage(prepareUserDataToRender(locationsStore), settingsStore);\n    } else {\n        renderPage([], null);\n        app.userStore = {};\n        locationsStore = app.userStore.locations = [];\n        settingsStore = app.userStore.settings = {};\n    }\n    settingsStore.temperature = settingsStore.temperature || 'C';\n    settingsStore.windSpeedUnits = settingsStore.windSpeedUnits || 'm/s';\n    app.saveData();\n});\n\npage.addListener('keydown', function ( event ) {\n    switch ( event.code ) {\n        case keys.back:\n            if ( app.flags.isSettingsModalShown || app.flags.isAddCityModalShown || app.flags.isContextMenuModalShown ) {\n                if ( app.flags.isAddCityModalShown ) {\n                    actualSearch = '';\n                    dropdown.init({\n                        size: 5,\n                        data: []\n                    });\n                    inputContainerList.$body.children[0].children[0].children[1].innerText =\n                        inputContainerList.$body.children[0].children[0].children[1].parentNode.parentNode.data.value.defaultValue;\n                }\n\n                closeModalWindow();\n                mainPanelSet.show();\n\n                if ( openSearchModalWindow.itemToReturn ) {\n                    mainPanel.focus();\n                    mainCitiesList.focusIndex(openSearchModalWindow.itemToReturn.idx);\n                    openSearchModalWindow.itemToReturn = null;\n                }\n            } else {\n                appExit.goBack();\n            }\n            break;\n    }\n});\n\n\nmodule.exports = page;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    Layout = require('mag-component-layout');\n\n\n/**\n * Extended panel implementation.\n *\n * @constructor\n * @extends Component\n * @param {Object} [config={}] - init parameters (all inherited from the parent)\n * @param {boolean} [config.main=false] - set panel as main\n * @param {boolean} [config.size=1] - size of panel width\n *\n * @example\n * main = new Panel({\n *     size: 1,\n *     title: ['Left Panel', {className: 'info'}],\n *     main: true,\n *     children: [\n *         new List({\n *             data: ['1 bla', '2 bro', '3 car', '4 hoho', 'Search'],\n *             size: 5\n *         })\n *     ]\n * });\n */\nfunction Panel ( config ) {\n    var $overlay;\n\n    config = config || {};\n\n    /**\n     * Size of panel.\n     *\n     * @type {number}\n     */\n    this.size = 1;\n\n    /**\n     * Set panel as main.\n     *\n     * @type {boolean}\n     */\n    this.main = false;\n\n    /**\n     * Index in panel set.\n     *\n     * @type {number}\n     */\n    this.index = 0;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    // set default className if classList property empty or undefined\n    //config.className = 'Panel ' + (config.className || '');\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    //this.$node.classList.add('theme-main');\n    //this.$node.classList.add('theme-panel');\n\n    // add special class to set component size\n    if ( config.size ) {\n        this.size = config.size;\n        this.$node.classList.add('size' + config.size);\n    }\n\n    // add special class to set main panel\n    if ( config.main ) {\n        this.main = true;\n        this.$node.classList.add('main');\n    }\n\n    // create elements to set as component shadows\n    this.shadows = {\n        $left: document.createElement('div'),\n        $right: document.createElement('div')\n    };\n\n    this.shadows.$left.className = 'shadow left';\n    this.$node.appendChild(this.shadows.$left);\n\n    this.shadows.$right.className = 'shadow right';\n    this.$node.appendChild(this.shadows.$right);\n\n    // add title to panel\n    if ( config.title ) {\n        if ( !Array.isArray(config.title) ) {\n            config.title = [config.title];\n        }\n\n        this.title = new Layout({\n            //className: 'title theme-header theme-title',\n            className: 'title',\n            data: config.title,\n            focusable: false\n        });\n        this.$node.appendChild(this.title.$node);\n    }\n\n    this.$node.appendChild(this.$body);\n\n    $overlay = document.createElement('div');\n    $overlay.className = 'overlay';\n    this.$node.appendChild($overlay);\n}\n\n\n// inheritance\nPanel.prototype = Object.create(Component.prototype);\nPanel.prototype.constructor = Panel;\n\n// set component name\nPanel.prototype.name = 'mag-component-panel';\n\n\n/**\n * Define default events.\n *\n * @type {{focus: Function}} try to focus first child component if it present\n */\nPanel.prototype.defaultEvents = {\n    focus: function () {\n        if ( this.children.length ) {\n            this.children[0].focus();\n        }\n    }\n};\n\n\n/**\n * Redefine default component focus to set panel as active even when give focus to children components.\n */\nPanel.prototype.focus = function () {\n    if ( this.focusable ) {\n        this.parent.panels[this.parent.focusIndex].$node.classList.remove('active');\n        this.parent.panels[this.parent.focusIndex].$node.classList.remove('top');\n\n        Component.prototype.focus.call(this);\n\n        this.parent.focusIndex = this.index;\n        this.$node.classList.add('active');\n        this.$node.classList.add('top');\n\n        if ( this.index === 0 && this.parent.panels[1] && this.parent.panels[1].main ) {\n            this.parent.panels[1].$node.classList.remove('position-left');\n            this.parent.panels[1].$node.classList.add('position-right');\n\n            if ( this.parent.panels[2] ) {\n                this.parent.panels[2].$node.classList.remove('expand');\n            }\n\n            this.$node.classList.add('expand');\n        } else if ( this.index === 2 && this.parent.panels[1].main ) {\n            this.parent.panels[1].$node.classList.remove('position-right');\n            this.parent.panels[1].$node.classList.add('position-left');\n            this.parent.panels[0].$node.classList.remove('expand');\n            this.$node.classList.add('expand');\n        }\n    }\n};\n\n\n/**\n * Blur panel.\n */\nPanel.prototype.blur = function () {\n    this.parent.panels[this.parent.focusIndex].$node.classList.remove('active');\n    Component.prototype.blur.call(this);\n};\n\n\n// public\nmodule.exports = Panel;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n/**\n * Layout component implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array} [config.data] array of items to add to layout\n */\nfunction Layout ( config ) {\n    var self = this;\n\n    // sanitize\n    config = config || {};\n\n    /**\n     * Index of focused child component\n     * @type {number}\n     */\n    this.focusIndex = 0;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && config.className !== undefined && typeof config.className !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    //config.className = 'layout ' + (config.className || '');\n\n    /**\n     * Component data\n     * @type {Array}\n     */\n    this.data = [];\n\n    Component.call(this, config);\n\n    this.init(config);\n\n    // add listener to move focus between children\n    this.addListener('keydown', function ( event ) {\n        switch ( event.code ) {\n            case keys.right:\n                if ( self.children.length && self.focusIndex < self.children.length - 1 ) {\n                    self.children[++self.focusIndex].focus();\n                }\n                break;\n            case keys.left:\n                if ( self.children.length && self.focusIndex > 0 ) {\n                    self.children[--self.focusIndex].focus();\n                }\n                break;\n            case keys.back:\n                // focus parent focused item if parent is layout list\n                if ( self.parent ) {\n                    self.parent.focus();\n                    if ( self.$parentItem ) {\n                        self.parent.focusItem(self.$parentItem);\n                    }\n                }\n                break;\n        }\n    });\n}\n\n\nLayout.prototype = Object.create(Component.prototype);\nLayout.prototype.constructor = Layout;\n\n// set component name\nLayout.prototype.name = 'mag-component-layout';\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var index, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( index = 0; index < data.length; index++ ) {\n        // cell value\n        item = data[index];\n        // plain text\n        if ( typeof item === 'object' ) {\n            // HTML element or component\n            if ( item instanceof Component || item instanceof HTMLElement ) {\n                data[index] = {\n                    value: item,\n                    wrap: false\n                };\n            } else {\n                data[index].wrap = true;\n            }\n        } else {\n            // wrap with defaults\n            data[index] = {\n                value: data[index],\n                wrap: true\n            };\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nLayout.prototype.init = function ( config ) {\n    var self = this,\n        data = normalize(config.data),\n        item, $wrapper, index;\n\n    // clear element if reinit\n    while (this.$node.firstChild) {\n        this.$node.removeChild(this.$node.firstChild);\n    }\n\n    this.data = data;\n\n    /**\n     * @this Component\n     */\n    function componentClickHandler (  ) {\n        self.focusIndex = this.index;\n    }\n\n    for ( index = 0; index < data.length; index++ ) {\n        item = data[index];\n        // plain text\n        if ( typeof item.value === 'string' ) {\n            $wrapper = document.createElement('div');\n            $wrapper.textContent = item.value;\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n        } else if ( item.value instanceof HTMLElement ) {\n            // HTML Element\n\n            // if with wrapper\n            if ( item.wrap ) {\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value);\n                this.$node.appendChild($wrapper);\n            } else {\n                // without wrapper\n                this.$node.appendChild(item.value);\n            }\n        } else if ( item.value instanceof Component ) {\n            // component\n            // force propagate events\n            item.value.propagate = true;\n\n            // set index to current component\n            item.value.index = this.children.length;\n\n            // change layout focus index if click component\n            item.value.addListener('click', componentClickHandler);\n\n            // append component\n            if ( item.wrap ) {\n                // with wrapper\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value.$node);\n                this.$node.appendChild($wrapper);\n                this.children.push(item.value);\n                item.value.parent = this;\n            } else {\n                // without wrapper\n                this.add(item.value);\n            }\n        } else {\n            $wrapper = document.createElement('div');\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n        }\n    }\n};\n\n\nmodule.exports = Layout;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n/**\n * Magsdk panel set implementation\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {Array} [config.panels] array of panels to use\n * @param {Array} [config.focusIndex=0] focus panel index\n * @constructor\n * @extends Component\n */\nfunction PanelSet ( config ) {\n    var self = this,\n        index;\n\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.panels && !Array.isArray(config.panels) || !config.panels.length ) {\n            throw new Error(__filename + ': wrong config.panels type');\n        }\n    }\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'panelSet ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    this.panels = config.panels;\n\n    /**\n     * Index of current active panel\n     *\n     * @type {number}\n     */\n    this.focusIndex = 0;\n\n    // set special panels classes\n    if ( config.panels && !config.panels[0].main ) {\n        config.panels[0].$node.classList.add('left');\n        // small resolution special class\n        config.panels[0].$node.classList.add('expand');\n    }\n\n    if (  config.panels && config.panels[1] && config.panels[1].main ) {\n        // small resolution special class\n        config.panels[1].$node.classList.add('position-right');\n    }\n\n    if ( config.panels && config.panels[2] && config.panels[1].main ) {\n        config.panels[2].$node.classList.add('right');\n    }\n\n    // add panels\n    if ( config.panels ) {\n        this.add.apply(this, config.panels);\n    }\n\n    // panel keydown handler to set focus panel\n    function keydownHandler ( event ) {\n        switch ( event.code ) {\n            case keys.left:\n                if ( self.focusIndex > 0 ) {\n                    self.panels[self.focusIndex - 1].focus();\n                }\n                break;\n            case keys.right:\n                if ( self.focusIndex < self.panels.length - 1 ) {\n                    self.panels[self.focusIndex + 1].focus();\n                }\n                break;\n        }\n    }\n\n    // add special listener\n    for ( index = 0; index < this.panels.length; index++ ) {\n        this.panels[index].addListeners({\n            keydown: keydownHandler\n        });\n        // set panels indexes\n        this.panels[index].index = index;\n    }\n\n    /*if ( config.focusIndex && config.focusIndex < this.panels.length ) {\n     this.panels[config.focusIndex].focus();\n     } else {\n     if ( config.panels.length > 1 ) {\n     this.panels[1].focus();\n     } else {\n     this.panels[0].focus();\n     }\n     }*/\n}\n\nPanelSet.prototype = Object.create(Component.prototype);\nPanelSet.prototype.constructor = PanelSet;\n\n// set component name\nPanelSet.prototype.name = 'mag-component-panel-set';\n\n\n/**\n *\n */\nPanelSet.prototype.focus = function () {\n    Component.prototype.focus.call(this);\n    this.panels[this.focusIndex].focus();\n};\n\n/**\n *\n */\nPanelSet.prototype.blur = function () {\n    this.panels[this.focusIndex].blur();\n};\n\nmodule.exports = PanelSet;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n/**\n * Layout component implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array} [config.data] array of items to add to layout\n */\nfunction Layout ( config ) {\n    var self = this;\n\n    // sanitize\n    config = config || {};\n\n    /**\n     * Index of focused child component\n     * @type {number}\n     */\n    this.focusIndex = 0;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && config.className !== undefined && typeof config.className !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    //config.className = 'layout ' + (config.className || '');\n\n    /**\n     * Component data\n     * @type {Array}\n     */\n    this.data = [];\n\n    /**\n     *  Hash map of item links\n     */\n    this.links = {};\n\n    Component.call(this, config);\n\n    this.init(config);\n\n    // add listener to move focus between children\n    this.addListener('keydown', function ( event ) {\n        switch ( event.code ) {\n            case keys.right:\n                if ( self.children.length && self.focusIndex < self.children.length - 1 ) {\n                    self.children[++self.focusIndex].focus();\n                }\n                break;\n            case keys.left:\n                if ( self.children.length && self.focusIndex > 0 ) {\n                    self.children[--self.focusIndex].focus();\n                }\n                break;\n            case keys.back:\n                // focus parent focused item if parent is layout list\n                if ( self.parent ) {\n                    self.parent.focus();\n                    if ( self.$parentItem ) {\n                        self.parent.focusItem(self.$parentItem);\n                    }\n                }\n                break;\n        }\n    });\n}\n\n\nLayout.prototype = Object.create(Component.prototype);\nLayout.prototype.constructor = Layout;\n\n// set component name\nLayout.prototype.name = 'mag-component-layout';\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var index, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( index = 0; index < data.length; index++ ) {\n        // cell value\n        item = data[index];\n        // plain text\n        if ( typeof item === 'object' ) {\n            // HTML element or component\n            if ( item instanceof Component || item instanceof HTMLElement ) {\n                data[index] = {\n                    value: item,\n                    wrap: false\n                };\n            } else {\n                data[index].wrap = true;\n            }\n        } else {\n            // wrap with defaults\n            data[index] = {\n                value: data[index],\n                wrap: true\n            };\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nLayout.prototype.init = function ( config ) {\n    var self = this,\n        data = normalize(config.data),\n        item, $wrapper, index;\n\n    // clear element if reinit\n    while (this.$node.firstChild) {\n        this.$node.removeChild(this.$node.firstChild);\n    }\n\n    this.data = data;\n\n    /**\n     * @this Component\n     */\n    function componentClickHandler () {\n        self.focusIndex = this.index;\n    }\n\n    for ( index = 0; index < data.length; index++ ) {\n        item = data[index];\n        // plain text\n        if ( typeof item.value === 'string' ) {\n            $wrapper = document.createElement('div');\n            $wrapper.textContent = item.value;\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n            if ( item.name ) {\n                this.links[item.name] = $wrapper;\n            }\n        } else if ( item.value instanceof HTMLElement ) {\n            // HTML Element\n\n            // if with wrapper\n            if ( item.wrap ) {\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value);\n                this.$node.appendChild($wrapper);\n                if ( item.name ) {\n                    this.links[item.name] = $wrapper;\n                }\n            } else {\n                // without wrapper\n                this.$node.appendChild(item.value);\n                if ( item.name ) {\n                    this.links[item.name] = item.value;\n                }\n            }\n        } else if ( item.value instanceof Component ) {\n            // component\n            // force propagate events\n            item.value.propagate = true;\n\n            // set index to current component\n            item.value.index = this.children.length;\n\n            // change layout focus index if click component\n            item.value.addListener('click', componentClickHandler);\n\n            // append component\n            if ( item.wrap ) {\n                // with wrapper\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value.$node);\n                this.$node.appendChild($wrapper);\n                this.children.push(item.value);\n                item.value.parent = this;\n                if ( item.name ) {\n                    this.links[item.name] = $wrapper;\n                }\n            } else {\n                // without wrapper\n                this.add(item.value);\n                if ( item.name ) {\n                    this.links[item.name] = item.value;\n                }\n            }\n        } else {\n            $wrapper = document.createElement('div');\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n            if ( item.name ) {\n                this.links[item.name] = $wrapper;\n            }\n        }\n    }\n};\n\n\nmodule.exports = Layout;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-modal');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-modal';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base modal window implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n */\nfunction Modal ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body ) {\n            throw new Error(__filename + ': config.$body should not be provided manually');\n        }\n    }\n\n    // create centered div\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // add table-cell wrapper\n    this.$node.appendChild(document.createElement('div').appendChild(this.$body).parentNode);\n}\n\n\n// inheritance\nModal.prototype = Object.create(Component.prototype);\nModal.prototype.constructor = Modal;\n\n// set component name\nModal.prototype.name = 'spa-component-modal';\n\n\n// public\nmodule.exports = Modal;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar List = require('mag-component-list'),\n    CheckBox = require('spa-component-checkbox'),\n    counter = 0;\n\n\n/**\n * Base radio list implementation\n *\n * @constructor\n * @extends List\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n */\nfunction RadioList ( config ) {\n    var self = this;\n\n    /**\n     * Checkbox group name\n     *\n     * @type {string}\n     */\n    this.group = 'group ' +  counter++;\n\n    /**\n     * Link to checked item\n     *\n     * @type {Element}\n     */\n    this.$checkedData = null;\n\n    //config.className = 'radioList ' + (config.className || '');\n\n    List.call(this, config);\n\n    this.addListener('click:item', function ( event ) {\n        var item = event.$item;\n\n        item.checkBox.set(true);\n        item.state = item.checkBox.value;\n        item.data.state = item.checkBox.value;\n\n        if ( self.$checkedData !== item.data ) {\n            /**\n             * Select element from list.\n             *\n             * @event\n             *\n             * @type {Object}\n             * @property {Element} previous selected element\n             * @property {Element} current selected element\n             */\n            self.emit('select', {\n                $last: self.$checkedData,\n                $curr: item\n            });\n            if ( self.$checkedData ) { self.$checkedData.state = false; }\n            self.$checkedData = item.data;\n        }\n    });\n}\n\n\nRadioList.prototype = Object.create(List.prototype);\nRadioList.prototype.constructor = RadioList;\n\n// set component name\nRadioList.prototype.name = 'mag-component-radio-list';\n\nRadioList.prototype.group = 0;\n\n\n/**\n * Default render function\n *\n * @param {Element} $item in list\n * @param {Array} data to render layout element\n * @param {string} [data.title] title of checkbox\n * @param {boolean} [data.state] state of checkbox: checked or not\n * @param {string} [data.value] special value of item\n */\nRadioList.prototype.renderItemDefault = function ( $item, data ) {\n    var table = document.createElement('table'),\n        tr = document.createElement('tr'),\n        td = document.createElement('td'),\n        check = new CheckBox({\n            group: this.group\n        });\n\n    $item.innerHTML = '';\n\n    // set state with set function to prevent multiple true values\n    if ( data.state ) {\n        check.set(true);\n        // set link to checked item\n        this.$checkedData = data;\n    }\n\n    table.appendChild(tr);\n\n    td.appendChild(check.$node);\n    td.className = 'checkBoxWrapper';\n    tr.appendChild(td);\n\n    td = document.createElement('td');\n    td.className = 'title';\n    td.innerText = data.title || '';\n    tr.appendChild(td);\n\n    $item.checkBox = check;\n\n    $item.state = check.value;\n    $item.value = data.value;\n\n\n    $item.appendChild(table);\n};\n\n// RadioList.prototype.setData = function ( config ) {\n//     var i;\n//\n//     List.prototype.setData.call(this, config);\n//\n//     for ( i = 0; i < this.data.length; i++ ) {\n//         if ( this.data[i].state ) {\n//             this.$checkedData = this.data[i];\n//             break;\n//         }\n//     }\n//\n// };\n\nRadioList.prototype.renderItem = RadioList.prototype.renderItemDefault;\n\n\nmodule.exports = RadioList;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component'),\n    keys      = require('spa-keys'),\n    // set of groups with linked components;\n    groups    = {};\n\n\n/**\n * Base check box implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {boolean} [config.value=false] initial state\n * @param {string} [config.group] group name to work synchronously with other checkboxes\n *\n * @example\n * var CheckBox = require('stb/ui/check.box'),\n *     checkBox = new CheckBox({\n *         value: true,\n *         group: 'lang'\n *     });\n */\nfunction CheckBox ( config ) {\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.group && typeof config.group !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.group');\n        }\n    }\n\n    // set default className if classList property empty or undefined\n    //config.className = 'checkBox ' + (config.className || '');\n\n    // state\n    this.value = !!config.value;\n\n    // correct init styles\n    if ( this.value ) {\n        config.className += ' checked';\n    }\n\n    // group name to work synchronously with other checkboxes\n    this.group = null;\n\n    // apply hierarchy\n    if ( config.group ) {\n        // correct init styles\n        config.className += ' grouped';\n\n        // save\n        this.group = config.group;\n\n        // fill groups data\n        if ( groups[config.group] === undefined ) {\n            groups[config.group] = [this];\n        } else {\n            groups[config.group].push(this);\n        }\n    }\n\n    // parent constructor call\n    Component.call(this, config);\n}\n\n\n// inheritance\nCheckBox.prototype = Object.create(Component.prototype);\nCheckBox.prototype.constructor = CheckBox;\n\n// set component name\nCheckBox.prototype.name = 'spa-component-checkbox';\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nCheckBox.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse click events.\n     */\n    click: function () {\n        // invert state\n        this.set(!this.value);\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        // emulate click\n        if ( event.code === keys.enter ) {\n            this.set(!this.value);\n        }\n    }\n};\n\n\n/**\n * Set the given state.\n * Does nothing in case the value is already as necessary.\n *\n * @param {boolean} value new value to set\n * @return {boolean} operation status\n *\n * @fires module:\"stb/ui/check.box~CheckBox#change\"\n */\nCheckBox.prototype.set = function ( value ) {\n    var index, length;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n    }\n\n    if ( this.value !== value ) {\n        // going to be turned on and assigned to some group\n        if ( !this.value && this.group !== null ) {\n            // unset all checkboxes in this group\n            for ( index = 0, length = groups[this.group].length; index < length; index++ ) {\n                groups[this.group][index].set(false);\n            }\n        }\n\n        // set new value\n        this.value = !this.value;\n\n        // set visible changes\n        this.$node.classList.toggle('checked');\n\n        // there are some listeners\n        if ( this.events['change'] ) {\n            /**\n             * Update progress value.\n             *\n             * @event module:stb/ui/check.box~CheckBox#change\n             *\n             * @type {Object}\n             * @property {boolean} value current check state\n             */\n            this.emit('change', {value: this.value});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = CheckBox;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-scrollbar');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-scrollbar';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base scroll bar implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {number} [config.value=0] initial thumb position\n * @param {number} [config.realSize=100] actual scroll size\n * @param {number} [config.viewSize=10] visible area size\n * @param {number} [config.type] direction\n *\n * @example\n * var ScrollBar = require('stb/ui/scroll.bar'),\n *     scrollBar = new ScrollBar({\n *         viewSize: 5,\n *         realSize: 25,\n *         events: {\n *             done: function () {\n *                 debug.log('ScrollBar: done');\n *             },\n *             change: function ( data ) {\n *                 debug.log('ScrollBar: change to ' + data.curr + ' from ' + data.prev);\n *             }\n *         }\n *     });\n */\nfunction ScrollBar ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Visible area size.\n     *\n     * @type {number}\n     */\n    this.viewSize = 10;\n\n    /**\n     * Scroll area actual height or width (if scroll is horizontal).\n     *\n     * @type {number}\n     */\n    this.realSize = 100;\n\n    /**\n     * Scroll thumb position.\n     *\n     * @type {number}\n     */\n    this.value = 0;\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Geometry of the scroll thumb element.\n     *\n     * @type {ClientRect}\n     */\n    this.thumbRect = null;\n\n    /**\n     * Geometry of the scroll track element.\n     *\n     * @type {ClientRect}\n     */\n    this.trackRect = null;\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'scrollBar ' + (config.className || '');\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // insert thumb line\n    this.$thumb = this.$body.appendChild(document.createElement('div'));\n\n    // correct CSS class name\n    this.$thumb.className = 'thumb';\n\n    // component setup\n    this.init(config);\n}\n\n\n// inheritance\nScrollBar.prototype = Object.create(Component.prototype);\nScrollBar.prototype.constructor = ScrollBar;\n\n// set component name\nScrollBar.prototype.name = 'spa-component-scrollbar';\n\nScrollBar.prototype.TYPE_VERTICAL   = 1;\nScrollBar.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Init or re-init realSize/viewSize/value parameters.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nScrollBar.prototype.init = function ( config ) {\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // set actual scroll size\n    if ( config.realSize !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.realSize) !== config.realSize ) {\n                throw new Error(__filename + ': config.realSize value must be a number');\n            }\n        }\n\n        // apply\n        this.realSize = config.realSize;\n    }\n\n    // set visible area size\n    if ( config.viewSize !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.viewSize) !== config.viewSize ) {\n                throw new Error(__filename + ': config.viewSize value must be a number');\n            }\n            if ( config.viewSize < 0 ) {\n                throw new Error(__filename + ': config.viewSize value must be greater than 0');\n            }\n        }\n\n        // apply\n        this.viewSize = config.viewSize;\n    }\n\n    // show or hide thumb\n    if ( this.viewSize >= this.realSize ) {\n        this.$thumb.classList.add('hidden');\n    } else {\n        this.$thumb.classList.remove('hidden');\n    }\n\n    // set thumb position\n    if ( config.value !== undefined ) {\n        // apply\n        this.scrollTo(config.value);\n    }\n\n    // set thumb size\n    if ( this.type === this.TYPE_VERTICAL ) {\n        this.$thumb.style.height = (this.viewSize / this.realSize * 100) + '%';\n    } else {\n        this.$thumb.style.width = (this.viewSize / this.realSize * 100) + '%';\n    }\n\n    // geometry\n    this.thumbRect = this.$thumb.getBoundingClientRect();\n    this.trackRect = this.$node.getBoundingClientRect();\n};\n\n\n/**\n * Set position of the given value.\n * Does nothing in case when scroll is in the end and passed value is more than scroll bar length.\n *\n * @param {number} value new value to set\n * @return {boolean} operation result\n *\n * @fires module:stb/ui/scroll.bar~ScrollBar#done\n * @fires module:stb/ui/scroll.bar~ScrollBar#change\n */\nScrollBar.prototype.scrollTo = function ( value ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(value) !== value ) {\n            throw new Error(__filename + ': value must be a number');\n        }\n        if ( this.realSize > this.viewSize && value > this.realSize - this.viewSize ) {\n            throw new Error(__filename + ': value is greater than this.realSize-this.viewSize');\n        }\n        if ( value < 0 ) {\n            throw new Error(__filename + ': value is less then 0');\n        }\n    }\n\n    // value has changed\n    if ( this.value !== value ) {\n        // track and thumb geometry was not set\n        if ( this.thumbRect.height === 0 || this.thumbRect.width === 0 ) {\n            // apply\n            this.trackRect = this.$node.getBoundingClientRect();\n            this.thumbRect = this.$thumb.getBoundingClientRect();\n        }\n\n        // set scroll bar width\n        if ( this.type === this.TYPE_VERTICAL ) {\n            this.$thumb.style.marginTop = ((this.trackRect.height - this.thumbRect.height) * value / (this.realSize - this.viewSize)) + 'px';\n        } else {\n            this.$thumb.style.marginLeft = ((this.trackRect.width - this.thumbRect.width) * value / (this.realSize - this.viewSize)) + 'px';\n        }\n\n        // there are some listeners\n        if ( this.events['change'] ) {\n            /**\n             * Update scroll value.\n             *\n             * @event module:stb/ui/scroll.bar~ScrollBar#change\n             *\n             * @type {Object}\n             * @property {number} prev old/previous scroll value\n             * @property {number} curr new/current scroll value\n             */\n            this.emit('change', {curr: value, prev: this.value});\n        }\n\n        // is it the end?\n        if ( value >= this.realSize ) {\n            value = this.realSize;\n\n            // there are some listeners\n            if ( this.events['done'] ) {\n                /**\n                 * Set scroll to its maximum value.\n                 *\n                 * @event module:stb/ui/scroll.bar~ScrollBar#done\n                 */\n                this.emit('done');\n            }\n        }\n\n        // set new value\n        this.value = value;\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = ScrollBar;\n","/**\n * @license The MIT License (MIT)\n * @copyright Dmitry Fedotov <bas.jsdev@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys'),\n    classes   = {};\n\n\n// initialize classes\nclasses[keys.f1] = 'theme-icon-rc-f1';\nclasses[keys.f2] = 'theme-icon-rc-f2';\nclasses[keys.f3] = 'theme-icon-rc-f3';\nclasses[keys.f4] = 'theme-icon-rc-f4';\nclasses[keys.menu] = 'theme-icon-rc-menu';\nclasses[keys.ok] = 'theme-icon-rc-ok';\nclasses[keys.info] = 'theme-icon-rc-info';\nclasses[keys.playPause] = 'theme-icon-rc-play-pause';\nclasses[keys.back] = 'theme-icon-rc-back';\nclasses[keys.exit] = 'theme-icon-rc-home';\nclasses[keys.keyboard] = 'theme-icon-rc-vk';\nclasses[keys.refresh] = 'theme-icon-rc-refresh';\nclasses[keys.frame] = 'theme-icon-rc-aspect';\n\n/**\n * Footer.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}  config={} init parameters\n * @param {Object}  config.parent parent page\n * @param {boolean} [config.visible] visibility flag\n * @param {Object}  [config.data] footer buttons config\n * @param {Object}  [config.data.left] left button config\n * @param {Object}  [config.data.middle] middle buttons config\n * @param {Object}  [config.data.right] right button config\n * @param {number}  [config.data.middle.code] button key code\n * @param {Object}  [config.data.middle.title] button title\n * @param {Object}  [config.data.middle.action] button press (click) action\n *\n * @example\n * page.footer = new Footer({\n *     parent: page,\n *     data: {\n *         left: {\n *             code: keys.menu, action: function () {}\n *         },\n *         middle: [\n *             {code: 55, action: function () {}},\n *             {code: keys.f1, title: 'stop', action: function () {}},\n *             {code: 9000, className: 'customIcon', title: 'start', action: function () {}},\n *             {code: keys.f4, title: 'end', action: function () {}}\n *         ],\n *         right: {\n *             code: 65, action: function () {}\n *         }\n *     }\n * });\n */\n\n/* eslint max-statements: 0 */\nfunction Footer ( config ) {\n    var currentTab = 0,\n        self = this;\n\n    // sanitize\n    config = config || {};\n    // can't accept focus\n    config.focusable = false;\n    // hide by default\n    config.visible = config.visible || false;\n    // create centered div\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    this.tabs = [\n        {codes: {}},\n        {codes: {}},\n        {codes: {}},\n        {codes: {}}\n    ];\n\n    this.tab = 0;\n\n    this.$table = this.$node.appendChild(document.createElement('table'));\n\n    this.$table.insertRow();\n    this.$table.rows[0].insertCell(-1);\n    this.$left = this.$table.rows[0].cells[0].appendChild(document.createElement('div'));\n    this.$left.className = 'theme-icon';\n\n    this.$table.rows[0].insertCell(-1);\n    this.$table.rows[0].cells[1].className = 'central';\n\n\n    this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.className = 'wrapper hidden';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n\n    ++currentTab;\n    this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.className = 'wrapper hidden';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n\n    ++currentTab;\n    this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.className = 'wrapper hidden';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n\n    ++currentTab;\n    this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.className = 'wrapper hidden';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n\n    this.$table.rows[0].insertCell(-1);\n    this.$right = this.$table.rows[0].cells[2].appendChild(document.createElement('div'));\n    this.$right.className = 'theme-icon';\n\n    this.init(config.data);\n\n    this.parent.addListener('keydown', function ( event ) {\n        var currTab = self.tabs[self.tab];\n\n        if ( self.visible ) {\n            if ( currTab.codes[event.code] && typeof currTab.codes[event.code].action === 'function' ) {\n                currTab.codes[event.code].action();\n            }\n        }\n    });\n}\n\n\n// inheritance\nFooter.prototype = Object.create(Component.prototype);\nFooter.prototype.constructor = Footer;\n\n// set component name\nFooter.prototype.name = 'mag-component-footer';\n\n\n/**\n * Redefine buttons\n *\n * @param {Object} [config] footer buttons config\n * @param {Object} [config.left] left button config\n * @param {number} [config.left.code] left button key code\n * @param {boolean} [config.left.disabled] left button is disabled\n * @param {Object} [config.left.action] left button press (click) action\n * @param {Object} [config.middle] middle buttons config\n * @param {Object} [config.right] right button config\n * @param {number} [config.right.code] right button key code\n * @param {boolean} [config.right.disabled] right button is disabled\n * @param {Object} [config.right.action] right button press (click) action\n * @param {number} [config.middle.code] button key code\n * @param {Object} [config.middle.title] button title\n * @param {boolean} [config.middle.disabled] button is disabled\n * @param {Object} [config.middle.action] button press (click) action\n *\n * page.Footer.init({\n *     left: {\n *         code: keys.menu, action: function () {}\n *     },\n *     middle: [\n *         {code: 55, action: function () {}},\n *         {code: keys.f1, title: 'stop', action: function () {}},\n *         {code: 9000, className: 'customIcon', title: 'start', action: function () {}},\n *         {code: keys.f4, title: 'end', disabled: true}\n *     ],\n *     right: {\n *         code: 65, action: function () {}\n *     }\n * });\n *\n */\nFooter.prototype.init = function ( config ) {\n    var index, $tab, $tabChildren;\n\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( config.middle && config.middle.length > 4 ) {\n            throw new Error(__filename + ': only 4 buttons allowed in footer');\n        }\n        if ( config.middle && Array.isArray(config.middle) ) {\n            for ( index = 0; index < config.middle.length; index++ ) {\n                if ( typeof config.middle[index].action !== 'function' && !config.middle[index].disabled ) {\n                    throw new Error(__filename + ': action must be a function');\n                }\n                ++index;\n            }\n        }\n        if ( config.left && typeof config.left.action !== 'function' && !config.left.disabled ) {\n            throw new Error(__filename + ': action must be a function');\n        }\n        if ( config.right && typeof config.right.action !== 'function' && !config.right.disabled ) {\n            throw new Error(__filename + ': action must be a function');\n        }\n    }\n\n    // hide old tab\n    this.tabs[this.tab].$body.classList.add('hidden');\n    this.tab = config.middle && config.middle.length ? config.middle.length - 1 : 0;\n    // current tab shortcut\n    $tab = this.tabs[this.tab];\n    // reset all actions\n    $tab.codes = {};\n\n    // left button\n    if ( config.left ) {\n        this.$left.className = config.left.className || ('theme-icon ' + (classes[config.left.code] || 'theme-icon-warning'));\n        if ( config.left.disabled ) {\n            this.$left.classList.add('disabled');\n        } else {\n            $tab.codes[config.left.code] = {action: config.left.action};\n            this.$left.style.visibility = 'inherit';\n            this.$left.onclick = function () {\n                if ( typeof config.left.action === 'function' ) {\n                    config.left.action();\n                }\n            };\n        }\n    } else if ( this.$left.style.visibility !== 'hidden' ) {\n        this.$left.style.visibility = 'hidden';\n    }\n\n    // right button\n    if ( config.right ) {\n        this.$right.className = config.right.className || ('theme-icon ' + (classes[config.right.code] || 'theme-icon-warning'));\n        if ( config.right.disabled ) {\n            this.$right.classList.add('disabled');\n        } else {\n            $tab.codes[config.right.code] = {action: config.right.action};\n            this.$right.style.visibility = 'inherit';\n            this.$right.onclick = function () {\n                if ( typeof config.right.action === 'function' ) {\n                    config.right.action();\n                }\n            };\n        }\n    } else if ( this.$right.style.visibility !== 'hidden' ) {\n        this.$right.style.visibility = 'hidden';\n    }\n\n    function addClick ( ind ) {\n        return function () {\n            if ( typeof config.middle[ind].action === 'function' ) {\n                config.middle[ind].action();\n            }\n        };\n    }\n\n    // middle buttons\n    if ( config.middle && config.middle.length ) {\n        for ( index = 0; index < config.middle.length; index++ ) {\n            $tab.codes[config.middle[index].code] = {action: config.middle[index].action};\n            if ( config.middle[index].disabled ) {\n                $tab.$body.children[index].classList.add('disabled');\n            } else {\n                $tab.$body.children[index].classList.remove('disabled');\n                $tab.$body.children[index].onclick = addClick(index);\n            }\n            // shortcut\n            $tabChildren = $tab.$body.children[index].children;\n            $tabChildren[0].className = 'iconImg ' +\n                (config.middle[index].className || ('theme-icon ' + (classes[config.middle[index].code] || 'theme-icon-warning')));\n\n            $tabChildren[1].innerText = config.middle[index].title || '';\n        }\n        $tab.$body.classList.remove('hidden');\n    }\n};\n\n\n// public\nmodule.exports = Footer;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component'),\n    keys      = require('stb-keys');\n\n\n/**\n * Scroll area implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} config object\n * @param {number} [config.step] step in % of screen height to scroll area\n */\nfunction ScrollArea ( config ) {\n\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    /**\n     * Step to scroll area in % of screen height\n     *\n     * @type {number}\n     */\n    this.step = 5;\n\n    /**\n     * Real height of scroll area\n     *\n     * @type {number}\n     */\n    this.realHeight = 0;\n\n    /**\n     * Visible height of area\n     *\n     * @type {number}\n     */\n    this.viewHeight = 0;\n\n    /**\n     * Top position of scroll container\n     *\n     * @type {number}\n     */\n    this.topPosition = 0;\n\n    /**\n     * Associated ScrollBar component link.\n     *\n     * @type {ScrollBar}\n     */\n    this.scroll = null;\n\n    Component.call(this, config);\n\n    this.$node.appendChild(this.$body);\n\n    // component setup\n    this.init(config);\n}\n\n\nScrollArea.prototype = Object.create(Component.prototype);\nScrollArea.prototype.constructor = ScrollArea;\n\n// set component name\nScrollArea.prototype.name = 'mag-component-scroll-area';\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nScrollArea.prototype.defaultEvents = {\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n                this.move(event.code);\n                break;\n        }\n    },\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n    }\n};\n\n\n/**\n * Attempt to go beyond the edge of the list.\n *\n * @event\n *\n * @type {Object}\n * @property {number} direction key code initiator of movement\n */\n\n\n/**\n * Move ScrollArea content\n *\n * @param {number} direction to move\n */\nScrollArea.prototype.move = function ( direction ) {\n    var height = screen.height,\n        delta  = this.viewHeight - this.realHeight;\n\n    // run logic only if it's reasonable to navigate\n    if ( delta < 0 ) {\n        switch ( direction ) {\n            case keys.down:\n                if ( this.topPosition - this.step * height / 100 < delta ) {\n                    this.scroll.scrollTo(-delta);\n                    this.$body.style.top = delta + 'px';\n                    this.emit('overflow', {direction: direction});\n\n                    return;\n                }\n\n                this.topPosition -= Math.ceil(this.step * height / 100);\n\n                if ( this.scroll ) {\n                    this.scroll.scrollTo(-this.topPosition);\n                }\n                this.$body.style.top = this.topPosition + 'px';\n                break;\n            case keys.up:\n                if ( this.topPosition + this.step * height / 100 > 0 ) {\n                    this.scroll.scrollTo(0);\n                    this.$body.style.top = '0px';\n                    this.emit('overflow', {direction: direction});\n\n                    return;\n                }\n                this.topPosition += Math.ceil(this.step * height / 100);\n\n                if ( this.scroll ) {\n                    this.scroll.scrollTo(-this.topPosition);\n                }\n                this.$body.style.top = this.topPosition + 'px';\n                break;\n        }\n    } else {\n        this.emit('overflow', {direction: direction});\n    }\n};\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nScrollArea.prototype.init = function ( config ) {\n\n    config = config || {};\n\n    this.realHeight = this.$body.offsetHeight;\n    this.viewHeight = this.$node.offsetHeight;\n    this.topPosition = 0;\n    this.$body.style.top = this.topPosition + 'px';\n\n    if ( config.scroll ) {\n        this.scroll = config.scroll;\n    }\n\n    if ( config.step ) {\n        this.step = config.step;\n    }\n\n    if ( this.scroll ) {\n        this.scroll.init({\n            realSize: this.realHeight,\n            viewSize: this.viewHeight,\n            value: this.topPosition\n        });\n    }\n};\n\nmodule.exports = ScrollArea;\n","/**\n * HTML elements low-level handling.\n *\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n/* eslint no-unused-vars: 0 */\n\n/**\n * DOM manipulation module\n */\nvar dom = {};\n\n\n/**\n * Create a new HTML element.\n *\n * @param {string} tagName mandatory tag name\n * @param {Object|null} [attrList] element attributes\n * @param {...*} [content] element content (primitive value/values or other nodes)\n * @return {Node|null} HTML element or null on failure\n *\n * @example\n * dom.tag('table');\n * dom.tag('div', {}, 'some text');\n * dom.tag('div', {className:'top'}, dom.tag('span'), dom.tag('br'));\n * dom.tag('link', {rel:'stylesheet', type:'text/css', href:'http://some.url/'});\n */\ndom.tag = function ( tagName, attrList, content ) {\n    var node = null,\n        index, name;\n\n    // minimal param is given\n    if ( tagName ) {\n        // empty element\n        node = document.createElement(tagName);\n\n        // optional attribute list is given\n        if ( attrList && typeof attrList === 'object' ) {\n            for ( name in attrList ) {\n                // extend a new node with the given attributes\n                node[name] = attrList[name];\n            }\n        }\n\n        // content (arguments except the first two)\n        for ( index = 2; index < arguments.length; index++ ) {\n            // some data is given\n            if ( arguments[index] ) {\n                // regular HTML tag or plain data\n                node.appendChild(\n                    typeof arguments[index] === 'object' ? arguments[index] : document.createTextNode(arguments[index])\n                );\n            }\n        }\n\n    }\n\n    return node;\n};\n\n\n/**\n * Create a new DocumentFragment filled with the given non-empty elements if any.\n *\n * @param {...*} [node] fragment content (primitive value/values or other nodes)\n * @return {DocumentFragment} new placeholder\n *\n * @example\n * // gives an empty fragment element\n * dom.fragment();\n * // gives a fragment element with 3 div element inside\n * dom.fragment(dom.tag('div'), div2, div3);\n * // mixed case\n * dom.fragment('some text', 123, div3);\n */\ndom.fragment = function ( node ) {\n    // prepare placeholder\n    var fragment = document.createDocumentFragment(),\n        index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        node = arguments[index];\n        // some data is given\n        if ( node ) {\n            // regular HTML tag or plain data\n            fragment.appendChild(typeof node === 'object' ? node : document.createTextNode(node));\n        }\n    }\n\n    return fragment;\n};\n\n\n/**\n * Add the given non-empty data (HTML element/text or list) to the destination element.\n *\n * @param {Node} tagDst element to receive children\n * @param {...*} [content] element content (primitive value/values or other nodes)\n * @return {Node|null} the destination element - owner of all added data\n *\n * @example\n * // simple text value\n * add(some_div, 'Hello world');\n * // single DOM Element\n * add(some_div, some_other_div);\n * // DOM Element list\n * add(some_div, div1, div2, div3);\n * // mixed case\n * add(some_div, div1, 'hello', 'world');\n */\ndom.add = function ( tagDst, content ) {\n    var index;\n\n    // valid HTML tag as the destination\n    if ( tagDst instanceof Node ) {\n        // append all except the first one\n        for ( index = 1; index < arguments.length; index++ ) {\n            // some data is given\n            if ( arguments[index] ) {\n                // regular HTML tag or plain data\n                tagDst.appendChild(\n                    typeof arguments[index] === 'object' ? arguments[index] : document.createTextNode(arguments[index])\n                );\n            }\n        }\n\n        return tagDst;\n    }\n\n    return null;\n};\n\n\n/**\n * Remove the given elements from the DOM.\n *\n * @param {...Node} [nodes] element to be removed\n * @return {boolean} operation status (true - all given elements removed)\n *\n * @example\n * dom.remove(document.querySelector('div.test'));\n * dom.remove(div1, div2, div3);\n */\ndom.remove = function ( nodes ) {\n    // amount of successfully removed nodes\n    var count = 0,\n        index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        // valid non-empty tag\n        if ( arguments[index] && arguments[index].parentNode ) {\n            if ( arguments[index].parentNode.removeChild(arguments[index]) === arguments[index] ) {\n                count++;\n            }\n        }\n    }\n\n    return arguments.length > 0 && count === arguments.length;\n};\n\n\ndom.clear = function ( node ) {\n    while ( node.lastChild ) {\n        node.removeChild(node.lastChild);\n    }\n};\n\n\n// public\nmodule.exports = dom;\n","'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    config = require('../config'),\n    random = require('./utils/random'),\n    degrToStr = require('./utils/degree.2.string'),\n    weatherIcons = require('./weather.icons'),\n    fullMonthNames = [\n        gettext('January'),\n        gettext('February'),\n        gettext('March'),\n        gettext('April'),\n        gettext('May'),\n        gettext('June'),\n        gettext('July'),\n        gettext('August'),\n        gettext('September'),\n        gettext('October'),\n        gettext('November'),\n        gettext('December')\n    ],\n    fullDaysOfWeek = [\n        gettext('Sunday'),\n        gettext('Monday'),\n        gettext('Tuesday'),\n        gettext('Wednesday'),\n        gettext('Thursday'),\n        gettext('Friday'),\n        gettext('Saturday')\n    ],\n\n    // randomize time weather update\n    REQUEST_TIMEOUT_TIME = 60 * random(10, 50),\n    UPDATE_TIMEOUT_TIME = 1000 * 60 * random(120, 360),\n\n    hash = {\n        data: null,\n        url: config.weatherServerURL + 'getCheck.php?id=' + core.environment.Image_Desc,\n        updateTimeout: -1,\n        update: function ( callback ) {\n            var self = this,\n                client = new XMLHttpRequest();\n\n            client.open('GET', this.url);\n\n            debug.log('GET HASH: ' + this.url, 'red');\n\n            client.onload = function () {\n                var data = null;\n\n                try {\n                    data = JSON.parse(this.responseText);\n                } catch ( error ) {\n                    debug.info(error);\n                }\n\n                if ( this.status === 200 && data && data.code === 0 ) {\n                    self.data = data.data;\n                    if ( callback ) {\n                        callback();\n                    }\n                } else {\n                    self.updateTimeout = setTimeout(function () {\n                        self.update(callback);\n                    }, REQUEST_TIMEOUT_TIME);\n                }\n            };\n            client.timeout = 10;\n            client.ontimeout = client.onerror = function () {\n                self.updateTimeout = setTimeout(function () {\n                    self.update(callback);\n                }, REQUEST_TIMEOUT_TIME);\n            };\n            client.send(null);\n        }\n    };\n\n\nfunction Weather ( constructorConfig, callback ) {\n    this.forecast = {};\n    this.location = constructorConfig.location || null;\n    this.updateTimeout = -1;\n    this.badRequests = 0;\n\n    // parent constructor call\n    Emitter.call(this);\n\n    // parent constructor call\n    if ( constructorConfig.events ) {\n        this.addListeners(constructorConfig.events);\n    }\n\n    if ( this.location ) {\n        this.getForecast(this.location, callback);\n    }\n}\n\n// inheritance\nWeather.prototype = Object.create(Emitter.prototype);\nWeather.prototype.constructor = Weather;\n\n// weather service response codes\nWeather.prototype.RESPONSE_CODE_OK = 0;\nWeather.prototype.RESPONSE_CODE_CODE_NO_DATA = 1;\nWeather.prototype.RESPONSE_CODE_STALE_DATA = 2;\nWeather.prototype.RESPONSE_CODE_BAD_PARAMS = 3;\nWeather.prototype.RESPONSE_CODE_BAD_HASH = 5;\n\n\nWeather.prototype.normalizeForecast = function ( data ) {\n    var forecast = {\n            current: {\n                dayName: '',\n                date: '',\n                indicator: '',\n                description: '',\n                temperatureDay: '',\n                temperatureNight: '',\n                temperature: '',\n                humidity: '',\n                windSpeed: ''\n            },\n            days: [\n                {\n                    dayName: '',\n                    date: '',\n                    indicator: '',\n                    description: '',\n                    temperatureDay: '',\n                    temperatureNight: ''\n                },\n                {\n                    dayName: '',\n                    date: '',\n                    indicator: '',\n                    description: '',\n                    temperatureDay: '',\n                    temperatureNight: ''\n                },\n                {\n                    dayName: '',\n                    date: '',\n                    indicator: '',\n                    description: '',\n                    temperatureDay: '',\n                    temperatureNight: ''\n                }\n            ]\n        },\n        index, day, date;\n\n    day = data.days[0];\n\n    forecast.current.indicator = 'img/' + screen.height + '/' + weatherIcons[day.id].icon + '.active.png';\n    forecast.current.description = weatherIcons[day.id].desc;\n    forecast.current.windDirection = degrToStr(data.current.wd);\n    forecast.current.temperature = data.current.tcc;\n    forecast.current.temperatureDay = day.thc;\n    forecast.current.temperatureNight = day.tlc;\n    forecast.current.windSpeed = data.current.wsk.toFixed(1);\n    forecast.current.humidity = data.current.h + '%';\n    date = day.d.split('-');\n    day = new Date(date[0], date[1] - 1, date[2]);\n    forecast.current.dayName = fullDaysOfWeek[day.getDay()];\n    forecast.current.date = date[2] + ' ' + fullMonthNames[date[1] - 1];\n\n    for ( index = 1; index < 4; ++index ) {\n        day = data.days[index];\n        forecast.days[index - 1].dayName = '';\n        forecast.days[index - 1].date = '';\n        forecast.days[index - 1].indicator = 'img/' + screen.height + '/' + weatherIcons[day.id].icon + '.normal.png';\n        forecast.days[index - 1].description = weatherIcons[day.id].desc;\n        forecast.days[index - 1].temperatureDay = day.thc;\n        forecast.days[index - 1].temperatureNight = day.tlc;\n\n        date = day.d.split('-');\n        day = new Date(date[0], date[1] - 1, date[2]);\n        forecast.days[index - 1].dayName = fullDaysOfWeek[day.getDay()];\n        forecast.days[index - 1].date = date[2] + ' ' + fullMonthNames[date[1] - 1];\n    }\n\n    return forecast;\n};\n\n\n/**\n * Get forecast information with given location and callback for load event.\n *\n * @param {Object} location - location object\n * @param {Function} callback - callback with actions after forecast is loaded\n */\nWeather.prototype.getForecast = function ( location, callback ) {\n    var self = this,\n        ask = 'lat=' + location.lat + '&lon=' + location.lon,\n        hashed = core.tools.hash((Math.round(location.lat * 100) / 100) + ',' + (Math.round(location.lon * 100) / 100), hash.data),\n        url = config.weatherServerURL + 'getData.php?' + ask /*+ '&langid=' + config.langv[core.environment.language]*/ + '&hk=' + hashed,\n        client = new XMLHttpRequest();\n\n    client.open('GET', url);\n\n    debug.log('REQUEST FORECAST: ' + url, 'cyan');\n\n    clearTimeout(this.updateTimeout);\n\n    client.onload = function () {\n        var response;\n\n        try {\n            response = JSON.parse(this.responseText);\n        } catch ( error ) {\n            debug.info(error);\n            ++self.badRequests;\n            self.updateTimeout = setTimeout(function () {\n                hash.update(function () {\n                    self.getForecast(location, callback);\n                });\n            }, REQUEST_TIMEOUT_TIME);\n            response = {code: -1};\n        }\n\n        switch ( response.code ) {\n            case self.RESPONSE_CODE_OK:\n                self.forecast = response.data;\n\n                if ( self.forecast.current ) {\n                    self.emit('change', self.forecast);\n\n                    // Invoke callback on success.\n                    callback(self.normalizeForecast(self.forecast));\n                }\n\n                self.updateTimeout = setTimeout(function () {\n                    self.getForecast(location, callback);\n                }, UPDATE_TIMEOUT_TIME);\n                break;\n\n            case self.RESPONSE_CODE_CODE_NO_DATA:\n            case self.RESPONSE_CODE_STALE_DATA:\n            case self.RESPONSE_CODE_BAD_HASH:\n            case self.RESPONSE_CODE_BAD_PARAMS:\n            default:\n                self.emit('error', response.code);\n                self.updateTimeout = setTimeout(function () {\n                    hash.update(function () {\n                        self.getForecast(location, callback);\n                    });\n                }, REQUEST_TIMEOUT_TIME);\n                break;\n        }\n    };\n\n    client.send(null);\n};\n\n\nmodule.exports = Weather;\n","'use strict';\n\nmodule.exports = function random ( min, max ) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n","'use strict';\n\nvar north = gettext('N'),\n    ne    = gettext('NE'),\n    east  = gettext('E'),\n    se    = gettext('SE'),\n    south = gettext('S'),\n    sw    = gettext('SW'),\n    west  = gettext('W'),\n    nw    = gettext('NW');\n\n\nmodule.exports = function degree2String ( degree ) {\n    if ( degree < 22.5 ) {\n        return north;\n    }\n    if ( degree < 67.5 ) {\n        return ne;\n    }\n    if ( degree < 112.5 ) {\n        return east;\n    }\n    if ( degree < 157.5 ) {\n        return se;\n    }\n    if ( degree < 202.5 ) {\n        return south;\n    }\n    if ( degree < 247.5 ) {\n        return sw;\n    }\n    if ( degree < 292.5 ) {\n        return west;\n    }\n    if ( degree < 337.5 ) {\n        return nw;\n    }\n\n    return north;\n};\n","'use strict';\n\nmodule.exports = {\n    113: {\n        icon: 'sunny',\n        desc: gettext('Clear/Sunny')\n    },\n    116: {\n        icon: 'partly.cloudy',\n        desc: gettext('Partly cloudy')\n    },\n    119: {\n        icon: 'partly.cloudy',\n        desc: gettext('Partly cloudy')\n    },\n    122: {\n        icon: 'overcast',\n        desc: gettext('Overcast')\n    },\n    143: {\n        icon: 'fog',\n        desc: gettext('Mist')\n    },\n    176: {\n        icon: 'rain',\n        desc: gettext('Patchy rain nearby')\n    },\n    179: {\n        icon: 'snow',\n        desc: gettext('Patchy snow nearby')\n    },\n    182: {\n        icon: 'sleet',\n        desc: gettext('Patchy sleet nearby')\n    },\n    185: {\n        icon: 'drizzle',\n        desc: gettext('Patchy freezing drizzle nearby')\n    },\n    200: {\n        icon: 'storm',\n        desc: gettext('Thundery outbreaks in nearby')\n    },\n    227: {\n        icon: 'blizzard',\n        desc: gettext('Blowing snow')\n    },\n    230: {\n        icon: 'blizzard',\n        desc: gettext('Blizzard')\n    },\n    248: {\n        icon: 'fog',\n        desc: gettext('Fog')\n    },\n    260: {\n        icon: 'fog',\n        desc: gettext('Freezing fog')\n    },\n    263: {\n        icon: 'drizzle',\n        desc: gettext('Patchy light drizzle')\n    },\n    266: {\n        icon: 'drizzle',\n        desc: gettext('Light drizzle')\n    },\n    281: {\n        icon: 'drizzle',\n        desc: gettext('Freezing drizzle')\n    },\n    284: {\n        icon: 'drizzle',\n        desc: gettext('Heavy freezing drizzle')\n    },\n    293: {\n        icon: 'rain',\n        desc: gettext('Patchy light rain')\n    },\n    296: {\n        icon: 'rain',\n        desc: gettext('Light rain')\n    },\n    299: {\n        icon: 'rain',\n        desc: gettext('Moderate rain at times')\n    },\n    302: {\n        icon: 'rain',\n        desc: gettext('Moderate rain')\n    },\n    305: {\n        icon: 'shower',\n        desc: gettext('Heavy rain at times')\n    },\n    308: {\n        icon: 'shower',\n        desc: gettext('Heavy rain')\n    },\n    311: {\n        icon: 'rain',\n        desc: gettext('Light freezing rain')\n    },\n    314: {\n        icon: 'shower',\n        desc: gettext('Moderate or Heavy freezing rain')\n    },\n    317: {\n        icon: 'sleet',\n        desc: gettext('Light sleet')\n    },\n    320: {\n        icon: 'sleet',\n        desc: gettext('Moderate or heavy sleet')\n    },\n    323: {\n        icon: 'snow',\n        desc: gettext('Patchy light snow')\n    },\n    326: {\n        icon: 'snow',\n        desc: gettext('Light snow')\n    },\n    329: {\n        icon: 'snow',\n        desc: gettext('Patchy moderate snow')\n    },\n    332: {\n        icon: 'snow',\n        desc: gettext('Moderate snow')\n    },\n    335: {\n        icon: 'snowfall',\n        desc: gettext('Patchy heavy snow')\n    },\n    338: {\n        icon: 'snowfall',\n        desc: gettext('Heavy snow')\n    },\n    350: {\n        icon: 'pellets',\n        desc: gettext('Ice pellets')\n    },\n    353: {\n        icon: 'rain',\n        desc: gettext('Light rain shower')\n    },\n    356: {\n        icon: 'shower',\n        desc: gettext('Moderate or heavy rain shower')\n    },\n    359: {\n        icon: 'shower',\n        desc: gettext('Torrential rain shower')\n    },\n    362: {\n        icon: 'sleet',\n        desc: gettext('Light snow shower')\n    },\n    365: {\n        icon: 'sleet',\n        desc: gettext('Moderate or heavy sleet showers')\n    },\n    368: {\n        icon: 'sleet',\n        desc: gettext('Light snow showers')\n    },\n    371: {\n        icon: 'sleet',\n        desc: gettext('Moderate or heavy snow showers')\n    },\n    374: {\n        icon: 'light.pellets',\n        desc: gettext('Light shower of ice pellets')\n    },\n    377: {\n        icon: 'heavy.pellets',\n        desc: gettext('Moderate or heavy showers of ice pellets')\n    },\n    386: {\n        icon: 'rain',\n        desc: gettext('Patchy light rain in area with thunder')\n    },\n    389: {\n        icon: 'shower',\n        desc: gettext('Moderate or heavy rain in area with thunder')\n    },\n    392: {\n        icon: 'snow',\n        desc: gettext('Patchy light snow in area with thunder')\n    },\n    395: {\n        icon: 'snowfall',\n        desc: gettext('Moderate or heavy snow in area with thunder')\n    }\n};\n","/**\n * Exit from an app in three ways.\n *\n * @module app-exit\n */\n\n'use strict';\n\nvar app  = require('mag-app'),\n    exit = {};\n\n\n/**\n * Go back to Launcher from an app.\n */\nexit.goBack = function () {\n    core.call('stop');\n};\n\n\n/**\n * Exit from an app by pressing \"Exit/Home\" button.\n * Potentially save app state.\n */\nexit.goHome = function () { /**/ };\n\n\n/**\n * Exit from app.\n * Destroy all application instance.\n * If callback function provided, and callback returns boolean 'true', application will stay alive.\n *\n * @param {Function} [callback] - provide callback if u want to handle exit result, or cancel it\n */\nexit.goExit = function ( callback ) {\n    var ModalMessage  = require('mag-component-modal'),\n        LayoutList    = require('mag-component-layout-list'),\n        keys          = require('stb-keys'),\n        previousFocus = app.activePage.activeComponent,\n        exitModal;\n\n    app.activePage.add(exitModal = new ModalMessage({\n        title: gettext('Exit'),\n        events: {\n            show: function () {\n                this.children[0].focus();\n            },\n            hide: function () {\n                previousFocus.focus();\n            }\n        },\n        children: [\n            new LayoutList({\n                className: 'padded',\n                size: 2,\n                focusIndex: 0,\n                data: [\n                    {\n                        items: [{value: gettext('Yes')}],\n                        click: function () {\n                            if ( typeof callback === 'function' ) {\n                                if ( callback(true) ) {\n                                    exitModal.hide();\n                                    exitModal.remove();\n\n                                    return;\n                                }\n                            }\n\n                            exitModal.hide();\n                            exitModal.remove();\n                            core.call('exit');\n                        }\n                    },\n                    {\n                        items: [{value: gettext('No')}],\n                        click: function () {\n                            if ( typeof callback === 'function' ) {\n                                callback(false);\n                            }\n                            exitModal.hide();\n                            exitModal.remove();\n                            app.mainPanelSet.focus();\n                        }\n                    }\n                ],\n                events: {\n                    keydown: function ( event ) {\n                        LayoutList.prototype.defaultEvents.keydown.call(this, event);\n                        if ( event.code === keys.back ) {\n                            event.stop = true;\n                            if ( typeof callback === 'function' ) {\n                                callback(false);\n                            }\n                            exitModal.hide();\n                            exitModal.remove();\n                            app.mainPanelSet.focus();\n                        }\n                    }\n                }\n            })\n        ]\n    }));\n\n    exitModal.show();\n    exitModal.focus();\n};\n\n\nmodule.exports = exit;\n","/**\n * Operate with keyboard.\n *\n * @module keyboard\n */\n\n'use strict';\n\n\n/**\n * Open keyboard through core intent.\n *\n * @param {Object} config - keyboard config\n * @param {Function} [callback] - invoked on successful result\n */\nmodule.exports = function ( config, callback ) {\n    core.intent({\n        action: 'keyboard',\n        data: {\n            title: config.title,\n            value: config.value\n        },\n        events: {\n            done: function ( event ) {\n                var targetElem = config.elemSelector;\n\n                if ( callback ) {\n                    callback(event);\n                }\n\n                targetElem.innerText = event.value || targetElem.parentNode.parentNode.data.value.defaultValue;\n            }\n        }\n    }, function ( error ) {\n        console.log(error);\n    });\n};\n","/**\n * Build forecast visual structure.\n *\n * @module forecast.builder\n */\n\n'use strict';\n\nvar app     = require('mag-app'),\n    convert = require('./utils/converter'),\n    doc     = document,\n    builder = {},\n    $msgElem;\n\n\n/**\n * Builder initialization.\n *\n * @param {Object} elem - parent container for forecasts\n * @param {Object} data - saved location\n *\n * @return {Object} parent container for forecasts\n */\nbuilder.init = function ( elem, data ) {\n    return data ? this.setForecast(elem, data) : this.setNoData(elem);\n};\n\n\n/**\n * Set message on empty locations list.\n *\n * @param {Object} elem - element as a container for message block\n *\n * @return {Object} initial element with message block inside\n */\nbuilder.setNoData = function ( elem ) {\n    $msgElem = doc.createElement('div');\n\n    $msgElem.className = 'addCityIcon';\n    $msgElem.innerText = gettext('Press');\n    $msgElem.appendChild($msgElem.cloneNode(false));\n    $msgElem.lastElementChild.className = 'theme-icon theme-icon-rc-f2';\n    $msgElem.appendChild(doc.createTextNode(gettext('to add a new city')));\n    doc.getElementById('forecast').classList.add('hiddenBlock');\n    elem.$body.appendChild($msgElem);\n\n    return elem;\n};\n\n\n/**\n * Build DOM structure and construct map of active elements.\n *\n * @param {Object} elem - parent for DOM structure\n *\n * @private\n *\n * @return {Object} map of active elements\n */\nfunction buildDOMStruct ( elem ) {\n    var resolution = screen.height,\n        imgPath    = 'img/' + resolution + '/',\n        struct;\n\n    if ( !doc.getElementById('forecast').appended ) {\n        elem.$body.appendChild(doc.getElementById('forecast'));\n        doc.getElementById('forecast').appended = true;\n    }\n\n    doc.getElementById('forecast').classList.remove('hiddenBlock');\n\n    if ( $msgElem ) {\n        $msgElem.classList.add('hiddenBlock');\n    }\n\n    struct = {\n        currentDayDate:             doc.getElementById('currentDayDate'),\n        currentDayTemp:             doc.getElementById('currentDayTemp'),\n        currentDayIcon:             doc.getElementById('currentDayIcon'),\n        currentDayDesc:             doc.getElementById('currentDayDesc'),\n        detailsSunnyIco:            doc.getElementById('detailsSunnyIco'),\n        currentDayDetailsDayTemp:   doc.getElementById('currentDayDetailsDayTemp'),\n        detailsNightIco:            doc.getElementById('detailsNightIco'),\n        currentDayDetailsNightTemp: doc.getElementById('currentDayDetailsNightTemp'),\n        detailsHumidityIco:         doc.getElementById('detailsHumidityIco'),\n        currentDayDetailsHumidity:  doc.getElementById('currentDayDetailsHumidity'),\n        detailsWindIco:             doc.getElementById('detailsWindIco'),\n        currentDayDetailsWind:      doc.getElementById('currentDayDetailsWind'),\n        otherDaysFirstDayDate:      doc.getElementById('otherDaysFirstDayDate'),\n        otherDaysFirstDayIcon:      doc.getElementById('otherDaysFirstDayIcon'),\n        otherDaysFirstDayTemp:      doc.getElementById('otherDaysFirstDayTemp'),\n        otherDaysSecondDayDate:     doc.getElementById('otherDaysSecondDayDate'),\n        otherDaysSecondDayIcon:     doc.getElementById('otherDaysSecondDayIcon'),\n        otherDaysSecondDayTemp:     doc.getElementById('otherDaysSecondDayTemp'),\n        otherDaysThirdDayDate:      doc.getElementById('otherDaysThirdDayDate'),\n        otherDaysThirdDayIcon:      doc.getElementById('otherDaysThirdDayIcon'),\n        otherDaysThirdDayTemp:      doc.getElementById('otherDaysThirdDayTemp')\n    };\n\n    // fixed icons\n    struct.detailsSunnyIco.src    = imgPath + 'sunny.ico.png';\n    struct.detailsNightIco.src    = imgPath + 'night.ico.png';\n    struct.detailsHumidityIco.src = imgPath + 'humidity.ico.png';\n    struct.detailsWindIco.src     = imgPath + 'wind.ico.png';\n\n    // placeholders\n    struct.currentDayIcon.src         = imgPath + 'dummy.active.png';\n    struct.otherDaysFirstDayIcon.src  = imgPath + 'dummy.normal.png';\n    struct.otherDaysSecondDayIcon.src = imgPath + 'dummy.normal.png';\n    struct.otherDaysThirdDayIcon.src  = imgPath + 'dummy.normal.png';\n\n    if ( resolution === 480 || resolution === 576 ) {\n        [].forEach.call([].slice.call(doc.getElementsByClassName('otherDaysTempIco')), function ( element ) {\n            element.classList.remove('hidden');\n        });\n    }\n\n    return struct;\n}\n\n\n/**\n * Build forecast structure and init forecast block with new data.\n *\n * @param {Object} elem - container of slots\n * @param {Object[]} data - structured forecast\n */\nbuilder.setForecast = function ( elem, data ) {\n    var struct = elem.DOMStruct,\n        evalTemp, evalWind, removeZeros, currentDay;\n\n    if ( elem.isDOMStructReady && data ) {\n        evalTemp = function ( temp ) {\n            var tmp = app.userStore.settings.temperature === 'F' ? convert(temp, 'CF') : temp;\n\n            // and replace with true minus\n            return (['', '+'][+(parseInt(tmp, 10) > 0)] + (app.userStore.settings.temperature === 'F' ? tmp : tmp + '\\u00B0C')).replace('-', '−');\n        };\n        evalWind = function ( wind ) {\n            var units = app.userStore.settings.windSpeedUnits;\n\n            if ( units === 'km/h' || units === 'm/h' ) {\n                return units === 'km/h' ? convert(wind, 'MSKH').replace(/([\\d.]+)/, '$1 ') : convert(wind, 'MSMH').replace(/([\\d.]+)/, '$1 ');\n            }\n\n            return wind + ' ' + gettext('m/s');\n        };\n        removeZeros = function ( dateString ) {\n            return dateString.replace(/0?(\\d+)/, '$1');\n        };\n        currentDay = data.current;\n\n        struct.currentDayDate.innerText             = currentDay.dayName + ', ' + removeZeros(currentDay.date);\n        struct.currentDayTemp.innerText             = evalTemp(currentDay.temperature);\n        struct.currentDayIcon.src                   = currentDay.indicator;\n        struct.currentDayDesc.innerText             = currentDay.description;\n        struct.currentDayDetailsDayTemp.innerText   = evalTemp(currentDay.temperatureDay);\n        struct.currentDayDetailsNightTemp.innerText = evalTemp(currentDay.temperatureNight);\n        struct.currentDayDetailsHumidity.innerText  = currentDay.humidity;\n        struct.currentDayDetailsWind.innerText      = currentDay.windDirection + ' ' + evalWind(currentDay.windSpeed);\n\n        struct.otherDaysFirstDayDate.children[0].innerText  = data.days[0].dayName;\n        struct.otherDaysFirstDayDate.children[1].innerText  = removeZeros(data.days[0].date);\n        struct.otherDaysFirstDayIcon.src                    = data.days[0].indicator;\n        struct.otherDaysFirstDayTemp.children[1].innerText  = evalTemp(data.days[0].temperatureDay);\n        struct.otherDaysFirstDayTemp.children[3].innerText  = evalTemp(data.days[0].temperatureNight);\n\n        struct.otherDaysSecondDayDate.children[0].innerText = data.days[1].dayName;\n        struct.otherDaysSecondDayDate.children[1].innerText = removeZeros(data.days[1].date);\n        struct.otherDaysSecondDayIcon.src                   = data.days[1].indicator;\n        struct.otherDaysSecondDayTemp.children[1].innerText = evalTemp(data.days[1].temperatureDay);\n        struct.otherDaysSecondDayTemp.children[3].innerText = evalTemp(data.days[1].temperatureNight);\n\n        struct.otherDaysThirdDayDate.children[0].innerText  = data.days[2].dayName;\n        struct.otherDaysThirdDayDate.children[1].innerText  = removeZeros(data.days[2].date);\n        struct.otherDaysThirdDayIcon.src                    = data.days[2].indicator;\n        struct.otherDaysThirdDayTemp.children[1].innerText  = evalTemp(data.days[2].temperatureDay);\n        struct.otherDaysThirdDayTemp.children[3].innerText  = evalTemp(data.days[2].temperatureNight);\n    } else {\n        elem.DOMStruct = buildDOMStruct(elem);\n        elem.isDOMStructReady = true;\n    }\n};\n\n\nmodule.exports = builder;\n","'use strict';\n\n\n/**\n * Convert various measurement units between themselves.\n *\n * @param {(string|number)} baseValue - unit to convert\n * @param {string} direction - determine \"FROM\" (first 2 letters) units and \"TO\" (last 2 letters) units\n * @return {number} rounded digit as a result of particular conversion or original digit\n */\nmodule.exports = function ( baseValue, direction ) {\n    var map;\n\n    baseValue = parseFloat(baseValue);\n\n    map = {\n        // Celsius --> Fahrenheit\n        CF: Math.floor((baseValue * 9 / 5) + 32) + '\\u00B0F',\n        // Fahrenheit --> Celsius\n        FC: Math.floor((baseValue - 32) * 5 / 9) + '\\u00B0C',\n        // Metres per second --> Kilometres per hour\n        MSKH: Math.floor(baseValue * 3.6) + gettext('km/h'),\n        // Kilometres per hour --> Metres per second\n        KHMS: Math.floor(baseValue * 0.277778) + gettext('m/s'),\n        // Metres per second --> Miles per hour\n        MSMH: Math.floor(baseValue * 2.236936) + gettext('m/h'),\n        // Miles per hour --> Metres per second\n        MHMS: Math.floor(baseValue * 0.44704) + gettext('m/s'),\n        // Kilometres per hour --> Miles per hour\n        KHMH: Math.floor(baseValue * 0.621371) + gettext('m/h'),\n        // Miles per hour --> Kilometres per hour\n        MHKH: Math.floor(baseValue * 1.609344) + gettext('km/h')\n    };\n\n    if ( !map[direction] ) {\n        throw new Error('Incorrect direction to convert, use the following: CF/FC/MSKH/MSMH/KHMS/KHMH/MHMS/MHKH');\n    }\n\n    return map[direction];\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-page');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-page';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base page implementation.\n *\n * A full-screen top-level layer that can operate as an independent separate entity.\n * It is added to the document body on creation if not already linked.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n *\n * @example\n * var Page = require('stb/ui/page'),\n *     page = new Page({\n *         $node: document.getElementById(id)\n *     });\n *\n * page.addListener('show', function show () {\n *     // page is visible now\n * });\n */\nfunction Page ( config ) {\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    /**\n     * Page visibility/active state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.active = false;\n\n    /**\n     * Link to the currently active component with focus.\n     *\n     * @readonly\n     * @type {Component}\n     */\n    this.activeComponent = null;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'page ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // state flag\n    this.active = this.$node.classList.contains('active');\n\n    // correct DOM parent/child connection if necessary\n    if ( this.$node.parentNode === null ) {\n        document.body.appendChild(this.$node);\n    }\n\n    // always itself\n    this.page = this;\n}\n\n\n// inheritance\nPage.prototype = Object.create(Component.prototype);\nPage.prototype.constructor = Page;\n\n// set component name\nPage.prototype.name = 'spa-component-page';\n\n\n// public\nmodule.exports = Page;\n"],"sourceRoot":""}