{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/modules/lang.js","webpack:///./src/js/modules/keyboards/actions.js","webpack:///./node_modules/spa-component/index.js","webpack:///./node_modules/spa-app/lib/core.js","webpack:///./node_modules/stb-keys/index.js","webpack:///./node_modules/cjs-emitter/index.js","webpack:///./node_modules/spa-keys/index.js","webpack:///./node_modules/mag-app/index.js","webpack:///./src/js/config.js","webpack:///./node_modules/stb-app/lib/css.js","webpack:///./node_modules/stb-component-page/index.js","webpack:///./node_modules/stb-component-grid/index.js","webpack:///./node_modules/stb-component/index.js","webpack:///./src/js/modules/keyboards/qwerty.js","webpack:///./src/js/modules/keyboards/language.layouts/de.js","webpack:///./src/js/modules/keyboards/language.layouts/en.js","webpack:///./src/js/modules/keyboards/language.layouts/es.js","webpack:///./src/js/modules/keyboards/language.layouts/et.js","webpack:///./src/js/modules/keyboards/language.layouts/fr.js","webpack:///./src/js/modules/keyboards/language.layouts/lv.js","webpack:///./src/js/modules/keyboards/language.layouts/ru.js","webpack:///./src/js/modules/keyboards/language.layouts/uk.js","webpack:///./src/js/modules/keyboards/numeric.js","webpack:///./src/js/modules/keyboards/symbols.js","webpack:///./src/js/main.js","webpack:///./node_modules/mag-app/lib/main.js","webpack:///./node_modules/cjs-query/index.js","webpack:///./node_modules/spa-app/lib/events.js","webpack:///./node_modules/stb-shim-classlist/index.js","webpack:///./node_modules/stb-app/lib/metrics.js","webpack:///./src/js/metrics.js","webpack:///./node_modules/mag-app/lib/css.js","webpack:///./node_modules/spa-gettext/index.js","webpack:///./node_modules/cjs-gettext/index.js","webpack:///./src/js/pages/main.js","webpack:///./src/js/modules/input.js","webpack:///./src/js/modules/spa-component-input.js","webpack:///./node_modules/spa-component-page/index.js","webpack:///./node_modules/spa-component-grid/index.js","webpack:///./node_modules/stb-component-scrollbar/index.js","webpack:///./node_modules/spa-component-scrollbar/index.js","webpack:///./node_modules/stb-component-button/index.js","webpack:///./node_modules/spa-component-button/index.js","webpack:///./node_modules/mag-component-radio-list/index.js","webpack:///./node_modules/mag-component-list/index.js","webpack:///./node_modules/mag-component-modal/index.js","webpack:///./node_modules/stb-component-modal/index.js","webpack:///./node_modules/spa-component-modal/index.js","webpack:///./src/js/modules/keyboards/language.layouts sync ^\\.\\/.*$","webpack:///./src/js/pages/qwerty.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","active","shortNames","fullNames","codes","supportedShortNames","supportedFullNames","supportedCodes","currentProvider","numericKeyboard","symbolsKeyboard","qwertyKeyboard","changeLanguage","clear","cancel","uppercase","backspace","done","space","moveCaretToLeft","moveCaretToRight","moveCaretToStart","moveCaretToEnd","app","Emitter","counter","Component","config","self","this","visible","focusable","$node","$body","parent","children","propagate","document","createElement","className","id","add","hide","defaultEvents","events","keys","forEach","eventName","addListener","apply","addEventListener","event","focus","emit","stopPropagation","constructor","child","index","arguments","length","push","parentNode","appendChild","item","remove","activePage","activeComponent","blur","splice","indexOf","removeChild","data","activeItem","classList","show","callback","setTimeout","parse","query","location","search","substring","route","pageTo","page","pageFrom","showPage","from","to","back","channelNext","tab","channelPrev","ok","enter","exit","escape","volumeUp","volumeDown","f1","f2","f3","f4","refresh","frame","phone","set","tv","menu","rewind","forward","audio","standby","keyboard","usbMounted","usbUnmounted","playPause","play","pause","stop","power","record","info","mute","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","once","onceWrapper","removeListener","addListeners","callbacks","filter","fn","undefined","Array","slice","pageUp","pageDown","end","home","left","up","right","down","insert","del","480","main","width","height","top","numpad","576","720","1080","link","rel","href","metrics","head","lang","isUpper","direction","map","row","action","toUpperCase","toLowerCase","toggleCase","actions","rowSpan","colSpan","gettext","onVkNeedReposition","type","input","sizes","screen","JSON","window","stbWindowMgr","GetFocusedInputInfo","result","y","parseInt","h","positionHint","stbWebWindow","SetGeometry","stbEvent","list","core","plugins","keyboardLayouts","code","environment","language","gSTB","SetInputLang","load","error","pages","qwerty","standalone","close","ready","getCoreInstance","platform","body","setAttribute","contextmenu","preventDefault","split","part","decodeURIComponent","stringify","params","encodeURIComponent","join","DOMContentLoaded","unload","keydown","eventLocal","keyCode","ctrlKey","altKey","shiftKey","keypress","mousewheel","documentElement","DOMTokenList","el","_element","_classCache","classes","replace","token","contains","toString","toggle","Element","screenHeight","availHeight","availTop","availBottom","availWidth","availLeft","availRight","linkCSS","theme","path","Gettext","loader","prepare","_","pgettext","ngettext","defaultLanguage","xhr","ext","XMLHttpRequest","onload","responseText","onerror","ontimeout","open","send","meta","msgId","context","plural","evalResult","eval","virtualInput","Input","Page","Grid","ScrollBar","Button","RadioList","Modal","qwertyProvider","numericProvider","symbolsProvider","pageMain","pageMainInput","lastInputCaretPosition","lastIntent","verticalNavigation","popup","title","scrollBar","viewSize","TYPE_VERTICAL","radioList","scroll","cycle","focusIndex","size","click:item","$item","xIndex","yIndex","focusX","focusY","init","focusItem","move","$focusItem","state","button","pageMainButton","getCaretPosition","click","TYPE_PASSWORD","TYPE_TEXT","$text","innerText","setValue","badSituatuion","pageMainKeyboard","cycleX","cycleY","render","selectionStart","selectionEnd","overflow","changeView","removeChar","setCaretPosition","addChar","eventNative","char","charCode","String","fromCharCode","intent","logoUrl","runnerConfig","uris","icons","logoActive","checkIndex","pageMainLabel","placeholder","pageMainIcon","style","backgroundImage","pageMainHeadTitle","icon","description","position","display","$line","$caret","$placeholder","dir","$char","innerHTML","insertBefore","offsetLeft","overflowRight","offsetWidth","overflowLeft","previousSibling","scrollLeft","getBoundingClientRect","diff","oldLength","newLength","lastChild","TYPE_NUMBER","TYPE_PHONE","TYPE_SEARCH","fill","posX","posY","dX","dY","idxY","idxX","x","renderItemDefault","renderItem","wheelDeltaY","wheelDeltaX","$row","$tbody","itemData","newData","draw","onItemClick","disable","construct","$table","normalize","insertRow","insertCell","mark","provider","sizeX","sizeY","translate","fresh","defaultTranslate","arr","$prev","$curr","markItem","realSize","thumbRect","trackRect","TYPE_HORIZONTAL","$thumb","scrollTo","marginTop","marginLeft","curr","prev","$icon","clickDuration","List","classIcon","classIconActive","classChecked","checkedData","checkedIndex","previousCheckedData","setData","defaultCheckedIndex","defaultFocusIndex","resetData","clearChecked","table","tr","td","check","$title","checkBox","getItemNodeByIndex","viewIndex","idx","currSize","onClick","blocked","maxCount","pos","blurItem","renderView","prevIndex","currIndex","force","firstChild","nextSibling","StbComponentModal","$overlay","onkeydown","$header","./de","./de.js","./en","./en.js","./es","./es.js","./et","./et.js","./fr","./fr.js","./lv","./lv.js","./ru","./ru.js","./uk","./uk.js","webpackContext","req","webpackContextResolve","e","Error","resolve","pageQwerty","badSituation","pageQwertyKeyboard","SendVirtualKeypress","text","clearInput","HideVirtualKeyboard"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 24);\n","'use strict';\n\nmodule.exports = {\n    active: 0,\n    shortNames: null,\n    fullNames: null,\n    codes: null,\n    supportedShortNames: ['Eng', 'Рус', 'Укр', 'Deu', 'Fra', 'Es', 'Et', 'Lat'],\n    supportedFullNames: ['English', 'Русский', 'Український', 'Deutsch', 'Français', 'Español', 'Eesti keel', 'Latviešu'],\n    supportedCodes: ['en', 'ru', 'uk', 'de', 'fr', 'es', 'et', 'lv'],\n    currentProvider: null\n};\n","'use strict';\n\nmodule.exports = {\n    numericKeyboard: 1,\n    symbolsKeyboard: 2,\n    qwertyKeyboard: 3,\n    changeLanguage: 4,\n    clear: 5,\n    cancel: 6,\n    uppercase: 7,\n    backspace: 8,\n    done: 13,\n    space: 32,\n    moveCaretToLeft: 37,\n    moveCaretToRight: 39,\n    moveCaretToStart: 40,\n    moveCaretToEnd: 41\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    Emitter = require('cjs-emitter'),\n    counter = 0;\n\n\n/**\n * Base component implementation.\n *\n * Visual element that can handle sub-components.\n * Each component has a DOM element container $node with a set of classes:\n * \"component\" and some specific component class names depending on the hierarchy, for example \"page\".\n * Each component has a unique ID given either from $node.id or from data.id. If not given will generate automatically.\n *\n * @constructor\n * @extends Emitter\n *\n * @param {Object} [config={}] init parameters\n * @param {Element} [config.id] component unique identifier (generated if not set)\n * @param {string} [config.className] space-separated list of classes for \"className\" property of this.$node\n * @param {Element} [config.$node] DOM element/fragment to be a component outer container\n * @param {Element} [config.$body] DOM element/fragment to be a component inner container (by default is the same as $node)\n * @param {Component} [config.parent] link to the parent component which has this component as a child\n * @param {Array.<Component>} [config.children=[]] list of components in this component\n * @param {Object.<string, function>} [config.events={}] list of event callbacks\n * @param {boolean} [config.visible=true] component initial visibility state flag\n * @param {boolean} [config.focusable=true] component can accept focus or not\n * @param {boolean} [config.propagate=false] allow to emit events to the parent component\n *\n * @fires module:stb/component~Component#click\n *\n * @example\n * var component = new Component({\n *     $node: document.getElementById(id),\n *     className: 'bootstrap responsive',\n *     events: {\n *         click: function () { ... }\n *     }\n * });\n * component.add( ... );\n * component.focus();\n */\nfunction Component ( config ) {\n    // current execution context\n    var self = this,\n        name;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.id && typeof config.id !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.id');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$node && !(config.$node instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$node type');\n        }\n        if ( config.$body && !(config.$body instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$body type');\n        }\n        if ( config.parent && !(config.parent instanceof Component) ) {\n            throw new Error(__filename + ': wrong config.parent type');\n        }\n        if ( config.children && !Array.isArray(config.children) ) {\n            throw new Error(__filename + ': wrong config.children type');\n        }\n    }\n\n    /**\n     * Component visibility state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.visible = true;\n\n    /**\n     * Component can accept focus or not.\n     *\n     * @type {boolean}\n     */\n    this.focusable = true;\n\n    /**\n     * DOM outer handle.\n     *\n     * @type {Element}\n     */\n    this.$node = null;\n\n    /**\n     * DOM inner handle.\n     * In simple cases is the same as $node.\n     *\n     * @type {Element}\n     */\n    this.$body = null;\n\n    /**\n     * Link to the parent component which has this component as a child.\n     *\n     * @type {Component}\n     */\n    this.parent = null;\n\n    /**\n     * List of all children components.\n     *\n     * @type {Component[]}\n     */\n    this.children = [];\n\n    /**\n     * allow to emit events to the parent component\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.propagate = !!config.propagate;\n\n    // parent constructor call\n    Emitter.call(this);\n\n    // outer handle - empty div in case nothing is given\n    this.$node = config.$node || document.createElement('div');\n\n    // inner handle - the same as outer handler in case nothing is given\n    this.$body = config.$body || this.$node;\n\n    // set CSS class names\n    //this.$node.className += ' component ' + (config.className || '');\n    // previous approach is not good as it mess with components hierarchy\n    this.$node.className = this.name + ' ' + (config.className || '');\n\n    // apply component id if given, generate otherwise\n    this.id = config.id || this.$node.id || 'cid' + counter++;\n\n    // apply hierarchy\n    if ( config.parent ) {\n        // add to parent component\n        config.parent.add(this);\n    }\n\n    // apply given visibility\n    if ( config.visible === false ) {\n        // default state is visible\n        this.hide();\n    }\n\n    // apply focus handling method\n    if ( config.focusable === false ) {\n        // can't accept focus\n        this.focusable = false;\n    }\n\n    // a descendant defined own events\n    if ( this.defaultEvents ) {\n        // sanitize\n        config.events = config.events || {};\n\n        if ( DEVELOP ) {\n            if ( typeof config.events !== 'object' ) {\n                throw new Error(__filename + ': wrong config.events type');\n            }\n            if ( typeof this.defaultEvents !== 'object' ) {\n                throw new Error(__filename + ': wrong this.defaultEvents type');\n            }\n        }\n\n        for ( name in this.defaultEvents ) {\n            // overwrite default events with user-defined\n            config.events[name] = config.events[name] || this.defaultEvents[name];\n        }\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( eventName ) {\n            self.addListener(eventName, config.events[eventName]);\n        });\n    }\n\n    // apply the given children components\n    if ( config.children ) {\n        // apply\n        this.add.apply(this, config.children);\n    }\n\n    // component activation by mouse\n    this.$node.addEventListener('click', function ( event ) {\n        // left mouse button\n        //if ( event.button === 0 ) {\n        // activate if possible\n        self.focus();\n\n        // there are some listeners\n        if ( self.events['click'] ) {\n            /**\n             * Mouse click event.\n             *\n             * @event module:stb/component~Component#click\n             *\n             * @type {Object}\n             * @property {Event} event click event data\n             */\n            self.emit('click', event);\n        }\n        //}\n\n        if ( DEVELOP ) {\n            // middle mouse button\n            if ( event.button === 1 ) {\n                //debug.inspect(self, 0);\n                debug.info('\"window.link\" or \"' + self.id + '.component\"', 'this component is now available in global scope');\n                window.link = self;\n                self.$node.classList.toggle('wired');\n            }\n        }\n\n        event.stopPropagation();\n    });\n\n    if ( DEVELOP ) {\n        // expose inner ID to global scope\n        window[self.id] = self.$node;\n\n        // expose a link\n        this.$node.component = this.$body.component = this;\n        this.$node.title = this.name + '#' + this.id + ' (outer)';\n        this.$body.title = this.name + '#' + this.id + ' (inner)';\n    }\n\n    debug.info('create component ' + this.name + '#' + this.id, null, {\n        tags: ['create', 'component', this.name, this.id]\n    });\n}\n\n\n// inheritance\nComponent.prototype = Object.create(Emitter.prototype);\nComponent.prototype.constructor = Component;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nComponent.prototype.defaultEvents = null;\n\n\n/**\n * Add a new component as a child.\n *\n * @param {...Component} [child] variable number of elements to append\n *\n * @files Component#add\n *\n * @example\n * panel.add(\n *     new Button( ... ),\n *     new Button( ... )\n * );\n */\nComponent.prototype.add = function ( child ) {\n    var index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        child = arguments[index];\n\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        // apply\n        this.children.push(child);\n        child.parent = this;\n\n        // correct DOM parent/child connection if necessary\n        if ( child.$node && child.$node.parentNode === null ) {\n            this.$body.appendChild(child.$node);\n        }\n\n        debug.info('add component ' + child.name + '#' + child.id + ' to ' + this.name + '#' + this.id, null, {\n            tags: ['add', 'component', this.name, this.id, child.name, child.id]\n        });\n\n        // there are some listeners\n        if ( this.events['add'] ) {\n            /**\n             * A child component is added.\n             *\n             * @event module:stb/component~Component#add\n             *\n             * @type {Object}\n             * @property {Component} item new component added\n             */\n            this.emit('add', {item: child});\n        }\n\n        //debug.log('component ' + this.name + '#' + this.id + ' new child: ' + child.name + '#' + child.id);\n    }\n};\n\n\n/* @todo: consider activation in future */\n///**\n// * Insert component into the specific position.\n// *\n// * @param {Component} child component instance to insert\n// * @param {number} index insertion position\n// */\n//Component.prototype.insert = function ( child, index ) {\n//    var prevIndex = this.children.indexOf(child);\n//\n//    if ( DEVELOP ) {\n//        if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n//        if ( !(child instanceof Component) ) { throw new Error(__filename + ': wrong child type'); }\n//    }\n//\n//    if ( prevIndex !== -1 ) {\n//        this.children.splice(prevIndex, 1);\n//        this.$body.removeChild(child.$node);\n//    }\n//\n//    if ( index === this.children.length ) {\n//        this.$body.appendChild(child.$node);\n//    } else {\n//        this.$body.insertBefore(child.$node, this.$body.children[index]);\n//    }\n//    this.children.splice(index, 0, child);\n//\n//    if ( !child.parent ) {\n//        child.parent = this;\n//    }\n//};\n\n\n/**\n * Delete this component and clear all associated events.\n *\n * @fires module:stb/component~Component#remove\n */\nComponent.prototype.remove = function () {\n    // really inserted somewhere\n    if ( this.parent ) {\n        if ( DEVELOP ) {\n            if ( !(this.parent instanceof Component) ) {\n                throw new Error(__filename + ': wrong this.parent type');\n            }\n        }\n\n        // active at the moment\n        if ( app.activePage.activeComponent === this ) {\n            this.blur();\n            this.parent.focus();\n        }\n        this.parent.children.splice(this.parent.children.indexOf(this), 1);\n    }\n\n    // remove all children\n    this.children.forEach(function ( child ) {\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        child.remove();\n    });\n\n    this.$node.parentNode.removeChild(this.$node);\n\n    // there are some listeners\n    if ( this.events['remove'] ) {\n        /**\n         * Delete this component.\n         *\n         * @event module:stb/component~Component#remove\n         */\n        this.emit('remove');\n    }\n\n    // remove all listeners\n    this.events = {};\n\n    //debug.log('component ' + this.name + '#' + this.id + ' remove', 'red');\n    debug.info('remove component ' + this.name + '#' + this.id, null, {\n        tags: ['remove', 'component', this.name, this.id]\n    });\n};\n\n\n/**\n * Activate the component.\n * Notify the owner-page and apply CSS class.\n *\n * @param {Object} [data] custom data which passed into handlers\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#focus\n */\nComponent.prototype.focus = function ( data ) {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // this is a visual component on a page\n    // not already focused and can accept focus\n    if ( this.focusable && this !== activeItem ) {\n        // notify the current active component\n        if ( activeItem ) { activeItem.blur(); }\n\n        /* eslint consistent-this: 0 */\n\n        // apply\n        activePage.activeComponent = activeItem = this;\n        activeItem.$node.classList.add('focus');\n\n        //debug.log('component ' + this.name + '#' + this.id + ' focus');\n        debug.info('focus component ' + this.name + '#' + this.id, null, {\n            tags: ['focus', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( activeItem.events['focus'] ) {\n            /**\n             * Make this component focused.\n             *\n             * @event module:stb/component~Component#focus\n             */\n            activeItem.emit('focus', data);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Remove focus.\n * Change page.activeComponent and notify subscribers.\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#blur\n */\nComponent.prototype.blur = function () {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // apply visuals anyway\n    this.$node.classList.remove('focus');\n\n    // this is the active component\n    if ( this === activeItem ) {\n        activePage.activeComponent = null;\n\n        //debug.log('component ' + this.name + '#' + this.id + ' blur', 'grey');\n        debug.info('blur component ' + this.name + '#' + this.id, null, {\n            tags: ['blur', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['blur'] ) {\n            /**\n             * Remove focus from this component.\n             *\n             * @event module:stb/component~Component#blur\n             */\n            this.emit('blur');\n        }\n\n        return true;\n    }\n\n    debug.warn('component ' + this.name + '#' + this.id + ' attempt to blur without link to a page', null, {\n        tags: ['blur', 'component', this.name, this.id]\n    });\n\n    // nothing was done\n    return false;\n};\n\n\n/*function show ( self, data ) {\n    // correct style\n    self.$node.classList.remove('hidden');\n    // flag\n    self.visible = true;\n\n    debug.info('show component ' + self.name + '#' + self.id, null, {\n        tags: ['show', 'component', self.name, self.id]\n    });\n\n    // there are some listeners\n    if ( self.events['show'] ) {\n        /!**\n         * Make the component visible.\n         *\n         * @event module:stb/component~Component#show\n         *!/\n        self.emit('show', data);\n    }\n}*/\n\n/**\n * Make the component visible and notify subscribers.\n *\n * @param {Object} [data] custom data which passed into handlers\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#show\n */\nComponent.prototype.show = function ( data, callback ) {\n    //var self = this;\n\n    // is it hidden\n    if ( !this.visible ) {\n        /*if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(function () {\n                show(self, data);\n                callback();\n            });\n        } else {\n            // sync call\n            show(this, data);\n        }*/\n\n        // correct style\n        this.$node.classList.remove('hidden');\n        // flag\n        this.visible = true;\n\n        debug.info('show component ' + this.name + '#' + this.id, null, {\n            tags: ['show', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['show'] ) {\n            /**\n             * Make the component visible.\n             *\n             * @event module:stb/component~Component#show\n             */\n            this.emit('show', data);\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Make the component hidden and notify subscribers.\n *\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#hide\n */\nComponent.prototype.hide = function ( callback ) {\n    // is it visible\n    if ( this.visible ) {\n        // correct style\n        this.$node.classList.add('hidden');\n        // flag\n        this.visible = false;\n\n        debug.info('hide component ' + this.name + '#' + this.id, null, {\n            tags: ['hide', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['hide'] ) {\n            /**\n             * Make the component hidden.\n             *\n             * @event module:stb/component~Component#hide\n             */\n            this.emit('hide');\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = Component;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    parse   = require('cjs-query').parse,\n    app     = new Emitter();\n\n\n/**\n * Make the given inactive/hidden page active/visible.\n * Pass some data to the page and trigger the corresponding event.\n *\n * @param {Page} page item to show\n * @param {*} [data] data to send to page\n *\n * @return {boolean} operation status\n */\nfunction showPage ( page, data ) {\n    // page available and can be hidden\n    if ( page && !page.active ) {\n        // apply visibility\n        page.$node.classList.add('active');\n        page.active = true;\n        app.activePage = page;\n\n        debug.info('show component ' + page.name + '#' + page.id, null, {\n            tags: ['show', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' show', 'green');\n\n        // there are some listeners\n        if ( page.events['show'] ) {\n            // notify listeners\n            page.emit('show', {data: data});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n/**\n * Make the given active/visible page inactive/hidden and trigger the corresponding event.\n *\n * @param {Page} page item to hide\n *\n * @return {boolean} operation status\n */\nfunction hidePage ( page ) {\n    // page available and can be hidden\n    if ( page && page.active ) {\n        // apply visibility\n        page.$node.classList.remove('active');\n        page.active  = false;\n        app.activePage = null;\n\n        debug.info('hide component ' + page.name + '#' + page.id, null, {\n            tags: ['hide', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' hide', 'grey');\n\n        // there are some listeners\n        if ( page.events['hide'] ) {\n            // notify listeners\n            page.emit('hide');\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n// url request params\napp.query = parse(document.location.search.substring(1));\n\n\n// global application configuration\n// in config.js file in js root\napp.config = require('app:config');\n\n\n// the only visible page\napp.activePage = null;\n\n\n/**\n * Browse to a given page.\n * Do nothing if the link is invalid. Otherwise hide the current, show new and update the \"previous\" link.\n *\n * @param {Page} pageTo instance of the page to show\n * @param {*} [data] options to pass to the page on show\n *\n * @return {boolean} operation status\n */\napp.route = function ( pageTo, data ) {\n    var pageFrom = app.activePage;\n\n    if ( DEVELOP ) {\n        //if ( router.pages.length > 0 ) {\n        if ( !pageTo || typeof pageTo !== 'object' ) {\n            throw new Error(__filename + ': wrong pageTo type');\n        }\n        if ( !('active' in pageTo) ) {\n            throw new Error(__filename + ': missing field \"active\" in pageTo');\n        }\n        //}\n    }\n\n    // valid not already active page\n    if ( pageTo && !pageTo.active ) {\n        //debug.log('router.navigate: ' + pageTo.id, pageTo === pageFrom ? 'grey' : 'green');\n        debug.info('app route: ' + pageTo.name + '#' + pageTo.id, null, {tags: ['route', pageTo.name, pageTo.id]});\n\n        // update url\n        //location.hash = this.stringify(name, data);\n\n        // apply visibility\n        hidePage(app.activePage);\n        showPage(pageTo, data);\n\n        // there are some listeners\n        if ( this.events['route'] ) {\n            // notify listeners\n            this.emit('route', {from: pageFrom, to: pageTo});\n        }\n\n        // store\n        //this.history.push(pageTo);\n\n        return true;\n    }\n\n    //debug.warn('invalid page to route: ' + pageTo.id, null, {tags: ['route', 'page', pageTo.id]});\n    console.warn('invalid page to route: ' + pageTo.id);\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = app;\n","/**\n * Global list of non-printable control key codes.\n *\n * At the moment `keypress` and `keydown` events are emitted for the same keys (for both printable and non-printable characters).\n *\n * WARNING!!! All codes in this file (except 'volumeUp' and 'volumeDown')\n * are used in window 'keydown' handler to prevent wrong 'keypress' firings.\n * If you add new code to this file 'keypress' event with this code will never fire.\n *\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar keys = require('spa-keys');\n\n\n// extend with additional codes\nkeys.back         = keys.backspace;\nkeys.channelNext  = keys.tab;        // Tab\nkeys.channelPrev  = keys.tab + 's';  // Shift+Tab\nkeys.ok           = keys.enter;      // Enter\nkeys.exit         = keys.escape;     // Esc\nkeys.volumeUp     = 107;             // NUMPAD +\nkeys.volumeDown   = 109;             // NUMPAD -\nkeys.f1           = 112 + 'c';       // Ctrl+F1\nkeys.f2           = 113 + 'c';       // Ctrl+F2\nkeys.f3           = 114 + 'c';       // Ctrl+F3\nkeys.f4           = 115 + 'c';       // Ctrl+F4\nkeys.refresh      = 116 + 'c';       // Ctrl+F5\nkeys.frame        = 117 + 'c';       // Ctrl+F6\nkeys.phone        = 119 + 'c';       // Ctrl+F8\nkeys.set          = 120 + 'c';       // Ctrl+F9\nkeys.tv           = 121 + 'c';       // Ctrl+F10\nkeys.menu         = 122 + 'c';       // Ctrl+F11\nkeys.app          = 123 + 'c';       // Ctrl+F12\nkeys.rewind       = 66  + 'a';       // Alt+B\nkeys.forward      = 70  + 'a';       // Alt+F\nkeys.audio        = 71  + 'a';       // Alt+G\nkeys.standby      = 74  + 'a';       // Alt+J\nkeys.keyboard     = 76  + 'a';       // Alt+L\nkeys.usbMounted   = 80  + 'a';       // Alt+P\nkeys.usbUnmounted = 81  + 'a';       // Alt+Q\nkeys.playPause    = 82  + 'a';       // Alt+R\nkeys.play         = -1;              // should be redefined on some platforms\nkeys.pause        = -1;              // should be redefined on some platforms\nkeys.stop         = 83  + 'a';       // Alt+S\nkeys.power        = 85  + 'a';       // Alt+U\nkeys.record       = 87  + 'a';       // Alt+W\nkeys.info         = 89  + 'a';       // Alt+Y\nkeys.mute         = 192 + 'a';\nkeys.digit0       = 48;\nkeys.digit1       = 49;\nkeys.digit2       = 50;\nkeys.digit3       = 51;\nkeys.digit4       = 52;\nkeys.digit5       = 53;\nkeys.digit6       = 54;\nkeys.digit7       = 55;\nkeys.digit8       = 56;\nkeys.digit9       = 57;\n\n\n// public\nmodule.exports = keys;\n\n// public\n// module.exports = {\n//     getCode: function ( event ) {\n//         var code = event.keyCode;\n//\n//         // apply key modifiers\n//         if ( event.shiftKey ) { code += 1000; }\n//         if ( event.altKey )   { code += 2000; }\n//\n//         return code;\n//     },\n//\n//     codes: {\n//         back:         8,    // Backspace\n//         channelPrev:  1009, // Shift+Tab\n//         channelNext:  9,    // Tab\n//         ok:           13,   // Enter\n//         exit:         27,   // Esc\n//         pageUp:       33,\n//         pageDown:     34,\n//         end:          35,\n//         home:         36,\n//         left:         37,\n//         up:           38,\n//         right:        39,\n//         down:         40,\n//         'delete':     46,\n//         volumeUp:     107,  // NUMPAD +\n//         volumeDown:   109,  // NUMPAD -\n//         f1:           112,  // F1\n//         f2:           113,  // F2\n//         f3:           114,  // F3\n//         f4:           115,  // F4\n//         refresh:      116,  // F5\n//         frame:        117,  // F6\n//         phone:        119,  // F8\n//         set:          120,  // F9\n//         tv:           121,  // F10\n//         menu:         122,  // F11\n//         app:          123,  // F12\n//         rewind:       2066, // Alt+B\n//         forward:      2070, // Alt+F\n//         audio:        2071, // Alt+G\n//         standby:      2074, // Alt+J\n//         keyboard:     2076, // Alt+L\n//         usbMounted:   2080, // Alt+P\n//         usbUnmounted: 2081, // Alt+Q\n//         playPause:    2082, // Alt+R\n//         stop:         2083, // Alt+S\n//         power:        2085, // Alt+U\n//         record:       2087, // Alt+W\n//         info:         2089, // Alt+Y\n//         mute:         2192\n//     }\n// };\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Base Events Emitter implementation.\n *\n * @see http://nodejs.org/api/events.html\n * @constructor\n *\n * @example\n * var emitter = new Emitter();\n */\nfunction Emitter () {\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // if ( DEVELOP ) {\n    //     if ( typeof this !== 'object' ) { throw new Error(__filename + ': must be constructed via new'); }\n    // }\n\n    /**\n     * Inner hash table for event names and linked callbacks.\n     * Manual editing should be avoided.\n     *\n     * @member {Object.<string, function[]>}\n     *\n     * @example\n     * {\n     *     click: [\n     *         function click1 () { ... },\n     *         function click2 () { ... }\n     *     ],\n     *     keydown: [\n     *         function () { ... }\n     *     ]\n     * }\n     **/\n    this.events = {};\n}\n\n\nEmitter.prototype = {\n    /**\n     * Bind an event to the given callback function.\n     * The same callback function can be added multiple times for the same event name.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.addListener('click', function ( data ) { ... });\n     * // one more click handler\n     * emitter.addListener('click', function ( data ) { ... });\n     */\n    addListener: function ( name, callback ) {\n        console.assert(arguments.length === 2, 'wrong arguments number');\n        console.assert(typeof name === 'string', 'wrong name type');\n        console.assert(name.length > 0, 'empty name');\n        console.assert(typeof callback === 'function', 'callback should be a function');\n\n        // if ( DEVELOP ) {\n        //     if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        //     if ( typeof name !== 'string' || name.length === 0 ) { throw new Error(__filename + ': wrong or empty name'); }\n        //     if ( typeof callback !== 'function' ) { throw new Error(__filename + ': wrong callback type'); }\n        // }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(callback);\n    },\n\n\n    /**\n     * Add a one time listener for the event.\n     * This listener is invoked only the next time the event is fired, after which it is removed.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.once('click', function ( data ) { ... });\n     */\n    once: function ( name, callback ) {\n        // current execution context\n        var self = this;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n        }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(function onceWrapper () {\n            self.removeListener(name, onceWrapper);\n            callback.apply(self, arguments);\n        });\n    },\n\n\n    /**\n     * Apply multiple listeners at once.\n     *\n     * @param {Object} callbacks event names with callbacks\n     *\n     * @example\n     * emitter.addListeners({\n     *     click: function ( data ) {},\n     *     close: function ( data ) {}\n     * });\n     */\n    addListeners: function ( callbacks ) {\n        var name;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof callbacks !== 'object' ) {\n                throw new Error(__filename + ': wrong callbacks type');\n            }\n            if ( Object.keys(callbacks).length === 0 ) {\n                throw new Error(__filename + ': no callbacks given');\n            }\n        }\n\n        for ( name in callbacks ) {\n            if ( callbacks.hasOwnProperty(name) ) {\n                this.addListener(name, callbacks[name]);\n            }\n        }\n    },\n\n\n    /**\n     * Remove all instances of the given callback.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to remove\n     *\n     * @example\n     * emitter.removeListener('click', func1);\n     */\n    removeListener: function ( name, callback ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n            if ( this.events[name] && !Array.isArray(this.events[name]) ) {\n                throw new Error(__filename + ': corrupted inner data');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( this.events[name] ) {\n            // rework the callback list to exclude the given one\n            this.events[name] = this.events[name].filter(function callbacksFilter ( fn ) { return fn !== callback; });\n            // event has no more callbacks so clean it\n            if ( this.events[name].length === 0 ) {\n                // as if there were no listeners at all\n                this.events[name] = undefined;\n            }\n        }\n    },\n\n\n    /**\n     * Remove all callbacks for the given event name.\n     * Without event name clears all events.\n     *\n     * @param {string} [name] event identifier\n     *\n     * @example\n     * emitter.removeAllListeners('click');\n     * emitter.removeAllListeners();\n     *\n     * @deprecated\n     */\n    /*removeAllListeners: function ( name ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 0 && (typeof name !== 'string' || name.length === 0) ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // check input\n        if ( arguments.length === 0 ) {\n            // no arguments so remove everything\n            this.events = {};\n        } else if ( name ) {\n            if ( DEVELOP ) {\n                if ( this.events[name] ) { throw new Error(__filename + ': event is not removed'); }\n            }\n\n            // only name is given so remove all callbacks for the given event\n            // but object structure modification should be avoided\n            this.events[name] = undefined;\n        }\n    },*/\n\n\n    /**\n     * Execute each of the listeners in the given order with the supplied arguments.\n     *\n     * @param {string} name event identifier\n     *\n     * @example\n     * emitter.emit('init');\n     * emitter.emit('click', {src: panel1, dst: panel2});\n     * emitter.emit('load', error, data);\n     *\n     * // it's a good idea to emit event only when there are some listeners\n     * if ( this.events['click'] ) {\n     *     this.emit('click', {event: event});\n     * }\n     */\n    emit: function ( name ) {\n        var event = this.events[name],\n            index;\n\n        if ( DEVELOP ) {\n            if ( arguments.length < 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( event ) {\n            if ( DEVELOP ) {\n                if ( !Array.isArray(event) ) {\n                    throw new Error(__filename + ': wrong event type');\n                }\n            }\n\n            for ( index = 0; index < event.length; index++ ) {\n                if ( DEVELOP ) {\n                    if ( typeof event[index] !== 'function' ) {\n                        throw new Error(__filename + ': wrong event callback type');\n                    }\n                }\n\n                // invoke the callback with parameters\n                event[index].apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n    }\n};\n\n\n// correct constructor name\nEmitter.prototype.constructor = Emitter;\n\n\n// public\nmodule.exports = Emitter;\n","/**\n * Global list of non-printable control key codes.\n *\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    backspace: 8,\n    tab:       9,\n    enter:     13,\n    escape:    27,\n    space:     32,\n    pageUp:    33,\n    pageDown:  34,\n    end:       35,\n    home:      36,\n    left:      37,\n    up:        38,\n    right:     39,\n    down:      40,\n    insert:    45,\n    // not \"delete\" because of old browsers issue\n    del:       46\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar app = require('./lib/main');\n\n\nmodule.exports = app;\n","/**\n * Global application configuration.\n * Can store run-time options, API urls, paths, execution flags and so on.\n * Automatically loaded on application initialization and available as app.config.\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    480: {\n        main: {\n            width: 606,\n            height: 182,\n            top: 40,\n            left: 57\n        },\n        numpad: {\n            width: 353,\n            height: 146,\n            top: 40,\n            left: 183.5\n        }\n    },\n    576: {\n        main: {\n            width: 606,\n            height: 195,\n            top: 40,\n            left: 57\n        },\n        numpad: {\n            width: 353,\n            height: 146,\n            top: 40,\n            left: 183.5\n        }\n    },\n    720: {\n        main: {\n            width: 1128,\n            height: 260,\n            top: 40,\n            left: 76\n        },\n        numpad: {\n            width: 504,\n            height: 208,\n            top: 40,\n            left: 388\n        }\n    },\n    1080: {\n        main: {\n            width: 1128 * 1.5,\n            height: 260 * 1.5,\n            top: 40 * 1.5,\n            left: 76 * 1.5\n        },\n        numpad: {\n            width: 504 * 1.5,\n            height: 208 * 1.5,\n            top: 40 * 1.5,\n            left: 388 * 1.5\n        }\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core');\n//    metrics = require('app:metrics'),\n//    linkCSS;\n\n\n// global link\n//app.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\n//app.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\n//app.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n// // set max browser window size\n// window.moveTo(0, 0);\n// window.resizeTo(metrics.width, metrics.height);\n\n// load CSS file base on resolution\n/*linkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = 'css/' + (DEVELOP ? 'develop.' : 'release.') + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);*/\n\n\n// public\nmodule.exports = function ( name ) {\n    var link = document.createElement('link');\n\n    link.rel  = 'stylesheet';\n    link.href = 'css/' + name + '.' + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\n    document.head.appendChild(link);\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-page');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-page';\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-grid');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-grid';\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component');\n","'use strict';\n\nvar lang = require('../lang'),\n    isUpper = false;\n\nmodule.exports = {\n    get: function ( direction, callback ) {\n        var data = require('./language.layouts/' + lang.codes[lang.active]);\n\n        if ( isUpper ) {\n            data = data.map(function ( row ) {\n                return row.map(function ( item ) {\n                    if ( typeof item.action === 'undefined' ) {\n                        if ( typeof item.value !== 'undefined' ) {\n                            item.value = item.value.toUpperCase();\n                        } else if ( typeof item === 'string' ) {\n                            item = item.toUpperCase();\n                        }\n                    }\n\n                    return item;\n                });\n            });\n        } else {\n            data = data.map(function ( row ) {\n                return row.map(function ( item ) {\n                    if ( typeof item.action === 'undefined' ) {\n                        if ( typeof item.value !== 'undefined' ) {\n                            item.value = item.value.toLowerCase();\n                        } else if ( typeof item === 'string' ) {\n                            item = item.toLowerCase();\n                        }\n                    }\n\n                    return item;\n                });\n            });\n        }\n        lang.currentProvider = this;\n        callback(false, data);\n    },\n    toggleCase: function (  ) {\n        isUpper = !isUpper;\n    }\n};\n","'use strict';\n\nvar actions = require('../actions'),\n    lang = require('../../lang');\n\nmodule.exports = [\n    [\n        {value: '123', action: actions.numericKeyboard},\n        '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '(', ')',\n        {className: 'backspace', action: actions.backspace, value: ''}\n    ],\n    [\n        {value: '#&$', action: actions.symbolsKeyboard},\n        'q', 'w', 'e', 'r', 't', 'z', 'u', 'i', 'o', 'p', 'ü', ':',\n        {value: 'Reinigung', action: actions.clear}\n    ],\n    [\n        {className: 'uppercase', action: actions.uppercase, value: ''},\n        'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'ö', 'ä', ';',\n        {value: 'Fertig', action: actions.done, className: 'yellowText'}\n    ],\n    [\n        {value: lang.shortNames[lang.active], action: actions.changeLanguage, rowSpan: 2, className: 'lang'},\n        '@', 'y', 'x', 'c', 'v', 'b', 'n', 'm', '!', '?', '%', '-',\n        {value: 'Stornierung', action: actions.cancel, className: 'cancel'}\n    ],\n    [\n        ',', '.', '/',\n        {value: 'Space', action: actions.space, colSpan: 5, className: 'blueText'},\n        '_',\n        {value: '', action: actions.moveCaretToLeft, className: 'arrow left'},\n        {value: '', action: actions.moveCaretToRight, className: 'arrow right'},\n        {value: '', action: actions.moveCaretToStart, className: 'arrow start'},\n        {value: '', action: actions.moveCaretToEnd, className: 'arrow end'}\n    ]\n];\n","'use strict';\n\nvar actions = require('../actions'),\n    lang = require('../../lang');\n\nmodule.exports = [\n    [\n        {value: '123', action: actions.numericKeyboard},\n        '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '(', ')',\n        {className: 'backspace', action: actions.backspace, value: ''}\n    ],\n    [\n        {value: '#&$', action: actions.symbolsKeyboard},\n        'q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', '*', ':',\n        {value: 'Clear', action: actions.clear}\n    ],\n    [\n        {className: 'uppercase', action: actions.uppercase, value: ''},\n        'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', '~', '%', ';',\n        {value: 'Enter', action: actions.done, className: 'yellowText'}\n    ],\n    [\n        {value: lang.shortNames[lang.active], action: actions.changeLanguage, rowSpan: 2, className: 'lang'},\n        '@', 'z', 'x', 'c', 'v', 'b', 'n', 'm', '!', '`', '?', '-',\n        {value: 'Cancel', action: actions.cancel, className: 'cancel'}\n    ],\n    [\n        ',', '.', '/',\n        {value: 'Space', action: actions.space, colSpan: 5, className: 'blueText'},\n        '_',\n        {value: '', action: actions.moveCaretToLeft, className: 'arrow left'},\n        {value: '', action: actions.moveCaretToRight, className: 'arrow right'},\n        {value: '', action: actions.moveCaretToStart, className: 'arrow start'},\n        {value: '', action: actions.moveCaretToEnd, className: 'arrow end'}\n    ]\n];\n","'use strict';\n\nvar actions = require('../actions'),\n    lang = require('../../lang');\n\nmodule.exports = [\n    [\n        {value: '123', action: actions.numericKeyboard},\n        '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '(', ')',\n        {className: 'backspace', action: actions.backspace, value: ''}\n    ],\n    [\n        {value: '#&$', action: actions.symbolsKeyboard},\n        'q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'ç', ':',\n        {value: 'Limpieza', action: actions.clear}\n    ],\n    [\n        {className: 'uppercase', action: actions.uppercase, value: ''},\n        'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'ñ', '`', ';',\n        {value: 'Listo', action: actions.done, className: 'yellowText'}\n    ],\n    [\n        {value: lang.shortNames[lang.active], action: actions.changeLanguage, rowSpan: 2, className: 'lang'},\n        '@', 'z', 'x', 'c', 'v', 'b', 'n', 'm', '!', '%', '?', '-',\n        {value: 'Cancelación', action: actions.cancel, className: 'cancel'}\n    ],\n    [\n        ',', '.', '/',\n        {value: 'Brecha', action: actions.space, colSpan: 5, className: 'blueText'},\n        '_',\n        {value: '', action: actions.moveCaretToLeft, className: 'arrow left'},\n        {value: '', action: actions.moveCaretToRight, className: 'arrow right'},\n        {value: '', action: actions.moveCaretToStart, className: 'arrow start'},\n        {value: '', action: actions.moveCaretToEnd, className: 'arrow end'}\n    ]\n];\n","'use strict';\n\nvar actions = require('../actions'),\n    lang = require('../../lang');\n\nmodule.exports = [\n    [\n        {value: '123', action: actions.numericKeyboard},\n        '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '(', ')',\n        {className: 'backspace', action: actions.backspace, value: ''}\n    ],\n    [\n        {value: '#&$', action: actions.symbolsKeyboard},\n        'q', 'w', 'e', 'r', 't', 'z', 'u', 'i', 'o', 'p', 'ü', 'õ',\n        {value: 'Selge', action: actions.clear}\n    ],\n    [\n        {className: 'uppercase', action: actions.uppercase, value: ''},\n        'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'ö', 'ä', ':',\n        {value: 'Sisenema', action: actions.done, className: 'yellowText'}\n    ],\n    [\n        {value: lang.shortNames[lang.active], action: actions.changeLanguage, rowSpan: 2, className: 'lang'},\n        '@', 'y', 'x', 'c', 'v', 'b', 'n', 'm', '!', '?', '%', '-',\n        {value: 'Loobu', action: actions.cancel, className: 'cancel'}\n    ],\n    [\n        ',', '.', '/',\n        {value: 'Ruumi', action: actions.space, colSpan: 5, className: 'blueText'},\n        '_',\n        {value: '', action: actions.moveCaretToLeft, className: 'arrow left'},\n        {value: '', action: actions.moveCaretToRight, className: 'arrow right'},\n        {value: '', action: actions.moveCaretToStart, className: 'arrow start'},\n        {value: '', action: actions.moveCaretToEnd, className: 'arrow end'}\n    ]\n];\n","'use strict';\n\nvar actions = require('../actions'),\n    lang = require('../../lang');\n\nmodule.exports = [\n    [\n        {value: '123', action: actions.numericKeyboard},\n        '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '(', ')',\n        {className: 'backspace', action: actions.backspace, value: ''}\n    ],\n    [\n        {value: '#&$', action: actions.symbolsKeyboard},\n        'a', 'z', 'e', 'r', 't', 'u', 'i', 'o', 'p', '^', '?', ':',\n        {value: 'Nettoyage', action: actions.clear}\n    ],\n    [\n        {className: 'uppercase', action: actions.uppercase, value: ''},\n        'q', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'ù', ';',\n        {value: 'Prét', action: actions.done, className: 'yellowText'}\n    ],\n    [\n        {value: lang.shortNames[lang.active], action: actions.changeLanguage, rowSpan: 2, className: 'lang'},\n        'w', 'x', 'c', 'v', 'b', 'n', 'é', 'ê', 'ç', 'à', '%', '-',\n        {value: 'Annuler', action: actions.cancel, className: 'cancel'}\n    ],\n    [\n        ',', '.', '/',\n        {value: 'Ékart', action: actions.space, colSpan: 5, className: 'blueText'},\n        '_',\n        {value: '', action: actions.moveCaretToLeft, className: 'arrow left'},\n        {value: '', action: actions.moveCaretToRight, className: 'arrow right'},\n        {value: '', action: actions.moveCaretToStart, className: 'arrow start'},\n        {value: '', action: actions.moveCaretToEnd, className: 'arrow end'}\n    ]\n];\n","'use strict';\n\nvar actions = require('../actions'),\n    lang = require('../../lang');\n\nmodule.exports = [\n    [\n        {value: '123', action: actions.numericKeyboard},\n        '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '(', ')',\n        {className: 'backspace', action: actions.backspace, value: ''}\n    ],\n    [\n        {value: '#&$', action: actions.symbolsKeyboard},\n        'ū', 'g', 'j', 'r', 'm', 'v', 'n', 'z', 'ē', 'č', 'ž', 'h', // ':' 'ķ'\n        {value: 'Skaidrs', action: actions.clear}\n    ],\n    [\n        {className: 'uppercase', action: actions.uppercase, value: ''},\n        'š', 'u', 's', 'i', 'l', 'd', 'a', 't', 'e', 'c', 'ķ', ':',\n        {value: 'Levadiet', action: actions.done, className: 'yellowText'}\n    ],\n    [\n        {value: lang.shortNames[lang.active], action: actions.changeLanguage, rowSpan: 2, className: 'lang'},\n        '@', 'ģ', 'ņ', 'b', 'ī', 'k', 'p', 'o', 'ā', 'ļ', '?', '-',\n        {value: 'Atcelt', action: actions.cancel, className: 'cancel'}\n    ],\n    [\n        ',', '.', '/',\n        {value: 'Telpa', action: actions.space, colSpan: 5, className: 'blueText'},\n        '_',\n        {value: '', action: actions.moveCaretToLeft, className: 'arrow left'},\n        {value: '', action: actions.moveCaretToRight, className: 'arrow right'},\n        {value: '', action: actions.moveCaretToStart, className: 'arrow start'},\n        {value: '', action: actions.moveCaretToEnd, className: 'arrow end'}\n    ]\n];\n","'use strict';\n\nvar actions = require('../actions'),\n    lang = require('../../lang');\n\nmodule.exports = [\n    [\n        {value: '123', action: actions.numericKeyboard},\n        '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '(', ')',\n        {className: 'backspace', action: actions.backspace, value: ''}\n    ],\n    [\n        {value: '#&$', action: actions.symbolsKeyboard},\n        'й', 'ц', 'у', 'к', 'е', 'н', 'г', 'ш', 'щ', 'з', 'х', ':',\n        {value: 'Очистить', action: actions.clear}\n    ],\n    [\n        {className: 'uppercase', action: actions.uppercase, value: ''},\n        'ф', 'ы', 'в', 'а', 'п', 'р', 'о', 'л', 'д', 'ж', 'э', ';',\n        {value: 'Готово', action: actions.done, className: 'yellowText'}\n    ],\n    [\n        {value: lang.shortNames[lang.active], action: actions.changeLanguage, rowSpan: 2, className: 'lang'},\n        'я', 'ч', 'с', 'м', 'и', 'т', 'ь', 'б', 'ю', 'ъ', 'ё', '-',\n        {value: 'Отмена', action: actions.cancel, className: 'cancel'}\n    ],\n    [\n        ',', '.', '/',\n        {value: 'Пробел', action: actions.space, colSpan: 5, className: 'blueText'},\n        '_',\n        {value: '', action: actions.moveCaretToLeft, className: 'arrow left'},\n        {value: '', action: actions.moveCaretToRight, className: 'arrow right'},\n        {value: '', action: actions.moveCaretToStart, className: 'arrow start'},\n        {value: '', action: actions.moveCaretToEnd, className: 'arrow end'}\n    ]\n];\n","'use strict';\n\nvar actions = require('../actions'),\n    lang = require('../../lang');\n\nmodule.exports = [\n    [\n        {value: '123', action: actions.numericKeyboard},\n        '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '(', ')',\n        {className: 'backspace', action: actions.backspace, value: ''}\n    ],\n    [\n        {value: '#&$', action: actions.symbolsKeyboard},\n        'й', 'ц', 'у', 'к', 'е', 'н', 'г', 'ш', 'щ', 'з', 'х', ':',\n        {value: 'Очистити', action: actions.clear}\n    ],\n    [\n        {className: 'uppercase', action: actions.uppercase, value: ''},\n        'ф', 'i', 'в', 'а', 'п', 'р', 'о', 'л', 'д', 'ж', 'э', ';',\n        {value: 'Готово', action: actions.done, className: 'yellowText'}\n    ],\n    [\n        {value: lang.shortNames[lang.active], action: actions.changeLanguage, rowSpan: 2, className: 'lang'},\n        'я', 'ч', 'с', 'м', 'и', 'т', 'ь', 'б', 'ю', 'ґ', 'ї', '-',\n        {value: 'Скасувати', action: actions.cancel, className: 'cancel'}\n    ],\n    [\n        ',', '.', '/',\n        {value: 'Пробiл', action: actions.space, colSpan: 5, className: 'blueText'},\n        '_',\n        {value: '', action: actions.moveCaretToLeft, className: 'arrow left'},\n        {value: '', action: actions.moveCaretToRight, className: 'arrow right'},\n        {value: '', action: actions.moveCaretToStart, className: 'arrow start'},\n        {value: '', action: actions.moveCaretToEnd, className: 'arrow end'}\n    ]\n];\n","'use strict';\n\nvar lang = require('../lang'),\n    actions = require('./actions');\n\n\nmodule.exports = {\n    get: function ( direction, callback ) {\n        lang.currentProvider = this;\n        callback(false, [\n            [\n                '1', '2', '3',\n                {className: 'backspace', action: actions.backspace}\n            ],\n            [\n                '4', '5', '6',\n                {value: gettext('Clear'), action: actions.clear}\n            ],\n            [\n                '7', '8', '9',\n                {value: gettext('Enter'), action: actions.done, className: 'yellowText'}\n            ],\n            [\n                {value: 'ABC', action: actions.qwertyKeyboard},\n                '0', '.',\n                {value: gettext('Cancel'), action: actions.cancel, className: 'cancel'}\n            ]\n        ]);\n    }\n};\n","'use strict';\n\nvar actions = require('./actions'),\n    lang = require('../lang');\n\n\nmodule.exports = {\n    get: function ( direction, callback ) {\n        lang.currentProvider = this;\n        callback(false, [\n            [\n                {value: '123', action: actions.numericKeyboard},\n                '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '(', ')',\n                {className: 'backspace', action: actions.backspace}\n            ],\n            [\n                {value: 'ABC', action: actions.qwertyKeyboard},\n                '!', '@', '#', '$', '%', '^', '?', '*', '\\\\', '-', '+', ':',\n                {value: gettext('Clear'), action: actions.clear}\n            ],\n            [\n                'α', '©', '\"', '№', '¤', '«', '§', '&', '{', '}', '=', 'β', ';',\n                {value: gettext('Enter'), action: actions.done, className: 'yellowText'}\n            ],\n            [\n                {value: lang.shortNames[lang.active], action: actions.changeLanguage, rowSpan: 2, className: 'lang'},\n                '|', '¢', '¥', '£', '€', '[', ']', '<', '>', '\\'', '…', '—',\n                {value: gettext('Cancel'), action: actions.cancel, className: 'cancel'}\n            ],\n            [\n                ',', '.', '/',\n                {value: gettext('Space'), action: actions.space, colSpan: 5, className: 'blueText'},\n                '_',\n                {value: '', action: actions.moveCaretToLeft, className: 'arrow left'},\n                {value: '', action: actions.moveCaretToRight, className: 'arrow right'},\n                {value: '', action: actions.moveCaretToStart, className: 'arrow start'},\n                {value: '', action: actions.moveCaretToEnd, className: 'arrow end'}\n            ]\n        ]);\n    }\n};\n","/**\n * Main application entry point.\n */\n\n'use strict';\n\nvar app = require('mag-app'),\n    config = require('./config');\n\n\nif ( PLATFORM === 'MAG' ) {\n    app.numpad = false;\n    app.onVkNeedReposition = function ( type ) {\n        var sizes = config[screen.height].main,\n            left = sizes.left,\n            top = sizes.top,\n            input;\n\n        if ( app.numpad ) {\n            sizes = config[screen.height].numpad;\n            left = sizes.left;\n            top = sizes.top;\n        }\n\n        /* eslint new-cap: 0 */\n        input = JSON.parse(window.top.stbWindowMgr.GetFocusedInputInfo());\n        input.result.y = parseInt(input.result.y, 10);\n        input.result.h = parseInt(input.result.h, 10);\n        top = input.result.y + input.result.h;\n        if ( top === 0 ) {\n            top = screen.height - sizes.height - sizes.top;\n        } else if ( top + sizes.height > window.screen.height ) {\n            // move to bottom\n            top = input.result.y - sizes.height;\n        }\n\n        if ( !type ) {\n            type = input.result.positionHint;\n        }\n\n        switch ( type ) {\n            case 'topleft':\n            case 'topright':\n            case 'top':\n                top = sizes.top;\n                break;\n            case 'bottomleft':\n            case 'bottomright':\n            case 'bottom':\n                top = screen.height - sizes.height - sizes.top;\n                break;\n\n            case 'none':\n            default:\n                // automatic\n                break;\n        }\n\n        window.top.stbWebWindow.SetGeometry(left, top, sizes.width, sizes.height);\n    };\n\n\n    if ( window.top.stbEvent ) {\n        window.top.stbEvent.onVkNeedReposition = app.onVkNeedReposition;\n    } else {\n        window.top.stbEvent = {onVkNeedReposition: app.onVkNeedReposition};\n    }\n}\n\n\n// everything is ready\napp.once('load', function () {\n    var lang = require('./modules/lang'),\n        list = window.core.plugins.keyboardLayouts.get(),\n        codes = [],\n        fullNames = [],\n        shortNames = [];\n\n    console.log(JSON.stringify(list));\n    // window.top.confirm(1);\n    if ( list && list.length > 0 ) {\n        list.forEach(function ( code ) {\n            var index = lang.supportedCodes.indexOf(code);\n\n            if ( index !== -1 ) {\n                codes.push(lang.supportedCodes[index]);\n                fullNames.push(lang.supportedFullNames[index]);\n                shortNames.push(lang.supportedShortNames[index]);\n            }\n        });\n\n        lang.codes = codes;\n        lang.fullNames = fullNames;\n        lang.shortNames = shortNames;\n    }\n\n    lang.active = lang.codes.indexOf(core.environment.language);\n\n    if ( lang.active === -1 ) {\n        lang.active = 0;\n    }\n    if ( PLATFORM === 'MAG' ) {\n        window.parent.gSTB.SetInputLang(lang.codes[lang.active]);\n    }\n\n    require('spa-gettext').load({name: core.environment.language}, function ( error ) {\n        if ( error ) {\n            // make it global\n            // window.ngettext = window.gettext  = window._ = function ( msgId ) {\n            //     return msgId;\n            // };\n            // window.pgettext = function ( context, msgId ) {\n            //     return msgId;\n            // };\n        }\n\n        if ( PLATFORM === 'MAG' ) {\n            // load pages\n            app.pages = {\n                main: require('./pages/main'),\n                qwerty: require('./pages/qwerty')\n            };\n\n            // show main page\n            if ( app.query.standalone && app.query.standalone === 'true' ) {\n                app.route(app.pages.qwerty);\n            } else {\n                app.route(app.pages.main);\n            }\n        } else {\n            app.pages = {\n                main: require('./pages/main')\n            };\n            app.route(app.pages.main);\n        }\n\n        if ( PLATFORM === 'MAG' ) {\n            if ( window.top.location.href.indexOf('load=true') !== -1 ) {\n                window.top.stbWebWindow.close();\n                // window.top.gSTB.HideVirtualKeyboard();\n                // window.top.stbWindowMgr.hideWindow(window.top.stbWebWindow.windowId());\n                // window.top.stbWindowMgr.windowHide(window.top.stbWebWindow.windowId());\n            }\n        }\n\n        // send ready event\n        app.ready();\n    });\n\n    //if ( DEVELOP ) {\n    //    window.core.addListener('keydown:76', function () {\n    //        if ( app.visible ) {\n    //            window.core.call('hide');\n    //            window.core.call('blur');\n    //            app.visible = false;\n    //        } else {\n    //            app.visible = true;\n    //            window.core.call('show');\n    //            window.core.call('focus');\n    //        }\n    //    });\n    //}\n});\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app    = require('spa-app/lib/core'),\n    events = require('spa-app/lib/events');\n\n\n// get instance\nwindow.core = window.parent.getCoreInstance(window, app);\n\n// shims\nrequire('stb-shim-classlist');\n\n// apply geometry\nrequire('stb-app/lib/metrics');\n\n// load sdk css\nrequire('stb-app/lib/css')('sdk');\n\n// load theme css\nrequire('./css');\n\n// load app css\nrequire('stb-app/lib/css')('app');\n\n/**\n * Specify platform name\n *\n * @type {string}\n */\napp.platform = 'mag';\n\n/**\n * Show app.\n */\napp.ready = function () {\n    // if ( this.events['show'] ) {\n    //     this.emit('show');\n    // }\n    window.core.call('app:ready');\n};\n\n\n/**\n * Exit from app.\n * Destroy all application instance.\n * If callback function provided, and callback returns boolean 'true', application will stay alive.\n *\n * @fires module:/stb/app#exit\n */\napp.exit = function () {\n    if ( app.events['exit'] ) {\n        app.emit('exit');\n    }\n\n    core.call('exit');\n};\n\n\nevents.load = function ( event ) {\n    //window.core = window.parent.getCoreInstanse(window, app);\n    document.body.setAttribute('platform', app.platform);\n\n    if ( core.ready ) {\n        if ( app.events['load'] ) {\n            // notify listeners\n            app.emit('load', {});\n        }\n    } else {\n        core.once('load', function () {\n            //core.ready = true;\n            if ( app.events[event.type] ) {\n                // notify listeners\n                app.emit(event.type, event);\n            }\n        });\n    }\n};\n\n\n// activate development mechanisms and tools\nif ( DEVELOP ) {\n    //require('stb-develop');\n    require('./develop/main');\n} else {\n    // disable context menu\n    events.contextmenu = function ( event ) {\n        event.preventDefault();\n    };\n}\n\n\n//apply DOM events\nObject.keys(events).forEach(function ( name ) {\n    window.addEventListener(name, events[name]);\n});\n\n\n// new way of string handling\n// all strings are in UTF-16\n// since stbapp 2.18\n// if ( window.gSTB && gSTB.SetNativeStringMode ) {\n//     /* eslint new-cap: 0 */\n//     gSTB.SetNativeStringMode(true);\n// }\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nmodule.exports = {\n    /**\n     * Parse the given location search string into object.\n     *\n     * @param {string} query string to parse\n     *\n     * @return {Object.<string, string>} result data\n     */\n    parse: function ( query ) {\n        var data = {};\n\n        // parse and fill the data\n        query.split('&').forEach(function ( part ) {\n            part = part.split('=');\n            // valid number on params\n            if ( part.length === 2 ) {\n                data[part[0]] = decodeURIComponent(part[1]);\n            }\n        });\n\n        return data;\n    },\n\n\n    /**\n     * Make uri query part in a string form.\n     *\n     * @param {Object} params data to stringify\n     *\n     * @return {string} query string\n     */\n    stringify: function ( params ) {\n        var data = [];\n\n        Object.keys(params).forEach(function ( name ) {\n            data.push(name + '=' + encodeURIComponent(params[name]));\n        });\n\n        return data.join('&');\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('./core');\n\n\n// public\nmodule.exports = {\n    DOMContentLoaded: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // there are some listeners\n        if ( app.events['dom'] ) {\n            // notify listeners\n            app.emit('dom', event);\n            //console.log('DOMContentLoaded');\n        }\n    },\n\n    /**\n     * The load event is fired when a resource and its dependent resources have finished loading.\n     *\n     * Control flow:\n     *   1. Global handler.\n     *   2. Each page handler.\n     *   3. Application DONE event.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/load\n     *\n     * @param {Event} event generated object with event data\n     */\n    load: function ( event ) {\n        //var path;\n\n        //debug.event(event);\n        //console.log(event);\n\n        // time mark\n        //app.data.time.load = event.timeStamp;\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' load', 'green');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n\n        // time mark\n        //app.data.time.done = +new Date();\n\n        // everything is ready\n        // and there are some listeners\n        // if ( app.events['done'] ) {\n        //     // notify listeners\n        //     app.emit('done', event);\n        // }\n    },\n\n    /**\n     * The unload event is fired when the document or a child resource is being unloaded.\n     *\n     * Control flow:\n     *   1. Each page handler.\n     *   2. Global handler.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/unload\n     *\n     * @param {Event} event generated object with event data\n     */\n    unload: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' unload', 'red');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n    },\n\n    /**\n     * The error event is fired when a resource failed to load.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/error\n     *\n     * @param {Event} event generated object with event data\n     */\n    error: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n        //debug.fail('app event: ' + event.message, event, {tags: [event.type, 'event']});\n        console.error('app event: ' + event.message, event);\n    },\n\n    /**\n     * The keydown event is fired when a key is pressed down.\n     * Set event.stop to true in order to prevent bubbling.\n     *\n     * Control flow:\n     *   1. Current active component on the active page.\n     *   2. Current active page itself.\n     *   3. Application.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keydown\n     *\n     * @param {Event} event generated object with event data\n     */\n    keydown: function ( event ) {\n        var page = app.activePage,\n            eventLocal = {\n                code: event.keyCode,\n                stop: false\n            },\n            activeComponent;\n\n        if ( DEVELOP ) {\n            if ( !page ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        // filter phantoms\n        //if ( event.keyCode === 0 ) { return; }\n\n        // combined key code\n        //event.code = event.keyCode;\n\n        // apply key modifiers\n        if ( event.ctrlKey )  { eventLocal.code += 'c'; }\n        if ( event.altKey )   { eventLocal.code += 'a'; }\n        if ( event.shiftKey ) { eventLocal.code += 's'; }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + eventLocal.code, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + eventLocal.code, event);\n\n        // page.activeComponent can be set to null in event handles\n        activeComponent = page.activeComponent;\n\n        // current component handler\n        if ( activeComponent && activeComponent !== page ) {\n            // component is available and not page itself\n            if ( activeComponent.events[event.type] ) {\n                // there are some listeners\n                activeComponent.emit(event.type, eventLocal, event);\n            }\n\n            // todo: bubble event recursively\n            // bubbling\n            if (\n                !eventLocal.stop &&\n                activeComponent.propagate &&\n                activeComponent.parent &&\n                activeComponent.parent.events[event.type]\n            ) {\n                activeComponent.parent.emit(event.type, eventLocal, event);\n            }\n        }\n\n        // page handler\n        if ( !eventLocal.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, eventLocal, event);\n            }\n\n            // global app handler\n            if ( !event.stop ) {\n                // not prevented\n                if ( app.events[event.type] ) {\n                    // there are some listeners\n                    app.emit(event.type, eventLocal, event);\n                }\n            }\n        }\n\n        //// suppress non-printable keys in stb device (not in your browser)\n        //if ( app.data.host && keyCodes[event.code] ) {\n        //    event.preventDefault();\n        //}\n    },\n\n    /**\n     * The keypress event is fired when press a printable character.\n     * Delivers the event only to activeComponent at active page.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keypress\n     *\n     * @param {Event} event generated object with event data\n     * @param {string} event.char entered character\n     */\n    keypress: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + event.key, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + event.key, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n    },\n\n    /**\n     * The click event is fired when a pointing device button (usually a mouse button) is pressed and released on a single element.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/click\n     *\n     * @param {Event} event generated object with event data\n     */\n    /*click: function ( event ) {\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n     },*/\n\n    /**\n     * The contextmenu event is fired when the right button of the mouse is clicked (before the context menu is displayed),\n     * or when the context menu key is pressed (in which case the context menu is displayed at the bottom left of the focused\n     * element, unless the element is a tree, in which case the context menu is displayed at the bottom left of the current row).\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/contextmenu\n     *\n     * @param {Event} event generated object with event data\n     */\n    // contextmenu: function ( event ) {\n    //     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n    //\n    //     if ( !DEVELOP ) {\n    //         // disable right click in release mode\n    //         event.preventDefault();\n    //     }\n    // },\n\n    /*contextmenu: function ( event ) {\n     //var kbEvent = {}; //Object.create(document.createEvent('KeyboardEvent'));\n\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n\n     //kbEvent.type    = 'keydown';\n     //kbEvent.keyCode = 8;\n\n     //debug.log(kbEvent.type);\n\n     //globalEventListenerKeydown(kbEvent);\n     //var event = document.createEvent('KeyboardEvent');\n     //event.initEvent('keydown', true, true);\n\n     //document.dispatchEvent(kbEvent);\n\n     if ( !DEVELOP ) {\n     // disable right click in release mode\n     event.preventDefault();\n     }\n     },*/\n\n    /**\n     * The wheel event is fired when a wheel button of a pointing device (usually a mouse) is rotated.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel\n     *\n     * @param {Event} event generated object with event data\n     */\n    mousewheel: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n\n        // page handler\n        if ( !event.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, event);\n            }\n        }\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint-disable */\n\n'use strict';\n\n\nif ( !document.documentElement.classList ) {\n    var prototype = Array.prototype,\n        indexOf   = prototype.indexOf,\n        slice     = prototype.slice,\n        push      = prototype.push,\n        splice    = prototype.splice,\n        join      = prototype.join;\n\n    window.DOMTokenList = function ( el ) {\n        this._element = el;\n        if (el.className !== this._classCache) {\n            this._classCache = el.className;\n            if (!this._classCache) { return; }\n            var classes = this._classCache.replace(/^\\s+|\\s+$/g,'').split(/\\s+/),\n                i;\n            for (i = 0; i < classes.length; i++) {\n                push.call(this, classes[i]);\n            }\n        }\n    };\n\n    window.DOMTokenList.prototype = {\n        add: function ( token ) {\n            if(this.contains(token)) { return; }\n            push.call(this, token);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        contains: function ( token ) {\n            return indexOf.call(this, token) !== -1;\n        },\n\n        item: function ( index ) {\n            return this[index] || null;\n        },\n\n        remove: function ( token ) {\n            var i = indexOf.call(this, token);\n            if (i === -1) {\n                return;\n            }\n            splice.call(this, i, 1);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        toString: function () {\n            return join.call(this, ' ');\n        },\n\n        toggle: function ( token ) {\n            if (!this.contains(token)) {\n                this.add(token);\n            } else {\n                this.remove(token);\n            }\n            return this.contains(token);\n        }\n    };\n\n    Object.defineProperty(Element.prototype, 'classList', {\n        get: function () {\n            return new window.DOMTokenList(this);\n        }\n    });\n}\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    metrics = require('app:metrics');\n\n\n// global link\napp.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\napp.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\napp.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n\n// public\n//module.exports = app;\n","'use strict';\n\nmodule.exports = {\n    480: {\n        // screen base dimension\n        height: 480,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  32,\n        availLeft:   48\n        // project-specific vars\n        // put here ...\n    },\n\n    576: {\n        // screen base dimension\n        height: 576,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  26,\n        availLeft:   54\n        // project-specific vars\n        // put here ...\n    },\n\n    720: {\n        // screen base dimension\n        height: 720,\n        width:  1280,\n        // safe zone margins\n        availTop:    30,\n        availBottom: 30,\n        availRight:  40,\n        availLeft:   40\n        // project-specific vars\n        // put here ...\n    },\n\n    1080: {\n        // screen base dimension\n        height: 1080,\n        width:  1920,\n        // safe zone margins\n        availTop:    45,\n        availBottom: 45,\n        availRight:  60,\n        availLeft:   60\n        // project-specific vars\n        // put here ...\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core'),\n    //metrics = require('app:metrics'),\n    linkCSS;\n\n\n//window.core = window.parent.getCoreInstance(window, app);\n\n\nlinkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = window.core.theme.path + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);\n\n\n// public\nmodule.exports = linkCSS;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    Gettext = require('cjs-gettext'),\n    loader  = new Emitter();\n\n\n/**\n * Wrap the given data with gettext instance\n * and export methods to the global scope.\n *\n * @param {Object} [data] localization data\n *\n * @return {Gettext} gettext instance\n */\nfunction prepare ( data ) {\n    var gettext = new Gettext(data);\n\n    // make it global\n    window.gettext  = window._ = gettext.gettext;\n    window.pgettext = gettext.pgettext;\n    window.ngettext = gettext.ngettext;\n\n    return gettext;\n}\n\n\n/**\n * Main application language\n */\nloader.defaultLanguage = 'en';\n\n\n/**\n * Simple gettext implementation.\n *\n * @param {Object} config options\n * @param {string} [config.path=lang] relative path to project root\n * @param {string} config.name language name\n * @param {string} [config.ext=json] language file extension\n * @param {function} callback hook on ready\n *\n * @return {boolean} flag is ajax request was made\n */\nloader.load = function ( config, callback ) {\n    var xhr;\n\n    if ( DEVELOP ) {\n        if ( !config.name || typeof config.name !== 'string' ) {\n            throw new Error(__filename + ': config.name must be a nonempty string');\n        }\n        if ( typeof callback !== 'function' ) {\n            throw new Error(__filename + ': wrong callback type');\n        }\n    }\n\n    // defaults\n    config.ext  = config.ext  || 'json';\n    config.path = config.path || 'lang';\n\n    // is it necessary to request a localization file?\n    if ( config.name === loader.defaultLanguage ) {\n        // no\n        prepare();\n        callback(null);\n\n        return false;\n    }\n\n    // yes\n    xhr = new XMLHttpRequest();\n\n    xhr.onload = function () {\n        var json;\n\n        try {\n            json = JSON.parse(xhr.responseText);\n\n            prepare(json);\n            callback(null);\n\n            // there are some listeners\n            if ( loader.events['load'] ) {\n                // notify listeners\n                loader.emit('load');\n            }\n        } catch ( error ) {\n            xhr.onerror(error);\n        }\n    };\n\n    xhr.ontimeout = xhr.onerror = function ( error ) {\n        prepare();\n        callback(error);\n\n        // there are some listeners\n        if ( loader.events['error'] ) {\n            // notify listeners\n            loader.emit('error', error);\n        }\n    };\n\n    xhr.open('GET', config.path + '/' + config.name + '.' + config.ext, true);\n    xhr.send(null);\n\n    return true;\n};\n\n\n// public\nmodule.exports = loader;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Translations handler.\n *\n * @constructor\n *\n * @param {Object} config init parameters\n */\nfunction Gettext ( config ) {\n    var data, meta;\n\n    // sanitize\n    config   = config || {};\n    data     = config.data || {};\n    data[''] = data[''] || {};\n\n    // shortcut\n    meta = config.meta;\n\n    /**\n     * Display the native language translation of a textual message.\n     *\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.gettext = function ( msgId ) {\n        return data[''][msgId] || msgId;\n    };\n\n\n    /**\n     * The \"p\" in \"pgettext\" stands for \"particular\": fetches a particular translation of the textual message.\n     *\n     * @param {string} context message context\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.pgettext = function ( context, msgId ) {\n        return data[context] && data[context][msgId] || msgId;\n    };\n\n\n    /**\n     * Display the native language translation of a textual message whose grammatical form depends on a number.\n     *\n     * @param {string} msgId textual message in a singular form\n     * @param {string} plural textual message in a plural form\n     * @param {number} value message number\n     *\n     * @return {string} translated text\n     */\n    this.ngettext = function ( msgId, plural, value ) {\n        /* eslint no-unused-vars: 0 */\n        /* eslint no-eval: 0 */\n        /* eslint id-length: 0 */\n        var n, evalResult;\n\n        if ( DEVELOP ) {\n            if ( Number(value) !== value ) {\n                throw new Error(__filename + ': value must be a number');\n            }\n        }\n\n        if ( data && meta && data[''][msgId] ) {\n            evalResult = eval('n = ' + value + '; ' + meta.plural);\n\n            if ( typeof evalResult === 'boolean' ) {\n                evalResult = +evalResult;\n            }\n\n            // translation\n            return data[''][msgId][evalResult];\n        }\n\n        // english\n        return value === 1 ? msgId : plural;\n    };\n}\n\n\n// correct constructor name\nGettext.prototype.constructor = Gettext;\n\n\n// public\nmodule.exports = Gettext;\n","/**\n * Main page implementation.\n */\n\n'use strict';\n\n/* eslint no-lonely-if: 0 */\nvar virtualInput = PLATFORM === 'TIZEN' || VIRTUAL,\n\n    Input = virtualInput ? require('../modules/input') : require('../modules/spa-component-input'),\n\n    Page      = require('stb-component-page'),\n    Grid      = require('stb-component-grid'),\n    ScrollBar = require('stb-component-scrollbar'),\n    Button    = require('stb-component-button'),\n\n    RadioList = require('mag-component-radio-list'),\n    Modal     = require('mag-component-modal'),\n\n    keys = require('stb-keys'),\n\n    lang = require('../modules/lang'),\n\n    qwertyProvider  = require('../modules/keyboards/qwerty'),\n    numericProvider = require('../modules/keyboards/numeric'),\n    symbolsProvider = require('../modules/keyboards/symbols'),\n\n    actions = require('../modules/keyboards/actions'),\n\n    page  = new Page({$node: window.pageMain}),\n    input = new Input({$node: window.pageMainInput}),\n\n    lastInputCaretPosition = 0,\n\n    lastIntent = null,\n\n    verticalNavigation = {\n        active: 0,\n        list: []\n    },\n    /**\n     * Keyboard grid\n     * @type Grid\n     */\n    keyboard,\n\n    /**\n     * Popup with languages radio list\n     * @type Modal\n     */\n    popup = new Modal({\n        parent: page,\n        visible: false,\n        title: gettext('Choose language')\n    }),\n\n    /**\n     * Scrollbar for languages radio list.\n     */\n    scrollBar = new ScrollBar({\n        value: 0,\n        viewSize: 5,\n        type: ScrollBar.prototype.TYPE_VERTICAL\n    }),\n\n    /**\n     * Languages radio list\n     */\n    radioList = new RadioList({\n        parent: popup,\n        scroll: scrollBar,\n        cycle: true,\n        focusIndex: lang.active,\n        size: lang.fullNames.length > 5 ? 5 : lang.fullNames.length,\n        events: {\n            'click:item': function ( event ) {\n                lang.active = event.$item.value;\n                qwertyProvider.get(null, function ( error, data ) {\n                    var xIndex, yIndex;\n\n                    if ( !error ) {\n                        xIndex = keyboard.focusX;\n                        yIndex = keyboard.focusY;\n\n                        keyboard.init({\n                            data: data\n                        });\n                        keyboard.focusItem(keyboard.map[yIndex][xIndex]);\n                        popup.hide();\n                        keyboard.focus();\n                    }\n                });\n                //var v = ;\n                //actualSorting = v === 1 ? 'NAME' : v === 2 ? 'DATE' : v === 3 ? 'TYPE' : 'SIZE';\n                //\n                //reRenderList(mainPanelList, contentSort(actualSorting), 7, 7, listScroll, {focusIndex: 0});\n                //\n                //menuSortingItem.innerText = evt.$item.data.title;\n                //page.modals.modalMessageSort.hide();\n                //mainPanelSet.focus();\n                //leftPanelMenu.focus();\n            },\n            focus: function () {\n                popup.show();\n                input.$node.blur();\n            },\n            keydown: function ( event ) {\n                switch ( event.code ) {\n                    case keys.up:\n                    case keys.down:\n                    case keys.right:\n                    case keys.left:\n                    case keys.pageUp:\n                    case keys.pageDown:\n                    case keys.end:\n                        // cursor move only on arrow keys\n                        this.move(event.code);\n                        break;\n                    case keys.enter:\n                        setTimeout(function () {\n                            input.$node.focus();\n                        }, 0);\n                        // there are some listeners\n                        if ( this.events['click:item'] && this.$focusItem ) {\n                            // notify listeners\n                            this.emit('click:item', {$item: this.$focusItem, event: event});\n                        }\n                        break;\n\n                    case keys.back:\n                    case keys.home:\n                        setTimeout(function () {\n                            input.$node.focus();\n                        }, 0);\n                        event.stop = true;\n                        popup.hide();\n                        keyboard.focus();\n                        break;\n                }\n            }\n        },\n        data: lang.fullNames.map(function ( item, index ) {\n            return {\n                state: lang.active === index,\n                title: item + ' (' + lang.shortNames[index] + ')',\n                value: index\n            };\n        })\n    }),\n\n    /**\n     * Show/hide password text\n     */\n    button = new Button({\n        $node: window.pageMainButton,\n        visible: false,\n        value: 'Show password',\n        events: {\n            keydown: function ( event ) {\n                switch ( event.code ) {\n                    case keys.ok:\n                        this.emit('click');\n                        break;\n\n                    case keys.up:\n                        if ( !virtualInput ) {\n                            lastInputCaretPosition = input.getCaretPosition();\n                        }\n                        ++verticalNavigation.active;\n                        verticalNavigation.list[verticalNavigation.active].focus();\n                        break;\n\n                    case keys.down:\n                        if ( !virtualInput ) {\n                            lastInputCaretPosition = input.getCaretPosition();\n                        }\n                        --verticalNavigation.active;\n                        verticalNavigation.list[verticalNavigation.active].focus();\n                        break;\n                }\n            },\n            click: function () {\n                if ( virtualInput ) {\n                    if ( input.type === Input.prototype.TYPE_PASSWORD ) {\n                        input.init({\n                            value: input.value,\n                            type: Input.prototype.TYPE_TEXT\n                        });\n                        this.$text.innerText = gettext('Hide password');\n                    } else {\n                        input.init({\n                            value: input.value,\n                            type: Input.prototype.TYPE_PASSWORD\n                        });\n                        this.$text.innerText = gettext('Show password');\n                    }\n                } else {\n                    if ( input.$node.type === 'password' ) {\n                        input.$node.type = '';\n                        this.$text.innerText = gettext('Hide password');\n                    } else {\n                        input.$node.type = 'password';\n                        this.$text.innerText = gettext('Show password');\n                    }\n                }\n            }\n        }\n    });\n\n\nfunction done () {\n    window.core.call('hide');\n    window.core.call('blur');\n    if ( virtualInput ) {\n        lastIntent.emit('done', {value: input.value});\n        input.setValue('');\n    } else {\n        lastIntent.emit('done', {value: input.$node.value});\n        input.$node.value = '';\n    }\n    lastIntent.close();\n}\n\n\npopup.$body.appendChild(scrollBar.$node);\n\n\nqwertyProvider.get(null, function ( badSituatuion, data ) {\n    keyboard = new Grid({\n        parent: page,\n        $node: window.pageMainKeyboard,\n        data: data,\n        cycleX: true,\n        cycleY: false,\n        render: function ( $item, data ) {\n            if ( typeof data.value === 'undefined' ) {\n                $item.innerText = '';\n            } else {\n                $item.innerText = data.value;\n            }\n\n            if ( typeof data.className === 'undefined' ) {\n                if ( $item.className.indexOf('focus') === -1 ) {\n                    $item.className = 'item';\n                } else {\n                    $item.className = 'item focus';\n                }\n            } else {\n                $item.className += ' ' + data.className;\n            }\n        },\n        events: {\n            focus: function () {\n                if ( !virtualInput ) {\n                    if ( input.$node.value.length > 0 ) {\n                        input.$node.focus();\n                        setTimeout(function () {\n                            input.$node.selectionStart = input.$node.selectionEnd = lastInputCaretPosition;\n                        }, 0);\n                    } else {\n                        document.body.focus();\n                    }\n                }\n            },\n            overflow: function ( event ) {\n                if ( event.direction === keys.up ) {\n                    lastInputCaretPosition = input.getCaretPosition();\n                    ++verticalNavigation.active;\n                    verticalNavigation.list[verticalNavigation.active].focus();\n                }\n            },\n            'click:item': function ( event ) {\n                if ( typeof event.$item.data.action !== 'undefined' ) {\n                    switch ( event.$item.data.action ) {\n                        case actions.numericKeyboard:\n                            numericProvider.get(null, function ( error, data ) {\n                                if ( !error ) {\n                                    keyboard.$node.classList.add('small');\n                                    if ( virtualInput ) {\n                                        input.changeView('small', 'add');\n                                    } else {\n                                        input.$node.classList.add('small');\n                                    }\n                                    keyboard.init({\n                                        data: data\n                                    });\n                                }\n                            });\n                            break;\n\n                        case actions.symbolsKeyboard:\n                            symbolsProvider.get(null, function ( error, data ) {\n                                if ( !error ) {\n                                    keyboard.$node.classList.remove('small');\n                                    if ( virtualInput ) {\n                                        input.changeView('small', 'remove');\n                                    } else {\n                                        input.$node.classList.remove('small');\n                                    }\n                                    keyboard.init({\n                                        data: data\n                                    });\n                                }\n                            });\n                            break;\n\n                        case actions.qwertyKeyboard:\n                            qwertyProvider.get(null, function ( error, data ) {\n                                if ( !error ) {\n                                    keyboard.$node.classList.remove('small');\n                                    if ( virtualInput ) {\n                                        input.changeView('small', 'remove');\n                                    } else {\n                                        input.$node.classList.remove('small');\n                                    }\n                                    keyboard.init({\n                                        data: data\n                                    });\n                                }\n                            });\n                            break;\n\n                        case actions.uppercase:\n                            qwertyProvider.toggleCase();\n                            //isUpper = !isUpper;\n                            //if ( isUpper ) {\n                            //    event.$item.classList.add('enabled');\n                            //    event.$item.data.className = 'uppercase enabled'\n                            //} else {\n                            //    event.$item.classList.remove('enabled');\n                            //    event.$item.data.className = 'uppercase';\n                            //}\n                            qwertyProvider.get(null, function ( error, data ) {\n                                var xIndex, yIndex;\n\n                                if ( !error ) {\n                                    xIndex = keyboard.focusX;\n                                    yIndex = keyboard.focusY;\n\n                                    keyboard.init({data: data});\n                                    keyboard.focusItem(keyboard.map[yIndex][xIndex]);\n                                }\n                            });\n\n                            break;\n\n                        case actions.changeLanguage:\n                            radioList.focus();\n                            //++lang.active;\n                            //if ( lang.codes.length === lang.active ) {\n                            //    lang.active = 0;\n                            //}\n                            //if ( PLATFORM === 'MAG' ) {\n                            //    window.parent.gSTB.SetInputLang(lang.codes[lang.active]);\n                            //}\n                            //qwertyProvider.get(null, function ( error, data ) {\n                            //    var x = keyboard.focusX,\n                            //        y = keyboard.focusY;\n                            //\n                            //    keyboard.init({\n                            //        data: data\n                            //    });\n                            //    keyboard.focusItem(keyboard.map[y][x]);\n                            //});\n                            break;\n\n                        case actions.done:\n                            done();\n                            break;\n\n                        case actions.backspace:\n                            if ( PLATFORM === 'MAG' ) {\n                                lastInputCaretPosition = input.getCaretPosition() - 1;\n                            }\n                            input.removeChar(input.getCaretPosition() - 1);\n                            if ( PLATFORM === 'MAG' ) {\n                                input.setCaretPosition(lastInputCaretPosition);\n                            }\n                            break;\n\n                        case actions.space:\n                            if ( virtualInput ) {\n                                input.addChar(' ');\n                            } else {\n                                input.addChar(' ', input.getCaretPosition());\n                                ++lastInputCaretPosition;\n                                input.$node.blur();\n                                input.$node.focus();\n                                input.$node.selectionStart = input.$node.selectionEnd = lastInputCaretPosition;\n                            }\n                            break;\n                        case actions.cancel:\n                            lastIntent.close();\n                            window.core.call('hide');\n                            window.core.call('blur');\n                            if ( virtualInput ) {\n                                input.setValue('');\n                            } else {\n                                input.$node.value = '';\n                            }\n                            break;\n                        case actions.clear:\n                            input.setValue('');\n                            if ( !virtualInput ) {\n                                input.$node.focus();\n                            }\n                            break;\n                        case actions.moveCaretToLeft:\n                            input.setCaretPosition(input.getCaretPosition() - 1);\n                            lastInputCaretPosition = input.getCaretPosition();\n                            break;\n                        case actions.moveCaretToRight:\n                            input.setCaretPosition(input.getCaretPosition() + 1);\n                            lastInputCaretPosition = input.getCaretPosition();\n                            break;\n                        case actions.moveCaretToStart:\n                            input.setCaretPosition(0);\n                            lastInputCaretPosition = input.getCaretPosition();\n                            break;\n                        case actions.moveCaretToEnd:\n                            if ( virtualInput ) {\n                                input.setCaretPosition(input.value.length);\n                            } else {\n                                input.setCaretPosition(input.$node.value.length);\n                            }\n                            lastInputCaretPosition = input.getCaretPosition();\n                            break;\n                    }\n                } else if ( typeof event.$item.data.value !== 'undefined' ) {\n                    if ( virtualInput ) {\n                        input.addChar(event.$item.data.value, input.getCaretPosition());\n                    } else {\n                        input.addChar(event.$item.data.value, lastInputCaretPosition);\n                        ++lastInputCaretPosition;\n                        input.$node.blur();\n                        input.$node.focus();\n                        input.$node.selectionStart = input.$node.selectionEnd = lastInputCaretPosition;\n                    }\n                }\n            }\n        }\n    });\n});\n\npage.addListener('show', function () {\n    // keyboard.focus();\n\n    if ( !virtualInput ) {\n        setTimeout(function () {\n            input.$node.blur();\n        }, 0);\n    }\n\n    verticalNavigation = {\n        list: [keyboard, input],\n        active: 0\n    };\n});\n\n\n/* eslint complexity: 0 */\npage.addListener('keydown', function ( event, eventNative ) {\n    var char = null;\n\n    console.log('event.code: ' + event.code);\n    console.log('eventNative.keyCode: ' + eventNative.keyCode);\n\n    switch ( event.code ) {\n        case keys.back:\n        case keys.backspace:\n            if ( virtualInput ) {\n                if ( PLATFORM === 'TIZEN' && event.code === keys.back ) {\n                    lastIntent.close();\n                    window.core.call('hide');\n                    window.core.call('blur');\n                    if ( virtualInput ) {\n                        input.setValue('');\n                    } else {\n                        input.$node.value = '';\n                    }\n                } else {\n                    if ( input.value.length === 0 ) {\n                        lastIntent.close();\n                        window.core.call('hide');\n                        window.core.call('blur');\n                        if ( virtualInput ) {\n                            input.setValue('');\n                        } else {\n                            input.$node.value = '';\n                        }\n                    } else {\n                        input.removeChar(input.getCaretPosition() - 1);\n                    }\n                }\n            } else {\n                if ( input.$node.value.length === 0 ) {\n                    lastIntent.close();\n                    window.core.call('hide');\n                    window.core.call('blur');\n                    if ( virtualInput ) {\n                        input.setValue('');\n                    } else {\n                        input.$node.value = '';\n                    }\n                } else if ( PLATFORM === 'TIZEN' || PLATFORM === 'WEBOS' || PLATFORM === 'SMARTTV' ) {\n                    input.removeChar(input.getCaretPosition() - 1);\n                }\n            }\n            break;\n\n        case keys.f1:\n            if ( PLATFORM === 'MAG' ) {\n                lastInputCaretPosition = input.getCaretPosition() - 1;\n            }\n            input.removeChar(input.getCaretPosition() - 1);\n            if ( PLATFORM === 'MAG' ) {\n                input.setCaretPosition(lastInputCaretPosition);\n            }\n            if ( virtualInput ) {\n                eventNative.preventDefault();\n            }\n            break;\n\n        case keys.f2:\n            if ( lang.currentProvider !== numericProvider ) {\n                radioList.focus();\n            }\n            break;\n\n        case keys.f3:\n            done();\n            break;\n\n        case keys.f4:\n            if ( lang.currentProvider === numericProvider ) {\n                break;\n            }\n\n            if ( virtualInput ) {\n                input.addChar(' ');\n            } else {\n                char = ' ';\n            }\n            break;\n\n        case keys.digit0:\n            char = '0';\n            break;\n\n        case keys.digit1:\n            char = '1';\n            break;\n\n        case keys.digit2:\n            char = '2';\n            break;\n\n        case keys.digit3:\n            char = '3';\n            break;\n\n        case keys.digit4:\n            char = '4';\n            break;\n\n        case keys.digit5:\n            char = '5';\n            break;\n\n        case keys.digit6:\n            char = '6';\n            break;\n\n        case keys.digit7:\n            char = '7';\n            break;\n\n        case keys.digit8:\n            char = '8';\n            break;\n\n        case keys.digit9:\n            char = '9';\n            break;\n\n        case keys.tab:\n        case keys.enter:\n        case keys.escape:\n        case keys.end:\n        case keys.home:\n        case keys.left:\n        case keys.up:\n        case keys.right:\n        case keys.down:\n        case keys.menu:\n        case keys.playPause:\n        case keys.play:\n        case keys.pause:\n        case keys.stop:\n        case keys.channelNext:\n        case keys.channelPrev:\n            // save default handler on this keys\n            break;\n\n        case keys.pageUp:\n        case keys.pageDown:\n        case keys.insert:\n            eventNative.preventDefault();\n            // nothing output\n            char = '';\n            break;\n\n        case keys.del:\n            if ( virtualInput ) {\n                eventNative.preventDefault();\n                if ( page.activeComponent !== input ) {\n                    input.removeChar(input.getCaretPosition());\n                }\n            }\n            break;\n\n        default:\n            if ( PLATFORM === 'WEBOS' ) {\n                switch ( event.code ) {\n                    case 19:\n                    case 1536:\n                    case 1537:\n                    case 461:\n                    case 1007:\n                    case 459:\n                    case 1004:\n                    case 1028:\n                    case 413:\n                    case 412:\n                    case 415:\n                    case 417:\n                    case 460:\n                    case 457:\n                    case 1003:\n                    case 1056:\n                    case 403:\n                    case 404:\n                    case 405:\n                    case 406:\n                        return;\n                }\n            }\n            if ( !PLATFORM === 'MAG' ) {\n                switch ( event.code ) {\n                    case 186:\n                        char = ';';\n                        break;\n\n                    case 187:\n                        char = '=';\n                        break;\n\n                    case 188:\n                        char = ',';\n                        break;\n\n                    case 189:\n                        char = '-';\n                        break;\n\n                    case 190:\n                        char = '.';\n                        break;\n\n                    case 191:\n                        char = '/';\n                        break;\n\n                    case 192:\n                        char = '`';\n                        break;\n\n                    case 219:\n                        char = '[';\n                        break;\n\n                    case 220:\n                        char = '\\\\';\n                        break;\n\n                    case 221:\n                        char = ']';\n                        break;\n\n                    case 222:\n                        char = '\\'';\n                        break;\n\n                    default:\n                        char = String.fromCharCode(event.code);\n                        if ( event.shiftKey ) {\n                            char = char.toLocaleUpperCase();\n                        } else {\n                            char = char.toLocaleLowerCase();\n                        }\n                        break;\n                }\n            }\n\n            if ( virtualInput ) {\n                console.log(event.code);\n            }\n            break;\n    }\n\n    console.log('char: ' + char);\n\n    // if char was changed\n    if ( char !== null ) {\n        if ( PLATFORM === 'MAG' && !VIRTUAL ) {\n            if ( char !== ' ' ) {\n                return;\n            }\n        }\n\n        if ( virtualInput ) {\n            // input.addChar(char, input.getCaretPosition());\n        } else {\n            input.addChar(char, lastInputCaretPosition);\n            ++lastInputCaretPosition;\n            input.$node.blur();\n            input.$node.focus();\n            input.$node.selectionStart = input.$node.selectionEnd = lastInputCaretPosition;\n        }\n    }\n});\n\nif ( virtualInput ) {\n    window.addEventListener('keypress', function ( event ) {\n        console.log('keypress ' + event.charCode);\n        switch ( event.charCode ) {\n            case keys.back:\n            case keys.backspace:\n            case keys.ok:\n                break;\n\n            // case keys.left:\n            //     input.setCaretPosition(input.getCaretPosition() - 1);\n            //     break;\n\n            // case keys.right:\n            //     input.setCaretPosition(input.getCaretPosition() + 1);\n            //     break;\n\n            default:\n                input.addChar(String.fromCharCode(event.charCode), input.getCaretPosition());\n                lastInputCaretPosition = input.getCaretPosition();\n                break;\n        }\n    });\n}\n\n\ninput.addListener('input', function () {\n    // if ( page.activeComponent !== input ) {\n    //     if ( event.value.length > 0 ) {\n    //         input.$node.focus();\n    //     } else {\n    //         // input.$node.blur();\n    //     }\n    // }\n\n    if ( !virtualInput ) {\n        setTimeout(function () {\n            lastInputCaretPosition = input.getCaretPosition();\n        }, 0);\n    }\n});\n\ninput.addListener('keydown', function ( event ) {\n    console.log(event.code + ' code 1');\n    if ( event.code === keys.down ) {\n        lastInputCaretPosition = input.getCaretPosition();\n        --verticalNavigation.active;\n        verticalNavigation.list[verticalNavigation.active].focus();\n\n        // setTimeout(function () {\n        //     if ( input.$node.value.length > 0 ) {\n        //         input.$node.focus();\n        //         input.$node.selectionStart = input.$node.selectionEnd = lastInputCaretPosition;\n        //     } else {\n        //         document.body.focus();\n        //     }\n        // }, 0);\n    }\n});\n\nif ( !virtualInput ) {\n    input.$node.addEventListener('keydown', function ( event ) {\n        if ( page.activeComponent !== input ) {\n            switch ( event.keyCode ) {\n                case keys.f1:\n                case keys.left:\n                case keys.right:\n                case keys.up:\n                case keys.down:\n                    event.preventDefault();\n                    break;\n\n                default:\n                    break;\n            }\n        }\n    });\n\n    input.getCaretPosition = function () {\n        console.log('getCaretPosition: ' + this.$node.selectionStart);\n\n        return this.$node.selectionStart;\n    };\n}\n\nwindow.core.addListener('hide', function () {\n    if ( lastIntent ) {\n        lastIntent.close();\n    }\n    window.core.call('hide');\n});\n\nwindow.core.addListener('intent', function ( intent, callback ) {\n    var logoUrl;\n\n    keyboard.focus();\n\n    if ( intent.action === 'keyboard' ) {\n        intent.once('close', function () {\n            if ( popup.visible ) {\n                popup.hide();\n                keyboard.focus();\n            }\n        });\n        lastIntent = intent;\n        logoUrl = intent.runnerConfig.uris.icons.logoActive;\n\n        if ( popup.visible ) {\n            popup.hide();\n            keyboard.focus();\n        }\n\n        lang.active = lang.codes.indexOf(window.core.environment.language);\n        if ( lang.active === -1 ) {\n            lang.active = 0;\n        }\n        radioList.checkIndex(lang.active);\n\n        window.pageMainLabel.innerText = input.$node.placeholder = input.value = input.$node.value = '';\n        window.pageMainIcon.style.backgroundImage = 'url(' + logoUrl + ')';\n        window.pageMainLabel.innerText = intent.runnerConfig.name;\n        input.$node.focus();\n\n        switch ( intent.data.type ) {\n            case 'password':\n                window.pageMainHeadTitle.innerText = gettext('Enter the password');\n                button.$text.innerText = gettext('Show password');\n                button.show();\n                verticalNavigation.list = [keyboard, button, input];\n                verticalNavigation.active = 0;\n                keyboard.focus();\n                break;\n\n            default:\n                window.pageMainHeadTitle.innerText = gettext('Enter the data');\n                button.hide();\n                verticalNavigation.list = [keyboard, input];\n                verticalNavigation.active = 0;\n                keyboard.focus();\n                break;\n        }\n\n        if ( intent.data ) {\n            // prepare interface\n            if ( virtualInput ) {\n                switch ( intent.data.type ) {\n                    case 'password':\n                        input.init({\n                            type: Input.prototype.TYPE_PASSWORD\n                        });\n                        break;\n\n                    default:\n                        input.init({\n                            type: Input.prototype.TYPE_TEXT\n                        });\n                        break;\n                }\n            } else {\n                switch ( intent.data.type ) {\n                    case 'password':\n                        input.$node.type = 'password';\n                        break;\n\n                    default:\n                        input.$node.type = '';\n                        break;\n                }\n            }\n\n            if ( intent.data.title ) {\n                window.pageMainHeadTitle.innerText = intent.data.title;\n            }\n\n            if ( intent.data.icon ) {\n                window.pageMainIcon.style.backgroundImage = 'url(' + intent.data.icon + ')';\n            }\n\n            if ( intent.data.description ) {\n                window.pageMainLabel.innerText = intent.data.description;\n            }\n\n            if ( intent.data.placeholder ) {\n                input.$node.placeholder = intent.data.placeholder;\n            }\n\n            if ( intent.data.value ) {\n                if ( virtualInput ) {\n                    input.setValue(intent.data.value);\n                } else {\n                    input.value = input.$node.value = '' + intent.data.value;\n                    lastInputCaretPosition = input.$node.selectionStart = input.$node.selectionEnd = input.value.length;\n                }\n            } else {\n                if ( virtualInput ) {\n                    input.setValue('');\n                } else {\n                    input.value = '';\n                }\n            }\n\n            if ( intent.data.position ) {\n                lastInputCaretPosition = input.$node.selectionStart = input.$node.selectionEnd = +intent.data.position;\n            }\n\n            if ( intent.data.language ) {\n                if ( lang.codes.indexOf(intent.data.language) !== -1 ) {\n                    lang.active = lang.codes.indexOf(intent.data.language);\n                }\n            }\n        }\n\n        switch ( intent.data.mode ) {\n            case 'pin':\n            case 'number':\n                numericProvider.get(null, function ( error, data ) {\n                    if ( !error ) {\n                        keyboard.$node.classList.add('small');\n                        if ( virtualInput ) {\n                            input.changeView('small', 'add');\n                        } else {\n                            input.$node.classList.add('small');\n                        }\n                        keyboard.init({\n                            data: data\n                        });\n                    }\n                });\n                break;\n\n            default:\n\n                qwertyProvider.get(null, function ( error, data ) {\n                    if ( !error ) {\n                        keyboard.$node.classList.remove('small');\n                        if ( virtualInput ) {\n                            input.changeView('small', 'remove');\n                        } else {\n                            input.$node.classList.remove('small');\n                        }\n                        keyboard.init({\n                            data: data\n                        });\n                    }\n                });\n                break;\n        }\n\n        // show keyboard\n        callback(false, {});\n        document.body.style.display = 'none';\n\n        setTimeout(function () {\n            document.body.style.display = '';\n            window.core.call('show');\n            window.core.call('focus');\n        }, 0);\n    }\n});\n\nif ( !virtualInput ) {\n    if ( PLATFORM === 'TIZEN' || PLATFORM === 'WEBOS' || PLATFORM === 'SMARTTV' ) {\n        input.$node.setAttribute('readonly', 'true');\n    }\n}\n\nwindow.core.plugins.keyboardLayouts.addListener('update', function ( list ) {\n    var lang       = require('../modules/lang'),\n        codes      = [],\n        fullNames  = [],\n        shortNames = [];\n\n    if ( list && list.length > 0 ) {\n        list.forEach(function ( code ) {\n            var index = lang.supportedCodes.indexOf(code);\n\n            if ( index !== -1 ) {\n                codes.push(lang.supportedCodes[index]);\n                fullNames.push(lang.supportedFullNames[index]);\n                shortNames.push(lang.supportedShortNames[index]);\n            }\n        });\n\n        lang.codes = codes;\n        lang.fullNames = fullNames;\n        lang.shortNames = shortNames;\n    }\n\n    lang.active = lang.codes.indexOf(core.environment.language);\n\n    if ( lang.active === -1 ) {\n        lang.active = 0;\n    }\n\n    if ( PLATFORM === 'MAG' ) {\n        /* eslint new-cap: 0 */\n        window.parent.gSTB.SetInputLang(lang.codes[lang.active]);\n    }\n\n    radioList.init({\n        focusIndex: lang.active,\n        size: lang.fullNames.length > 5 ? 5 : lang.fullNames.length,\n        data: lang.fullNames.map(function ( item, index ) {\n            return {\n                state: lang.active === index,\n                title: item + ' (' + lang.shortNames[index] + ')',\n                value: index\n            };\n        })\n    });\n\n    qwertyProvider.get(null, function ( error, data ) {\n        if ( !error ) {\n            keyboard.init({data: data});\n        }\n    });\n});\n\n\n// public\nmodule.exports = page;\n","/**\n * @module stb/ui/input\n * @author Igor Zaporozhets <deadbyelpy@gmail.com>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar Component = require('spa-component'),\n    keys = require('stb-keys');\n\n\n/* eslint no-path-concat: 0 */\n/* eslint max-len: 0 */\n\n/**\n * Base input field implementation.\n * Has two types: text and password.\n * Password - replace real text with '*', but real text presents in the own property 'value'.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {string} [config.value='text'] input text value\n * @param {string} [config.placeholder='password'] placeholder text value\n * @param {string} [config.type=Input.TYPE_TEXT] input type\n * @param {string} [config.direction='ltr'] symbol direction ('rtl' - right to left, 'ltr' - left to right)\n *\n * @example\n * var Input = require('stb/ui/input'),\n *     input = new Input({\n *         placeholder: 'input password'\n *         events: {\n *             input: function ( event ) {\n *                 debug.log(event.value);\n *             }\n *         }\n *     });\n */\nfunction Input ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.className && typeof config.className !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    /**\n     * Text value of input.\n     *\n     * @type {string}\n     */\n    this.value = '';\n\n    /**\n     * Input type, now available only text and password.\n     * Different logic with different types.\n     * TYPE_TEXT - normal input.\n     * TYPE_PASSWORD - hidden input, all chars replaced with '*', but real value is located in 'this.value'.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_TEXT;\n\n    // set default className if classList property empty or undefined\n    config.className = 'input ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // insert text line\n    this.$line = this.$body.appendChild(document.createElement('div'));\n    // correct class\n    this.$line.className = 'line';\n\n    // element to show current cursor position\n    this.$caret = this.$line.appendChild(document.createElement('div'));\n    // correct class\n    this.$caret.className = 'caret';\n\n    // hint element with placeholder text\n    this.$placeholder = this.$line.appendChild(document.createElement('div'));\n    // correct class\n    this.$placeholder.className = 'placeholder';\n\n    // setup caret index\n    this.$caret.index = 0;\n\n    // component setup\n    this.init(config);\n}\n\n\n// inheritance\nInput.prototype = Object.create(Component.prototype);\nInput.prototype.constructor = Input;\n\n// input types\nInput.prototype.TYPE_TEXT = 0;\nInput.prototype.TYPE_PASSWORD = 1;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nInput.prototype.defaultEvents = {\n    /**\n     * Default method to handle keyboard keypress events.\n     *\n     * @param {Event} event generated event\n     */\n    keypress: function () {\n        // this.addChar(String.fromCharCode(event.keyCode), this.$caret.index);\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Event} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys['delete']:\n                this.removeChar(this.$caret.index);\n                break;\n\n                // case keys.back:\n                //     if ( !PLATFORM === 'TIZEN' ) {\n                //         this.removeChar(this.$caret.index - 1);\n                //     }\n                //     break;\n\n            case keys.left:\n                this.setCaretPosition(this.$caret.index - 1);\n                break;\n\n            case keys.right:\n                this.setCaretPosition(this.$caret.index + 1);\n                break;\n\n            case keys.end:\n                // case keys.down:\n                this.setCaretPosition(this.value.length);\n                break;\n\n            case keys.home:\n                // case keys.up:\n                this.setCaretPosition(0);\n                break;\n\n            default:\n                break;\n        }\n    }\n};\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nInput.prototype.init = function ( config ) {\n    if ( DEVELOP ) {\n        if ( config.type && Number(config.type ) !== config.type) { throw new Error(__filename + ': config.type must be a number'); }\n        if ( config.type && config.type !== this.TYPE_TEXT && config.type !== this.TYPE_PASSWORD ) { throw new Error(__filename + ': config.type must be one of the TYPE_* constant'); }\n        if ( config.value && typeof config.value !== 'string' ) { throw new Error(__filename + ': config.value must be a string'); }\n        if ( config.placeholder && typeof config.placeholder !== 'string' ) { throw new Error(__filename + ': config.placeholder must be a string'); }\n        if ( config.direction && typeof config.direction !== 'string' ) { throw new Error(__filename + ': config.direction must be a string'); }\n        if ( config.direction && config.direction !== 'ltr' && config.direction !== 'rtl' ) { throw new Error(__filename + ': config.direction wrong value'); }\n    }\n\n    // type passed\n    if ( typeof config.type !== 'undefined' ) {\n        // apply\n        this.type = config.type;\n    }\n\n    // default value passed\n    if ( config.value ) {\n        // apply\n        this.setValue(config.value);\n    }\n\n    // hint\n    if ( config.placeholder ) {\n        // apply\n        this.$placeholder.innerText = config.placeholder;\n    }\n\n    // char direction\n    this.$line.dir = config.direction || 'ltr';\n};\n\n\n/**\n * Add given char to given position.\n * Also moving caret in every action.\n * Do nothing if position is < 0, or if index more or equals to length add char to the end.\n *\n * @param {string} char symbol to add\n * @param {number} [index=this.value.length] given position\n *\n * @fires module:stb/ui/input~Input#input\n */\nInput.prototype.addChar = function ( char, index ) {\n    var $char = document.createElement('div');\n\n    index = (index === undefined) ? this.$caret.index : index;\n\n    if ( DEVELOP ) {\n        if ( index < 0 ) { throw new Error(__filename + ': index must be more than 0 or equal to 0'); }\n        if ( typeof char !== 'string' ) { throw new Error(__filename + ': char must be a string'); }\n        if ( char.length !== 1 ) { throw new Error(__filename + ': char must be a string with length = 1'); }\n    }\n\n    // remove hint\n    if ( this.value.length === 0 ) {\n        this.$line.removeChild(this.$placeholder);\n    }\n\n    // settings class name for span which presents one symbol in virtual input\n    $char.className = 'char';\n\n    // move caret\n    // ++this.$caret.index;\n\n    if ( this.type === this.TYPE_PASSWORD ) {\n        $char.innerText = '*';\n    } else if ( char === ' ' ) {\n        $char.innerHTML = '&nbsp;';\n    } else {\n        $char.innerText = char;\n    }\n\n    console.log('add char: ' + JSON.stringify($char.innerText) + ' to index ' + index);\n    console.log('caret index before ' + this.$caret.index);\n    console.log('this.value.length ' + this.value.length);\n    if ( index >= this.value.length ) {\n        console.log('add char to the end, move caret to the end');\n        this.$line.appendChild($char);\n        // this.$line.appendChild(this.$caret);\n    } else {\n        console.log('move caret before index, append span before caret');\n        this.$line.insertBefore(this.$caret, this.$line.children[index]);\n        this.$line.insertBefore($char, this.$caret);\n    }\n\n    // insert char into value\n    this.value = this.value.substring(0, index) + char + this.value.substring(index, this.value.length);\n\n    this.setCaretPosition(this.$caret.index + 1);\n\n    // there are some listeners\n    if ( this.events['input'] ) {\n        // notify listeners\n        this.emit('input', {value: this.value});\n    }\n};\n\n\n/**\n * Remove char from given position.\n * Do nothing if index is out of the range (0, length).\n *\n * @param {number} [index=this.$caret.index - 1] index given position\n *\n * @fires module:stb/ui/input~Input#input\n */\nInput.prototype.removeChar = function ( index ) {\n    index = (index === undefined) ? this.$caret.index - 1 : index;\n    // non-empty string\n    if ( this.value.length > 0 ) {\n        if ( DEVELOP ) {\n            if ( index < 0 ) { throw new Error(__filename + ': index must be a positive value'); }\n            if ( index > this.value.length ) { throw new Error(__filename + ': index must be a less than or equal to total length'); }\n        }\n\n        console.log('caret index before ' + this.$caret.index);\n        console.log('remove from index ' + index);\n        console.log('this.value.length ' + this.value.length);\n        if ( this.$caret.index === index && index < this.value.length ) {\n            console.log('remove char after caret');\n            this.$line.removeChild(this.$line.children[index + 1]);\n        } else if ( this.$caret.index > index ) {\n            console.log('remove char before caret');\n            // --this.$caret.index;\n            this.$line.removeChild(this.$line.children[index]);\n        }\n\n        this.setCaretPosition(this.$caret.index - 1);\n\n        // cut one char from the value\n        this.value = this.value.substring(0, index) + this.value.substring(index + 1, this.value.length);\n\n        // there are some listeners and value was changed\n        if ( this.events['input'] ) {\n            // notify listeners\n            this.emit('input', {value: this.value});\n        }\n    }\n\n    // only hint\n    if ( this.value.length === 0 ) {\n        this.$line.appendChild(this.$placeholder);\n    }\n};\n\n\n/**\n * Move caret to the given position.\n * Do nothing if index is out of the range (0, this.value.length).\n *\n * @param {number} index given position\n */\nInput.prototype.setCaretPosition = function ( index ) {\n    var caretOffset;\n\n    if ( !this.offsetLeft ) {\n        this.overflowRight = this.$line.offsetLeft + this.$line.offsetWidth;\n        this.overflowLeft = this.$line.offsetLeft;\n    }\n\n    // check boundaries and current position\n    if ( index >= 0 && index <= this.value.length && this.$caret.index !== index ) {\n        // remove a caret\n        this.$line.removeChild(this.$caret);\n\n        if ( index === this.value.length ) {\n            // add a caret to the end of the input line\n            this.$line.appendChild(this.$caret);\n        } else {\n            // add a caret to any other place\n            this.$line.insertBefore(this.$caret, this.$line.children[index]);\n        }\n\n        // change an input scroll if a caret has been moved to the right\n        if ( index > this.$caret.index ) {\n            caretOffset = this.$caret.offsetLeft + this.$caret.offsetWidth + this.$caret.previousSibling.offsetWidth;\n\n            if ( caretOffset >= this.overflowRight ) {\n                if ( index === this.value.length ) {\n                    this.$line.scrollLeft = this.$caret.offsetLeft + this.$caret.offsetWidth - this.overflowRight;\n                } else {\n                    this.$line.scrollLeft += this.$caret.previousSibling.offsetWidth;\n                }\n            }\n            // change an input scroll if a caret has been moved to the left\n        } else {\n            caretOffset = this.$caret.getBoundingClientRect().left;\n\n            if ( caretOffset <= this.overflowLeft ) {\n                if ( this.$caret.previousSibling ) {\n                    this.$line.scrollLeft -= this.$caret.previousSibling.offsetWidth;\n                } else {\n                    this.$line.scrollLeft = 0;\n                }\n            }\n        }\n\n        this.$caret.index = index;\n    }\n\n    console.log('this.$line.scrollLeft ' + this.$line.scrollLeft);\n    console.log('$caret.index ' + this.$caret.index);\n};\n\n/**\n * Move caret to the given position.\n * Do nothing if index is out of the range (0, this.value.length).\n *\n * @param {number} index given position\n *\n * @return {number} caret index\n */\nInput.prototype.getCaretPosition = function () {\n    // check boundaries and current position\n    return this.$caret.index;\n};\n\n\n/**\n * Setting new text value of the input field.\n *\n * @param {string} value given string value\n */\nInput.prototype.setValue = function ( value ) {\n    var oldLength = this.value.length,\n        newLength = value.length,\n        index     = 0,\n        $char, diff;\n\n    if ( DEVELOP ) {\n        if ( typeof value !== 'string' ) { throw new Error(__filename + ': value must be a string'); }\n    }\n\n    // return if no changes\n    // if ( value === this.value ) {\n    //     return;\n    // }\n\n    // non-empty string\n    if ( newLength > 0 ) {\n        // no hint\n        if ( this.$placeholder.parentNode === this.$line ) {\n            this.$line.removeChild(this.$placeholder);\n        }\n\n        // no cursor\n        this.$line.removeChild(this.$caret);\n\n        // value length has changed\n        if ( newLength !== oldLength ) {\n            diff = newLength - oldLength;\n\n            // need to correct char divs amount\n            if ( diff > 0 ) {\n                // add missing chars\n                for ( index = 0; index < diff; index++ ) {\n                    $char = this.$line.appendChild(document.createElement('div'));\n                    $char.className = 'char';\n                }\n            } else {\n                // remove unnecessary chars\n                for ( index = 0; index > diff; index-- ) {\n                    this.$line.removeChild(this.$line.lastChild);\n                }\n            }\n        }\n\n        // apply value\n        for ( index = 0; index < newLength; index++ ) {\n            $char = this.$line.children[index];\n            if ( this.type === this.TYPE_PASSWORD ) {\n                $char.innerHTML = '*';\n            } else if ( value[index] === ' ' ) {\n                $char.innerHTML = '&nbsp;';\n            } else {\n                $char.innerText = value[index];\n            }\n        }\n\n        this.value = value;\n        this.$caret.index = newLength;\n        this.$line.appendChild(this.$caret);\n    } else {\n        // empty string\n        this.value = '';\n        this.$line.innerText = '';\n        this.$line.appendChild(this.$caret);\n        this.$line.appendChild(this.$placeholder);\n        this.$caret.index = 0;\n    }\n\n    // there are some listeners\n    if ( this.events['input'] ) {\n        // notify listeners\n        this.emit('input', {value: this.value});\n    }\n};\n\n\nInput.prototype.changeView = function ( className, action ) {\n    console.log('changeView ' + action + ': ' + className);\n    if ( action === 'add' ) {\n        this.$node.classList.add(className);\n    } else if ( action === 'remove' ) {\n        this.$node.classList.remove(className);\n    }\n\n    this.overflowRight = this.$line.offsetLeft + this.$line.offsetWidth;\n    console.log('this.overflowRight ' + this.overflowRight);\n    this.overflowLeft = this.$line.offsetLeft;\n    console.log('this.overflowLeft ' + this.overflowLeft);\n    this.$line.scrollLeft = 30000;\n};\n\n\n// public\nmodule.exports = Input;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base input field implementation.\n * Has two types: text and password.\n * Password - replace real text with '*', but real text presents in the own property 'value'.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {string} [config.value='text'] input text value\n * @param {string} [config.placeholder='password'] placeholder text value\n * @param {string} [config.type=Input.TYPE_TEXT] input type\n * @param {string} [config.direction='ltr'] symbol direction ('rtl' - right to left, 'ltr' - left to right)\n *\n * @example\n * var Input = require('stb/ui/input'),\n *     input = new Input({\n *         placeholder: 'input password'\n *         events: {\n *             input: function ( event ) {\n *                 debug.log(event.value);\n *             }\n *         }\n *     });\n */\nfunction Input ( config ) {\n    var self = this;\n\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body && !(config.$body instanceof HTMLInputElement) ) {\n            throw new Error(__filename + ': config.$body must be an HTMLInputElement instance');\n        }\n    }\n\n    if ( !config.$node ) {\n        config.$node = document.createElement('input');\n    }\n\n    /**\n     * Text value of input.\n     *\n     * @type {string}\n     */\n    this.value = '';\n\n    /**\n     * Input type, now available only text and password.\n     * Different logic with different types.\n     * TYPE_TEXT - normal input.\n     * TYPE_PASSWORD - hidden input, all chars replaced with '*', but real value is located in 'this.value'.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_TEXT;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'input ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // navigation by keyboard\n    this.$body.addEventListener('input', function () {\n        self.value = self.$body.value;\n        // there are some listeners\n        if ( self.events['input'] !== undefined ) {\n            // notify listeners\n            self.emit('input', {value: self.$body.value});\n        }\n    });\n\n    this.addListener('focus', function () {\n        // force native focus\n        self.$body.focus();\n    });\n\n    this.addListener('blur', function () {\n        // force native blur\n        self.$body.blur();\n    });\n\n    // component setup\n    this.init(config);\n}\n\n\n// inheritance\nInput.prototype = Object.create(Component.prototype);\nInput.prototype.constructor = Input;\n\n// set component name\nInput.prototype.name = 'spa-component-input';\n\n// input types\n// todo: use number constants\nInput.prototype.TYPE_TEXT = 'text';\nInput.prototype.TYPE_PASSWORD = 'password';\nInput.prototype.TYPE_NUMBER = 'number';\nInput.prototype.TYPE_PHONE = 'tel';\nInput.prototype.TYPE_SEARCH = 'search';\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\n//Input.prototype.defaultEvents = {\n/**\n * Default method to handle keyboard keypress events.\n *\n * @param {Event} event generated event\n */\n//keypress: function ( event ) {\n//    this.addChar(String.fromCharCode(event.keyCode));\n//}\n//};\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nInput.prototype.init = function ( config ) {\n    if ( DEVELOP ) {\n        if ( config.type && config.type !== this.TYPE_TEXT && config.type !== this.TYPE_PASSWORD &&\n            config.type !== this.TYPE_NUMBER && config.type !== this.TYPE_PHONE && config.type !== this.TYPE_SEARCH ) {\n            throw new Error(__filename + ': config.type must be one of the TYPE_* constant');\n        }\n        if ( config.placeholder && typeof config.placeholder !== 'string' ) {\n            throw new Error(__filename + ': config.placeholder must be a string');\n        }\n        if ( config.direction && typeof config.direction !== 'string' ) {\n            throw new Error(__filename + ': config.direction must be a string');\n        }\n        if ( config.direction && config.direction !== 'ltr' && config.direction !== 'rtl' ) {\n            throw new Error(__filename + ': config.direction wrong value');\n        }\n    }\n\n    // type passed\n    if ( config.type ) {\n        // apply\n        this.$body.type = config.type;\n    }\n\n    if ( config.direction ) {\n        this.$body.direction = config.direction;\n    }\n\n    // default value passed\n    if ( config.value ) {\n        // apply\n        this.$body.value = config.value;\n    }\n\n    // hint\n    if ( config.placeholder ) {\n        // apply\n        this.$body.placeholder = config.placeholder;\n    }\n};\n\n\n/**\n * Add given char to given position.\n * Also moving caret in every action.\n * Do nothing if position is < 0, or if index more or equals to length add char to the end.\n *\n * @param {string} char symbol to add\n * @param {number} [index=this.value.length] given position\n *\n * @fires module:stb/ui/input~Input#input\n */\nInput.prototype.addChar = function ( char, index ) {\n    index = (index === undefined) ? this.value.length : index;\n\n    if ( DEVELOP ) {\n        if ( index < 0 ) {\n            throw new Error('index must be more than 0 or equal to 0');\n        }\n        if ( typeof char !== 'string' ) {\n            throw new Error('char must be a string');\n        }\n        if ( char.length !== 1 ) {\n            throw new Error('char must be a string with length = 1');\n        }\n    }\n\n    // insert char into value\n    this.value = this.value.substring(0, index) + char + this.value.substring(index, this.value.length);\n\n    this.$body.value = this.value;\n\n    // there are some listeners\n    if ( this.events['input'] !== undefined ) {\n        // notify listeners\n        this.emit('input', {value: this.value});\n    }\n};\n\n\n/**\n * Remove char from given position.\n * Do nothing if index is out of the range (0, length).\n *\n * @param {number} [index=this.$caret.index - 1] index given position\n *\n * @fires module:stb/ui/input~Input#input\n */\nInput.prototype.removeChar = function ( index ) {\n    index = (index === undefined) ? this.value.length - 1 : index;\n\n    // non-empty string\n    if ( this.value.length > 0 ) {\n        if ( DEVELOP ) {\n            if ( index < 0 ) {\n                throw new Error('index must be a positive value');\n            }\n            if ( index > this.value.length ) {\n                throw new Error('index must be a less than or equal to total length');\n            }\n        }\n\n        // cut one char from the value\n        this.value = this.value.substring(0, index) + this.value.substring(index + 1, this.value.length);\n\n        this.$body.value = this.value;\n\n        //there are some listeners\n        if ( this.events['input'] !== undefined ) {\n            // notify listeners\n            this.emit('input', {value: this.value});\n        }\n    }\n    this.$body.value = this.value;\n};\n\n/*\n/!**\n * Scroll input to position.\n *\n * @param {number} index given position\n *!/\nInput.prototype.scrollTo = function ( index ) {\n    var step = this.$body.clientWidth / this.$body.value.length,\n        data = this.$body.value;\n\n    if ( data ) {\n        this.$body.value = data.substring(0, index);\n        this.$body.scrollLeft = this.$body.value.length * step;\n        this.$body.value = data;\n    }\n};*/\n\n\n/**\n * Move caret to the given position.\n * Do nothing if index is out of the range (0, this.value.length).\n *\n * @param {number} index given position\n */\nInput.prototype.setCaretPosition = function ( index ) {\n    if ( index < 0 || index > this.$body.value.length ) { return; }\n    //this.scrollTo(index);\n    this.$body.selectionStart = this.$body.selectionEnd = index;\n    this.$body.blur();\n    this.$body.focus();\n};\n\n\n/**\n * Setting new text value of the input field.\n *\n * @param {string} value given string value\n */\nInput.prototype.setValue = function ( value ) {\n\n    if ( this.$body.value !== value ) {\n        this.value = value;\n        this.$body.value = value;\n\n        // there are some listeners\n        if ( this.events['input'] !== undefined ) {\n            // notify listeners\n            this.emit('input', {value: this.$body.value});\n        }\n    }\n};\n\n\n// public\nmodule.exports = Input;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base page implementation.\n *\n * A full-screen top-level layer that can operate as an independent separate entity.\n * It is added to the document body on creation if not already linked.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n *\n * @example\n * var Page = require('stb/ui/page'),\n *     page = new Page({\n *         $node: document.getElementById(id)\n *     });\n *\n * page.addListener('show', function show () {\n *     // page is visible now\n * });\n */\nfunction Page ( config ) {\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    /**\n     * Page visibility/active state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.active = false;\n\n    /**\n     * Link to the currently active component with focus.\n     *\n     * @readonly\n     * @type {Component}\n     */\n    this.activeComponent = null;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'page ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // state flag\n    this.active = this.$node.classList.contains('active');\n\n    // correct DOM parent/child connection if necessary\n    if ( this.$node.parentNode === null ) {\n        document.body.appendChild(this.$node);\n    }\n\n    // always itself\n    this.page = this;\n}\n\n\n// inheritance\nPage.prototype = Object.create(Component.prototype);\nPage.prototype.constructor = Page;\n\n// set component name\nPage.prototype.name = 'spa-component-page';\n\n\n// public\nmodule.exports = Page;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component'),\n    keys      = require('spa-keys');\n\n\n/**\n * Mouse click event.\n *\n * @event module:stb/ui/grid~Grid#click:item\n *\n * @type {Object}\n * @property {Element} $item clicked HTML item\n * @property {Event} event click event data\n */\n\n\n/**\n * Base grid/table implementation.\n *\n * For navigation map implementation and tests see {@link https://gist.github.com/DarkPark/8c0c2926bfa234043ed1}.\n *\n * Each data cell can be either a primitive value or an object with these fields:\n *\n *  Name    | Description\n * ---------|-------------\n *  value   | actual cell value to render\n *  colSpan | amount of cells to merge horizontally\n *  rowSpan | amount of cells to merge vertically\n *  mark    | is it necessary or not to render this cell as marked\n *  focus   | is it necessary or not to render this cell as focused\n *  disable | is it necessary or not to set this cell as disabled\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}] init parameters (all inherited from the parent)\n * @param {Array[]}  [config.data=[]] component data to visualize\n * @param {function} [config.render] method to build each grid cell content\n * @param {function} [config.navigate] method to move focus according to pressed keys\n * @param {boolean}  [config.cycleX=true] allow or not to jump to the opposite side of line when there is nowhere to go next\n * @param {boolean}  [config.cycleY=true] allow or not to jump to the opposite side of column when there is nowhere to go next\n * @param {Object}   [config.provider] data provider\n * @param {number}   [config.sizeX] grid columns count\n * @param {number}   [config.sizeX] grid rows count\n *\n * @fires module:stb/ui/grid~Grid#click:item\n *\n * @example\n * var Grid = require('stb/ui/grid'),\n *     grid = new Grid({\n *         data: [\n *             [1,   2,  3, {value: '4;8;12;16', focus: true, rowSpan: 4}],\n *             [5,   6,  7],\n *             [9,  10, 11],\n *             [13, 14, {value: 15, disable: true}]\n *         ],\n *         render: function ( $item, data ) {\n *             $item.innerHTML = '<div>' + (data.value) + '</div>';\n *         },\n *         cycleX: false\n *     });\n */\nfunction Grid ( config ) {\n    // current execution context\n    //var self = this;\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        // if ( config.navigate && typeof config.navigate !== 'function' ) {\n        //     throw new Error(__filename + ': wrong config.navigate type');\n        // }\n    }\n\n    /**\n     * List of DOM elements representing the component cells.\n     * Necessary for navigation calculations.\n     *\n     * @type {Element[][]}\n     */\n    this.map = [];\n\n    /**\n     * Link to the currently focused DOM element.\n     *\n     * @type {Element}\n     */\n    this.$focusItem = null;\n\n    /**\n     * Component data to visualize.\n     *\n     * @type {Array[]}\n     */\n    this.data = [];\n\n    /**\n     * Allow or not to jump to the opposite side of line when there is nowhere to go next.\n     *\n     * @type {boolean}\n     */\n    this.cycleX = true;\n\n    /**\n     * Allow or not to jump to the opposite side of column when there is nowhere to go next.\n     *\n     * @type {boolean}\n     */\n    this.cycleY = true;\n\n    /**\n     * Current navigation map horizontal position.\n     *\n     * @type {number}\n     */\n    this.focusX = 0;\n\n    /**\n     * Current navigation map vertical position.\n     *\n     * @type {number}\n     */\n    this.focusY = 0;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'grid ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // component setup\n    this.init(config);\n\n    // custom navigation method\n    //if ( config.navigate ) {\n    //    // apply\n    //    this.navigate = config.navigate;\n    //}\n\n    // navigation by keyboard\n    //this.addListener('keydown', this.navigate);\n\n    // navigation by mouse\n    //this.$body.addEventListener('mousewheel', function ( event ) {\n    //    // scrolling by Y axis\n    //    if ( event.wheelDeltaY ) {\n    //        self.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n    //    }\n    //\n    //    // scrolling by X axis\n    //    if ( event.wheelDeltaX ) {\n    //        self.move(event.wheelDeltaX > 0 ? keys.left : keys.right);\n    //    }\n    //});\n}\n\n\n// inheritance\nGrid.prototype = Object.create(Component.prototype);\nGrid.prototype.constructor = Grid;\n\n// set component name\nGrid.prototype.name = 'spa-component-grid';\n\n\n/**\n * Fill the given cell with data.\n * $item.data can contain the old data (from the previous render).\n *\n * @param {Element} $item item DOM link\n * @param {*} data associated with this item data\n */\nGrid.prototype.renderItemDefault = function ( $item, data ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 2 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !($item instanceof Element) ) {\n            throw new Error(__filename + ': wrong $item type');\n        }\n    }\n\n    $item.innerText = data.value;\n};\n\n\n/**\n * Method to build each grid cell content.\n * Can be redefined to provide custom rendering.\n *\n * @type {function}\n */\nGrid.prototype.renderItem = Grid.prototype.renderItemDefault;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nGrid.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse wheel events.\n     *\n     * @param {Event} event generated event\n     */\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        if ( event.wheelDeltaY ) {\n            this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n        }\n\n        // scrolling by X axis\n        if ( event.wheelDeltaX ) {\n            this.move(event.wheelDeltaX > 0 ? keys.left : keys.right);\n        }\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n            case keys.right:\n            case keys.left:\n                // cursor move only on arrow keys\n                this.move(event.code);\n                break;\n            case keys.enter:\n                // there are some listeners\n                if ( this.events['click:item'] ) {\n                    // notify listeners\n                    this.emit('click:item', {$item: this.$focusItem, event: event});\n                }\n                break;\n        }\n    }\n};\n\n\n/**\n * Default method to move focus according to pressed keys.\n *\n * @param {Object} event generated event source of movement\n */\n//Grid.prototype.navigateDefault = function ( event ) {\n//    switch ( event.code ) {\n//        case keys.up:\n//        case keys.down:\n//        case keys.right:\n//        case keys.left:\n//            // cursor move only on arrow keys\n//            this.move(event.code);\n//            break;\n//        case keys.ok:\n//            // there are some listeners\n//            if ( this.events['click:item'] ) {\n//                // notify listeners\n//                this.emit('click:item', {$item: this.$focusItem, event: event});\n//            }\n//            break;\n//    }\n//};\n\n\n/**\n * Current active method to move focus according to pressed keys.\n * Can be redefined to provide custom navigation.\n *\n * @type {function}\n */\n//Grid.prototype.navigate = Grid.prototype.navigateDefault;\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary and add missing properties.\n *\n * @param {Array[]} data user 2-dimensional array\n * @return {Array[]} reworked incoming data\n */\nfunction normalize ( data ) {\n    var idxY, idxX, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( idxY = 0; idxY < data.length; idxY++ ) {\n        // cols\n        for ( idxX = 0; idxX < data[idxY].length; idxX++ ) {\n            // cell value\n            item = data[idxY][idxX];\n\n            // primitive value\n            if ( typeof item === 'object' ) {\n                // always at least one row/col\n                item.colSpan = item.colSpan || 1;\n                item.rowSpan = item.rowSpan || 1;\n            } else {\n                // wrap with defaults\n                item = data[idxY][idxX] = {\n                    value: data[idxY][idxX],\n                    colSpan: 1,\n                    rowSpan: 1\n                };\n            }\n\n            if ( DEVELOP ) {\n                // if ( !('value' in item) ) {\n                //     throw new Error(__filename + ': field \"value\" is missing');\n                // }\n                if ( Number(item.colSpan) !== item.colSpan ) {\n                    throw new Error(__filename + ': item.colSpan must be a number');\n                }\n                if ( Number(item.rowSpan) !== item.rowSpan ) {\n                    throw new Error(__filename + ': item.rowSpan must be a number');\n                }\n                if ( item.colSpan <= 0 ) {\n                    throw new Error(__filename + ': item.colSpan should be positive');\n                }\n                if ( item.rowSpan <= 0 ) {\n                    throw new Error(__filename + ': item.rowSpan should be positive');\n                }\n                if ( ('focus' in item) && Boolean(item.focus) !== item.focus ) {\n                    throw new Error(__filename + ': item.focus must be boolean');\n                }\n                if ( ('disable' in item) && Boolean(item.disable) !== item.disable ) {\n                    throw new Error(__filename + ': item.disable must be boolean');\n                }\n            }\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Fill the given rectangle area with value.\n *\n * @param {Array[]} map link to navigation map\n * @param {number} posX current horizontal position\n * @param {number} posY current vertical position\n * @param {number} dX amount of horizontal cell to fill\n * @param {number} dY amount of vertical cell to fill\n * @param {*} value filling data\n */\nfunction fill ( map, posX, posY, dX, dY, value ) {\n    var idxY, idxX;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 6 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(map) ) {\n            throw new Error(__filename + ': wrong map type');\n        }\n    }\n\n    // rows\n    for ( idxY = posY; idxY < posY + dY; idxY++ ) {\n        // expand map rows\n        if ( map.length < idxY + 1 ) { map.push([]); }\n\n        // compensate long columns from previous rows\n        while ( map[idxY][posX] !== undefined ) {\n            posX++;\n        }\n\n        // cols\n        for ( idxX = posX; idxX < posX + dX; idxX++ ) {\n            // expand map row cols\n            if ( map[idxY].length < idxX + 1 ) { map[idxY].push(); }\n            // fill\n            map[idxY][idxX] = value;\n            // apply coordinates for future mouse clicks\n            if ( value.x === undefined ) { value.x = idxX; }\n            if ( value.y === undefined ) { value.y = idxY; }\n        }\n    }\n}\n\n\n/**\n * Create a navigation map from incoming data.\n *\n * @param {Array[]} data user 2-dimensional array of objects\n * @return {Array[]} navigation map\n */\nfunction map ( data ) {\n    var result = [],\n        idxY, idxX, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( idxY = 0; idxY < data.length; idxY++ ) {\n        // cols\n        for ( idxX = 0; idxX < data[idxY].length; idxX++ ) {\n            // cell value\n            item = data[idxY][idxX];\n            // process a cell\n            fill(result, idxX, idxY, item.colSpan, item.rowSpan, item.$item);\n            // clear redundant info\n            delete item.$item;\n        }\n    }\n\n    return result;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nGrid.prototype.init = function ( config ) {\n    var self = this,\n        draw = false,\n        idxY, idxX,\n        $row, $item, $tbody, $focusItem,\n        itemData, newData,\n        /**\n         * Cell mouse click handler.\n         *\n         * @param {Event} event click event data\n         *\n         * @this Element\n         *\n         * @fires module:stb/ui/grid~Grid#click:item\n         */\n        onItemClick = function ( event ) {\n            // allow to accept focus\n            if ( this.data.disable !== true ) {\n                // visualize\n                self.focusItem(this);\n\n                // there are some listeners\n                if ( self.events['click:item'] ) {\n                    // notify listeners\n                    self.emit('click:item', {$item: this, event: event});\n                }\n            }\n        },\n        /**\n         * Construct grid when receive new data\n         *\n         * @param {Array} data to render\n         */\n        construct = function ( data ) {\n\n            // apply data\n            if ( data ) {\n                // new data is different\n                if ( self.data !== data ) {\n                    // apply\n                    self.data = data;\n                    // need to redraw table\n                    draw = true;\n                }\n            }\n\n            // custom render method\n            if ( config.render ) {\n                // new render is different\n                if ( self.renderItem !== config.render ) {\n                    // apply\n                    self.renderItem = config.render;\n                    // need to redraw table\n                    draw = true;\n                }\n            }\n\n            if ( !draw ) {\n                // do not redraw table\n                return;\n            }\n\n            // export pointer to inner table\n            self.$table = document.createElement('table');\n            $tbody = document.createElement('tbody');\n\n            // prepare user data\n            self.data = normalize(self.data);\n\n            // rows\n            for ( idxY = 0; idxY < self.data.length; idxY++ ) {\n                // dom\n                $row = $tbody.insertRow();\n\n                // cols\n                for ( idxX = 0; idxX < self.data[idxY].length; idxX++ ) {\n                    // dom\n                    $item = $row.insertCell(-1);\n                    // additional params\n                    $item.className = 'item';\n\n                    // shortcut\n                    itemData = self.data[idxY][idxX];\n\n                    // for map\n                    itemData.$item = $item;\n\n                    // merge columns\n                    $item.colSpan = itemData.colSpan;\n\n                    // merge rows\n                    $item.rowSpan = itemData.rowSpan;\n\n                    // active cell\n                    if ( itemData.focus ) {\n                        // store and clean\n                        $focusItem = $item;\n                    }\n\n                    // disabled cell\n                    if ( itemData.disable ) {\n                        // apply CSS\n                        $item.classList.add('disable');\n                    }\n\n                    // marked cell\n                    if ( itemData.mark ) {\n                        // apply CSS\n                        $item.classList.add('mark');\n                    }\n\n                    // visualize\n                    self.renderItem($item, itemData);\n\n                    // save data link\n                    $item.data = itemData;\n\n                    // manual focusing\n                    $item.addEventListener('click', onItemClick);\n                }\n                // row is ready\n                $tbody.appendChild($row);\n            }\n\n            // navigation map filling\n            self.map = map(self.data);\n\n            // clear all table\n            self.$body.innerText = null;\n\n            // everything is ready\n            self.$table.appendChild($tbody);\n            self.$body.appendChild(self.$table);\n\n            // apply focus\n            if ( $focusItem ) {\n                // focus item was given in data\n                self.focusItem($focusItem);\n            } else {\n                // just the first cell\n                self.focusItem(self.map[0][0]);\n            }\n        };\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        if ( config.data && (!Array.isArray(config.data) || !Array.isArray(config.data[0])) ) {\n            throw new Error(__filename + ': wrong config.data type');\n        }\n        if ( config.render && typeof config.render !== 'function' ) {\n            throw new Error(__filename + ': wrong config.render type');\n        }\n    }\n\n    // apply cycle behaviour\n    if ( config.cycleX !== undefined ) {\n        this.cycleX = config.cycleX;\n    }\n    if ( config.cycleY !== undefined ) {\n        this.cycleY = config.cycleY;\n    }\n\n\n    if ( config.provider ) {\n        if ( DEVELOP ) {\n            if ( !config.sizeX || !config.sizeY ) {\n                throw new Error(__filename + ': wrong grid data size');\n            }\n        }\n\n        this.provider = config.provider;\n        this.sizeX = config.sizeX;\n        this.sizeY = config.sizeY;\n    }\n\n    if ( config.translate ) {\n        this.translate = config.translate;\n    }\n\n    if ( config.provider ) {\n        newData = this.provider.get(null, function ( error, data ) {\n            if ( error ) {\n                if ( self.events['data:error'] ) {\n                    /**\n                     * Provider get error while take new data\n                     *\n                     * @event module:stb/ui/grid~Grid#data:error\n                     */\n                    self.emit('data:error', error);\n                }\n            }\n            construct(self.translate(data));\n\n            if ( self.events['data:ready'] ) {\n                /**\n                 * Provider get new data and reinit grid\n                 *\n                 * @event module:stb/ui/grid~Grid#data:ready\n                 */\n                self.emit('data:ready');\n            }\n        });\n\n        if ( this.events['data:get'] ) {\n            /**\n             * Provider request new data\n             *\n             * @event module:stb/ui/grid~Grid#data:get\n             *\n             * @type {Object}\n             * @property {boolean} fresh status of data to response\n             */\n            this.emit('data:get', {fresh: newData});\n        }\n    } else {\n        construct(config.data);\n    }\n\n\n};\n\n/**\n * Default translate function\n *\n * @param {Array} data to translate\n * @return {Array} data to use as grid data\n */\nGrid.prototype.defaultTranslate = function ( data ) {\n    var result = [],\n        idxY, idxX, arr;\n\n    for ( idxY = 0; idxY < this.sizeY; idxY++ ) {\n        arr = [];\n        for ( idxX = 0; idxX < this.sizeX; idxX++ ) {\n            arr[idxX] = data[idxY * this.sizeX + idxX];\n        }\n        result[idxY] = arr;\n    }\n\n    return result;\n};\n\n\n/**\n * Method to translate given array to array adapted to use as grid data\n * Can be redefined to provide custom translate.\n *\n * @type {function}\n */\nGrid.prototype.translate = Grid.prototype.defaultTranslate;\n\n\n/**\n * Move focus to the given direction.\n *\n * @param {number} direction arrow key code\n *\n * @fires module:stb/ui/grid~Grid#cycle\n * @fires module:stb/ui/grid~Grid#overflow\n * @fires module:stb/ui/grid~Grid#data:get\n * @fires module:stb/ui/grid~Grid#data:ready\n * @fires module:stb/ui/grid~Grid#data:error\n */\nGrid.prototype.move = function ( direction ) {\n    var focusX   = this.focusX,\n        focusY   = this.focusY,\n        move     = true,\n        overflow = false,\n        cycle    = false,\n        newData;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(direction) !== direction ) {\n            throw new Error(__filename + ': direction must be a number');\n        }\n    }\n\n    // shift till full stop\n    while ( move ) {\n        // arrow keys\n        switch ( direction ) {\n            case keys.up:\n                if ( focusY > 0 ) {\n                    // can go one step up\n                    focusY--;\n                } else {\n                    if ( this.cycleY ) {\n                        // jump to the last row\n                        focusY = this.map.length - 1;\n                        cycle = true;\n                    }\n                    // grid edge\n                    overflow = true;\n                }\n                break;\n\n            case keys.down:\n                if ( focusY < this.map.length - 1 ) {\n                    // can go one step down\n                    focusY++;\n                } else {\n                    if ( this.cycleY ) {\n                        // jump to the first row\n                        focusY = 0;\n                        cycle = true;\n                    }\n                    // grid edge\n                    overflow = true;\n                }\n                break;\n\n            case keys.right:\n                if ( focusX < this.map[focusY].length - 1 ) {\n                    // can go one step right\n                    focusX++;\n                } else {\n                    if ( this.cycleX ) {\n                        // jump to the first column\n                        focusX = 0;\n                        cycle = true;\n                    }\n                    // grid edge\n                    overflow = true;\n                }\n                break;\n\n            case keys.left:\n                if ( focusX > 0 ) {\n                    // can go one step left\n                    focusX--;\n                } else {\n                    if ( this.cycleX ) {\n                        // jump to the last column\n                        focusX = this.map[focusY].length - 1;\n                        cycle = true;\n                    }\n                    // grid edge\n                    overflow = true;\n\n                }\n                break;\n        }\n\n        // full cycle - has come to the start point\n        if ( focusX === this.focusX && focusY === this.focusY ) {\n            // full stop\n            move = false;\n        }\n\n        // focus item has changed and it's not disabled\n        if ( this.map[focusY][focusX] !== this.map[this.focusY][this.focusX] && this.map[focusY][focusX].data.disable !== true ) {\n            // full stop\n            move = false;\n        }\n\n        // the last cell in a row/col\n        if ( overflow ) {\n            // full stop\n            move = false;\n            // but it's disabled so need to go back\n            if ( this.map[focusY][focusX].data.disable === true ) {\n                // return to the start point\n                focusX = this.focusX;\n                focusY = this.focusY;\n            }\n        }\n    }\n\n    this.focusItem(this.map[focusY][focusX]);\n\n    // correct coordinates\n    // focusItem set approximate values\n    this.focusX = focusX;\n    this.focusY = focusY;\n\n    if ( overflow ) {\n        //\n        if ( this.provider ) {\n            newData = this.provider.get(direction, function ( error, data ) {\n                var  idxY, idxX;\n\n                if ( error ) {\n\n                    if ( self.events['data:error'] ) {\n                        /**\n                         * Provider get error while take new data\n                         *\n                         * @event module:stb/ui/grid~Grid#data:error\n                         */\n                        self.emit('data:error', error);\n\n                        return;\n                    }\n                }\n\n                if ( data ) {\n                    self.data = self.translate(data);\n                    for ( idxY = 0; idxY < self.sizeY - 1; idxY++ ) {\n                        for ( idxX = 0; idxX < self.sizeX; idxX++ ) {\n                            self.renderItem(self.map[idxY][idxX], self.data[idxY][idxX]);\n                        }\n                    }\n\n                    if ( self.events['data:ready'] ) {\n                        /**\n                         * Provider get new data and reinit grid\n                         *\n                         * @event module:stb/ui/grid~Grid#data:ready\n                         */\n                        self.emit('data:ready');\n                    }\n                }\n\n            });\n\n            if ( this.events['data:get'] ) {\n                /**\n                 * Provider request new data\n                 *\n                 * @event module:stb/ui/grid~Grid#data:get\n                 *\n                 * @type {Object}\n                 * @property {boolean} fresh status of data to response\n                 */\n                this.emit('data:get', {fresh: newData});\n            }\n        }\n\n        // there are some listeners\n        if ( this.events['overflow'] ) {\n            /**\n             * Attempt to go beyond the edge of the grid.\n             *\n             * @event module:stb/ui/grid~Grid#overflow\n             *\n             * @type {Object}\n             * @property {number} direction key code initiator of movement\n             * @property {number} cycle ...\n             */\n            this.emit('overflow', {direction: direction, cycle: cycle});\n        }\n    }\n\n    // report\n    debug.info(this.focusX + ' : ' + focusX, 'X old/new');\n    debug.info(this.focusY + ' : ' + focusY, 'Y old/new');\n    debug.info(cycle, 'cycle');\n    debug.info(overflow, 'overflow');\n\n\n};\n\n\n/**\n * Highlight the given DOM element as focused.\n * Remove focus from the previously focused item.\n *\n * @param {Node|Element} $item element to focus\n * @param {number} $item.x the item horizontal position\n * @param {number} $item.y the item vertical position\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/grid~Grid#focus:item\n * @fires module:stb/ui/grid~Grid#blur:item\n */\nGrid.prototype.focusItem = function ( $item ) {\n    var $prev = this.$focusItem;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n    }\n\n    // different element\n    if ( $item && $prev !== $item && $item.data.disable !== true ) {\n        if ( DEVELOP ) {\n            if ( !($item instanceof Element) ) {\n                throw new Error(__filename + ': wrong $item type');\n            }\n            if ( $item.parentNode.parentNode.parentNode.parentNode !== this.$body ) {\n                throw new Error(__filename + ': wrong $item parent element');\n            }\n        }\n\n        // some item is focused already\n        if ( $prev !== null ) {\n            if ( DEVELOP ) {\n                if ( !($prev instanceof Element) ) {\n                    throw new Error(__filename + ': wrong $prev type');\n                }\n            }\n\n            // style\n            $prev.classList.remove('focus');\n\n            // there are some listeners\n            if ( this.events['blur:item'] ) {\n                /**\n                 * Remove focus from an element.\n                 *\n                 * @event module:stb/ui/grid~Grid#blur:item\n                 *\n                 * @type {Object}\n                 * @property {Element} $item previously focused HTML element\n                 */\n                this.emit('blur:item', {$item: $prev});\n            }\n        }\n\n        // draft coordinates\n        this.focusX = $item.x;\n        this.focusY = $item.y;\n\n        // reassign\n        this.$focusItem = $item;\n\n        // correct CSS\n        $item.classList.add('focus');\n\n        // there are some listeners\n        if ( this.events['focus:item'] ) {\n            /**\n             * Set focus to an element.\n             *\n             * @event module:stb/ui/grid~Grid#focus:item\n             *\n             * @type {Object}\n             * @property {Element} $prev old/previous focused HTML element\n             * @property {Element} $curr new/current focused HTML element\n             */\n            this.emit('focus:item', {$prev: $prev, $curr: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Set item state and appearance as marked.\n *\n * @param {Node|Element} $item element to focus\n * @param {boolean} state true - marked, false - not marked\n */\nGrid.prototype.markItem = function ( $item, state ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 2 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !($item instanceof Element) ) {\n            throw new Error(__filename + ': wrong $item type');\n        }\n        if ( $item.parentNode.parentNode.parentNode.parentNode !== this.$body ) {\n            throw new Error(__filename + ': wrong $item parent element');\n        }\n        if ( Boolean(state) !== state ) {\n            throw new Error(__filename + ': state must be boolean');\n        }\n    }\n\n    // correct CSS\n    if ( state ) {\n        $item.classList.add('mark');\n    } else {\n        $item.classList.remove('mark');\n    }\n\n    // apply flag\n    $item.data.mark = state;\n};\n\n\n// public\nmodule.exports = Grid;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-scrollbar');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-scrollbar';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base scroll bar implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {number} [config.value=0] initial thumb position\n * @param {number} [config.realSize=100] actual scroll size\n * @param {number} [config.viewSize=10] visible area size\n * @param {number} [config.type] direction\n *\n * @example\n * var ScrollBar = require('stb/ui/scroll.bar'),\n *     scrollBar = new ScrollBar({\n *         viewSize: 5,\n *         realSize: 25,\n *         events: {\n *             done: function () {\n *                 debug.log('ScrollBar: done');\n *             },\n *             change: function ( data ) {\n *                 debug.log('ScrollBar: change to ' + data.curr + ' from ' + data.prev);\n *             }\n *         }\n *     });\n */\nfunction ScrollBar ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Visible area size.\n     *\n     * @type {number}\n     */\n    this.viewSize = 10;\n\n    /**\n     * Scroll area actual height or width (if scroll is horizontal).\n     *\n     * @type {number}\n     */\n    this.realSize = 100;\n\n    /**\n     * Scroll thumb position.\n     *\n     * @type {number}\n     */\n    this.value = 0;\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Geometry of the scroll thumb element.\n     *\n     * @type {ClientRect}\n     */\n    this.thumbRect = null;\n\n    /**\n     * Geometry of the scroll track element.\n     *\n     * @type {ClientRect}\n     */\n    this.trackRect = null;\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'scrollBar ' + (config.className || '');\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // insert thumb line\n    this.$thumb = this.$body.appendChild(document.createElement('div'));\n\n    // correct CSS class name\n    this.$thumb.className = 'thumb';\n\n    // component setup\n    this.init(config);\n}\n\n\n// inheritance\nScrollBar.prototype = Object.create(Component.prototype);\nScrollBar.prototype.constructor = ScrollBar;\n\n// set component name\nScrollBar.prototype.name = 'spa-component-scrollbar';\n\nScrollBar.prototype.TYPE_VERTICAL   = 1;\nScrollBar.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Init or re-init realSize/viewSize/value parameters.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nScrollBar.prototype.init = function ( config ) {\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // set actual scroll size\n    if ( config.realSize !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.realSize) !== config.realSize ) {\n                throw new Error(__filename + ': config.realSize value must be a number');\n            }\n        }\n\n        // apply\n        this.realSize = config.realSize;\n    }\n\n    // set visible area size\n    if ( config.viewSize !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.viewSize) !== config.viewSize ) {\n                throw new Error(__filename + ': config.viewSize value must be a number');\n            }\n            if ( config.viewSize < 0 ) {\n                throw new Error(__filename + ': config.viewSize value must be greater than 0');\n            }\n        }\n\n        // apply\n        this.viewSize = config.viewSize;\n    }\n\n    // show or hide thumb\n    if ( this.viewSize >= this.realSize ) {\n        this.$thumb.classList.add('hidden');\n    } else {\n        this.$thumb.classList.remove('hidden');\n    }\n\n    // set thumb position\n    if ( config.value !== undefined ) {\n        // apply\n        this.scrollTo(config.value);\n    }\n\n    // set thumb size\n    if ( this.type === this.TYPE_VERTICAL ) {\n        this.$thumb.style.height = (this.viewSize / this.realSize * 100) + '%';\n    } else {\n        this.$thumb.style.width = (this.viewSize / this.realSize * 100) + '%';\n    }\n\n    // geometry\n    this.thumbRect = this.$thumb.getBoundingClientRect();\n    this.trackRect = this.$node.getBoundingClientRect();\n};\n\n\n/**\n * Set position of the given value.\n * Does nothing in case when scroll is in the end and passed value is more than scroll bar length.\n *\n * @param {number} value new value to set\n * @return {boolean} operation result\n *\n * @fires module:stb/ui/scroll.bar~ScrollBar#done\n * @fires module:stb/ui/scroll.bar~ScrollBar#change\n */\nScrollBar.prototype.scrollTo = function ( value ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(value) !== value ) {\n            throw new Error(__filename + ': value must be a number');\n        }\n        if ( this.realSize > this.viewSize && value > this.realSize - this.viewSize ) {\n            throw new Error(__filename + ': value is greater than this.realSize-this.viewSize');\n        }\n        if ( value < 0 ) {\n            throw new Error(__filename + ': value is less then 0');\n        }\n    }\n\n    // value has changed\n    if ( this.value !== value ) {\n        // track and thumb geometry was not set\n        if ( this.thumbRect.height === 0 || this.thumbRect.width === 0 ) {\n            // apply\n            this.trackRect = this.$node.getBoundingClientRect();\n            this.thumbRect = this.$thumb.getBoundingClientRect();\n        }\n\n        // set scroll bar width\n        if ( this.type === this.TYPE_VERTICAL ) {\n            this.$thumb.style.marginTop = ((this.trackRect.height - this.thumbRect.height) * value / (this.realSize - this.viewSize)) + 'px';\n        } else {\n            this.$thumb.style.marginLeft = ((this.trackRect.width - this.thumbRect.width) * value / (this.realSize - this.viewSize)) + 'px';\n        }\n\n        // there are some listeners\n        if ( this.events['change'] ) {\n            /**\n             * Update scroll value.\n             *\n             * @event module:stb/ui/scroll.bar~ScrollBar#change\n             *\n             * @type {Object}\n             * @property {number} prev old/previous scroll value\n             * @property {number} curr new/current scroll value\n             */\n            this.emit('change', {curr: value, prev: this.value});\n        }\n\n        // is it the end?\n        if ( value >= this.realSize ) {\n            value = this.realSize;\n\n            // there are some listeners\n            if ( this.events['done'] ) {\n                /**\n                 * Set scroll to its maximum value.\n                 *\n                 * @event module:stb/ui/scroll.bar~ScrollBar#done\n                 */\n                this.emit('done');\n            }\n        }\n\n        // set new value\n        this.value = value;\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = ScrollBar;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-button');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-button';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component'),\n    keys      = require('spa-keys');\n\n\n/**\n * Base button implementation.\n *\n * Has global options:\n *     Button.prototype.clickDuration - time to apply \"click\" class, does not apply if 0\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {string} [config.value] button caption text (generated if not set)\n * @param {string} [config.icon] button icon name\n *\n * @example\n * var Button = require('stb/ui/button'),\n *     btnSimple, btnIcon, btnDetached;\n *\n * btnSimple = new Button({\n *     $node: document.getElementById('btnSimple'),\n *     value: 'Simple button'\n * });\n *\n * btnIcon = new Button({\n *     $node: document.getElementById('btnIcon'),\n *     icon: 'menu'\n *     value: 'Button with icon'\n * });\n *\n * btnDetached = new Button({\n *     value: 'Button not added to the page',\n *     className: 'wide'\n * });\n */\nfunction Button ( config ) {\n    // current execution context\n    //var self = this;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.icon && typeof config.icon !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.icon');\n        }\n        if ( config.value && typeof config.value !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.value');\n        }\n    }\n\n    //config.name = 'spa-component-button' + (config.className || '');\n\n    // set default className if classList property empty or undefined\n    //config.className = this.name + ' ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // optional dom\n    if ( config.icon ) {\n        // insert icon\n        this.$icon = this.$body.appendChild(document.createElement('div'));\n        this.$icon.className = 'icon ' + config.icon;\n    }\n\n    // insert caption placeholder\n    this.$text = this.$body.appendChild(document.createElement('div'));\n    this.$text.classList.add('text');\n\n    if ( config.value ) {\n        // fill it\n        this.$text.innerText = config.value;\n    }\n}\n\n\n// inheritance\nButton.prototype = Object.create(Component.prototype);\nButton.prototype.constructor = Button;\n\n// set component name\nButton.prototype.name = 'spa-component-button';\n\n\n// time to apply \"click\" class, does not apply if 0\nButton.prototype.clickDuration = 200;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nButton.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse click events.\n     */\n    click: function () {\n        // current execution context\n        var self = this;\n\n        this.$node.classList.add('click');\n\n        setTimeout(function () {\n            self.$node.classList.remove('click');\n        }, this.clickDuration);\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        if ( event.code === keys.enter ) {\n            // emulate click\n            // there are some listeners\n            if ( this.events['click'] ) {\n                /**\n                 * Mouse click event emulation.\n                 *\n                 * @event module:stb/ui/button~Button#click\n                 *\n                 * @type {Object}\n                 * @property {Event} event click event data\n                 */\n                this.emit('click', {event: event});\n            }\n        }\n    }\n};\n\n\n// public\nmodule.exports = Button;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar List             = require('mag-component-list'),\n    classChecked     = 'checked',\n    classIcon        = 'theme-icon theme-icon-radio',\n    classIconActive  = 'theme-icon theme-icon-radio-active';\n\n\n/**\n * Base radio list implementation\n *\n * @constructor\n * @extends List\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {string} [config.classIcon] icon default state class name\n * @param {string} [config.classIconActive] icon active state class name\n * @param {string} [config.classChecked] checked item class\n */\nfunction RadioList ( config ) {\n    var self = this;\n\n    if ( config.classIcon ) {\n        classIcon = config.classIcon;\n    }\n    if ( config.classIconActive ) {\n        classIconActive = config.classIconActive;\n    }\n    if ( config.classChecked ) {\n        classIcon = config.classChecked;\n    }\n\n    /**\n     * Checked item data\n     *\n     * @type {Element}\n     */\n    this.checkedData = null;\n\n    /**\n     * Checked element index\n     *\n     * @type {number}\n     */\n    this.checkedIndex = null;\n\n    List.call(this, config);\n\n    this.addListener('click:item', function ( event ) {\n        var $item = event.$item,\n            previousCheckedData = self.checkedData;\n\n        self.checkIndex($item.index);\n\n        if ( previousCheckedData !== $item.data ) {\n            /**\n             * Select element from list\n             *\n             * @event select\n             * @property {Element} $item object\n             */\n            self.emit('select', $item);\n        }\n    });\n}\n\n\nRadioList.prototype = Object.create(List.prototype);\nRadioList.prototype.constructor = RadioList;\n\n// set component name\nRadioList.prototype.name = 'mag-component-radio-list';\n\nRadioList.prototype.init = function ( config ) {\n    config = config || {};\n    List.prototype.init.call(this, config);\n};\n\n\n/**\n * Set data and render inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nRadioList.prototype.setData = function ( config ) {\n    List.prototype.setData.call(this, config);\n\n    this.defaultCheckedIndex = this.checkedIndex;\n\n    if ( this.$focusItem ) {\n        this.defaultFocusIndex = this.$focusItem.index;\n    } else {\n        this.defaultFocusIndex = 0;\n    }\n};\n\n\n/**\n * Reset data to default state and render inner structures and HTML.\n */\nRadioList.prototype.resetData = function () {\n    this.checkIndex(this.defaultCheckedIndex);\n    this.focusIndex(this.defaultFocusIndex);\n};\n\n\n/**\n * Set all states to false and render inner structures and HTML.\n *\n * @param {number} [focusIndex] focus index\n */\nRadioList.prototype.clearChecked = function ( focusIndex ) {\n    var index = 0;\n\n    for ( index; index < this.data.length; index++ ) {\n        this.data[index].state = false;\n    }\n\n    // no focusIndex, focusIndex may be 0\n    if ( !focusIndex && focusIndex !== 0 ) {\n        focusIndex = this.$focusItem ? this.$focusItem.index : 0;\n    }\n\n    this.setData({data: this.data, focusIndex: focusIndex});\n};\n\n\n/**\n * Default render function\n *\n * @param {Element} $item in list\n * @param {Object} data to render layout element\n * @param {string} [data.title] title of checkbox\n * @param {boolean} [data.state] state of checkbox: checked or not\n * @param {string} [data.value] special value of item\n */\nRadioList.prototype.renderItemDefault = function ( $item, data ) {\n    var table,\n        tr,\n        td,\n        check;\n\n    if ( $item.ready ) {\n        $item.$title.innerText = data.title || '';\n\n        if ( data.state ) {\n            $item.classList.add(classChecked);\n            $item.checkBox.className = classIconActive;\n        } else {\n            $item.classList.remove(classChecked);\n            $item.checkBox.className = classIcon;\n        }\n\n        $item.state = data.state;\n        $item.value = data.value;\n\n    } else {\n        $item.innerHTML = '';\n        table = document.createElement('table');\n        tr = document.createElement('tr');\n        td = document.createElement('td');\n        check = document.createElement('div');\n\n        if ( data.state ) {\n            $item.classList.add(classChecked);\n            check.className = classIconActive;\n        } else {\n            $item.classList.remove(classChecked);\n            check.className = classIcon;\n        }\n\n        table.appendChild(tr);\n        td.appendChild(check);\n\n        td.className = 'checkBoxWrapper';\n        tr.appendChild(td);\n\n        td = document.createElement('td');\n        td.className = 'title';\n        td.innerText = data.title || '';\n        tr.appendChild(td);\n\n        $item.checkBox = check;\n        $item.state = data.state;\n        $item.value = data.value;\n        $item.$title = td;\n\n        $item.appendChild(table);\n\n        if ( data.state ) {\n            this.checkedData = data;\n            this.checkedIndex = $item.index;\n        }\n\n        $item.ready = true;\n    }\n};\n\n\n/**\n * Check element by index\n *\n * @param {number} index of element to check\n */\nRadioList.prototype.checkIndex = function ( index ) {\n    var $node;\n\n    if ( DEVELOP ) {\n        if ( index >= this.data.length ) {\n            throw new Error(__filename + ': wrong index to check');\n        }\n    }\n\n    // do not need to do the same\n    if ( index === this.checkedIndex ) { return; }\n\n    if ( this.checkedIndex !== null && this.$node.children.length ) {\n        this.data[this.checkedIndex].state = false;\n        $node = this.getItemNodeByIndex(this.checkedIndex);\n        if ( $node ) {\n            $node.checkBox.className = classIcon;\n            $node.classList.remove(classChecked);\n        }\n    }\n\n    $node = this.getItemNodeByIndex(index);\n    if ( $node ) {\n        $node.checkBox.className = classIconActive;\n        $node.classList.add(classChecked);\n        $node.state = true;\n    }\n\n    this.data[index].state = true;\n    this.checkedData = this.data[index];\n    this.checkedIndex = index;\n};\n\n\n/**\n * Get list item node by item index\n *\n * @param {number} index of item to find node\n * @return {?Element} item node link\n */\nRadioList.prototype.getItemNodeByIndex = function ( index ) {\n    var children = this.$node.children;\n\n    index -= this.viewIndex;\n    if ( index < this.size && index >= 0 ) {\n        return children[index];\n    }\n\n    return null;\n};\n\nRadioList.prototype.renderItem = RadioList.prototype.renderItemDefault;\n\nmodule.exports = RadioList;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n/* eslint complexity: [error, 37] */\n/* eslint max-lines-per-function: 1 */\n/* eslint no-fallthrough: 1 */\n/* eslint complexity: 1 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n\n/**\n * Mouse click event.\n *\n * @event module:stb/ui/list~List#click:item\n *\n * @type {Object}\n * @property {Element} $item clicked HTML item\n * @property {Event} event click event data\n */\n\n\n/**\n * Base list implementation.\n *\n * Each data item can be either a primitive value or an object with these fields:\n *\n *  Name    | Description\n * ---------|-------------\n *  value   | actual cell value to render\n *  mark    | is it necessary or not to render this cell as marked\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array}    [config.data=[]]     component data to visualize\n * @param {function} [config.render]      method to build each grid cell content\n * @param {function} [config.navigate]    method to move focus according to pressed keys\n * @param {number}   [config.size=5]      amount of visible items on a page\n * @param {number}   [config.viewIndex=0] move view window to this position on init\n * @param {number}   [config.focusIndex]  list item index to make item focused (move view window to this position)\n * @param {boolean}  [config.cycle=true]  allow or not to jump to the opposite side of a list when there is nowhere to go next\n * @param {boolean}  [config.scroll=null] associated ScrollBar component link\n * @param {Object}   [config.provider]    data provider\n *\n * @fires module:stb/ui/list~List#click:item\n */\nfunction List ( config ) {\n    // current execution context\n    //var self = this;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Link to the currently focused DOM element.\n     *\n     * @type {Element}\n     */\n    this.$focusItem = null;\n\n    /**\n     * Position of the visible window to render.\n     *\n     * @type {number}\n     */\n    this.viewIndex = null;\n\n    /**\n     * Component data to visualize.\n     *\n     * @type {Array}\n     */\n    this.data = [];\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Amount of visible items on a page.\n     *\n     * @type {number}\n     */\n    this.size = 5;\n\n    /**\n     * Allow or not to jump to the opposite side of a list when there is nowhere to go next.\n     *\n     * @type {boolean}\n     */\n    this.cycle = false;\n\n    /**\n     * Associated ScrollBar component link.\n     *\n     * @type {ScrollBar}\n     */\n    this.scroll = null;\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    /**\n     * Associated data provider\n     *\n     * @type {Provider}\n     */\n    this.provider = null;\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    //config.className += ' theme-main';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // component setup\n    this.init(config);\n\n    // custom navigation method\n    //if ( config.navigate ) {\n    //    if ( DEVELOP ) {\n    //        if ( typeof config.navigate !== 'function' ) { throw new Error(__filename + ': wrong config.navigate type'); }\n    //    }\n    //    // apply\n    //    this.navigate = config.navigate;\n    //}\n\n    // navigation by keyboard\n    //this.addListener('keydown', this.navigate);\n\n    // navigation by mouse\n    //this.$body.addEventListener('mousewheel', function ( event ) {\n    //    // scrolling by Y axis\n    //    if ( self.type === self.TYPE_VERTICAL && event.wheelDeltaY ) {\n    //        self.move(event.wheelDeltaY > 0 ? 38 : keys.down);\n    //    }\n    //\n    //    // scrolling by X axis\n    //    if ( self.type === self.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n    //        self.move(event.wheelDeltaX > 0 ? 37 : 39);\n    //    }\n    //});\n}\n\n\n// inheritance\nList.prototype = Object.create(Component.prototype);\nList.prototype.constructor = List;\n\n// set component name\nList.prototype.name = 'mag-component-list';\n\nList.prototype.TYPE_VERTICAL   = 1;\nList.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Fill the given item with data.\n *\n * @param {Element} $item item DOM link\n * @param {*} data associated with this item data\n */\nList.prototype.renderItemDefault = function ( $item, data ) {\n    $item.innerText = data.value;\n};\n\n\n/**\n * Method to build each list item content.\n * Can be redefined to provide custom rendering.\n *\n * @type {function}\n */\nList.prototype.renderItem = List.prototype.renderItemDefault;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nList.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse wheel events.\n     *\n     * @param {Event} event generated event\n     */\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        if ( this.type === this.TYPE_VERTICAL && event.wheelDeltaY ) {\n            this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n        }\n\n        // scrolling by X axis\n        if ( this.type === this.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n            this.move(event.wheelDeltaX > 0 ? keys.left : keys.right);\n        }\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n            case keys.right:\n            case keys.left:\n            case keys.pageUp:\n            case keys.pageDown:\n            case keys.home:\n            case keys.end:\n                // cursor move only on arrow keys\n                this.move(event.code);\n                break;\n            case keys.enter:\n                // there are some listeners\n                if ( this.events['click:item'] && this.$focusItem ) {\n                    // notify listeners\n                    this.emit('click:item', {$item: this.$focusItem, event: event});\n                }\n                break;\n        }\n    }\n};\n\n\n/**\n * Default method to move focus according to pressed keys.\n *\n * @param {Object} event generated event source of movement\n */\n//List.prototype.navigateDefault = function ( event ) {\n//    switch ( event.code ) {\n//        case 38:\n//        case 40:\n//        case 39:\n//        case 37:\n//        case 33:\n//        case 34:\n//        case 36:\n//        case 35:\n//            // cursor move only on arrow keys\n//            this.move(event.code);\n//            break;\n//        case 13:\n//            // there are some listeners\n//            if ( this.events['click:item'] ) {\n//                // notify listeners\n//                this.emit('click:item', {$item: this.$focusItem, event: event});\n//            }\n//            break;\n//    }\n//};\n\n\n/**\n * Current active method to move focus according to pressed keys.\n * Can be redefined to provide custom navigation.\n *\n * @type {function}\n */\n//List.prototype.navigate = List.prototype.navigateDefault;\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var idx, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( idx = 0; idx < data.length; idx++ ) {\n        // cell value\n        item = data[idx];\n        // primitive value\n        if ( typeof item !== 'object' ) {\n            // wrap with defaults\n            item = data[idx] = {\n                value: data[idx]\n            };\n        }\n\n        if ( DEVELOP ) {\n            //if ( !('value' in item) ) { throw new Error(__filename + ': field \"value\" is missing'); }\n            if ( ('mark' in item) && Boolean(item.mark) !== item.mark ) {\n                throw new Error(__filename + ': item.mark must be boolean');\n            }\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.init = function ( config ) {\n    var self     = this,\n        currSize = this.$body.children.length,\n        /**\n         * Item mouse click handler.\n         *\n         * @param {Event} event click event data\n         *\n         * @this Element\n         *\n         * @fires module:stb/ui/list~List#click:item\n         */\n        onClick = function ( event ) {\n            if ( this.data ) {\n                self.focusItem(this);\n\n                // there are some listeners\n                if ( self.events['click:item'] ) {\n                    // notify listeners\n                    self.emit('click:item', {$item: this, event: event});\n                }\n            }\n        },\n        item, idx;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // apply cycle behaviour\n    if ( config.cycle !== undefined ) { this.cycle = config.cycle; }\n\n    // apply ScrollBar link\n    if ( config.scroll ) { this.scroll = config.scroll; }\n\n    // apply data provider\n    if ( config.provider ) { this.provider = config.provider; }\n\n\n    // custom render method\n    if ( config.render ) {\n        if ( DEVELOP ) {\n            if ( typeof config.render !== 'function' ) {\n                throw new Error(__filename + ': wrong config.render type');\n            }\n        }\n\n        // apply\n        this.renderItem = config.render;\n    }\n\n    // list items amount on page\n    if ( config.size ) {\n        if ( DEVELOP ) {\n            if ( Number(config.size) !== config.size ) {\n                throw new Error(__filename + ': config.size must be a number');\n            }\n            if ( config.size <= 0 ) {\n                throw new Error(__filename + ': config.size should be positive');\n            }\n        }\n\n        // apply\n        this.size = config.size;\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( name ) {\n            self.events[name] = null;\n            self.addListener(name, config.events[name]);\n        });\n    }\n\n    // geometry has changed or initial draw\n    if ( this.size !== currSize ) {\n        // non-empty list\n        if ( currSize > 0 ) {\n            // clear old items\n            this.$body.innerText = null;\n        }\n\n        // create new items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            item = document.createElement('div');\n            item.index = idx;\n            //item.className = 'item theme-list-item';\n            item.className = 'item';\n\n            item.addEventListener('click', onClick);\n            this.$body.appendChild(item);\n        }\n    }\n\n    if ( this.provider ) {\n        if ( this.provider.blocked ) {\n            return;\n        }\n\n        this.provider.get( null, function ( error, data ) {\n            if ( error ) {\n                if ( self.events['data:error'] ) {\n                    /**\n                     * Provider get error while take new data\n                     *\n                     * @event module:stb/ui/list~List#data:error\n                     */\n                    self.emit('data:error', error);\n                }\n            } else {\n                if ( data ) {\n                    config.data = data;\n                    self.setData(config);\n                    if ( self.scroll ) {\n                        self.scroll.init({\n                            realSize: self.provider.maxCount,\n                            viewSize: self.provider.size,\n                            value: self.provider.head + self.provider.pos\n                        });\n                    }\n                }\n                if ( self.events['data:get'] ) {\n                    /**\n                     * Provider request new data\n                     *\n                     * @event module:stb/ui/list~List#data:get\n                     *\n                     * @type {Object}\n                     */\n                    self.emit('data:get');\n                }\n            }\n        });\n    } else if ( config.data ) {\n        this.setData(config);\n    }\n};\n\n/**\n * Set data and render inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.setData = function ( config ) {\n    // apply list of items\n\n    if ( config.data ) {\n        if ( DEVELOP ) {\n            if ( !Array.isArray(config.data) ) { throw new Error(__filename + ': wrong config.data type'); }\n        }\n        // prepare user data\n        this.data = normalize(config.data);\n    }\n\n    // view window position\n    if ( DEVELOP ) {\n        if ( config.viewIndex !== undefined ) {\n            if ( Number(config.viewIndex) !== config.viewIndex ) {\n                throw new Error(__filename + ': config.viewIndex must be a number');\n            }\n            if ( config.viewIndex < 0 ) {\n                throw new Error(__filename + ': config.viewIndex should be positive');\n            }\n        }\n    }\n\n    // reset current view window position\n    this.viewIndex = null;\n\n    if ( this.$focusItem ) {\n        this.blurItem(this.$focusItem);\n    }\n\n    if ( this.scroll ) {\n        if ( this.provider ) {\n            if ( this.scroll.realSize !== this.provider.maxCount ) {\n                this.scroll.init({\n                    realSize: this.provider.maxCount,\n                    viewSize: this.provider.size,\n                    value: this.provider.head + this.provider.pos\n                });\n            }\n        } else {\n            this.scroll.init({\n                realSize: this.data.length,\n                viewSize: this.size,\n                value: config.viewIndex || 0\n            });\n        }\n    }\n\n    // set focus item\n    if ( config.focusIndex !== undefined && this.data.length ) {\n        if ( DEVELOP ) {\n            if ( Number(config.focusIndex) !== config.focusIndex ) {\n                throw new Error(__filename + ': config.focusIndex must be a number');\n            }\n            if ( config.focusIndex < 0 ) {\n                throw new Error(__filename + ': config.focusIndex should be positive');\n            }\n            // if ( config.focusIndex > this.data.length - 1 ) {\n            //     throw new Error(__filename + ': config.focusIndex should be less than data size');\n            // }\n        }\n\n        // jump to the necessary item\n        this.focusIndex(config.focusIndex);\n    } else {\n        // go to the first page\n        this.renderView(config.viewIndex || 0);\n    }\n};\n\n\n/**\n * Shift the visible view window event.\n *\n * @event module:stb/ui/list~List#move:view\n *\n * @type {Object}\n * @property {number} prevIndex previous view window position\n * @property {number} currIndex current view window position\n */\n\n\n/**\n * Draw the visible window.\n *\n * @param {number} index start position to render\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#move:view\n */\nList.prototype.renderView = function ( index ) {\n    var $item, idx, itemData, prevIndex, currIndex;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be more than zero');\n        }\n        // if ( index >= this.data.length ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // has the view window position changed\n    if ( this.viewIndex !== index ) {\n        // save for emit\n        prevIndex = this.viewIndex;\n        // sync global pointer\n        this.viewIndex = currIndex = index;\n\n        // rebuild all visible items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            // shortcuts\n            $item    = this.$body.children[idx];\n            itemData = this.data[index];\n\n            // real item or stub\n            if ( itemData ) {\n                // correct inner data/index and render\n                $item.data  = itemData;\n                $item.index = index;\n                this.renderItem($item, itemData);\n\n                // apply CSS\n                if ( itemData.mark ) {\n                    $item.classList.add('mark');\n                } else {\n                    $item.classList.remove('mark');\n                }\n            } else {\n                // nothing to render\n                $item.data = $item.index = undefined;\n                $item.innerHTML = '&nbsp;';\n                $item.ready = false;\n            }\n            index++;\n        }\n\n        // there are some listeners\n        if ( this.events['move:view'] ) {\n            // notify listeners\n            this.emit('move:view', {prevIndex: prevIndex, currIndex: currIndex});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            this.emit('select:item', {$item: $item});\n        }\n\n        // update a linked scroll component\n        if ( this.scroll ) {\n            this.scroll.scrollTo(this.provider ? this.provider.head + this.provider.pos : this.viewIndex);\n        }\n\n        // full rebuild\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Move focus to the given direction.\n *\n * @param {number} direction arrow key code\n *\n * @fires module:stb/ui/list~List#cycle\n * @fires module:stb/ui/list~List#overflow\n */\nList.prototype.move = function ( direction ) {\n    var self = this,\n        force = false;\n\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(direction) !== direction ) {\n            throw new Error(__filename + ': direction must be a number');\n        }\n    }\n\n    // empty list\n    if ( !this.data.length ) {\n        return;\n    }\n\n    switch ( direction ) {\n        case keys.left:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.up:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index > 0 ) {\n                    if ( this.$focusItem === this.$body.firstChild ) {\n                        this.renderView(this.viewIndex - 1);\n                    } else {\n                        this.focusItem(this.$focusItem.previousSibling);\n                    }\n                } else if ( this.provider ) {\n                    if ( this.provider.blocked ) {\n                        return;\n                    }\n\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the end of the list\n                        this.move(keys.end);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.right:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.down:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index < this.data.length - 1 ) {\n                    if ( this.$focusItem === this.$body.lastChild ) {\n                        this.renderView(this.viewIndex + 1);\n                    } else {\n                        this.focusItem(this.$focusItem.nextSibling);\n                    }\n                } else if ( this.provider ) {\n                    if ( this.provider.blocked ) {\n                        return;\n                    }\n\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the beginning of the list\n                        this.move(keys.home);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.pageUp:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n\n                return;\n            }\n            if ( this.viewIndex < this.size ) {\n                // first page\n                this.renderView(0);\n            } else {\n                // second page and further\n                this.renderView(this.viewIndex - this.size + 1);\n            }\n\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.pageDown:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            // data is bigger then one page\n            if ( this.data.length > this.size ) {\n                // determine jump size\n                if ( this.viewIndex > this.data.length - this.size * 2 ) {\n                    // last page\n                    this.renderView(this.data.length - this.size);\n                } else {\n                    // before the last page\n                    this.renderView(this.viewIndex + this.size - 1);\n                }\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n        case keys.home:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n                break;\n            }\n            this.renderView(0);\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.end:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            if ( this.data.length > this.size ) {\n                this.renderView(this.data.length - this.size);\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n    }\n};\n\n\n/**\n * Highlight the given DOM element as focused.\n * Remove focus from the previously focused item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.focusItem = function ( $item ) {\n    var $prev = this.$focusItem;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n    }\n\n    // different element\n    if ( $item && $prev !== $item ) {\n        if ( DEVELOP ) {\n            if ( !($item instanceof Element) ) {\n                throw new Error(__filename + ': wrong $item type');\n            }\n            if ( $item.parentNode !== this.$body ) {\n                throw new Error(__filename + ': wrong $item parent element');\n            }\n        }\n\n        // some item is focused already\n        if ( $prev !== null ) {\n            if ( DEVELOP ) {\n                if ( !($prev instanceof Element) ) {\n                    throw new Error(__filename + ': wrong $prev type');\n                }\n            }\n\n            // style\n            $prev.classList.remove('focus');\n            //$prev.classList.remove('theme-focus');\n\n            // there are some listeners\n            if ( this.events['blur:item'] ) {\n                /**\n                 * Remove focus from an element.\n                 *\n                 * @event module:stb/ui/list~List#blur:item\n                 *\n                 * @type {Object}\n                 * @property {Element} $item previously focused HTML element\n                 */\n                this.emit('blur:item', {$item: $prev});\n            }\n        }\n        // reassign\n        this.$focusItem = $item;\n\n        this.$focusItem.data = this.data[this.$focusItem.index];\n\n        // correct CSS\n        $item.classList.add('focus');\n        //$item.classList.add('theme-focus');\n\n        // there are some listeners\n        if ( this.events['focus:item'] ) {\n            /**\n             * Set focus to a DOM element.\n             *\n             * @event module:stb/ui/list~List#focus:item\n             *\n             * @type {Object}\n             * @property {Element} $prev old/previous focused HTML element\n             * @property {Element} $curr new/current focused HTML element\n             */\n            this.emit('focus:item', {$prev: $prev, $curr: $item});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            /**\n             * Set focus to a list item.\n             *\n             * @event module:stb/ui/list~List#select:item\n             *\n             * @type {Object}\n             * @property {Element} $item new/current focused item\n             */\n            this.emit('select:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Highlight the given DOM element as blur.\n * Remove focus from the item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.blurItem = function ( $item ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) { throw new Error(__filename + ': wrong arguments number'); }\n    }\n\n    // different element\n    if ( $item ) {\n        if ( $item === this.$focusItem ) {\n            this.$focusItem = null;\n        }\n\n        $item.classList.remove('focus');\n        //$item.classList.remove('theme-focus');\n\n        // there are some listeners\n        if ( this.events['blur:item'] ) {\n            /**\n             * Remove focus from an element.\n             *\n             * @event module:stb/ui/list~List#blur:item\n             *\n             * @type {Object}\n             * @property {Element} $item previously focused HTML element\n             */\n            this.emit('blur:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Set the given item focused by item index.\n *\n * @param {number} index item data index\n */\nList.prototype.focusIndex = function ( index ) {\n    var viewIndex = this.viewIndex || 0;\n\n    if ( DEVELOP ) {\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be positive');\n        }\n        // if ( index > this.data.length - 1 ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // determine direction\n    if ( index >= viewIndex + this.size ) {\n        // check range\n        index = index < this.data.length - 1 ? index : this.data.length - 1;\n        // move down\n        this.renderView(index - this.size + 1);\n        this.focusItem(this.$body.lastChild);\n    } else if ( index < viewIndex ) {\n        // check range\n        index = index > 0 ? index : 0;\n        // move up\n        this.renderView(index);\n        this.focusItem(this.$body.firstChild);\n    } else {\n        // no move\n        if ( this.viewIndex === null ) {\n            // first attempt\n            this.renderView(0);\n        }\n        this.focusItem(this.$body.children[index - viewIndex]);\n    }\n};\n\n\n/**\n * Set item state and appearance as marked.\n *\n * @param {Node|Element} $item element to focus\n * @param {boolean} state true - marked, false - not marked\n */\nList.prototype.markItem = function ( $item, state ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 2 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !($item instanceof Element) ) {\n            throw new Error(__filename + ': wrong $item type');\n        }\n        if ( $item.parentNode !== this.$body ) {\n            throw new Error(__filename + ': wrong $item parent element');\n        }\n        if ( Boolean(state) !== state ) {\n            throw new Error(__filename + ': state must be boolean');\n        }\n    }\n\n    // correct CSS\n    if ( state ) {\n        $item.classList.add('mark');\n    } else {\n        $item.classList.remove('mark');\n    }\n\n    // apply flag\n    $item.data.mark = state;\n};\n\n\n// public\nmodule.exports = List;\n","/**\n * @license The MIT License (MIT)\n * @copyright Dmitry Fedotov <bas.jsdev@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\nvar StbComponentModal = require('stb-component-modal'),\n    Component         = require('stb-component'),\n    keys              = require('stb-keys');\n\n\n/**\n * Modal window implementation.\n *\n * @constructor\n * @extends StbComponentModal\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {Object} [config.title] message title\n * @param {Object} [config.className] message classname\n * @param {Object} [config.icon] icon at header\n * @param {Object} [config.visible] visibility flag\n * @param {Object} [config.children] content (inherited from the parent)\n *\n * @example\n * var modalSort = new Modal({\n *     visible: false,\n *     title: 'sort',\n *     events: {\n *         show: function () {\n *             list.focus();\n *         },\n *         hide: function () {\n *             page.panelSet.focus();\n *         }\n *     },\n *     children: [list = new RadioList({})]\n * });\n * page.add(modalSort);\n */\nfunction Modal ( config ) {\n    var self = this,\n        $overlay, $body, onkeydown;\n\n    // sanitize\n    config = config || {};\n    config.events = config.events || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.icon && typeof config.icon !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.icon');\n        }\n        if ( config.title && typeof config.title !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.title');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body ) {\n            throw new Error(__filename + ': config.$body should not be provided in Modal manually');\n        }\n    }\n\n    // usually can't accept focus\n    config.focusable = config.focusable || false;\n    // hide by default\n    config.visible = config.visible || false;\n    // add default close by click\n    config.events.click = config.events.click || function () { self.hide(); };\n    // add close window behavior, when pushed a back button or a menu button\n    onkeydown = config.events.keydown;\n    config.events.keydown = function ( event ) {\n        if ( onkeydown ) {\n            onkeydown.call(this, event);\n        }\n        if ( event.code === keys.back || event.code === keys.menu ) {\n            event.stop = true;\n            self.hide();\n        }\n    };\n\n    // parent constructor call\n    StbComponentModal.call(this, config);\n\n    // add table-cell wrappers\n    this.$node.appendChild(document.createElement('div'));\n    this.$node.firstChild.classList.add('alignBox');\n    this.$node.firstChild.appendChild(document.createElement('div'));\n\n    // add header div\n    this.$header = document.createElement('div');\n    this.$header.className = 'header';\n\n    // insert caption placeholder\n    this.$text = this.$header.appendChild(document.createElement('div'));\n    this.$text.classList.add('text');\n    this.$text.innerText = config.title || '';\n\n    // optional icon\n    if ( config.icon ) {\n        this.$icon = this.$header.appendChild(document.createElement('div'));\n        this.$icon.className = 'icon ' + config.icon;\n    }\n\n    $overlay = document.createElement('div');\n    $overlay.className = 'overlay';\n\n    // add to dom\n    // add body wrapper\n    $body = this.$body.parentNode.removeChild(this.$body);\n    this.$node.firstChild.firstChild.appendChild(this.$header);\n    this.$node.firstChild.firstChild.appendChild($body);\n    this.$node.firstChild.firstChild.appendChild($overlay);\n}\n\n\n// inheritance\nModal.prototype = Object.create(StbComponentModal.prototype);\nModal.prototype.constructor = Modal;\n\n// set component name\nModal.prototype.name = 'mag-component-modal';\n\n\n/**\n * Redefine default component focus to set additional css\n */\nModal.prototype.focus = function () {\n    this.$node.classList.add('active');\n    StbComponentModal.prototype.focus.call(this);\n    if ( this.children[0] && this.children[0] instanceof Component ) {\n        this.children[0].focus();\n    }\n};\n\n\n/**\n * Blur message\n */\nModal.prototype.blur = function () {\n    this.$node.classList.remove('active');\n    StbComponentModal.prototype.blur.call(this);\n};\n\n\n// public\nmodule.exports = Modal;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-modal');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-modal';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base modal window implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n */\nfunction Modal ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body ) {\n            throw new Error(__filename + ': config.$body should not be provided manually');\n        }\n    }\n\n    // create centered div\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // add table-cell wrapper\n    this.$node.appendChild(document.createElement('div').appendChild(this.$body).parentNode);\n}\n\n\n// inheritance\nModal.prototype = Object.create(Component.prototype);\nModal.prototype.constructor = Modal;\n\n// set component name\nModal.prototype.name = 'spa-component-modal';\n\n\n// public\nmodule.exports = Modal;\n","var map = {\n\t\"./de\": 14,\n\t\"./de.js\": 14,\n\t\"./en\": 15,\n\t\"./en.js\": 15,\n\t\"./es\": 16,\n\t\"./es.js\": 16,\n\t\"./et\": 17,\n\t\"./et.js\": 17,\n\t\"./fr\": 18,\n\t\"./fr.js\": 18,\n\t\"./lv\": 19,\n\t\"./lv.js\": 19,\n\t\"./ru\": 20,\n\t\"./ru.js\": 20,\n\t\"./uk\": 21,\n\t\"./uk.js\": 21\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 48;","/**\n * Main page implementation.\n */\n\n'use strict';\n\n/* eslint new-cap: 0 */\nvar Page = require('stb-component-page'),\n    Grid = require('stb-component-grid'),\n\n    keys = require('stb-keys'),\n    app = require('mag-app'),\n\n    lang = require('../modules/lang'),\n\n    qwertyProvider = require('../modules/keyboards/qwerty'),\n    numericProvider = require('../modules/keyboards/numeric'),\n    symbolsProvider = require('../modules/keyboards/symbols'),\n\n    actions = require('../modules/keyboards/actions'),\n\n    page = new Page({$node: window.pageQwerty}),\n\n    lastIntent = null,\n\n    /**\n     * Keyboard grid\n     * @type Grid\n     */\n    keyboard;\n\n\nfunction clearInput () {\n    var text = JSON.parse(window.top.stbWindowMgr.GetFocusedInputInfo()).result.text,\n        counter = 0;\n\n    if ( text && text.length > 0 ) {\n\n        while (counter < text.length) {\n            window.top.stbWebWindow.SendVirtualKeypress('BackSpace', 8);\n            ++counter;\n        }\n    }\n}\n\n\nqwertyProvider.get(null, function ( badSituation, data ) {\n    keyboard = new Grid({\n        parent: page,\n        $node: window.pageQwertyKeyboard,\n        data: data,\n        cycleX: true,\n        cycleY: false,\n        render: function ( $item, data ) {\n            if ( typeof data.value === 'undefined' ) {\n                $item.innerText = '';\n            } else {\n                $item.innerText = data.value;\n            }\n\n            if ( typeof data.className === 'undefined' ) {\n                if ( $item.className.indexOf('focus') === -1 ) {\n                    $item.className = 'item';\n                } else {\n                    $item.className = 'item focus';\n                }\n            } else {\n                $item.className += ' ' + data.className;\n            }\n        },\n        events: {\n            focus: function () {\n                // if ( input.$node.value.length > 0 ) {\n                //     input.$node.focus();\n                //     input.$node.selectionStart = input.$node.selectionEnd = lastInputCaretPosition;\n                // } else {\n                //     document.body.focus();\n                // }\n            },\n            // overflow: function ( event ) {\n            //     // if ( event.direction === keys.up ) {\n            //     //     lastInputCaretPosition = input.getCaretPosition();\n            //     //     ++verticalNavigation.active;\n            //     //     verticalNavigation.list[verticalNavigation.active].focus();\n            //     // }\n            // },\n            'click:item': function (event) {\n                if (typeof event.$item.data.action !== 'undefined') {\n                    switch (event.$item.data.action) {\n                        case actions.numericKeyboard:\n                            numericProvider.get(null, function ( error, data ) {\n                                if ( !error ) {\n                                    keyboard.$node.classList.add('small');\n                                    page.$node.classList.add('small');\n                                    keyboard.init({\n                                        data: data\n                                    });\n                                    app.numpad = true;\n                                    /* eslint new-cap: 0 */\n                                    /* eslint max-len: 0 */\n                                    window.top.stbEvent.onVkNeedReposition(JSON.parse(window.top.stbWindowMgr.GetFocusedInputInfo()).result.positionHint);\n                                }\n                            });\n                            break;\n\n                        case actions.symbolsKeyboard:\n                            symbolsProvider.get(null, function ( error, data ) {\n                                if ( !error ) {\n                                    keyboard.$node.classList.remove('small');\n                                    page.$node.classList.remove('small');\n                                    keyboard.init({\n                                        data: data\n                                    });\n                                    app.numpad = false;\n                                    /* eslint new-cap: 0 */\n                                    window.top.stbEvent.onVkNeedReposition(JSON.parse(window.top.stbWindowMgr.GetFocusedInputInfo()).result.positionHint);\n                                }\n                            });\n                            break;\n\n                        case actions.qwertyKeyboard:\n                            qwertyProvider.get(null, function ( error, data ) {\n                                if ( !error ) {\n                                    keyboard.$node.classList.remove('small');\n                                    page.$node.classList.remove('small');\n                                    keyboard.init({\n                                        data: data\n                                    });\n                                    app.numpad = false;\n                                    window.top.stbEvent.onVkNeedReposition(JSON.parse(window.top.stbWindowMgr.GetFocusedInputInfo()).result.positionHint);\n                                }\n                            });\n                            break;\n\n                        case actions.uppercase:\n                            qwertyProvider.toggleCase();\n                            qwertyProvider.get(null, function ( error, data ) {\n                                var xIndex, yIndex;\n\n                                if ( !error ) {\n                                    xIndex = keyboard.focusX;\n                                    yIndex = keyboard.focusY;\n\n                                    keyboard.init({data: data});\n                                    keyboard.focusItem(keyboard.map[yIndex][xIndex]);\n                                }\n                            });\n\n                            break;\n\n                        case actions.changeLanguage:\n                            // radioList.focus();\n                            ++lang.active;\n                            if (lang.codes.length === lang.active) {\n                                lang.active = 0;\n                            }\n                            if (PLATFORM === 'MAG') {\n                                window.parent.gSTB.SetInputLang(lang.codes[lang.active]);\n                            }\n                            qwertyProvider.get(null, function (error, data) {\n                                var xIndex, yIndex;\n\n                                if ( !error ) {\n                                    xIndex = keyboard.focusX;\n                                    yIndex = keyboard.focusY;\n\n                                    keyboard.init({\n                                        data: data\n                                    });\n                                    keyboard.focusItem(keyboard.map[yIndex][xIndex]);\n                                }\n                            });\n                            break;\n\n                        case actions.done:\n                            window.top.stbWebWindow.SendVirtualKeypress('Enter', 13);\n                            break;\n\n                        case actions.backspace:\n                            window.top.stbWebWindow.SendVirtualKeypress('BackSpace', 8);\n                            break;\n                        case actions.space:\n                            window.top.stbWebWindow.SendVirtualKeypress('Space', 0);\n                            break;\n                        case actions.cancel:\n                            window.top.stbWebWindow.close();\n                            break;\n                        case actions.clear:\n                            clearInput();\n\n                            break;\n                        case actions.moveCaretToEnd:\n                            window.top.stbWebWindow.SendVirtualKeypress('End', 35);\n                            break;\n                        case actions.moveCaretToLeft:\n                            window.top.stbWebWindow.SendVirtualKeypress('Left', 37);\n                            break;\n                        case actions.moveCaretToStart:\n                            window.top.stbWebWindow.SendVirtualKeypress('Home', 36);\n                            break;\n                        case actions.moveCaretToRight:\n                            window.top.stbWebWindow.SendVirtualKeypress('Right', 39);\n                            break;\n                    }\n                } else if (typeof event.$item.data.value !== 'undefined') {\n                    window.top.stbWebWindow.SendVirtualKeypress(event.$item.data.value, 0);\n                }\n            }\n        }\n    });\n});\n\npage.addListener('show', function () {\n    keyboard.focus();\n    document.body.style.height = '100%';\n    document.body.style.width = '100%';\n    window.top.stbEvent.onVkNeedReposition(JSON.parse(window.top.stbWindowMgr.GetFocusedInputInfo()).result.positionHint);\n    // window.top.stbWebWindow.SetGeometry(sizes.main.left, sizes.main.top, sizes.main.width, sizes.main.height);\n});\n\n\npage.addListener('keydown', function (event) {\n    switch ( event.code ) {\n        case keys.exit:\n        case keys.keyboard:\n            window.top.gSTB.HideVirtualKeyboard();\n            // window.top.stbWebWindow.close();\n            break;\n        // case keys.back:\n        //     if ( input.$node.value.length === 0 ) {\n        //         lastIntent.close();\n        //         window.core.call('hide');\n        //         window.core.call('blur');\n        //     }\n        //     break;\n\n        // case keys.f1:\n        //     input.removeChar(input.getCaretPosition() - 1);\n        //     break;\n\n        // case keys.f2:\n        //     radioList.focus();\n        //     break;\n\n        // case keys.f3:\n        //     window.core.call('hide');\n        //     window.core.call('blur');\n        //     lastIntent.emit('done', {value: input.$node.value});\n        //     input.$node.value = '';\n        //     lastIntent.close();\n        //     break;\n\n        // case keys.f4:\n        //     input.addChar(' ', input.getCaretPosition());\n        //     ++lastInputCaretPosition;\n        //     input.$node.blur();\n        //     input.$node.focus();\n        //     input.$node.selectionStart = input.$node.selectionEnd = lastInputCaretPosition;\n        //     break;\n\n        default:\n            break;\n    }\n});\n\n// input.$node.addEventListener('keydown', function ( event ) {\n//     if ( page.activeComponent !== input ) {\n//         switch ( event.keyCode ) {\n//             case keys.f1:\n//             case keys.left:\n//             case keys.right:\n//             case keys.up:\n//             case keys.down:\n//                 event.preventDefault();\n//                 break;\n\n//             default:\n//                 break;\n//         }\n//     }\n// });\n\n// input.getCaretPosition = function () {\n//     return this.$node.selectionStart;\n// };\n\nwindow.core.addListener('hide', function () {\n    if (lastIntent) {\n        lastIntent.close();\n    }\n    window.core.call('hide');\n});\n\n// window.core.addListener('intent', function ( intent, callback ) {\n//     var logoUrl;\n\n//     if ( intent.action === 'keyboard' ) {\n//         intent.once('close', function () {\n//             if ( popup.visible ) {\n//                 popup.hide();\n//                 keyboard.focus();\n//             }\n//         });\n//         lastIntent = intent;\n//         logoUrl = intent.runnerConfig.uris.icons.logoActive;\n\n//         if ( popup.visible ) {\n//             popup.hide();\n//             keyboard.focus();\n//         }\n\n//         lang.active = lang.codes.indexOf(window.core.environment.language);\n//         if ( lang.active === -1 ) {\n//             lang.active = 0;\n//         }\n//         radioList.setCheckedIndex(lang.active);\n\n//         window.pageMainLabel.innerText = window.pageMainInput.placeholder = input.value = input.$node.value = '';\n//         window.pageMainIcon.style.backgroundImage = 'url(' + logoUrl + ')';\n//         window.pageMainLabel.innerText = intent.runnerConfig.name;\n//         input.$node.focus();\n\n//         switch ( intent.data.type ) {\n//             case 'password':\n//                 window.pageMainHeadTitle.innerText = gettext('Enter the password');\n//                 button.$text.innerText = gettext('Show password');\n//                 button.show();\n//                 verticalNavigation.list = [keyboard, button, input];\n//                 verticalNavigation.active = 0;\n//                 keyboard.focus();\n//                 break;\n\n//             default:\n//                 window.pageMainHeadTitle.innerText = gettext('Enter the data');\n//                 button.hide();\n//                 verticalNavigation.list = [keyboard, input];\n//                 verticalNavigation.active = 0;\n//                 keyboard.focus();\n//                 break;\n//         }\n\n//         if ( intent.data ) {\n//             // prepare interface\n//             if ( intent.data.title ) {\n//                 window.pageMainHeadTitle.innerText = intent.data.title;\n//             }\n\n//             if ( intent.data.icon ) {\n//                 window.pageMainIcon.style.backgroundImage = 'url(' + intent.data.icon + ')';\n//             }\n\n//             if ( intent.data.description ) {\n//                 window.pageMainLabel.innerText = intent.data.description;\n//             }\n\n//             if ( intent.data.placeholder ) {\n//                 window.pageMainInput.placeholder = intent.data.placeholder;\n//             }\n\n//             if ( intent.data.value ) {\n//                 input.value = input.$node.value = '' + intent.data.value;\n//                 lastInputCaretPosition = input.$node.selectionStart = input.$node.selectionEnd = input.value.length;\n//             }\n\n//             if ( intent.data.position ) {\n//                 lastInputCaretPosition = input.$node.selectionStart = input.$node.selectionEnd = +intent.data.position;\n//             }\n\n//             if ( intent.data.language ) {\n//                 if ( lang.codes.indexOf(intent.data.language) !== -1 ) {\n//                     lang.active = lang.codes.indexOf(intent.data.language);\n//                 }\n//             }\n//         }\n\n//         switch ( intent.data.mode ) {\n//             case 'pin':\n//             case 'number':\n//                 numericProvider.get(null, function ( error, data ) {\n//                     keyboard.$node.classList.add('small');\n//                     input.$node.classList.add('small');\n//                     keyboard.init({\n//                         data: data\n//                     });\n//                 });\n//                 break;\n\n//             default:\n\n//                 qwertyProvider.get(null, function ( error, data ) {\n//                     keyboard.$node.classList.remove('small');\n//                     input.$node.classList.remove('small');\n//                     keyboard.init({\n//                         data: data\n//                     });\n//                 });\n//                 break;\n//         }\n\n//         switch ( intent.data.type ) {\n//             case 'password':\n//                 input.$node.type = 'password';\n//                 break;\n\n//             default:\n//                 input.$node.type = '';\n//                 break;\n//         }\n\n//         // show keyboard\n//         window.core.call('show');\n//         window.core.call('focus');\n//         callback(false, {});\n//     }\n// });\n\n// if ( PLATFORM === 'TIZEN' || PLATFORM === 'WEBOS' || PLATFORM === 'SMARTTV' ) {\n//     input.$node.setAttribute('readonly', 'true');\n// }\n\nwindow.core.plugins.keyboardLayouts.addListener('update', function (list) {\n    var lang = require('../modules/lang'),\n        codes = [],\n        fullNames = [],\n        shortNames = [];\n\n    if (list && list.length > 0) {\n        list.forEach(function (code) {\n            var index = lang.supportedCodes.indexOf(code);\n\n            if (index !== -1) {\n                codes.push(lang.supportedCodes[index]);\n                fullNames.push(lang.supportedFullNames[index]);\n                shortNames.push(lang.supportedShortNames[index]);\n            }\n        });\n\n        lang.codes = codes;\n        lang.fullNames = fullNames;\n        lang.shortNames = shortNames;\n    }\n\n    lang.active = lang.codes.indexOf(core.environment.language);\n\n    if (lang.active === -1) {\n        lang.active = 0;\n    }\n\n    if (PLATFORM === 'MAG') {\n        window.parent.gSTB.SetInputLang(lang.codes[lang.active]);\n    }\n\n    // radioList.init({\n    //     focusIndex: lang.active,\n    //     size: lang.fullNames.length > 5 ? 5 : lang.fullNames.length,\n    //     data: lang.fullNames.map(function ( item, index ) {\n    //         console.log(item)\n    //         console.log(lang.shortNames[index])\n\n    //         return {\n    //             state: lang.active === index,\n    //             title: item + ' (' + lang.shortNames[index] + ')',\n    //             value: index\n    //         };\n    //     })\n    // });\n\n    qwertyProvider.get(null, function (error, data) {\n        if ( !error ) {\n            keyboard.init({data: data});\n        }\n    });\n});\n\n\n// public\nmodule.exports = page;\n"],"sourceRoot":""}