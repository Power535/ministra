{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/spa-app/lib/core.js","webpack:///./node_modules/stb-keys/index.js","webpack:///./node_modules/cjs-emitter/index.js","webpack:///./node_modules/stb-component/index.js","webpack:///./node_modules/mag-app/index.js","webpack:///./node_modules/stb-app/lib/css.js","webpack:///./node_modules/spa-component/index.js","webpack:///./src/js/components/content.list.layouts/static.js","webpack:///./src/js/main.js","webpack:///./node_modules/mag-app/lib/main.js","webpack:///./node_modules/cjs-query/index.js","webpack:///./src/js/config.js","webpack:///./node_modules/spa-app/lib/events.js","webpack:///./node_modules/stb-shim-classlist/index.js","webpack:///./node_modules/stb-app/lib/metrics.js","webpack:///./src/js/metrics.js","webpack:///./node_modules/mag-app/lib/css.js","webpack:///./node_modules/cjs-async/parallel.js","webpack:///./node_modules/mag-tools/canvas.js","webpack:///./node_modules/spa-gettext/index.js","webpack:///./node_modules/cjs-gettext/index.js","webpack:///./src/js/pages/main.js","webpack:///./node_modules/spa-keys/index.js","webpack:///./node_modules/stb-component-page/index.js","webpack:///./node_modules/spa-component-page/index.js","webpack:///./src/js/components/content.board.js","webpack:///./src/js/components/content.list.js","webpack:///./src/js/components/content.list.layouts/index.js","webpack:///./node_modules/magcore-plugin-content-board/index.js","webpack:///./src/js/components/content.list.layouts/tv.channel.js","webpack:///./src/js/components/content.list.layouts/video.js","webpack:///./src/js/components/content.list.layouts/record.js","webpack:///./src/js/components/content.list.layouts/application.js","webpack:///./src/js/components/app.button.js","webpack:///./src/js/modules/clock.date.js","webpack:///./src/js/modules/clock.time.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Emitter","parse","app","query","document","location","search","substring","config","activePage","route","pageTo","data","page","pageFrom","active","id","$node","classList","remove","events","emit","add","showPage","this","from","to","keys","back","backspace","channelNext","tab","channelPrev","ok","enter","exit","escape","volumeUp","volumeDown","f1","f2","f3","f4","refresh","frame","phone","set","tv","menu","rewind","forward","audio","standby","keyboard","usbMounted","usbUnmounted","playPause","play","pause","stop","power","record","info","mute","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","addListener","callback","push","once","self","onceWrapper","removeListener","apply","arguments","addListeners","callbacks","filter","fn","length","undefined","index","event","Array","slice","constructor","link","createElement","rel","href","metrics","height","head","appendChild","counter","Component","visible","focusable","$body","parent","children","propagate","className","hide","defaultEvents","forEach","eventName","addEventListener","focus","stopPropagation","child","parentNode","item","activeComponent","blur","splice","indexOf","removeChild","activeItem","show","setTimeout","$emptyNode","square","render","$shadow","$container","style","backgroundColor","colors","background","icon","hasImage","backgroundImage","normal","image","$title","innerText","description","$description","rectangle","$icon","$info","$name","parallel","Canvas","done","load","window","core","environment","language","canvas","width","screen","loadImageFromBodyBackground","error","appendTo","getElementById","body","alias","backend","settings","theme","logo","url","position","themes","request","onload","response","logoFilename","logoAlign","onerror","ontimeout","pages","main","ready","getCoreInstance","platform","setAttribute","type","contextmenu","preventDefault","split","part","decodeURIComponent","stringify","params","encodeURIComponent","join","DOMContentLoaded","unload","keydown","eventLocal","code","keyCode","ctrlKey","altKey","shiftKey","keypress","mousewheel","documentElement","DOMTokenList","el","_element","_classCache","classes","replace","token","contains","toString","toggle","Element","screenHeight","availHeight","availTop","availBottom","availWidth","availLeft","availRight","480","576","720","1080","linkCSS","path","tasks","isError","results","isArray","task","result","Error","$dom","context","getContext","currentImage","domNodeToAppend","drawImageFromUrl","imageUrl","src","drawImage","clearRect","rect","x","y","restoreImage","getBase64String","toDataURL","imgUrl","getComputedStyle","Gettext","loader","prepare","gettext","_","pgettext","ngettext","defaultLanguage","xhr","ext","XMLHttpRequest","JSON","responseText","open","send","meta","msgId","plural","evalResult","eval","Page","ContentBoard","$header","contentPanel","provider","plugins","contentBoard","focus:row","focusIndex","direction","down","scrollIntoView","up","clockDate","clockTime","months","pmLogo","date","Date","ts","now","pmTime","pmDate","setInterval","space","pageUp","pageDown","end","home","left","right","insert","del","List","AppButton","offset","providers","rows","imageCache","apps","appInFocus","$focusLine","move","scrollTop","list","$line","listKeydown","firstChild","$focusItem","appButtonKeydown","wheelDeltaY","count","application","packageName","addContentList","iconNormal","iconActive","uniqueUris","icons","uris","Image","primeLogoNormal","primeLogoActive","shadowNormal","shadowActive","row","rowIndex","appButton","contentList","listClass","instance","addContentItem","removeContentItem","offsetHeight","layouts","ContentList","layout","viewIndex","disabledList","cycle","dataToDOM","focusItem","blurItem","init","normalize","geometry","tabIndex","timeoutId","clearTimeout","onClick","renderView","$item","iteration","itemData","size","$prev","$target","previousSibling","pop","display","nextSibling","offsetWidth","currSize","lastChild","insertBefore","$focused","$parentNode","contentBoardApi","staticLayout","tvChannel","video","static","horizontal","vertical","round","actions","favorite","accessControl","expandItemContent","previewPlayback","intent","playIntent","viewport","action","mime","silent","title","uri","solution","top","displayOnTop","aspect","stopPlayback","number","$index","$channelInfo","$channelDescription","runApp","program","censored","tvChannelInfo","getBoundingClientRect","playOnFocus","$nameText","$state","$progressBar","$progressLine","$progressPercent","progress","state","splashBackground","$overlay","click","$background","$overlayIcon","timestamp","month","getMonth","getDate","hh","mm","setTime","getHours","getMinutes"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    parse   = require('cjs-query').parse,\n    app     = new Emitter();\n\n\n/**\n * Make the given inactive/hidden page active/visible.\n * Pass some data to the page and trigger the corresponding event.\n *\n * @param {Page} page item to show\n * @param {*} [data] data to send to page\n *\n * @return {boolean} operation status\n */\nfunction showPage ( page, data ) {\n    // page available and can be hidden\n    if ( page && !page.active ) {\n        // apply visibility\n        page.$node.classList.add('active');\n        page.active = true;\n        app.activePage = page;\n\n        debug.info('show component ' + page.name + '#' + page.id, null, {\n            tags: ['show', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' show', 'green');\n\n        // there are some listeners\n        if ( page.events['show'] ) {\n            // notify listeners\n            page.emit('show', {data: data});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n/**\n * Make the given active/visible page inactive/hidden and trigger the corresponding event.\n *\n * @param {Page} page item to hide\n *\n * @return {boolean} operation status\n */\nfunction hidePage ( page ) {\n    // page available and can be hidden\n    if ( page && page.active ) {\n        // apply visibility\n        page.$node.classList.remove('active');\n        page.active  = false;\n        app.activePage = null;\n\n        debug.info('hide component ' + page.name + '#' + page.id, null, {\n            tags: ['hide', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' hide', 'grey');\n\n        // there are some listeners\n        if ( page.events['hide'] ) {\n            // notify listeners\n            page.emit('hide');\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n// url request params\napp.query = parse(document.location.search.substring(1));\n\n\n// global application configuration\n// in config.js file in js root\napp.config = require('app:config');\n\n\n// the only visible page\napp.activePage = null;\n\n\n/**\n * Browse to a given page.\n * Do nothing if the link is invalid. Otherwise hide the current, show new and update the \"previous\" link.\n *\n * @param {Page} pageTo instance of the page to show\n * @param {*} [data] options to pass to the page on show\n *\n * @return {boolean} operation status\n */\napp.route = function ( pageTo, data ) {\n    var pageFrom = app.activePage;\n\n    if ( DEVELOP ) {\n        //if ( router.pages.length > 0 ) {\n        if ( !pageTo || typeof pageTo !== 'object' ) {\n            throw new Error(__filename + ': wrong pageTo type');\n        }\n        if ( !('active' in pageTo) ) {\n            throw new Error(__filename + ': missing field \"active\" in pageTo');\n        }\n        //}\n    }\n\n    // valid not already active page\n    if ( pageTo && !pageTo.active ) {\n        //debug.log('router.navigate: ' + pageTo.id, pageTo === pageFrom ? 'grey' : 'green');\n        debug.info('app route: ' + pageTo.name + '#' + pageTo.id, null, {tags: ['route', pageTo.name, pageTo.id]});\n\n        // update url\n        //location.hash = this.stringify(name, data);\n\n        // apply visibility\n        hidePage(app.activePage);\n        showPage(pageTo, data);\n\n        // there are some listeners\n        if ( this.events['route'] ) {\n            // notify listeners\n            this.emit('route', {from: pageFrom, to: pageTo});\n        }\n\n        // store\n        //this.history.push(pageTo);\n\n        return true;\n    }\n\n    //debug.warn('invalid page to route: ' + pageTo.id, null, {tags: ['route', 'page', pageTo.id]});\n    console.warn('invalid page to route: ' + pageTo.id);\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = app;\n","/**\n * Global list of non-printable control key codes.\n *\n * At the moment `keypress` and `keydown` events are emitted for the same keys (for both printable and non-printable characters).\n *\n * WARNING!!! All codes in this file (except 'volumeUp' and 'volumeDown')\n * are used in window 'keydown' handler to prevent wrong 'keypress' firings.\n * If you add new code to this file 'keypress' event with this code will never fire.\n *\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar keys = require('spa-keys');\n\n\n// extend with additional codes\nkeys.back         = keys.backspace;\nkeys.channelNext  = keys.tab;        // Tab\nkeys.channelPrev  = keys.tab + 's';  // Shift+Tab\nkeys.ok           = keys.enter;      // Enter\nkeys.exit         = keys.escape;     // Esc\nkeys.volumeUp     = 107;             // NUMPAD +\nkeys.volumeDown   = 109;             // NUMPAD -\nkeys.f1           = 112 + 'c';       // Ctrl+F1\nkeys.f2           = 113 + 'c';       // Ctrl+F2\nkeys.f3           = 114 + 'c';       // Ctrl+F3\nkeys.f4           = 115 + 'c';       // Ctrl+F4\nkeys.refresh      = 116 + 'c';       // Ctrl+F5\nkeys.frame        = 117 + 'c';       // Ctrl+F6\nkeys.phone        = 119 + 'c';       // Ctrl+F8\nkeys.set          = 120 + 'c';       // Ctrl+F9\nkeys.tv           = 121 + 'c';       // Ctrl+F10\nkeys.menu         = 122 + 'c';       // Ctrl+F11\nkeys.app          = 123 + 'c';       // Ctrl+F12\nkeys.rewind       = 66  + 'a';       // Alt+B\nkeys.forward      = 70  + 'a';       // Alt+F\nkeys.audio        = 71  + 'a';       // Alt+G\nkeys.standby      = 74  + 'a';       // Alt+J\nkeys.keyboard     = 76  + 'a';       // Alt+L\nkeys.usbMounted   = 80  + 'a';       // Alt+P\nkeys.usbUnmounted = 81  + 'a';       // Alt+Q\nkeys.playPause    = 82  + 'a';       // Alt+R\nkeys.play         = -1;              // should be redefined on some platforms\nkeys.pause        = -1;              // should be redefined on some platforms\nkeys.stop         = 83  + 'a';       // Alt+S\nkeys.power        = 85  + 'a';       // Alt+U\nkeys.record       = 87  + 'a';       // Alt+W\nkeys.info         = 89  + 'a';       // Alt+Y\nkeys.mute         = 192 + 'a';\nkeys.digit0       = 48;\nkeys.digit1       = 49;\nkeys.digit2       = 50;\nkeys.digit3       = 51;\nkeys.digit4       = 52;\nkeys.digit5       = 53;\nkeys.digit6       = 54;\nkeys.digit7       = 55;\nkeys.digit8       = 56;\nkeys.digit9       = 57;\n\n\n// public\nmodule.exports = keys;\n\n// public\n// module.exports = {\n//     getCode: function ( event ) {\n//         var code = event.keyCode;\n//\n//         // apply key modifiers\n//         if ( event.shiftKey ) { code += 1000; }\n//         if ( event.altKey )   { code += 2000; }\n//\n//         return code;\n//     },\n//\n//     codes: {\n//         back:         8,    // Backspace\n//         channelPrev:  1009, // Shift+Tab\n//         channelNext:  9,    // Tab\n//         ok:           13,   // Enter\n//         exit:         27,   // Esc\n//         pageUp:       33,\n//         pageDown:     34,\n//         end:          35,\n//         home:         36,\n//         left:         37,\n//         up:           38,\n//         right:        39,\n//         down:         40,\n//         'delete':     46,\n//         volumeUp:     107,  // NUMPAD +\n//         volumeDown:   109,  // NUMPAD -\n//         f1:           112,  // F1\n//         f2:           113,  // F2\n//         f3:           114,  // F3\n//         f4:           115,  // F4\n//         refresh:      116,  // F5\n//         frame:        117,  // F6\n//         phone:        119,  // F8\n//         set:          120,  // F9\n//         tv:           121,  // F10\n//         menu:         122,  // F11\n//         app:          123,  // F12\n//         rewind:       2066, // Alt+B\n//         forward:      2070, // Alt+F\n//         audio:        2071, // Alt+G\n//         standby:      2074, // Alt+J\n//         keyboard:     2076, // Alt+L\n//         usbMounted:   2080, // Alt+P\n//         usbUnmounted: 2081, // Alt+Q\n//         playPause:    2082, // Alt+R\n//         stop:         2083, // Alt+S\n//         power:        2085, // Alt+U\n//         record:       2087, // Alt+W\n//         info:         2089, // Alt+Y\n//         mute:         2192\n//     }\n// };\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Base Events Emitter implementation.\n *\n * @see http://nodejs.org/api/events.html\n * @constructor\n *\n * @example\n * var emitter = new Emitter();\n */\nfunction Emitter () {\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // if ( DEVELOP ) {\n    //     if ( typeof this !== 'object' ) { throw new Error(__filename + ': must be constructed via new'); }\n    // }\n\n    /**\n     * Inner hash table for event names and linked callbacks.\n     * Manual editing should be avoided.\n     *\n     * @member {Object.<string, function[]>}\n     *\n     * @example\n     * {\n     *     click: [\n     *         function click1 () { ... },\n     *         function click2 () { ... }\n     *     ],\n     *     keydown: [\n     *         function () { ... }\n     *     ]\n     * }\n     **/\n    this.events = {};\n}\n\n\nEmitter.prototype = {\n    /**\n     * Bind an event to the given callback function.\n     * The same callback function can be added multiple times for the same event name.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.addListener('click', function ( data ) { ... });\n     * // one more click handler\n     * emitter.addListener('click', function ( data ) { ... });\n     */\n    addListener: function ( name, callback ) {\n        console.assert(arguments.length === 2, 'wrong arguments number');\n        console.assert(typeof name === 'string', 'wrong name type');\n        console.assert(name.length > 0, 'empty name');\n        console.assert(typeof callback === 'function', 'callback should be a function');\n\n        // if ( DEVELOP ) {\n        //     if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        //     if ( typeof name !== 'string' || name.length === 0 ) { throw new Error(__filename + ': wrong or empty name'); }\n        //     if ( typeof callback !== 'function' ) { throw new Error(__filename + ': wrong callback type'); }\n        // }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(callback);\n    },\n\n\n    /**\n     * Add a one time listener for the event.\n     * This listener is invoked only the next time the event is fired, after which it is removed.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.once('click', function ( data ) { ... });\n     */\n    once: function ( name, callback ) {\n        // current execution context\n        var self = this;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n        }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(function onceWrapper () {\n            self.removeListener(name, onceWrapper);\n            callback.apply(self, arguments);\n        });\n    },\n\n\n    /**\n     * Apply multiple listeners at once.\n     *\n     * @param {Object} callbacks event names with callbacks\n     *\n     * @example\n     * emitter.addListeners({\n     *     click: function ( data ) {},\n     *     close: function ( data ) {}\n     * });\n     */\n    addListeners: function ( callbacks ) {\n        var name;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof callbacks !== 'object' ) {\n                throw new Error(__filename + ': wrong callbacks type');\n            }\n            if ( Object.keys(callbacks).length === 0 ) {\n                throw new Error(__filename + ': no callbacks given');\n            }\n        }\n\n        for ( name in callbacks ) {\n            if ( callbacks.hasOwnProperty(name) ) {\n                this.addListener(name, callbacks[name]);\n            }\n        }\n    },\n\n\n    /**\n     * Remove all instances of the given callback.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to remove\n     *\n     * @example\n     * emitter.removeListener('click', func1);\n     */\n    removeListener: function ( name, callback ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n            if ( this.events[name] && !Array.isArray(this.events[name]) ) {\n                throw new Error(__filename + ': corrupted inner data');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( this.events[name] ) {\n            // rework the callback list to exclude the given one\n            this.events[name] = this.events[name].filter(function callbacksFilter ( fn ) { return fn !== callback; });\n            // event has no more callbacks so clean it\n            if ( this.events[name].length === 0 ) {\n                // as if there were no listeners at all\n                this.events[name] = undefined;\n            }\n        }\n    },\n\n\n    /**\n     * Remove all callbacks for the given event name.\n     * Without event name clears all events.\n     *\n     * @param {string} [name] event identifier\n     *\n     * @example\n     * emitter.removeAllListeners('click');\n     * emitter.removeAllListeners();\n     *\n     * @deprecated\n     */\n    /*removeAllListeners: function ( name ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 0 && (typeof name !== 'string' || name.length === 0) ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // check input\n        if ( arguments.length === 0 ) {\n            // no arguments so remove everything\n            this.events = {};\n        } else if ( name ) {\n            if ( DEVELOP ) {\n                if ( this.events[name] ) { throw new Error(__filename + ': event is not removed'); }\n            }\n\n            // only name is given so remove all callbacks for the given event\n            // but object structure modification should be avoided\n            this.events[name] = undefined;\n        }\n    },*/\n\n\n    /**\n     * Execute each of the listeners in the given order with the supplied arguments.\n     *\n     * @param {string} name event identifier\n     *\n     * @example\n     * emitter.emit('init');\n     * emitter.emit('click', {src: panel1, dst: panel2});\n     * emitter.emit('load', error, data);\n     *\n     * // it's a good idea to emit event only when there are some listeners\n     * if ( this.events['click'] ) {\n     *     this.emit('click', {event: event});\n     * }\n     */\n    emit: function ( name ) {\n        var event = this.events[name],\n            index;\n\n        if ( DEVELOP ) {\n            if ( arguments.length < 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( event ) {\n            if ( DEVELOP ) {\n                if ( !Array.isArray(event) ) {\n                    throw new Error(__filename + ': wrong event type');\n                }\n            }\n\n            for ( index = 0; index < event.length; index++ ) {\n                if ( DEVELOP ) {\n                    if ( typeof event[index] !== 'function' ) {\n                        throw new Error(__filename + ': wrong event callback type');\n                    }\n                }\n\n                // invoke the callback with parameters\n                event[index].apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n    }\n};\n\n\n// correct constructor name\nEmitter.prototype.constructor = Emitter;\n\n\n// public\nmodule.exports = Emitter;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component');\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar app = require('./lib/main');\n\n\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core');\n//    metrics = require('app:metrics'),\n//    linkCSS;\n\n\n// global link\n//app.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\n//app.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\n//app.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n// // set max browser window size\n// window.moveTo(0, 0);\n// window.resizeTo(metrics.width, metrics.height);\n\n// load CSS file base on resolution\n/*linkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = 'css/' + (DEVELOP ? 'develop.' : 'release.') + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);*/\n\n\n// public\nmodule.exports = function ( name ) {\n    var link = document.createElement('link');\n\n    link.rel  = 'stylesheet';\n    link.href = 'css/' + name + '.' + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\n    document.head.appendChild(link);\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    Emitter = require('cjs-emitter'),\n    counter = 0;\n\n\n/**\n * Base component implementation.\n *\n * Visual element that can handle sub-components.\n * Each component has a DOM element container $node with a set of classes:\n * \"component\" and some specific component class names depending on the hierarchy, for example \"page\".\n * Each component has a unique ID given either from $node.id or from data.id. If not given will generate automatically.\n *\n * @constructor\n * @extends Emitter\n *\n * @param {Object} [config={}] init parameters\n * @param {Element} [config.id] component unique identifier (generated if not set)\n * @param {string} [config.className] space-separated list of classes for \"className\" property of this.$node\n * @param {Element} [config.$node] DOM element/fragment to be a component outer container\n * @param {Element} [config.$body] DOM element/fragment to be a component inner container (by default is the same as $node)\n * @param {Component} [config.parent] link to the parent component which has this component as a child\n * @param {Array.<Component>} [config.children=[]] list of components in this component\n * @param {Object.<string, function>} [config.events={}] list of event callbacks\n * @param {boolean} [config.visible=true] component initial visibility state flag\n * @param {boolean} [config.focusable=true] component can accept focus or not\n * @param {boolean} [config.propagate=false] allow to emit events to the parent component\n *\n * @fires module:stb/component~Component#click\n *\n * @example\n * var component = new Component({\n *     $node: document.getElementById(id),\n *     className: 'bootstrap responsive',\n *     events: {\n *         click: function () { ... }\n *     }\n * });\n * component.add( ... );\n * component.focus();\n */\nfunction Component ( config ) {\n    // current execution context\n    var self = this,\n        name;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.id && typeof config.id !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.id');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$node && !(config.$node instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$node type');\n        }\n        if ( config.$body && !(config.$body instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$body type');\n        }\n        if ( config.parent && !(config.parent instanceof Component) ) {\n            throw new Error(__filename + ': wrong config.parent type');\n        }\n        if ( config.children && !Array.isArray(config.children) ) {\n            throw new Error(__filename + ': wrong config.children type');\n        }\n    }\n\n    /**\n     * Component visibility state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.visible = true;\n\n    /**\n     * Component can accept focus or not.\n     *\n     * @type {boolean}\n     */\n    this.focusable = true;\n\n    /**\n     * DOM outer handle.\n     *\n     * @type {Element}\n     */\n    this.$node = null;\n\n    /**\n     * DOM inner handle.\n     * In simple cases is the same as $node.\n     *\n     * @type {Element}\n     */\n    this.$body = null;\n\n    /**\n     * Link to the parent component which has this component as a child.\n     *\n     * @type {Component}\n     */\n    this.parent = null;\n\n    /**\n     * List of all children components.\n     *\n     * @type {Component[]}\n     */\n    this.children = [];\n\n    /**\n     * allow to emit events to the parent component\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.propagate = !!config.propagate;\n\n    // parent constructor call\n    Emitter.call(this);\n\n    // outer handle - empty div in case nothing is given\n    this.$node = config.$node || document.createElement('div');\n\n    // inner handle - the same as outer handler in case nothing is given\n    this.$body = config.$body || this.$node;\n\n    // set CSS class names\n    //this.$node.className += ' component ' + (config.className || '');\n    // previous approach is not good as it mess with components hierarchy\n    this.$node.className = this.name + ' ' + (config.className || '');\n\n    // apply component id if given, generate otherwise\n    this.id = config.id || this.$node.id || 'cid' + counter++;\n\n    // apply hierarchy\n    if ( config.parent ) {\n        // add to parent component\n        config.parent.add(this);\n    }\n\n    // apply given visibility\n    if ( config.visible === false ) {\n        // default state is visible\n        this.hide();\n    }\n\n    // apply focus handling method\n    if ( config.focusable === false ) {\n        // can't accept focus\n        this.focusable = false;\n    }\n\n    // a descendant defined own events\n    if ( this.defaultEvents ) {\n        // sanitize\n        config.events = config.events || {};\n\n        if ( DEVELOP ) {\n            if ( typeof config.events !== 'object' ) {\n                throw new Error(__filename + ': wrong config.events type');\n            }\n            if ( typeof this.defaultEvents !== 'object' ) {\n                throw new Error(__filename + ': wrong this.defaultEvents type');\n            }\n        }\n\n        for ( name in this.defaultEvents ) {\n            // overwrite default events with user-defined\n            config.events[name] = config.events[name] || this.defaultEvents[name];\n        }\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( eventName ) {\n            self.addListener(eventName, config.events[eventName]);\n        });\n    }\n\n    // apply the given children components\n    if ( config.children ) {\n        // apply\n        this.add.apply(this, config.children);\n    }\n\n    // component activation by mouse\n    this.$node.addEventListener('click', function ( event ) {\n        // left mouse button\n        //if ( event.button === 0 ) {\n        // activate if possible\n        self.focus();\n\n        // there are some listeners\n        if ( self.events['click'] ) {\n            /**\n             * Mouse click event.\n             *\n             * @event module:stb/component~Component#click\n             *\n             * @type {Object}\n             * @property {Event} event click event data\n             */\n            self.emit('click', event);\n        }\n        //}\n\n        if ( DEVELOP ) {\n            // middle mouse button\n            if ( event.button === 1 ) {\n                //debug.inspect(self, 0);\n                debug.info('\"window.link\" or \"' + self.id + '.component\"', 'this component is now available in global scope');\n                window.link = self;\n                self.$node.classList.toggle('wired');\n            }\n        }\n\n        event.stopPropagation();\n    });\n\n    if ( DEVELOP ) {\n        // expose inner ID to global scope\n        window[self.id] = self.$node;\n\n        // expose a link\n        this.$node.component = this.$body.component = this;\n        this.$node.title = this.name + '#' + this.id + ' (outer)';\n        this.$body.title = this.name + '#' + this.id + ' (inner)';\n    }\n\n    debug.info('create component ' + this.name + '#' + this.id, null, {\n        tags: ['create', 'component', this.name, this.id]\n    });\n}\n\n\n// inheritance\nComponent.prototype = Object.create(Emitter.prototype);\nComponent.prototype.constructor = Component;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nComponent.prototype.defaultEvents = null;\n\n\n/**\n * Add a new component as a child.\n *\n * @param {...Component} [child] variable number of elements to append\n *\n * @files Component#add\n *\n * @example\n * panel.add(\n *     new Button( ... ),\n *     new Button( ... )\n * );\n */\nComponent.prototype.add = function ( child ) {\n    var index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        child = arguments[index];\n\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        // apply\n        this.children.push(child);\n        child.parent = this;\n\n        // correct DOM parent/child connection if necessary\n        if ( child.$node && child.$node.parentNode === null ) {\n            this.$body.appendChild(child.$node);\n        }\n\n        debug.info('add component ' + child.name + '#' + child.id + ' to ' + this.name + '#' + this.id, null, {\n            tags: ['add', 'component', this.name, this.id, child.name, child.id]\n        });\n\n        // there are some listeners\n        if ( this.events['add'] ) {\n            /**\n             * A child component is added.\n             *\n             * @event module:stb/component~Component#add\n             *\n             * @type {Object}\n             * @property {Component} item new component added\n             */\n            this.emit('add', {item: child});\n        }\n\n        //debug.log('component ' + this.name + '#' + this.id + ' new child: ' + child.name + '#' + child.id);\n    }\n};\n\n\n/* @todo: consider activation in future */\n///**\n// * Insert component into the specific position.\n// *\n// * @param {Component} child component instance to insert\n// * @param {number} index insertion position\n// */\n//Component.prototype.insert = function ( child, index ) {\n//    var prevIndex = this.children.indexOf(child);\n//\n//    if ( DEVELOP ) {\n//        if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n//        if ( !(child instanceof Component) ) { throw new Error(__filename + ': wrong child type'); }\n//    }\n//\n//    if ( prevIndex !== -1 ) {\n//        this.children.splice(prevIndex, 1);\n//        this.$body.removeChild(child.$node);\n//    }\n//\n//    if ( index === this.children.length ) {\n//        this.$body.appendChild(child.$node);\n//    } else {\n//        this.$body.insertBefore(child.$node, this.$body.children[index]);\n//    }\n//    this.children.splice(index, 0, child);\n//\n//    if ( !child.parent ) {\n//        child.parent = this;\n//    }\n//};\n\n\n/**\n * Delete this component and clear all associated events.\n *\n * @fires module:stb/component~Component#remove\n */\nComponent.prototype.remove = function () {\n    // really inserted somewhere\n    if ( this.parent ) {\n        if ( DEVELOP ) {\n            if ( !(this.parent instanceof Component) ) {\n                throw new Error(__filename + ': wrong this.parent type');\n            }\n        }\n\n        // active at the moment\n        if ( app.activePage.activeComponent === this ) {\n            this.blur();\n            this.parent.focus();\n        }\n        this.parent.children.splice(this.parent.children.indexOf(this), 1);\n    }\n\n    // remove all children\n    this.children.forEach(function ( child ) {\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        child.remove();\n    });\n\n    this.$node.parentNode.removeChild(this.$node);\n\n    // there are some listeners\n    if ( this.events['remove'] ) {\n        /**\n         * Delete this component.\n         *\n         * @event module:stb/component~Component#remove\n         */\n        this.emit('remove');\n    }\n\n    // remove all listeners\n    this.events = {};\n\n    //debug.log('component ' + this.name + '#' + this.id + ' remove', 'red');\n    debug.info('remove component ' + this.name + '#' + this.id, null, {\n        tags: ['remove', 'component', this.name, this.id]\n    });\n};\n\n\n/**\n * Activate the component.\n * Notify the owner-page and apply CSS class.\n *\n * @param {Object} [data] custom data which passed into handlers\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#focus\n */\nComponent.prototype.focus = function ( data ) {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // this is a visual component on a page\n    // not already focused and can accept focus\n    if ( this.focusable && this !== activeItem ) {\n        // notify the current active component\n        if ( activeItem ) { activeItem.blur(); }\n\n        /* eslint consistent-this: 0 */\n\n        // apply\n        activePage.activeComponent = activeItem = this;\n        activeItem.$node.classList.add('focus');\n\n        //debug.log('component ' + this.name + '#' + this.id + ' focus');\n        debug.info('focus component ' + this.name + '#' + this.id, null, {\n            tags: ['focus', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( activeItem.events['focus'] ) {\n            /**\n             * Make this component focused.\n             *\n             * @event module:stb/component~Component#focus\n             */\n            activeItem.emit('focus', data);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Remove focus.\n * Change page.activeComponent and notify subscribers.\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#blur\n */\nComponent.prototype.blur = function () {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // apply visuals anyway\n    this.$node.classList.remove('focus');\n\n    // this is the active component\n    if ( this === activeItem ) {\n        activePage.activeComponent = null;\n\n        //debug.log('component ' + this.name + '#' + this.id + ' blur', 'grey');\n        debug.info('blur component ' + this.name + '#' + this.id, null, {\n            tags: ['blur', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['blur'] ) {\n            /**\n             * Remove focus from this component.\n             *\n             * @event module:stb/component~Component#blur\n             */\n            this.emit('blur');\n        }\n\n        return true;\n    }\n\n    debug.warn('component ' + this.name + '#' + this.id + ' attempt to blur without link to a page', null, {\n        tags: ['blur', 'component', this.name, this.id]\n    });\n\n    // nothing was done\n    return false;\n};\n\n\n/*function show ( self, data ) {\n    // correct style\n    self.$node.classList.remove('hidden');\n    // flag\n    self.visible = true;\n\n    debug.info('show component ' + self.name + '#' + self.id, null, {\n        tags: ['show', 'component', self.name, self.id]\n    });\n\n    // there are some listeners\n    if ( self.events['show'] ) {\n        /!**\n         * Make the component visible.\n         *\n         * @event module:stb/component~Component#show\n         *!/\n        self.emit('show', data);\n    }\n}*/\n\n/**\n * Make the component visible and notify subscribers.\n *\n * @param {Object} [data] custom data which passed into handlers\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#show\n */\nComponent.prototype.show = function ( data, callback ) {\n    //var self = this;\n\n    // is it hidden\n    if ( !this.visible ) {\n        /*if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(function () {\n                show(self, data);\n                callback();\n            });\n        } else {\n            // sync call\n            show(this, data);\n        }*/\n\n        // correct style\n        this.$node.classList.remove('hidden');\n        // flag\n        this.visible = true;\n\n        debug.info('show component ' + this.name + '#' + this.id, null, {\n            tags: ['show', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['show'] ) {\n            /**\n             * Make the component visible.\n             *\n             * @event module:stb/component~Component#show\n             */\n            this.emit('show', data);\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Make the component hidden and notify subscribers.\n *\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#hide\n */\nComponent.prototype.hide = function ( callback ) {\n    // is it visible\n    if ( this.visible ) {\n        // correct style\n        this.$node.classList.add('hidden');\n        // flag\n        this.visible = false;\n\n        debug.info('hide component ' + this.name + '#' + this.id, null, {\n            tags: ['hide', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['hide'] ) {\n            /**\n             * Make the component hidden.\n             *\n             * @event module:stb/component~Component#hide\n             */\n            this.emit('hide');\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = Component;\n","'use strict';\n\nvar $emptyNode = document.createElement('div');\n\n\n/**\n * Rectangle static render function.\n *\n * @this Object\n *\n * @param {Node} $node DOM element of list item\n */\nfunction rectangleRender ( $node ) {\n    /*\n    <div class=\"content-item-rectangle-card\">\n        <div class=\"content-item-rectangle-card-shadow\"></div>\n        <div class=\"content-item-rectangle-card-container\" style=\"background-color: #ff6650;\">\n            <div class=\"content-item-rectangle-card-icon\" style=\"background-image: url('app/img/720/icons/karaoke.placeholder.png')\"></div>\n            <div class=\"content-item-rectangle-card-info\">\n                <div class=\"content-item-rectangle-card-name\">Scorpions</div>\n                <div class=\"content-item-rectangle-card-description\">Return to Forever </div>\n            </div>\n        </div>\n        <div class=\"content-item-rectangle-card-fullinfo\">\n            <div class=\"content-item-rectangle-card-title\">Return to Forever</div>\n            <div class=\"content-item-rectangle-card-metadata\">Scorpions</div>\n        </div>\n    </div>\n    */\n    $node.className = 'content-item-rectangle-card';\n\n    $node.$shadow = $node.appendChild(document.createElement('div'));\n    $node.$shadow.className = 'content-item-rectangle-card-shadow';\n\n    $node.$container = $node.appendChild(document.createElement('div'));\n    $node.$container.className = 'content-item-rectangle-card-container';\n    $node.$container.style.backgroundColor = this.data.colors.background;\n\n    if ( typeof this.data.icon === 'string' ) {\n        $node.$icon = $node.$container.appendChild(document.createElement('div'));\n        $node.$icon.className = 'content-item-rectangle-card-icon';\n        $node.$icon.style.backgroundImage = 'url(\"' + this.data.icon + '\")';\n    } else if ( this.data.icon.normal ) {\n        $node.$icon = $node.$container.appendChild(document.createElement('div'));\n        $node.$icon.className = 'content-item-rectangle-card-icon';\n        $node.$icon.style.backgroundImage = 'url(\"' + this.data.icon.normal + '\")';\n    }\n\n    $node.$info = $node.$container.appendChild(document.createElement('div'));\n    $node.$info.className = 'content-item-rectangle-card-info';\n\n    // if ( this.data.description ) {\n    $node.$name = $node.$info.appendChild(document.createElement('div'));\n    $node.$name.className = 'content-item-rectangle-card-name';\n    $node.$name.innerText = this.data.name;\n\n    $node.$description = $node.appendChild(document.createElement('div'));\n    $node.$description.className = 'content-item-rectangle-card-description';\n    $node.$description.innerText = this.data.name;\n\n    // $node.$infoText = $emptyNode;\n    // } else {\n    //     $node.$description = $emptyNode;\n    //     $node.$name = $emptyNode;\n\n    //     $node.$infoText = $node.$info.appendChild(document.createElement('div'));\n    //     $node.$infoText.className = 'content-item-rectangle-card-info-text';\n    //     $node.$infoText.innerText = this.data.name;\n    // }\n}\n\n/**\n * Square static render function.\n *\n * @this Object\n *\n * @param {Node} $node DOM element of list item\n */\nfunction squareRender ( $node ) {\n    /*\n    <div class=\"content-item-static-square\">\n        <div class=\"content-item-square-card-shadow\"></div>\n        <div class=\"content-item-square-card-container\" style=\"background-color: #53bf54;\">\n            <div class=\"content-item-square-card-icon\" style=\"background-image: url('app/img/720/icons/audio.placeholder.png')\"></div>\n        </div>\n        <div class=\"content-item-square-card-title\">145. BBC Radio One</div>\n    </div>\n    */\n    $node.className = 'content-item-square-card';\n\n    $node.$shadow = $node.appendChild(document.createElement('div'));\n    $node.$shadow.className = 'content-item-square-card-shadow';\n\n    $node.$container = $node.appendChild(document.createElement('div'));\n    $node.$container.className = 'content-item-square-card-container';\n    $node.$container.style.backgroundColor = this.data.colors.background;\n\n    if ( this.data.icon ) {\n        $node.$container.hasImage = false;\n        $node.$container.style.backgroundImage = 'url(\"' + this.data.icon.normal + '\")';\n    } else if ( this.data.image ) {\n        $node.$container.hasImage = true;\n        $node.$container.style.backgroundImage = 'url(\"' + this.data.image.normal + '\")';\n        $node.$container.className = 'content-item-square-card-container content-item-square-card-container--image';\n    }\n\n    $node.$title = $node.$container.appendChild(document.createElement('div'));\n    $node.$title.className = 'content-item-square-card-title';\n    $node.$title.innerText = this.data.name;\n\n\n    // if ( this.data.text ) {\n    //     if ( typeof this.data.icon === 'string' ) {\n    //         $node.$icon = $node.$container.appendChild(document.createElement('div'));\n    //         $node.$icon.className = 'content-item-square-card-icon';\n    //         $node.$icon.style.backgroundImage = 'url(\"' + this.data.icon + '\")';\n    //     } else if ( this.data.icon.normal ) {\n    //         $node.$icon = $node.$container.appendChild(document.createElement('div'));\n    //         $node.$icon.className = 'content-item-square-card-icon';\n    //         $node.$icon.style.backgroundImage = 'url(\"' + this.data.icon.normal + '\")';\n    //     } else {\n    //         $node.$icon = $emptyNode;\n    //     }\n    //\n    //     $node.$title = $node.$container.appendChild(document.createElement('div'));\n    //     $node.$title.className = 'content-item-square-card-title';\n    //     $node.$title.innerText = this.data.text;\n    // } else {\n    //     // no title, large icon\n    //     if ( this.data.icon ) {\n    //         $node.$container.style.backgroundImage = 'url(\"' + this.data.icon + '\")';\n    //         $node.$icon = $emptyNode;\n    //     } else {\n    //         $node.$icon = $emptyNode;\n    //     }\n    //\n    //     $node.$title = $emptyNode;\n    // }\n\n    //$node.$info = $node.appendChild(document.createElement('div'));\n    //$node.$info.className = 'content-item-square-card-info';\n\n    /*$node.$name = $node.$info.appendChild(document.createElement('div'));\n    $node.$name.className = 'content-item-square-card-name';\n    $node.$name.innerText = this.data.name;*/\n\n    if ( this.data.description ) {\n        $node.$description = $node.$container.appendChild(document.createElement('div'));\n        $node.$description.className = 'content-item-square-card-description';\n        $node.$description.innerText = this.data.description;\n    } else {\n        $node.$description = $emptyNode;\n    }\n\n    /*if ( this.data.meta ) {\n        $node.$meta = $node.$info.appendChild(document.createElement('div'));\n        $node.$meta.className = 'content-item-square-card-metadata';\n\n        $node.$meta.innerText = this.data.meta.join(' • ');\n    } else {\n        $node.$meta = $emptyNode;\n    }*/\n}\n\nmodule.exports = {\n    square: {\n        render: squareRender,\n\n        focus: function ( $node ) {\n            $node.$shadow.className = 'content-item-square-card-shadow--focus';\n            $node.$container.className = 'content-item-square-card-container--focus' +\n                ($node.$container.hasImage ? ' content-item-square-card-container--image' : '');\n            //$node.$icon.className = 'content-item-square-card-icon--focus';\n            $node.$title.className = 'content-item-square-card-title--focus';\n            //$node.$info.className = 'content-item-square-card-info--focus';\n            //$node.$name.className = 'content-item-square-card-name--focus';\n            $node.$description.className = 'content-item-square-card-description--focus';\n            //$node.$meta.className = 'content-item-square-card-metadata--focus';\n\n            if ( !$node.$container.hasImage ) {\n                $node.$container.style.backgroundImage = 'url(\"' + this.data.icon.active + '\")';\n            }\n        },\n\n        blur: function ( $node ) {\n            $node.$shadow.className = 'content-item-square-card-shadow';\n            $node.$container.className = 'content-item-square-card-container' +\n                ($node.$container.hasImage ? ' content-item-square-card-container--image' : '');\n            //$node.$icon.className = 'content-item-square-card-icon';\n            $node.$title.className = 'content-item-square-card-title';\n            //$node.$info.className = 'content-item-square-card-info';\n            //$node.$name.className = 'content-item-square-card-name';\n            $node.$description.className = 'content-item-square-card-description';\n            //$node.$meta.className = 'content-item-square-card-metadata--focus';\n\n            if ( !$node.$container.hasImage ) {\n                $node.$container.style.backgroundImage = 'url(\"' + this.data.icon.normal + '\")';\n            }\n        }\n    },\n    rectangle: {\n        render: rectangleRender,\n\n        focus: function ( $node ) {\n            $node.$shadow.className = 'content-item-rectangle-card-shadow--focus';\n            $node.$container.className = 'content-item-rectangle-card-container--focus';\n            $node.$icon.className = 'content-item-rectangle-card-icon--focus';\n            $node.$info.className = 'content-item-rectangle-card-info--focus';\n            $node.$name.className = 'content-item-rectangle-card-name--focus';\n            $node.$description.className = 'content-item-rectangle-card-description--focus';\n\n            if ( this.data.icon.active ) {\n                $node.$icon.style.backgroundImage = 'url(\"' + this.data.icon.active + '\")';\n            }\n        },\n\n        blur: function ( $node ) {\n            $node.$shadow.className = 'content-item-rectangle-card-shadow';\n            $node.$container.className = 'content-item-rectangle-card-container';\n            $node.$icon.className = 'content-item-rectangle-card-icon';\n            $node.$info.className = 'content-item-rectangle-card-info';\n            $node.$name.className = 'content-item-rectangle-card-name';\n            $node.$description.className = 'content-item-rectangle-card-description';\n\n            if ( typeof this.data.icon === 'string' ) {\n                $node.$icon.style.backgroundImage = 'url(\"' + this.data.icon + '\")';\n            } else if ( this.data.icon.normal ) {\n                $node.$icon.style.backgroundImage = 'url(\"' + this.data.icon.normal + '\")';\n            }\n        }\n    }\n};\n","/**\n * Release application entry point.\n */\n\n'use strict';\n\nvar app = require('mag-app'),\n    parallel = require('cjs-async/parallel');\n\n\n// prepare shared data object\napp.data = {};\n\n\n// everything is ready\napp.once('load', function () {\n    var Canvas = require('mag-tools/canvas'),\n        tasks = [\n            function gettext ( done ) {\n                require('spa-gettext').load({\n                    name: window.core.environment.language\n                }, done);\n            },\n            function canvas ( done ) {\n                app.canvas = new Canvas({width: screen.width, height: screen.height});\n\n                console.log('bg image ' + window.getComputedStyle(document.body).backgroundImage);\n                console.log('canvas');\n                app.canvas.loadImageFromBodyBackground(function ( error ) {\n                    app.canvas.appendTo(document.getElementById('canvasContainer'));\n\n                    console.log('loaded canvas, error: ' + error);\n                    app.canvas = new Canvas({width: screen.width, height: screen.height});\n                    document.body.style.backgroundImage = 'none';\n                    done();\n                });\n            },\n            function loadLogo ( done ) {\n                var alias = window.core.backend.settings.theme;\n\n                console.log('load logo');\n                app.data.logo = {\n                    url: '',\n                    position: null\n                };\n\n                if ( window.core.backend.settings.themes[alias] && window.core.backend.settings.themes[alias].alias ) {\n                    alias = window.core.backend.settings.themes[alias].alias;\n                } else {\n                    alias = 'default';\n                }\n\n                window.core.backend.request('themes/' + alias + '?colorSpace=rgba_hex&screenResolution=' + screen.width + 'x' + screen.height, {\n                    onload: function ( error, response ) {\n                        console.log('logo loaded ' + JSON.stringify(response.data));\n                        if ( !error ) {\n                            if ( response.data && response.data.logoFilename ) {\n                                app.data.logo.url = response.data.logoFilename.value;\n                            }\n\n                            if ( response.data && response.data.logoAlign ) {\n                                app.data.logo.position = response.data.logoAlign.value;\n                            }\n                        }\n\n                        done();\n                    },\n                    onerror: function () {\n                        console.log('logo onerror ' + this.status);\n                        done();\n                    },\n                    ontimeout: function () {\n                        console.log('logo ontimeout ' + this.status);\n                        done();\n                    }\n                });\n            }\n        ];\n\n    parallel(tasks, function () {\n        // load pages\n        if ( DEVELOP ) {\n            try {\n                app.pages = {\n                    main: require('./pages/main')\n                };\n            } catch ( error ) {\n                console.log(error);\n                console.log(error.stack);\n            }\n        } else {\n            app.pages = {\n                main: require('./pages/main')\n            };\n        }\n        // show main page\n        app.route(app.pages.main);\n        app.pages.main.once('ready', function () {\n            app.ready();\n        });\n    });\n});\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app    = require('spa-app/lib/core'),\n    events = require('spa-app/lib/events');\n\n\n// get instance\nwindow.core = window.parent.getCoreInstance(window, app);\n\n// shims\nrequire('stb-shim-classlist');\n\n// apply geometry\nrequire('stb-app/lib/metrics');\n\n// load sdk css\nrequire('stb-app/lib/css')('sdk');\n\n// load theme css\nrequire('./css');\n\n// load app css\nrequire('stb-app/lib/css')('app');\n\n/**\n * Specify platform name\n *\n * @type {string}\n */\napp.platform = 'mag';\n\n/**\n * Show app.\n */\napp.ready = function () {\n    // if ( this.events['show'] ) {\n    //     this.emit('show');\n    // }\n    window.core.call('app:ready');\n};\n\n\n/**\n * Exit from app.\n * Destroy all application instance.\n * If callback function provided, and callback returns boolean 'true', application will stay alive.\n *\n * @fires module:/stb/app#exit\n */\napp.exit = function () {\n    if ( app.events['exit'] ) {\n        app.emit('exit');\n    }\n\n    core.call('exit');\n};\n\n\nevents.load = function ( event ) {\n    //window.core = window.parent.getCoreInstanse(window, app);\n    document.body.setAttribute('platform', app.platform);\n\n    if ( core.ready ) {\n        if ( app.events['load'] ) {\n            // notify listeners\n            app.emit('load', {});\n        }\n    } else {\n        core.once('load', function () {\n            //core.ready = true;\n            if ( app.events[event.type] ) {\n                // notify listeners\n                app.emit(event.type, event);\n            }\n        });\n    }\n};\n\n\n// activate development mechanisms and tools\nif ( DEVELOP ) {\n    //require('stb-develop');\n    require('./develop/main');\n} else {\n    // disable context menu\n    events.contextmenu = function ( event ) {\n        event.preventDefault();\n    };\n}\n\n\n//apply DOM events\nObject.keys(events).forEach(function ( name ) {\n    window.addEventListener(name, events[name]);\n});\n\n\n// new way of string handling\n// all strings are in UTF-16\n// since stbapp 2.18\n// if ( window.gSTB && gSTB.SetNativeStringMode ) {\n//     /* eslint new-cap: 0 */\n//     gSTB.SetNativeStringMode(true);\n// }\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nmodule.exports = {\n    /**\n     * Parse the given location search string into object.\n     *\n     * @param {string} query string to parse\n     *\n     * @return {Object.<string, string>} result data\n     */\n    parse: function ( query ) {\n        var data = {};\n\n        // parse and fill the data\n        query.split('&').forEach(function ( part ) {\n            part = part.split('=');\n            // valid number on params\n            if ( part.length === 2 ) {\n                data[part[0]] = decodeURIComponent(part[1]);\n            }\n        });\n\n        return data;\n    },\n\n\n    /**\n     * Make uri query part in a string form.\n     *\n     * @param {Object} params data to stringify\n     *\n     * @return {string} query string\n     */\n    stringify: function ( params ) {\n        var data = [];\n\n        Object.keys(params).forEach(function ( name ) {\n            data.push(name + '=' + encodeURIComponent(params[name]));\n        });\n\n        return data.join('&');\n    }\n};\n","/**\n * Global application configuration.\n * Can store run-time options, API urls, paths, execution flags and so on.\n * Automatically loaded on application initialization and available as app.config.\n */\n\n'use strict';\n\n\n// public\nmodule.exports = {};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('./core');\n\n\n// public\nmodule.exports = {\n    DOMContentLoaded: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // there are some listeners\n        if ( app.events['dom'] ) {\n            // notify listeners\n            app.emit('dom', event);\n            //console.log('DOMContentLoaded');\n        }\n    },\n\n    /**\n     * The load event is fired when a resource and its dependent resources have finished loading.\n     *\n     * Control flow:\n     *   1. Global handler.\n     *   2. Each page handler.\n     *   3. Application DONE event.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/load\n     *\n     * @param {Event} event generated object with event data\n     */\n    load: function ( event ) {\n        //var path;\n\n        //debug.event(event);\n        //console.log(event);\n\n        // time mark\n        //app.data.time.load = event.timeStamp;\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' load', 'green');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n\n        // time mark\n        //app.data.time.done = +new Date();\n\n        // everything is ready\n        // and there are some listeners\n        // if ( app.events['done'] ) {\n        //     // notify listeners\n        //     app.emit('done', event);\n        // }\n    },\n\n    /**\n     * The unload event is fired when the document or a child resource is being unloaded.\n     *\n     * Control flow:\n     *   1. Each page handler.\n     *   2. Global handler.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/unload\n     *\n     * @param {Event} event generated object with event data\n     */\n    unload: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' unload', 'red');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n    },\n\n    /**\n     * The error event is fired when a resource failed to load.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/error\n     *\n     * @param {Event} event generated object with event data\n     */\n    error: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n        //debug.fail('app event: ' + event.message, event, {tags: [event.type, 'event']});\n        console.error('app event: ' + event.message, event);\n    },\n\n    /**\n     * The keydown event is fired when a key is pressed down.\n     * Set event.stop to true in order to prevent bubbling.\n     *\n     * Control flow:\n     *   1. Current active component on the active page.\n     *   2. Current active page itself.\n     *   3. Application.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keydown\n     *\n     * @param {Event} event generated object with event data\n     */\n    keydown: function ( event ) {\n        var page = app.activePage,\n            eventLocal = {\n                code: event.keyCode,\n                stop: false\n            },\n            activeComponent;\n\n        if ( DEVELOP ) {\n            if ( !page ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        // filter phantoms\n        //if ( event.keyCode === 0 ) { return; }\n\n        // combined key code\n        //event.code = event.keyCode;\n\n        // apply key modifiers\n        if ( event.ctrlKey )  { eventLocal.code += 'c'; }\n        if ( event.altKey )   { eventLocal.code += 'a'; }\n        if ( event.shiftKey ) { eventLocal.code += 's'; }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + eventLocal.code, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + eventLocal.code, event);\n\n        // page.activeComponent can be set to null in event handles\n        activeComponent = page.activeComponent;\n\n        // current component handler\n        if ( activeComponent && activeComponent !== page ) {\n            // component is available and not page itself\n            if ( activeComponent.events[event.type] ) {\n                // there are some listeners\n                activeComponent.emit(event.type, eventLocal, event);\n            }\n\n            // todo: bubble event recursively\n            // bubbling\n            if (\n                !eventLocal.stop &&\n                activeComponent.propagate &&\n                activeComponent.parent &&\n                activeComponent.parent.events[event.type]\n            ) {\n                activeComponent.parent.emit(event.type, eventLocal, event);\n            }\n        }\n\n        // page handler\n        if ( !eventLocal.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, eventLocal, event);\n            }\n\n            // global app handler\n            if ( !event.stop ) {\n                // not prevented\n                if ( app.events[event.type] ) {\n                    // there are some listeners\n                    app.emit(event.type, eventLocal, event);\n                }\n            }\n        }\n\n        //// suppress non-printable keys in stb device (not in your browser)\n        //if ( app.data.host && keyCodes[event.code] ) {\n        //    event.preventDefault();\n        //}\n    },\n\n    /**\n     * The keypress event is fired when press a printable character.\n     * Delivers the event only to activeComponent at active page.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keypress\n     *\n     * @param {Event} event generated object with event data\n     * @param {string} event.char entered character\n     */\n    keypress: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + event.key, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + event.key, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n    },\n\n    /**\n     * The click event is fired when a pointing device button (usually a mouse button) is pressed and released on a single element.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/click\n     *\n     * @param {Event} event generated object with event data\n     */\n    /*click: function ( event ) {\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n     },*/\n\n    /**\n     * The contextmenu event is fired when the right button of the mouse is clicked (before the context menu is displayed),\n     * or when the context menu key is pressed (in which case the context menu is displayed at the bottom left of the focused\n     * element, unless the element is a tree, in which case the context menu is displayed at the bottom left of the current row).\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/contextmenu\n     *\n     * @param {Event} event generated object with event data\n     */\n    // contextmenu: function ( event ) {\n    //     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n    //\n    //     if ( !DEVELOP ) {\n    //         // disable right click in release mode\n    //         event.preventDefault();\n    //     }\n    // },\n\n    /*contextmenu: function ( event ) {\n     //var kbEvent = {}; //Object.create(document.createEvent('KeyboardEvent'));\n\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n\n     //kbEvent.type    = 'keydown';\n     //kbEvent.keyCode = 8;\n\n     //debug.log(kbEvent.type);\n\n     //globalEventListenerKeydown(kbEvent);\n     //var event = document.createEvent('KeyboardEvent');\n     //event.initEvent('keydown', true, true);\n\n     //document.dispatchEvent(kbEvent);\n\n     if ( !DEVELOP ) {\n     // disable right click in release mode\n     event.preventDefault();\n     }\n     },*/\n\n    /**\n     * The wheel event is fired when a wheel button of a pointing device (usually a mouse) is rotated.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel\n     *\n     * @param {Event} event generated object with event data\n     */\n    mousewheel: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n\n        // page handler\n        if ( !event.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, event);\n            }\n        }\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint-disable */\n\n'use strict';\n\n\nif ( !document.documentElement.classList ) {\n    var prototype = Array.prototype,\n        indexOf   = prototype.indexOf,\n        slice     = prototype.slice,\n        push      = prototype.push,\n        splice    = prototype.splice,\n        join      = prototype.join;\n\n    window.DOMTokenList = function ( el ) {\n        this._element = el;\n        if (el.className !== this._classCache) {\n            this._classCache = el.className;\n            if (!this._classCache) { return; }\n            var classes = this._classCache.replace(/^\\s+|\\s+$/g,'').split(/\\s+/),\n                i;\n            for (i = 0; i < classes.length; i++) {\n                push.call(this, classes[i]);\n            }\n        }\n    };\n\n    window.DOMTokenList.prototype = {\n        add: function ( token ) {\n            if(this.contains(token)) { return; }\n            push.call(this, token);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        contains: function ( token ) {\n            return indexOf.call(this, token) !== -1;\n        },\n\n        item: function ( index ) {\n            return this[index] || null;\n        },\n\n        remove: function ( token ) {\n            var i = indexOf.call(this, token);\n            if (i === -1) {\n                return;\n            }\n            splice.call(this, i, 1);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        toString: function () {\n            return join.call(this, ' ');\n        },\n\n        toggle: function ( token ) {\n            if (!this.contains(token)) {\n                this.add(token);\n            } else {\n                this.remove(token);\n            }\n            return this.contains(token);\n        }\n    };\n\n    Object.defineProperty(Element.prototype, 'classList', {\n        get: function () {\n            return new window.DOMTokenList(this);\n        }\n    });\n}\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    metrics = require('app:metrics');\n\n\n// global link\napp.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\napp.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\napp.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n\n// public\n//module.exports = app;\n","/**\n * Application geometry options.\n * Automatically loaded on application initialization and available as app.metrics.\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    480: {\n        // screen base dimension\n        height: 480,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  32,\n        availLeft:   48\n        // project-specific vars\n        // put here ...\n    },\n\n    576: {\n        // screen base dimension\n        height: 576,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  26,\n        availLeft:   54\n        // project-specific vars\n        // put here ...\n    },\n\n    720: {\n        // screen base dimension\n        height: 720,\n        width:  1280,\n        // safe zone margins\n        availTop:    30,\n        availBottom: 30,\n        availRight:  40,\n        availLeft:   40\n        // project-specific vars\n        // put here ...\n    },\n\n    1080: {\n        // screen base dimension\n        height: 1080,\n        width:  1920,\n        // safe zone margins\n        availTop:    45,\n        availBottom: 45,\n        availRight:  60,\n        availLeft:   60\n        // project-specific vars\n        // put here ...\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core'),\n    //metrics = require('app:metrics'),\n    linkCSS;\n\n\n//window.core = window.parent.getCoreInstance(window, app);\n\n\nlinkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = window.core.theme.path + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);\n\n\n// public\nmodule.exports = linkCSS;\n","/**\n * @module cjs-async/parallel\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n/**\n * Method to be called to set task as completed.\n *\n * @callback onTaskFinishCallback\n *\n * @param {boolean} error status of the task execution\n * @param {Array} result data to return from the task\n */\n\n/**\n * Task method to be executed.\n *\n * @callback taskHandler\n *\n * @param {module:cjs-async/parallel~onTaskFinishCallback} [callback] method to be called to set task as completed\n *\n * @example\n * function ( callback ) {\n *     callback(null, true);\n * }\n */\n\n/**\n * Method to be called on all given tasks completion.\n *\n * @callback onFinishCallback\n *\n * @param {boolean} error status of all tasks execution\n * @param {Array} result data received from all tasks\n */\n\n/**\n * Parallel tasks execution.\n *\n * @param {module:cjs-async/parallel~taskHandler[]} tasks set of tasks to execute\n * @param {module:cjs-async/parallel~onFinishCallback} [callback] optional callback to run once all the tasks have completed\n *\n * @example\n * parallel(taskList, function ( error, results ) {\n *     console.log(error, results);\n * });\n */\nmodule.exports = function ( tasks, callback ) {\n    var isError = false,\n        counter = 0,\n        results = [];\n\n    function handler ( task, index ) {\n        var done = function ( error, result ) {\n            // error happened in some other task\n            if ( isError ) {\n                // callback was already used\n                return;\n            }\n\n            if ( error ) {\n                // exit this task\n                // and prevent other to callback\n                isError = true;\n\n                callback(error);\n\n                return;\n            }\n\n            // fill results\n            results[index] = result;\n\n            counter++;\n\n            // all tasks are processed\n            if ( counter === tasks.length ) {\n                callback(null, results);\n            } else if ( counter > tasks.length ) {\n                throw Error('done callback invoked more than one time in function with ' + index + ' position in tasks array');\n            }\n        };\n\n        // actual call condition\n        if ( task.length === 0 ) {\n            done(null, task());\n        } else {\n            task(done);\n        }\n    }\n\n    // sanitize\n    tasks = Array.isArray(tasks) ? tasks : [];\n\n    // sanitize final handler\n    if ( typeof callback !== 'function' ) {\n        callback = function () { /* just in case */ };\n    }\n\n    // no tasks were given\n    if ( tasks.length === 0 ) {\n        // empty result\n        callback(null, results);\n    } else {\n        // run all tasks\n        tasks.forEach(handler);\n    }\n};\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\n/**\n * @class\n *\n * @param {Object} config object\n * @param {number} [config.width] width of canvas\n * @param {number} [config.height] height of canvas\n * @constructor\n */\nfunction Canvas ( config ) {\n\n    config = config || {};\n\n    this.$dom = document.createElement('canvas');\n\n    if ( config.width ) {\n        this.$dom.width = config.width;\n    }\n\n    if ( config.height ) {\n        this.$dom.height = config.height;\n    }\n\n    this.context = this.$dom.getContext('2d');\n\n    this.currentImage = null;\n}\n\nCanvas.prototype = Object.create({});\nCanvas.prototype.constructor = Canvas;\n\n\n/**\n * Append canvas to given node\n *\n * @param {HTMLElement} domNodeToAppend canvas node\n */\nCanvas.prototype.appendTo = function ( domNodeToAppend ) {\n    domNodeToAppend.appendChild(this.$dom);\n};\n\n/**\n * Draw image to canvas from given url\n *\n * @param {string} imageUrl to draw\n * @param {Canvas~drawCallback} callback after drawing\n */\nCanvas.prototype.drawImageFromUrl = function ( imageUrl, callback ) {\n    var self = this,\n        image = document.createElement('img');\n\n    image.src = imageUrl;\n\n    image.onload = function () {\n        //\n        self.context.drawImage(image, 0, 0);\n        self.currentImage = image;\n        if ( callback ) {\n            callback(false);\n        }\n    };\n\n    image.onerror = function () {\n        if ( callback ) {\n            callback(true);\n        }\n    };\n};\n\n/**\n * This callback is displayed as part of the Requester class.\n *\n * @callback Canvas~drawCallback\n * @param {boolean} error state of operation\n */\n\n\n/**\n * Clear rectangle area from canvas\n *\n * @param {Object} rect parameters to clear\n * @param {number} rect.x x coordinate\n * @param {number} rect.y y coordinate\n * @param {number} rect.width width of area\n * @param {number} rect.height height of area\n */\nCanvas.prototype.clearRect = function ( rect ) {\n    rect = rect || {};\n\n    this.context.clearRect(rect.x, rect.y, rect.width, rect.height);\n};\n\n/**\n * Restore last drawn image\n *\n * @return {boolean} state of operation\n */\nCanvas.prototype.restoreImage = function () {\n    if ( !this.currentImage ) {\n        return false;\n    }\n\n    this.context.drawImage(this.currentImage, 0, 0);\n\n    return true;\n\n};\n\n\n/**\n * Get base64 string of current image\n *\n * @return {string} base64 string of current image\n */\nCanvas.prototype.getBase64String = function () {\n\n    return this.$dom.toDataURL();\n};\n\n\n/**\n * Get image from document.body style and draw on canvas\n *\n * @param {Canvas~drawCallback} callback after drawing\n */\nCanvas.prototype.loadImageFromBodyBackground = function ( callback ) {\n    var imgUrl;\n\n    imgUrl = window.getComputedStyle(document.body).backgroundImage\n        .replace('url(\"', '').replace('\")', '')\n        .replace('url', '').replace('(', '').replace(')', '');\n\n    if ( !imgUrl ) {\n        callback(true);\n    } else {\n        this.drawImageFromUrl(imgUrl, callback);\n    }\n\n\n};\n\nmodule.exports = Canvas;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    Gettext = require('cjs-gettext'),\n    loader  = new Emitter();\n\n\n/**\n * Wrap the given data with gettext instance\n * and export methods to the global scope.\n *\n * @param {Object} [data] localization data\n *\n * @return {Gettext} gettext instance\n */\nfunction prepare ( data ) {\n    var gettext = new Gettext(data);\n\n    // make it global\n    window.gettext  = window._ = gettext.gettext;\n    window.pgettext = gettext.pgettext;\n    window.ngettext = gettext.ngettext;\n\n    return gettext;\n}\n\n\n/**\n * Main application language\n */\nloader.defaultLanguage = 'en';\n\n\n/**\n * Simple gettext implementation.\n *\n * @param {Object} config options\n * @param {string} [config.path=lang] relative path to project root\n * @param {string} config.name language name\n * @param {string} [config.ext=json] language file extension\n * @param {function} callback hook on ready\n *\n * @return {boolean} flag is ajax request was made\n */\nloader.load = function ( config, callback ) {\n    var xhr;\n\n    if ( DEVELOP ) {\n        if ( !config.name || typeof config.name !== 'string' ) {\n            throw new Error(__filename + ': config.name must be a nonempty string');\n        }\n        if ( typeof callback !== 'function' ) {\n            throw new Error(__filename + ': wrong callback type');\n        }\n    }\n\n    // defaults\n    config.ext  = config.ext  || 'json';\n    config.path = config.path || 'lang';\n\n    // is it necessary to request a localization file?\n    if ( config.name === loader.defaultLanguage ) {\n        // no\n        prepare();\n        callback(null);\n\n        return false;\n    }\n\n    // yes\n    xhr = new XMLHttpRequest();\n\n    xhr.onload = function () {\n        var json;\n\n        try {\n            json = JSON.parse(xhr.responseText);\n\n            prepare(json);\n            callback(null);\n\n            // there are some listeners\n            if ( loader.events['load'] ) {\n                // notify listeners\n                loader.emit('load');\n            }\n        } catch ( error ) {\n            xhr.onerror(error);\n        }\n    };\n\n    xhr.ontimeout = xhr.onerror = function ( error ) {\n        prepare();\n        callback(error);\n\n        // there are some listeners\n        if ( loader.events['error'] ) {\n            // notify listeners\n            loader.emit('error', error);\n        }\n    };\n\n    xhr.open('GET', config.path + '/' + config.name + '.' + config.ext, true);\n    xhr.send(null);\n\n    return true;\n};\n\n\n// public\nmodule.exports = loader;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Translations handler.\n *\n * @constructor\n *\n * @param {Object} config init parameters\n */\nfunction Gettext ( config ) {\n    var data, meta;\n\n    // sanitize\n    config   = config || {};\n    data     = config.data || {};\n    data[''] = data[''] || {};\n\n    // shortcut\n    meta = config.meta;\n\n    /**\n     * Display the native language translation of a textual message.\n     *\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.gettext = function ( msgId ) {\n        return data[''][msgId] || msgId;\n    };\n\n\n    /**\n     * The \"p\" in \"pgettext\" stands for \"particular\": fetches a particular translation of the textual message.\n     *\n     * @param {string} context message context\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.pgettext = function ( context, msgId ) {\n        return data[context] && data[context][msgId] || msgId;\n    };\n\n\n    /**\n     * Display the native language translation of a textual message whose grammatical form depends on a number.\n     *\n     * @param {string} msgId textual message in a singular form\n     * @param {string} plural textual message in a plural form\n     * @param {number} value message number\n     *\n     * @return {string} translated text\n     */\n    this.ngettext = function ( msgId, plural, value ) {\n        /* eslint no-unused-vars: 0 */\n        /* eslint no-eval: 0 */\n        /* eslint id-length: 0 */\n        var n, evalResult;\n\n        if ( DEVELOP ) {\n            if ( Number(value) !== value ) {\n                throw new Error(__filename + ': value must be a number');\n            }\n        }\n\n        if ( data && meta && data[''][msgId] ) {\n            evalResult = eval('n = ' + value + '; ' + meta.plural);\n\n            if ( typeof evalResult === 'boolean' ) {\n                evalResult = +evalResult;\n            }\n\n            // translation\n            return data[''][msgId][evalResult];\n        }\n\n        // english\n        return value === 1 ? msgId : plural;\n    };\n}\n\n\n// correct constructor name\nGettext.prototype.constructor = Gettext;\n\n\n// public\nmodule.exports = Gettext;\n","/**\n * Main page implementation.\n */\n\n'use strict';\n\nvar app  = require('mag-app'),\n    keys = require('stb-keys'),\n\n    Page  = require('stb-component-page'),\n\n    ContentBoard = require('../components/content.board'),\n\n    $header = document.getElementById('pmHeader'),\n\n    page = new Page({\n        $node: document.getElementById('pageMain'),\n        focusable: false\n    }),\n\n    contentPanel = new ContentBoard({\n        $node: document.getElementById('pmContentBoard'),\n        provider: window.core.plugins.contentBoard,\n        focusable: true,\n        parent: page,\n        events: {\n            'focus:row': function ( event ) {\n                console.log(JSON.stringify(event));\n\n                if ( event.focusIndex === 2 && event.direction === keys.down ) {\n                    this.$node.scrollIntoView(false);\n                } else if ( event.focusIndex === 1 && event.direction === keys.up ) {\n                    $header.scrollIntoView(false);\n                }\n            },\n            ready: function () {\n                page.emit('ready');\n            }\n        }\n    }),\n\n    clockDate = require('../modules/clock.date'),\n    clockTime = require('../modules/clock.time'),\n    // days = [\n    //     gettext('Monday'), gettext('Tuesday'), gettext('Wednesday'),\n    //     gettext('Thursday'), gettext('Friday'), gettext('Saturday')\n    // ],\n    months = [\n        gettext('January'),\n        gettext('February'),\n        gettext('March'),\n        gettext('April'),\n        gettext('May'),\n        gettext('June'),\n        gettext('July'),\n        gettext('August'),\n        gettext('September'),\n        gettext('October'),\n        gettext('November'),\n        gettext('December')\n    ];\n\nif ( DEVELOP ) {\n    window.contentPanel = contentPanel;\n}\n\npage.addListener('show', function () {\n    //app.ready();\n    contentPanel.focus();\n});\n\nwindow.pmLogo.style.backgroundImage = 'url(' + app.data.logo.url + ')';\n\nif ( app.data.logo.position !== null ) {\n    window.pmLogo.className = 'icon-position--' + app.data.logo.position;\n}\n\napp.date = new Date();\napp.ts = Date.now();\nwindow.pmTime.innerText = clockTime(app.ts);\nwindow.pmDate.innerText = clockDate(app.ts, months);\n\nsetInterval(function () {\n    app.ts = Date.now();\n    window.pmTime.innerText = clockTime(app.ts);\n    window.pmDate.innerText = clockDate(app.ts, months);\n}, 30000);\n\n\ncore.addListener('focus', function () {\n    // re-init focus on active list after app close and back to launcher\n    page.activeComponent.emit('focus');\n    //\n});\n\n\napp.addListener('unload', function () {\n    $header.scrollIntoView(true);\n});\n\n// public\nmodule.exports = page;\n","/**\n * Global list of non-printable control key codes.\n *\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    backspace: 8,\n    tab:       9,\n    enter:     13,\n    escape:    27,\n    space:     32,\n    pageUp:    33,\n    pageDown:  34,\n    end:       35,\n    home:      36,\n    left:      37,\n    up:        38,\n    right:     39,\n    down:      40,\n    insert:    45,\n    // not \"delete\" because of old browsers issue\n    del:       46\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-page');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-page';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base page implementation.\n *\n * A full-screen top-level layer that can operate as an independent separate entity.\n * It is added to the document body on creation if not already linked.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n *\n * @example\n * var Page = require('stb/ui/page'),\n *     page = new Page({\n *         $node: document.getElementById(id)\n *     });\n *\n * page.addListener('show', function show () {\n *     // page is visible now\n * });\n */\nfunction Page ( config ) {\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    /**\n     * Page visibility/active state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.active = false;\n\n    /**\n     * Link to the currently active component with focus.\n     *\n     * @readonly\n     * @type {Component}\n     */\n    this.activeComponent = null;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'page ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // state flag\n    this.active = this.$node.classList.contains('active');\n\n    // correct DOM parent/child connection if necessary\n    if ( this.$node.parentNode === null ) {\n        document.body.appendChild(this.$node);\n    }\n\n    // always itself\n    this.page = this;\n}\n\n\n// inheritance\nPage.prototype = Object.create(Component.prototype);\nPage.prototype.constructor = Page;\n\n// set component name\nPage.prototype.name = 'spa-component-page';\n\n\n// public\nmodule.exports = Page;\n","/**\n * @license The MIT License (MIT)\n * @copyright Igor Zaporozhets <i.zaporozhets@infomir.com>\n */\n\n'use strict';\n\nvar keys      = require('stb-keys'),\n    Component = require('stb-component'),\n    List      = require('./content.list'),\n    AppButton = require('./app.button');\n\n\n/**\n * Create top-level container for all content elements in Prime Launcher.\n *\n * @param {Object} config - init parameters\n * @param {Object} config.provider - uniform data provider/collector of other data sources\n *\n * @constructor\n */\n// eslint-disable-next-line max-lines-per-function\nfunction ContentBoard ( config ) {\n    var offset = 0,\n        count  = 30,\n        self   = this,\n        ready  = false,\n\n        providers  = [],\n        rows       = [],\n        imageCache = [];\n\n    this.apps = [];\n    this.appInFocus = false;\n    this.$focusLine = null;\n\n    this.focusIndex = 0;\n\n    this.move = function ( direction ) {\n        var scrollTop,\n            focusIndex;\n\n        if ( direction === keys.down ) {\n            if ( self.focusIndex < self.apps.length - 1 ) {\n                focusIndex = self.focusIndex + 1;\n            } else {\n                return false;\n            }\n\n            if ( self.focusIndex > 0 ) {\n                scrollTop = self.apps[self.focusIndex].list.height;\n                self.$node.scrollTop += scrollTop;\n            }\n\n            self.focusIndex = focusIndex;\n        } else if ( direction === keys.up ) {\n            if ( self.focusIndex > 0 ) {\n                focusIndex = self.focusIndex - 1;\n                scrollTop = self.apps[focusIndex].list.height;\n                self.$node.scrollTop -= scrollTop;\n                self.focusIndex = focusIndex;\n            }\n        } else {\n            return false;\n        }\n\n        self.emit('focus:row', {\n            direction: direction,\n            focusIndex: self.focusIndex\n        });\n\n        if ( self.$focusLine ) {\n            self.$focusLine.classList.remove('focus');\n        }\n        self.$focusLine = self.apps[self.focusIndex].$line;\n        self.$focusLine.classList.add('focus');\n\n        return true;\n    };\n\n    this.listKeydown = function ( event ) {\n        if ( !ready ) {\n            return;\n        }\n\n        if ( !event.stop ) {\n            if ( event.code === keys.up || event.code === keys.down ) {\n                if ( self.move(event.code) ) {\n                    self.apps[self.focusIndex].list.focus();\n                }\n            } else if ( event.code === keys.left ) {\n                if ( self.apps[self.focusIndex].list.$node.firstChild === self.apps[self.focusIndex].list.$focusItem ) {\n                    self.apps[self.focusIndex].app.focus();\n                }\n            }\n        }\n    };\n\n    this.appButtonKeydown = function ( event ) {\n        if ( !ready ) {\n            return;\n        }\n\n        if ( event.code === keys.up || event.code === keys.down ) {\n            if ( self.move(event.code) ) {\n                self.apps[self.focusIndex].app.focus();\n            }\n        } else if ( event.code === keys.right ) {\n            self.apps[self.focusIndex].list.focus();\n            // self.apps[self.focusIndex].list.focusIndex(0);\n        }\n    };\n\n    config.events.mousewheel = function ( event ) {\n        // scrolling by Y axis\n        config.events.keydown(event.wheelDeltaY > 0 ? {code: keys.up} : {code: keys.down});\n        event.preventDefault();\n    };\n\n    Component.call(self, config);\n\n    this.$node.className = 'container content-board';\n\n    // self.$appsList = self.$node.appendChild(document.createElement('div'));\n    // self.$appsList.className = 'applications-list';\n    //\n    // self.$board = self.$node.appendChild(document.createElement('div'));\n    // self.$board.className = 'board';\n\n    config.provider.load({\n        offset: offset,\n        count: count\n    }, function () {\n        while ( offset < count ) {\n            if ( config.provider.providers[offset] ) {\n                if ( config.provider.providers[offset].application.packageName !== 'magcore-app-records' ) {\n                    providers.push(config.provider.providers[offset]);\n                    rows.push(config.provider.rows[offset]);\n\n                    self.addContentList(config.provider.providers[offset], config.provider.rows[offset]);\n                }\n            }\n\n            ++offset;\n        }\n\n        setTimeout(function () {\n            var uniqueUris = [],\n                iconNormal, iconActive;\n\n            providers.forEach(function ( provider ) {\n                var icons = provider.application.uris.icons;\n\n                iconNormal = new Image();\n                iconActive = new Image();\n\n                iconNormal.src = icons.primeLogoNormal;\n                iconActive.src = icons.primeLogoActive;\n\n                imageCache.push(iconNormal, iconActive);\n\n                if ( provider.application.name === 'Apps' ) {\n                    iconNormal = new Image();\n                    iconActive = new Image();\n\n                    iconNormal.src = icons.shadowNormal;\n                    iconActive.src = icons.shadowActive;\n\n                    imageCache.push(iconNormal, iconActive);\n                }\n            });\n\n            rows.forEach(function ( row, rowIndex ) {\n                var item, index, icons;\n\n                for ( index = 0; index < row.length; index += 1 ) {\n                    item = row[index];\n\n                    if ( rowIndex ) {\n                        icons = {\n                            normal: item.data.icon ? item.data.icon.normal : null,\n                            active: item.data.icon ? item.data.icon.active : null\n                        };\n                    } else {\n                        icons = {\n                            normal: item.data.icons.primeLogoNormal,\n                            active: item.data.icons.primeLogoActive\n                        };\n                    }\n\n                    if ( icons.normal && uniqueUris.indexOf(icons.normal) === -1 ) {\n                        uniqueUris.push(icons.normal);\n\n                        iconNormal = new Image();\n                        iconActive = new Image();\n\n                        iconNormal.src = icons.normal;\n                        iconActive.src = icons.active;\n\n                        imageCache.push(iconNormal, iconActive);\n                    }\n                }\n            });\n        }, 0);\n\n        setTimeout(function () {\n            self.children[self.focusIndex].focus();\n            self.$focusLine = self.apps[self.focusIndex].$line;\n            self.$focusLine.classList.add('focus');\n            self.emit('ready');\n            ready = true;\n        }, 0);\n    });\n}\n\n\n// inheritance\nContentBoard.prototype = Object.create(Component.prototype);\nContentBoard.prototype.constructor = ContentBoard;\n\n// set component name\nContentBoard.prototype.name = 'content-board';\n\n\nContentBoard.prototype.addContentList = function ( provider, data ) {\n    var self = this,\n        $line, appButton, config, contentList;\n\n    if ( !data || data.length === 0 ) {\n        return;\n    }\n\n\n    $line = document.createElement('div');\n    appButton = new AppButton(provider);\n    config = {\n        data: data,\n        provider: provider\n    };\n    contentList = new List(config);\n\n    if ( config.listClass ) {\n        $line.className = 'content-line-' + config.listClass;\n    } else {\n        $line.className = 'content-line';\n    }\n\n    if ( provider.instance && provider.instance.addListener ) {\n        provider.instance.addListener('add', function ( event ) {\n            event.data.colors = provider.colors;\n            contentList.addContentItem(event);\n        });\n\n        provider.instance.addListener('remove', function ( event ) {\n            contentList.removeContentItem(event);\n        });\n\n        provider.instance.addListener('update', function ( event ) {\n            console.log(event);\n        });\n    }\n\n    this.$node.appendChild($line);\n    // self.$board.appendChild(contentList.$node);\n    self.apps.push({\n        $line: $line,\n        app: appButton,\n        list: contentList\n    });\n    $line.appendChild(appButton.$node);\n    $line.appendChild(contentList.$node);\n    // self.lists.push(contentList);\n    self.add(contentList);\n    contentList.height = contentList.$node.offsetHeight;\n\n    // if ( self.apps.length > 2 ) {\n    //     // TODO: hack for different list heights\n    //     self.$appsList.appendChild(document.createElement('div'));\n    //     self.$appsList.lastChild.className = 'app-separator';\n    // }\n\n    // if ( self.apps.length > 3 ) {\n    //     // TODO: hack for different list heights\n    //     self.$appsList.appendChild(document.createElement('div'));\n    //     self.$appsList.lastChild.className = 'app-separator';\n    // }\n\n    // margin = (contentList.$node.children[0].offsetHeight - 120) / 2;\n    // appButton.$node.style.height = contentList.height - margin + 'px';\n\n    // console.log('appButton.$node.children[0].offsetHeight ' + appButton.$node.children[0].offsetHeight);\n    // if ( self.apps.length > 1 ) {\n    //     appButton.$node.style.marginTop = margin + 'px';\n    // }\n\n    // self.$appsList.appendChild(appButton.$node);\n\n    contentList.addListener('keydown', self.listKeydown);\n    appButton.addListener('keydown', self.appButtonKeydown);\n};\n\n\nmodule.exports = ContentBoard;\n","/**\n * @license The MIT License (MIT)\n * @copyright Igor Zaporozhets <i.zaporozhets@infomir.com>\n */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys'),\n    layouts   = require('./content.list.layouts');\n\n\n/**\n * @param {Object} config configuration for list of some sort\n *\n * @constructor\n */\nfunction ContentList ( config ) {\n    var self = this;\n\n    // for ( var p in config.provider.application ) {\n    //     console.log(p);\n    //     console.log(JSON.stringify(config.provider.application[p]))\n    // }\n    if ( config.provider.layout ) {\n        config.className = 'content-list-' + config.provider.layout;\n        config.listClass = config.provider.layout;\n    }\n\n    if (config.provider.packageName === 'magcore-plugin-backend-radio' || config.provider.packageName === 'magcore-plugin-backend-karaoke') {\n        config.className = 'content-list-static-square';\n        config.listClass = 'static-square';\n    }\n\n    self.$focusItem = null;\n    self.viewIndex = null;\n\n    /**\n     * Component data to visualize.\n     *\n     * @type {Array}\n     */\n    self.data = [];\n    this.disabledList = [];\n\n    /**\n     * Allow or not to jump to the opposite side of a list when there is nowhere to go next.\n     *\n     * @type {boolean}\n     */\n    self.cycle = false;\n\n    self.dataToDOM = {};\n\n    Component.call(self, config);\n\n    this.addListener('focus', function () {\n        setTimeout(function () {\n            if ( self.$focusItem === null && self.$body.firstChild ) {\n                self.focusItem(self.$body.firstChild);\n            } else if ( self.$focusItem !== null ) {\n                self.focusItem(self.$focusItem);\n            }\n        }, 0);\n    });\n\n    this.addListener('blur', function () {\n        self.blurItem(self.$focusItem);\n    });\n\n    this.init(config);\n}\n\n\n// inheritance\nContentList.prototype = Object.create(Component.prototype);\nContentList.prototype.constructor = ContentList;\n\n// set component name\nContentList.prototype.name = 'content-list';\n\n\nContentList.prototype.defaultEvents = {\n    mousewheel: function ( event ) {\n        this.parent.emit('mousewheel', event);\n    },\n\n    keydown: function ( event ) {\n        var self = this,\n            item;\n\n        console.log('ContentList');\n\n        if ( event.code === keys.left || event.code === keys.right ) {\n            if ( self.move(event.code) ) {\n                event.stop = true;\n            }\n        } else if ( event.code === keys.ok ) {\n            // this.blurItem(this.$focusItem);\n            item = this.data[this.$focusItem.tabIndex];\n\n            if ( this.$focusItem.timeoutId ) {\n                clearTimeout(this.$focusItem.timeoutId);\n            }\n\n            if ( item.onClick ) {\n                this.data[this.$focusItem.tabIndex].onClick();\n            } else if ( item.data.onClick ) {\n                item.data.onClick();\n            }\n        }\n    }\n};\n\n\nContentList.prototype.renderView = function ( index ) {\n    var self = this,\n        $item, iteration, itemData;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) { throw new Error(__filename + ': wrong arguments number'); }\n        if ( Number(index) !== index ) { throw new Error(__filename + ': index must be a number'); }\n        if ( index < 0 ) { throw new Error(__filename + ': index should be more than zero'); }\n    }\n\n    // has the view window position changed\n    if ( self.viewIndex !== index ) {\n        self.viewIndex = index;\n\n        // rebuild all visible items\n        iteration = 0;\n        while ( iteration < self.size ) {\n            // shortcuts\n            $item    = self.$body.children[iteration];\n            itemData = self.data[index];\n            if ( itemData ) {\n                $item.tabIndex = index;\n                itemData.render($item);\n            } else {\n                // nothing to render\n                $item.className = 'hidden';\n                $item.ready = false;\n            }\n            ++iteration;\n            ++index;\n        }\n    }\n};\n\n\nContentList.prototype.focusItem = function ( $item ) {\n    var $prev = this.$focusItem;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n    }\n\n    if ( DEVELOP ) {\n        if ( !($item instanceof Element) ) {\n            throw new Error(__filename + ': wrong $item type');\n        }\n        if ( $item.parentNode !== this.$body ) {\n            throw new Error(__filename + ': wrong $item parent element');\n        }\n    }\n\n    if ( $prev !== null ) {\n        // some item is focused already\n        this.blurItem($prev);\n    }\n\n    this.$focusItem = $item;\n    this.data[$item.tabIndex].focus($item);\n    this.emit('focus:item', {$prev: $prev, $item: $item});\n};\n\n\nContentList.prototype.blurItem = function ( $item ) {\n    var self = this;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n    }\n\n    if ( $item ) {\n        this.data[$item.tabIndex].blur($item);\n        if ( self.events['blur:item'] ) {\n            self.emit('blur:item', {$item: $item});\n        }\n    }\n};\n\n\nContentList.prototype.move = function ( direction ) {\n    var self = this,\n        $item, $target;\n\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(direction) !== direction ) {\n            throw new Error(__filename + ': direction must be a number');\n        }\n    }\n\n    // empty list\n    if ( !self.data.length ) {\n        return false;\n    }\n\n    switch ( direction ) {\n        case keys.left:\n            $target = self.$focusItem.previousSibling;\n\n            if ( self.$focusItem && self.$focusItem.tabIndex > 0 ) {\n                self.focusItem(self.$focusItem.previousSibling);\n            } else {\n                return false;\n            }\n\n            if ( this.disabledList.length ) {\n                $item = this.disabledList.pop();\n                $item.style.display = '';\n            }\n\n            // if ( self.$focusItem === self.$body.lastChild.previousSibling ) {\n            //     self.$node.scrollLeft -= (self.$focusItem.offsetWidth * 0.75);\n            // } else if ( (self.$node.scrollLeft) > 0 ) {\n            //     self.$node.scrollLeft -= (self.$focusItem.offsetWidth);\n            // }\n\n            return true;\n\n        case keys.right:\n            $target = self.$focusItem.nextSibling;\n\n            if ( self.$focusItem && self.$focusItem.tabIndex < self.data.length - 1 ) {\n                self.focusItem(self.$focusItem.nextSibling);\n            } else {\n                return false;\n            }\n\n            if ( ($target.offsetWidth * $target.tabIndex) > (self.$node.offsetWidth / 2) ) {\n                $item = this.$node.children[this.disabledList.length];\n                this.disabledList.push($item);\n                $item.style.display = 'none';\n                // if ( self.$node.scrollLeft === 0 ) {\n                //     self.$node.scrollLeft += ($target.offsetWidth * 1.25);\n                // } else {\n                //     self.$node.scrollLeft += $target.offsetWidth;\n                // }\n            }\n\n            console.log('scrollLeft ' + self.$node.scrollLeft);\n\n            return true;\n    }\n\n    return false;\n};\n\n\nfunction normalize ( data ) {\n    var index = 0,\n        item, layout;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) { throw new Error(__filename + ': wrong arguments number'); }\n        if ( !Array.isArray(data) ) { throw new Error(__filename + ': wrong data type'); }\n    }\n\n    // rows\n    while ( index < data.length ) {\n        // cell value\n        item = data[index];\n        // primitive value\n        // console.log(item.layout);\n        layout = layouts[item.layout];\n        // console.log('item.geometry ' + item.geometry);\n        // console.log('layout.geometry ' + layout[item.geometry]);\n        // console.log(layout);\n        if ( item.geometry && layout[item.geometry] ) {\n            // console.log('geometry render ' + layout[item.geometry].render);\n            layout = layout[item.geometry];\n        }\n        item.render = layout.render;\n        item.focus = layout.focus;\n        item.blur = layout.blur;\n        ++index;\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nContentList.prototype.init = function ( config ) {\n    var self     = this,\n        currSize = this.$body.children.length,\n        /**\n         * Item mouse click handler.\n         *\n         * @param {Event} event click event data\n         *\n         * @this Element\n         *\n         * @fires module:stb/ui/list~List#click:item\n         */\n        onClick = function ( event ) {\n            if ( this.data ) {\n                self.focusItem(this);\n\n                // there are some listeners\n                if ( self.events['click:item'] ) {\n                    // notify listeners\n                    self.emit('click:item', {$item: this, event: event});\n                }\n            }\n        },\n        $item, index;\n\n    if ( config.data ) {\n        if ( DEVELOP ) {\n            if ( !Array.isArray(config.data) ) { throw new Error(__filename + ': wrong config.data type'); }\n        }\n        // prepare user data\n        this.data = normalize(config.data);\n\n        this.size = this.data.length;\n    }\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // apply cycle behaviour\n    if ( config.cycle !== undefined ) {\n        this.cycle = config.cycle;\n    }\n\n    // list items amount on page\n    if ( config.size ) {\n        if ( DEVELOP ) {\n            if ( Number(config.size) !== config.size ) {\n                throw new Error(__filename + ': config.size must be a number');\n            }\n            if ( config.size <= 0 ) {\n                throw new Error(__filename + ': config.size should be positive');\n            }\n        }\n\n        // apply\n        this.size = config.size;\n    }\n\n    // geometry has changed or initial draw\n    if ( this.size !== currSize ) {\n        // non-empty list\n        if ( currSize > 0 ) {\n            // clear old items\n            this.$body.innerText = null;\n        }\n\n        // create new items\n        for ( index = 0; index < this.size; index++ ) {\n            $item = document.createElement('div');\n            $item.tabIndex = index;\n            $item.addEventListener('click', onClick);\n            this.$body.appendChild($item);\n\n            if ( this.data[index].id ) {\n                this.dataToDOM[this.data[index].id] = $item;\n            }\n        }\n    }\n\n    // set focus item\n    // if ( config.focusIndex !== undefined && this.data.length ) {\n    //     if ( DEVELOP ) {\n    //         if ( Number(config.focusIndex) !== config.focusIndex ) { throw new Error(__filename + ': config.focusIndex must be a number'); }\n    //         if ( config.focusIndex < 0 ) { throw new Error(__filename + ': config.focusIndex should be positive'); }\n    //     }\n\n    //     // jump to the necessary item\n    //     this.focusIndex(config.focusIndex);\n    // }\n    this.renderView(0);\n    // setTimeout(function () {\n    //     // hack for list scroll to center\n    //     var $space = self.$node.appendChild(document.createElement('div'));\n\n    //     $space.style.width = (2 * self.$node.children[0].offsetWidth) + 'px';\n    //     $space.style.height = self.$node.children[0].offsetHeight + 'px';\n    //     $space.style.display = window.getComputedStyle(self.$node.firstChild).display;\n\n    //     $space = self.$node.appendChild(document.createElement('div'));\n\n    //     $space.style.width = (2 * self.$node.children[0].offsetWidth) + 'px';\n    //     $space.style.height = self.$node.children[0].offsetHeight + 'px';\n    //     $space.style.display = window.getComputedStyle(self.$node.firstChild).display;\n    // }, 0);\n    this.$focusItem = self.$body.children[0];\n};\n\n/**\n * Set the given item focused by item index.\n *\n * @param {number} index item data index\n */\nContentList.prototype.focusIndex = function ( index ) {\n    var viewIndex = this.viewIndex || 0;\n\n    if ( DEVELOP ) {\n        if ( Number(index) !== index ) { throw new Error(__filename + ': index must be a number'); }\n        if ( index < 0 ) { throw new Error(__filename + ': index should be positive'); }\n    }\n\n    // determine direction\n    if ( index >= viewIndex + this.size ) {\n        // check range\n        index = index < this.data.length - 1 ? index : this.data.length - 1;\n        // move down\n        this.renderView(index - this.size + 1);\n        this.focusItem(this.$body.lastChild);\n    } else if ( index < viewIndex ) {\n        // check range\n        index = index > 0 ? index : 0;\n        // move up\n        this.renderView(index);\n        this.focusItem(this.$body.firstChild);\n    } else {\n        // no move\n        if ( this.viewIndex === null ) {\n            // first attempt\n            this.renderView(0);\n        }\n        this.focusItem(this.$body.children[index - viewIndex]);\n    }\n};\n\n\n/**\n * Add content item card dynamically in runtime.\n *\n * @param {Object} item item to add in the list\n */\nContentList.prototype.addContentItem = function ( item ) {\n    var self  = this,\n        $item = document.createElement('div'),\n        /**\n         * Item mouse click handler.\n         *\n         * @param {Event} event click event data\n         *\n         * @this Element\n         *\n         * @fires module:stb/ui/list~List#click:item\n         */\n        onClick = function ( event ) {\n            if ( this.data ) {\n                self.focusItem(this);\n\n                // there are some listeners\n                if ( self.events['click:item'] ) {\n                    // notify listeners\n                    self.emit('click:item', {$item: this, event: event});\n                }\n            }\n        },\n        index;\n\n    this.dataToDOM[item.id] = $item;\n\n    item = normalize([item])[0];\n    $item.addEventListener('click', onClick);\n\n    if ( item.index === undefined ) {\n        this.data.splice(this.size - 2, 0, item);\n        this.$body.insertBefore($item, this.$body.children[this.size - 2]);\n    } else {\n        this.data.splice(item.index, 0, item);\n        this.$body.insertBefore($item, this.$body.children[item.index]);\n    }\n\n    this.size += 1;\n\n    for ( index = 0; index < this.size; index += 1 ) {\n        this.$body.children[index].tabIndex = index;\n    }\n\n    item.render($item);\n};\n\n\n/**\n * Remove content item card dynamically in runtime.\n *\n * @param {Object} item item to remove from the list\n */\nContentList.prototype.removeContentItem = function ( item ) {\n    var $focused    = this.$focusItem,\n        $parentNode = $focused.parentNode,\n        index;\n\n    if ( this.dataToDOM[item.id] ) {\n        this.$body.removeChild(this.dataToDOM[item.id]);\n        delete this.dataToDOM[item.id];\n    }\n\n    this.size -= 1;\n    this.data.splice(this.data.indexOf(item), 1);\n\n    for ( index = 0; index < this.size; index += 1 ) {\n        this.$body.children[index].tabIndex = index;\n    }\n\n    if ( $parentNode.classList.contains('focus') ) {\n        this.focusIndex($focused.tabIndex);\n    }\n};\n\n\nmodule.exports = ContentList;\n","'use strict';\n\nvar layouts = {},\n    contentBoardApi = require('magcore-plugin-content-board'),\n    staticLayout = require('./static');\n\n\nlayouts[undefined] = require('./static');\nlayouts[contentBoardApi.layouts.tvChannel] = require('./tv.channel');\nlayouts[contentBoardApi.layouts.video] = require('./video');\n// layouts[contentBoardApi.layouts.audio] = static.square;\n\nlayouts[contentBoardApi.layouts.static] = {};\nlayouts[contentBoardApi.layouts.static][contentBoardApi.geometry.square] = staticLayout.square;\nlayouts[contentBoardApi.layouts.static][contentBoardApi.geometry.horizontal] = staticLayout.rectangle;\n\nlayouts[contentBoardApi.layouts.record] = require('./record');\nlayouts[contentBoardApi.layouts.application] = require('./application');\n\nmodule.exports = layouts;\n","'use strict';\n\n\n/** @namespace */\nmodule.exports = {\n    layouts: {\n        tvChannel: 1, // tv channel item with playback and epg now\n        video: 2,  // moview preview with play now item\n        record: 3, // audio preview with play now item\n        static: 4, // static item by default\n        application: 5\n    },\n    geometry: {\n        square: 1,\n        horizontal: 2,\n        vertical: 3,\n        round: 4\n    },\n    actions: { // actions which can be applied to item\n        favorite: 1,\n        accessControl: 2,\n        expandItemContent: 3\n    }\n};\n","'use strict';\n\nvar previewPlayback = {\n    timeoutId: -1,\n    intent: null,\n\n    // ignore playback during asynchronous channel loading\n    active: true\n};\n\n/**\n * Send playback intent for TV channel preview.\n *\n * @param {Object} tvChannel - TV channel metadata\n * @param {Object} viewport - player coordinates\n */\nfunction playIntent ( tvChannel, viewport ) {\n    if ( previewPlayback.active ) {\n        previewPlayback.intent = core.intent({\n            action: 'play',\n            mime: 'content/video',\n            silent: true,\n            data: {\n                title: tvChannel.name,\n                uri: tvChannel.url,\n                solution: tvChannel.solution,\n                viewport: {\n                    x: viewport.left,\n                    y: viewport.top,\n                    width: viewport.width + 2,\n                    height: viewport.height + 2\n                },\n                displayOnTop: true,\n                aspect: 0\n            }\n        }, function () {\n            /* callback code */\n        });\n    }\n}\n\n\n/**\n * Play TV channel when content item card is under focus.\n *\n * @param {Element} $node - list item\n * @param {Object} tvChannel - TV channel\n */\nfunction playOnFocus ( $node, tvChannel ) {\n    var viewport;\n\n    previewPlayback.timeoutId = $node.timeoutId = setTimeout(function () {\n        if ( typeof tvChannel.url === 'function' ) {\n            tvChannel.url(function ( error, tvChannelInfo ) {\n                if ( error ) {\n                    return;\n                }\n\n                if ( tvChannel.url ) {\n                    viewport = $node.$container.getBoundingClientRect();\n                    playIntent({\n                        name: tvChannel.name,\n                        url: tvChannelInfo.url,\n                        solution: tvChannelInfo.solution\n                    }, viewport);\n                }\n            });\n        } else if ( typeof tvChannel.url === 'string' ) {\n            viewport = $node.$container.getBoundingClientRect();\n            playIntent(tvChannel, viewport);\n        }\n    }, 2000);\n}\n\n\nfunction stopPlayback () {\n    clearTimeout(previewPlayback.timeoutId);\n\n    if ( previewPlayback.intent !== null ) {\n        previewPlayback.intent.emit('playback:stop');\n        previewPlayback.intent = null;\n    }\n}\n\n\nif ( DEVELOP ) {\n    window.addEventListener('unload', stopPlayback);\n}\n\n\n/**\n * Render function.\n *\n * @this Object\n *\n * @param {Element} $node - list item\n */\nfunction render ( $node ) {\n    var number = this.data.number;\n\n    $node.className = 'content-item-tv';\n\n    $node.$shadow = $node.appendChild(document.createElement('div'));\n    $node.$shadow.className = 'content-item-tv-shadow';\n\n    $node.$container = $node.appendChild(document.createElement('div'));\n    $node.$container.className = 'content-item-tv-container';\n\n    $node.$icon = $node.$container.appendChild(document.createElement('div'));\n    $node.$icon.className = 'content-item-tv-icon';\n    $node.$icon.style.backgroundImage = 'url(\"' + this.data.icon.normal + '\")';\n\n    $node.$info = $node.$container.appendChild(document.createElement('div'));\n    $node.$info.className = 'content-item-tv-info';\n\n    $node.$index = $node.$info.appendChild(document.createElement('div'));\n    $node.$index.className = 'content-item-tv-index';\n\n    $node.$description = $node.$info.appendChild(document.createElement('div'));\n    $node.$description.className = 'content-item-tv-description';\n    $node.$description.innerText = this.data.name;\n\n    $node.$channelInfo = $node.appendChild(document.createElement('div'));\n    $node.$channelInfo.className = 'content-item-tv-channel-info';\n\n    $node.$channelDescription = $node.appendChild(document.createElement('div'));\n    $node.$channelDescription.className = 'content-item-tv-channel-description';\n\n    if ( this.runApp ) {\n        // See more button\n        $node.$channelInfo.innerText = this.data.name;\n        // $node.$channelDescription.innerText = this.data.name;\n    } else {\n        $node.$index.innerText = number;\n        $node.$channelInfo.innerText = number + '. ' + this.data.name;\n    }\n    // if ( number ) {\n    //     ;\n    // } else {\n    //     $node.$info.innerHTML = this.data.name;\n    // }\n    if ( this.data.program && this.data.program.name ) {\n        $node.$channelDescription.innerText = this.data.program.name;\n    }\n\n    // $node.$channelDescription.innerText = 'New York Stories with Joe Pascal.    The Bacon Brothers. Talking Business asdas d asd asd asd asd';\n\n    // setTimeout(function () {\n    //     $node.coords = $node.getBoundingClientRect();\n    //     $node.coords.offset = 20 + $node.coords.width;\n    // }, 0);\n}\n\ncore.addListeners({\n    blur: function () {\n        previewPlayback.active = false;\n        stopPlayback();\n    },\n    focus: function () {\n        previewPlayback.active = true;\n    }\n});\n\nmodule.exports = {\n    render: render,\n\n    focus: function ( $node ) {\n        $node.$shadow.className = 'content-item-tv-shadow--focus';\n        $node.$container.className = 'content-item-tv-container--focus';\n        $node.$icon.className = 'content-item-tv-icon--focus';\n        $node.$info.className = 'content-item-tv-info--focus';\n        $node.$index.className = 'content-item-tv-index--focus';\n        $node.$description.className = 'content-item-tv-description--focus';\n        $node.$channelInfo.className = 'content-item-tv-channel-info--focus';\n        $node.$channelDescription.className = 'content-item-tv-channel-description--focus';\n\n        //$node.$icon.style.backgroundImage = 'url(\"' + this.data.icon.active + '\")';\n\n        if ( !this.data.censored ) {\n            playOnFocus($node, this.data);\n        }\n    },\n\n    blur: function ( $node ) {\n        $node.$shadow.className = 'content-item-tv-shadow';\n        $node.$container.className = 'content-item-tv-container';\n        $node.$icon.className = 'content-item-tv-icon';\n        $node.$info.className = 'content-item-tv-info';\n        $node.$index.className = 'content-item-tv-index';\n        $node.$description.className = 'content-item-tv-description';\n        $node.$channelInfo.className = 'content-item-tv-channel-info';\n        $node.$channelDescription.className = 'content-item-tv-channel-description';\n\n        //$node.$icon.style.backgroundImage = 'url(\"' + this.data.icon.normal + '\")';\n\n        stopPlayback();\n    }\n};\n","'use strict';\n\n\n/**\n * Render function.\n *\n * @this Object\n *\n * @param {Node} $node DOM element of list item\n */\nfunction render ( $node ) {\n    //var additionalInfo = '';\n\n    $node.className = 'content-item-movie';\n\n    $node.$shadow = $node.appendChild(document.createElement('div'));\n    $node.$shadow.className = 'content-item-movie-shadow';\n\n    $node.$container = $node.appendChild(document.createElement('div'));\n\n    if ( this.data.icon ) {\n        $node.$container.hasImage = false;\n        $node.$container.className = 'content-item-movie-container';\n\n        if ( typeof this.data.icon === 'string' ) {\n            $node.$container.style.backgroundImage = 'url(' + this.data.icon + ')';\n        } else {\n            $node.$container.style.backgroundImage = 'url(\"' + this.data.icon.normal + '\")';\n        }\n    } else if ( this.data.image ) {\n        $node.$container.hasImage = true;\n        $node.$container.style.backgroundImage = 'url(\"' + this.data.image.normal + '\")';\n        $node.$container.className = 'content-item-movie-container content-item-movie-container--image';\n    }\n\n    $node.$container.style.backgroundColor = this.data.colors.background;\n\n    $node.$title = $node.$container.appendChild(document.createElement('div'));\n    $node.$title.className = 'content-item-movie-title';\n    $node.$title.innerText = this.data.name;\n\n    $node.$description = $node.$container.appendChild(document.createElement('div'));\n    $node.$description.className = 'content-item-movie-description';\n\n    if ( this.data.description ) {\n        $node.$description.innerText = this.data.description;\n    }\n\n    //$node.$additionalInfo = $node.appendChild(document.createElement('div'));\n    //$node.$additionalInfo.className = 'content-item-movie-additional-info';\n\n    /*if ( this.data.age ) {\n        additionalInfo = this.data.age;\n    }*/\n\n    /*if ( this.data.year ) {\n        if ( additionalInfo.length > 0 ) {\n            additionalInfo += ' • ';\n        }\n        additionalInfo += this.data.year;\n    }*/\n\n    /*if ( this.data.duration ) {\n        if ( additionalInfo.length > 0 ) {\n            additionalInfo += ' • ';\n        }\n        additionalInfo += this.data.duration;\n    }*/\n\n    //$node.$additionalInfo.innerText = additionalInfo;\n\n    // $node.$card = $node.appendChild(document.createElement('div'));\n    // $node.$card.className = 'content-item-video-card';\n    // $node.$card.style.backgroundColor = this.data.colors.background;\n\n    // $node.$icon = $node.appendChild(document.createElement('div'));\n    // $node.$focusIcon = $node.appendChild(document.createElement('div'));\n\n    //$node.$name = $node.$card.appendChild(document.createElement('div'));\n    //$node.$description = $node.appendChild(document.createElement('div'));\n\n    // $node.$icon.className = 'content-item-movie-icon';\n    //\n    // if ( this.data.icon ) {\n    //     $node.$icon.style.backgroundImage = 'url(\"' + this.data.icon.normal + '\")';\n    // } else if ( this.data.image ) {\n    //     $node.$icon.style.backgroundImage = 'url(\"' + this.data.image.normal + '\")';\n    // }\n\n    // $node.$name.className = 'content-item-video-name';\n    // $node.$name.innerText = this.data.name;\n    // $node.$name.style.color = this.data.colors.splashFont;\n\n    //$node.$description.className = 'hidden';\n    //$node.$description.innerText = this.data.description;\n\n    // setTimeout(function () {\n    //     $node.coords = $node.getBoundingClientRect();\n    //     $node.coords.offset = 20 + $node.coords.width;\n    // }, 0);\n}\n\nmodule.exports = {\n    render: render,\n\n    focus: function ( $node ) {\n        $node.$shadow.className = 'content-item-movie-shadow--focus';\n        $node.$container.className = 'content-item-movie-container--focus' +\n            ( $node.$container.hasImage ? ' content-item-movie-container--image' : '' );\n        $node.$title.className = 'content-item-movie-title--focus';\n        $node.$description.className = 'content-item-movie-description--focus';\n        //$node.$additionalInfo.className = 'content-item-movie-additional-info--focus';\n\n        if ( !$node.$container.hasImage ) {\n            $node.$container.style.backgroundImage = 'url(\"' + this.data.icon.active + '\")';\n        }\n    },\n\n    blur: function ( $node ) {\n        $node.$shadow.className = 'content-item-movie-shadow';\n        $node.$container.className = 'content-item-movie-container' +\n            ( $node.$container.hasImage ? ' content-item-movie-container--image' : '' );\n        $node.$title.className = 'content-item-movie-title';\n        $node.$description.className = 'content-item-movie-description';\n        //$node.$additionalInfo.className = 'content-item-movie-additional-info';\n\n        if ( !$node.$container.hasImage ) {\n            $node.$container.style.backgroundImage = 'url(\"' + this.data.icon.normal + '\")';\n        }\n    }\n};\n","'use strict';\n\nvar $emptyNode = document.createElement('div');\n\n\n/**\n * Rectangle static render function.\n *\n * @this Object\n *\n * @param {Node} $node DOM element of list item\n */\nfunction rectangleRender ( $node ) {\n    /*\n    <div class=\"content-item-record\">\n        <div class=\"content-item-record-shadow\"></div>\n        <div class=\"content-item-record-container\" style=\"background-color: #ff6650;\">\n            <div class=\"content-item-record-icon\" style=\"background-image: url('app/img/720/icons/karaoke.placeholder.png')\"></div>\n            <div class=\"content-item-record-info\">\n                <div class=\"content-item-record-name\">Scorpions</div>\n                <div class=\"content-item-record-description\">Return to Forever </div>\n            </div>\n        </div>\n        <div class=\"content-item-record-fullinfo\">\n            <div class=\"content-item-record-title\">Return to Forever</div>\n            <div class=\"content-item-record-metadata\">Scorpions</div>\n        </div>\n    </div>\n    */\n    $node.className = 'content-item-record';\n\n    $node.$shadow = $node.appendChild(document.createElement('div'));\n    $node.$shadow.className = 'content-item-record-shadow';\n\n    $node.$container = $node.appendChild(document.createElement('div'));\n    $node.$container.className = 'content-item-record-container';\n    $node.$container.style.backgroundColor = this.data.colors.background;\n\n    if ( typeof this.data.icon === 'string' ) {\n        $node.$icon = $node.$container.appendChild(document.createElement('div'));\n        $node.$icon.className = 'content-item-record-card-icon';\n        $node.$icon.style.backgroundImage = 'url(\"' + this.data.icon + '\")';\n    } else if ( this.data.icon && this.data.icon.normal ) {\n        $node.$icon = $node.$container.appendChild(document.createElement('div'));\n        $node.$icon.className = 'content-item-record-card-icon';\n        $node.$icon.style.backgroundImage = 'url(\"' + this.data.icon.normal + '\")';\n    } else {\n        $node.$icon = $emptyNode;\n    }\n\n    $node.$name = $node.$container.appendChild(document.createElement('div'));\n    $node.$name.className = 'content-item-record-name';\n\n    $node.$nameText = $node.$name.appendChild(document.createElement('div'));\n    $node.$nameText.className = 'content-item-record-name-text';\n    $node.$nameText.innerText = this.data.name;\n\n    $node.$state = document.createElement('div');\n    $node.$state.className = 'content-item-record-state';\n\n    $node.$progressBar = document.createElement('div');\n    $node.$progressBar.className = 'content-item-record-progress-bar';\n\n    $node.$progressLine = $node.$progressBar.appendChild(document.createElement('div'));\n    $node.$progressLine.className = 'content-item-record-progress-line';\n\n    $node.$progressPercent = $node.$progressBar.appendChild(document.createElement('div'));\n    $node.$progressPercent.className = 'content-item-record-progress-percent';\n\n    if ( this.data.progress === 0 ) {\n        $node.$container.appendChild($node.$state);\n        $node.$state.innerText = this.data.state;\n    } else if ( this.data.progress === 100 ) {\n        $node.$container.appendChild($node.$state);\n        $node.$state.innerText = this.data.state;\n    } else {\n        $node.$container.appendChild($node.$progressBar);\n        $node.$progressBar.className = 'content-item-record-progress-bar--active';\n        $node.$progressLine.style.width = this.data.progress + '%';\n        $node.$progressPercent.innerText = this.data.progress + '%';\n    }\n}\n\n\nmodule.exports = {\n    render: rectangleRender,\n\n    focus: function ( $node ) {\n        $node.$shadow.className = 'content-item-record-shadow--focus';\n        $node.$container.className = 'content-item-record-container--focus';\n        $node.$icon.className = 'content-item-record-icon--focus';\n        $node.$name.className = 'content-item-record-name--focus';\n        $node.$nameText.className = 'content-item-record-name-text--focus';\n        $node.$state.className = 'content-item-record-state--focus';\n\n        if ( this.data.progress > 0 && this.data.progress < 100 ) {\n            $node.$container.appendChild($node.$progressBar);\n            $node.$progressBar.className = 'content-item-record-progress-bar--active-focus';\n            $node.$progressLine.className = 'content-item-record-progress-line--focus';\n            $node.$progressPercent.className = 'content-item-record-progress-percent--focus';\n        }\n\n        if ( this.data.icon && this.data.icon.active ) {\n            $node.$icon.style.backgroundImage = 'url(\"' + this.data.icon.active + '\")';\n        }\n    },\n\n    blur: function ( $node ) {\n        $node.$shadow.className = 'content-item-record-shadow';\n        $node.$container.className = 'content-item-record-container';\n        $node.$icon.className = 'content-item-record-icon';\n        $node.$name.className = 'content-item-record-name';\n        $node.$nameText.className = 'content-item-record-name-text';\n        $node.$state.className = 'content-item-record-state';\n\n        if ( this.data.progress > 0 && this.data.progress < 100 ) {\n            $node.$container.appendChild($node.$progressBar);\n            $node.$progressBar.className = 'content-item-record-progress-bar--active';\n            $node.$progressLine.className = 'content-item-record-progress-line';\n            $node.$progressPercent.className = 'content-item-record-progress-percent';\n        }\n\n        if ( typeof this.data.icon === 'string' ) {\n            $node.$icon.style.backgroundImage = 'url(\"' + this.data.icon + '\")';\n        } else if ( this.data.icon && this.data.icon.normal ) {\n            $node.$icon.style.backgroundImage = 'url(\"' + this.data.icon.normal + '\")';\n        }\n    }\n};\n","'use strict';\n\n/**\n * Render function.\n *\n * @this Object\n *\n * @param {Node} $node DOM element of list item\n */\nfunction render ( $node ) {\n    // <div class=\"content-item-app\">\n    //     <div class=\"content-item-app-container\" style=\"background-color: #00d1eb;\">\n    //         <div class=\"content-item-app-overlay\"></div>\n    //         <div class=\"content-item-app-icon\" style=\"background-image: url('app/img/720/icons/tv.png'); \"></div>\n    //         <div class=\"content-item-app-name\">TV</div>\n    //     </div>\n    // </div>\n    $node.className = 'content-item-app';\n\n    $node.$container = $node.appendChild(document.createElement('div'));\n    $node.$container.className = 'content-item-app-container';\n    $node.$container.style.backgroundColor = this.data.colors.splashBackground;\n\n    $node.$overlay = $node.$container.appendChild(document.createElement('div'));\n    $node.$overlay.className = 'content-item-app-overlay';\n\n    $node.$icon = $node.$container.appendChild(document.createElement('div'));\n    $node.$icon.className = 'content-item-app-icon';\n    $node.$icon.style.backgroundImage = 'url(\"' + this.data.icons.primeLogoNormal + '\")';\n\n    $node.$name = $node.$container.appendChild(document.createElement('div'));\n    $node.$name.className = 'content-item-app-name';\n    $node.$name.innerText = this.data.name;\n}\n\nmodule.exports = {\n    render: render,\n    focus: function ( $node ) {\n        $node.$container.className = 'content-item-app-container--focus';\n        $node.$overlay.className = 'content-item-app-overlay--focus';\n        $node.$icon.className = 'content-item-app-icon--focus';\n        $node.$name.className = 'content-item-app-name--focus';\n        $node.$icon.style.backgroundImage = 'url(\"' + this.data.icons.primeLogoActive + '\")';\n    },\n    blur: function ( $node ) {\n        $node.$container.className = 'content-item-app-container';\n        $node.$overlay.className = 'content-item-app-overlay';\n        $node.$icon.className = 'content-item-app-icon';\n        $node.$name.className = 'content-item-app-name';\n        $node.$icon.style.backgroundImage = 'url(\"' + this.data.icons.primeLogoNormal + '\")';\n    }\n};\n","'use strict';\n\nvar keys = require('stb-keys'),\n\n    Component = require('stb-component');\n\n\nfunction AppButton ( config ) {\n    var self = this,\n        icons = config.application.uris.icons;\n\n    // console.log('appbutton ' + config);\n    // console.log(JSON.stringify(config.application));\n\n    // <div class=\"app-button\">\n    //     <div class=\"app-background\" style=\"background-color: #efbe01\"></div>\n    //     <div class=\"app-name\">Apps</div>\n    //     <div class=\"app-overlay-reflection\"></div>\n    //     <div class=\"app-overlay-icon\" style=\"background-image: url('app/img/720/apps.icon.png'); \"></div>\n    // </div>\n\n    config.events = {\n        click: function () {\n            console.log(JSON.stringify(config.data));\n        },\n\n        keydown: function ( event ) {\n            if ( event.code === keys.ok ) {\n                config.onClick();\n            }\n        },\n\n        focus: function () {\n            self.$background.className = 'app-background--focus';\n            self.$name.className = 'app-name--focus';\n            self.$overlay.className = 'app-overlay--focus';\n            self.$overlayIcon.className = 'app-overlay-icon--focus';\n\n            if ( icons.shadowActive ) {\n                self.$overlay.style.backgroundImage = 'url(' + icons.shadowActive + ')';\n            }\n\n            self.$overlayIcon.style.backgroundImage = 'url(' + icons.primeLogoActive + ')';\n        },\n\n        blur: function () {\n            self.$background.className = 'app-background';\n            self.$name.className = 'app-name';\n            self.$overlay.className = 'app-overlay';\n            self.$overlayIcon.className = 'app-overlay-icon';\n\n            if ( icons.shadowNormal ) {\n                self.$overlay.style.backgroundImage = 'url(' + icons.shadowNormal + ')';\n            }\n\n            self.$overlayIcon.style.backgroundImage = 'url(' + icons.primeLogoNormal + ')';\n        }\n    };\n\n    Component.call(self, config);\n\n    self.$body = self.$node.appendChild(document.createElement('div'));\n    self.$body.className = 'app-body';\n\n    self.$background = self.$body.appendChild(document.createElement('div'));\n    self.$background.className = 'app-background';\n    self.$background.style.backgroundColor = config.application.colors.splashBackground;\n\n    self.$name = self.$body.appendChild(document.createElement('div'));\n    self.$name.className = 'app-name';\n    // self.$name.style.color = config.application.colors.splashFont;\n    self.$name.innerText = config.application.name;\n\n    self.$overlay = self.$body.appendChild(document.createElement('div'));\n    self.$overlay.className = 'app-overlay';\n\n    if ( icons.shadowNormal ) {\n        self.$overlay.style.backgroundImage = 'url(' + icons.shadowNormal + ')';\n    }\n\n    self.$overlayIcon = self.$body.appendChild(document.createElement('div'));\n    self.$overlayIcon.className = 'app-overlay-icon';\n    self.$overlayIcon.style.backgroundImage = 'url(' + icons.primeLogoNormal + ')';\n}\n\n// inheritance\nAppButton.prototype = Object.create(Component.prototype);\nAppButton.prototype.constructor = AppButton;\nAppButton.prototype.name = 'app-button';\n\nmodule.exports = AppButton;\n","'use strict';\n\nvar date = new Date();\n\nmodule.exports = function ( timestamp, months ) {\n    var month;\n\n    // console.log(JSON.stringify(days));\n    // console.log(JSON.stringify(months));\n    // date.setTime(timestamp);\n    // day = days[date.getDay()];\n    month = months[date.getMonth()];\n\n    return date.getDate() + ' ' + month;\n};\n","'use strict';\n\nvar date = new Date();\n\nmodule.exports = function ( timestamp ) {\n    var hh, mm;\n\n    date.setTime(timestamp);\n    hh = date.getHours();\n    mm = date.getMinutes();\n\n    if ( hh < 10 ) {\n        hh = '0' + hh;\n    }\n    if ( mm < 10 ) {\n        mm = '0' + mm;\n    }\n\n    return hh + ':' + mm;\n};\n"],"sourceRoot":""}