{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/stb-keys/index.js","webpack:///./node_modules/stb-component/index.js","webpack:///./node_modules/spa-component/index.js","webpack:///./node_modules/spa-app/lib/core.js","webpack:///./node_modules/mag-app/index.js","webpack:///./node_modules/cjs-emitter/index.js","webpack:///./node_modules/stb-app/lib/css.js","webpack:///./node_modules/spa-keys/index.js","webpack:///./node_modules/mag-component-layout-list/index.js","webpack:///./node_modules/mag-component-list/index.js","webpack:///./node_modules/mag-component-modal/index.js","webpack:///./src/js/modules/storage.js","webpack:///./src/js/modules/div.js","webpack:///./src/js/main.js","webpack:///./node_modules/mag-app/lib/main.js","webpack:///./node_modules/cjs-query/index.js","webpack:///./src/js/config.js","webpack:///./node_modules/spa-app/lib/events.js","webpack:///./node_modules/stb-shim-classlist/index.js","webpack:///./node_modules/stb-app/lib/metrics.js","webpack:///./src/js/metrics.js","webpack:///./node_modules/mag-app/lib/css.js","webpack:///./node_modules/spa-gettext/index.js","webpack:///./node_modules/cjs-gettext/index.js","webpack:///./src/js/pages/main.js","webpack:///./node_modules/mag-component-footer/index.js","webpack:///./node_modules/mag-component-panel/index.js","webpack:///./node_modules/mag-component-layout/index.js","webpack:///./node_modules/mag-component-panel-set/index.js","webpack:///./node_modules/mag-component-layout-list/node_modules/mag-component-layout/index.js","webpack:///./node_modules/stb-component-modal/index.js","webpack:///./node_modules/spa-component-modal/index.js","webpack:///./node_modules/mag-component-radio-list/index.js","webpack:///./node_modules/spa-component-checkbox/index.js","webpack:///./node_modules/stb-component-scrollbar/index.js","webpack:///./node_modules/spa-component-scrollbar/index.js","webpack:///./node_modules/mag-component-scroll-area/index.js","webpack:///./src/js/modules/app.exit.js","webpack:///./src/js/modules/web.input.js","webpack:///./node_modules/spa-component-progress-bar/index.js","webpack:///./node_modules/cjs-uri/index.js","webpack:///./src/js/modules/preview.bookmark.js","webpack:///./src/js/modules/random.js","webpack:///./src/js/modules/request.js","webpack:///./src/js/modules/intents.js","webpack:///./src/js/modules/validate.url.js","webpack:///./node_modules/stb-component-page/index.js","webpack:///./node_modules/spa-component-page/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","keys","back","backspace","channelNext","tab","channelPrev","ok","enter","exit","escape","volumeUp","volumeDown","f1","f2","f3","f4","refresh","frame","phone","set","tv","menu","app","rewind","forward","audio","standby","keyboard","usbMounted","usbUnmounted","playPause","play","pause","stop","power","record","info","mute","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","Emitter","counter","Component","config","self","this","visible","focusable","$node","$body","parent","children","propagate","document","createElement","className","id","add","hide","defaultEvents","events","forEach","eventName","addListener","apply","addEventListener","event","focus","emit","stopPropagation","constructor","child","index","arguments","length","push","parentNode","appendChild","item","remove","activePage","activeComponent","blur","splice","indexOf","removeChild","data","activeItem","classList","show","callback","setTimeout","parse","query","location","search","substring","route","pageTo","page","pageFrom","active","showPage","from","to","once","onceWrapper","removeListener","addListeners","callbacks","filter","fn","undefined","Array","slice","link","rel","href","metrics","height","head","space","pageUp","pageDown","end","home","left","up","right","down","insert","del","List","Layout","LayoutList","handlers","links","$noData","fixedData","$item","layout","inner","focusIndex","focusItem","renderItemDefault","layoutConfig","currentNode","currentData","ready","items","childNodes","innerText","firstChild","$parentItem","click","setData","init","$wrap","noData","innerHTML","Element","renderItem","$focusItem","viewIndex","type","TYPE_VERTICAL","size","cycle","scroll","provider","TYPE_HORIZONTAL","mousewheel","wheelDeltaY","move","wheelDeltaX","keydown","code","idx","currSize","onClick","render","blocked","error","realSize","maxCount","viewSize","pos","normalize","blurItem","renderView","itemData","prevIndex","currIndex","mark","scrollTo","direction","force","previousSibling","lastChild","nextSibling","$prev","$curr","markItem","state","StbComponentModal","Modal","$overlay","onkeydown","$header","$text","title","icon","$icon","storageStructureSample","bookmarks","settings","scale","isFullScreen","isVirtualMouse","prepareStorage","toString","saveData","core","plugins","ufsJson","saveSync","node","createTextNode","load","environment","language","flags","modalActive","favoritesActive","webWindowActive","ignoreMessages","currentUrl","currentUrlTitle","mediaContentData","pages","main","storage","loadSync","window","getCoreInstance","platform","body","setAttribute","contextmenu","preventDefault","split","part","decodeURIComponent","stringify","params","encodeURIComponent","join","bookmarkPreviewLoadAttemptsLimit","DOMContentLoaded","unload","eventLocal","keyCode","ctrlKey","altKey","shiftKey","keypress","documentElement","DOMTokenList","el","_element","_classCache","classes","replace","token","contains","toggle","screenHeight","screen","availHeight","availTop","availBottom","availWidth","width","availLeft","availRight","480","576","720","1080","linkCSS","theme","path","Gettext","loader","prepare","gettext","_","pgettext","ngettext","defaultLanguage","xhr","ext","XMLHttpRequest","onload","JSON","responseText","onerror","ontimeout","open","send","meta","msgId","context","plural","evalResult","eval","browseMessageReload","mainPanelList","headerAmount","navigationListData","settingsListData","progressBar","mainPanelSet","mainPanel","rightPanel","leftPanelMenu","mainPanelTitle","mainPanelListScroll","rightInfoPanelScroll","modalMessageScroll","mediaActionsModalList","Footer","Panel","PanelSet","ModalMessage","RadioList","ScrollBar","ScrollArea","appExit","webInput","previewImage","intents","validateUrl","div","pageMain","browser","messagesToEngine","messages","toEngine","messagesToApp","toApp","isBrowserInit","doc","closeModalWindow","modals","modal","footer","constructInfo","nodes","text","textArea","fillBookmarksList","excludeUrl","favicon","storedBookmarks","url","Image","src","reRender","isDataRaw","mixin","tmpData","scroller","style","display","callMenu","addressBar","navigationViewConfig","bookmarksViewConfig","browserViewConfig","sendMessage","userSettings","showWebWindow","toggleFavorites","fillStar","favorites","$scaleInfo","$fullScreenInfo","$virtualMouseInfo","navigationMenuInfoMap","settingsMenuInfoMap","setProgressBar","action","hideWebWindow","middle","reload","openVirtualKeyboard","setFullScreen","settingsViewConfig","faviconBlock","getElementById","placeholder","progress","setScale","click:item","mediaAvailable","openKeyboard","keyboardEvent","userTextInput","navigateBackward","navigateForward","stopLoad","focus:item","currentState","step","panels","navigation","clearTimeout","timerId","onFocusDebounceTimeout","openDownloads","goExit","onMessageReceive","progressLevel","mimeType","itemPlayable","message","intent","close","goBack","goHome","itemMime","itemName","playable","uri","itemLink","unshift","startPlayback","mime","initUrl","openMenu","changeUrl","setLoadProgress","Number","setFavicon","unsetFavicon","favoritesState","notification","notify","openTaskManager","openSettings","openSystemSettings","intentUrl","purpose","standalone","showPortalWindow","currentTab","tabs","codes","$table","insertRow","rows","insertCell","$left","cells","$right","currTab","$tab","$tabChildren","addClick","ind","disabled","visibility","onclick","shadows","isArray","$wrapper","HTMLElement","wrap","componentClickHandler","textContent","keydownHandler","CheckBox","group","$checkedData","checkBox","$last","table","tr","td","check","groups","thumbRect","trackRect","$thumb","getBoundingClientRect","marginTop","marginLeft","curr","prev","realHeight","viewHeight","topPosition","delta","top","Math","ceil","offsetHeight","exitModal","previousFocus","ProgressBar","parsedUrl","protocol","authority","Date","now","done","change","$element","max","min","$value","prevValue","abs","parseUri","str","options","matched","parser","strictMode","exec","q","$0","$1","$2","strict","loose","imageContainer","random","request","resolution","image","loadAttemptsCount","baseUrls","sizes","thumb","dummy","backgroundImage","IsReady","charset","floor","method","headers","async","hname","jdata","timeout","toUpperCase","onreadystatechange","readyState","status","ex","responseXML","setRequestHeader","abort","onClose","RegExp","test","Page"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","/**\n * Global list of non-printable control key codes.\n *\n * At the moment `keypress` and `keydown` events are emitted for the same keys (for both printable and non-printable characters).\n *\n * WARNING!!! All codes in this file (except 'volumeUp' and 'volumeDown')\n * are used in window 'keydown' handler to prevent wrong 'keypress' firings.\n * If you add new code to this file 'keypress' event with this code will never fire.\n *\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar keys = require('spa-keys');\n\n\n// extend with additional codes\nkeys.back         = keys.backspace;\nkeys.channelNext  = keys.tab;        // Tab\nkeys.channelPrev  = keys.tab + 's';  // Shift+Tab\nkeys.ok           = keys.enter;      // Enter\nkeys.exit         = keys.escape;     // Esc\nkeys.volumeUp     = 107;             // NUMPAD +\nkeys.volumeDown   = 109;             // NUMPAD -\nkeys.f1           = 112 + 'c';       // Ctrl+F1\nkeys.f2           = 113 + 'c';       // Ctrl+F2\nkeys.f3           = 114 + 'c';       // Ctrl+F3\nkeys.f4           = 115 + 'c';       // Ctrl+F4\nkeys.refresh      = 116 + 'c';       // Ctrl+F5\nkeys.frame        = 117 + 'c';       // Ctrl+F6\nkeys.phone        = 119 + 'c';       // Ctrl+F8\nkeys.set          = 120 + 'c';       // Ctrl+F9\nkeys.tv           = 121 + 'c';       // Ctrl+F10\nkeys.menu         = 122 + 'c';       // Ctrl+F11\nkeys.app          = 123 + 'c';       // Ctrl+F12\nkeys.rewind       = 66  + 'a';       // Alt+B\nkeys.forward      = 70  + 'a';       // Alt+F\nkeys.audio        = 71  + 'a';       // Alt+G\nkeys.standby      = 74  + 'a';       // Alt+J\nkeys.keyboard     = 76  + 'a';       // Alt+L\nkeys.usbMounted   = 80  + 'a';       // Alt+P\nkeys.usbUnmounted = 81  + 'a';       // Alt+Q\nkeys.playPause    = 82  + 'a';       // Alt+R\nkeys.play         = -1;              // should be redefined on some platforms\nkeys.pause        = -1;              // should be redefined on some platforms\nkeys.stop         = 83  + 'a';       // Alt+S\nkeys.power        = 85  + 'a';       // Alt+U\nkeys.record       = 87  + 'a';       // Alt+W\nkeys.info         = 89  + 'a';       // Alt+Y\nkeys.mute         = 192 + 'a';\nkeys.digit0       = 48;\nkeys.digit1       = 49;\nkeys.digit2       = 50;\nkeys.digit3       = 51;\nkeys.digit4       = 52;\nkeys.digit5       = 53;\nkeys.digit6       = 54;\nkeys.digit7       = 55;\nkeys.digit8       = 56;\nkeys.digit9       = 57;\n\n\n// public\nmodule.exports = keys;\n\n// public\n// module.exports = {\n//     getCode: function ( event ) {\n//         var code = event.keyCode;\n//\n//         // apply key modifiers\n//         if ( event.shiftKey ) { code += 1000; }\n//         if ( event.altKey )   { code += 2000; }\n//\n//         return code;\n//     },\n//\n//     codes: {\n//         back:         8,    // Backspace\n//         channelPrev:  1009, // Shift+Tab\n//         channelNext:  9,    // Tab\n//         ok:           13,   // Enter\n//         exit:         27,   // Esc\n//         pageUp:       33,\n//         pageDown:     34,\n//         end:          35,\n//         home:         36,\n//         left:         37,\n//         up:           38,\n//         right:        39,\n//         down:         40,\n//         'delete':     46,\n//         volumeUp:     107,  // NUMPAD +\n//         volumeDown:   109,  // NUMPAD -\n//         f1:           112,  // F1\n//         f2:           113,  // F2\n//         f3:           114,  // F3\n//         f4:           115,  // F4\n//         refresh:      116,  // F5\n//         frame:        117,  // F6\n//         phone:        119,  // F8\n//         set:          120,  // F9\n//         tv:           121,  // F10\n//         menu:         122,  // F11\n//         app:          123,  // F12\n//         rewind:       2066, // Alt+B\n//         forward:      2070, // Alt+F\n//         audio:        2071, // Alt+G\n//         standby:      2074, // Alt+J\n//         keyboard:     2076, // Alt+L\n//         usbMounted:   2080, // Alt+P\n//         usbUnmounted: 2081, // Alt+Q\n//         playPause:    2082, // Alt+R\n//         stop:         2083, // Alt+S\n//         power:        2085, // Alt+U\n//         record:       2087, // Alt+W\n//         info:         2089, // Alt+Y\n//         mute:         2192\n//     }\n// };\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component');\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    Emitter = require('cjs-emitter'),\n    counter = 0;\n\n\n/**\n * Base component implementation.\n *\n * Visual element that can handle sub-components.\n * Each component has a DOM element container $node with a set of classes:\n * \"component\" and some specific component class names depending on the hierarchy, for example \"page\".\n * Each component has a unique ID given either from $node.id or from data.id. If not given will generate automatically.\n *\n * @constructor\n * @extends Emitter\n *\n * @param {Object} [config={}] init parameters\n * @param {Element} [config.id] component unique identifier (generated if not set)\n * @param {string} [config.className] space-separated list of classes for \"className\" property of this.$node\n * @param {Element} [config.$node] DOM element/fragment to be a component outer container\n * @param {Element} [config.$body] DOM element/fragment to be a component inner container (by default is the same as $node)\n * @param {Component} [config.parent] link to the parent component which has this component as a child\n * @param {Array.<Component>} [config.children=[]] list of components in this component\n * @param {Object.<string, function>} [config.events={}] list of event callbacks\n * @param {boolean} [config.visible=true] component initial visibility state flag\n * @param {boolean} [config.focusable=true] component can accept focus or not\n * @param {boolean} [config.propagate=false] allow to emit events to the parent component\n *\n * @fires module:stb/component~Component#click\n *\n * @example\n * var component = new Component({\n *     $node: document.getElementById(id),\n *     className: 'bootstrap responsive',\n *     events: {\n *         click: function () { ... }\n *     }\n * });\n * component.add( ... );\n * component.focus();\n */\nfunction Component ( config ) {\n    // current execution context\n    var self = this,\n        name;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.id && typeof config.id !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.id');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$node && !(config.$node instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$node type');\n        }\n        if ( config.$body && !(config.$body instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$body type');\n        }\n        if ( config.parent && !(config.parent instanceof Component) ) {\n            throw new Error(__filename + ': wrong config.parent type');\n        }\n        if ( config.children && !Array.isArray(config.children) ) {\n            throw new Error(__filename + ': wrong config.children type');\n        }\n    }\n\n    /**\n     * Component visibility state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.visible = true;\n\n    /**\n     * Component can accept focus or not.\n     *\n     * @type {boolean}\n     */\n    this.focusable = true;\n\n    /**\n     * DOM outer handle.\n     *\n     * @type {Element}\n     */\n    this.$node = null;\n\n    /**\n     * DOM inner handle.\n     * In simple cases is the same as $node.\n     *\n     * @type {Element}\n     */\n    this.$body = null;\n\n    /**\n     * Link to the parent component which has this component as a child.\n     *\n     * @type {Component}\n     */\n    this.parent = null;\n\n    /**\n     * List of all children components.\n     *\n     * @type {Component[]}\n     */\n    this.children = [];\n\n    /**\n     * allow to emit events to the parent component\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.propagate = !!config.propagate;\n\n    // parent constructor call\n    Emitter.call(this);\n\n    // outer handle - empty div in case nothing is given\n    this.$node = config.$node || document.createElement('div');\n\n    // inner handle - the same as outer handler in case nothing is given\n    this.$body = config.$body || this.$node;\n\n    // set CSS class names\n    //this.$node.className += ' component ' + (config.className || '');\n    // previous approach is not good as it mess with components hierarchy\n    this.$node.className = this.name + ' ' + (config.className || '');\n\n    // apply component id if given, generate otherwise\n    this.id = config.id || this.$node.id || 'cid' + counter++;\n\n    // apply hierarchy\n    if ( config.parent ) {\n        // add to parent component\n        config.parent.add(this);\n    }\n\n    // apply given visibility\n    if ( config.visible === false ) {\n        // default state is visible\n        this.hide();\n    }\n\n    // apply focus handling method\n    if ( config.focusable === false ) {\n        // can't accept focus\n        this.focusable = false;\n    }\n\n    // a descendant defined own events\n    if ( this.defaultEvents ) {\n        // sanitize\n        config.events = config.events || {};\n\n        if ( DEVELOP ) {\n            if ( typeof config.events !== 'object' ) {\n                throw new Error(__filename + ': wrong config.events type');\n            }\n            if ( typeof this.defaultEvents !== 'object' ) {\n                throw new Error(__filename + ': wrong this.defaultEvents type');\n            }\n        }\n\n        for ( name in this.defaultEvents ) {\n            // overwrite default events with user-defined\n            config.events[name] = config.events[name] || this.defaultEvents[name];\n        }\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( eventName ) {\n            self.addListener(eventName, config.events[eventName]);\n        });\n    }\n\n    // apply the given children components\n    if ( config.children ) {\n        // apply\n        this.add.apply(this, config.children);\n    }\n\n    // component activation by mouse\n    this.$node.addEventListener('click', function ( event ) {\n        // left mouse button\n        //if ( event.button === 0 ) {\n        // activate if possible\n        self.focus();\n\n        // there are some listeners\n        if ( self.events['click'] ) {\n            /**\n             * Mouse click event.\n             *\n             * @event module:stb/component~Component#click\n             *\n             * @type {Object}\n             * @property {Event} event click event data\n             */\n            self.emit('click', event);\n        }\n        //}\n\n        if ( DEVELOP ) {\n            // middle mouse button\n            if ( event.button === 1 ) {\n                //debug.inspect(self, 0);\n                debug.info('\"window.link\" or \"' + self.id + '.component\"', 'this component is now available in global scope');\n                window.link = self;\n                self.$node.classList.toggle('wired');\n            }\n        }\n\n        event.stopPropagation();\n    });\n\n    if ( DEVELOP ) {\n        // expose inner ID to global scope\n        window[self.id] = self.$node;\n\n        // expose a link\n        this.$node.component = this.$body.component = this;\n        this.$node.title = this.name + '#' + this.id + ' (outer)';\n        this.$body.title = this.name + '#' + this.id + ' (inner)';\n    }\n\n    debug.info('create component ' + this.name + '#' + this.id, null, {\n        tags: ['create', 'component', this.name, this.id]\n    });\n}\n\n\n// inheritance\nComponent.prototype = Object.create(Emitter.prototype);\nComponent.prototype.constructor = Component;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nComponent.prototype.defaultEvents = null;\n\n\n/**\n * Add a new component as a child.\n *\n * @param {...Component} [child] variable number of elements to append\n *\n * @files Component#add\n *\n * @example\n * panel.add(\n *     new Button( ... ),\n *     new Button( ... )\n * );\n */\nComponent.prototype.add = function ( child ) {\n    var index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        child = arguments[index];\n\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        // apply\n        this.children.push(child);\n        child.parent = this;\n\n        // correct DOM parent/child connection if necessary\n        if ( child.$node && child.$node.parentNode === null ) {\n            this.$body.appendChild(child.$node);\n        }\n\n        debug.info('add component ' + child.name + '#' + child.id + ' to ' + this.name + '#' + this.id, null, {\n            tags: ['add', 'component', this.name, this.id, child.name, child.id]\n        });\n\n        // there are some listeners\n        if ( this.events['add'] ) {\n            /**\n             * A child component is added.\n             *\n             * @event module:stb/component~Component#add\n             *\n             * @type {Object}\n             * @property {Component} item new component added\n             */\n            this.emit('add', {item: child});\n        }\n\n        //debug.log('component ' + this.name + '#' + this.id + ' new child: ' + child.name + '#' + child.id);\n    }\n};\n\n\n/* @todo: consider activation in future */\n///**\n// * Insert component into the specific position.\n// *\n// * @param {Component} child component instance to insert\n// * @param {number} index insertion position\n// */\n//Component.prototype.insert = function ( child, index ) {\n//    var prevIndex = this.children.indexOf(child);\n//\n//    if ( DEVELOP ) {\n//        if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n//        if ( !(child instanceof Component) ) { throw new Error(__filename + ': wrong child type'); }\n//    }\n//\n//    if ( prevIndex !== -1 ) {\n//        this.children.splice(prevIndex, 1);\n//        this.$body.removeChild(child.$node);\n//    }\n//\n//    if ( index === this.children.length ) {\n//        this.$body.appendChild(child.$node);\n//    } else {\n//        this.$body.insertBefore(child.$node, this.$body.children[index]);\n//    }\n//    this.children.splice(index, 0, child);\n//\n//    if ( !child.parent ) {\n//        child.parent = this;\n//    }\n//};\n\n\n/**\n * Delete this component and clear all associated events.\n *\n * @fires module:stb/component~Component#remove\n */\nComponent.prototype.remove = function () {\n    // really inserted somewhere\n    if ( this.parent ) {\n        if ( DEVELOP ) {\n            if ( !(this.parent instanceof Component) ) {\n                throw new Error(__filename + ': wrong this.parent type');\n            }\n        }\n\n        // active at the moment\n        if ( app.activePage.activeComponent === this ) {\n            this.blur();\n            this.parent.focus();\n        }\n        this.parent.children.splice(this.parent.children.indexOf(this), 1);\n    }\n\n    // remove all children\n    this.children.forEach(function ( child ) {\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        child.remove();\n    });\n\n    this.$node.parentNode.removeChild(this.$node);\n\n    // there are some listeners\n    if ( this.events['remove'] ) {\n        /**\n         * Delete this component.\n         *\n         * @event module:stb/component~Component#remove\n         */\n        this.emit('remove');\n    }\n\n    // remove all listeners\n    this.events = {};\n\n    //debug.log('component ' + this.name + '#' + this.id + ' remove', 'red');\n    debug.info('remove component ' + this.name + '#' + this.id, null, {\n        tags: ['remove', 'component', this.name, this.id]\n    });\n};\n\n\n/**\n * Activate the component.\n * Notify the owner-page and apply CSS class.\n *\n * @param {Object} [data] custom data which passed into handlers\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#focus\n */\nComponent.prototype.focus = function ( data ) {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // this is a visual component on a page\n    // not already focused and can accept focus\n    if ( this.focusable && this !== activeItem ) {\n        // notify the current active component\n        if ( activeItem ) { activeItem.blur(); }\n\n        /* eslint consistent-this: 0 */\n\n        // apply\n        activePage.activeComponent = activeItem = this;\n        activeItem.$node.classList.add('focus');\n\n        //debug.log('component ' + this.name + '#' + this.id + ' focus');\n        debug.info('focus component ' + this.name + '#' + this.id, null, {\n            tags: ['focus', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( activeItem.events['focus'] ) {\n            /**\n             * Make this component focused.\n             *\n             * @event module:stb/component~Component#focus\n             */\n            activeItem.emit('focus', data);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Remove focus.\n * Change page.activeComponent and notify subscribers.\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#blur\n */\nComponent.prototype.blur = function () {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // apply visuals anyway\n    this.$node.classList.remove('focus');\n\n    // this is the active component\n    if ( this === activeItem ) {\n        activePage.activeComponent = null;\n\n        //debug.log('component ' + this.name + '#' + this.id + ' blur', 'grey');\n        debug.info('blur component ' + this.name + '#' + this.id, null, {\n            tags: ['blur', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['blur'] ) {\n            /**\n             * Remove focus from this component.\n             *\n             * @event module:stb/component~Component#blur\n             */\n            this.emit('blur');\n        }\n\n        return true;\n    }\n\n    debug.warn('component ' + this.name + '#' + this.id + ' attempt to blur without link to a page', null, {\n        tags: ['blur', 'component', this.name, this.id]\n    });\n\n    // nothing was done\n    return false;\n};\n\n\n/*function show ( self, data ) {\n    // correct style\n    self.$node.classList.remove('hidden');\n    // flag\n    self.visible = true;\n\n    debug.info('show component ' + self.name + '#' + self.id, null, {\n        tags: ['show', 'component', self.name, self.id]\n    });\n\n    // there are some listeners\n    if ( self.events['show'] ) {\n        /!**\n         * Make the component visible.\n         *\n         * @event module:stb/component~Component#show\n         *!/\n        self.emit('show', data);\n    }\n}*/\n\n/**\n * Make the component visible and notify subscribers.\n *\n * @param {Object} [data] custom data which passed into handlers\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#show\n */\nComponent.prototype.show = function ( data, callback ) {\n    //var self = this;\n\n    // is it hidden\n    if ( !this.visible ) {\n        /*if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(function () {\n                show(self, data);\n                callback();\n            });\n        } else {\n            // sync call\n            show(this, data);\n        }*/\n\n        // correct style\n        this.$node.classList.remove('hidden');\n        // flag\n        this.visible = true;\n\n        debug.info('show component ' + this.name + '#' + this.id, null, {\n            tags: ['show', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['show'] ) {\n            /**\n             * Make the component visible.\n             *\n             * @event module:stb/component~Component#show\n             */\n            this.emit('show', data);\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Make the component hidden and notify subscribers.\n *\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#hide\n */\nComponent.prototype.hide = function ( callback ) {\n    // is it visible\n    if ( this.visible ) {\n        // correct style\n        this.$node.classList.add('hidden');\n        // flag\n        this.visible = false;\n\n        debug.info('hide component ' + this.name + '#' + this.id, null, {\n            tags: ['hide', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['hide'] ) {\n            /**\n             * Make the component hidden.\n             *\n             * @event module:stb/component~Component#hide\n             */\n            this.emit('hide');\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = Component;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    parse   = require('cjs-query').parse,\n    app     = new Emitter();\n\n\n/**\n * Make the given inactive/hidden page active/visible.\n * Pass some data to the page and trigger the corresponding event.\n *\n * @param {Page} page item to show\n * @param {*} [data] data to send to page\n *\n * @return {boolean} operation status\n */\nfunction showPage ( page, data ) {\n    // page available and can be hidden\n    if ( page && !page.active ) {\n        // apply visibility\n        page.$node.classList.add('active');\n        page.active = true;\n        app.activePage = page;\n\n        debug.info('show component ' + page.name + '#' + page.id, null, {\n            tags: ['show', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' show', 'green');\n\n        // there are some listeners\n        if ( page.events['show'] ) {\n            // notify listeners\n            page.emit('show', {data: data});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n/**\n * Make the given active/visible page inactive/hidden and trigger the corresponding event.\n *\n * @param {Page} page item to hide\n *\n * @return {boolean} operation status\n */\nfunction hidePage ( page ) {\n    // page available and can be hidden\n    if ( page && page.active ) {\n        // apply visibility\n        page.$node.classList.remove('active');\n        page.active  = false;\n        app.activePage = null;\n\n        debug.info('hide component ' + page.name + '#' + page.id, null, {\n            tags: ['hide', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' hide', 'grey');\n\n        // there are some listeners\n        if ( page.events['hide'] ) {\n            // notify listeners\n            page.emit('hide');\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n// url request params\napp.query = parse(document.location.search.substring(1));\n\n\n// global application configuration\n// in config.js file in js root\napp.config = require('app:config');\n\n\n// the only visible page\napp.activePage = null;\n\n\n/**\n * Browse to a given page.\n * Do nothing if the link is invalid. Otherwise hide the current, show new and update the \"previous\" link.\n *\n * @param {Page} pageTo instance of the page to show\n * @param {*} [data] options to pass to the page on show\n *\n * @return {boolean} operation status\n */\napp.route = function ( pageTo, data ) {\n    var pageFrom = app.activePage;\n\n    if ( DEVELOP ) {\n        //if ( router.pages.length > 0 ) {\n        if ( !pageTo || typeof pageTo !== 'object' ) {\n            throw new Error(__filename + ': wrong pageTo type');\n        }\n        if ( !('active' in pageTo) ) {\n            throw new Error(__filename + ': missing field \"active\" in pageTo');\n        }\n        //}\n    }\n\n    // valid not already active page\n    if ( pageTo && !pageTo.active ) {\n        //debug.log('router.navigate: ' + pageTo.id, pageTo === pageFrom ? 'grey' : 'green');\n        debug.info('app route: ' + pageTo.name + '#' + pageTo.id, null, {tags: ['route', pageTo.name, pageTo.id]});\n\n        // update url\n        //location.hash = this.stringify(name, data);\n\n        // apply visibility\n        hidePage(app.activePage);\n        showPage(pageTo, data);\n\n        // there are some listeners\n        if ( this.events['route'] ) {\n            // notify listeners\n            this.emit('route', {from: pageFrom, to: pageTo});\n        }\n\n        // store\n        //this.history.push(pageTo);\n\n        return true;\n    }\n\n    //debug.warn('invalid page to route: ' + pageTo.id, null, {tags: ['route', 'page', pageTo.id]});\n    console.warn('invalid page to route: ' + pageTo.id);\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar app = require('./lib/main');\n\n\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Base Events Emitter implementation.\n *\n * @see http://nodejs.org/api/events.html\n * @constructor\n *\n * @example\n * var emitter = new Emitter();\n */\nfunction Emitter () {\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // if ( DEVELOP ) {\n    //     if ( typeof this !== 'object' ) { throw new Error(__filename + ': must be constructed via new'); }\n    // }\n\n    /**\n     * Inner hash table for event names and linked callbacks.\n     * Manual editing should be avoided.\n     *\n     * @member {Object.<string, function[]>}\n     *\n     * @example\n     * {\n     *     click: [\n     *         function click1 () { ... },\n     *         function click2 () { ... }\n     *     ],\n     *     keydown: [\n     *         function () { ... }\n     *     ]\n     * }\n     **/\n    this.events = {};\n}\n\n\nEmitter.prototype = {\n    /**\n     * Bind an event to the given callback function.\n     * The same callback function can be added multiple times for the same event name.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.addListener('click', function ( data ) { ... });\n     * // one more click handler\n     * emitter.addListener('click', function ( data ) { ... });\n     */\n    addListener: function ( name, callback ) {\n        console.assert(arguments.length === 2, 'wrong arguments number');\n        console.assert(typeof name === 'string', 'wrong name type');\n        console.assert(name.length > 0, 'empty name');\n        console.assert(typeof callback === 'function', 'callback should be a function');\n\n        // if ( DEVELOP ) {\n        //     if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        //     if ( typeof name !== 'string' || name.length === 0 ) { throw new Error(__filename + ': wrong or empty name'); }\n        //     if ( typeof callback !== 'function' ) { throw new Error(__filename + ': wrong callback type'); }\n        // }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(callback);\n    },\n\n\n    /**\n     * Add a one time listener for the event.\n     * This listener is invoked only the next time the event is fired, after which it is removed.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.once('click', function ( data ) { ... });\n     */\n    once: function ( name, callback ) {\n        // current execution context\n        var self = this;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n        }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(function onceWrapper () {\n            self.removeListener(name, onceWrapper);\n            callback.apply(self, arguments);\n        });\n    },\n\n\n    /**\n     * Apply multiple listeners at once.\n     *\n     * @param {Object} callbacks event names with callbacks\n     *\n     * @example\n     * emitter.addListeners({\n     *     click: function ( data ) {},\n     *     close: function ( data ) {}\n     * });\n     */\n    addListeners: function ( callbacks ) {\n        var name;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof callbacks !== 'object' ) {\n                throw new Error(__filename + ': wrong callbacks type');\n            }\n            if ( Object.keys(callbacks).length === 0 ) {\n                throw new Error(__filename + ': no callbacks given');\n            }\n        }\n\n        for ( name in callbacks ) {\n            if ( callbacks.hasOwnProperty(name) ) {\n                this.addListener(name, callbacks[name]);\n            }\n        }\n    },\n\n\n    /**\n     * Remove all instances of the given callback.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to remove\n     *\n     * @example\n     * emitter.removeListener('click', func1);\n     */\n    removeListener: function ( name, callback ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n            if ( this.events[name] && !Array.isArray(this.events[name]) ) {\n                throw new Error(__filename + ': corrupted inner data');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( this.events[name] ) {\n            // rework the callback list to exclude the given one\n            this.events[name] = this.events[name].filter(function callbacksFilter ( fn ) { return fn !== callback; });\n            // event has no more callbacks so clean it\n            if ( this.events[name].length === 0 ) {\n                // as if there were no listeners at all\n                this.events[name] = undefined;\n            }\n        }\n    },\n\n\n    /**\n     * Remove all callbacks for the given event name.\n     * Without event name clears all events.\n     *\n     * @param {string} [name] event identifier\n     *\n     * @example\n     * emitter.removeAllListeners('click');\n     * emitter.removeAllListeners();\n     *\n     * @deprecated\n     */\n    /*removeAllListeners: function ( name ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 0 && (typeof name !== 'string' || name.length === 0) ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // check input\n        if ( arguments.length === 0 ) {\n            // no arguments so remove everything\n            this.events = {};\n        } else if ( name ) {\n            if ( DEVELOP ) {\n                if ( this.events[name] ) { throw new Error(__filename + ': event is not removed'); }\n            }\n\n            // only name is given so remove all callbacks for the given event\n            // but object structure modification should be avoided\n            this.events[name] = undefined;\n        }\n    },*/\n\n\n    /**\n     * Execute each of the listeners in the given order with the supplied arguments.\n     *\n     * @param {string} name event identifier\n     *\n     * @example\n     * emitter.emit('init');\n     * emitter.emit('click', {src: panel1, dst: panel2});\n     * emitter.emit('load', error, data);\n     *\n     * // it's a good idea to emit event only when there are some listeners\n     * if ( this.events['click'] ) {\n     *     this.emit('click', {event: event});\n     * }\n     */\n    emit: function ( name ) {\n        var event = this.events[name],\n            index;\n\n        if ( DEVELOP ) {\n            if ( arguments.length < 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( event ) {\n            if ( DEVELOP ) {\n                if ( !Array.isArray(event) ) {\n                    throw new Error(__filename + ': wrong event type');\n                }\n            }\n\n            for ( index = 0; index < event.length; index++ ) {\n                if ( DEVELOP ) {\n                    if ( typeof event[index] !== 'function' ) {\n                        throw new Error(__filename + ': wrong event callback type');\n                    }\n                }\n\n                // invoke the callback with parameters\n                event[index].apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n    }\n};\n\n\n// correct constructor name\nEmitter.prototype.constructor = Emitter;\n\n\n// public\nmodule.exports = Emitter;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core');\n//    metrics = require('app:metrics'),\n//    linkCSS;\n\n\n// global link\n//app.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\n//app.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\n//app.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n// // set max browser window size\n// window.moveTo(0, 0);\n// window.resizeTo(metrics.width, metrics.height);\n\n// load CSS file base on resolution\n/*linkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = 'css/' + (DEVELOP ? 'develop.' : 'release.') + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);*/\n\n\n// public\nmodule.exports = function ( name ) {\n    var link = document.createElement('link');\n\n    link.rel  = 'stylesheet';\n    link.href = 'css/' + name + '.' + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\n    document.head.appendChild(link);\n};\n","/**\n * Global list of non-printable control key codes.\n *\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    backspace: 8,\n    tab:       9,\n    enter:     13,\n    escape:    27,\n    space:     32,\n    pageUp:    33,\n    pageDown:  34,\n    end:       35,\n    home:      36,\n    left:      37,\n    up:        38,\n    right:     39,\n    down:      40,\n    insert:    45,\n    // not \"delete\" because of old browsers issue\n    del:       46\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar List = require('mag-component-list'),\n    Layout = require('mag-component-layout');\n\n/**\n *  Layout list contains array of layout components\n *\n * @constructor\n * @extends List\n *\n * @param {Object} config object\n * @param {Element} [config.noData=''] element or string to display if set empty data\n *\n * @example\n * var LayoutList = require('mag-component-layout-list'),\n *     list = new LayoutList({\n *         propagate: true,\n *         size: 7,\n *         focusIndex: 0,\n *         noData: 'No channels'\n *         data: [\n *                 {\n *                     items: [\n *                         {\n *                             className: 'star',\n *                             name: '$text'\n *                         },\n *                         'Some text'\n *                     ],\n *                     click: function () {\n *                         // do something\n *                     },\n *                     name: 'starItem'\n *                 },\n *                 {\n *                     items: [\n *                         'Hello world',\n *                         {\n *                             value: 'hi',\n *                             className: 'status'\n *                         }\n *                     ],\n *                     value:{\n *                         uri: 'http://55.55.55.55/some'\n *                     },\n *                     click: someHandler\n *                 },\n *                 {\n *                     items: [\n *                         {\n *                             className: 'big',\n *                             value: ' Some'\n *                         },\n *                         {\n *                             value: new Input()\n *                         }\n *                     ]\n *                 },\n *                 {\n *                     items: [\n *                         new Button({value: 'Ok'}),\n *                         new Button({value: 'Cancel'}),\n *                         new Button({value: 'Exit'})\n *                     ]\n *                 }\n *             ]\n * });\n *\n * list.links.starItem.links.$text.innerText = 'new Text';\n *\n */\nfunction LayoutList ( config ) {\n    var self = this;\n\n    config = config || {};\n\n    /**\n     * Elements handlers\n     */\n    this.handlers = {};\n\n    /**\n     * Hash map of layouts links\n     */\n    this.links = {};\n\n    /**\n     * No data placeholder\n     *\n     * @type {Element}\n     */\n    this.$noData = null;\n\n    //config.className = 'layoutList ' + (config.className || '');\n\n    config.propagate = config.propagate === undefined ? true : config.propagate;\n\n    /**\n     * Set data layout to be fixed to cache HTML elements\n     *\n     * @type {boolean|*}\n     */\n    this.fixedData = config.fixedData || false;\n\n    //config.$body = document.createElement('div');\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    this.$noData = document.createElement('div');\n    this.$noData.className = 'noData hidden';\n\n    List.call(this, config);\n\n    this.$node.appendChild(this.$body);\n    this.$node.appendChild(this.$noData);\n\n    // add handler to focus inner layout\n    this.addListener('click:item', function ( event ) {\n        // focus inner layout of item\n        if ( event.$item.layout.children.length && !event.inner ) {\n            event.$item.layout.children[event.$item.layout.focusIndex].focus();\n        }\n\n        // only focus item if we click mouse\n        if ( event.inner ) {\n            self.focus();\n            self.focusItem(event.$item);\n        }\n        // do click callback if it present\n        if ( self.handlers[event.$item.index] ) {\n            self.handlers[event.$item.index](event.$item);\n        }\n    });\n}\n\n\nLayoutList.prototype = Object.create(List.prototype);\nLayoutList.prototype.constructor = LayoutList;\n\n// set component name\nLayoutList.prototype.name = 'mag-component-layout-list';\n\n\n/*eslint id-length:0*/\n/**\n * Default render function\n *\n * @param {Element} $item in list\n * @param {Object} config to render layout element\n */\nLayoutList.prototype.renderItemDefault = function ( $item, config ) {\n    var layout, layoutConfig,\n        currentNode,\n        currentData,\n        i;\n\n    if ( $item.ready && this.fixedData ) {\n        for ( i = 0; i < config.items.length; i++ ) {\n            currentData = config.items[i];\n            if ( typeof currentData.value === 'string' || currentData.value === undefined ) {\n                currentNode = $item.layout.$node.childNodes[i];\n                currentNode.innerText = currentData.value || '';\n                currentNode.className = currentData.className || '';\n            }\n        }\n    } else {\n        // clear inner content\n        while ( $item.firstChild ) {\n            $item.removeChild($item.firstChild);\n        }\n\n        layoutConfig = {\n            focusable: false,\n            data: config.items\n        };\n\n        if ( config.className ) {\n            layoutConfig.className = config.className;\n        }\n\n        layout = new Layout(layoutConfig);\n\n        if ( config.name ) {\n            this.links[config.name] = layout;\n        }\n\n        $item.appendChild(layout.$node);\n        $item.layout = layout;\n        layout.parent = this;\n        layout.$parentItem = $item;\n\n        // focus layoutList if click on layout\n        layout.addListener('click', function () {\n            // add inner property to set that event comes from inner component\n            layout.parent.emit('click:item', {$item: $item, inner: true});\n        });\n\n        if ( config.click ) {\n            this.handlers[$item.index] = config.click;\n        }\n        // item is rendered\n        $item.ready = true;\n    }\n    $item.value = config.value || {};\n};\n\n\nLayoutList.prototype.setData = function ( config ) {\n    this.links = {};\n    List.prototype.setData.call(this, config);\n\n    if ( config.data && config.data.length ) {\n        this.$noData.classList.add('hidden');\n    } else {\n        this.$noData.classList.remove('hidden');\n    }\n};\n\n\nLayoutList.prototype.init = function ( config ) {\n    var $wrap;\n\n    List.prototype.init.call(this, config);\n    if ( config.noData ) {\n        if ( DEVELOP ) {\n            if ( typeof config.noData !== 'string' && !(config.noData instanceof Element) ) {\n                throw new Error(__filename + ': wrong config.$noData type');\n            }\n        }\n\n        this.$noData.innerHTML = '';\n        if ( config.noData instanceof Element ) {\n            this.$noData.appendChild(config.noData);\n        } else if ( typeof config.noData === 'string' ) {\n            $wrap = document.createElement('div');\n            $wrap.innerText = config.noData;\n            this.$noData.appendChild($wrap);\n        }\n    }\n\n    if ( config.data && config.data.length ) {\n        this.$noData.classList.add('hidden');\n    } else {\n        this.$noData.classList.remove('hidden');\n    }\n};\n\nLayoutList.prototype.renderItem = LayoutList.prototype.renderItemDefault;\n\n\nmodule.exports = LayoutList;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n/* eslint complexity: [error, 37] */\n/* eslint max-lines-per-function: 1 */\n/* eslint no-fallthrough: 1 */\n/* eslint complexity: 1 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n\n/**\n * Mouse click event.\n *\n * @event module:stb/ui/list~List#click:item\n *\n * @type {Object}\n * @property {Element} $item clicked HTML item\n * @property {Event} event click event data\n */\n\n\n/**\n * Base list implementation.\n *\n * Each data item can be either a primitive value or an object with these fields:\n *\n *  Name    | Description\n * ---------|-------------\n *  value   | actual cell value to render\n *  mark    | is it necessary or not to render this cell as marked\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array}    [config.data=[]]     component data to visualize\n * @param {function} [config.render]      method to build each grid cell content\n * @param {function} [config.navigate]    method to move focus according to pressed keys\n * @param {number}   [config.size=5]      amount of visible items on a page\n * @param {number}   [config.viewIndex=0] move view window to this position on init\n * @param {number}   [config.focusIndex]  list item index to make item focused (move view window to this position)\n * @param {boolean}  [config.cycle=true]  allow or not to jump to the opposite side of a list when there is nowhere to go next\n * @param {boolean}  [config.scroll=null] associated ScrollBar component link\n * @param {Object}   [config.provider]    data provider\n *\n * @fires module:stb/ui/list~List#click:item\n */\nfunction List ( config ) {\n    // current execution context\n    //var self = this;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Link to the currently focused DOM element.\n     *\n     * @type {Element}\n     */\n    this.$focusItem = null;\n\n    /**\n     * Position of the visible window to render.\n     *\n     * @type {number}\n     */\n    this.viewIndex = null;\n\n    /**\n     * Component data to visualize.\n     *\n     * @type {Array}\n     */\n    this.data = [];\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Amount of visible items on a page.\n     *\n     * @type {number}\n     */\n    this.size = 5;\n\n    /**\n     * Allow or not to jump to the opposite side of a list when there is nowhere to go next.\n     *\n     * @type {boolean}\n     */\n    this.cycle = false;\n\n    /**\n     * Associated ScrollBar component link.\n     *\n     * @type {ScrollBar}\n     */\n    this.scroll = null;\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    /**\n     * Associated data provider\n     *\n     * @type {Provider}\n     */\n    this.provider = null;\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    //config.className += ' theme-main';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // component setup\n    this.init(config);\n\n    // custom navigation method\n    //if ( config.navigate ) {\n    //    if ( DEVELOP ) {\n    //        if ( typeof config.navigate !== 'function' ) { throw new Error(__filename + ': wrong config.navigate type'); }\n    //    }\n    //    // apply\n    //    this.navigate = config.navigate;\n    //}\n\n    // navigation by keyboard\n    //this.addListener('keydown', this.navigate);\n\n    // navigation by mouse\n    //this.$body.addEventListener('mousewheel', function ( event ) {\n    //    // scrolling by Y axis\n    //    if ( self.type === self.TYPE_VERTICAL && event.wheelDeltaY ) {\n    //        self.move(event.wheelDeltaY > 0 ? 38 : keys.down);\n    //    }\n    //\n    //    // scrolling by X axis\n    //    if ( self.type === self.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n    //        self.move(event.wheelDeltaX > 0 ? 37 : 39);\n    //    }\n    //});\n}\n\n\n// inheritance\nList.prototype = Object.create(Component.prototype);\nList.prototype.constructor = List;\n\n// set component name\nList.prototype.name = 'mag-component-list';\n\nList.prototype.TYPE_VERTICAL   = 1;\nList.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Fill the given item with data.\n *\n * @param {Element} $item item DOM link\n * @param {*} data associated with this item data\n */\nList.prototype.renderItemDefault = function ( $item, data ) {\n    $item.innerText = data.value;\n};\n\n\n/**\n * Method to build each list item content.\n * Can be redefined to provide custom rendering.\n *\n * @type {function}\n */\nList.prototype.renderItem = List.prototype.renderItemDefault;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nList.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse wheel events.\n     *\n     * @param {Event} event generated event\n     */\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        if ( this.type === this.TYPE_VERTICAL && event.wheelDeltaY ) {\n            this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n        }\n\n        // scrolling by X axis\n        if ( this.type === this.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n            this.move(event.wheelDeltaX > 0 ? keys.left : keys.right);\n        }\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n            case keys.right:\n            case keys.left:\n            case keys.pageUp:\n            case keys.pageDown:\n            case keys.home:\n            case keys.end:\n                // cursor move only on arrow keys\n                this.move(event.code);\n                break;\n            case keys.enter:\n                // there are some listeners\n                if ( this.events['click:item'] && this.$focusItem ) {\n                    // notify listeners\n                    this.emit('click:item', {$item: this.$focusItem, event: event});\n                }\n                break;\n        }\n    }\n};\n\n\n/**\n * Default method to move focus according to pressed keys.\n *\n * @param {Object} event generated event source of movement\n */\n//List.prototype.navigateDefault = function ( event ) {\n//    switch ( event.code ) {\n//        case 38:\n//        case 40:\n//        case 39:\n//        case 37:\n//        case 33:\n//        case 34:\n//        case 36:\n//        case 35:\n//            // cursor move only on arrow keys\n//            this.move(event.code);\n//            break;\n//        case 13:\n//            // there are some listeners\n//            if ( this.events['click:item'] ) {\n//                // notify listeners\n//                this.emit('click:item', {$item: this.$focusItem, event: event});\n//            }\n//            break;\n//    }\n//};\n\n\n/**\n * Current active method to move focus according to pressed keys.\n * Can be redefined to provide custom navigation.\n *\n * @type {function}\n */\n//List.prototype.navigate = List.prototype.navigateDefault;\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var idx, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( idx = 0; idx < data.length; idx++ ) {\n        // cell value\n        item = data[idx];\n        // primitive value\n        if ( typeof item !== 'object' ) {\n            // wrap with defaults\n            item = data[idx] = {\n                value: data[idx]\n            };\n        }\n\n        if ( DEVELOP ) {\n            //if ( !('value' in item) ) { throw new Error(__filename + ': field \"value\" is missing'); }\n            if ( ('mark' in item) && Boolean(item.mark) !== item.mark ) {\n                throw new Error(__filename + ': item.mark must be boolean');\n            }\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.init = function ( config ) {\n    var self     = this,\n        currSize = this.$body.children.length,\n        /**\n         * Item mouse click handler.\n         *\n         * @param {Event} event click event data\n         *\n         * @this Element\n         *\n         * @fires module:stb/ui/list~List#click:item\n         */\n        onClick = function ( event ) {\n            if ( this.data ) {\n                self.focusItem(this);\n\n                // there are some listeners\n                if ( self.events['click:item'] ) {\n                    // notify listeners\n                    self.emit('click:item', {$item: this, event: event});\n                }\n            }\n        },\n        item, idx;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // apply cycle behaviour\n    if ( config.cycle !== undefined ) { this.cycle = config.cycle; }\n\n    // apply ScrollBar link\n    if ( config.scroll ) { this.scroll = config.scroll; }\n\n    // apply data provider\n    if ( config.provider ) { this.provider = config.provider; }\n\n\n    // custom render method\n    if ( config.render ) {\n        if ( DEVELOP ) {\n            if ( typeof config.render !== 'function' ) {\n                throw new Error(__filename + ': wrong config.render type');\n            }\n        }\n\n        // apply\n        this.renderItem = config.render;\n    }\n\n    // list items amount on page\n    if ( config.size ) {\n        if ( DEVELOP ) {\n            if ( Number(config.size) !== config.size ) {\n                throw new Error(__filename + ': config.size must be a number');\n            }\n            if ( config.size <= 0 ) {\n                throw new Error(__filename + ': config.size should be positive');\n            }\n        }\n\n        // apply\n        this.size = config.size;\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( name ) {\n            self.events[name] = null;\n            self.addListener(name, config.events[name]);\n        });\n    }\n\n    // geometry has changed or initial draw\n    if ( this.size !== currSize ) {\n        // non-empty list\n        if ( currSize > 0 ) {\n            // clear old items\n            this.$body.innerText = null;\n        }\n\n        // create new items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            item = document.createElement('div');\n            item.index = idx;\n            //item.className = 'item theme-list-item';\n            item.className = 'item';\n\n            item.addEventListener('click', onClick);\n            this.$body.appendChild(item);\n        }\n    }\n\n    if ( this.provider ) {\n        if ( this.provider.blocked ) {\n            return;\n        }\n\n        this.provider.get( null, function ( error, data ) {\n            if ( error ) {\n                if ( self.events['data:error'] ) {\n                    /**\n                     * Provider get error while take new data\n                     *\n                     * @event module:stb/ui/list~List#data:error\n                     */\n                    self.emit('data:error', error);\n                }\n            } else {\n                if ( data ) {\n                    config.data = data;\n                    self.setData(config);\n                    if ( self.scroll ) {\n                        self.scroll.init({\n                            realSize: self.provider.maxCount,\n                            viewSize: self.provider.size,\n                            value: self.provider.head + self.provider.pos\n                        });\n                    }\n                }\n                if ( self.events['data:get'] ) {\n                    /**\n                     * Provider request new data\n                     *\n                     * @event module:stb/ui/list~List#data:get\n                     *\n                     * @type {Object}\n                     */\n                    self.emit('data:get');\n                }\n            }\n        });\n    } else if ( config.data ) {\n        this.setData(config);\n    }\n};\n\n/**\n * Set data and render inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.setData = function ( config ) {\n    // apply list of items\n\n    if ( config.data ) {\n        if ( DEVELOP ) {\n            if ( !Array.isArray(config.data) ) { throw new Error(__filename + ': wrong config.data type'); }\n        }\n        // prepare user data\n        this.data = normalize(config.data);\n    }\n\n    // view window position\n    if ( DEVELOP ) {\n        if ( config.viewIndex !== undefined ) {\n            if ( Number(config.viewIndex) !== config.viewIndex ) {\n                throw new Error(__filename + ': config.viewIndex must be a number');\n            }\n            if ( config.viewIndex < 0 ) {\n                throw new Error(__filename + ': config.viewIndex should be positive');\n            }\n        }\n    }\n\n    // reset current view window position\n    this.viewIndex = null;\n\n    if ( this.$focusItem ) {\n        this.blurItem(this.$focusItem);\n    }\n\n    if ( this.scroll ) {\n        if ( this.provider ) {\n            if ( this.scroll.realSize !== this.provider.maxCount ) {\n                this.scroll.init({\n                    realSize: this.provider.maxCount,\n                    viewSize: this.provider.size,\n                    value: this.provider.head + this.provider.pos\n                });\n            }\n        } else {\n            this.scroll.init({\n                realSize: this.data.length,\n                viewSize: this.size,\n                value: config.viewIndex || 0\n            });\n        }\n    }\n\n    // set focus item\n    if ( config.focusIndex !== undefined && this.data.length ) {\n        if ( DEVELOP ) {\n            if ( Number(config.focusIndex) !== config.focusIndex ) {\n                throw new Error(__filename + ': config.focusIndex must be a number');\n            }\n            if ( config.focusIndex < 0 ) {\n                throw new Error(__filename + ': config.focusIndex should be positive');\n            }\n            // if ( config.focusIndex > this.data.length - 1 ) {\n            //     throw new Error(__filename + ': config.focusIndex should be less than data size');\n            // }\n        }\n\n        // jump to the necessary item\n        this.focusIndex(config.focusIndex);\n    } else {\n        // go to the first page\n        this.renderView(config.viewIndex || 0);\n    }\n};\n\n\n/**\n * Shift the visible view window event.\n *\n * @event module:stb/ui/list~List#move:view\n *\n * @type {Object}\n * @property {number} prevIndex previous view window position\n * @property {number} currIndex current view window position\n */\n\n\n/**\n * Draw the visible window.\n *\n * @param {number} index start position to render\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#move:view\n */\nList.prototype.renderView = function ( index ) {\n    var $item, idx, itemData, prevIndex, currIndex;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be more than zero');\n        }\n        // if ( index >= this.data.length ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // has the view window position changed\n    if ( this.viewIndex !== index ) {\n        // save for emit\n        prevIndex = this.viewIndex;\n        // sync global pointer\n        this.viewIndex = currIndex = index;\n\n        // rebuild all visible items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            // shortcuts\n            $item    = this.$body.children[idx];\n            itemData = this.data[index];\n\n            // real item or stub\n            if ( itemData ) {\n                // correct inner data/index and render\n                $item.data  = itemData;\n                $item.index = index;\n                this.renderItem($item, itemData);\n\n                // apply CSS\n                if ( itemData.mark ) {\n                    $item.classList.add('mark');\n                } else {\n                    $item.classList.remove('mark');\n                }\n            } else {\n                // nothing to render\n                $item.data = $item.index = undefined;\n                $item.innerHTML = '&nbsp;';\n                $item.ready = false;\n            }\n            index++;\n        }\n\n        // there are some listeners\n        if ( this.events['move:view'] ) {\n            // notify listeners\n            this.emit('move:view', {prevIndex: prevIndex, currIndex: currIndex});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            this.emit('select:item', {$item: $item});\n        }\n\n        // update a linked scroll component\n        if ( this.scroll ) {\n            this.scroll.scrollTo(this.provider ? this.provider.head + this.provider.pos : this.viewIndex);\n        }\n\n        // full rebuild\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Move focus to the given direction.\n *\n * @param {number} direction arrow key code\n *\n * @fires module:stb/ui/list~List#cycle\n * @fires module:stb/ui/list~List#overflow\n */\nList.prototype.move = function ( direction ) {\n    var self = this,\n        force = false;\n\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(direction) !== direction ) {\n            throw new Error(__filename + ': direction must be a number');\n        }\n    }\n\n    // empty list\n    if ( !this.data.length ) {\n        return;\n    }\n\n    switch ( direction ) {\n        case keys.left:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.up:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index > 0 ) {\n                    if ( this.$focusItem === this.$body.firstChild ) {\n                        this.renderView(this.viewIndex - 1);\n                    } else {\n                        this.focusItem(this.$focusItem.previousSibling);\n                    }\n                } else if ( this.provider ) {\n                    if ( this.provider.blocked ) {\n                        return;\n                    }\n\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the end of the list\n                        this.move(keys.end);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.right:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.down:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index < this.data.length - 1 ) {\n                    if ( this.$focusItem === this.$body.lastChild ) {\n                        this.renderView(this.viewIndex + 1);\n                    } else {\n                        this.focusItem(this.$focusItem.nextSibling);\n                    }\n                } else if ( this.provider ) {\n                    if ( this.provider.blocked ) {\n                        return;\n                    }\n\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the beginning of the list\n                        this.move(keys.home);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.pageUp:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n\n                return;\n            }\n            if ( this.viewIndex < this.size ) {\n                // first page\n                this.renderView(0);\n            } else {\n                // second page and further\n                this.renderView(this.viewIndex - this.size + 1);\n            }\n\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.pageDown:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            // data is bigger then one page\n            if ( this.data.length > this.size ) {\n                // determine jump size\n                if ( this.viewIndex > this.data.length - this.size * 2 ) {\n                    // last page\n                    this.renderView(this.data.length - this.size);\n                } else {\n                    // before the last page\n                    this.renderView(this.viewIndex + this.size - 1);\n                }\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n        case keys.home:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n                break;\n            }\n            this.renderView(0);\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.end:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            if ( this.data.length > this.size ) {\n                this.renderView(this.data.length - this.size);\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n    }\n};\n\n\n/**\n * Highlight the given DOM element as focused.\n * Remove focus from the previously focused item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.focusItem = function ( $item ) {\n    var $prev = this.$focusItem;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n    }\n\n    // different element\n    if ( $item && $prev !== $item ) {\n        if ( DEVELOP ) {\n            if ( !($item instanceof Element) ) {\n                throw new Error(__filename + ': wrong $item type');\n            }\n            if ( $item.parentNode !== this.$body ) {\n                throw new Error(__filename + ': wrong $item parent element');\n            }\n        }\n\n        // some item is focused already\n        if ( $prev !== null ) {\n            if ( DEVELOP ) {\n                if ( !($prev instanceof Element) ) {\n                    throw new Error(__filename + ': wrong $prev type');\n                }\n            }\n\n            // style\n            $prev.classList.remove('focus');\n            //$prev.classList.remove('theme-focus');\n\n            // there are some listeners\n            if ( this.events['blur:item'] ) {\n                /**\n                 * Remove focus from an element.\n                 *\n                 * @event module:stb/ui/list~List#blur:item\n                 *\n                 * @type {Object}\n                 * @property {Element} $item previously focused HTML element\n                 */\n                this.emit('blur:item', {$item: $prev});\n            }\n        }\n        // reassign\n        this.$focusItem = $item;\n\n        this.$focusItem.data = this.data[this.$focusItem.index];\n\n        // correct CSS\n        $item.classList.add('focus');\n        //$item.classList.add('theme-focus');\n\n        // there are some listeners\n        if ( this.events['focus:item'] ) {\n            /**\n             * Set focus to a DOM element.\n             *\n             * @event module:stb/ui/list~List#focus:item\n             *\n             * @type {Object}\n             * @property {Element} $prev old/previous focused HTML element\n             * @property {Element} $curr new/current focused HTML element\n             */\n            this.emit('focus:item', {$prev: $prev, $curr: $item});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            /**\n             * Set focus to a list item.\n             *\n             * @event module:stb/ui/list~List#select:item\n             *\n             * @type {Object}\n             * @property {Element} $item new/current focused item\n             */\n            this.emit('select:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Highlight the given DOM element as blur.\n * Remove focus from the item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.blurItem = function ( $item ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) { throw new Error(__filename + ': wrong arguments number'); }\n    }\n\n    // different element\n    if ( $item ) {\n        if ( $item === this.$focusItem ) {\n            this.$focusItem = null;\n        }\n\n        $item.classList.remove('focus');\n        //$item.classList.remove('theme-focus');\n\n        // there are some listeners\n        if ( this.events['blur:item'] ) {\n            /**\n             * Remove focus from an element.\n             *\n             * @event module:stb/ui/list~List#blur:item\n             *\n             * @type {Object}\n             * @property {Element} $item previously focused HTML element\n             */\n            this.emit('blur:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Set the given item focused by item index.\n *\n * @param {number} index item data index\n */\nList.prototype.focusIndex = function ( index ) {\n    var viewIndex = this.viewIndex || 0;\n\n    if ( DEVELOP ) {\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be positive');\n        }\n        // if ( index > this.data.length - 1 ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // determine direction\n    if ( index >= viewIndex + this.size ) {\n        // check range\n        index = index < this.data.length - 1 ? index : this.data.length - 1;\n        // move down\n        this.renderView(index - this.size + 1);\n        this.focusItem(this.$body.lastChild);\n    } else if ( index < viewIndex ) {\n        // check range\n        index = index > 0 ? index : 0;\n        // move up\n        this.renderView(index);\n        this.focusItem(this.$body.firstChild);\n    } else {\n        // no move\n        if ( this.viewIndex === null ) {\n            // first attempt\n            this.renderView(0);\n        }\n        this.focusItem(this.$body.children[index - viewIndex]);\n    }\n};\n\n\n/**\n * Set item state and appearance as marked.\n *\n * @param {Node|Element} $item element to focus\n * @param {boolean} state true - marked, false - not marked\n */\nList.prototype.markItem = function ( $item, state ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 2 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !($item instanceof Element) ) {\n            throw new Error(__filename + ': wrong $item type');\n        }\n        if ( $item.parentNode !== this.$body ) {\n            throw new Error(__filename + ': wrong $item parent element');\n        }\n        if ( Boolean(state) !== state ) {\n            throw new Error(__filename + ': state must be boolean');\n        }\n    }\n\n    // correct CSS\n    if ( state ) {\n        $item.classList.add('mark');\n    } else {\n        $item.classList.remove('mark');\n    }\n\n    // apply flag\n    $item.data.mark = state;\n};\n\n\n// public\nmodule.exports = List;\n","/**\n * @license The MIT License (MIT)\n * @copyright Dmitry Fedotov <bas.jsdev@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\nvar StbComponentModal = require('stb-component-modal'),\n    Component         = require('stb-component'),\n    keys              = require('stb-keys');\n\n\n/**\n * Modal window implementation.\n *\n * @constructor\n * @extends StbComponentModal\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {Object} [config.title] message title\n * @param {Object} [config.className] message classname\n * @param {Object} [config.icon] icon at header\n * @param {Object} [config.visible] visibility flag\n * @param {Object} [config.children] content (inherited from the parent)\n *\n * @example\n * var modalSort = new Modal({\n *     visible: false,\n *     title: 'sort',\n *     events: {\n *         show: function () {\n *             list.focus();\n *         },\n *         hide: function () {\n *             page.panelSet.focus();\n *         }\n *     },\n *     children: [list = new RadioList({})]\n * });\n * page.add(modalSort);\n */\nfunction Modal ( config ) {\n    var self = this,\n        $overlay, $body, onkeydown;\n\n    // sanitize\n    config = config || {};\n    config.events = config.events || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.icon && typeof config.icon !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.icon');\n        }\n        if ( config.title && typeof config.title !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.title');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body ) {\n            throw new Error(__filename + ': config.$body should not be provided in Modal manually');\n        }\n    }\n\n    // usually can't accept focus\n    config.focusable = config.focusable || false;\n    // hide by default\n    config.visible = config.visible || false;\n    // add default close by click\n    config.events.click = config.events.click || function () { self.hide(); };\n    // add close window behavior, when pushed a back button or a menu button\n    onkeydown = config.events.keydown;\n    config.events.keydown = function ( event ) {\n        if ( onkeydown ) {\n            onkeydown.call(this, event);\n        }\n        if ( event.code === keys.back || event.code === keys.menu ) {\n            event.stop = true;\n            self.hide();\n        }\n    };\n\n    // parent constructor call\n    StbComponentModal.call(this, config);\n\n    // add table-cell wrappers\n    this.$node.appendChild(document.createElement('div'));\n    this.$node.firstChild.classList.add('alignBox');\n    this.$node.firstChild.appendChild(document.createElement('div'));\n\n    // add header div\n    this.$header = document.createElement('div');\n    this.$header.className = 'header';\n\n    // insert caption placeholder\n    this.$text = this.$header.appendChild(document.createElement('div'));\n    this.$text.classList.add('text');\n    this.$text.innerText = config.title || '';\n\n    // optional icon\n    if ( config.icon ) {\n        this.$icon = this.$header.appendChild(document.createElement('div'));\n        this.$icon.className = 'icon ' + config.icon;\n    }\n\n    $overlay = document.createElement('div');\n    $overlay.className = 'overlay';\n\n    // add to dom\n    // add body wrapper\n    $body = this.$body.parentNode.removeChild(this.$body);\n    this.$node.firstChild.firstChild.appendChild(this.$header);\n    this.$node.firstChild.firstChild.appendChild($body);\n    this.$node.firstChild.firstChild.appendChild($overlay);\n}\n\n\n// inheritance\nModal.prototype = Object.create(StbComponentModal.prototype);\nModal.prototype.constructor = Modal;\n\n// set component name\nModal.prototype.name = 'mag-component-modal';\n\n\n/**\n * Redefine default component focus to set additional css\n */\nModal.prototype.focus = function () {\n    this.$node.classList.add('active');\n    StbComponentModal.prototype.focus.call(this);\n    if ( this.children[0] && this.children[0] instanceof Component ) {\n        this.children[0].focus();\n    }\n};\n\n\n/**\n * Blur message\n */\nModal.prototype.blur = function () {\n    this.$node.classList.remove('active');\n    StbComponentModal.prototype.blur.call(this);\n};\n\n\n// public\nmodule.exports = Modal;\n","/**\n * Save application data with template.\n *\n * @module storage\n */\n\n'use strict';\n\nmodule.exports = {\n    storageStructureSample: {\n        bookmarks: [],\n        settings: {\n            scale: 100,\n            isFullScreen: false,\n            isVirtualMouse: false\n        }\n    },\n\n    /**\n     * Prepare storage structure if it's inappropriate.\n     *\n     * @param {*} data - data from some storage (usually UserFS)\n     *\n     * @return {Object} ready-to-use data\n     */\n    prepareStorage: function ( data ) {\n        return Object.prototype.toString.call(data).slice(8, -1) === 'Object' ? data : this.storageStructureSample;\n    },\n\n    /**\n     * Save user data (bookmarks and settings) to UserFS.\n     *\n     * @param {Object} data - data to store\n     *\n     * @return {boolean} operation result\n     */\n    saveData: function ( data ) {\n        return core.plugins.ufsJson.saveSync(data);\n    }\n};\n","/**\n * Create a new HTML DIV element, basic block for most self-constructed DOM.\n *\n * @module div\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @author Yaroslav Surilov <y.surilov@infomir.com>\n */\n\n'use strict';\n\n/**\n * Create a new HTML DIV element.\n *\n * @param {string|null} [className] - element class name/names\n * @param {...*} [content] - element content (primitive value/values or other nodes)\n *\n * @return {Node|null} HTML element or null on failure\n *\n * @example\n * div();\n * div('className', 'some text');\n * div('className anotherClassName', div(), div());\n */\nmodule.exports = function ( className ) {\n    var node = document.createElement('div'),\n        index;\n\n    if ( className ) {\n        node.className = className;\n    }\n\n    // content (arguments except the first)\n    for ( index = 1; index < arguments.length; index += 1 ) {\n        // some data is given\n        if ( arguments[index] ) {\n            // regular HTML tag or plain data\n            node.appendChild(\n                typeof arguments[index] === 'object' ? arguments[index] : document.createTextNode(arguments[index])\n            );\n        }\n    }\n\n    return node;\n};\n","/**\n * Main application initialization entry point.\n */\n\n'use strict';\n\nvar app = require('mag-app');\n\n\napp.once('load', function () {\n    require('spa-gettext').load({name: core.environment.language}, function () {\n        app.flags = {\n            modalActive:     false,\n            favoritesActive: false,\n            webWindowActive: true,\n            ignoreMessages:  false\n        };\n\n        app.data = {\n            currentUrl:       '',\n            currentUrlTitle:  '',\n            mediaContentData: {}\n        };\n\n        app.pages = {\n            main: require('./pages/main')\n        };\n\n        app.storage = require('./modules/storage').prepareStorage(core.plugins.ufsJson.loadSync());\n        app.route(app.pages.main);\n        app.ready();\n    });\n});\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app    = require('spa-app/lib/core'),\n    events = require('spa-app/lib/events');\n\n\n// get instance\nwindow.core = window.parent.getCoreInstance(window, app);\n\n// shims\nrequire('stb-shim-classlist');\n\n// apply geometry\nrequire('stb-app/lib/metrics');\n\n// load sdk css\nrequire('stb-app/lib/css')('sdk');\n\n// load theme css\nrequire('./css');\n\n// load app css\nrequire('stb-app/lib/css')('app');\n\n/**\n * Specify platform name\n *\n * @type {string}\n */\napp.platform = 'mag';\n\n/**\n * Show app.\n */\napp.ready = function () {\n    // if ( this.events['show'] ) {\n    //     this.emit('show');\n    // }\n    window.core.call('app:ready');\n};\n\n\n/**\n * Exit from app.\n * Destroy all application instance.\n * If callback function provided, and callback returns boolean 'true', application will stay alive.\n *\n * @fires module:/stb/app#exit\n */\napp.exit = function () {\n    if ( app.events['exit'] ) {\n        app.emit('exit');\n    }\n\n    core.call('exit');\n};\n\n\nevents.load = function ( event ) {\n    //window.core = window.parent.getCoreInstanse(window, app);\n    document.body.setAttribute('platform', app.platform);\n\n    if ( core.ready ) {\n        if ( app.events['load'] ) {\n            // notify listeners\n            app.emit('load', {});\n        }\n    } else {\n        core.once('load', function () {\n            //core.ready = true;\n            if ( app.events[event.type] ) {\n                // notify listeners\n                app.emit(event.type, event);\n            }\n        });\n    }\n};\n\n\n// activate development mechanisms and tools\nif ( DEVELOP ) {\n    //require('stb-develop');\n    require('./develop/main');\n} else {\n    // disable context menu\n    events.contextmenu = function ( event ) {\n        event.preventDefault();\n    };\n}\n\n\n//apply DOM events\nObject.keys(events).forEach(function ( name ) {\n    window.addEventListener(name, events[name]);\n});\n\n\n// new way of string handling\n// all strings are in UTF-16\n// since stbapp 2.18\n// if ( window.gSTB && gSTB.SetNativeStringMode ) {\n//     /* eslint new-cap: 0 */\n//     gSTB.SetNativeStringMode(true);\n// }\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nmodule.exports = {\n    /**\n     * Parse the given location search string into object.\n     *\n     * @param {string} query string to parse\n     *\n     * @return {Object.<string, string>} result data\n     */\n    parse: function ( query ) {\n        var data = {};\n\n        // parse and fill the data\n        query.split('&').forEach(function ( part ) {\n            part = part.split('=');\n            // valid number on params\n            if ( part.length === 2 ) {\n                data[part[0]] = decodeURIComponent(part[1]);\n            }\n        });\n\n        return data;\n    },\n\n\n    /**\n     * Make uri query part in a string form.\n     *\n     * @param {Object} params data to stringify\n     *\n     * @return {string} query string\n     */\n    stringify: function ( params ) {\n        var data = [];\n\n        Object.keys(params).forEach(function ( name ) {\n            data.push(name + '=' + encodeURIComponent(params[name]));\n        });\n\n        return data.join('&');\n    }\n};\n","/**\n * Global application configuration.\n * Can store run-time options, API urls, paths, execution flags and so on.\n * Automatically loaded on application initialization and available as app.config.\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    bookmarkPreviewLoadAttemptsLimit: 3\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('./core');\n\n\n// public\nmodule.exports = {\n    DOMContentLoaded: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // there are some listeners\n        if ( app.events['dom'] ) {\n            // notify listeners\n            app.emit('dom', event);\n            //console.log('DOMContentLoaded');\n        }\n    },\n\n    /**\n     * The load event is fired when a resource and its dependent resources have finished loading.\n     *\n     * Control flow:\n     *   1. Global handler.\n     *   2. Each page handler.\n     *   3. Application DONE event.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/load\n     *\n     * @param {Event} event generated object with event data\n     */\n    load: function ( event ) {\n        //var path;\n\n        //debug.event(event);\n        //console.log(event);\n\n        // time mark\n        //app.data.time.load = event.timeStamp;\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' load', 'green');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n\n        // time mark\n        //app.data.time.done = +new Date();\n\n        // everything is ready\n        // and there are some listeners\n        // if ( app.events['done'] ) {\n        //     // notify listeners\n        //     app.emit('done', event);\n        // }\n    },\n\n    /**\n     * The unload event is fired when the document or a child resource is being unloaded.\n     *\n     * Control flow:\n     *   1. Each page handler.\n     *   2. Global handler.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/unload\n     *\n     * @param {Event} event generated object with event data\n     */\n    unload: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' unload', 'red');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n    },\n\n    /**\n     * The error event is fired when a resource failed to load.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/error\n     *\n     * @param {Event} event generated object with event data\n     */\n    error: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n        //debug.fail('app event: ' + event.message, event, {tags: [event.type, 'event']});\n        console.error('app event: ' + event.message, event);\n    },\n\n    /**\n     * The keydown event is fired when a key is pressed down.\n     * Set event.stop to true in order to prevent bubbling.\n     *\n     * Control flow:\n     *   1. Current active component on the active page.\n     *   2. Current active page itself.\n     *   3. Application.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keydown\n     *\n     * @param {Event} event generated object with event data\n     */\n    keydown: function ( event ) {\n        var page = app.activePage,\n            eventLocal = {\n                code: event.keyCode,\n                stop: false\n            },\n            activeComponent;\n\n        if ( DEVELOP ) {\n            if ( !page ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        // filter phantoms\n        //if ( event.keyCode === 0 ) { return; }\n\n        // combined key code\n        //event.code = event.keyCode;\n\n        // apply key modifiers\n        if ( event.ctrlKey )  { eventLocal.code += 'c'; }\n        if ( event.altKey )   { eventLocal.code += 'a'; }\n        if ( event.shiftKey ) { eventLocal.code += 's'; }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + eventLocal.code, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + eventLocal.code, event);\n\n        // page.activeComponent can be set to null in event handles\n        activeComponent = page.activeComponent;\n\n        // current component handler\n        if ( activeComponent && activeComponent !== page ) {\n            // component is available and not page itself\n            if ( activeComponent.events[event.type] ) {\n                // there are some listeners\n                activeComponent.emit(event.type, eventLocal, event);\n            }\n\n            // todo: bubble event recursively\n            // bubbling\n            if (\n                !eventLocal.stop &&\n                activeComponent.propagate &&\n                activeComponent.parent &&\n                activeComponent.parent.events[event.type]\n            ) {\n                activeComponent.parent.emit(event.type, eventLocal, event);\n            }\n        }\n\n        // page handler\n        if ( !eventLocal.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, eventLocal, event);\n            }\n\n            // global app handler\n            if ( !event.stop ) {\n                // not prevented\n                if ( app.events[event.type] ) {\n                    // there are some listeners\n                    app.emit(event.type, eventLocal, event);\n                }\n            }\n        }\n\n        //// suppress non-printable keys in stb device (not in your browser)\n        //if ( app.data.host && keyCodes[event.code] ) {\n        //    event.preventDefault();\n        //}\n    },\n\n    /**\n     * The keypress event is fired when press a printable character.\n     * Delivers the event only to activeComponent at active page.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keypress\n     *\n     * @param {Event} event generated object with event data\n     * @param {string} event.char entered character\n     */\n    keypress: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + event.key, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + event.key, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n    },\n\n    /**\n     * The click event is fired when a pointing device button (usually a mouse button) is pressed and released on a single element.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/click\n     *\n     * @param {Event} event generated object with event data\n     */\n    /*click: function ( event ) {\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n     },*/\n\n    /**\n     * The contextmenu event is fired when the right button of the mouse is clicked (before the context menu is displayed),\n     * or when the context menu key is pressed (in which case the context menu is displayed at the bottom left of the focused\n     * element, unless the element is a tree, in which case the context menu is displayed at the bottom left of the current row).\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/contextmenu\n     *\n     * @param {Event} event generated object with event data\n     */\n    // contextmenu: function ( event ) {\n    //     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n    //\n    //     if ( !DEVELOP ) {\n    //         // disable right click in release mode\n    //         event.preventDefault();\n    //     }\n    // },\n\n    /*contextmenu: function ( event ) {\n     //var kbEvent = {}; //Object.create(document.createEvent('KeyboardEvent'));\n\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n\n     //kbEvent.type    = 'keydown';\n     //kbEvent.keyCode = 8;\n\n     //debug.log(kbEvent.type);\n\n     //globalEventListenerKeydown(kbEvent);\n     //var event = document.createEvent('KeyboardEvent');\n     //event.initEvent('keydown', true, true);\n\n     //document.dispatchEvent(kbEvent);\n\n     if ( !DEVELOP ) {\n     // disable right click in release mode\n     event.preventDefault();\n     }\n     },*/\n\n    /**\n     * The wheel event is fired when a wheel button of a pointing device (usually a mouse) is rotated.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel\n     *\n     * @param {Event} event generated object with event data\n     */\n    mousewheel: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n\n        // page handler\n        if ( !event.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, event);\n            }\n        }\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint-disable */\n\n'use strict';\n\n\nif ( !document.documentElement.classList ) {\n    var prototype = Array.prototype,\n        indexOf   = prototype.indexOf,\n        slice     = prototype.slice,\n        push      = prototype.push,\n        splice    = prototype.splice,\n        join      = prototype.join;\n\n    window.DOMTokenList = function ( el ) {\n        this._element = el;\n        if (el.className !== this._classCache) {\n            this._classCache = el.className;\n            if (!this._classCache) { return; }\n            var classes = this._classCache.replace(/^\\s+|\\s+$/g,'').split(/\\s+/),\n                i;\n            for (i = 0; i < classes.length; i++) {\n                push.call(this, classes[i]);\n            }\n        }\n    };\n\n    window.DOMTokenList.prototype = {\n        add: function ( token ) {\n            if(this.contains(token)) { return; }\n            push.call(this, token);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        contains: function ( token ) {\n            return indexOf.call(this, token) !== -1;\n        },\n\n        item: function ( index ) {\n            return this[index] || null;\n        },\n\n        remove: function ( token ) {\n            var i = indexOf.call(this, token);\n            if (i === -1) {\n                return;\n            }\n            splice.call(this, i, 1);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        toString: function () {\n            return join.call(this, ' ');\n        },\n\n        toggle: function ( token ) {\n            if (!this.contains(token)) {\n                this.add(token);\n            } else {\n                this.remove(token);\n            }\n            return this.contains(token);\n        }\n    };\n\n    Object.defineProperty(Element.prototype, 'classList', {\n        get: function () {\n            return new window.DOMTokenList(this);\n        }\n    });\n}\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    metrics = require('app:metrics');\n\n\n// global link\napp.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\napp.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\napp.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n\n// public\n//module.exports = app;\n","/**\n * Application geometry options.\n * Automatically loaded on application initialization and available as app.metrics.\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    480: {\n        // screen base dimension\n        height: 480,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  32,\n        availLeft:   48\n        // project-specific vars\n        // put here ...\n    },\n\n    576: {\n        // screen base dimension\n        height: 576,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  26,\n        availLeft:   54\n        // project-specific vars\n        // put here ...\n    },\n\n    720: {\n        // screen base dimension\n        height: 720,\n        width:  1280,\n        // safe zone margins\n        availTop:    30,\n        availBottom: 30,\n        availRight:  40,\n        availLeft:   40\n        // project-specific vars\n        // put here ...\n    },\n\n    1080: {\n        // screen base dimension\n        height: 1080,\n        width:  1920,\n        // safe zone margins\n        availTop:    45,\n        availBottom: 45,\n        availRight:  60,\n        availLeft:   60\n        // project-specific vars\n        // put here ...\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core'),\n    //metrics = require('app:metrics'),\n    linkCSS;\n\n\n//window.core = window.parent.getCoreInstance(window, app);\n\n\nlinkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = window.core.theme.path + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);\n\n\n// public\nmodule.exports = linkCSS;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    Gettext = require('cjs-gettext'),\n    loader  = new Emitter();\n\n\n/**\n * Wrap the given data with gettext instance\n * and export methods to the global scope.\n *\n * @param {Object} [data] localization data\n *\n * @return {Gettext} gettext instance\n */\nfunction prepare ( data ) {\n    var gettext = new Gettext(data);\n\n    // make it global\n    window.gettext  = window._ = gettext.gettext;\n    window.pgettext = gettext.pgettext;\n    window.ngettext = gettext.ngettext;\n\n    return gettext;\n}\n\n\n/**\n * Main application language\n */\nloader.defaultLanguage = 'en';\n\n\n/**\n * Simple gettext implementation.\n *\n * @param {Object} config options\n * @param {string} [config.path=lang] relative path to project root\n * @param {string} config.name language name\n * @param {string} [config.ext=json] language file extension\n * @param {function} callback hook on ready\n *\n * @return {boolean} flag is ajax request was made\n */\nloader.load = function ( config, callback ) {\n    var xhr;\n\n    if ( DEVELOP ) {\n        if ( !config.name || typeof config.name !== 'string' ) {\n            throw new Error(__filename + ': config.name must be a nonempty string');\n        }\n        if ( typeof callback !== 'function' ) {\n            throw new Error(__filename + ': wrong callback type');\n        }\n    }\n\n    // defaults\n    config.ext  = config.ext  || 'json';\n    config.path = config.path || 'lang';\n\n    // is it necessary to request a localization file?\n    if ( config.name === loader.defaultLanguage ) {\n        // no\n        prepare();\n        callback(null);\n\n        return false;\n    }\n\n    // yes\n    xhr = new XMLHttpRequest();\n\n    xhr.onload = function () {\n        var json;\n\n        try {\n            json = JSON.parse(xhr.responseText);\n\n            prepare(json);\n            callback(null);\n\n            // there are some listeners\n            if ( loader.events['load'] ) {\n                // notify listeners\n                loader.emit('load');\n            }\n        } catch ( error ) {\n            xhr.onerror(error);\n        }\n    };\n\n    xhr.ontimeout = xhr.onerror = function ( error ) {\n        prepare();\n        callback(error);\n\n        // there are some listeners\n        if ( loader.events['error'] ) {\n            // notify listeners\n            loader.emit('error', error);\n        }\n    };\n\n    xhr.open('GET', config.path + '/' + config.name + '.' + config.ext, true);\n    xhr.send(null);\n\n    return true;\n};\n\n\n// public\nmodule.exports = loader;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Translations handler.\n *\n * @constructor\n *\n * @param {Object} config init parameters\n */\nfunction Gettext ( config ) {\n    var data, meta;\n\n    // sanitize\n    config   = config || {};\n    data     = config.data || {};\n    data[''] = data[''] || {};\n\n    // shortcut\n    meta = config.meta;\n\n    /**\n     * Display the native language translation of a textual message.\n     *\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.gettext = function ( msgId ) {\n        return data[''][msgId] || msgId;\n    };\n\n\n    /**\n     * The \"p\" in \"pgettext\" stands for \"particular\": fetches a particular translation of the textual message.\n     *\n     * @param {string} context message context\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.pgettext = function ( context, msgId ) {\n        return data[context] && data[context][msgId] || msgId;\n    };\n\n\n    /**\n     * Display the native language translation of a textual message whose grammatical form depends on a number.\n     *\n     * @param {string} msgId textual message in a singular form\n     * @param {string} plural textual message in a plural form\n     * @param {number} value message number\n     *\n     * @return {string} translated text\n     */\n    this.ngettext = function ( msgId, plural, value ) {\n        /* eslint no-unused-vars: 0 */\n        /* eslint no-eval: 0 */\n        /* eslint id-length: 0 */\n        var n, evalResult;\n\n        if ( DEVELOP ) {\n            if ( Number(value) !== value ) {\n                throw new Error(__filename + ': value must be a number');\n            }\n        }\n\n        if ( data && meta && data[''][msgId] ) {\n            evalResult = eval('n = ' + value + '; ' + meta.plural);\n\n            if ( typeof evalResult === 'boolean' ) {\n                evalResult = +evalResult;\n            }\n\n            // translation\n            return data[''][msgId][evalResult];\n        }\n\n        // english\n        return value === 1 ? msgId : plural;\n    };\n}\n\n\n// correct constructor name\nGettext.prototype.constructor = Gettext;\n\n\n// public\nmodule.exports = Gettext;\n","/**\n * Main application page.\n */\n\n'use strict';\n\nvar app              = require('mag-app'),\n    keys             = require('stb-keys'),\n    Footer           = require('mag-component-footer'),\n    Panel            = require('mag-component-panel'),\n    PanelSet         = require('mag-component-panel-set'),\n    LayoutList       = require('mag-component-layout-list'),\n    ModalMessage     = require('mag-component-modal'),\n    RadioList        = require('mag-component-radio-list'),\n    ScrollBar        = require('stb-component-scrollbar'),\n    ScrollArea       = require('mag-component-scroll-area'),\n\n    appExit          = require('../modules/app.exit'),\n    webInput         = require('../modules/web.input'),\n    previewImage     = require('../modules/preview.bookmark'),\n    intents          = require('../modules/intents'),\n    validateUrl      = require('../modules/validate.url'),\n    div              = require('../modules/div'),\n\n    page             = new (require('stb-component-page'))({$node: window.pageMain}),\n\n    browser          = core.plugins.browser,\n    messagesToEngine = browser.messages.toEngine,\n    messagesToApp    = browser.messages.toApp,\n\n    isBrowserInit    = false,\n    bookmarks        = [],\n    doc              = document,\n\n    browseMessageReload,\n    mainPanelList,\n    headerAmount,\n    navigationListData,\n    settingsListData,\n    progressBar,\n    mainPanelSet,\n    mainPanel,\n    rightPanel,\n    leftPanelMenu,\n    mainPanelTitle,\n    mainPanelListScroll,\n    rightInfoPanelScroll,\n    modalMessageScroll,\n    mediaActionsModalList;\n\n\n/**\n * Close already opened modal windows and set appropriate flags.\n */\nfunction closeModalWindow () {\n    Object.keys(page.modals).forEach(function ( modal ) {\n        page.modals[modal].hide();\n    });\n\n    mainPanelSet.focus();\n    app.flags.modalActive = false;\n    page.footer.show();\n}\n\n\n/**\n * Construct comprehensive information about items in main central panel.\n *\n * @param {Object} data - data source\n */\nfunction constructInfo ( data ) {\n    var nodes = [\n        data.title && div('title theme-subhead-color', data.title + ':'),\n        div(null, data.text)\n    ];\n\n    page.textArea.$body.innerHTML = '';\n\n    nodes.forEach(function ( node ) {\n        if ( node ) {\n            page.textArea.$body.appendChild(node);\n        }\n    });\n\n    page.textArea.show();\n    page.textArea.init();\n}\n\n\n/**\n * Construct bookmarks list with storage data.\n *\n * @param {string} [excludeUrl] - URL to exclude/remove from bookmarks\n *\n * @return {Object[]} bookmarks as ready to use constructed list\n */\nfunction fillBookmarksList ( excludeUrl )  {\n    var storedBookmarks = app.storage.bookmarks,\n        index = storedBookmarks.length,\n        data = [],\n        favicon;\n\n    if ( excludeUrl ) {\n        while ( index-- ) {\n            // is in bookmarks\n            if ( storedBookmarks[index].url === excludeUrl ) {\n                // remove from bookmarks\n                storedBookmarks.splice(index, 1);\n            } else {\n                favicon = new Image();\n                favicon.src = storedBookmarks[index].favicon;\n                data.push({\n                    items: [\n                        {\n                            value: favicon,\n                            className: 'bookmarkListFavicon'\n                        },\n                        {\n                            value: storedBookmarks[index].url,\n                            className: 'bookmarkListUrl'\n                        },\n                        {\n                            className: 'theme-icon theme-icon-favorite-active active'\n                        }\n                    ],\n                    value: storedBookmarks[index]\n                });\n            }\n        }\n    } else {\n        while ( index-- ) {\n            favicon = new Image();\n            favicon.src = storedBookmarks[index].favicon;\n            data.push({\n                items: [\n                    {\n                        value: favicon,\n                        className: 'bookmarkListFavicon'\n                    },\n                    {\n                        value: storedBookmarks[index].url,\n                        className: 'bookmarkListUrl'\n                    },\n                    {\n                        className: 'theme-icon theme-icon-favorite-active active'\n                    }\n                ],\n                value: storedBookmarks[index]\n            });\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Set new data/new options to panel/list.\n *\n * @param {Object} data - array of station objects for parsing into LayoutList\n * @param {boolean} isDataRaw - flag that shows if given data is only data or whole config\n * @param {Object} [mixin] - some additional properties\n *\n * @return {boolean} result\n */\nfunction reRender ( data, isDataRaw, mixin ) {\n    var tmpData;\n\n    if ( isDataRaw ) {\n        tmpData = {\n            scroll: data.length < 8 ? null : mainPanelListScroll,\n            data: data,\n            focusIndex: 0,\n            cycle: true,\n            size: 7\n        };\n\n        if ( mixin ) {\n            Object.keys(mixin).forEach(function ( item ) {\n                tmpData[item] = mixin[item];\n            });\n        }\n\n        mainPanelList.init(tmpData);\n\n        if ( data.length > 7 ) {\n            if ( !mainPanel.scroller ) {\n                mainPanel.scroller = true;\n                mainPanelListScroll.init({\n                    realSize: data.length\n                });\n                mainPanelListScroll.$node.style.display = '';\n            }\n        } else {\n            mainPanel.scroller = false;\n            mainPanelListScroll.$node.style.display = 'none';\n        }\n\n        headerAmount.innerHTML = data.length;\n    } else {\n        mainPanelList.init(data);\n        headerAmount.innerHTML = data.data.length;\n    }\n\n    return true;\n}\n\n\n/**\n * Action for menu call for using in footer.\n *\n * @param {string} [url] - optional URL for loading\n */\nfunction callMenu ( url ) {\n    if ( app.flags.webWindowActive ) {\n        app.flags.webWindowActive = false;\n        mainPanelSet.show();\n        app.addressBar.toggle();\n        page.footer.init(page.footer.navigationViewConfig);\n        app.flags.favoritesActive && reRender(fillBookmarksList(), true) && constructInfo({title: '', text: ''});\n        app.flags.favoritesActive && page.footer.init(page.footer.bookmarksViewConfig);\n    } else {\n        app.flags.webWindowActive = true;\n        mainPanelSet.hide();\n        app.addressBar.toggle();\n        page.footer.init(page.footer.browserViewConfig);\n        browser.sendMessage(messagesToEngine.userSettings, app.storage);\n        browser.sendMessage(messagesToEngine.showWebWindow, url);\n    }\n}\n\n\n/**\n * Construct appropriate context menu for media resource.\n *\n * @param {Object} config - configuration parameters\n * @param {Object} config.data - media resource metadata\n * @param {boolean} config.playable - can media resource be played\n *\n * @return {Object} data for init list\n */\nfunction constructListContent ( config ) {\n    var data = [\n        {\n            items: [\n                {\n                    className: 'theme-icon theme-icon-download'\n                },\n                gettext('Download')\n            ],\n            click: function () {\n                closeModalWindow();\n                intents.openDownloads({\n                    title: config.data.itemName,\n                    uri:   config.data.itemLink\n                }, callMenu);\n            }\n        }\n    ];\n\n    if ( config.playable ) {\n        data.unshift({\n            items: [\n                {\n                    className: 'theme-icon theme-icon-play'\n                },\n                gettext('Play')\n            ],\n            click: function () {\n                closeModalWindow();\n                intents.startPlayback({\n                    mime:  config.data.itemMime,\n                    title: config.data.itemName,\n                    uri:   config.data.itemLink\n                }, callMenu);\n            }\n        });\n    }\n\n    return {\n        data:       data,\n        size:       data.length,\n        focusIndex: 0\n    };\n}\n\n\n/**\n * Set or remove item from bookmarks collection.\n *\n * @param {Object} data - bookmark details\n */\nfunction toggleFavorites ( data ) {\n    var index;\n\n    for ( bookmarks = app.storage.bookmarks, index = bookmarks.length; index--; ) {\n        // is in bookmarks\n        if ( bookmarks[index].url === data.url ) {\n            // remove from bookmarks\n            bookmarks.splice(index, 1);\n            webInput.fillStar(app.addressBar.favorites, false);\n\n            return;\n        }\n    }\n\n    webInput.fillStar(app.addressBar.favorites, true);\n    bookmarks.push({\n        url: data.url,\n        favicon: app.addressBar.favicon.src,\n        title: data.title\n    });\n}\n\n\n/**\n * Render menu on top of the page.\n */\n// eslint-disable-next-line\nfunction renderMenu () {\n    var scale = app.storage.settings.scale,\n        $scaleInfo, $fullScreenInfo, $virtualMouseInfo,\n        navigationMenuInfoMap, settingsMenuInfoMap, links;\n\n    mainPanelListScroll = new ScrollBar({\n        viewSize: 7,\n        className: 'mainPanelListScroll'\n    });\n\n    rightInfoPanelScroll = new ScrollBar({\n        viewSize: 7,\n        className: 'rightInfoPanelScroll'\n    });\n\n    modalMessageScroll = new ScrollBar({\n        viewSize: 5,\n        className: 'modalMessageScroll'\n    });\n\n    page.modals.setScale = new ModalMessage({\n        parent: page,\n        title: gettext('parameters'),\n        events: {\n            show: function () {\n                this.focus();\n                mainPanelSet.blur();\n                page.footer.hide();\n                app.flags.modalActive = true;\n            },\n            hide: closeModalWindow\n        },\n        children: [\n            new RadioList({\n                cycle: true,\n                focusIndex: 0,\n                size: 5,\n                data: [\n                    {\n                        state: scale === 50,\n                        title: '50%',\n                        value: 50\n                    },\n                    {\n                        state: scale === 75,\n                        title: '75%',\n                        value: 75\n                    },\n                    {\n                        state: scale === 100,\n                        title: '100%',\n                        value: 100\n                    },\n                    {\n                        state: scale === 150,\n                        title: '150%',\n                        value: 150\n                    },\n                    {\n                        state: scale === 200,\n                        title: '200%',\n                        value: 200\n                    },\n                    {\n                        state: scale === 300,\n                        title: '300%',\n                        value: 300\n                    }\n                ],\n                events: {\n                    'click:item': function ( event ) {\n                        event = event.$item.data.value;\n                        $scaleInfo.innerText = settingsListData.data[0].items[2].value = event + '%';\n                        app.storage.settings.scale = event;\n                        closeModalWindow();\n                    }\n                },\n                scroll: modalMessageScroll\n            })\n        ]\n    });\n\n    page.modals.mediaAvailable = new ModalMessage({\n        parent: page,\n        title: gettext('Actions'),\n        events: {\n            show: function () {\n                this.focus();\n                mainPanelSet.blur();\n                page.footer.hide();\n                app.flags.modalActive = true;\n            },\n            hide: closeModalWindow\n        },\n        children: [\n            mediaActionsModalList = new LayoutList({\n                cycle: true,\n                focusIndex: 0,\n                size: 0,\n                data: []\n            })\n        ]\n    });\n\n    navigationListData = {\n        cycle: true,\n        size: 6,\n        focusIndex: 0,\n        data: [\n            {\n                items: [\n                    {\n                        className: 'theme-icon theme-icon-edit'\n                    },\n                    gettext('Edit the address bar')\n                ],\n                click: function () {\n                    intents.openKeyboard({\n                        title: app.addressBar.placeholder,\n                        value: app.data.currentUrl\n                    }, function ( keyboardEvent ) {\n                        var data = keyboardEvent.value;\n\n                        // sanitize URL\n                        if ( !validateUrl(data) ) {\n                            data = 'https://www.google.com/search?hl=' + core.environment.language + '&q=' + data;\n                        }\n\n                        if ( !app.flags.ignoreMessages ) {\n                            callMenu();\n                            browser.sendMessage(messagesToEngine.userTextInput, data);\n                        }\n                    });\n                }\n            },\n            {\n                items: [\n                    {\n                        className: 'theme-icon theme-icon-rewind'\n                    },\n                    gettext('Back')\n                ],\n                click: function () {\n                    browser.sendMessage(messagesToEngine.navigateBackward);\n                }\n            },\n            {\n                items: [\n                    {\n                        className: 'theme-icon theme-icon-forward'\n                    },\n                    gettext('Forward')\n                ],\n                click: function () {\n                    browser.sendMessage(messagesToEngine.navigateForward);\n                }\n            },\n            {\n                items: [\n                    {\n                        className: 'theme-icon theme-icon-stop'\n                    },\n                    gettext('Stop')\n                ],\n                click: function () {\n                    browser.sendMessage(messagesToEngine.stopLoad);\n                }\n            },\n            {\n                items: [\n                    {\n                        className: 'theme-icon theme-icon-refresh'\n                    },\n                    gettext('Reload')\n                ],\n                click: function () {\n                    browser.sendMessage(messagesToEngine.reload);\n                }\n            },\n            {\n                items: [\n                    {\n                        className: 'theme-icon theme-icon-rc-f3'\n                    },\n                    gettext('Favorites')\n                ],\n                click: function () {\n                    toggleFavorites({url: app.data.currentUrl, title: app.data.currentUrlTitle});\n                }\n            }\n        ],\n        events: {\n            'focus:item': function () {\n                constructInfo(navigationMenuInfoMap[this.$focusItem.index]);\n            }\n        }\n    };\n\n    settingsListData = {\n        cycle: true,\n        size: 3,\n        focusIndex: 0,\n        data: [\n            {\n                items: [\n                    {\n                        className: 'theme-icon theme-icon-scale'\n                    },\n                    {\n                        value: gettext('Scale')\n                    },\n                    $scaleInfo = div('settingState theme-text-disabled', app.storage.settings.scale + '%')\n                ],\n                click: function () {\n                    page.modals.setScale.show();\n                }\n            },\n            {\n                items: [\n                    {\n                        className: 'theme-icon theme-icon-aspect'\n                    },\n                    {\n                        value: gettext('Full screen'),\n                        className: 'settingTitle'\n                    },\n                    $fullScreenInfo = div('settingState theme-text-disabled', app.storage.settings.isFullScreen ? gettext('On') : gettext('Off'))\n                ],\n                click: function () {\n                    var currentState = app.storage.settings.isFullScreen;\n\n                    app.storage.settings.isFullScreen = !currentState;\n                    $fullScreenInfo.innerText = settingsListData.data[1].items[2].value = currentState ? gettext('Off') : gettext('On');\n                }\n            },\n            {\n                items: [\n                    {\n                        className: 'theme-icon theme-icon-virtual-mouse'\n                    },\n                    {\n                        value: gettext('Virtual mouse'),\n                        className: 'settingTitle'\n                    },\n                    $virtualMouseInfo = div('settingState theme-text-disabled', app.storage.settings.isVirtualMouse ? gettext('On') : gettext('Off'))\n                ],\n                click: function () {\n                    var currentState = app.storage.settings.isVirtualMouse;\n\n                    app.storage.settings.isVirtualMouse = !currentState;\n                    $virtualMouseInfo.innerText = settingsListData.data[1].items[2].value = currentState ? gettext('Off') : gettext('On');\n                }\n            }\n        ],\n        events: {\n            'focus:item': function () {\n                constructInfo(settingsMenuInfoMap[this.$focusItem.index]);\n            },\n            'click:item': function ( event ) {\n                this.handlers[event.$item.index](event.$item);\n            }\n        }\n    };\n\n    navigationMenuInfoMap = [\n        // eslint-disable-next-line\n        {title: gettext('Button “Edit the address bar”'), text: gettext('Click on the \"Edit the address bar\" button to edit content in the address bar')},\n        {title: gettext('Button “Back”'), text: gettext('Click on the “Back” button to go to the previous page')},\n        {title: gettext('Button “Forward”'), text: gettext('Click on the “Forward” button to go to the next page')},\n        {title: gettext('Button “Stop”'), text: gettext('Click on the \"Stop\" button to stop the page loading')},\n        {title: gettext('Button “Reload”'), text: gettext('Click on the “Reload” button to reload the page')},\n        {title: gettext('Button “Favorites”'), text: gettext('Click on the “Favorites” button to go to bookmarks')}\n    ];\n\n    settingsMenuInfoMap = [\n        {title: '', text: gettext('Scale is the ratio of the visual size of the object image to its actual size.')},\n        {title: '', text: gettext('Full-screen mode expands the browser window.')},\n        {title: '', text: gettext('Virtual mouse is the option to emulate mouse behavior with keyboard.')}\n    ];\n\n    page.textArea = new ScrollArea({propagate: true, scroll: rightInfoPanelScroll, step: 1});\n\n    page.add(\n        mainPanelSet = new PanelSet({\n            visible: !app.flags.webWindowActive,\n            panels: [\n                new Panel({\n                    size: 1,\n                    title: [\n                        {\n                            value: gettext('menu'),\n                            className: 'name'\n                        }\n                    ],\n                    children: [\n                        leftPanelMenu = new LayoutList({\n                            cycle: true,\n                            size: 5,\n                            focusIndex: 0,\n                            data: [\n                                {\n                                    name: 'navigation',\n                                    items: [\n                                        {\n                                            name: '$icon',\n                                            className: 'theme-icon theme-icon-navigate'\n                                        },\n                                        gettext('Navigation')\n                                    ],\n                                    click: function () {\n                                        app.flags.favoritesActive = false;\n\n                                        links.favorites.links.$icon.className = 'theme-icon theme-icon-favorite';\n                                        links.settings.links.$icon.classList.remove('active');\n                                        links.navigation.links.$icon.classList.add('active');\n\n                                        reRender(navigationListData, false);\n                                        mainPanel.$node.classList.remove('settings');\n                                        mainPanelTitle.innerText = gettext('Navigation');\n                                        page.footer.init(page.footer.navigationViewConfig);\n                                    }\n                                },\n                                {\n                                    name: 'favorites',\n                                    items: [\n                                        {\n                                            name: '$icon',\n                                            className: 'theme-icon theme-icon-favorite'\n                                        },\n                                        gettext('Favorites')\n                                    ],\n                                    click: function () {\n                                        mainPanel.$node.classList.remove('settings');\n                                        mainPanelTitle.innerText = gettext('Favorites');\n\n                                        links.navigation.links.$icon.classList.remove('active');\n                                        links.settings.links.$icon.classList.remove('active');\n                                        links.favorites.links.$icon.className = 'theme-icon theme-icon-favorite-active active';\n\n                                        page.footer.init(page.footer.navigationViewConfig);\n                                        reRender(fillBookmarksList(), app.flags.favoritesActive = true, {\n                                            events: {\n                                                'focus:item': function () {\n                                                    clearTimeout(this.timerId);\n                                                    this.timerId = setTimeout(function () {\n                                                        if ( mainPanelList.$focusItem ) {\n                                                            previewImage(\n                                                                page,\n                                                                mainPanelList.$focusItem.data.value.url,\n                                                                mainPanelList.$focusItem.data.value\n                                                            );\n                                                        }\n                                                    }, core.environment.onFocusDebounceTimeout);\n                                                },\n                                                'click:item': function () {\n                                                    callMenu(mainPanelList.$focusItem.data.value.url);\n                                                }\n                                            }\n                                        });\n                                        constructInfo({title: '', text: ''});\n                                    }\n                                },\n                                {\n                                    items: [\n                                        {\n                                            className: 'theme-icon theme-icon-download'\n                                        },\n                                        gettext('Downloads')\n                                    ],\n                                    click: function () {\n                                        intents.openDownloads({}, callMenu);\n                                    }\n                                },\n                                {\n                                    name: 'settings',\n                                    items: [\n                                        {\n                                            name: '$icon',\n                                            className: 'theme-icon theme-icon-settings'\n                                        },\n                                        gettext('Settings')\n                                    ],\n                                    click: function () {\n                                        app.flags.favoritesActive = false;\n\n                                        links.favorites.links.$icon.className = 'theme-icon theme-icon-favorite';\n                                        links.navigation.links.$icon.classList.remove('active');\n                                        links.settings.links.$icon.classList.add('active');\n\n                                        reRender(settingsListData, false);\n                                        mainPanelTitle.innerText = gettext('Settings');\n                                        page.footer.init(page.footer.settingsViewConfig);\n                                        mainPanel.$node.classList.add('settings');\n                                    }\n                                },\n                                {\n                                    items: [\n                                        {\n                                            className: 'theme-icon theme-icon-exit'\n                                        },\n                                        gettext('Exit')\n                                    ],\n                                    click: function () {\n                                        mainPanelSet.blur();\n                                        appExit.goExit();\n                                    }\n                                }\n                            ]\n                        })\n                    ],\n                    events: {\n                        focus: function ( event ) {\n                            Panel.prototype.defaultEvents.focus.call(this, event);\n                            app.flags.favoritesActive && page.footer.init(page.footer.navigationViewConfig);\n                        }\n                    }\n                }),\n                mainPanel = new Panel({\n                    size: 1,\n                    title: [\n                        {\n                            value: gettext('files'),\n                            className: 'name'\n                        },\n                        div('amountContainer', headerAmount = div('amount', 6))\n                    ],\n                    main: true,\n                    children: [mainPanelList = new LayoutList(navigationListData)],\n                    events: {\n                        focus: function ( event ) {\n                            Panel.prototype.defaultEvents.focus.call(this, event);\n                            app.flags.favoritesActive && page.footer.init(page.footer.bookmarksViewConfig);\n                        }\n                    }\n                }),\n                rightPanel = new Panel({\n                    size: 1,\n                    title: [\n                        {\n                            value: gettext('info'),\n                            className: 'name'\n                        }\n                    ],\n                    children: []\n                })\n            ]\n        })\n    );\n\n    page.textArea.addListener('click', function () {\n        app.flags.favoritesActive && mainPanelList.emit('click:item');\n    });\n\n    mainPanel.$body.appendChild(mainPanelListScroll.$node);\n    page.modals.setScale.$body.appendChild(modalMessageScroll.$node);\n    rightPanel.add(page.textArea, rightInfoPanelScroll);\n\n    if ( bookmarks.length <= 7 ) {\n        mainPanelListScroll.$node.style.display = 'none';\n    }\n\n    navigationListData.events['click:item'] = function ( event ) {\n        this.handlers[event.$item.index](event.$item);\n    };\n\n    links = leftPanelMenu.links;\n    app.mainPanelSet = mainPanelSet;\n    mainPanelTitle = mainPanel.title.$body.children[0];\n    mainPanelTitle.innerText = leftPanelMenu.$focusItem.data.items[1].value;\n    mainPanel.focus();\n}\n\n\n/**\n * Main page render. Do basic initialization stuff here.\n */\nfunction renderPage () {\n    progressBar = webInput.setProgressBar({className: 'progressBar'});\n    page.modals = {};\n    page.footer = new Footer({parent: page});\n\n    page.footer.browserViewConfig = {\n        left: {\n            code: keys.menu,\n            action: function () {\n                browser.sendMessage(messagesToEngine.hideWebWindow);\n            }\n        },\n        middle: [\n            {\n                code: keys.f1,\n                title: gettext('Reload'),\n                action: function () {\n                    browser.sendMessage(messagesToEngine.reload);\n                }\n            },\n            {\n                code: keys.keyboard,\n                title: gettext('Virtual keyboard'),\n                action: function () {\n                    browser.sendMessage(messagesToEngine.openVirtualKeyboard);\n                }\n            },\n            {\n                code: keys.f3,\n                title: gettext('Favorites'),\n                action: function () {\n                    toggleFavorites({url: app.data.currentUrl, title: app.data.currentUrlTitle});\n                }\n            },\n            {\n                code: keys.f4,\n                title: gettext('Address bar'),\n                action: function () {\n                    browser.sendMessage(messagesToEngine.search);\n                }\n            }\n        ],\n        right: {\n            code: keys.frame,\n            action: function () {\n                browser.sendMessage(messagesToEngine.setFullScreen);\n            }\n        }\n    };\n\n    page.footer.navigationViewConfig = {\n        left: {\n            code: keys.menu,\n            action: callMenu\n        }\n    };\n\n    page.footer.bookmarksViewConfig = {\n        left: {\n            code: keys.menu,\n            action: callMenu\n        },\n        middle: [\n            {\n                code: keys.f3,\n                title: gettext('Favorites'),\n                action: function () {\n                    var activeItem = mainPanelList.$focusItem;\n\n                    if ( app.flags.favoritesActive && activeItem ) {\n                        // re-render list with new bookmarks data\n                        reRender(fillBookmarksList(activeItem.data.value.url), true);\n                        app.storage.bookmarks.length || (page.textArea.$body.innerHTML = '');\n                    }\n                }\n            }\n        ]\n    };\n\n    page.footer.settingsViewConfig = {\n        left: {\n            code: keys.menu,\n            action: callMenu\n        }\n    };\n\n    page.add(progressBar);\n    page.footer.init(page.footer.browserViewConfig);\n    page.footer.show();\n\n    app.addressBar = {\n        faviconBlock: doc.getElementById('addressBarFavicon'),\n        loader: doc.getElementById('loader'),\n        favicon: doc.getElementById('favicon'),\n        placeholder: 'Enter url address or text to search...',\n        url: doc.getElementById('addressBar'),\n        progress: progressBar,\n        favorites: doc.getElementById('addressBarFavorites'),\n        toggle: function () {\n            this.faviconBlock.classList.toggle('hidden');\n            this.url.classList.toggle('hidden');\n            this.favorites.classList.toggle('hidden');\n            this.progress.$node.classList.toggle('hidden');\n        }\n    };\n\n    renderMenu();\n}\n\n\npage.once('show', renderPage);\n\npage.addListener('keydown', function ( event ) {\n    switch ( event.code ) {\n        case keys.back:\n            (app.flags.modalActive ? closeModalWindow : callMenu)();\n            break;\n        case keys.ok:\n            app.flags.favoritesActive && rightPanel.$node.classList.contains('active') && mainPanelList.emit('click:item');\n            break;\n    }\n});\n\n\n/**\n * Callback function for handling messages from browser engine.\n * There are many gSTB API usages in handling logic, so main work happens in corresponding plugin.\n * So here we can add some additional non-primary logic.\n *\n * @param {Object} event - event object\n */\nbrowser.onMessageReceive = function ( event ) {\n    var itemPlayable = false,\n        index, progressLevel, mimeType;\n\n    switch ( event.message ) {\n        case messagesToApp.back:\n            if ( app.intent ) {\n                app.intent.close();\n            } else {\n                appExit.goBack();\n            }\n\n            break;\n        case messagesToApp.home:\n            appExit.goHome();\n            break;\n        case messagesToApp.search:\n            intents.openKeyboard({\n                title: app.addressBar.placeholder,\n                value: app.data.currentUrl\n            },\n            function ( keyboardEvent ) {\n                var data = keyboardEvent.value;\n\n                // sanitize URL\n                if ( !validateUrl(data) ) {\n                    data = 'https://www.google.com/search?hl=' + core.environment.language + '&q=' + data;\n                }\n\n                if ( !app.flags.ignoreMessages ) {\n                    browser.sendMessage(messagesToEngine.userSettings, app.storage);\n                    browser.sendMessage(messagesToEngine.userTextInput, data);\n                }\n            });\n            break;\n        case messagesToApp.mediaAvailable:\n            mimeType = event.data.itemMime.split('/')[0];\n            itemPlayable = ['audio', 'video'].indexOf(mimeType) !== -1;\n            event.data.itemName = decodeURIComponent(event.data.itemName);\n\n            if ( itemPlayable ) {\n                event.data.itemMime = 'content/' + mimeType;\n            }\n\n            mediaActionsModalList.init(constructListContent({\n                data:     event.data,\n                playable: itemPlayable\n            }));\n\n            page.modals.mediaAvailable.show();\n            break;\n        case messagesToApp.reload:\n            browseMessageReload(browseMessageReload.initUrl, browseMessageReload.currentUrl = event.data);\n            break;\n        case messagesToApp.openMenu:\n            callMenu();\n            break;\n        case messagesToApp.changeUrl:\n            // full-fill user history of visited pages\n            app.addressBar.url.innerText = app.data.currentUrl = event.data.url;\n            app.data.currentUrlTitle = event.data.title;\n            // reset visual favorites state\n            webInput.fillStar(app.addressBar.favorites, false);\n\n            for ( index = app.storage.bookmarks.length; index--; ) {\n                if ( app.storage.bookmarks[index].url === app.data.currentUrl ) {\n                    webInput.fillStar(app.addressBar.favorites, true);\n                    break;\n                }\n            }\n\n            break;\n        case messagesToApp.setLoadProgress:\n            progressLevel = Number(event.data);\n            app.addressBar.progress.set(progressLevel === 100 ? 0 : progressLevel);\n            break;\n        case messagesToApp.setFavicon:\n            app.addressBar.favicon.onload = function () {\n                app.addressBar.loader.classList.add('hidden');\n                app.addressBar.favicon.classList.remove('hidden');\n            };\n            app.addressBar.favicon.onerror = function () {\n                app.addressBar.favicon.classList.add('noFavicon');\n                app.addressBar.loader.classList.add('hidden');\n                app.addressBar.favicon.classList.remove('hidden');\n            };\n            app.addressBar.favicon.src = webInput.setFavicon(app.data.currentUrl);\n            break;\n        case messagesToApp.unsetFavicon:\n            app.addressBar.favicon.classList.add('hidden');\n            app.addressBar.favicon.classList.remove('noFavicon');\n            app.addressBar.loader.classList.remove('hidden');\n            break;\n        case messagesToApp.favoritesState:\n            toggleFavorites(event.data);\n            break;\n        case messagesToApp.notification:\n            core.notify({\n                title: event.data,\n                icon: 'info',\n                type: 'error'\n            });\n            break;\n        case messagesToApp.openTaskManager:\n            callMenu();\n            intents.openTaskManager(callMenu);\n            break;\n        case messagesToApp.openSettings:\n            intents.openSystemSettings(callMenu);\n            break;\n        case messagesToApp.ready:\n            browser.sendMessage(messagesToEngine.userSettings, app.storage);\n            break;\n    }\n};\n\ncore.addListener('intent', function ( intent, callback ) {\n    var context = {};\n\n    if ( intent.action === 'browse' ) {\n        // error\n        if ( !intent.data || !intent.data.uri ) {\n            callback(true, null);\n\n            return;\n        }\n\n        if ( intent.events && intent.events.reload ) {\n            browseMessageReload = intent.events.reload[0];\n            browseMessageReload.initUrl = intent.data.uri;\n        }\n\n        if ( isBrowserInit ) {\n            browser.sendMessage(messagesToEngine.intentUrl, intent.data.uri);\n        } else {\n            console.log('Browser invoked by intent.....');\n            isBrowserInit = true;\n            browser.init({data: ['page=' + intent.data.uri], purpose: 'parameter'});\n        }\n\n        app.intent = intent;\n\n        Object.defineProperty(context, 'uri', {\n            get: function () {\n                return browseMessageReload.currentUrl || browseMessageReload.initUrl;\n            }\n        });\n\n        callback(false, context);\n    }\n});\n\nif ( !isBrowserInit ) {\n    browser[browser.standalone ? 'initStandalone' : 'initRegular']();\n}\n\ncore.addListeners({\n    show: function () {\n        app.flags.ignoreMessages = false;\n\n        if ( app.flags.webWindowActive ) {\n            browser.sendMessage(messagesToEngine.showWebWindow);\n        }\n    },\n    hide: browser.showPortalWindow\n});\n\nmodule.exports = page;\n","/**\n * @license The MIT License (MIT)\n * @copyright Dmitry Fedotov <bas.jsdev@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys'),\n    classes   = {};\n\n\n// initialize classes\nclasses[keys.f1] = 'theme-icon-rc-f1';\nclasses[keys.f2] = 'theme-icon-rc-f2';\nclasses[keys.f3] = 'theme-icon-rc-f3';\nclasses[keys.f4] = 'theme-icon-rc-f4';\nclasses[keys.menu] = 'theme-icon-rc-menu';\nclasses[keys.ok] = 'theme-icon-rc-ok';\nclasses[keys.info] = 'theme-icon-rc-info';\nclasses[keys.playPause] = 'theme-icon-rc-play-pause';\nclasses[keys.back] = 'theme-icon-rc-back';\nclasses[keys.exit] = 'theme-icon-rc-home';\nclasses[keys.keyboard] = 'theme-icon-rc-vk';\nclasses[keys.refresh] = 'theme-icon-rc-refresh';\nclasses[keys.frame] = 'theme-icon-rc-aspect';\n\n/**\n * Footer.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}  config={} init parameters\n * @param {Object}  config.parent parent page\n * @param {boolean} [config.visible] visibility flag\n * @param {Object}  [config.data] footer buttons config\n * @param {Object}  [config.data.left] left button config\n * @param {Object}  [config.data.middle] middle buttons config\n * @param {Object}  [config.data.right] right button config\n * @param {number}  [config.data.middle.code] button key code\n * @param {Object}  [config.data.middle.title] button title\n * @param {Object}  [config.data.middle.action] button press (click) action\n *\n * @example\n * page.footer = new Footer({\n *     parent: page,\n *     data: {\n *         left: {\n *             code: keys.menu, action: function () {}\n *         },\n *         middle: [\n *             {code: 55, action: function () {}},\n *             {code: keys.f1, title: 'stop', action: function () {}},\n *             {code: 9000, className: 'customIcon', title: 'start', action: function () {}},\n *             {code: keys.f4, title: 'end', action: function () {}}\n *         ],\n *         right: {\n *             code: 65, action: function () {}\n *         }\n *     }\n * });\n */\n\n/* eslint max-statements: 0 */\nfunction Footer ( config ) {\n    var currentTab = 0,\n        self = this;\n\n    // sanitize\n    config = config || {};\n    // can't accept focus\n    config.focusable = false;\n    // hide by default\n    config.visible = config.visible || false;\n    // create centered div\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    this.tabs = [\n        {codes: {}},\n        {codes: {}},\n        {codes: {}},\n        {codes: {}}\n    ];\n\n    this.tab = 0;\n\n    this.$table = this.$node.appendChild(document.createElement('table'));\n\n    this.$table.insertRow();\n    this.$table.rows[0].insertCell(-1);\n    this.$left = this.$table.rows[0].cells[0].appendChild(document.createElement('div'));\n    this.$left.className = 'theme-icon';\n\n    this.$table.rows[0].insertCell(-1);\n    this.$table.rows[0].cells[1].className = 'central';\n\n\n    this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.className = 'wrapper hidden';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n\n    ++currentTab;\n    this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.className = 'wrapper hidden';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n\n    ++currentTab;\n    this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.className = 'wrapper hidden';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n\n    ++currentTab;\n    this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.className = 'wrapper hidden';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n\n    this.$table.rows[0].insertCell(-1);\n    this.$right = this.$table.rows[0].cells[2].appendChild(document.createElement('div'));\n    this.$right.className = 'theme-icon';\n\n    this.init(config.data);\n\n    this.parent.addListener('keydown', function ( event ) {\n        var currTab = self.tabs[self.tab];\n\n        if ( self.visible ) {\n            if ( currTab.codes[event.code] && typeof currTab.codes[event.code].action === 'function' ) {\n                currTab.codes[event.code].action();\n            }\n        }\n    });\n}\n\n\n// inheritance\nFooter.prototype = Object.create(Component.prototype);\nFooter.prototype.constructor = Footer;\n\n// set component name\nFooter.prototype.name = 'mag-component-footer';\n\n\n/**\n * Redefine buttons\n *\n * @param {Object} [config] footer buttons config\n * @param {Object} [config.left] left button config\n * @param {number} [config.left.code] left button key code\n * @param {boolean} [config.left.disabled] left button is disabled\n * @param {Object} [config.left.action] left button press (click) action\n * @param {Object} [config.middle] middle buttons config\n * @param {Object} [config.right] right button config\n * @param {number} [config.right.code] right button key code\n * @param {boolean} [config.right.disabled] right button is disabled\n * @param {Object} [config.right.action] right button press (click) action\n * @param {number} [config.middle.code] button key code\n * @param {Object} [config.middle.title] button title\n * @param {boolean} [config.middle.disabled] button is disabled\n * @param {Object} [config.middle.action] button press (click) action\n *\n * page.Footer.init({\n *     left: {\n *         code: keys.menu, action: function () {}\n *     },\n *     middle: [\n *         {code: 55, action: function () {}},\n *         {code: keys.f1, title: 'stop', action: function () {}},\n *         {code: 9000, className: 'customIcon', title: 'start', action: function () {}},\n *         {code: keys.f4, title: 'end', disabled: true}\n *     ],\n *     right: {\n *         code: 65, action: function () {}\n *     }\n * });\n *\n */\nFooter.prototype.init = function ( config ) {\n    var index, $tab, $tabChildren;\n\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( config.middle && config.middle.length > 4 ) {\n            throw new Error(__filename + ': only 4 buttons allowed in footer');\n        }\n        if ( config.middle && Array.isArray(config.middle) ) {\n            for ( index = 0; index < config.middle.length; index++ ) {\n                if ( typeof config.middle[index].action !== 'function' && !config.middle[index].disabled ) {\n                    throw new Error(__filename + ': action must be a function');\n                }\n                ++index;\n            }\n        }\n        if ( config.left && typeof config.left.action !== 'function' && !config.left.disabled ) {\n            throw new Error(__filename + ': action must be a function');\n        }\n        if ( config.right && typeof config.right.action !== 'function' && !config.right.disabled ) {\n            throw new Error(__filename + ': action must be a function');\n        }\n    }\n\n    // hide old tab\n    this.tabs[this.tab].$body.classList.add('hidden');\n    this.tab = config.middle && config.middle.length ? config.middle.length - 1 : 0;\n    // current tab shortcut\n    $tab = this.tabs[this.tab];\n    // reset all actions\n    $tab.codes = {};\n\n    // left button\n    if ( config.left ) {\n        this.$left.className = config.left.className || ('theme-icon ' + (classes[config.left.code] || 'theme-icon-warning'));\n        if ( config.left.disabled ) {\n            this.$left.classList.add('disabled');\n        } else {\n            $tab.codes[config.left.code] = {action: config.left.action};\n            this.$left.style.visibility = 'inherit';\n            this.$left.onclick = function () {\n                if ( typeof config.left.action === 'function' ) {\n                    config.left.action();\n                }\n            };\n        }\n    } else if ( this.$left.style.visibility !== 'hidden' ) {\n        this.$left.style.visibility = 'hidden';\n    }\n\n    // right button\n    if ( config.right ) {\n        this.$right.className = config.right.className || ('theme-icon ' + (classes[config.right.code] || 'theme-icon-warning'));\n        if ( config.right.disabled ) {\n            this.$right.classList.add('disabled');\n        } else {\n            $tab.codes[config.right.code] = {action: config.right.action};\n            this.$right.style.visibility = 'inherit';\n            this.$right.onclick = function () {\n                if ( typeof config.right.action === 'function' ) {\n                    config.right.action();\n                }\n            };\n        }\n    } else if ( this.$right.style.visibility !== 'hidden' ) {\n        this.$right.style.visibility = 'hidden';\n    }\n\n    function addClick ( ind ) {\n        return function () {\n            if ( typeof config.middle[ind].action === 'function' ) {\n                config.middle[ind].action();\n            }\n        };\n    }\n\n    // middle buttons\n    if ( config.middle && config.middle.length ) {\n        for ( index = 0; index < config.middle.length; index++ ) {\n            $tab.codes[config.middle[index].code] = {action: config.middle[index].action};\n            if ( config.middle[index].disabled ) {\n                $tab.$body.children[index].classList.add('disabled');\n            } else {\n                $tab.$body.children[index].classList.remove('disabled');\n                $tab.$body.children[index].onclick = addClick(index);\n            }\n            // shortcut\n            $tabChildren = $tab.$body.children[index].children;\n            $tabChildren[0].className = 'iconImg ' +\n                (config.middle[index].className || ('theme-icon ' + (classes[config.middle[index].code] || 'theme-icon-warning')));\n\n            $tabChildren[1].innerText = config.middle[index].title || '';\n        }\n        $tab.$body.classList.remove('hidden');\n    }\n};\n\n\n// public\nmodule.exports = Footer;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    Layout = require('mag-component-layout');\n\n\n/**\n * Extended panel implementation.\n *\n * @constructor\n * @extends Component\n * @param {Object} [config={}] - init parameters (all inherited from the parent)\n * @param {boolean} [config.main=false] - set panel as main\n * @param {boolean} [config.size=1] - size of panel width\n *\n * @example\n * main = new Panel({\n *     size: 1,\n *     title: ['Left Panel', {className: 'info'}],\n *     main: true,\n *     children: [\n *         new List({\n *             data: ['1 bla', '2 bro', '3 car', '4 hoho', 'Search'],\n *             size: 5\n *         })\n *     ]\n * });\n */\nfunction Panel ( config ) {\n    var $overlay;\n\n    config = config || {};\n\n    /**\n     * Size of panel.\n     *\n     * @type {number}\n     */\n    this.size = 1;\n\n    /**\n     * Set panel as main.\n     *\n     * @type {boolean}\n     */\n    this.main = false;\n\n    /**\n     * Index in panel set.\n     *\n     * @type {number}\n     */\n    this.index = 0;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    // set default className if classList property empty or undefined\n    //config.className = 'Panel ' + (config.className || '');\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    //this.$node.classList.add('theme-main');\n    //this.$node.classList.add('theme-panel');\n\n    // add special class to set component size\n    if ( config.size ) {\n        this.size = config.size;\n        this.$node.classList.add('size' + config.size);\n    }\n\n    // add special class to set main panel\n    if ( config.main ) {\n        this.main = true;\n        this.$node.classList.add('main');\n    }\n\n    // create elements to set as component shadows\n    this.shadows = {\n        $left: document.createElement('div'),\n        $right: document.createElement('div')\n    };\n\n    this.shadows.$left.className = 'shadow left';\n    this.$node.appendChild(this.shadows.$left);\n\n    this.shadows.$right.className = 'shadow right';\n    this.$node.appendChild(this.shadows.$right);\n\n    // add title to panel\n    if ( config.title ) {\n        if ( !Array.isArray(config.title) ) {\n            config.title = [config.title];\n        }\n\n        this.title = new Layout({\n            //className: 'title theme-header theme-title',\n            className: 'title',\n            data: config.title,\n            focusable: false\n        });\n        this.$node.appendChild(this.title.$node);\n    }\n\n    this.$node.appendChild(this.$body);\n\n    $overlay = document.createElement('div');\n    $overlay.className = 'overlay';\n    this.$node.appendChild($overlay);\n}\n\n\n// inheritance\nPanel.prototype = Object.create(Component.prototype);\nPanel.prototype.constructor = Panel;\n\n// set component name\nPanel.prototype.name = 'mag-component-panel';\n\n\n/**\n * Define default events.\n *\n * @type {{focus: Function}} try to focus first child component if it present\n */\nPanel.prototype.defaultEvents = {\n    focus: function () {\n        if ( this.children.length ) {\n            this.children[0].focus();\n        }\n    }\n};\n\n\n/**\n * Redefine default component focus to set panel as active even when give focus to children components.\n */\nPanel.prototype.focus = function () {\n    if ( this.focusable ) {\n        this.parent.panels[this.parent.focusIndex].$node.classList.remove('active');\n        this.parent.panels[this.parent.focusIndex].$node.classList.remove('top');\n\n        Component.prototype.focus.call(this);\n\n        this.parent.focusIndex = this.index;\n        this.$node.classList.add('active');\n        this.$node.classList.add('top');\n\n        if ( this.index === 0 && this.parent.panels[1] && this.parent.panels[1].main ) {\n            this.parent.panels[1].$node.classList.remove('position-left');\n            this.parent.panels[1].$node.classList.add('position-right');\n\n            if ( this.parent.panels[2] ) {\n                this.parent.panels[2].$node.classList.remove('expand');\n            }\n\n            this.$node.classList.add('expand');\n        } else if ( this.index === 2 && this.parent.panels[1].main ) {\n            this.parent.panels[1].$node.classList.remove('position-right');\n            this.parent.panels[1].$node.classList.add('position-left');\n            this.parent.panels[0].$node.classList.remove('expand');\n            this.$node.classList.add('expand');\n        }\n    }\n};\n\n\n/**\n * Blur panel.\n */\nPanel.prototype.blur = function () {\n    this.parent.panels[this.parent.focusIndex].$node.classList.remove('active');\n    Component.prototype.blur.call(this);\n};\n\n\n// public\nmodule.exports = Panel;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n/**\n * Layout component implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array} [config.data] array of items to add to layout\n */\nfunction Layout ( config ) {\n    var self = this;\n\n    // sanitize\n    config = config || {};\n\n    /**\n     * Index of focused child component\n     * @type {number}\n     */\n    this.focusIndex = 0;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && config.className !== undefined && typeof config.className !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    //config.className = 'layout ' + (config.className || '');\n\n    /**\n     * Component data\n     * @type {Array}\n     */\n    this.data = [];\n\n    Component.call(this, config);\n\n    this.init(config);\n\n    // add listener to move focus between children\n    this.addListener('keydown', function ( event ) {\n        switch ( event.code ) {\n            case keys.right:\n                if ( self.children.length && self.focusIndex < self.children.length - 1 ) {\n                    self.children[++self.focusIndex].focus();\n                }\n                break;\n            case keys.left:\n                if ( self.children.length && self.focusIndex > 0 ) {\n                    self.children[--self.focusIndex].focus();\n                }\n                break;\n            case keys.back:\n                // focus parent focused item if parent is layout list\n                if ( self.parent ) {\n                    self.parent.focus();\n                    if ( self.$parentItem ) {\n                        self.parent.focusItem(self.$parentItem);\n                    }\n                }\n                break;\n        }\n    });\n}\n\n\nLayout.prototype = Object.create(Component.prototype);\nLayout.prototype.constructor = Layout;\n\n// set component name\nLayout.prototype.name = 'mag-component-layout';\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var index, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( index = 0; index < data.length; index++ ) {\n        // cell value\n        item = data[index];\n        // plain text\n        if ( typeof item === 'object' ) {\n            // HTML element or component\n            if ( item instanceof Component || item instanceof HTMLElement ) {\n                data[index] = {\n                    value: item,\n                    wrap: false\n                };\n            } else {\n                data[index].wrap = true;\n            }\n        } else {\n            // wrap with defaults\n            data[index] = {\n                value: data[index],\n                wrap: true\n            };\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nLayout.prototype.init = function ( config ) {\n    var self = this,\n        data = normalize(config.data),\n        item, $wrapper, index;\n\n    // clear element if reinit\n    while (this.$node.firstChild) {\n        this.$node.removeChild(this.$node.firstChild);\n    }\n\n    this.data = data;\n\n    /**\n     * @this Component\n     */\n    function componentClickHandler (  ) {\n        self.focusIndex = this.index;\n    }\n\n    for ( index = 0; index < data.length; index++ ) {\n        item = data[index];\n        // plain text\n        if ( typeof item.value === 'string' ) {\n            $wrapper = document.createElement('div');\n            $wrapper.textContent = item.value;\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n        } else if ( item.value instanceof HTMLElement ) {\n            // HTML Element\n\n            // if with wrapper\n            if ( item.wrap ) {\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value);\n                this.$node.appendChild($wrapper);\n            } else {\n                // without wrapper\n                this.$node.appendChild(item.value);\n            }\n        } else if ( item.value instanceof Component ) {\n            // component\n            // force propagate events\n            item.value.propagate = true;\n\n            // set index to current component\n            item.value.index = this.children.length;\n\n            // change layout focus index if click component\n            item.value.addListener('click', componentClickHandler);\n\n            // append component\n            if ( item.wrap ) {\n                // with wrapper\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value.$node);\n                this.$node.appendChild($wrapper);\n                this.children.push(item.value);\n                item.value.parent = this;\n            } else {\n                // without wrapper\n                this.add(item.value);\n            }\n        } else {\n            $wrapper = document.createElement('div');\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n        }\n    }\n};\n\n\nmodule.exports = Layout;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n/**\n * Magsdk panel set implementation\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {Array} [config.panels] array of panels to use\n * @param {Array} [config.focusIndex=0] focus panel index\n * @constructor\n * @extends Component\n */\nfunction PanelSet ( config ) {\n    var self = this,\n        index;\n\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.panels && !Array.isArray(config.panels) || !config.panels.length ) {\n            throw new Error(__filename + ': wrong config.panels type');\n        }\n    }\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'panelSet ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    this.panels = config.panels;\n\n    /**\n     * Index of current active panel\n     *\n     * @type {number}\n     */\n    this.focusIndex = 0;\n\n    // set special panels classes\n    if ( config.panels && !config.panels[0].main ) {\n        config.panels[0].$node.classList.add('left');\n        // small resolution special class\n        config.panels[0].$node.classList.add('expand');\n    }\n\n    if (  config.panels && config.panels[1] && config.panels[1].main ) {\n        // small resolution special class\n        config.panels[1].$node.classList.add('position-right');\n    }\n\n    if ( config.panels && config.panels[2] && config.panels[1].main ) {\n        config.panels[2].$node.classList.add('right');\n    }\n\n    // add panels\n    if ( config.panels ) {\n        this.add.apply(this, config.panels);\n    }\n\n    // panel keydown handler to set focus panel\n    function keydownHandler ( event ) {\n        switch ( event.code ) {\n            case keys.left:\n                if ( self.focusIndex > 0 ) {\n                    self.panels[self.focusIndex - 1].focus();\n                }\n                break;\n            case keys.right:\n                if ( self.focusIndex < self.panels.length - 1 ) {\n                    self.panels[self.focusIndex + 1].focus();\n                }\n                break;\n        }\n    }\n\n    // add special listener\n    for ( index = 0; index < this.panels.length; index++ ) {\n        this.panels[index].addListeners({\n            keydown: keydownHandler\n        });\n        // set panels indexes\n        this.panels[index].index = index;\n    }\n\n    /*if ( config.focusIndex && config.focusIndex < this.panels.length ) {\n     this.panels[config.focusIndex].focus();\n     } else {\n     if ( config.panels.length > 1 ) {\n     this.panels[1].focus();\n     } else {\n     this.panels[0].focus();\n     }\n     }*/\n}\n\nPanelSet.prototype = Object.create(Component.prototype);\nPanelSet.prototype.constructor = PanelSet;\n\n// set component name\nPanelSet.prototype.name = 'mag-component-panel-set';\n\n\n/**\n *\n */\nPanelSet.prototype.focus = function () {\n    Component.prototype.focus.call(this);\n    this.panels[this.focusIndex].focus();\n};\n\n/**\n *\n */\nPanelSet.prototype.blur = function () {\n    this.panels[this.focusIndex].blur();\n};\n\nmodule.exports = PanelSet;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n/**\n * Layout component implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array} [config.data] array of items to add to layout\n */\nfunction Layout ( config ) {\n    var self = this;\n\n    // sanitize\n    config = config || {};\n\n    /**\n     * Index of focused child component\n     * @type {number}\n     */\n    this.focusIndex = 0;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && config.className !== undefined && typeof config.className !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    //config.className = 'layout ' + (config.className || '');\n\n    /**\n     * Component data\n     * @type {Array}\n     */\n    this.data = [];\n\n    /**\n     *  Hash map of item links\n     */\n    this.links = {};\n\n    Component.call(this, config);\n\n    this.init(config);\n\n    // add listener to move focus between children\n    this.addListener('keydown', function ( event ) {\n        switch ( event.code ) {\n            case keys.right:\n                if ( self.children.length && self.focusIndex < self.children.length - 1 ) {\n                    self.children[++self.focusIndex].focus();\n                }\n                break;\n            case keys.left:\n                if ( self.children.length && self.focusIndex > 0 ) {\n                    self.children[--self.focusIndex].focus();\n                }\n                break;\n            case keys.back:\n                // focus parent focused item if parent is layout list\n                if ( self.parent ) {\n                    self.parent.focus();\n                    if ( self.$parentItem ) {\n                        self.parent.focusItem(self.$parentItem);\n                    }\n                }\n                break;\n        }\n    });\n}\n\n\nLayout.prototype = Object.create(Component.prototype);\nLayout.prototype.constructor = Layout;\n\n// set component name\nLayout.prototype.name = 'mag-component-layout';\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var index, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( index = 0; index < data.length; index++ ) {\n        // cell value\n        item = data[index];\n        // plain text\n        if ( typeof item === 'object' ) {\n            // HTML element or component\n            if ( item instanceof Component || item instanceof HTMLElement ) {\n                data[index] = {\n                    value: item,\n                    wrap: false\n                };\n            } else {\n                data[index].wrap = true;\n            }\n        } else {\n            // wrap with defaults\n            data[index] = {\n                value: data[index],\n                wrap: true\n            };\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nLayout.prototype.init = function ( config ) {\n    var self = this,\n        data = normalize(config.data),\n        item, $wrapper, index;\n\n    // clear element if reinit\n    while (this.$node.firstChild) {\n        this.$node.removeChild(this.$node.firstChild);\n    }\n\n    this.data = data;\n\n    /**\n     * @this Component\n     */\n    function componentClickHandler () {\n        self.focusIndex = this.index;\n    }\n\n    for ( index = 0; index < data.length; index++ ) {\n        item = data[index];\n        // plain text\n        if ( typeof item.value === 'string' ) {\n            $wrapper = document.createElement('div');\n            $wrapper.textContent = item.value;\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n            if ( item.name ) {\n                this.links[item.name] = $wrapper;\n            }\n        } else if ( item.value instanceof HTMLElement ) {\n            // HTML Element\n\n            // if with wrapper\n            if ( item.wrap ) {\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value);\n                this.$node.appendChild($wrapper);\n                if ( item.name ) {\n                    this.links[item.name] = $wrapper;\n                }\n            } else {\n                // without wrapper\n                this.$node.appendChild(item.value);\n                if ( item.name ) {\n                    this.links[item.name] = item.value;\n                }\n            }\n        } else if ( item.value instanceof Component ) {\n            // component\n            // force propagate events\n            item.value.propagate = true;\n\n            // set index to current component\n            item.value.index = this.children.length;\n\n            // change layout focus index if click component\n            item.value.addListener('click', componentClickHandler);\n\n            // append component\n            if ( item.wrap ) {\n                // with wrapper\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value.$node);\n                this.$node.appendChild($wrapper);\n                this.children.push(item.value);\n                item.value.parent = this;\n                if ( item.name ) {\n                    this.links[item.name] = $wrapper;\n                }\n            } else {\n                // without wrapper\n                this.add(item.value);\n                if ( item.name ) {\n                    this.links[item.name] = item.value;\n                }\n            }\n        } else {\n            $wrapper = document.createElement('div');\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n            if ( item.name ) {\n                this.links[item.name] = $wrapper;\n            }\n        }\n    }\n};\n\n\nmodule.exports = Layout;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-modal');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-modal';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base modal window implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n */\nfunction Modal ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body ) {\n            throw new Error(__filename + ': config.$body should not be provided manually');\n        }\n    }\n\n    // create centered div\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // add table-cell wrapper\n    this.$node.appendChild(document.createElement('div').appendChild(this.$body).parentNode);\n}\n\n\n// inheritance\nModal.prototype = Object.create(Component.prototype);\nModal.prototype.constructor = Modal;\n\n// set component name\nModal.prototype.name = 'spa-component-modal';\n\n\n// public\nmodule.exports = Modal;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar List = require('mag-component-list'),\n    CheckBox = require('spa-component-checkbox'),\n    counter = 0;\n\n\n/**\n * Base radio list implementation\n *\n * @constructor\n * @extends List\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n */\nfunction RadioList ( config ) {\n    var self = this;\n\n    /**\n     * Checkbox group name\n     *\n     * @type {string}\n     */\n    this.group = 'group ' +  counter++;\n\n    /**\n     * Link to checked item\n     *\n     * @type {Element}\n     */\n    this.$checkedData = null;\n\n    //config.className = 'radioList ' + (config.className || '');\n\n    List.call(this, config);\n\n    this.addListener('click:item', function ( event ) {\n        var item = event.$item;\n\n        item.checkBox.set(true);\n        item.state = item.checkBox.value;\n        item.data.state = item.checkBox.value;\n\n        if ( self.$checkedData !== item.data ) {\n            /**\n             * Select element from list.\n             *\n             * @event\n             *\n             * @type {Object}\n             * @property {Element} previous selected element\n             * @property {Element} current selected element\n             */\n            self.emit('select', {\n                $last: self.$checkedData,\n                $curr: item\n            });\n            if ( self.$checkedData ) { self.$checkedData.state = false; }\n            self.$checkedData = item.data;\n        }\n    });\n}\n\n\nRadioList.prototype = Object.create(List.prototype);\nRadioList.prototype.constructor = RadioList;\n\n// set component name\nRadioList.prototype.name = 'mag-component-radio-list';\n\nRadioList.prototype.group = 0;\n\n\n/**\n * Default render function\n *\n * @param {Element} $item in list\n * @param {Array} data to render layout element\n * @param {string} [data.title] title of checkbox\n * @param {boolean} [data.state] state of checkbox: checked or not\n * @param {string} [data.value] special value of item\n */\nRadioList.prototype.renderItemDefault = function ( $item, data ) {\n    var table = document.createElement('table'),\n        tr = document.createElement('tr'),\n        td = document.createElement('td'),\n        check = new CheckBox({\n            group: this.group\n        });\n\n    $item.innerHTML = '';\n\n    // set state with set function to prevent multiple true values\n    if ( data.state ) {\n        check.set(true);\n        // set link to checked item\n        this.$checkedData = data;\n    }\n\n    table.appendChild(tr);\n\n    td.appendChild(check.$node);\n    td.className = 'checkBoxWrapper';\n    tr.appendChild(td);\n\n    td = document.createElement('td');\n    td.className = 'title';\n    td.innerText = data.title || '';\n    tr.appendChild(td);\n\n    $item.checkBox = check;\n\n    $item.state = check.value;\n    $item.value = data.value;\n\n\n    $item.appendChild(table);\n};\n\n// RadioList.prototype.setData = function ( config ) {\n//     var i;\n//\n//     List.prototype.setData.call(this, config);\n//\n//     for ( i = 0; i < this.data.length; i++ ) {\n//         if ( this.data[i].state ) {\n//             this.$checkedData = this.data[i];\n//             break;\n//         }\n//     }\n//\n// };\n\nRadioList.prototype.renderItem = RadioList.prototype.renderItemDefault;\n\n\nmodule.exports = RadioList;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component'),\n    keys      = require('spa-keys'),\n    // set of groups with linked components;\n    groups    = {};\n\n\n/**\n * Base check box implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {boolean} [config.value=false] initial state\n * @param {string} [config.group] group name to work synchronously with other checkboxes\n *\n * @example\n * var CheckBox = require('stb/ui/check.box'),\n *     checkBox = new CheckBox({\n *         value: true,\n *         group: 'lang'\n *     });\n */\nfunction CheckBox ( config ) {\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.group && typeof config.group !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.group');\n        }\n    }\n\n    // set default className if classList property empty or undefined\n    //config.className = 'checkBox ' + (config.className || '');\n\n    // state\n    this.value = !!config.value;\n\n    // correct init styles\n    if ( this.value ) {\n        config.className += ' checked';\n    }\n\n    // group name to work synchronously with other checkboxes\n    this.group = null;\n\n    // apply hierarchy\n    if ( config.group ) {\n        // correct init styles\n        config.className += ' grouped';\n\n        // save\n        this.group = config.group;\n\n        // fill groups data\n        if ( groups[config.group] === undefined ) {\n            groups[config.group] = [this];\n        } else {\n            groups[config.group].push(this);\n        }\n    }\n\n    // parent constructor call\n    Component.call(this, config);\n}\n\n\n// inheritance\nCheckBox.prototype = Object.create(Component.prototype);\nCheckBox.prototype.constructor = CheckBox;\n\n// set component name\nCheckBox.prototype.name = 'spa-component-checkbox';\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nCheckBox.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse click events.\n     */\n    click: function () {\n        // invert state\n        this.set(!this.value);\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        // emulate click\n        if ( event.code === keys.enter ) {\n            this.set(!this.value);\n        }\n    }\n};\n\n\n/**\n * Set the given state.\n * Does nothing in case the value is already as necessary.\n *\n * @param {boolean} value new value to set\n * @return {boolean} operation status\n *\n * @fires module:\"stb/ui/check.box~CheckBox#change\"\n */\nCheckBox.prototype.set = function ( value ) {\n    var index, length;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n    }\n\n    if ( this.value !== value ) {\n        // going to be turned on and assigned to some group\n        if ( !this.value && this.group !== null ) {\n            // unset all checkboxes in this group\n            for ( index = 0, length = groups[this.group].length; index < length; index++ ) {\n                groups[this.group][index].set(false);\n            }\n        }\n\n        // set new value\n        this.value = !this.value;\n\n        // set visible changes\n        this.$node.classList.toggle('checked');\n\n        // there are some listeners\n        if ( this.events['change'] ) {\n            /**\n             * Update progress value.\n             *\n             * @event module:stb/ui/check.box~CheckBox#change\n             *\n             * @type {Object}\n             * @property {boolean} value current check state\n             */\n            this.emit('change', {value: this.value});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = CheckBox;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-scrollbar');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-scrollbar';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base scroll bar implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {number} [config.value=0] initial thumb position\n * @param {number} [config.realSize=100] actual scroll size\n * @param {number} [config.viewSize=10] visible area size\n * @param {number} [config.type] direction\n *\n * @example\n * var ScrollBar = require('stb/ui/scroll.bar'),\n *     scrollBar = new ScrollBar({\n *         viewSize: 5,\n *         realSize: 25,\n *         events: {\n *             done: function () {\n *                 debug.log('ScrollBar: done');\n *             },\n *             change: function ( data ) {\n *                 debug.log('ScrollBar: change to ' + data.curr + ' from ' + data.prev);\n *             }\n *         }\n *     });\n */\nfunction ScrollBar ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Visible area size.\n     *\n     * @type {number}\n     */\n    this.viewSize = 10;\n\n    /**\n     * Scroll area actual height or width (if scroll is horizontal).\n     *\n     * @type {number}\n     */\n    this.realSize = 100;\n\n    /**\n     * Scroll thumb position.\n     *\n     * @type {number}\n     */\n    this.value = 0;\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Geometry of the scroll thumb element.\n     *\n     * @type {ClientRect}\n     */\n    this.thumbRect = null;\n\n    /**\n     * Geometry of the scroll track element.\n     *\n     * @type {ClientRect}\n     */\n    this.trackRect = null;\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'scrollBar ' + (config.className || '');\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // insert thumb line\n    this.$thumb = this.$body.appendChild(document.createElement('div'));\n\n    // correct CSS class name\n    this.$thumb.className = 'thumb';\n\n    // component setup\n    this.init(config);\n}\n\n\n// inheritance\nScrollBar.prototype = Object.create(Component.prototype);\nScrollBar.prototype.constructor = ScrollBar;\n\n// set component name\nScrollBar.prototype.name = 'spa-component-scrollbar';\n\nScrollBar.prototype.TYPE_VERTICAL   = 1;\nScrollBar.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Init or re-init realSize/viewSize/value parameters.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nScrollBar.prototype.init = function ( config ) {\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // set actual scroll size\n    if ( config.realSize !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.realSize) !== config.realSize ) {\n                throw new Error(__filename + ': config.realSize value must be a number');\n            }\n        }\n\n        // apply\n        this.realSize = config.realSize;\n    }\n\n    // set visible area size\n    if ( config.viewSize !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.viewSize) !== config.viewSize ) {\n                throw new Error(__filename + ': config.viewSize value must be a number');\n            }\n            if ( config.viewSize < 0 ) {\n                throw new Error(__filename + ': config.viewSize value must be greater than 0');\n            }\n        }\n\n        // apply\n        this.viewSize = config.viewSize;\n    }\n\n    // show or hide thumb\n    if ( this.viewSize >= this.realSize ) {\n        this.$thumb.classList.add('hidden');\n    } else {\n        this.$thumb.classList.remove('hidden');\n    }\n\n    // set thumb position\n    if ( config.value !== undefined ) {\n        // apply\n        this.scrollTo(config.value);\n    }\n\n    // set thumb size\n    if ( this.type === this.TYPE_VERTICAL ) {\n        this.$thumb.style.height = (this.viewSize / this.realSize * 100) + '%';\n    } else {\n        this.$thumb.style.width = (this.viewSize / this.realSize * 100) + '%';\n    }\n\n    // geometry\n    this.thumbRect = this.$thumb.getBoundingClientRect();\n    this.trackRect = this.$node.getBoundingClientRect();\n};\n\n\n/**\n * Set position of the given value.\n * Does nothing in case when scroll is in the end and passed value is more than scroll bar length.\n *\n * @param {number} value new value to set\n * @return {boolean} operation result\n *\n * @fires module:stb/ui/scroll.bar~ScrollBar#done\n * @fires module:stb/ui/scroll.bar~ScrollBar#change\n */\nScrollBar.prototype.scrollTo = function ( value ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(value) !== value ) {\n            throw new Error(__filename + ': value must be a number');\n        }\n        if ( this.realSize > this.viewSize && value > this.realSize - this.viewSize ) {\n            throw new Error(__filename + ': value is greater than this.realSize-this.viewSize');\n        }\n        if ( value < 0 ) {\n            throw new Error(__filename + ': value is less then 0');\n        }\n    }\n\n    // value has changed\n    if ( this.value !== value ) {\n        // track and thumb geometry was not set\n        if ( this.thumbRect.height === 0 || this.thumbRect.width === 0 ) {\n            // apply\n            this.trackRect = this.$node.getBoundingClientRect();\n            this.thumbRect = this.$thumb.getBoundingClientRect();\n        }\n\n        // set scroll bar width\n        if ( this.type === this.TYPE_VERTICAL ) {\n            this.$thumb.style.marginTop = ((this.trackRect.height - this.thumbRect.height) * value / (this.realSize - this.viewSize)) + 'px';\n        } else {\n            this.$thumb.style.marginLeft = ((this.trackRect.width - this.thumbRect.width) * value / (this.realSize - this.viewSize)) + 'px';\n        }\n\n        // there are some listeners\n        if ( this.events['change'] ) {\n            /**\n             * Update scroll value.\n             *\n             * @event module:stb/ui/scroll.bar~ScrollBar#change\n             *\n             * @type {Object}\n             * @property {number} prev old/previous scroll value\n             * @property {number} curr new/current scroll value\n             */\n            this.emit('change', {curr: value, prev: this.value});\n        }\n\n        // is it the end?\n        if ( value >= this.realSize ) {\n            value = this.realSize;\n\n            // there are some listeners\n            if ( this.events['done'] ) {\n                /**\n                 * Set scroll to its maximum value.\n                 *\n                 * @event module:stb/ui/scroll.bar~ScrollBar#done\n                 */\n                this.emit('done');\n            }\n        }\n\n        // set new value\n        this.value = value;\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = ScrollBar;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component'),\n    keys      = require('stb-keys');\n\n\n/**\n * Scroll area implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} config object\n * @param {number} [config.step] step in % of screen height to scroll area\n */\nfunction ScrollArea ( config ) {\n\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    /**\n     * Step to scroll area in % of screen height\n     *\n     * @type {number}\n     */\n    this.step = 5;\n\n    /**\n     * Real height of scroll area\n     *\n     * @type {number}\n     */\n    this.realHeight = 0;\n\n    /**\n     * Visible height of area\n     *\n     * @type {number}\n     */\n    this.viewHeight = 0;\n\n    /**\n     * Top position of scroll container\n     *\n     * @type {number}\n     */\n    this.topPosition = 0;\n\n    /**\n     * Associated ScrollBar component link.\n     *\n     * @type {ScrollBar}\n     */\n    this.scroll = null;\n\n    Component.call(this, config);\n\n    this.$node.appendChild(this.$body);\n\n    // component setup\n    this.init(config);\n}\n\n\nScrollArea.prototype = Object.create(Component.prototype);\nScrollArea.prototype.constructor = ScrollArea;\n\n// set component name\nScrollArea.prototype.name = 'mag-component-scroll-area';\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nScrollArea.prototype.defaultEvents = {\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n                this.move(event.code);\n                break;\n        }\n    },\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n    }\n};\n\n\n/**\n * Attempt to go beyond the edge of the list.\n *\n * @event\n *\n * @type {Object}\n * @property {number} direction key code initiator of movement\n */\n\n\n/**\n * Move ScrollArea content\n *\n * @param {number} direction to move\n */\nScrollArea.prototype.move = function ( direction ) {\n    var height = screen.height,\n        delta  = this.viewHeight - this.realHeight;\n\n    // run logic only if it's reasonable to navigate\n    if ( delta < 0 ) {\n        switch ( direction ) {\n            case keys.down:\n                if ( this.topPosition - this.step * height / 100 < delta ) {\n                    this.scroll.scrollTo(-delta);\n                    this.$body.style.top = delta + 'px';\n                    this.emit('overflow', {direction: direction});\n\n                    return;\n                }\n\n                this.topPosition -= Math.ceil(this.step * height / 100);\n\n                if ( this.scroll ) {\n                    this.scroll.scrollTo(-this.topPosition);\n                }\n                this.$body.style.top = this.topPosition + 'px';\n                break;\n            case keys.up:\n                if ( this.topPosition + this.step * height / 100 > 0 ) {\n                    this.scroll.scrollTo(0);\n                    this.$body.style.top = '0px';\n                    this.emit('overflow', {direction: direction});\n\n                    return;\n                }\n                this.topPosition += Math.ceil(this.step * height / 100);\n\n                if ( this.scroll ) {\n                    this.scroll.scrollTo(-this.topPosition);\n                }\n                this.$body.style.top = this.topPosition + 'px';\n                break;\n        }\n    } else {\n        this.emit('overflow', {direction: direction});\n    }\n};\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nScrollArea.prototype.init = function ( config ) {\n\n    config = config || {};\n\n    this.realHeight = this.$body.offsetHeight;\n    this.viewHeight = this.$node.offsetHeight;\n    this.topPosition = 0;\n    this.$body.style.top = this.topPosition + 'px';\n\n    if ( config.scroll ) {\n        this.scroll = config.scroll;\n    }\n\n    if ( config.step ) {\n        this.step = config.step;\n    }\n\n    if ( this.scroll ) {\n        this.scroll.init({\n            realSize: this.realHeight,\n            viewSize: this.viewHeight,\n            value: this.topPosition\n        });\n    }\n};\n\nmodule.exports = ScrollArea;\n","/**\n * Exit from an app in three ways.\n *\n * @module app.exit\n */\n\n'use strict';\n\nvar app     = require('mag-app'),\n    browser = core.plugins.browser,\n    exit    = {};\n\ncore.addListener('exit', function () {\n    require('../modules/storage').saveData(app.storage);\n    browser.exit();\n});\n\n\n/**\n * Go back to Launcher from an app.\n */\nexit.goBack = function () {\n    core.call('stop');\n};\n\n\n/**\n * Exit from an app by pressing \"Exit/Home\" button.\n */\nexit.goHome = function () {\n    if ( browser.standalone ) {\n        browser.exit();\n    } else {\n        core.call('hide');\n    }\n};\n\n\n/**\n * Exit from an app.\n * Destroy all application instances.\n * If callback function provided, and callback returns boolean 'true', application will stay alive.\n *\n * @param {Function} [callback] - provide callback if u want to handle exit result, or cancel it\n */\nexit.goExit = function ( callback ) {\n    var ModalMessage  = require('mag-component-modal'),\n        LayoutList    = require('mag-component-layout-list'),\n        keys          = require('stb-keys'),\n        previousFocus = app.activePage.activeComponent,\n        exitModal;\n\n    app.activePage.add(exitModal = new ModalMessage({\n        title: gettext('Exit'),\n        events: {\n            show: function () {\n                this.children[0].focus();\n            },\n            hide: function () {\n                previousFocus.focus();\n            }\n        },\n        children: [\n            new LayoutList({\n                className: 'padded',\n                size: 2,\n                focusIndex: 0,\n                cycle: true,\n                data: [\n                    {\n                        items: [\n                            {\n                                value: gettext('Yes')\n                            }\n                        ],\n                        click: function () {\n                            if ( typeof callback === 'function' ) {\n                                if ( callback(true) ) {\n                                    exitModal.hide();\n                                    exitModal.remove();\n\n                                    return;\n                                }\n                            }\n\n                            exitModal.hide();\n                            exitModal.remove();\n\n                            if ( browser.standalone ) {\n                                browser.exit();\n                            } else {\n                                core.call('exit');\n                            }\n                        }\n                    },\n                    {\n                        items: [\n                            {\n                                value: gettext('No')\n                            }\n                        ],\n                        click: function () {\n                            if ( typeof callback === 'function' ) {\n                                callback(false);\n                            }\n                            exitModal.hide();\n                            exitModal.remove();\n                            app.mainPanelSet.focus();\n                        }\n                    }\n                ],\n                events: {\n                    keydown: function ( event ) {\n                        LayoutList.prototype.defaultEvents.keydown.call(this, event);\n                        if ( event.code === keys.back ) {\n                            event.stop = true;\n                            if ( typeof callback === 'function' ) {\n                                callback(false);\n                            }\n                            exitModal.hide();\n                            exitModal.remove();\n                            app.mainPanelSet.focus();\n                        }\n                    }\n                }\n            })\n        ]\n    }));\n\n    exitModal.show();\n    exitModal.focus();\n};\n\n\nmodule.exports = exit;\n","/**\n * Specific set of extensions for usual input.\n *\n * @module web.input\n */\n\n'use strict';\n\nvar ProgressBar = require('spa-component-progress-bar'),\n    parse       = require('cjs-uri').parse;\n\n\nmodule.exports = {\n    /**\n     * Set and configure favicon icon for web input.\n     *\n     * @param {string} url - URL from which we want to get favicon\n     *\n     * @return {string} favicon url\n     */\n    setFavicon: function ( url ) {\n        var parsedUrl = parse(url);\n\n        return parsedUrl.protocol + '://' + parsedUrl.authority + '/favicon.ico?' + Date.now();\n    },\n\n    /**\n     * Set and configure progress bar for web input.\n     *\n     * @param {Object} config - configuration properties\n     *\n     * @return {ProgressBar} new instance\n     */\n    setProgressBar: function ( config ) {\n        config = config || {};\n\n        config.events = {\n            done: function () {\n                //console.log('ProgressBar: done');\n            },\n            change: function ( /*data*/ ) {\n                //console.log('ProgressBar: change to ' + data.curr + ' from ' + data.prev);\n            }\n        };\n\n        return new ProgressBar(config);\n    },\n\n    /**\n     * Set visual effect that something is in Favorites list.\n     *\n     * @param {Element} $element - element with indicator\n     * @param {boolean} state - is in Favorites\n     */\n    fillStar: function ( $element, state ) {\n        $element.classList[state ? 'add' : 'remove']('theme-icon-favorite-active');\n        $element.classList[state ? 'add' : 'remove']('active');\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base progress bar implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {number} [config.value=0] initial value\n * @param {number} [config.max=100] max progress value\n * @param {number} [config.min=0] min progress value\n */\nfunction ProgressBar ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    /**\n     * Max progress value.\n     *\n     * @type {number}\n     */\n    this.max = 100;\n\n    /**\n     * Min progress value.\n     *\n     * @type {number}\n     */\n    this.min = 0;\n\n    /**\n     * Initial progress position.\n     *\n     * @type {number}\n     */\n    this.value = 0;\n\n    /**\n     * Value of the one percent step\n     *\n     * @type {number}\n     */\n    this.step = 1;\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'progressBar ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // insert bar line\n    this.$value = this.$body.appendChild(document.createElement('div'));\n\n    // correct CSS class name\n    this.$value.className = 'value';\n\n    // component setup\n    this.init(config);\n}\n\n\n// inheritance\nProgressBar.prototype = Object.create(Component.prototype);\nProgressBar.prototype.constructor = ProgressBar;\n\n// set component name\nProgressBar.prototype.name = 'spa-component-progress-bar';\n\n\n/**\n * Set position of the given value.\n * Does nothing in case when progress is end and passed value is more than max value.\n *\n * @param {number} value new value to set\n * @return {boolean} operation result\n *\n * @fires module:stb/ui/progress.bar~ProgressBar#done\n * @fires module:stb/ui/progress.bar~ProgressBar#change\n */\nProgressBar.prototype.set = function ( value ) {\n    var prevValue = this.value;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(value) !== value ) {\n            throw new Error(__filename + ': value must be a number');\n        }\n    }\n\n    // value changed but in the given range\n    if ( this.value !== value && value <= this.max && value >= this.min ) {\n        // set new value\n        this.value = value;\n\n        // get value in percents\n        value = Math.abs(this.value - this.min) / this.step;\n\n        if ( value === 100 ) {\n            // there are some listeners\n            if ( this.events['done'] ) {\n                /**\n                 * Set progress to its maximum value.\n                 *\n                 * @event module:stb/ui/progress.bar~ProgressBar#done\n                 */\n                this.emit('done');\n            }\n        }\n\n        // set progress bar width\n        this.$value.style.width = value + '%';\n\n        // there are some listeners\n        if ( this.events['change'] ) {\n            /**\n             * Update progress value.\n             *\n             * @event module:stb/ui/progress.bar~ProgressBar#change\n             *\n             * @type {Object}\n             * @property {number} prev old/previous progress value\n             * @property {number} curr new/current progress value\n             */\n            this.emit('change', {curr: this.value, prev: prevValue});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Init or re-init current max or/and min or/and value.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nProgressBar.prototype.init = function ( config ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // set max progress value\n    if ( config.max !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.max) !== config.max ) {\n                throw new Error(__filename + ': config.max value must be a number');\n            }\n        }\n\n        // apply\n        this.max = config.max;\n    }\n\n    // set min progress value\n    if ( config.min !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.min) !== config.min ) {\n                throw new Error(__filename + ': config.min value must be a number');\n            }\n        }\n\n        // apply\n        this.min = config.min;\n    }\n\n    if ( DEVELOP ) {\n        if ( this.min >= this.max ) {\n            throw new Error(__filename + ': this.min value must be less than this.max');\n        }\n    }\n\n    // set actual progress value\n    if ( config.value !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.value) !== config.value ) {\n                throw new Error(__filename + ': config.value must be a number');\n            }\n            if ( config.value > this.max ) {\n                throw new Error(__filename + ': config.value more than config.maximum');\n            }\n            if ( config.value < this.min ) {\n                throw new Error(__filename + ': config.value less than config.minimum');\n            }\n        }\n\n        // apply\n        this.value = config.value;\n    }\n\n    this.step = Math.abs(this.max - this.min) / 100;\n\n    // init bar size, (this.min - this.value) - calculate distance from start\n    this.$value.style.width = (Math.abs(this.min - this.value) / this.step) + '%';\n};\n\n\n// public\nmodule.exports = ProgressBar;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n\n/**\n * URL parsing tool.\n *\n * @license The MIT License (MIT)\n * @copyright Steven Levithan <stevenlevithan.com>\n *\n * @param {string} str string to parse\n *\n * @return {Object.<string, string>} result data\n */\nfunction parseUri ( str ) {\n    var options = parseUri.options,\n        matched = options.parser[options.strictMode ? 'strict' : 'loose'].exec(str),\n        uri     = {},\n        index   = 14;\n\n    while ( index-- ) {\n        uri[options.key[index]] = matched[index] || '';\n    }\n\n    uri[options.q.name] = {};\n\n    /* eslint no-unused-vars: 0 */\n    uri[options.key[12]].replace(options.q.parser, function ( $0, $1, $2 ) {\n        if ( $1 ) { uri[options.q.name][$1] = $2; }\n    });\n\n    return uri;\n}\n\nparseUri.options = {\n    strictMode: false,\n    key: [\n        'source',\n        'protocol',\n        'authority',\n        'userInfo',\n        'user',\n        'password',\n        'host',\n        'port',\n        'relative',\n        'path',\n        'directory',\n        'file',\n        'query',\n        'anchor'\n    ],\n    q: {\n        name: 'queryKey',\n        parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n    },\n    parser: {\n        // eslint-disable-next-line\n        strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n        // eslint-disable-next-line\n        loose:  /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n    }\n};\n\n\n// public\nmodule.exports = {\n    parse: parseUri\n};\n","/**\n * Construct and render image previews.\n *\n * @module preview.bookmark\n */\n\n'use strict';\n\nvar app = require('mag-app');\n\n\n/**\n * Render image/photo preview with given properties.\n *\n * @param {Object} page - working page\n * @param {string} url - resource uri\n * @param {Object} item - particular image data\n */\n\nmodule.exports = function ( page, url, item ) {\n    var random            = require('./random'),\n        request           = require('./request'),\n        div               = require('./div'),\n        resolution        = screen.height,\n        image             = new Image(),\n        loadAttemptsCount = 0,\n        baseUrls          = [\n            'free.pagepeeker.com',\n            'free2.pagepeeker.com',\n            'free3.pagepeeker.com',\n            'free4.pagepeeker.com'\n        ],\n        sizes             = {\n            480: {\n                thumb: 's',\n                dummy: '/img/480/bookmark.placeholder.png'\n            },\n            576: {\n                thumb: 's',\n                dummy: '/img/576/bookmark.placeholder.png'\n            },\n            720: {\n                thumb: 'm',\n                dummy: '/img/720/bookmark.placeholder.png'\n            },\n            1080: {\n                thumb: 'l',\n                dummy: '/img/1080/bookmark.placeholder.png'\n            }\n        },\n        imageContainer;\n\n    image.onload = function () {\n        var nodes = [\n            imageContainer = div('imagePreviewContainer'),\n            div('title theme-subhead-color', gettext('Name') + ':'),\n            div(null, item.title),\n            div('title theme-subhead-color', gettext('URL') + ':'),\n            div('previewBookmarkUrl', item.url)\n        ];\n\n        page.textArea.$body.innerHTML = '';\n\n        nodes.forEach(function ( node ) {\n            page.textArea.$body.appendChild(node);\n        });\n\n        page.textArea.show();\n        page.textArea.init();\n        imageContainer.style.backgroundImage = 'url(' + image.src + ')';\n    };\n\n    image.onerror = function () {\n        image.src = sizes[resolution].dummy;\n\n        if ( loadAttemptsCount++ < app.config.bookmarkPreviewLoadAttemptsLimit ) {\n            image.onload();\n        }\n    };\n\n    if ( url[url.length - 1] === '/' ) {\n        url = url.substring(0, url.length - 1);\n    }\n\n    (new Image()).src = 'http://free.pagepeeker.com/v2/thumbs.php?size=' + sizes[resolution].thumb + '&refresh=1&url=' + url;\n\n    request('get', 'http://free.pagepeeker.com/v2/thumbs_ready.php?size=' + sizes[resolution].thumb + '&url=' + url, function ( data ) {\n        image.src = data && data.IsReady ? 'http://' + baseUrls[random(0, 3)] + '/v2/thumbs.php?size=' + sizes[resolution].thumb + '&url=' + url : sizes[resolution].dummy;\n    }, {charset: 'utf-8'}, 'json');\n};\n","'use strict';\n\nmodule.exports = function random ( min, max ) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n","/**\n * Create fine tuned Ajax request.\n *\n * @module request\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @author Yaroslav Surilov <y.surilov@infomir.com>\n */\n\n'use strict';\n\n/**\n * Ajax request.\n *\n * @param {string} method - \"post\", \"get\" or \"head\"\n * @param {string} url - URL address\n * @param {Function} callback - callback handler\n * @param {Object} [headers] - list of optional headers like \"charset\", \"Content-Type\" and so on\n * @param {string} [type=text] - data parsing mode: plain text (default), xml, json\n * @param {boolean} [async=true] - send asynchronous request\n *\n * @return {XMLHttpRequest} request object in case response headers are necessary\n *\n * @example\n * request(\n *     'get',\n *     'https://google.com/',\n *     function ( data, status ) {\n *         console.info(data, status);\n *     },\n *     {\n *         charset:'utf-8'\n *     }\n * );\n */\nmodule.exports = function ( method, url, callback, headers, type, async ) {\n    var jdata   = null,\n        timeout = null,\n        xhr     = new XMLHttpRequest(),\n        title   = 'AJAX ' + method.toUpperCase() + ' ' + url,\n        hname;\n\n    async = async !== false;\n    xhr.onreadystatechange = function () {\n        if ( xhr.readyState === 4 ) {\n            clearTimeout(timeout);\n            console.log('status:' + xhr.status + ', length:' + xhr.responseText.length, title);\n            //console.log(xhr.responseText, title);\n            if ( type === 'json' && xhr.status === 200 ) {\n                try {\n                    jdata = JSON.parse(xhr.responseText);\n                } catch ( ex ) {\n                    console.log('error AJAX JSON.parse');\n                    jdata = null;\n                }\n            }\n            if ( typeof callback === 'function' ) {\n                callback(type === 'xml' ? xhr.responseXML : (type === 'json' ? jdata : xhr.responseText), xhr.status, xhr); // eslint-disable-line\n            }\n        }\n    };\n    xhr.open(method, url, async);\n    // set headers if present\n    if ( headers ) {\n        for ( hname in headers ) {\n            if ( headers.hasOwnProperty(hname) ) {\n                xhr.setRequestHeader(hname, headers[hname]);\n            }\n        }\n    }\n    xhr.send();\n    console.log('sent', title);\n    // abort after some time (60s)\n    timeout = setTimeout(function () {\n        xhr.abort();\n        console.log('ABORT on timeout', title);\n        if ( typeof callback === 'function' ) {\n            callback(null, 0);\n        }\n    }, 60000);\n\n    return xhr;\n};\n","/**\n * Application intents sender.\n *\n * @module intent\n */\n\n'use strict';\n\nvar app = require('mag-app');\n\n\n/**\n * Current scheme of event order:\n *\n * HOME/EXIT   -> core hide() -> intent close() -> core hide()\n * BACK/CANCEL -> intent close()\n * OK/ENTER    -> intent done() -> intent close()\n */\n\n\n/**\n * Open Keyboard.\n *\n * @param {Object} config - configuration for intent\n * @param {Function} [callback] - invoked on successful result\n */\nexports.openKeyboard = function ( config, callback ) {\n    var done = false;\n\n    core.addListener('hide', function () {\n        app.flags.ignoreMessages = true;\n    });\n\n    core.intent({\n        action: 'keyboard',\n        data: {\n            title: config.title,\n            value: config.value || ''\n        },\n        events: {\n            done: function ( event ) {\n                if ( callback ) {\n                    callback(event);\n                }\n\n                done = true;\n            },\n            close: function () {\n                if ( !done && callback ) {\n                    callback({value: config.value});\n                }\n            }\n        }\n    }, function ( error ) {\n        console.log('Error in keyboard intent: ' + error);\n    });\n};\n\n\n/**\n * Send intent to Downloads with given data.\n *\n * @param {Object} config - configuration for intent\n * @param {Function} onClose - close event handler\n */\nexports.openDownloads = function ( config, onClose ) {\n    core.intent({\n        action: 'download',\n        data: {\n            title: config.title,\n            uri:   config.uri\n        },\n        events: {\n            close: onClose\n        }\n    }, function ( error ) {\n        if ( error ) {\n            core.notify({\n                title: (config.uri ? gettext('Error loading file') + ': ' : '') + error.message,\n                icon:  'alert',\n                type:  'warning'\n            });\n        }\n    });\n};\n\n\n/**\n * Send intent to Player with given data.\n *\n * @param {Object} config - configuration for intent\n * @param {Function} onClose - close event handler\n */\nexports.startPlayback = function ( config, onClose ) {\n    core.intent({\n        action: 'play',\n        mime: config.mime,\n        data: {\n            title: config.title,\n            uri:   config.uri\n        },\n        events: {\n            error: function () {\n                console.log('Player error happens!');\n            },\n            close: onClose\n        }\n    });\n};\n\n\n/**\n * Open Task Manager.\n *\n * @param {Function} onClose - close event handler\n */\nexports.openTaskManager = function ( onClose ) {\n    core.intent({\n        action: 'taskmanager:show',\n        data: {},\n        events: {\n            close: onClose\n        }\n    });\n};\n\n\n/**\n * Open System Settings.\n *\n * @param {Function} onClose - close event handler\n */\nexports.openSystemSettings = function ( onClose ) {\n    core.intent({\n        action: 'setup',\n        events: {\n            close: onClose\n        }\n    });\n};\n","/**\n * Validate URL.\n *\n * @module validate.url\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @author Yaroslav Surilov <y.surilov@infomir.com>\n */\n\n'use strict';\n\n/**\n * Return whether the passed string is valid URL.\n *\n * @param {string} url - URL to validate\n *\n * @return {boolean} is given string valid URL\n */\nmodule.exports = function ( url ) {\n    // eslint-disable-next-line\n    return new RegExp(\"^(((http|https|udp|rtp|rtsp|mms|mmsh|mmst|rtmp|igmp):\\\\/\\\\/)?@?(([a-zA-Z0-9а-яА-Я$\\\\-_.+!*'(),;:&=]|%[0-9a-fA-Fа-яА-Я]{2})+@)?(((25[0-5]|2[0-4][0-9]|[0-1][0-9][0-9]|[1-9][0-9]|[0-9])(\\\\.(25[0-5]|2[0-4][0-9]|[0-1][0-9][0-9]|[1-9][0-9]|[0-9])){3})|localhost|([a-zA-Zа-яА-Я0-9\\\\-\\\\u00C0-\\\\u017F]+\\\\.)+([a-zA-Zа-яА-Я]{2,}))(:[0-9]+)?|((file:\\/\\/\\/|\\/)[a-zA-Zа-яА-Я0-9\\\\-\\\\u00C0-\\\\u017F]+))(\\\\/(([a-zA-Zа-яА-Я0-9$\\\\-_.+!*'(),;:@&=\\\\s]|%[0-9a-fA-Fа-яА-Я]{2})*(\\\\/([a-zA-Zа-яА-Я0-9$\\\\-_.+!*'(),;:@&=\\\\s]|%[0-9a-fA-Fа-яА-Я]{2})*)*)?(\\\\?([a-zA-Zа-яА-Я0-9$\\\\-_.+!*'(),;:@&=\\\\/?]|%[0-9a-fA-Fа-яА-Я]{2})*)?(\\\\#([a-zA-Zа-яА-Я0-9$\\\\-_.+!*'(),;:@&=\\\\/?]|%[0-9a-fA-Fа-яА-Я]{2})*)?)?$\").test(url);\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-page');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-page';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base page implementation.\n *\n * A full-screen top-level layer that can operate as an independent separate entity.\n * It is added to the document body on creation if not already linked.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n *\n * @example\n * var Page = require('stb/ui/page'),\n *     page = new Page({\n *         $node: document.getElementById(id)\n *     });\n *\n * page.addListener('show', function show () {\n *     // page is visible now\n * });\n */\nfunction Page ( config ) {\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    /**\n     * Page visibility/active state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.active = false;\n\n    /**\n     * Link to the currently active component with focus.\n     *\n     * @readonly\n     * @type {Component}\n     */\n    this.activeComponent = null;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'page ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // state flag\n    this.active = this.$node.classList.contains('active');\n\n    // correct DOM parent/child connection if necessary\n    if ( this.$node.parentNode === null ) {\n        document.body.appendChild(this.$node);\n    }\n\n    // always itself\n    this.page = this;\n}\n\n\n// inheritance\nPage.prototype = Object.create(Component.prototype);\nPage.prototype.constructor = Page;\n\n// set component name\nPage.prototype.name = 'spa-component-page';\n\n\n// public\nmodule.exports = Page;\n"],"sourceRoot":""}