{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/stb-keys/index.js","webpack:///./node_modules/spa-dom/index.js","webpack:///./node_modules/mag-app/index.js","webpack:///./node_modules/mag-component-layout/index.js","webpack:///./node_modules/spa-app/lib/core.js","webpack:///./node_modules/spa-component/index.js","webpack:///./node_modules/stb-component-page/index.js","webpack:///./node_modules/stb-component/index.js","webpack:///./node_modules/mag-component-list/index.js","webpack:///./src/js/utils/toggle.favorite.js","webpack:///./node_modules/cjs-emitter/index.js","webpack:///./src/js/renders/item.list.js","webpack:///./node_modules/mag-component-layout-list/index.js","webpack:///./node_modules/mag-component-modal/index.js","webpack:///./node_modules/spa-keys/index.js","webpack:///./node_modules/spa-app/lib/events.js","webpack:///./node_modules/stb-app/lib/css.js","webpack:///./src/js/components/item.list.js","webpack:///./src/js/utils/prepare.movies.js","webpack:///./src/js/utils/prepare.movie.data.js","webpack:///./src/js/components/info.panel.js","webpack:///./node_modules/stb-component-scrollbar/index.js","webpack:///./node_modules/mag-component-radio-list/index.js","webpack:///./node_modules/langs/data.js","webpack:///./src/js/utils/init.info.js","webpack:///./src/js/main.js","webpack:///./node_modules/mag-app/lib/main.js","webpack:///./node_modules/cjs-query/index.js","webpack:///./src/js/config.js","webpack:///./node_modules/stb-shim-classlist/index.js","webpack:///./node_modules/stb-app/lib/metrics.js","webpack:///./src/js/metrics.js","webpack:///./node_modules/mag-app/lib/css.js","webpack:///../helpers/longpress.js","webpack:///./node_modules/spa-gettext/index.js","webpack:///./node_modules/cjs-gettext/index.js","webpack:///./src/js/pages/main.js","webpack:///./node_modules/spa-component-page/index.js","webpack:///./src/js/components/main.panel.js","webpack:///./src/js/utils/prepare.main.movies.js","webpack:///./src/js/pages/movies.js","webpack:///./node_modules/stb-component-modal/index.js","webpack:///./node_modules/spa-component-modal/index.js","webpack:///./node_modules/mag-component-modal-check-list/index.js","webpack:///./node_modules/mag-component-check-list/index.js","webpack:///./node_modules/spa-component-scrollbar/index.js","webpack:///./src/js/utils/init.years.js","webpack:///./src/js/components/grid.js","webpack:///./src/js/pages/info.js","webpack:///./src/js/utils/prepare.screenshots.js","webpack:///./src/js/utils/prepare.seasons.js","webpack:///./src/js/utils/sort.quality.js","webpack:///./src/js/utils/select.file.js","webpack:///./src/js/utils/langs.convert.js","webpack:///./src/js/utils/prepare.series.js","webpack:///./src/js/utils/prepare.files.js","webpack:///./node_modules/cjs-iso-639/index.js","webpack:///./src/js/renders/series.list.js","webpack:///./src/js/pages/more.js","webpack:///./node_modules/mag-component-scroll-area/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","keys","back","backspace","channelNext","tab","channelPrev","ok","enter","exit","escape","volumeUp","volumeDown","f1","f2","f3","f4","refresh","frame","phone","set","tv","menu","app","rewind","forward","audio","standby","keyboard","usbMounted","usbUnmounted","playPause","play","pause","stop","power","record","info","mute","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","dom","tag","tagName","attrList","content","index","node","document","createElement","arguments","length","appendChild","createTextNode","fragment","createDocumentFragment","add","tagDst","Node","remove","nodes","count","parentNode","removeChild","clear","lastChild","Component","Layout","config","self","this","focusIndex","data","links","init","addListener","event","code","right","children","focus","left","parent","$parentItem","focusItem","constructor","item","$wrapper","HTMLElement","wrap","normalize","$node","firstChild","componentClickHandler","textContent","className","propagate","push","Emitter","parse","query","location","search","substring","activePage","route","pageTo","page","pageFrom","active","id","classList","events","emit","showPage","from","to","counter","visible","focusable","$body","hide","defaultEvents","forEach","eventName","apply","addEventListener","stopPropagation","child","activeComponent","blur","splice","indexOf","activeItem","show","callback","setTimeout","List","$focusItem","viewIndex","type","TYPE_VERTICAL","size","cycle","scroll","provider","TYPE_HORIZONTAL","renderItemDefault","$item","innerText","renderItem","mousewheel","wheelDeltaY","move","up","down","wheelDeltaX","keydown","pageUp","pageDown","home","end","idx","currSize","onClick","undefined","render","blocked","error","setData","realSize","maxCount","viewSize","head","pos","blurItem","renderView","itemData","prevIndex","currIndex","mark","innerHTML","ready","scrollTo","direction","force","previousSibling","nextSibling","$prev","$curr","markItem","state","video","changeFlags","favorite","once","onceWrapper","removeListener","addListeners","callbacks","filter","fn","Array","slice","layout","layoutConfig","items","inner","click","handlers","LayoutList","$noData","fixedData","currentNode","currentData","childNodes","$wrap","noData","Element","StbComponentModal","Modal","$overlay","onkeydown","$header","$text","title","icon","$icon","space","insert","del","DOMContentLoaded","load","unload","eventLocal","keyCode","ctrlKey","altKey","shiftKey","keypress","link","rel","href","metrics","height","ItemList","bufferSize","$title","inFocus","focusPosition","Math","ceil","startIndex","createItem","bufferBefore","mainList","bufferAfter","refreshData","listData","removeItem","initItem","checkClassStates","abs","delta","lastIndex","pop","unshift","insertBefore","shift","tempIndex","hasEmptyItems","prepareMovieData","$date","$focusWrapper","$blurWrapper","$backgroundFocus","$backgroundBlur","result","original_name","poster","cover","censored","category","core","accessControl","style","backgroundImage","genresName","genres","map","genre","join","backend","host","prepared","InfoPanel","$movie","$rating","$ratingKino","$ratingImdb","$ageLimit","gettext","$country","$year","$genre","$duration","$description","$info","$seeMore","fillMovie","needRating","rating_imdb","display","rating_kinopoisk","age","country","year","duration","description","showInfo","showMovie","showSeeMore","clearRating","classIcon","classIconActive","RadioList","classChecked","checkedData","checkedIndex","previousCheckedData","checkIndex","defaultCheckedIndex","defaultFocusIndex","resetData","clearChecked","table","tr","td","check","checkBox","getItemNodeByIndex","local","1","2","2T","2B","3","infoPanel","$panel","$censor","$director","$actors","$img","api","plugins","videoBackend","environment","language","pages","main","movies","more","window","getCoreInstance","platform","body","setAttribute","contextmenu","preventDefault","split","part","decodeURIComponent","stringify","params","encodeURIComponent","types","file","season","series","delay","modalShow","documentElement","DOMTokenList","el","_element","_classCache","classes","replace","token","contains","toString","toggle","screenHeight","screen","availHeight","availTop","availBottom","availWidth","width","availLeft","availRight","480","grid","lineSize","lineCache","lineCount","cache","moviesGrid","x","y","modal","buttonList","seasonsList","seriesList","screenList","infoSroll","576","720","1080","linkCSS","theme","path","longClick","timer","pressed","fired","LONG_CLICK_TIMEOUT","keyToChange","emitKeyCode","emitCode","emitKeydown","redefine","eventType","clearTimeout","Gettext","loader","prepare","_","pgettext","ngettext","defaultLanguage","xhr","ext","XMLHttpRequest","onload","JSON","responseText","onerror","ontimeout","open","send","meta","msgId","context","plural","evalResult","eval","searchLayout","searchValue","mainPanel","cacheData","favoriteList","watchedList","leftLayout","Page","MainPanel","utils","prepareMainMovies","toggleFavorite","itemListRender","timers","getElementById","clickItem","line","request","focusLine","focusList","onFocusDebounceTimeout","getItems","limit","getList","initMainGrid","focus:item","click:item","intent","action","done","focus:line","overflow","emptyItems","getSections","change:watched","checkStatus","movie","listLink","mime","dataReady","getItemData","itemIndex","continueIndex","updateIndex","start","focusToLine","dataIndex","newItem","si","fillBufferAfter","blurLine","initView","initItems","countBefore","countAfter","stack","fillData","list","finishCheck","selectedIndex","prepareMovies","fill","modalSelectGenre","modalSelectYear","modalSortFilm","filtersList","sortList","ModalMessage","ModalCheckList","initYears","Grid","requestConfig","noEvents","getMovies","button","blured","focused","sizeX","sizeY","focusX","focusY","emptyLine","checked:change","titleLinks","offset","genreId","years","select","sort","sortby","getGenres","ids","CheckList","Scroll","listClickEvents","unique","uniqueItem","changeState","titleCounter","$titleCount","defaultState","ScrollBar","thumbRect","trackRect","$thumb","getBoundingClientRect","marginTop","marginLeft","curr","prev","Date","getFullYear","loadData","$focusLine","cycleX","cycleY","createLineDefault","createLine","translate","lastViewindex","fillRow","row","ix","indexX","indexY","before","lines","defaultTranslate","idxY","idxX","arr","posX","posY","$prevLine","lenght","infoBlock","buttonMore","buttons","buttonsData","buttonsDataWatch","buttonsSerialsWatch","prevPage","fillFileList","seasonsButton","seasonData","scrollPosition","selectFileModal","fileList","episode","episodes","CacheList","prepareScreenshots","prepareSeasons","sortQuality","selectFile","prepareSeries","prepareFiles","configFiles","configRequest","infoData","saveVideo","position","progress","metadata","watched_status","watched_time","changeWatchedFile","statusText","disabled","status","$focus","$blur","prepareToPlay","next","selectNextFile","languages","files","prevFocus","close","uri","is_tv_series","custName","lang","audioLang","subtitles","mediaId","cont","url","getUrl","fillSeason","fillSeries","seasonId","getSeries","number","startLastWatched","indexes","checkFile","last_watched_file_id","last_watched_season_id","last_watched_episode_id","getEpisode","episodeId","episodeData","continueWatching","watchAgain","scrollTop","history","year_end","director","actors","screenshots","getSeasons","seasons","all","$container","getSubtitleUri","getUri","itemA","itemB","quality","langCodes","selected","langs","codes","$status","langCode","subList","tempLang","ScrollArea","textArea","step","realHeight","viewHeight","topPosition","top","offsetHeight"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 25);\n","/**\n * Global list of non-printable control key codes.\n *\n * At the moment `keypress` and `keydown` events are emitted for the same keys (for both printable and non-printable characters).\n *\n * WARNING!!! All codes in this file (except 'volumeUp' and 'volumeDown')\n * are used in window 'keydown' handler to prevent wrong 'keypress' firings.\n * If you add new code to this file 'keypress' event with this code will never fire.\n *\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar keys = require('spa-keys');\n\n\n// extend with additional codes\nkeys.back         = keys.backspace;\nkeys.channelNext  = keys.tab;        // Tab\nkeys.channelPrev  = keys.tab + 's';  // Shift+Tab\nkeys.ok           = keys.enter;      // Enter\nkeys.exit         = keys.escape;     // Esc\nkeys.volumeUp     = 107;             // NUMPAD +\nkeys.volumeDown   = 109;             // NUMPAD -\nkeys.f1           = 112 + 'c';       // Ctrl+F1\nkeys.f2           = 113 + 'c';       // Ctrl+F2\nkeys.f3           = 114 + 'c';       // Ctrl+F3\nkeys.f4           = 115 + 'c';       // Ctrl+F4\nkeys.refresh      = 116 + 'c';       // Ctrl+F5\nkeys.frame        = 117 + 'c';       // Ctrl+F6\nkeys.phone        = 119 + 'c';       // Ctrl+F8\nkeys.set          = 120 + 'c';       // Ctrl+F9\nkeys.tv           = 121 + 'c';       // Ctrl+F10\nkeys.menu         = 122 + 'c';       // Ctrl+F11\nkeys.app          = 123 + 'c';       // Ctrl+F12\nkeys.rewind       = 66  + 'a';       // Alt+B\nkeys.forward      = 70  + 'a';       // Alt+F\nkeys.audio        = 71  + 'a';       // Alt+G\nkeys.standby      = 74  + 'a';       // Alt+J\nkeys.keyboard     = 76  + 'a';       // Alt+L\nkeys.usbMounted   = 80  + 'a';       // Alt+P\nkeys.usbUnmounted = 81  + 'a';       // Alt+Q\nkeys.playPause    = 82  + 'a';       // Alt+R\nkeys.play         = -1;              // should be redefined on some platforms\nkeys.pause        = -1;              // should be redefined on some platforms\nkeys.stop         = 83  + 'a';       // Alt+S\nkeys.power        = 85  + 'a';       // Alt+U\nkeys.record       = 87  + 'a';       // Alt+W\nkeys.info         = 89  + 'a';       // Alt+Y\nkeys.mute         = 192 + 'a';\nkeys.digit0       = 48;\nkeys.digit1       = 49;\nkeys.digit2       = 50;\nkeys.digit3       = 51;\nkeys.digit4       = 52;\nkeys.digit5       = 53;\nkeys.digit6       = 54;\nkeys.digit7       = 55;\nkeys.digit8       = 56;\nkeys.digit9       = 57;\n\n\n// public\nmodule.exports = keys;\n\n// public\n// module.exports = {\n//     getCode: function ( event ) {\n//         var code = event.keyCode;\n//\n//         // apply key modifiers\n//         if ( event.shiftKey ) { code += 1000; }\n//         if ( event.altKey )   { code += 2000; }\n//\n//         return code;\n//     },\n//\n//     codes: {\n//         back:         8,    // Backspace\n//         channelPrev:  1009, // Shift+Tab\n//         channelNext:  9,    // Tab\n//         ok:           13,   // Enter\n//         exit:         27,   // Esc\n//         pageUp:       33,\n//         pageDown:     34,\n//         end:          35,\n//         home:         36,\n//         left:         37,\n//         up:           38,\n//         right:        39,\n//         down:         40,\n//         'delete':     46,\n//         volumeUp:     107,  // NUMPAD +\n//         volumeDown:   109,  // NUMPAD -\n//         f1:           112,  // F1\n//         f2:           113,  // F2\n//         f3:           114,  // F3\n//         f4:           115,  // F4\n//         refresh:      116,  // F5\n//         frame:        117,  // F6\n//         phone:        119,  // F8\n//         set:          120,  // F9\n//         tv:           121,  // F10\n//         menu:         122,  // F11\n//         app:          123,  // F12\n//         rewind:       2066, // Alt+B\n//         forward:      2070, // Alt+F\n//         audio:        2071, // Alt+G\n//         standby:      2074, // Alt+J\n//         keyboard:     2076, // Alt+L\n//         usbMounted:   2080, // Alt+P\n//         usbUnmounted: 2081, // Alt+Q\n//         playPause:    2082, // Alt+R\n//         stop:         2083, // Alt+S\n//         power:        2085, // Alt+U\n//         record:       2087, // Alt+W\n//         info:         2089, // Alt+Y\n//         mute:         2192\n//     }\n// };\n","/**\n * HTML elements low-level handling.\n *\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n/* eslint no-unused-vars: 0 */\n\n/**\n * DOM manipulation module\n */\nvar dom = {};\n\n\n/**\n * Create a new HTML element.\n *\n * @param {string} tagName mandatory tag name\n * @param {Object|null} [attrList] element attributes\n * @param {...*} [content] element content (primitive value/values or other nodes)\n * @return {Node|null} HTML element or null on failure\n *\n * @example\n * dom.tag('table');\n * dom.tag('div', {}, 'some text');\n * dom.tag('div', {className:'top'}, dom.tag('span'), dom.tag('br'));\n * dom.tag('link', {rel:'stylesheet', type:'text/css', href:'http://some.url/'});\n */\ndom.tag = function ( tagName, attrList, content ) {\n    var node = null,\n        index, name;\n\n    // minimal param is given\n    if ( tagName ) {\n        // empty element\n        node = document.createElement(tagName);\n\n        // optional attribute list is given\n        if ( attrList && typeof attrList === 'object' ) {\n            for ( name in attrList ) {\n                // extend a new node with the given attributes\n                node[name] = attrList[name];\n            }\n        }\n\n        // content (arguments except the first two)\n        for ( index = 2; index < arguments.length; index++ ) {\n            // some data is given\n            if ( arguments[index] ) {\n                // regular HTML tag or plain data\n                node.appendChild(\n                    typeof arguments[index] === 'object' ? arguments[index] : document.createTextNode(arguments[index])\n                );\n            }\n        }\n\n    }\n\n    return node;\n};\n\n\n/**\n * Create a new DocumentFragment filled with the given non-empty elements if any.\n *\n * @param {...*} [node] fragment content (primitive value/values or other nodes)\n * @return {DocumentFragment} new placeholder\n *\n * @example\n * // gives an empty fragment element\n * dom.fragment();\n * // gives a fragment element with 3 div element inside\n * dom.fragment(dom.tag('div'), div2, div3);\n * // mixed case\n * dom.fragment('some text', 123, div3);\n */\ndom.fragment = function ( node ) {\n    // prepare placeholder\n    var fragment = document.createDocumentFragment(),\n        index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        node = arguments[index];\n        // some data is given\n        if ( node ) {\n            // regular HTML tag or plain data\n            fragment.appendChild(typeof node === 'object' ? node : document.createTextNode(node));\n        }\n    }\n\n    return fragment;\n};\n\n\n/**\n * Add the given non-empty data (HTML element/text or list) to the destination element.\n *\n * @param {Node} tagDst element to receive children\n * @param {...*} [content] element content (primitive value/values or other nodes)\n * @return {Node|null} the destination element - owner of all added data\n *\n * @example\n * // simple text value\n * add(some_div, 'Hello world');\n * // single DOM Element\n * add(some_div, some_other_div);\n * // DOM Element list\n * add(some_div, div1, div2, div3);\n * // mixed case\n * add(some_div, div1, 'hello', 'world');\n */\ndom.add = function ( tagDst, content ) {\n    var index;\n\n    // valid HTML tag as the destination\n    if ( tagDst instanceof Node ) {\n        // append all except the first one\n        for ( index = 1; index < arguments.length; index++ ) {\n            // some data is given\n            if ( arguments[index] ) {\n                // regular HTML tag or plain data\n                tagDst.appendChild(\n                    typeof arguments[index] === 'object' ? arguments[index] : document.createTextNode(arguments[index])\n                );\n            }\n        }\n\n        return tagDst;\n    }\n\n    return null;\n};\n\n\n/**\n * Remove the given elements from the DOM.\n *\n * @param {...Node} [nodes] element to be removed\n * @return {boolean} operation status (true - all given elements removed)\n *\n * @example\n * dom.remove(document.querySelector('div.test'));\n * dom.remove(div1, div2, div3);\n */\ndom.remove = function ( nodes ) {\n    // amount of successfully removed nodes\n    var count = 0,\n        index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        // valid non-empty tag\n        if ( arguments[index] && arguments[index].parentNode ) {\n            if ( arguments[index].parentNode.removeChild(arguments[index]) === arguments[index] ) {\n                count++;\n            }\n        }\n    }\n\n    return arguments.length > 0 && count === arguments.length;\n};\n\n\ndom.clear = function ( node ) {\n    while ( node.lastChild ) {\n        node.removeChild(node.lastChild);\n    }\n};\n\n\n// public\nmodule.exports = dom;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar app = require('./lib/main');\n\n\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n/**\n * Layout component implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array} [config.data] array of items to add to layout\n */\nfunction Layout ( config ) {\n    var self = this;\n\n    // sanitize\n    config = config || {};\n\n    /**\n     * Index of focused child component\n     * @type {number}\n     */\n    this.focusIndex = 0;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && config.className !== undefined && typeof config.className !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    //config.className = 'layout ' + (config.className || '');\n\n    /**\n     * Component data\n     * @type {Array}\n     */\n    this.data = [];\n\n    /**\n     *  Hash map of item links\n     */\n    this.links = {};\n\n    Component.call(this, config);\n\n    this.init(config);\n\n    // add listener to move focus between children\n    this.addListener('keydown', function ( event ) {\n        switch ( event.code ) {\n            case keys.right:\n                if ( self.children.length && self.focusIndex < self.children.length - 1 ) {\n                    self.children[++self.focusIndex].focus();\n                }\n                break;\n            case keys.left:\n                if ( self.children.length && self.focusIndex > 0 ) {\n                    self.children[--self.focusIndex].focus();\n                }\n                break;\n            case keys.back:\n                // focus parent focused item if parent is layout list\n                if ( self.parent ) {\n                    self.parent.focus();\n                    if ( self.$parentItem ) {\n                        self.parent.focusItem(self.$parentItem);\n                    }\n                }\n                break;\n        }\n    });\n}\n\n\nLayout.prototype = Object.create(Component.prototype);\nLayout.prototype.constructor = Layout;\n\n// set component name\nLayout.prototype.name = 'mag-component-layout';\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var index, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( index = 0; index < data.length; index++ ) {\n        // cell value\n        item = data[index];\n        // plain text\n        if ( typeof item === 'object' ) {\n            // HTML element or component\n            if ( item instanceof Component || item instanceof HTMLElement ) {\n                data[index] = {\n                    value: item,\n                    wrap: false\n                };\n            } else {\n                data[index].wrap = true;\n            }\n        } else {\n            // wrap with defaults\n            data[index] = {\n                value: data[index],\n                wrap: true\n            };\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nLayout.prototype.init = function ( config ) {\n    var self = this,\n        data = normalize(config.data),\n        item, $wrapper, index;\n\n    // clear element if reinit\n    while (this.$node.firstChild) {\n        this.$node.removeChild(this.$node.firstChild);\n    }\n\n    this.data = data;\n\n    /**\n     * @this Component\n     */\n    function componentClickHandler () {\n        self.focusIndex = this.index;\n    }\n\n    for ( index = 0; index < data.length; index++ ) {\n        item = data[index];\n        // plain text\n        if ( typeof item.value === 'string' ) {\n            $wrapper = document.createElement('div');\n            $wrapper.textContent = item.value;\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n            if ( item.name ) {\n                this.links[item.name] = $wrapper;\n            }\n        } else if ( item.value instanceof HTMLElement ) {\n            // HTML Element\n\n            // if with wrapper\n            if ( item.wrap ) {\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value);\n                this.$node.appendChild($wrapper);\n                if ( item.name ) {\n                    this.links[item.name] = $wrapper;\n                }\n            } else {\n                // without wrapper\n                this.$node.appendChild(item.value);\n                if ( item.name ) {\n                    this.links[item.name] = item.value;\n                }\n            }\n        } else if ( item.value instanceof Component ) {\n            // component\n            // force propagate events\n            item.value.propagate = true;\n\n            // set index to current component\n            item.value.index = this.children.length;\n\n            // change layout focus index if click component\n            item.value.addListener('click', componentClickHandler);\n\n            // append component\n            if ( item.wrap ) {\n                // with wrapper\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value.$node);\n                this.$node.appendChild($wrapper);\n                this.children.push(item.value);\n                item.value.parent = this;\n                if ( item.name ) {\n                    this.links[item.name] = $wrapper;\n                }\n            } else {\n                // without wrapper\n                this.add(item.value);\n                if ( item.name ) {\n                    this.links[item.name] = item.value;\n                }\n            }\n        } else {\n            $wrapper = document.createElement('div');\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n            if ( item.name ) {\n                this.links[item.name] = $wrapper;\n            }\n        }\n    }\n};\n\n\nmodule.exports = Layout;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    parse   = require('cjs-query').parse,\n    app     = new Emitter();\n\n\n/**\n * Make the given inactive/hidden page active/visible.\n * Pass some data to the page and trigger the corresponding event.\n *\n * @param {Page} page item to show\n * @param {*} [data] data to send to page\n *\n * @return {boolean} operation status\n */\nfunction showPage ( page, data ) {\n    // page available and can be hidden\n    if ( page && !page.active ) {\n        // apply visibility\n        page.$node.classList.add('active');\n        page.active = true;\n        app.activePage = page;\n\n        debug.info('show component ' + page.name + '#' + page.id, null, {\n            tags: ['show', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' show', 'green');\n\n        // there are some listeners\n        if ( page.events['show'] ) {\n            // notify listeners\n            page.emit('show', {data: data});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n/**\n * Make the given active/visible page inactive/hidden and trigger the corresponding event.\n *\n * @param {Page} page item to hide\n *\n * @return {boolean} operation status\n */\nfunction hidePage ( page ) {\n    // page available and can be hidden\n    if ( page && page.active ) {\n        // apply visibility\n        page.$node.classList.remove('active');\n        page.active  = false;\n        app.activePage = null;\n\n        debug.info('hide component ' + page.name + '#' + page.id, null, {\n            tags: ['hide', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' hide', 'grey');\n\n        // there are some listeners\n        if ( page.events['hide'] ) {\n            // notify listeners\n            page.emit('hide');\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n// url request params\napp.query = parse(document.location.search.substring(1));\n\n\n// global application configuration\n// in config.js file in js root\napp.config = require('app:config');\n\n\n// the only visible page\napp.activePage = null;\n\n\n/**\n * Browse to a given page.\n * Do nothing if the link is invalid. Otherwise hide the current, show new and update the \"previous\" link.\n *\n * @param {Page} pageTo instance of the page to show\n * @param {*} [data] options to pass to the page on show\n *\n * @return {boolean} operation status\n */\napp.route = function ( pageTo, data ) {\n    var pageFrom = app.activePage;\n\n    if ( DEVELOP ) {\n        //if ( router.pages.length > 0 ) {\n        if ( !pageTo || typeof pageTo !== 'object' ) {\n            throw new Error(__filename + ': wrong pageTo type');\n        }\n        if ( !('active' in pageTo) ) {\n            throw new Error(__filename + ': missing field \"active\" in pageTo');\n        }\n        //}\n    }\n\n    // valid not already active page\n    if ( pageTo && !pageTo.active ) {\n        //debug.log('router.navigate: ' + pageTo.id, pageTo === pageFrom ? 'grey' : 'green');\n        debug.info('app route: ' + pageTo.name + '#' + pageTo.id, null, {tags: ['route', pageTo.name, pageTo.id]});\n\n        // update url\n        //location.hash = this.stringify(name, data);\n\n        // apply visibility\n        hidePage(app.activePage);\n        showPage(pageTo, data);\n\n        // there are some listeners\n        if ( this.events['route'] ) {\n            // notify listeners\n            this.emit('route', {from: pageFrom, to: pageTo});\n        }\n\n        // store\n        //this.history.push(pageTo);\n\n        return true;\n    }\n\n    //debug.warn('invalid page to route: ' + pageTo.id, null, {tags: ['route', 'page', pageTo.id]});\n    console.warn('invalid page to route: ' + pageTo.id);\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    Emitter = require('cjs-emitter'),\n    counter = 0;\n\n\n/**\n * Base component implementation.\n *\n * Visual element that can handle sub-components.\n * Each component has a DOM element container $node with a set of classes:\n * \"component\" and some specific component class names depending on the hierarchy, for example \"page\".\n * Each component has a unique ID given either from $node.id or from data.id. If not given will generate automatically.\n *\n * @constructor\n * @extends Emitter\n *\n * @param {Object} [config={}] init parameters\n * @param {Element} [config.id] component unique identifier (generated if not set)\n * @param {string} [config.className] space-separated list of classes for \"className\" property of this.$node\n * @param {Element} [config.$node] DOM element/fragment to be a component outer container\n * @param {Element} [config.$body] DOM element/fragment to be a component inner container (by default is the same as $node)\n * @param {Component} [config.parent] link to the parent component which has this component as a child\n * @param {Array.<Component>} [config.children=[]] list of components in this component\n * @param {Object.<string, function>} [config.events={}] list of event callbacks\n * @param {boolean} [config.visible=true] component initial visibility state flag\n * @param {boolean} [config.focusable=true] component can accept focus or not\n * @param {boolean} [config.propagate=false] allow to emit events to the parent component\n *\n * @fires module:stb/component~Component#click\n *\n * @example\n * var component = new Component({\n *     $node: document.getElementById(id),\n *     className: 'bootstrap responsive',\n *     events: {\n *         click: function () { ... }\n *     }\n * });\n * component.add( ... );\n * component.focus();\n */\nfunction Component ( config ) {\n    // current execution context\n    var self = this,\n        name;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.id && typeof config.id !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.id');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$node && !(config.$node instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$node type');\n        }\n        if ( config.$body && !(config.$body instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$body type');\n        }\n        if ( config.parent && !(config.parent instanceof Component) ) {\n            throw new Error(__filename + ': wrong config.parent type');\n        }\n        if ( config.children && !Array.isArray(config.children) ) {\n            throw new Error(__filename + ': wrong config.children type');\n        }\n    }\n\n    /**\n     * Component visibility state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.visible = true;\n\n    /**\n     * Component can accept focus or not.\n     *\n     * @type {boolean}\n     */\n    this.focusable = true;\n\n    /**\n     * DOM outer handle.\n     *\n     * @type {Element}\n     */\n    this.$node = null;\n\n    /**\n     * DOM inner handle.\n     * In simple cases is the same as $node.\n     *\n     * @type {Element}\n     */\n    this.$body = null;\n\n    /**\n     * Link to the parent component which has this component as a child.\n     *\n     * @type {Component}\n     */\n    this.parent = null;\n\n    /**\n     * List of all children components.\n     *\n     * @type {Component[]}\n     */\n    this.children = [];\n\n    /**\n     * allow to emit events to the parent component\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.propagate = !!config.propagate;\n\n    // parent constructor call\n    Emitter.call(this);\n\n    // outer handle - empty div in case nothing is given\n    this.$node = config.$node || document.createElement('div');\n\n    // inner handle - the same as outer handler in case nothing is given\n    this.$body = config.$body || this.$node;\n\n    // set CSS class names\n    //this.$node.className += ' component ' + (config.className || '');\n    // previous approach is not good as it mess with components hierarchy\n    this.$node.className = this.name + ' ' + (config.className || '');\n\n    // apply component id if given, generate otherwise\n    this.id = config.id || this.$node.id || 'cid' + counter++;\n\n    // apply hierarchy\n    if ( config.parent ) {\n        // add to parent component\n        config.parent.add(this);\n    }\n\n    // apply given visibility\n    if ( config.visible === false ) {\n        // default state is visible\n        this.hide();\n    }\n\n    // apply focus handling method\n    if ( config.focusable === false ) {\n        // can't accept focus\n        this.focusable = false;\n    }\n\n    // a descendant defined own events\n    if ( this.defaultEvents ) {\n        // sanitize\n        config.events = config.events || {};\n\n        if ( DEVELOP ) {\n            if ( typeof config.events !== 'object' ) {\n                throw new Error(__filename + ': wrong config.events type');\n            }\n            if ( typeof this.defaultEvents !== 'object' ) {\n                throw new Error(__filename + ': wrong this.defaultEvents type');\n            }\n        }\n\n        for ( name in this.defaultEvents ) {\n            // overwrite default events with user-defined\n            config.events[name] = config.events[name] || this.defaultEvents[name];\n        }\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( eventName ) {\n            self.addListener(eventName, config.events[eventName]);\n        });\n    }\n\n    // apply the given children components\n    if ( config.children ) {\n        // apply\n        this.add.apply(this, config.children);\n    }\n\n    // component activation by mouse\n    this.$node.addEventListener('click', function ( event ) {\n        // left mouse button\n        //if ( event.button === 0 ) {\n        // activate if possible\n        self.focus();\n\n        // there are some listeners\n        if ( self.events['click'] ) {\n            /**\n             * Mouse click event.\n             *\n             * @event module:stb/component~Component#click\n             *\n             * @type {Object}\n             * @property {Event} event click event data\n             */\n            self.emit('click', event);\n        }\n        //}\n\n        if ( DEVELOP ) {\n            // middle mouse button\n            if ( event.button === 1 ) {\n                //debug.inspect(self, 0);\n                debug.info('\"window.link\" or \"' + self.id + '.component\"', 'this component is now available in global scope');\n                window.link = self;\n                self.$node.classList.toggle('wired');\n            }\n        }\n\n        event.stopPropagation();\n    });\n\n    if ( DEVELOP ) {\n        // expose inner ID to global scope\n        window[self.id] = self.$node;\n\n        // expose a link\n        this.$node.component = this.$body.component = this;\n        this.$node.title = this.name + '#' + this.id + ' (outer)';\n        this.$body.title = this.name + '#' + this.id + ' (inner)';\n    }\n\n    debug.info('create component ' + this.name + '#' + this.id, null, {\n        tags: ['create', 'component', this.name, this.id]\n    });\n}\n\n\n// inheritance\nComponent.prototype = Object.create(Emitter.prototype);\nComponent.prototype.constructor = Component;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nComponent.prototype.defaultEvents = null;\n\n\n/**\n * Add a new component as a child.\n *\n * @param {...Component} [child] variable number of elements to append\n *\n * @files Component#add\n *\n * @example\n * panel.add(\n *     new Button( ... ),\n *     new Button( ... )\n * );\n */\nComponent.prototype.add = function ( child ) {\n    var index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        child = arguments[index];\n\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        // apply\n        this.children.push(child);\n        child.parent = this;\n\n        // correct DOM parent/child connection if necessary\n        if ( child.$node && child.$node.parentNode === null ) {\n            this.$body.appendChild(child.$node);\n        }\n\n        debug.info('add component ' + child.name + '#' + child.id + ' to ' + this.name + '#' + this.id, null, {\n            tags: ['add', 'component', this.name, this.id, child.name, child.id]\n        });\n\n        // there are some listeners\n        if ( this.events['add'] ) {\n            /**\n             * A child component is added.\n             *\n             * @event module:stb/component~Component#add\n             *\n             * @type {Object}\n             * @property {Component} item new component added\n             */\n            this.emit('add', {item: child});\n        }\n\n        //debug.log('component ' + this.name + '#' + this.id + ' new child: ' + child.name + '#' + child.id);\n    }\n};\n\n\n/* @todo: consider activation in future */\n///**\n// * Insert component into the specific position.\n// *\n// * @param {Component} child component instance to insert\n// * @param {number} index insertion position\n// */\n//Component.prototype.insert = function ( child, index ) {\n//    var prevIndex = this.children.indexOf(child);\n//\n//    if ( DEVELOP ) {\n//        if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n//        if ( !(child instanceof Component) ) { throw new Error(__filename + ': wrong child type'); }\n//    }\n//\n//    if ( prevIndex !== -1 ) {\n//        this.children.splice(prevIndex, 1);\n//        this.$body.removeChild(child.$node);\n//    }\n//\n//    if ( index === this.children.length ) {\n//        this.$body.appendChild(child.$node);\n//    } else {\n//        this.$body.insertBefore(child.$node, this.$body.children[index]);\n//    }\n//    this.children.splice(index, 0, child);\n//\n//    if ( !child.parent ) {\n//        child.parent = this;\n//    }\n//};\n\n\n/**\n * Delete this component and clear all associated events.\n *\n * @fires module:stb/component~Component#remove\n */\nComponent.prototype.remove = function () {\n    // really inserted somewhere\n    if ( this.parent ) {\n        if ( DEVELOP ) {\n            if ( !(this.parent instanceof Component) ) {\n                throw new Error(__filename + ': wrong this.parent type');\n            }\n        }\n\n        // active at the moment\n        if ( app.activePage.activeComponent === this ) {\n            this.blur();\n            this.parent.focus();\n        }\n        this.parent.children.splice(this.parent.children.indexOf(this), 1);\n    }\n\n    // remove all children\n    this.children.forEach(function ( child ) {\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        child.remove();\n    });\n\n    this.$node.parentNode.removeChild(this.$node);\n\n    // there are some listeners\n    if ( this.events['remove'] ) {\n        /**\n         * Delete this component.\n         *\n         * @event module:stb/component~Component#remove\n         */\n        this.emit('remove');\n    }\n\n    // remove all listeners\n    this.events = {};\n\n    //debug.log('component ' + this.name + '#' + this.id + ' remove', 'red');\n    debug.info('remove component ' + this.name + '#' + this.id, null, {\n        tags: ['remove', 'component', this.name, this.id]\n    });\n};\n\n\n/**\n * Activate the component.\n * Notify the owner-page and apply CSS class.\n *\n * @param {Object} [data] custom data which passed into handlers\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#focus\n */\nComponent.prototype.focus = function ( data ) {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // this is a visual component on a page\n    // not already focused and can accept focus\n    if ( this.focusable && this !== activeItem ) {\n        // notify the current active component\n        if ( activeItem ) { activeItem.blur(); }\n\n        /* eslint consistent-this: 0 */\n\n        // apply\n        activePage.activeComponent = activeItem = this;\n        activeItem.$node.classList.add('focus');\n\n        //debug.log('component ' + this.name + '#' + this.id + ' focus');\n        debug.info('focus component ' + this.name + '#' + this.id, null, {\n            tags: ['focus', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( activeItem.events['focus'] ) {\n            /**\n             * Make this component focused.\n             *\n             * @event module:stb/component~Component#focus\n             */\n            activeItem.emit('focus', data);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Remove focus.\n * Change page.activeComponent and notify subscribers.\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#blur\n */\nComponent.prototype.blur = function () {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // apply visuals anyway\n    this.$node.classList.remove('focus');\n\n    // this is the active component\n    if ( this === activeItem ) {\n        activePage.activeComponent = null;\n\n        //debug.log('component ' + this.name + '#' + this.id + ' blur', 'grey');\n        debug.info('blur component ' + this.name + '#' + this.id, null, {\n            tags: ['blur', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['blur'] ) {\n            /**\n             * Remove focus from this component.\n             *\n             * @event module:stb/component~Component#blur\n             */\n            this.emit('blur');\n        }\n\n        return true;\n    }\n\n    debug.warn('component ' + this.name + '#' + this.id + ' attempt to blur without link to a page', null, {\n        tags: ['blur', 'component', this.name, this.id]\n    });\n\n    // nothing was done\n    return false;\n};\n\n\n/*function show ( self, data ) {\n    // correct style\n    self.$node.classList.remove('hidden');\n    // flag\n    self.visible = true;\n\n    debug.info('show component ' + self.name + '#' + self.id, null, {\n        tags: ['show', 'component', self.name, self.id]\n    });\n\n    // there are some listeners\n    if ( self.events['show'] ) {\n        /!**\n         * Make the component visible.\n         *\n         * @event module:stb/component~Component#show\n         *!/\n        self.emit('show', data);\n    }\n}*/\n\n/**\n * Make the component visible and notify subscribers.\n *\n * @param {Object} [data] custom data which passed into handlers\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#show\n */\nComponent.prototype.show = function ( data, callback ) {\n    //var self = this;\n\n    // is it hidden\n    if ( !this.visible ) {\n        /*if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(function () {\n                show(self, data);\n                callback();\n            });\n        } else {\n            // sync call\n            show(this, data);\n        }*/\n\n        // correct style\n        this.$node.classList.remove('hidden');\n        // flag\n        this.visible = true;\n\n        debug.info('show component ' + this.name + '#' + this.id, null, {\n            tags: ['show', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['show'] ) {\n            /**\n             * Make the component visible.\n             *\n             * @event module:stb/component~Component#show\n             */\n            this.emit('show', data);\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Make the component hidden and notify subscribers.\n *\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#hide\n */\nComponent.prototype.hide = function ( callback ) {\n    // is it visible\n    if ( this.visible ) {\n        // correct style\n        this.$node.classList.add('hidden');\n        // flag\n        this.visible = false;\n\n        debug.info('hide component ' + this.name + '#' + this.id, null, {\n            tags: ['hide', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['hide'] ) {\n            /**\n             * Make the component hidden.\n             *\n             * @event module:stb/component~Component#hide\n             */\n            this.emit('hide');\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = Component;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-page');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-page';\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component');\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n/* eslint complexity: [error, 37] */\n/* eslint max-lines-per-function: 1 */\n/* eslint no-fallthrough: 1 */\n/* eslint complexity: 1 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n\n/**\n * Mouse click event.\n *\n * @event module:stb/ui/list~List#click:item\n *\n * @type {Object}\n * @property {Element} $item clicked HTML item\n * @property {Event} event click event data\n */\n\n\n/**\n * Base list implementation.\n *\n * Each data item can be either a primitive value or an object with these fields:\n *\n *  Name    | Description\n * ---------|-------------\n *  value   | actual cell value to render\n *  mark    | is it necessary or not to render this cell as marked\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array}    [config.data=[]]     component data to visualize\n * @param {function} [config.render]      method to build each grid cell content\n * @param {function} [config.navigate]    method to move focus according to pressed keys\n * @param {number}   [config.size=5]      amount of visible items on a page\n * @param {number}   [config.viewIndex=0] move view window to this position on init\n * @param {number}   [config.focusIndex]  list item index to make item focused (move view window to this position)\n * @param {boolean}  [config.cycle=true]  allow or not to jump to the opposite side of a list when there is nowhere to go next\n * @param {boolean}  [config.scroll=null] associated ScrollBar component link\n * @param {Object}   [config.provider]    data provider\n *\n * @fires module:stb/ui/list~List#click:item\n */\nfunction List ( config ) {\n    // current execution context\n    //var self = this;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Link to the currently focused DOM element.\n     *\n     * @type {Element}\n     */\n    this.$focusItem = null;\n\n    /**\n     * Position of the visible window to render.\n     *\n     * @type {number}\n     */\n    this.viewIndex = null;\n\n    /**\n     * Component data to visualize.\n     *\n     * @type {Array}\n     */\n    this.data = [];\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Amount of visible items on a page.\n     *\n     * @type {number}\n     */\n    this.size = 5;\n\n    /**\n     * Allow or not to jump to the opposite side of a list when there is nowhere to go next.\n     *\n     * @type {boolean}\n     */\n    this.cycle = false;\n\n    /**\n     * Associated ScrollBar component link.\n     *\n     * @type {ScrollBar}\n     */\n    this.scroll = null;\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    /**\n     * Associated data provider\n     *\n     * @type {Provider}\n     */\n    this.provider = null;\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    //config.className += ' theme-main';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // component setup\n    this.init(config);\n\n    // custom navigation method\n    //if ( config.navigate ) {\n    //    if ( DEVELOP ) {\n    //        if ( typeof config.navigate !== 'function' ) { throw new Error(__filename + ': wrong config.navigate type'); }\n    //    }\n    //    // apply\n    //    this.navigate = config.navigate;\n    //}\n\n    // navigation by keyboard\n    //this.addListener('keydown', this.navigate);\n\n    // navigation by mouse\n    //this.$body.addEventListener('mousewheel', function ( event ) {\n    //    // scrolling by Y axis\n    //    if ( self.type === self.TYPE_VERTICAL && event.wheelDeltaY ) {\n    //        self.move(event.wheelDeltaY > 0 ? 38 : keys.down);\n    //    }\n    //\n    //    // scrolling by X axis\n    //    if ( self.type === self.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n    //        self.move(event.wheelDeltaX > 0 ? 37 : 39);\n    //    }\n    //});\n}\n\n\n// inheritance\nList.prototype = Object.create(Component.prototype);\nList.prototype.constructor = List;\n\n// set component name\nList.prototype.name = 'mag-component-list';\n\nList.prototype.TYPE_VERTICAL   = 1;\nList.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Fill the given item with data.\n *\n * @param {Element} $item item DOM link\n * @param {*} data associated with this item data\n */\nList.prototype.renderItemDefault = function ( $item, data ) {\n    $item.innerText = data.value;\n};\n\n\n/**\n * Method to build each list item content.\n * Can be redefined to provide custom rendering.\n *\n * @type {function}\n */\nList.prototype.renderItem = List.prototype.renderItemDefault;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nList.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse wheel events.\n     *\n     * @param {Event} event generated event\n     */\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        if ( this.type === this.TYPE_VERTICAL && event.wheelDeltaY ) {\n            this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n        }\n\n        // scrolling by X axis\n        if ( this.type === this.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n            this.move(event.wheelDeltaX > 0 ? keys.left : keys.right);\n        }\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n            case keys.right:\n            case keys.left:\n            case keys.pageUp:\n            case keys.pageDown:\n            case keys.home:\n            case keys.end:\n                // cursor move only on arrow keys\n                this.move(event.code);\n                break;\n            case keys.enter:\n                // there are some listeners\n                if ( this.events['click:item'] && this.$focusItem ) {\n                    // notify listeners\n                    this.emit('click:item', {$item: this.$focusItem, event: event});\n                }\n                break;\n        }\n    }\n};\n\n\n/**\n * Default method to move focus according to pressed keys.\n *\n * @param {Object} event generated event source of movement\n */\n//List.prototype.navigateDefault = function ( event ) {\n//    switch ( event.code ) {\n//        case 38:\n//        case 40:\n//        case 39:\n//        case 37:\n//        case 33:\n//        case 34:\n//        case 36:\n//        case 35:\n//            // cursor move only on arrow keys\n//            this.move(event.code);\n//            break;\n//        case 13:\n//            // there are some listeners\n//            if ( this.events['click:item'] ) {\n//                // notify listeners\n//                this.emit('click:item', {$item: this.$focusItem, event: event});\n//            }\n//            break;\n//    }\n//};\n\n\n/**\n * Current active method to move focus according to pressed keys.\n * Can be redefined to provide custom navigation.\n *\n * @type {function}\n */\n//List.prototype.navigate = List.prototype.navigateDefault;\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var idx, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( idx = 0; idx < data.length; idx++ ) {\n        // cell value\n        item = data[idx];\n        // primitive value\n        if ( typeof item !== 'object' ) {\n            // wrap with defaults\n            item = data[idx] = {\n                value: data[idx]\n            };\n        }\n\n        if ( DEVELOP ) {\n            //if ( !('value' in item) ) { throw new Error(__filename + ': field \"value\" is missing'); }\n            if ( ('mark' in item) && Boolean(item.mark) !== item.mark ) {\n                throw new Error(__filename + ': item.mark must be boolean');\n            }\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.init = function ( config ) {\n    var self     = this,\n        currSize = this.$body.children.length,\n        /**\n         * Item mouse click handler.\n         *\n         * @param {Event} event click event data\n         *\n         * @this Element\n         *\n         * @fires module:stb/ui/list~List#click:item\n         */\n        onClick = function ( event ) {\n            if ( this.data ) {\n                self.focusItem(this);\n\n                // there are some listeners\n                if ( self.events['click:item'] ) {\n                    // notify listeners\n                    self.emit('click:item', {$item: this, event: event});\n                }\n            }\n        },\n        item, idx;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // apply cycle behaviour\n    if ( config.cycle !== undefined ) { this.cycle = config.cycle; }\n\n    // apply ScrollBar link\n    if ( config.scroll ) { this.scroll = config.scroll; }\n\n    // apply data provider\n    if ( config.provider ) { this.provider = config.provider; }\n\n\n    // custom render method\n    if ( config.render ) {\n        if ( DEVELOP ) {\n            if ( typeof config.render !== 'function' ) {\n                throw new Error(__filename + ': wrong config.render type');\n            }\n        }\n\n        // apply\n        this.renderItem = config.render;\n    }\n\n    // list items amount on page\n    if ( config.size ) {\n        if ( DEVELOP ) {\n            if ( Number(config.size) !== config.size ) {\n                throw new Error(__filename + ': config.size must be a number');\n            }\n            if ( config.size <= 0 ) {\n                throw new Error(__filename + ': config.size should be positive');\n            }\n        }\n\n        // apply\n        this.size = config.size;\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( name ) {\n            self.events[name] = null;\n            self.addListener(name, config.events[name]);\n        });\n    }\n\n    // geometry has changed or initial draw\n    if ( this.size !== currSize ) {\n        // non-empty list\n        if ( currSize > 0 ) {\n            // clear old items\n            this.$body.innerText = null;\n        }\n\n        // create new items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            item = document.createElement('div');\n            item.index = idx;\n            //item.className = 'item theme-list-item';\n            item.className = 'item';\n\n            item.addEventListener('click', onClick);\n            this.$body.appendChild(item);\n        }\n    }\n\n    if ( this.provider ) {\n        if ( this.provider.blocked ) {\n            return;\n        }\n\n        this.provider.get( null, function ( error, data ) {\n            if ( error ) {\n                if ( self.events['data:error'] ) {\n                    /**\n                     * Provider get error while take new data\n                     *\n                     * @event module:stb/ui/list~List#data:error\n                     */\n                    self.emit('data:error', error);\n                }\n            } else {\n                if ( data ) {\n                    config.data = data;\n                    self.setData(config);\n                    if ( self.scroll ) {\n                        self.scroll.init({\n                            realSize: self.provider.maxCount,\n                            viewSize: self.provider.size,\n                            value: self.provider.head + self.provider.pos\n                        });\n                    }\n                }\n                if ( self.events['data:get'] ) {\n                    /**\n                     * Provider request new data\n                     *\n                     * @event module:stb/ui/list~List#data:get\n                     *\n                     * @type {Object}\n                     */\n                    self.emit('data:get');\n                }\n            }\n        });\n    } else if ( config.data ) {\n        this.setData(config);\n    }\n};\n\n/**\n * Set data and render inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.setData = function ( config ) {\n    // apply list of items\n\n    if ( config.data ) {\n        if ( DEVELOP ) {\n            if ( !Array.isArray(config.data) ) { throw new Error(__filename + ': wrong config.data type'); }\n        }\n        // prepare user data\n        this.data = normalize(config.data);\n    }\n\n    // view window position\n    if ( DEVELOP ) {\n        if ( config.viewIndex !== undefined ) {\n            if ( Number(config.viewIndex) !== config.viewIndex ) {\n                throw new Error(__filename + ': config.viewIndex must be a number');\n            }\n            if ( config.viewIndex < 0 ) {\n                throw new Error(__filename + ': config.viewIndex should be positive');\n            }\n        }\n    }\n\n    // reset current view window position\n    this.viewIndex = null;\n\n    if ( this.$focusItem ) {\n        this.blurItem(this.$focusItem);\n    }\n\n    if ( this.scroll ) {\n        if ( this.provider ) {\n            if ( this.scroll.realSize !== this.provider.maxCount ) {\n                this.scroll.init({\n                    realSize: this.provider.maxCount,\n                    viewSize: this.provider.size,\n                    value: this.provider.head + this.provider.pos\n                });\n            }\n        } else {\n            this.scroll.init({\n                realSize: this.data.length,\n                viewSize: this.size,\n                value: config.viewIndex || 0\n            });\n        }\n    }\n\n    // set focus item\n    if ( config.focusIndex !== undefined && this.data.length ) {\n        if ( DEVELOP ) {\n            if ( Number(config.focusIndex) !== config.focusIndex ) {\n                throw new Error(__filename + ': config.focusIndex must be a number');\n            }\n            if ( config.focusIndex < 0 ) {\n                throw new Error(__filename + ': config.focusIndex should be positive');\n            }\n            // if ( config.focusIndex > this.data.length - 1 ) {\n            //     throw new Error(__filename + ': config.focusIndex should be less than data size');\n            // }\n        }\n\n        // jump to the necessary item\n        this.focusIndex(config.focusIndex);\n    } else {\n        // go to the first page\n        this.renderView(config.viewIndex || 0);\n    }\n};\n\n\n/**\n * Shift the visible view window event.\n *\n * @event module:stb/ui/list~List#move:view\n *\n * @type {Object}\n * @property {number} prevIndex previous view window position\n * @property {number} currIndex current view window position\n */\n\n\n/**\n * Draw the visible window.\n *\n * @param {number} index start position to render\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#move:view\n */\nList.prototype.renderView = function ( index ) {\n    var $item, idx, itemData, prevIndex, currIndex;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be more than zero');\n        }\n        // if ( index >= this.data.length ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // has the view window position changed\n    if ( this.viewIndex !== index ) {\n        // save for emit\n        prevIndex = this.viewIndex;\n        // sync global pointer\n        this.viewIndex = currIndex = index;\n\n        // rebuild all visible items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            // shortcuts\n            $item    = this.$body.children[idx];\n            itemData = this.data[index];\n\n            // real item or stub\n            if ( itemData ) {\n                // correct inner data/index and render\n                $item.data  = itemData;\n                $item.index = index;\n                this.renderItem($item, itemData);\n\n                // apply CSS\n                if ( itemData.mark ) {\n                    $item.classList.add('mark');\n                } else {\n                    $item.classList.remove('mark');\n                }\n            } else {\n                // nothing to render\n                $item.data = $item.index = undefined;\n                $item.innerHTML = '&nbsp;';\n                $item.ready = false;\n            }\n            index++;\n        }\n\n        // there are some listeners\n        if ( this.events['move:view'] ) {\n            // notify listeners\n            this.emit('move:view', {prevIndex: prevIndex, currIndex: currIndex});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            this.emit('select:item', {$item: $item});\n        }\n\n        // update a linked scroll component\n        if ( this.scroll ) {\n            this.scroll.scrollTo(this.provider ? this.provider.head + this.provider.pos : this.viewIndex);\n        }\n\n        // full rebuild\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Move focus to the given direction.\n *\n * @param {number} direction arrow key code\n *\n * @fires module:stb/ui/list~List#cycle\n * @fires module:stb/ui/list~List#overflow\n */\nList.prototype.move = function ( direction ) {\n    var self = this,\n        force = false;\n\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(direction) !== direction ) {\n            throw new Error(__filename + ': direction must be a number');\n        }\n    }\n\n    // empty list\n    if ( !this.data.length ) {\n        return;\n    }\n\n    switch ( direction ) {\n        case keys.left:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.up:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index > 0 ) {\n                    if ( this.$focusItem === this.$body.firstChild ) {\n                        this.renderView(this.viewIndex - 1);\n                    } else {\n                        this.focusItem(this.$focusItem.previousSibling);\n                    }\n                } else if ( this.provider ) {\n                    if ( this.provider.blocked ) {\n                        return;\n                    }\n\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the end of the list\n                        this.move(keys.end);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.right:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.down:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index < this.data.length - 1 ) {\n                    if ( this.$focusItem === this.$body.lastChild ) {\n                        this.renderView(this.viewIndex + 1);\n                    } else {\n                        this.focusItem(this.$focusItem.nextSibling);\n                    }\n                } else if ( this.provider ) {\n                    if ( this.provider.blocked ) {\n                        return;\n                    }\n\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the beginning of the list\n                        this.move(keys.home);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.pageUp:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n\n                return;\n            }\n            if ( this.viewIndex < this.size ) {\n                // first page\n                this.renderView(0);\n            } else {\n                // second page and further\n                this.renderView(this.viewIndex - this.size + 1);\n            }\n\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.pageDown:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            // data is bigger then one page\n            if ( this.data.length > this.size ) {\n                // determine jump size\n                if ( this.viewIndex > this.data.length - this.size * 2 ) {\n                    // last page\n                    this.renderView(this.data.length - this.size);\n                } else {\n                    // before the last page\n                    this.renderView(this.viewIndex + this.size - 1);\n                }\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n        case keys.home:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n                break;\n            }\n            this.renderView(0);\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.end:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            if ( this.data.length > this.size ) {\n                this.renderView(this.data.length - this.size);\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n    }\n};\n\n\n/**\n * Highlight the given DOM element as focused.\n * Remove focus from the previously focused item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.focusItem = function ( $item ) {\n    var $prev = this.$focusItem;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n    }\n\n    // different element\n    if ( $item && $prev !== $item ) {\n        if ( DEVELOP ) {\n            if ( !($item instanceof Element) ) {\n                throw new Error(__filename + ': wrong $item type');\n            }\n            if ( $item.parentNode !== this.$body ) {\n                throw new Error(__filename + ': wrong $item parent element');\n            }\n        }\n\n        // some item is focused already\n        if ( $prev !== null ) {\n            if ( DEVELOP ) {\n                if ( !($prev instanceof Element) ) {\n                    throw new Error(__filename + ': wrong $prev type');\n                }\n            }\n\n            // style\n            $prev.classList.remove('focus');\n            //$prev.classList.remove('theme-focus');\n\n            // there are some listeners\n            if ( this.events['blur:item'] ) {\n                /**\n                 * Remove focus from an element.\n                 *\n                 * @event module:stb/ui/list~List#blur:item\n                 *\n                 * @type {Object}\n                 * @property {Element} $item previously focused HTML element\n                 */\n                this.emit('blur:item', {$item: $prev});\n            }\n        }\n        // reassign\n        this.$focusItem = $item;\n\n        this.$focusItem.data = this.data[this.$focusItem.index];\n\n        // correct CSS\n        $item.classList.add('focus');\n        //$item.classList.add('theme-focus');\n\n        // there are some listeners\n        if ( this.events['focus:item'] ) {\n            /**\n             * Set focus to a DOM element.\n             *\n             * @event module:stb/ui/list~List#focus:item\n             *\n             * @type {Object}\n             * @property {Element} $prev old/previous focused HTML element\n             * @property {Element} $curr new/current focused HTML element\n             */\n            this.emit('focus:item', {$prev: $prev, $curr: $item});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            /**\n             * Set focus to a list item.\n             *\n             * @event module:stb/ui/list~List#select:item\n             *\n             * @type {Object}\n             * @property {Element} $item new/current focused item\n             */\n            this.emit('select:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Highlight the given DOM element as blur.\n * Remove focus from the item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.blurItem = function ( $item ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) { throw new Error(__filename + ': wrong arguments number'); }\n    }\n\n    // different element\n    if ( $item ) {\n        if ( $item === this.$focusItem ) {\n            this.$focusItem = null;\n        }\n\n        $item.classList.remove('focus');\n        //$item.classList.remove('theme-focus');\n\n        // there are some listeners\n        if ( this.events['blur:item'] ) {\n            /**\n             * Remove focus from an element.\n             *\n             * @event module:stb/ui/list~List#blur:item\n             *\n             * @type {Object}\n             * @property {Element} $item previously focused HTML element\n             */\n            this.emit('blur:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Set the given item focused by item index.\n *\n * @param {number} index item data index\n */\nList.prototype.focusIndex = function ( index ) {\n    var viewIndex = this.viewIndex || 0;\n\n    if ( DEVELOP ) {\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be positive');\n        }\n        // if ( index > this.data.length - 1 ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // determine direction\n    if ( index >= viewIndex + this.size ) {\n        // check range\n        index = index < this.data.length - 1 ? index : this.data.length - 1;\n        // move down\n        this.renderView(index - this.size + 1);\n        this.focusItem(this.$body.lastChild);\n    } else if ( index < viewIndex ) {\n        // check range\n        index = index > 0 ? index : 0;\n        // move up\n        this.renderView(index);\n        this.focusItem(this.$body.firstChild);\n    } else {\n        // no move\n        if ( this.viewIndex === null ) {\n            // first attempt\n            this.renderView(0);\n        }\n        this.focusItem(this.$body.children[index - viewIndex]);\n    }\n};\n\n\n/**\n * Set item state and appearance as marked.\n *\n * @param {Node|Element} $item element to focus\n * @param {boolean} state true - marked, false - not marked\n */\nList.prototype.markItem = function ( $item, state ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 2 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !($item instanceof Element) ) {\n            throw new Error(__filename + ': wrong $item type');\n        }\n        if ( $item.parentNode !== this.$body ) {\n            throw new Error(__filename + ': wrong $item parent element');\n        }\n        if ( Boolean(state) !== state ) {\n            throw new Error(__filename + ': state must be boolean');\n        }\n    }\n\n    // correct CSS\n    if ( state ) {\n        $item.classList.add('mark');\n    } else {\n        $item.classList.remove('mark');\n    }\n\n    // apply flag\n    $item.data.mark = state;\n};\n\n\n// public\nmodule.exports = List;\n","'use strict';\n\nvar app = require('mag-app');\n\n\n/**\n * Change favorite state.\n *\n * @param {Object} video - movie data\n */\nmodule.exports = function ( video ) {\n    video.changeFlags({favorite: !video.favorite}, function ( error ) {\n        app.emit('change:favorite', {video: video, error: error});\n    });\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Base Events Emitter implementation.\n *\n * @see http://nodejs.org/api/events.html\n * @constructor\n *\n * @example\n * var emitter = new Emitter();\n */\nfunction Emitter () {\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // if ( DEVELOP ) {\n    //     if ( typeof this !== 'object' ) { throw new Error(__filename + ': must be constructed via new'); }\n    // }\n\n    /**\n     * Inner hash table for event names and linked callbacks.\n     * Manual editing should be avoided.\n     *\n     * @member {Object.<string, function[]>}\n     *\n     * @example\n     * {\n     *     click: [\n     *         function click1 () { ... },\n     *         function click2 () { ... }\n     *     ],\n     *     keydown: [\n     *         function () { ... }\n     *     ]\n     * }\n     **/\n    this.events = {};\n}\n\n\nEmitter.prototype = {\n    /**\n     * Bind an event to the given callback function.\n     * The same callback function can be added multiple times for the same event name.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.addListener('click', function ( data ) { ... });\n     * // one more click handler\n     * emitter.addListener('click', function ( data ) { ... });\n     */\n    addListener: function ( name, callback ) {\n        console.assert(arguments.length === 2, 'wrong arguments number');\n        console.assert(typeof name === 'string', 'wrong name type');\n        console.assert(name.length > 0, 'empty name');\n        console.assert(typeof callback === 'function', 'callback should be a function');\n\n        // if ( DEVELOP ) {\n        //     if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        //     if ( typeof name !== 'string' || name.length === 0 ) { throw new Error(__filename + ': wrong or empty name'); }\n        //     if ( typeof callback !== 'function' ) { throw new Error(__filename + ': wrong callback type'); }\n        // }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(callback);\n    },\n\n\n    /**\n     * Add a one time listener for the event.\n     * This listener is invoked only the next time the event is fired, after which it is removed.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.once('click', function ( data ) { ... });\n     */\n    once: function ( name, callback ) {\n        // current execution context\n        var self = this;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n        }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(function onceWrapper () {\n            self.removeListener(name, onceWrapper);\n            callback.apply(self, arguments);\n        });\n    },\n\n\n    /**\n     * Apply multiple listeners at once.\n     *\n     * @param {Object} callbacks event names with callbacks\n     *\n     * @example\n     * emitter.addListeners({\n     *     click: function ( data ) {},\n     *     close: function ( data ) {}\n     * });\n     */\n    addListeners: function ( callbacks ) {\n        var name;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof callbacks !== 'object' ) {\n                throw new Error(__filename + ': wrong callbacks type');\n            }\n            if ( Object.keys(callbacks).length === 0 ) {\n                throw new Error(__filename + ': no callbacks given');\n            }\n        }\n\n        for ( name in callbacks ) {\n            if ( callbacks.hasOwnProperty(name) ) {\n                this.addListener(name, callbacks[name]);\n            }\n        }\n    },\n\n\n    /**\n     * Remove all instances of the given callback.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to remove\n     *\n     * @example\n     * emitter.removeListener('click', func1);\n     */\n    removeListener: function ( name, callback ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n            if ( this.events[name] && !Array.isArray(this.events[name]) ) {\n                throw new Error(__filename + ': corrupted inner data');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( this.events[name] ) {\n            // rework the callback list to exclude the given one\n            this.events[name] = this.events[name].filter(function callbacksFilter ( fn ) { return fn !== callback; });\n            // event has no more callbacks so clean it\n            if ( this.events[name].length === 0 ) {\n                // as if there were no listeners at all\n                this.events[name] = undefined;\n            }\n        }\n    },\n\n\n    /**\n     * Remove all callbacks for the given event name.\n     * Without event name clears all events.\n     *\n     * @param {string} [name] event identifier\n     *\n     * @example\n     * emitter.removeAllListeners('click');\n     * emitter.removeAllListeners();\n     *\n     * @deprecated\n     */\n    /*removeAllListeners: function ( name ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 0 && (typeof name !== 'string' || name.length === 0) ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // check input\n        if ( arguments.length === 0 ) {\n            // no arguments so remove everything\n            this.events = {};\n        } else if ( name ) {\n            if ( DEVELOP ) {\n                if ( this.events[name] ) { throw new Error(__filename + ': event is not removed'); }\n            }\n\n            // only name is given so remove all callbacks for the given event\n            // but object structure modification should be avoided\n            this.events[name] = undefined;\n        }\n    },*/\n\n\n    /**\n     * Execute each of the listeners in the given order with the supplied arguments.\n     *\n     * @param {string} name event identifier\n     *\n     * @example\n     * emitter.emit('init');\n     * emitter.emit('click', {src: panel1, dst: panel2});\n     * emitter.emit('load', error, data);\n     *\n     * // it's a good idea to emit event only when there are some listeners\n     * if ( this.events['click'] ) {\n     *     this.emit('click', {event: event});\n     * }\n     */\n    emit: function ( name ) {\n        var event = this.events[name],\n            index;\n\n        if ( DEVELOP ) {\n            if ( arguments.length < 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( event ) {\n            if ( DEVELOP ) {\n                if ( !Array.isArray(event) ) {\n                    throw new Error(__filename + ': wrong event type');\n                }\n            }\n\n            for ( index = 0; index < event.length; index++ ) {\n                if ( DEVELOP ) {\n                    if ( typeof event[index] !== 'function' ) {\n                        throw new Error(__filename + ': wrong event callback type');\n                    }\n                }\n\n                // invoke the callback with parameters\n                event[index].apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n    }\n};\n\n\n// correct constructor name\nEmitter.prototype.constructor = Emitter;\n\n\n// public\nmodule.exports = Emitter;\n","'use strict';\n\nvar Layout = require('mag-component-layout');\n\n\n/**\n * Render item function for tv channel list.\n *\n * @param {Element} $item - item to render\n * @param {Object} config - configuration of new data\n */\nmodule.exports = function ( $item, config ) {\n    var self = this,\n        layout, index, item,\n        layoutConfig;\n\n    // clear inner content\n    while ( $item.firstChild ) {\n        $item.removeChild($item.firstChild);\n    }\n\n    for ( index = 0; index < config.items.length; index++ ) {\n        item = config.items[index];\n        if ( item && item.value instanceof HTMLElement ) {\n            config.items[index] = item.value;\n        }\n    }\n\n    layoutConfig = {\n        focusable: false,\n        data: config.items\n    };\n\n    if ( config.className ) {\n        layoutConfig.className = config.className;\n    }\n\n    layout = new Layout(layoutConfig);\n\n    $item.appendChild(layout.$node);\n    $item.layout = layout;\n    layout.parent = this;\n    layout.$parentItem = $item;\n\n    // focus layoutList if click on layout\n    layout.addListener('click', function () {\n        // add inner property to set that event comes from inner component\n        self.emit('click:item', {$item: $item, inner: true});\n    });\n\n    if ( config.click ) {\n        this.handlers[$item.index] = config.click;\n    }\n    // item is rendered\n    $item.ready = true;\n\n    $item.value = config.value;\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar List = require('mag-component-list'),\n    Layout = require('mag-component-layout');\n\n/**\n *  Layout list contains array of layout components\n *\n * @constructor\n * @extends List\n *\n * @param {Object} config object\n * @param {Element} [config.noData=''] element or string to display if set empty data\n *\n * @example\n * var LayoutList = require('mag-component-layout-list'),\n *     list = new LayoutList({\n *         propagate: true,\n *         size: 7,\n *         focusIndex: 0,\n *         noData: 'No channels'\n *         data: [\n *                 {\n *                     items: [\n *                         {\n *                             className: 'star',\n *                             name: '$text'\n *                         },\n *                         'Some text'\n *                     ],\n *                     click: function () {\n *                         // do something\n *                     },\n *                     name: 'starItem'\n *                 },\n *                 {\n *                     items: [\n *                         'Hello world',\n *                         {\n *                             value: 'hi',\n *                             className: 'status'\n *                         }\n *                     ],\n *                     value:{\n *                         uri: 'http://55.55.55.55/some'\n *                     },\n *                     click: someHandler\n *                 },\n *                 {\n *                     items: [\n *                         {\n *                             className: 'big',\n *                             value: ' Some'\n *                         },\n *                         {\n *                             value: new Input()\n *                         }\n *                     ]\n *                 },\n *                 {\n *                     items: [\n *                         new Button({value: 'Ok'}),\n *                         new Button({value: 'Cancel'}),\n *                         new Button({value: 'Exit'})\n *                     ]\n *                 }\n *             ]\n * });\n *\n * list.links.starItem.links.$text.innerText = 'new Text';\n *\n */\nfunction LayoutList ( config ) {\n    var self = this;\n\n    config = config || {};\n\n    /**\n     * Elements handlers\n     */\n    this.handlers = {};\n\n    /**\n     * Hash map of layouts links\n     */\n    this.links = {};\n\n    /**\n     * No data placeholder\n     *\n     * @type {Element}\n     */\n    this.$noData = null;\n\n    //config.className = 'layoutList ' + (config.className || '');\n\n    config.propagate = config.propagate === undefined ? true : config.propagate;\n\n    /**\n     * Set data layout to be fixed to cache HTML elements\n     *\n     * @type {boolean|*}\n     */\n    this.fixedData = config.fixedData || false;\n\n    //config.$body = document.createElement('div');\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    this.$noData = document.createElement('div');\n    this.$noData.className = 'noData hidden';\n\n    List.call(this, config);\n\n    this.$node.appendChild(this.$body);\n    this.$node.appendChild(this.$noData);\n\n    // add handler to focus inner layout\n    this.addListener('click:item', function ( event ) {\n        // focus inner layout of item\n        if ( event.$item.layout.children.length && !event.inner ) {\n            event.$item.layout.children[event.$item.layout.focusIndex].focus();\n        }\n\n        // only focus item if we click mouse\n        if ( event.inner ) {\n            self.focus();\n            self.focusItem(event.$item);\n        }\n        // do click callback if it present\n        if ( self.handlers[event.$item.index] ) {\n            self.handlers[event.$item.index](event.$item);\n        }\n    });\n}\n\n\nLayoutList.prototype = Object.create(List.prototype);\nLayoutList.prototype.constructor = LayoutList;\n\n// set component name\nLayoutList.prototype.name = 'mag-component-layout-list';\n\n\n/*eslint id-length:0*/\n/**\n * Default render function\n *\n * @param {Element} $item in list\n * @param {Object} config to render layout element\n */\nLayoutList.prototype.renderItemDefault = function ( $item, config ) {\n    var layout, layoutConfig,\n        currentNode,\n        currentData,\n        i;\n\n    if ( $item.ready && this.fixedData ) {\n        for ( i = 0; i < config.items.length; i++ ) {\n            currentData = config.items[i];\n            if ( typeof currentData.value === 'string' || currentData.value === undefined ) {\n                currentNode = $item.layout.$node.childNodes[i];\n                currentNode.innerText = currentData.value || '';\n                currentNode.className = currentData.className || '';\n            }\n        }\n    } else {\n        // clear inner content\n        while ( $item.firstChild ) {\n            $item.removeChild($item.firstChild);\n        }\n\n        layoutConfig = {\n            focusable: false,\n            data: config.items\n        };\n\n        if ( config.className ) {\n            layoutConfig.className = config.className;\n        }\n\n        layout = new Layout(layoutConfig);\n\n        if ( config.name ) {\n            this.links[config.name] = layout;\n        }\n\n        $item.appendChild(layout.$node);\n        $item.layout = layout;\n        layout.parent = this;\n        layout.$parentItem = $item;\n\n        // focus layoutList if click on layout\n        layout.addListener('click', function () {\n            // add inner property to set that event comes from inner component\n            layout.parent.emit('click:item', {$item: $item, inner: true});\n        });\n\n        if ( config.click ) {\n            this.handlers[$item.index] = config.click;\n        }\n        // item is rendered\n        $item.ready = true;\n    }\n    $item.value = config.value || {};\n};\n\n\nLayoutList.prototype.setData = function ( config ) {\n    this.links = {};\n    List.prototype.setData.call(this, config);\n\n    if ( config.data && config.data.length ) {\n        this.$noData.classList.add('hidden');\n    } else {\n        this.$noData.classList.remove('hidden');\n    }\n};\n\n\nLayoutList.prototype.init = function ( config ) {\n    var $wrap;\n\n    List.prototype.init.call(this, config);\n    if ( config.noData ) {\n        if ( DEVELOP ) {\n            if ( typeof config.noData !== 'string' && !(config.noData instanceof Element) ) {\n                throw new Error(__filename + ': wrong config.$noData type');\n            }\n        }\n\n        this.$noData.innerHTML = '';\n        if ( config.noData instanceof Element ) {\n            this.$noData.appendChild(config.noData);\n        } else if ( typeof config.noData === 'string' ) {\n            $wrap = document.createElement('div');\n            $wrap.innerText = config.noData;\n            this.$noData.appendChild($wrap);\n        }\n    }\n\n    if ( config.data && config.data.length ) {\n        this.$noData.classList.add('hidden');\n    } else {\n        this.$noData.classList.remove('hidden');\n    }\n};\n\nLayoutList.prototype.renderItem = LayoutList.prototype.renderItemDefault;\n\n\nmodule.exports = LayoutList;\n","/**\n * @license The MIT License (MIT)\n * @copyright Dmitry Fedotov <bas.jsdev@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\nvar StbComponentModal = require('stb-component-modal'),\n    Component         = require('stb-component'),\n    keys              = require('stb-keys');\n\n\n/**\n * Modal window implementation.\n *\n * @constructor\n * @extends StbComponentModal\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {Object} [config.title] message title\n * @param {Object} [config.className] message classname\n * @param {Object} [config.icon] icon at header\n * @param {Object} [config.visible] visibility flag\n * @param {Object} [config.children] content (inherited from the parent)\n *\n * @example\n * var modalSort = new Modal({\n *     visible: false,\n *     title: 'sort',\n *     events: {\n *         show: function () {\n *             list.focus();\n *         },\n *         hide: function () {\n *             page.panelSet.focus();\n *         }\n *     },\n *     children: [list = new RadioList({})]\n * });\n * page.add(modalSort);\n */\nfunction Modal ( config ) {\n    var self = this,\n        $overlay, $body, onkeydown;\n\n    // sanitize\n    config = config || {};\n    config.events = config.events || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.icon && typeof config.icon !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.icon');\n        }\n        if ( config.title && typeof config.title !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.title');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body ) {\n            throw new Error(__filename + ': config.$body should not be provided in Modal manually');\n        }\n    }\n\n    // usually can't accept focus\n    config.focusable = config.focusable || false;\n    // hide by default\n    config.visible = config.visible || false;\n    // add default close by click\n    config.events.click = config.events.click || function () { self.hide(); };\n    // add close window behavior, when pushed a back button or a menu button\n    onkeydown = config.events.keydown;\n    config.events.keydown = function ( event ) {\n        if ( onkeydown ) {\n            onkeydown.call(this, event);\n        }\n        if ( event.code === keys.back || event.code === keys.menu ) {\n            event.stop = true;\n            self.hide();\n        }\n    };\n\n    // parent constructor call\n    StbComponentModal.call(this, config);\n\n    // add table-cell wrappers\n    this.$node.appendChild(document.createElement('div'));\n    this.$node.firstChild.classList.add('alignBox');\n    this.$node.firstChild.appendChild(document.createElement('div'));\n\n    // add header div\n    this.$header = document.createElement('div');\n    this.$header.className = 'header';\n\n    // insert caption placeholder\n    this.$text = this.$header.appendChild(document.createElement('div'));\n    this.$text.classList.add('text');\n    this.$text.innerText = config.title || '';\n\n    // optional icon\n    if ( config.icon ) {\n        this.$icon = this.$header.appendChild(document.createElement('div'));\n        this.$icon.className = 'icon ' + config.icon;\n    }\n\n    $overlay = document.createElement('div');\n    $overlay.className = 'overlay';\n\n    // add to dom\n    // add body wrapper\n    $body = this.$body.parentNode.removeChild(this.$body);\n    this.$node.firstChild.firstChild.appendChild(this.$header);\n    this.$node.firstChild.firstChild.appendChild($body);\n    this.$node.firstChild.firstChild.appendChild($overlay);\n}\n\n\n// inheritance\nModal.prototype = Object.create(StbComponentModal.prototype);\nModal.prototype.constructor = Modal;\n\n// set component name\nModal.prototype.name = 'mag-component-modal';\n\n\n/**\n * Redefine default component focus to set additional css\n */\nModal.prototype.focus = function () {\n    this.$node.classList.add('active');\n    StbComponentModal.prototype.focus.call(this);\n    if ( this.children[0] && this.children[0] instanceof Component ) {\n        this.children[0].focus();\n    }\n};\n\n\n/**\n * Blur message\n */\nModal.prototype.blur = function () {\n    this.$node.classList.remove('active');\n    StbComponentModal.prototype.blur.call(this);\n};\n\n\n// public\nmodule.exports = Modal;\n","/**\n * Global list of non-printable control key codes.\n *\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    backspace: 8,\n    tab:       9,\n    enter:     13,\n    escape:    27,\n    space:     32,\n    pageUp:    33,\n    pageDown:  34,\n    end:       35,\n    home:      36,\n    left:      37,\n    up:        38,\n    right:     39,\n    down:      40,\n    insert:    45,\n    // not \"delete\" because of old browsers issue\n    del:       46\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('./core');\n\n\n// public\nmodule.exports = {\n    DOMContentLoaded: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // there are some listeners\n        if ( app.events['dom'] ) {\n            // notify listeners\n            app.emit('dom', event);\n            //console.log('DOMContentLoaded');\n        }\n    },\n\n    /**\n     * The load event is fired when a resource and its dependent resources have finished loading.\n     *\n     * Control flow:\n     *   1. Global handler.\n     *   2. Each page handler.\n     *   3. Application DONE event.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/load\n     *\n     * @param {Event} event generated object with event data\n     */\n    load: function ( event ) {\n        //var path;\n\n        //debug.event(event);\n        //console.log(event);\n\n        // time mark\n        //app.data.time.load = event.timeStamp;\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' load', 'green');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n\n        // time mark\n        //app.data.time.done = +new Date();\n\n        // everything is ready\n        // and there are some listeners\n        // if ( app.events['done'] ) {\n        //     // notify listeners\n        //     app.emit('done', event);\n        // }\n    },\n\n    /**\n     * The unload event is fired when the document or a child resource is being unloaded.\n     *\n     * Control flow:\n     *   1. Each page handler.\n     *   2. Global handler.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/unload\n     *\n     * @param {Event} event generated object with event data\n     */\n    unload: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' unload', 'red');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n    },\n\n    /**\n     * The error event is fired when a resource failed to load.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/error\n     *\n     * @param {Event} event generated object with event data\n     */\n    error: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n        //debug.fail('app event: ' + event.message, event, {tags: [event.type, 'event']});\n        console.error('app event: ' + event.message, event);\n    },\n\n    /**\n     * The keydown event is fired when a key is pressed down.\n     * Set event.stop to true in order to prevent bubbling.\n     *\n     * Control flow:\n     *   1. Current active component on the active page.\n     *   2. Current active page itself.\n     *   3. Application.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keydown\n     *\n     * @param {Event} event generated object with event data\n     */\n    keydown: function ( event ) {\n        var page = app.activePage,\n            eventLocal = {\n                code: event.keyCode,\n                stop: false\n            },\n            activeComponent;\n\n        if ( DEVELOP ) {\n            if ( !page ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        // filter phantoms\n        //if ( event.keyCode === 0 ) { return; }\n\n        // combined key code\n        //event.code = event.keyCode;\n\n        // apply key modifiers\n        if ( event.ctrlKey )  { eventLocal.code += 'c'; }\n        if ( event.altKey )   { eventLocal.code += 'a'; }\n        if ( event.shiftKey ) { eventLocal.code += 's'; }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + eventLocal.code, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + eventLocal.code, event);\n\n        // page.activeComponent can be set to null in event handles\n        activeComponent = page.activeComponent;\n\n        // current component handler\n        if ( activeComponent && activeComponent !== page ) {\n            // component is available and not page itself\n            if ( activeComponent.events[event.type] ) {\n                // there are some listeners\n                activeComponent.emit(event.type, eventLocal, event);\n            }\n\n            // todo: bubble event recursively\n            // bubbling\n            if (\n                !eventLocal.stop &&\n                activeComponent.propagate &&\n                activeComponent.parent &&\n                activeComponent.parent.events[event.type]\n            ) {\n                activeComponent.parent.emit(event.type, eventLocal, event);\n            }\n        }\n\n        // page handler\n        if ( !eventLocal.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, eventLocal, event);\n            }\n\n            // global app handler\n            if ( !event.stop ) {\n                // not prevented\n                if ( app.events[event.type] ) {\n                    // there are some listeners\n                    app.emit(event.type, eventLocal, event);\n                }\n            }\n        }\n\n        //// suppress non-printable keys in stb device (not in your browser)\n        //if ( app.data.host && keyCodes[event.code] ) {\n        //    event.preventDefault();\n        //}\n    },\n\n    /**\n     * The keypress event is fired when press a printable character.\n     * Delivers the event only to activeComponent at active page.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keypress\n     *\n     * @param {Event} event generated object with event data\n     * @param {string} event.char entered character\n     */\n    keypress: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + event.key, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + event.key, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n    },\n\n    /**\n     * The click event is fired when a pointing device button (usually a mouse button) is pressed and released on a single element.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/click\n     *\n     * @param {Event} event generated object with event data\n     */\n    /*click: function ( event ) {\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n     },*/\n\n    /**\n     * The contextmenu event is fired when the right button of the mouse is clicked (before the context menu is displayed),\n     * or when the context menu key is pressed (in which case the context menu is displayed at the bottom left of the focused\n     * element, unless the element is a tree, in which case the context menu is displayed at the bottom left of the current row).\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/contextmenu\n     *\n     * @param {Event} event generated object with event data\n     */\n    // contextmenu: function ( event ) {\n    //     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n    //\n    //     if ( !DEVELOP ) {\n    //         // disable right click in release mode\n    //         event.preventDefault();\n    //     }\n    // },\n\n    /*contextmenu: function ( event ) {\n     //var kbEvent = {}; //Object.create(document.createEvent('KeyboardEvent'));\n\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n\n     //kbEvent.type    = 'keydown';\n     //kbEvent.keyCode = 8;\n\n     //debug.log(kbEvent.type);\n\n     //globalEventListenerKeydown(kbEvent);\n     //var event = document.createEvent('KeyboardEvent');\n     //event.initEvent('keydown', true, true);\n\n     //document.dispatchEvent(kbEvent);\n\n     if ( !DEVELOP ) {\n     // disable right click in release mode\n     event.preventDefault();\n     }\n     },*/\n\n    /**\n     * The wheel event is fired when a wheel button of a pointing device (usually a mouse) is rotated.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel\n     *\n     * @param {Event} event generated object with event data\n     */\n    mousewheel: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n\n        // page handler\n        if ( !event.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, event);\n            }\n        }\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core');\n//    metrics = require('app:metrics'),\n//    linkCSS;\n\n\n// global link\n//app.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\n//app.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\n//app.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n// // set max browser window size\n// window.moveTo(0, 0);\n// window.resizeTo(metrics.width, metrics.height);\n\n// load CSS file base on resolution\n/*linkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = 'css/' + (DEVELOP ? 'develop.' : 'release.') + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);*/\n\n\n// public\nmodule.exports = function ( name ) {\n    var link = document.createElement('link');\n\n    link.rel  = 'stylesheet';\n    link.href = 'css/' + name + '.' + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\n    document.head.appendChild(link);\n};\n","/**\n * List for grid component.\n *\n * @author Roman Stoian <r.stoyan@infomir.com>.\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n//TODO inherit from Layout List\nvar List = require('mag-component-list'),\n    keys = require('stb-keys');\n\n\n/**\n * MainPanel list implementation.\n *\n * Each data item can be either a primitive value or an object with these fields:\n *\n *  Name    | Description\n * ---------|-------------\n *  value   | actual cell value to render\n *  mark    | is it necessary or not to render this cell as marked\n *\n * @constructor\n * @extends List\n *\n * @param {Object}   [config={}]           - init parameters (all inherited from the parent)\n * @param {Array}    [config.data=[]]      - component data to visualize\n * @param {Function} [config.render]       - method to build each grid cell content\n * @param {Function} [config.navigate]     - method to move focus according to pressed keys\n * @param {number}   [config.size=6]       - amount of visible items on a page\n * @param {number}   [config.bufferSize=3] - amount of buffered items\n * @param {number}   [config.focusIndex]   - list item index to make item focused (move view window to this position)\n * @param {boolean}  [config.cycle=true]   - allow or not to jump to the opposite side of a list when there is nowhere to go next\n * @param {boolean}  [config.scroll=null]  - associated ScrollBar component link\n *\n * @fires module:stb/ui/list~List#click:item\n */\nfunction ItemList ( config ) {\n    // current execution context\n    var self = this;\n\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && typeof config.className !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    /**\n     * Amount of visible items on a page.\n     *\n     * @type {number}\n     */\n    this.bufferSize = 3;\n    // this.hasEmptyItems = config.hasEmptyItems || false;\n    // this.propagate = config.propagate || false;\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n    config.type = this.TYPE_VERTICAL;\n\n    List.call(this, config);\n\n    if ( config.title ) {\n        if ( config.title instanceof HTMLElement ) {\n            this.$title = config.title;\n        } else {\n            this.$title = document.createElement('div');\n            this.$title.className = 'title';\n            this.$title.innerText = config.title;\n        }\n        this.$node.appendChild(this.$title);\n    }\n    this.$node.appendChild(this.$body);\n\n    this.inFocus = false;\n    this.addListener('focus', function () {\n        if ( self.$focusItem ) {\n            self.$focusItem.focus();\n        }\n        self.inFocus = true;\n    });\n    this.addListener('blur', function () {\n        self.inFocus = false;\n    });\n}\n\n// inheritance\nItemList.prototype = Object.create(List.prototype);\nItemList.prototype.constructor = ItemList;\n\n// set component name\nItemList.prototype.name = 'mag-component-grid-list';\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config - init parameters (subset of constructor config params)\n */\nItemList.prototype.init = function ( config ) {\n    var self = this;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    this.cycle = config.cycle || false;\n\n    // apply ScrollBar link\n    if ( config.scroll ) { this.scroll = config.scroll; }\n\n    // custom render method\n    if ( config.render ) {\n        if ( DEVELOP ) {\n            if ( typeof config.render !== 'function' ) {\n                throw new Error(__filename + ': wrong config.render type');\n            }\n        }\n\n        // apply\n        this.renderItem = config.render;\n    }\n\n    // list items amount on page\n    if ( config.size ) {\n        if ( DEVELOP ) {\n            if ( +config.size !== config.size ) {\n                throw new Error(__filename + ': config.size must be a number');\n            }\n            if ( config.size <= 0 ) {\n                throw new Error(__filename + ': config.size should be positive');\n            }\n        }\n\n        // apply\n        this.size = config.size;\n    }\n\n    if ( config.bufferSize ) {\n        if ( DEVELOP ) {\n            if ( +config.bufferSize !== config.bufferSize ) {\n                throw new Error(__filename + ': config.bufferSize must be a number');\n            }\n            if ( config.bufferSize <= 0 ) {\n                throw new Error(__filename + ': config.size should be positive');\n            }\n        }\n\n        // apply\n        this.bufferSize = config.bufferSize;\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( name ) {\n            self.events[name] = null;\n            self.addListener(name, config.events[name]);\n        });\n    }\n\n    this.focusPosition = config.focusPosition || Math.ceil(this.size / 2);\n    this.startIndex = 0;\n\n    this.setData(config);\n};\n\nItemList.prototype.createItem = function () {\n    var self = this,\n        item = document.createElement('div');\n\n    item.className = 'item hidden';\n\n    item.addEventListener('click', function ( event ) {\n        if ( item.data ) {\n            self.focusItem(item);\n\n            // there are some listeners\n            if ( self.events['click:item'] ) {\n                // notify listeners\n                self.emit('click:item', {$item: item, event: event});\n            }\n        }\n    });\n\n    return item;\n};\n\n/**\n * Set data and render inner structures and HTML.\n *\n * @param {Object} config - init parameters (subset of constructor config params)\n */\nItemList.prototype.setData = function ( config ) {\n    if ( config.data ) {\n        if ( DEVELOP ) {\n            if ( !Array.isArray(config.data) ) { throw new Error(__filename + ': wrong config.data type'); }\n        }\n        // prepare user data\n        this.bufferBefore = [];\n        this.mainList = [];\n        this.bufferAfter = [];\n    }\n\n    List.prototype.setData.call(this, config);\n};\n\n\n/**\n * Refresh data and render inner structures and HTML.\n */\nItemList.prototype.refreshData = function () {\n    var config = {},\n        self = this;\n\n    if ( this.query && this.query.getter ) {\n        this.query.getter(function ( listData ) {\n            if ( listData.length === 0 ) {\n                if ( self.parent.removeItem ) {\n                    self.parent.removeItem(self.query);\n\n                    return;\n                }\n            }\n            if ( self.$focusItem ) {\n                config.focusIndex = self.$focusItem.index;\n                if ( listData.length <= config.focusIndex ) {\n                    config.focusIndex = listData.length - 1;\n                }\n            }\n            config.data = listData;\n            if ( self.parent.data && self.parent.data.length > self.index ) {\n                self.parent.data[self.index].data = config.data;\n            }\n            self.setData(config);\n        });\n    }\n};\n\n\n/**\n * Shift the visible view window event.\n *\n * @event module:stb/ui/list~List#move:view\n *\n * @param {Element} $item - item to init\n * @param {Object} data - data to fill $item\n * @param {number} index - data index in Array\n *\n * @return {Element} $item\n */\nItemList.prototype.initItem = function ( $item, data, index ) {\n    if ( data && $item ) {\n        // correct inner data/index and render\n        $item.data  = data;\n        $item.index = index;\n        this.renderItem($item, data);\n    } else {\n        // nothing to render\n        $item.data = $item.index = undefined;\n        $item.innerHTML = '&nbsp;';\n    }\n\n    return $item;\n};\n\n\nItemList.prototype.checkClassStates = function () {\n    if ( this.data.length > this.size - 1 ) {\n        if ( this.$focusItem.index + 1 < this.focusPosition ) {\n            this.$body.classList.remove('noEmptyBefore');\n        } else {\n            this.$body.classList.add('noEmptyBefore');\n        }\n\n        if ( this.$focusItem.index === this.data.length - 1 ) {\n            this.$body.classList.add('emptyAfter');\n        } else {\n            this.$body.classList.remove('emptyAfter');\n        }\n    } else {\n        this.$body.classList.remove('emptyAfter');\n        this.$body.classList.remove('noEmptyBefore');\n    }\n\n};\n\n\n/**\n * Init the visible window.\n *\n * @param {number} viewIndex - start position to render\n *\n * @return {boolean} operation - status\n *\n * @fires module:stb/ui/list~List#move:view\n */\nItemList.prototype.renderView = function ( viewIndex ) {\n    var count = 0,\n        $item, index, prevIndex,\n        currIndex;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( +viewIndex !== viewIndex ) {\n            throw new Error(__filename + ': viewIndex must be a number');\n        }\n        if ( viewIndex < 0 ) {\n            throw new Error(__filename + ': viewIndex should be more than zero');\n        }\n        // if ( viewIndex >= this.data.length ) {\n        //     throw new Error(__filename + ': viewIndex should be less than data size');\n        // }\n    }\n\n    if ( this.viewIndex === viewIndex ) {\n        return true;\n    }\n\n    while ( this.$body.firstChild ) {\n        this.$body.removeChild(this.$body.firstChild);\n    }\n\n    prevIndex = this.viewIndex;\n    this.viewIndex = currIndex = viewIndex || 0;\n\n    this.startIndex = this.viewIndex - this.bufferSize;\n    if ( this.startIndex < 0 ) {\n        count = Math.abs(this.startIndex);\n        this.startIndex = 0;\n    }\n    viewIndex = this.startIndex;\n\n    this.bufferBefore = [];\n    this.mainList = [];\n    this.bufferAfter = [];\n    count = this.bufferSize - count;\n    for ( index = 0; index < count; index++ ) {\n        $item = this.createItem();\n        $item = this.initItem($item, this.data[viewIndex], viewIndex);\n        this.$body.appendChild($item);\n        $item.classList.add('hidden');\n        this.bufferBefore.push($item);\n        viewIndex++;\n    }\n    count = count + this.size;\n    for ( index; index < count; index++ ) {\n        if ( index >= this.data.length ) {\n            break;\n        }\n        $item = this.createItem();\n        $item = this.initItem($item, this.data[viewIndex], viewIndex);\n        this.$body.appendChild($item);\n        $item.classList.remove('hidden');\n        this.mainList.push($item);\n        viewIndex++;\n    }\n\n    count = (2 * this.bufferSize) + this.size + this.startIndex;\n    count = this.data.length > count ? count : this.data.length;\n    for ( index; index < count; index++ ) {\n        $item = this.createItem();\n        $item = this.initItem($item, this.data[viewIndex], viewIndex);\n        this.$body.appendChild($item);\n        this.bufferAfter.push($item);\n        $item.classList.add('hidden');\n        viewIndex++;\n    }\n\n    // there are some listeners\n    if ( this.events['move:view'] ) {\n        // notify listeners\n        this.emit('move:view', {prevIndex: prevIndex, currIndex: currIndex});\n    }\n\n    return false;\n};\n\n\n/* eslint max-statements: 0 */\n/* eslint complexity: 0 */\n/**\n * Move focus to the given direction.\n *\n * @param {number} direction - arrow key code\n *\n * @fires module:stb/ui/list~List#overflow\n */\nItemList.prototype.move = function ( direction ) {\n    var item, index, delta,\n        lastIndex, length;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( +direction !== direction ) {\n            throw new Error(__filename + ': direction must be a number');\n        }\n    }\n\n    // empty list\n    if ( !this.data.length || !this.$focusItem ) {\n\n        return;\n    }\n    switch ( direction ) {\n        case keys.left:\n            if ( this.$focusItem.index > 0 ) {\n                if ( this.$focusItem.index < this.viewIndex + this.focusPosition && this.viewIndex > 0 ) {\n                    this.viewIndex--;\n                    lastIndex = this.bufferBefore[0].index;\n                    lastIndex--;\n                    item = this.bufferBefore.pop();\n                    item.classList.remove('hidden');\n                    this.mainList.unshift(item);\n\n                    if ( this.size < this.mainList.length ) {\n                        item = this.mainList.pop();\n                        this.bufferAfter.unshift(item);\n                        item.classList.add('hidden');\n                    }\n\n                    if ( this.bufferAfter.length > this.bufferSize ) {\n                        item = this.bufferAfter.pop();\n                        this.$body.removeChild(item);\n                    }\n\n                    if ( lastIndex >= 0 ) {\n                        item = this.createItem();\n                        item = this.initItem(item, this.data[lastIndex], lastIndex);\n                        this.$body.insertBefore(item, this.$body.firstChild);\n                        this.bufferBefore.unshift(item);\n                    }\n                }\n\n                this.focusItem(this.$focusItem.previousSibling);\n            } else {\n                if ( this.cycle ) {\n                    // jump to the beginning of the list\n                    this.move(keys.end);\n                }\n                if ( this.events['overflow'] ) {\n                    // notify listeners\n                    this.emit('overflow', {direction: direction, cycle: false});\n                }\n                // }\n            }\n            break;\n        case keys.right:\n            if ( this.$focusItem.index < this.data.length - 1 ) {\n                if ( this.$focusItem.index + 1 >= this.focusPosition && this.bufferAfter.length ) {\n                    item = this.bufferAfter.shift();\n                    this.mainList.push(item);\n                    item.classList.remove('hidden');\n\n                    this.viewIndex++;\n                    if ( this.mainList.length > this.size ) {\n                        item = this.mainList.shift();\n                        item.classList.add('hidden');\n                        this.bufferBefore.push(item);\n                    }\n\n                    if ( this.bufferBefore.length > this.bufferSize ) {\n                        item = this.bufferBefore.shift();\n                        this.$body.removeChild(item);\n                    }\n\n                    if ( this.size - this.mainList.length && this.bufferAfter.length ) {\n                        item = this.bufferAfter.shift();\n                        this.mainList.push(item);\n                        item.classList.remove('hidden');\n                    }\n\n                    length = this.bufferAfter.length;\n                    if ( length ) {\n                        delta = this.bufferSize - length;\n                        for ( index = 0; index < delta; index++ ) {\n                            item = this.bufferAfter[this.bufferAfter.length - 1];\n                            if ( !item ) {\n                                break;\n                            }\n                            lastIndex = item.index;\n                            lastIndex++;\n                            if ( lastIndex >= this.data.length ) {\n                                break;\n                            }\n\n                            item = this.createItem();\n                            this.$body.appendChild(item);\n                            item = this.initItem(item, this.data[lastIndex], lastIndex);\n                            this.bufferAfter.push(item);\n                        }\n                    }\n                }\n\n                this.focusItem(this.$focusItem.nextSibling);\n            } else {\n                if ( this.cycle ) {\n                    // jump to the beginning of the list\n                    this.move(keys.home);\n                }\n                if ( this.events['overflow'] ) {\n                    // notify listeners\n                    this.emit('overflow', {direction: direction, cycle: false});\n                }\n            }\n\n            break;\n        case keys.home:\n            this.focusIndex(0);\n            break;\n        case keys.end:\n            this.focusIndex(this.data.length - 1);\n            break;\n    }\n};\n\n\n/**\n * Highlight the given DOM element as focused.\n * Remove focus from the previously focused item and generate associated event.\n *\n * @param {Element} $item - element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nItemList.prototype.focusItem = function ( $item ) {\n    var $prev = this.$focusItem;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n    }\n\n    // different element\n    if ( $item && $prev !== $item ) {\n        if ( DEVELOP ) {\n            if ( !($item instanceof HTMLElement) ) {\n                throw new Error(__filename + ': wrong $item type');\n            }\n            if ( $item.parentNode !== this.$body ) {\n                throw new Error(__filename + ': wrong $item parent element');\n            }\n        }\n\n        // some item is focused already\n        if ( $prev !== null ) {\n            if ( DEVELOP ) {\n                if ( !($prev instanceof HTMLElement) ) {\n                    throw new Error(__filename + ': wrong $prev type');\n                }\n            }\n\n            // style\n            $prev.classList.remove('focus');\n            //$prev.classList.remove('theme-focus');\n\n            // there are some listeners\n            if ( this.events['blur:item'] ) {\n                /**\n                 * Remove focus from an element.\n                 *\n                 * @event module:stb/ui/list~List#blur:item\n                 *\n                 * @type {Object}\n                 * @property {Element} $item previously focused HTML element\n                 */\n                this.emit('blur:item', {$item: $prev});\n            }\n        }\n        // reassign\n        this.$focusItem = $item;\n\n        this.$focusItem.data = this.data[this.$focusItem.index];\n\n        // correct CSS\n        $item.classList.add('focus');\n        //$item.classList.add('theme-focus');\n\n        // there are some listeners\n        if ( this.events['focus:item'] ) {\n            /**\n             * Set focus to a DOM element.\n             *\n             * @event module:stb/ui/list~List#focus:item\n             *\n             * @type {Object}\n             * @property {Element} $prev old/previous focused HTML element\n             * @property {Element} $curr new/current focused HTML element\n             */\n            if ( this.inFocus ) {\n                this.emit('focus:item', {$prev: $prev, $curr: $item});\n            }\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            /**\n             * Set focus to a list item.\n             *\n             * @event module:stb/ui/list~List#select:item\n             *\n             * @type {Object}\n             * @property {Element} $item new/current focused item\n             */\n            this.emit('select:item', {$item: $item});\n        }\n\n        this.checkClassStates();\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Set the given item focused by item index.\n *\n * @param {number} index - item data index\n */\nItemList.prototype.focusIndex = function ( index ) {\n    var viewIndex = this.viewIndex || 0,\n        tempIndex;\n\n    if ( DEVELOP ) {\n        if ( +index !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be positive');\n        }\n    }\n\n    if ( index >= this.data.length ) {\n        this.renderView(0);\n        this.focusItem(this.$body.firstChild);\n\n        return;\n    }\n\n    if ( index < this.size ) {\n        viewIndex = 0;\n        if ( this.hasEmptyItems && index > this.focusPosition ) {\n            viewIndex++;\n        }\n        this.renderView(viewIndex);\n        index = index - viewIndex;\n        this.focusItem(this.mainList[index]);\n\n        return;\n    }\n\n    if ( index >= viewIndex + this.focusPosition ) {\n        viewIndex = index - this.focusPosition;\n        if ( viewIndex + this.size < this.data.length ) {\n            this.renderView(viewIndex);\n            this.focusItem(this.mainList[this.focusPosition]);\n        } else {\n            if ( this.data.length >= this.size ) {\n                viewIndex = this.data.length - this.size;\n                if ( this.hasEmptyItems ) {\n                    viewIndex++;\n                }\n                this.renderView(viewIndex);\n            } else {\n                viewIndex = 0;\n                if ( this.hasEmptyItems ) {\n                    viewIndex++;\n                }\n                this.renderView(viewIndex);\n            }\n            tempIndex = index - this.viewIndex;\n            this.focusItem(this.mainList[tempIndex]);\n        }\n\n        return;\n    }\n\n    viewIndex = index - this.focusPosition;\n    this.renderView(viewIndex);\n    tempIndex = index - viewIndex;\n    this.focusItem(this.mainList[tempIndex]);\n};\n\n// public\nmodule.exports = ItemList;\n","'use strict';\n\nvar dom              = require('spa-dom'),\n    prepareMovieData = require('./prepare.movie.data'),\n    tag              = dom.tag;\n\n\n/**\n * Change server data to list data.\n *\n * @param {Array} data - data for prepare\n *\n * @return {Array} ready data for LayoutList\n */\nmodule.exports = function ( data ) {\n    var result = [],\n        $date, $focusWrapper, $blurWrapper,\n        $backgroundFocus, $backgroundBlur;\n\n    data.forEach(function ( item ) {\n        item = prepareMovieData(item);\n        $focusWrapper = tag('div', {className: 'focusWrapper'});\n        $backgroundFocus = tag('div', {className: 'poster'});\n        $focusWrapper.appendChild(tag('div', {className: 'container'}, $backgroundFocus));\n        $date = tag('div', {className: 'movieTitle'});\n        $focusWrapper.appendChild($date);\n\n        $blurWrapper = tag('div', {className: 'blurWrapper'});\n        $backgroundBlur = tag('div', {className: 'poster'});\n        $blurWrapper.appendChild($backgroundBlur);\n\n        item.name = item.name || item.original_name;\n\n        item.poster = item.cover;\n        if ( (item.censored || (item.category && item.category.censored)) && !core.accessControl.state ) {\n            // $backgroundFocus.appendChild(tag('div', {className: 'name'}, item.name));\n            $backgroundFocus.classList.add('censored');\n            $backgroundBlur.appendChild(tag('div', {className: 'name'}, item.name));\n            $backgroundBlur.classList.add('censored');\n            item.cover = '';\n        } else if ( !item.cover ) {\n            $backgroundBlur.appendChild(tag('div', {className: 'name'}, item.name));\n        }\n        $date.innerText = item.name;\n\n        $backgroundFocus.style.backgroundImage = item.cover;\n        $backgroundBlur.style.backgroundImage = item.cover;\n\n        result.push({\n            items: [\n                $focusWrapper,\n                $blurWrapper\n            ],\n            value: item\n        });\n    });\n\n    return result;\n};\n","'use strict';\n\n/**\n * Change server data to list data.\n *\n * @param {Object} data - movie for preparing\n *\n * @return {Object} ready data\n */\nmodule.exports = function ( data ) {\n    var genresName = data.genres.map(function ( item ) {\n        return item.name;\n    });\n\n    data.genre = genresName.join(', ');\n\n    if ( data.cover ) {\n        data.cover = 'url(' + core.backend.host + data.cover + ')';\n    } else {\n        data.cover = '';\n    }\n    data.prepared = true;\n\n    return data;\n};\n","'use strict';\n\nvar Layout = require('mag-component-layout'),\n    dom    = require('spa-dom'),\n\n    tag = dom.tag;\n\n\nfunction InfoPanel () {\n    var className = 'infoPanel hidden';\n\n    if ( TARGET === 'android-stb' || TARGET === 'android-app' ) {\n        className += ' longpress';\n    }\n\n    this.$movie = tag(\n        'div',\n        {className: className},\n        this.$title = tag('div', {className: 'title'}),\n\n        this.$rating = tag(\n            'div',\n            {className: 'ratingContainer'},\n            this.$ratingKino = tag('div', {className: 'ratingKino'}),\n            this.$ratingImdb = tag('div', {className: 'ratingImdb'}),\n            this.$ageLimit = tag('div', {className: 'ageLimit'})\n        ),\n\n        tag('div', {className: 'line'},\n            tag('div', {className: 'leftPart'}, gettext('Country:')),\n            this.$country = tag('div', {className: 'rightPart'})),\n\n        tag(\n            'div',\n            {className: 'line'},\n            tag('div', {className: 'leftPart'}, gettext('Year:')),\n            this.$year = tag('div', {className: 'rightPart'})\n        ),\n\n        tag(\n            'div',\n            {className: 'line'},\n            tag('div', {className: 'leftPart'}, gettext('Genre:')),\n            this.$genre = tag('div', {className: 'rightPart'})\n        ),\n\n        tag(\n            'div',\n            {className: 'line'},\n            tag('div', {className: 'leftPart'}, gettext('Duration:')),\n            this.$duration = tag('div', {className: 'rightPart'})\n        ),\n\n        this.$description = tag('div', {className: 'description'})\n    );\n\n    this.$info = tag('div', {className: 'information'});\n\n    this.$seeMore = tag(\n        'div',\n        {className: 'seeMoreContainer'},\n        tag('div', {className: 'textBlock'}, gettext('See more'))\n    );\n\n    this.layout = new Layout({\n        focusable: false,\n        data: [this.$movie, this.$info, this.$seeMore],\n        className: 'rightPanel'\n    });\n}\n\n// correct constructor name\nInfoPanel.prototype.constructor = InfoPanel;\n\n\n/**\n * Fill movie information.\n *\n * @param {Object} data - movie information\n */\nInfoPanel.prototype.fillMovie = function ( data ) {\n    var needRating = false;\n\n    // var screenshots;\n    if ( data ) {\n        // screenshots = data.screenshots;\n        if (\n            data\n            && (data.censored || (data.category && data.category.censored))\n            && !core.accessControl.state\n        ) {\n            this.layout.$node.style.backgroundImage = '';\n            this.$movie.classList.add('censored');\n        } else {\n            this.$movie.classList.remove('censored');\n            // if ( screenshots && screenshots.length ) {\n            //     this.layout.$node.style.backgroundImage = 'url(' + screenshots[0] + ')';\n            // } else {\n            //     this.layout.$node.style.backgroundImage = '';\n            // }\n        }\n        this.$title.innerText = data.name;\n\n        if ( data['rating_imdb'] ) {\n            needRating = true;\n            this.$ratingImdb.innerText = data.rating_imdb;\n            this.$ratingImdb.style.display = '';\n        } else {\n            this.$ratingImdb.style.display = 'none';\n        }\n\n        if ( data['rating_kinopoisk'] ) {\n            needRating = true;\n            this.$ratingKino.innerText = data.rating_kinopoisk;\n            this.$ratingKino.style.display = '';\n        } else {\n            this.$ratingKino.style.display = 'none';\n        }\n\n        if ( data.age ) {\n            needRating = true;\n            this.$ageLimit.innerText = data.age;\n            this.$ageLimit.style.display = '';\n        } else {\n            this.$ageLimit.style.display = 'none';\n        }\n\n        if ( needRating ) {\n            this.$rating.style.display = '';\n        } else {\n            this.$rating.style.display = 'none';\n        }\n\n        this.$genre.innerText = data.genre;\n        this.$country.innerText = data.country;\n        this.$year.innerText = data['year_end']\n            ? data.year + ' - ' + data['year_end']\n            : data.year;\n        this.$duration.innerText = data.duration + ' ' + gettext('minutes');\n        this.$description.innerText = data.description;\n        if ( data.favorite ) {\n            this.$movie.classList.add('inFavorite');\n        } else {\n            this.$movie.classList.remove('inFavorite');\n        }\n    } else {\n        this.layout.$node.style.backgroundImage = '';\n    }\n};\n\n\n/**\n * Show information panel with text description.\n */\nInfoPanel.prototype.showInfo = function () {\n    this.$info.classList.remove('hidden');\n    this.$movie.classList.add('hidden');\n    this.$seeMore.classList.add('hidden');\n    this.layout.$node.style.backgroundImage = '';\n};\n\n\n/**\n * Show information panel with movie description.\n */\nInfoPanel.prototype.showMovie = function () {\n    this.$info.classList.add('hidden');\n    this.$movie.classList.remove('hidden');\n    this.$seeMore.classList.add('hidden');\n};\n\n\n/**\n * Show see more panel.\n */\nInfoPanel.prototype.showSeeMore = function () {\n    this.$info.classList.add('hidden');\n    this.$movie.classList.add('hidden');\n    this.$seeMore.classList.remove('hidden');\n};\n\n\n/**\n * Clear rating information.\n */\nInfoPanel.prototype.clearRating = function () {\n    this.$ratingImdb.style.display = 'none';\n    this.$ratingKino.style.display = 'none';\n    this.$ageLimit.style.display = 'none';\n};\n\nmodule.exports = InfoPanel;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-scrollbar');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-scrollbar';\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar List             = require('mag-component-list'),\n    classChecked     = 'checked',\n    classIcon        = 'theme-icon theme-icon-radio',\n    classIconActive  = 'theme-icon theme-icon-radio-active';\n\n\n/**\n * Base radio list implementation\n *\n * @constructor\n * @extends List\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {string} [config.classIcon] icon default state class name\n * @param {string} [config.classIconActive] icon active state class name\n * @param {string} [config.classChecked] checked item class\n */\nfunction RadioList ( config ) {\n    var self = this;\n\n    if ( config.classIcon ) {\n        classIcon = config.classIcon;\n    }\n    if ( config.classIconActive ) {\n        classIconActive = config.classIconActive;\n    }\n    if ( config.classChecked ) {\n        classIcon = config.classChecked;\n    }\n\n    /**\n     * Checked item data\n     *\n     * @type {Element}\n     */\n    this.checkedData = null;\n\n    /**\n     * Checked element index\n     *\n     * @type {number}\n     */\n    this.checkedIndex = null;\n\n    List.call(this, config);\n\n    this.addListener('click:item', function ( event ) {\n        var $item = event.$item,\n            previousCheckedData = self.checkedData;\n\n        self.checkIndex($item.index);\n\n        if ( previousCheckedData !== $item.data ) {\n            /**\n             * Select element from list\n             *\n             * @event select\n             * @property {Element} $item object\n             */\n            self.emit('select', $item);\n        }\n    });\n}\n\n\nRadioList.prototype = Object.create(List.prototype);\nRadioList.prototype.constructor = RadioList;\n\n// set component name\nRadioList.prototype.name = 'mag-component-radio-list';\n\nRadioList.prototype.init = function ( config ) {\n    config = config || {};\n    List.prototype.init.call(this, config);\n};\n\n\n/**\n * Set data and render inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nRadioList.prototype.setData = function ( config ) {\n    List.prototype.setData.call(this, config);\n\n    this.defaultCheckedIndex = this.checkedIndex;\n\n    if ( this.$focusItem ) {\n        this.defaultFocusIndex = this.$focusItem.index;\n    } else {\n        this.defaultFocusIndex = 0;\n    }\n};\n\n\n/**\n * Reset data to default state and render inner structures and HTML.\n */\nRadioList.prototype.resetData = function () {\n    this.checkIndex(this.defaultCheckedIndex);\n    this.focusIndex(this.defaultFocusIndex);\n};\n\n\n/**\n * Set all states to false and render inner structures and HTML.\n *\n * @param {number} [focusIndex] focus index\n */\nRadioList.prototype.clearChecked = function ( focusIndex ) {\n    var index = 0;\n\n    for ( index; index < this.data.length; index++ ) {\n        this.data[index].state = false;\n    }\n\n    // no focusIndex, focusIndex may be 0\n    if ( !focusIndex && focusIndex !== 0 ) {\n        focusIndex = this.$focusItem ? this.$focusItem.index : 0;\n    }\n\n    this.setData({data: this.data, focusIndex: focusIndex});\n};\n\n\n/**\n * Default render function\n *\n * @param {Element} $item in list\n * @param {Object} data to render layout element\n * @param {string} [data.title] title of checkbox\n * @param {boolean} [data.state] state of checkbox: checked or not\n * @param {string} [data.value] special value of item\n */\nRadioList.prototype.renderItemDefault = function ( $item, data ) {\n    var table,\n        tr,\n        td,\n        check;\n\n    if ( $item.ready ) {\n        $item.$title.innerText = data.title || '';\n\n        if ( data.state ) {\n            $item.classList.add(classChecked);\n            $item.checkBox.className = classIconActive;\n        } else {\n            $item.classList.remove(classChecked);\n            $item.checkBox.className = classIcon;\n        }\n\n        $item.state = data.state;\n        $item.value = data.value;\n\n    } else {\n        $item.innerHTML = '';\n        table = document.createElement('table');\n        tr = document.createElement('tr');\n        td = document.createElement('td');\n        check = document.createElement('div');\n\n        if ( data.state ) {\n            $item.classList.add(classChecked);\n            check.className = classIconActive;\n        } else {\n            $item.classList.remove(classChecked);\n            check.className = classIcon;\n        }\n\n        table.appendChild(tr);\n        td.appendChild(check);\n\n        td.className = 'checkBoxWrapper';\n        tr.appendChild(td);\n\n        td = document.createElement('td');\n        td.className = 'title';\n        td.innerText = data.title || '';\n        tr.appendChild(td);\n\n        $item.checkBox = check;\n        $item.state = data.state;\n        $item.value = data.value;\n        $item.$title = td;\n\n        $item.appendChild(table);\n\n        if ( data.state ) {\n            this.checkedData = data;\n            this.checkedIndex = $item.index;\n        }\n\n        $item.ready = true;\n    }\n};\n\n\n/**\n * Check element by index\n *\n * @param {number} index of element to check\n */\nRadioList.prototype.checkIndex = function ( index ) {\n    var $node;\n\n    if ( DEVELOP ) {\n        if ( index >= this.data.length ) {\n            throw new Error(__filename + ': wrong index to check');\n        }\n    }\n\n    // do not need to do the same\n    if ( index === this.checkedIndex ) { return; }\n\n    if ( this.checkedIndex !== null && this.$node.children.length ) {\n        this.data[this.checkedIndex].state = false;\n        $node = this.getItemNodeByIndex(this.checkedIndex);\n        if ( $node ) {\n            $node.checkBox.className = classIcon;\n            $node.classList.remove(classChecked);\n        }\n    }\n\n    $node = this.getItemNodeByIndex(index);\n    if ( $node ) {\n        $node.checkBox.className = classIconActive;\n        $node.classList.add(classChecked);\n        $node.state = true;\n    }\n\n    this.data[index].state = true;\n    this.checkedData = this.data[index];\n    this.checkedIndex = index;\n};\n\n\n/**\n * Get list item node by item index\n *\n * @param {number} index of item to find node\n * @return {?Element} item node link\n */\nRadioList.prototype.getItemNodeByIndex = function ( index ) {\n    var children = this.$node.children;\n\n    index -= this.viewIndex;\n    if ( index < this.size && index >= 0 ) {\n        return children[index];\n    }\n\n    return null;\n};\n\nRadioList.prototype.renderItem = RadioList.prototype.renderItemDefault;\n\nmodule.exports = RadioList;\n","module.exports = [\n    {\"name\":\"Abkhaz\", \"local\":\"Аҧсуа\", \"1\":\"ab\", \"2\":\"abk\", \"2T\":\"abk\", \"2B\":\"abk\", \"3\":\"abk\"},\n    {\"name\":\"Afar\", \"local\":\"Afaraf\", \"1\":\"aa\", \"2\":\"aar\", \"2T\":\"aar\", \"2B\":\"aar\", \"3\":\"aar\"},\n    {\"name\":\"Afrikaans\", \"local\":\"Afrikaans\", \"1\":\"af\", \"2\":\"afr\", \"2T\":\"afr\", \"2B\":\"afr\", \"3\":\"afr\"},\n    {\"name\":\"Akan\", \"local\":\"Akan\", \"1\":\"ak\", \"2\":\"aka\", \"2T\":\"aka\", \"2B\":\"aka\", \"3\":\"aka\"},\n    {\"name\":\"Albanian\", \"local\":\"Shqip\", \"1\":\"sq\", \"2\":\"sqi\", \"2T\":\"sqi\", \"2B\":\"alb\", \"3\":\"sqi\"},\n    {\"name\":\"Amharic\", \"local\":\"አማርኛ\", \"1\":\"am\", \"2\":\"amh\", \"2T\":\"amh\", \"2B\":\"amh\", \"3\":\"amh\"},\n    {\"name\":\"Arabic\", \"local\":\"العربية\", \"1\":\"ar\", \"2\":\"ara\", \"2T\":\"ara\", \"2B\":\"ara\", \"3\":\"ara\"},\n    {\"name\":\"Aragonese\", \"local\":\"Aragonés\", \"1\":\"an\", \"2\":\"arg\", \"2T\":\"arg\", \"2B\":\"arg\", \"3\":\"arg\"},\n    {\"name\":\"Armenian\", \"local\":\"Հայերեն\", \"1\":\"hy\", \"2\":\"hye\", \"2T\":\"hye\", \"2B\":\"arm\", \"3\":\"hye\"},\n    {\"name\":\"Assamese\", \"local\":\"অসমীয়া\", \"1\":\"as\", \"2\":\"asm\", \"2T\":\"asm\", \"2B\":\"asm\", \"3\":\"asm\"},\n    {\"name\":\"Avaric\", \"local\":\"Авар\", \"1\":\"av\", \"2\":\"ava\", \"2T\":\"ava\", \"2B\":\"ava\", \"3\":\"ava\"},\n    {\"name\":\"Avestan\", \"local\":\"avesta\", \"1\":\"ae\", \"2\":\"ave\", \"2T\":\"ave\", \"2B\":\"ave\", \"3\":\"ave\"},\n    {\"name\":\"Aymara\", \"local\":\"Aymar\", \"1\":\"ay\", \"2\":\"aym\", \"2T\":\"aym\", \"2B\":\"aym\", \"3\":\"aym\"},\n    {\"name\":\"Azerbaijani\", \"local\":\"Azərbaycanca\", \"1\":\"az\", \"2\":\"aze\", \"2T\":\"aze\", \"2B\":\"aze\", \"3\":\"aze\"},\n    {\"name\":\"Bambara\", \"local\":\"Bamanankan\", \"1\":\"bm\", \"2\":\"bam\", \"2T\":\"bam\", \"2B\":\"bam\", \"3\":\"bam\"},\n    {\"name\":\"Bashkir\", \"local\":\"Башҡортса\", \"1\":\"ba\", \"2\":\"bak\", \"2T\":\"bak\", \"2B\":\"bak\", \"3\":\"bak\"},\n    {\"name\":\"Basque\", \"local\":\"Euskara\", \"1\":\"eu\", \"2\":\"eus\", \"2T\":\"eus\", \"2B\":\"baq\", \"3\":\"eus\"},\n    {\"name\":\"Belarusian\", \"local\":\"Беларуская\", \"1\":\"be\", \"2\":\"bel\", \"2T\":\"bel\", \"2B\":\"bel\", \"3\":\"bel\"},\n    {\"name\":\"Bengali\", \"local\":\"বাংলা\", \"1\":\"bn\", \"2\":\"ben\", \"2T\":\"ben\", \"2B\":\"ben\", \"3\":\"ben\"},\n    {\"name\":\"Bihari\", \"local\":\"भोजपुरी\", \"1\":\"bh\", \"2\":\"bih\", \"2T\":\"bih\", \"2B\":\"bih\", \"3\":\"bih\"},\n    {\"name\":\"Bislama\", \"local\":\"Bislama\", \"1\":\"bi\", \"2\":\"bis\", \"2T\":\"bis\", \"2B\":\"bis\", \"3\":\"bis\"},\n    {\"name\":\"Bosnian\", \"local\":\"Bosanski\", \"1\":\"bs\", \"2\":\"bos\", \"2T\":\"bos\", \"2B\":\"bos\", \"3\":\"bos\"},\n    {\"name\":\"Breton\", \"local\":\"Brezhoneg\", \"1\":\"br\", \"2\":\"bre\", \"2T\":\"bre\", \"2B\":\"bre\", \"3\":\"bre\"},\n    {\"name\":\"Bulgarian\", \"local\":\"Български\", \"1\":\"bg\", \"2\":\"bul\", \"2T\":\"bul\", \"2B\":\"bul\", \"3\":\"bul\"},\n    {\"name\":\"Burmese\", \"local\":\"မြန်မာဘာသာ\", \"1\":\"my\", \"2\":\"mya\", \"2T\":\"mya\", \"2B\":\"bur\", \"3\":\"mya\"},\n    {\"name\":\"Catalan\", \"local\":\"Català\", \"1\":\"ca\", \"2\":\"cat\", \"2T\":\"cat\", \"2B\":\"cat\", \"3\":\"cat\"},\n    {\"name\":\"Chamorro\", \"local\":\"Chamoru\", \"1\":\"ch\", \"2\":\"cha\", \"2T\":\"cha\", \"2B\":\"cha\", \"3\":\"cha\"},\n    {\"name\":\"Chechen\", \"local\":\"Нохчийн\", \"1\":\"ce\", \"2\":\"che\", \"2T\":\"che\", \"2B\":\"che\", \"3\":\"che\"},\n    {\"name\":\"Chichewa\", \"local\":\"Chichewa\", \"1\":\"ny\", \"2\":\"nya\", \"2T\":\"nya\", \"2B\":\"nya\", \"3\":\"nya\"},\n    {\"name\":\"Chinese\", \"local\":\"中文\", \"1\":\"zh\", \"2\":\"zho\", \"2T\":\"zho\", \"2B\":\"chi\", \"3\":\"zho\"},\n    {\"name\":\"Chuvash\", \"local\":\"Чӑвашла\", \"1\":\"cv\", \"2\":\"chv\", \"2T\":\"chv\", \"2B\":\"chv\", \"3\":\"chv\"},\n    {\"name\":\"Cornish\", \"local\":\"Kernewek\", \"1\":\"kw\", \"2\":\"cor\", \"2T\":\"cor\", \"2B\":\"cor\", \"3\":\"cor\"},\n    {\"name\":\"Corsican\", \"local\":\"Corsu\", \"1\":\"co\", \"2\":\"cos\", \"2T\":\"cos\", \"2B\":\"cos\", \"3\":\"cos\"},\n    {\"name\":\"Cree\", \"local\":\"ᓀᐦᐃᔭᐍᐏᐣ\", \"1\":\"cr\", \"2\":\"cre\", \"2T\":\"cre\", \"2B\":\"cre\", \"3\":\"cre\"},\n    {\"name\":\"Croatian\", \"local\":\"Hrvatski\", \"1\":\"hr\", \"2\":\"hrv\", \"2T\":\"hrv\", \"2B\":\"hrv\", \"3\":\"hrv\"},\n    {\"name\":\"Czech\", \"local\":\"Čeština\", \"1\":\"cs\", \"2\":\"ces\", \"2T\":\"ces\", \"2B\":\"cze\", \"3\":\"ces\"},\n    {\"name\":\"Danish\", \"local\":\"Dansk\", \"1\":\"da\", \"2\":\"dan\", \"2T\":\"dan\", \"2B\":\"dan\", \"3\":\"dan\"},\n    {\"name\":\"Divehi\", \"local\":\"Divehi\", \"1\":\"dv\", \"2\":\"div\", \"2T\":\"div\", \"2B\":\"div\", \"3\":\"div\"},\n    {\"name\":\"Dutch\", \"local\":\"Nederlands\", \"1\":\"nl\", \"2\":\"nld\", \"2T\":\"nld\", \"2B\":\"dut\", \"3\":\"nld\"},\n    {\"name\":\"Dzongkha\", \"local\":\"རྫོང་ཁ\", \"1\":\"dz\", \"2\":\"dzo\", \"2T\":\"dzo\", \"2B\":\"dzo\", \"3\":\"dzo\"},\n    {\"name\":\"English\", \"local\":\"English\", \"1\":\"en\", \"2\":\"eng\", \"2T\":\"eng\", \"2B\":\"eng\", \"3\":\"eng\"},\n    {\"name\":\"Esperanto\", \"local\":\"Esperanto\", \"1\":\"eo\", \"2\":\"epo\", \"2T\":\"epo\", \"2B\":\"epo\", \"3\":\"epo\"},\n    {\"name\":\"Estonian\", \"local\":\"Eesti\", \"1\":\"et\", \"2\":\"est\", \"2T\":\"est\", \"2B\":\"est\", \"3\":\"est\"},\n    {\"name\":\"Ewe\", \"local\":\"Eʋegbe\", \"1\":\"ee\", \"2\":\"ewe\", \"2T\":\"ewe\", \"2B\":\"ewe\", \"3\":\"ewe\"},\n    {\"name\":\"Faroese\", \"local\":\"Føroyskt\", \"1\":\"fo\", \"2\":\"fao\", \"2T\":\"fao\", \"2B\":\"fao\", \"3\":\"fao\"},\n    {\"name\":\"Fijian\", \"local\":\"Na Vosa Vaka-Viti\", \"1\":\"fj\", \"2\":\"fij\", \"2T\":\"fij\", \"2B\":\"fij\", \"3\":\"fij\"},\n    {\"name\":\"Finnish\", \"local\":\"Suomi\", \"1\":\"fi\", \"2\":\"fin\", \"2T\":\"fin\", \"2B\":\"fin\", \"3\":\"fin\"},\n    {\"name\":\"French\", \"local\":\"Français\", \"1\":\"fr\", \"2\":\"fra\", \"2T\":\"fra\", \"2B\":\"fre\", \"3\":\"fra\"},\n    {\"name\":\"Fula\", \"local\":\"Fulfulde\", \"1\":\"ff\", \"2\":\"ful\", \"2T\":\"ful\", \"2B\":\"ful\", \"3\":\"ful\"},\n    {\"name\":\"Galician\", \"local\":\"Galego\", \"1\":\"gl\", \"2\":\"glg\", \"2T\":\"glg\", \"2B\":\"glg\", \"3\":\"glg\"},\n    {\"name\":\"Georgian\", \"local\":\"ქართული\", \"1\":\"ka\", \"2\":\"kat\", \"2T\":\"kat\", \"2B\":\"geo\", \"3\":\"kat\"},\n    {\"name\":\"German\", \"local\":\"Deutsch\", \"1\":\"de\", \"2\":\"deu\", \"2T\":\"deu\", \"2B\":\"ger\", \"3\":\"deu\"},\n    {\"name\":\"Greek\", \"local\":\"Ελληνικά\", \"1\":\"el\", \"2\":\"ell\", \"2T\":\"ell\", \"2B\":\"gre\", \"3\":\"ell\"},\n    {\"name\":\"Guaraní\", \"local\":\"Avañe'ẽ\", \"1\":\"gn\", \"2\":\"grn\", \"2T\":\"grn\", \"2B\":\"grn\", \"3\":\"grn\"},\n    {\"name\":\"Gujarati\", \"local\":\"ગુજરાતી\", \"1\":\"gu\", \"2\":\"guj\", \"2T\":\"guj\", \"2B\":\"guj\", \"3\":\"guj\"},\n    {\"name\":\"Haitian\", \"local\":\"Kreyòl Ayisyen\", \"1\":\"ht\", \"2\":\"hat\", \"2T\":\"hat\", \"2B\":\"hat\", \"3\":\"hat\"},\n    {\"name\":\"Hausa\", \"local\":\"هَوُسَ\", \"1\":\"ha\", \"2\":\"hau\", \"2T\":\"hau\", \"2B\":\"hau\", \"3\":\"hau\"},\n    {\"name\":\"Hebrew\", \"local\":\"עברית\", \"1\":\"he\", \"2\":\"heb\", \"2T\":\"heb\", \"2B\":\"heb\", \"3\":\"heb\"},\n    {\"name\":\"Herero\", \"local\":\"Otjiherero\", \"1\":\"hz\", \"2\":\"her\", \"2T\":\"her\", \"2B\":\"her\", \"3\":\"her\"},\n    {\"name\":\"Hindi\", \"local\":\"हिन्दी\", \"1\":\"hi\", \"2\":\"hin\", \"2T\":\"hin\", \"2B\":\"hin\", \"3\":\"hin\"},\n    {\"name\":\"Hiri Motu\", \"local\":\"Hiri Motu\", \"1\":\"ho\", \"2\":\"hmo\", \"2T\":\"hmo\", \"2B\":\"hmo\", \"3\":\"hmo\"},\n    {\"name\":\"Hungarian\", \"local\":\"Magyar\", \"1\":\"hu\", \"2\":\"hun\", \"2T\":\"hun\", \"2B\":\"hun\", \"3\":\"hun\"},\n    {\"name\":\"Interlingua\", \"local\":\"Interlingua\", \"1\":\"ia\", \"2\":\"ina\", \"2T\":\"ina\", \"2B\":\"ina\", \"3\":\"ina\"},\n    {\"name\":\"Indonesian\", \"local\":\"Bahasa Indonesia\", \"1\":\"id\", \"2\":\"ind\", \"2T\":\"ind\", \"2B\":\"ind\", \"3\":\"ind\"},\n    {\"name\":\"Interlingue\", \"local\":\"Interlingue\", \"1\":\"ie\", \"2\":\"ile\", \"2T\":\"ile\", \"2B\":\"ile\", \"3\":\"ile\"},\n    {\"name\":\"Irish\", \"local\":\"Gaeilge\", \"1\":\"ga\", \"2\":\"gle\", \"2T\":\"gle\", \"2B\":\"gle\", \"3\":\"gle\"},\n    {\"name\":\"Igbo\", \"local\":\"Igbo\", \"1\":\"ig\", \"2\":\"ibo\", \"2T\":\"ibo\", \"2B\":\"ibo\", \"3\":\"ibo\"},\n    {\"name\":\"Inupiaq\", \"local\":\"Iñupiak\", \"1\":\"ik\", \"2\":\"ipk\", \"2T\":\"ipk\", \"2B\":\"ipk\", \"3\":\"ipk\"},\n    {\"name\":\"Ido\", \"local\":\"Ido\", \"1\":\"io\", \"2\":\"ido\", \"2T\":\"ido\", \"2B\":\"ido\", \"3\":\"ido\"},\n    {\"name\":\"Icelandic\", \"local\":\"Íslenska\", \"1\":\"is\", \"2\":\"isl\", \"2T\":\"isl\", \"2B\":\"ice\", \"3\":\"isl\"},\n    {\"name\":\"Italian\", \"local\":\"Italiano\", \"1\":\"it\", \"2\":\"ita\", \"2T\":\"ita\", \"2B\":\"ita\", \"3\":\"ita\"},\n    {\"name\":\"Inuktitut\", \"local\":\"ᐃᓄᒃᑎᑐᑦ\", \"1\":\"iu\", \"2\":\"iku\", \"2T\":\"iku\", \"2B\":\"iku\", \"3\":\"iku\"},\n    {\"name\":\"Japanese\", \"local\":\"日本語\", \"1\":\"ja\", \"2\":\"jpn\", \"2T\":\"jpn\", \"2B\":\"jpn\", \"3\":\"jpn\"},\n    {\"name\":\"Javanese\", \"local\":\"Basa Jawa\", \"1\":\"jv\", \"2\":\"jav\", \"2T\":\"jav\", \"2B\":\"jav\", \"3\":\"jav\"},\n    {\"name\":\"Kalaallisut\", \"local\":\"Kalaallisut\", \"1\":\"kl\", \"2\":\"kal\", \"2T\":\"kal\", \"2B\":\"kal\", \"3\":\"kal\"},\n    {\"name\":\"Kannada\", \"local\":\"ಕನ್ನಡ\", \"1\":\"kn\", \"2\":\"kan\", \"2T\":\"kan\", \"2B\":\"kan\", \"3\":\"kan\"},\n    {\"name\":\"Kanuri\", \"local\":\"Kanuri\", \"1\":\"kr\", \"2\":\"kau\", \"2T\":\"kau\", \"2B\":\"kau\", \"3\":\"kau\"},\n    {\"name\":\"Kashmiri\", \"local\":\"كشميري\", \"1\":\"ks\", \"2\":\"kas\", \"2T\":\"kas\", \"2B\":\"kas\", \"3\":\"kas\"},\n    {\"name\":\"Kazakh\", \"local\":\"Қазақша\", \"1\":\"kk\", \"2\":\"kaz\", \"2T\":\"kaz\", \"2B\":\"kaz\", \"3\":\"kaz\"},\n    {\"name\":\"Khmer\", \"local\":\"ភាសាខ្មែរ\", \"1\":\"km\", \"2\":\"khm\", \"2T\":\"khm\", \"2B\":\"khm\", \"3\":\"khm\"},\n    {\"name\":\"Kikuyu\", \"local\":\"Gĩkũyũ\", \"1\":\"ki\", \"2\":\"kik\", \"2T\":\"kik\", \"2B\":\"kik\", \"3\":\"kik\"},\n    {\"name\":\"Kinyarwanda\", \"local\":\"Kinyarwanda\", \"1\":\"rw\", \"2\":\"kin\", \"2T\":\"kin\", \"2B\":\"kin\", \"3\":\"kin\"},\n    {\"name\":\"Kyrgyz\", \"local\":\"Кыргызча\", \"1\":\"ky\", \"2\":\"kir\", \"2T\":\"kir\", \"2B\":\"kir\", \"3\":\"kir\"},\n    {\"name\":\"Komi\", \"local\":\"Коми\", \"1\":\"kv\", \"2\":\"kom\", \"2T\":\"kom\", \"2B\":\"kom\", \"3\":\"kom\"},\n    {\"name\":\"Kongo\", \"local\":\"Kongo\", \"1\":\"kg\", \"2\":\"kon\", \"2T\":\"kon\", \"2B\":\"kon\", \"3\":\"kon\"},\n    {\"name\":\"Korean\", \"local\":\"한국어\", \"1\":\"ko\", \"2\":\"kor\", \"2T\":\"kor\", \"2B\":\"kor\", \"3\":\"kor\"},\n    {\"name\":\"Kurdish\", \"local\":\"Kurdî\", \"1\":\"ku\", \"2\":\"kur\", \"2T\":\"kur\", \"2B\":\"kur\", \"3\":\"kur\"},\n    {\"name\":\"Kwanyama\", \"local\":\"Kuanyama\", \"1\":\"kj\", \"2\":\"kua\", \"2T\":\"kua\", \"2B\":\"kua\", \"3\":\"kua\"},\n    {\"name\":\"Latin\", \"local\":\"Latina\", \"1\":\"la\", \"2\":\"lat\", \"2T\":\"lat\", \"2B\":\"lat\", \"3\":\"lat\"},\n    {\"name\":\"Luxembourgish\", \"local\":\"Lëtzebuergesch\", \"1\":\"lb\", \"2\":\"ltz\", \"2T\":\"ltz\", \"2B\":\"ltz\", \"3\":\"ltz\"},\n    {\"name\":\"Ganda\", \"local\":\"Luganda\", \"1\":\"lg\", \"2\":\"lug\", \"2T\":\"lug\", \"2B\":\"lug\", \"3\":\"lug\"},\n    {\"name\":\"Limburgish\", \"local\":\"Limburgs\", \"1\":\"li\", \"2\":\"lim\", \"2T\":\"lim\", \"2B\":\"lim\", \"3\":\"lim\"},\n    {\"name\":\"Lingala\", \"local\":\"Lingála\", \"1\":\"ln\", \"2\":\"lin\", \"2T\":\"lin\", \"2B\":\"lin\", \"3\":\"lin\"},\n    {\"name\":\"Lao\", \"local\":\"ພາສາລາວ\", \"1\":\"lo\", \"2\":\"lao\", \"2T\":\"lao\", \"2B\":\"lao\", \"3\":\"lao\"},\n    {\"name\":\"Lithuanian\", \"local\":\"Lietuvių\", \"1\":\"lt\", \"2\":\"lit\", \"2T\":\"lit\", \"2B\":\"lit\", \"3\":\"lit\"},\n    {\"name\":\"Luba-Katanga\", \"local\":\"Tshiluba\", \"1\":\"lu\", \"2\":\"lub\", \"2T\":\"lub\", \"2B\":\"lub\", \"3\":\"lub\"},\n    {\"name\":\"Latvian\", \"local\":\"Latviešu\", \"1\":\"lv\", \"2\":\"lav\", \"2T\":\"lav\", \"2B\":\"lav\", \"3\":\"lav\"},\n    {\"name\":\"Manx\", \"local\":\"Gaelg\", \"1\":\"gv\", \"2\":\"glv\", \"2T\":\"glv\", \"2B\":\"glv\", \"3\":\"glv\"},\n    {\"name\":\"Macedonian\", \"local\":\"Македонски\", \"1\":\"mk\", \"2\":\"mkd\", \"2T\":\"mkd\", \"2B\":\"mac\", \"3\":\"mkd\"},\n    {\"name\":\"Malagasy\", \"local\":\"Malagasy\", \"1\":\"mg\", \"2\":\"mlg\", \"2T\":\"mlg\", \"2B\":\"mlg\", \"3\":\"mlg\"},\n    {\"name\":\"Malay\", \"local\":\"Bahasa Melayu\", \"1\":\"ms\", \"2\":\"msa\", \"2T\":\"msa\", \"2B\":\"may\", \"3\":\"msa\"},\n    {\"name\":\"Malayalam\", \"local\":\"മലയാളം\", \"1\":\"ml\", \"2\":\"mal\", \"2T\":\"mal\", \"2B\":\"mal\", \"3\":\"mal\"},\n    {\"name\":\"Maltese\", \"local\":\"Malti\", \"1\":\"mt\", \"2\":\"mlt\", \"2T\":\"mlt\", \"2B\":\"mlt\", \"3\":\"mlt\"},\n    {\"name\":\"Māori\", \"local\":\"Māori\", \"1\":\"mi\", \"2\":\"mri\", \"2T\":\"mri\", \"2B\":\"mao\", \"3\":\"mri\"},\n    {\"name\":\"Marathi\", \"local\":\"मराठी\", \"1\":\"mr\", \"2\":\"mar\", \"2T\":\"mar\", \"2B\":\"mar\", \"3\":\"mar\"},\n    {\"name\":\"Marshallese\", \"local\":\"Kajin M̧ajeļ\", \"1\":\"mh\", \"2\":\"mah\", \"2T\":\"mah\", \"2B\":\"mah\", \"3\":\"mah\"},\n    {\"name\":\"Mongolian\", \"local\":\"Монгол\", \"1\":\"mn\", \"2\":\"mon\", \"2T\":\"mon\", \"2B\":\"mon\", \"3\":\"mon\"},\n    {\"name\":\"Nauru\", \"local\":\"Dorerin Naoero\", \"1\":\"na\", \"2\":\"nau\", \"2T\":\"nau\", \"2B\":\"nau\", \"3\":\"nau\"},\n    {\"name\":\"Navajo\", \"local\":\"Diné Bizaad\", \"1\":\"nv\", \"2\":\"nav\", \"2T\":\"nav\", \"2B\":\"nav\", \"3\":\"nav\"},\n    {\"name\":\"Northern Ndebele\", \"local\":\"isiNdebele\", \"1\":\"nd\", \"2\":\"nde\", \"2T\":\"nde\", \"2B\":\"nde\", \"3\":\"nde\"},\n    {\"name\":\"Nepali\", \"local\":\"नेपाली\", \"1\":\"ne\", \"2\":\"nep\", \"2T\":\"nep\", \"2B\":\"nep\", \"3\":\"nep\"},\n    {\"name\":\"Ndonga\", \"local\":\"Owambo\", \"1\":\"ng\", \"2\":\"ndo\", \"2T\":\"ndo\", \"2B\":\"ndo\", \"3\":\"ndo\"},\n    {\"name\":\"Norwegian Bokmål\", \"local\":\"Norsk (Bokmål)\", \"1\":\"nb\", \"2\":\"nob\", \"2T\":\"nob\", \"2B\":\"nob\", \"3\":\"nob\"},\n    {\"name\":\"Norwegian Nynorsk\", \"local\":\"Norsk (Nynorsk)\", \"1\":\"nn\", \"2\":\"nno\", \"2T\":\"nno\", \"2B\":\"nno\", \"3\":\"nno\"},\n    {\"name\":\"Norwegian\", \"local\":\"Norsk\", \"1\":\"no\", \"2\":\"nor\", \"2T\":\"nor\", \"2B\":\"nor\", \"3\":\"nor\"},\n    {\"name\":\"Nuosu\", \"local\":\"ꆈꌠ꒿ Nuosuhxop\", \"1\":\"ii\", \"2\":\"iii\", \"2T\":\"iii\", \"2B\":\"iii\", \"3\":\"iii\"},\n    {\"name\":\"Southern Ndebele\", \"local\":\"isiNdebele\", \"1\":\"nr\", \"2\":\"nbl\", \"2T\":\"nbl\", \"2B\":\"nbl\", \"3\":\"nbl\"},\n    {\"name\":\"Occitan\", \"local\":\"Occitan\", \"1\":\"oc\", \"2\":\"oci\", \"2T\":\"oci\", \"2B\":\"oci\", \"3\":\"oci\"},\n    {\"name\":\"Ojibwe\", \"local\":\"ᐊᓂᔑᓈᐯᒧᐎᓐ\", \"1\":\"oj\", \"2\":\"oji\", \"2T\":\"oji\", \"2B\":\"oji\", \"3\":\"oji\"},\n    {\"name\":\"Old Church Slavonic\", \"local\":\"Словѣ́ньскъ\", \"1\":\"cu\", \"2\":\"chu\", \"2T\":\"chu\", \"2B\":\"chu\", \"3\":\"chu\"},\n    {\"name\":\"Oromo\", \"local\":\"Afaan Oromoo\", \"1\":\"om\", \"2\":\"orm\", \"2T\":\"orm\", \"2B\":\"orm\", \"3\":\"orm\"},\n    {\"name\":\"Oriya\", \"local\":\"ଓଡି଼ଆ\", \"1\":\"or\", \"2\":\"ori\", \"2T\":\"ori\", \"2B\":\"ori\", \"3\":\"ori\"},\n    {\"name\":\"Ossetian\", \"local\":\"Ирон æвзаг\", \"1\":\"os\", \"2\":\"oss\", \"2T\":\"oss\", \"2B\":\"oss\", \"3\":\"oss\"},\n    {\"name\":\"Panjabi\", \"local\":\"ਪੰਜਾਬੀ\", \"1\":\"pa\", \"2\":\"pan\", \"2T\":\"pan\", \"2B\":\"pan\", \"3\":\"pan\"},\n    {\"name\":\"Pāli\", \"local\":\"पाऴि\", \"1\":\"pi\", \"2\":\"pli\", \"2T\":\"pli\", \"2B\":\"pli\", \"3\":\"pli\"},\n    {\"name\":\"Persian\", \"local\":\"فارسی\", \"1\":\"fa\", \"2\":\"fas\", \"2T\":\"fas\", \"2B\":\"per\", \"3\":\"fas\"},\n    {\"name\":\"Polish\", \"local\":\"Polski\", \"1\":\"pl\", \"2\":\"pol\", \"2T\":\"pol\", \"2B\":\"pol\", \"3\":\"pol\"},\n    {\"name\":\"Pashto\", \"local\":\"پښتو\", \"1\":\"ps\", \"2\":\"pus\", \"2T\":\"pus\", \"2B\":\"pus\", \"3\":\"pus\"},\n    {\"name\":\"Portuguese\", \"local\":\"Português\", \"1\":\"pt\", \"2\":\"por\", \"2T\":\"por\", \"2B\":\"por\", \"3\":\"por\"},\n    {\"name\":\"Quechua\", \"local\":\"Runa Simi\", \"1\":\"qu\", \"2\":\"que\", \"2T\":\"que\", \"2B\":\"que\", \"3\":\"que\"},\n    {\"name\":\"Romansh\", \"local\":\"Rumantsch\", \"1\":\"rm\", \"2\":\"roh\", \"2T\":\"roh\", \"2B\":\"roh\", \"3\":\"roh\"},\n    {\"name\":\"Kirundi\", \"local\":\"Kirundi\", \"1\":\"rn\", \"2\":\"run\", \"2T\":\"run\", \"2B\":\"run\", \"3\":\"run\"},\n    {\"name\":\"Romanian\", \"local\":\"Română\", \"1\":\"ro\", \"2\":\"ron\", \"2T\":\"ron\", \"2B\":\"rum\", \"3\":\"ron\"},\n    {\"name\":\"Russian\", \"local\":\"Русский\", \"1\":\"ru\", \"2\":\"rus\", \"2T\":\"rus\", \"2B\":\"rus\", \"3\":\"rus\"},\n    {\"name\":\"Sanskrit\", \"local\":\"संस्कृतम्\", \"1\":\"sa\", \"2\":\"san\", \"2T\":\"san\", \"2B\":\"san\", \"3\":\"san\"},\n    {\"name\":\"Sardinian\", \"local\":\"Sardu\", \"1\":\"sc\", \"2\":\"srd\", \"2T\":\"srd\", \"2B\":\"srd\", \"3\":\"srd\"},\n    {\"name\":\"Sindhi\", \"local\":\"سنڌي‎\", \"1\":\"sd\", \"2\":\"snd\", \"2T\":\"snd\", \"2B\":\"snd\", \"3\":\"snd\"},\n    {\"name\":\"Northern Sami\", \"local\":\"Sámegiella\", \"1\":\"se\", \"2\":\"sme\", \"2T\":\"sme\", \"2B\":\"sme\", \"3\":\"sme\"},\n    {\"name\":\"Samoan\", \"local\":\"Gagana Sāmoa\", \"1\":\"sm\", \"2\":\"smo\", \"2T\":\"smo\", \"2B\":\"smo\", \"3\":\"smo\"},\n    {\"name\":\"Sango\", \"local\":\"Sängö\", \"1\":\"sg\", \"2\":\"sag\", \"2T\":\"sag\", \"2B\":\"sag\", \"3\":\"sag\"},\n    {\"name\":\"Serbian\", \"local\":\"Српски\", \"1\":\"sr\", \"2\":\"srp\", \"2T\":\"srp\", \"2B\":\"srp\", \"3\":\"srp\"},\n    {\"name\":\"Gaelic\", \"local\":\"Gàidhlig\", \"1\":\"gd\", \"2\":\"gla\", \"2T\":\"gla\", \"2B\":\"gla\", \"3\":\"gla\"},\n    {\"name\":\"Shona\", \"local\":\"ChiShona\", \"1\":\"sn\", \"2\":\"sna\", \"2T\":\"sna\", \"2B\":\"sna\", \"3\":\"sna\"},\n    {\"name\":\"Sinhala\", \"local\":\"සිංහල\", \"1\":\"si\", \"2\":\"sin\", \"2T\":\"sin\", \"2B\":\"sin\", \"3\":\"sin\"},\n    {\"name\":\"Slovak\", \"local\":\"Slovenčina\", \"1\":\"sk\", \"2\":\"slk\", \"2T\":\"slk\", \"2B\":\"slo\", \"3\":\"slk\"},\n    {\"name\":\"Slovene\", \"local\":\"Slovenščina\", \"1\":\"sl\", \"2\":\"slv\", \"2T\":\"slv\", \"2B\":\"slv\", \"3\":\"slv\"},\n    {\"name\":\"Somali\", \"local\":\"Soomaaliga\", \"1\":\"so\", \"2\":\"som\", \"2T\":\"som\", \"2B\":\"som\", \"3\":\"som\"},\n    {\"name\":\"Southern Sotho\", \"local\":\"Sesotho\", \"1\":\"st\", \"2\":\"sot\", \"2T\":\"sot\", \"2B\":\"sot\", \"3\":\"sot\"},\n    {\"name\":\"Spanish\", \"local\":\"Español\", \"1\":\"es\", \"2\":\"spa\", \"2T\":\"spa\", \"2B\":\"spa\", \"3\":\"spa\"},\n    {\"name\":\"Sundanese\", \"local\":\"Basa Sunda\", \"1\":\"su\", \"2\":\"sun\", \"2T\":\"sun\", \"2B\":\"sun\", \"3\":\"sun\"},\n    {\"name\":\"Swahili\", \"local\":\"Kiswahili\", \"1\":\"sw\", \"2\":\"swa\", \"2T\":\"swa\", \"2B\":\"swa\", \"3\":\"swa\"},\n    {\"name\":\"Swati\", \"local\":\"SiSwati\", \"1\":\"ss\", \"2\":\"ssw\", \"2T\":\"ssw\", \"2B\":\"ssw\", \"3\":\"ssw\"},\n    {\"name\":\"Swedish\", \"local\":\"Svenska\", \"1\":\"sv\", \"2\":\"swe\", \"2T\":\"swe\", \"2B\":\"swe\", \"3\":\"swe\"},\n    {\"name\":\"Tamil\", \"local\":\"தமிழ்\", \"1\":\"ta\", \"2\":\"tam\", \"2T\":\"tam\", \"2B\":\"tam\", \"3\":\"tam\"},\n    {\"name\":\"Telugu\", \"local\":\"తెలుగు\", \"1\":\"te\", \"2\":\"tel\", \"2T\":\"tel\", \"2B\":\"tel\", \"3\":\"tel\"},\n    {\"name\":\"Tajik\", \"local\":\"Тоҷикӣ\", \"1\":\"tg\", \"2\":\"tgk\", \"2T\":\"tgk\", \"2B\":\"tgk\", \"3\":\"tgk\"},\n    {\"name\":\"Thai\", \"local\":\"ภาษาไทย\", \"1\":\"th\", \"2\":\"tha\", \"2T\":\"tha\", \"2B\":\"tha\", \"3\":\"tha\"},\n    {\"name\":\"Tigrinya\", \"local\":\"ትግርኛ\", \"1\":\"ti\", \"2\":\"tir\", \"2T\":\"tir\", \"2B\":\"tir\", \"3\":\"tir\"},\n    {\"name\":\"Tibetan Standard\", \"local\":\"བོད་ཡིག\", \"1\":\"bo\", \"2\":\"bod\", \"2T\":\"bod\", \"2B\":\"tib\", \"3\":\"bod\"},\n    {\"name\":\"Turkmen\", \"local\":\"Türkmençe\", \"1\":\"tk\", \"2\":\"tuk\", \"2T\":\"tuk\", \"2B\":\"tuk\", \"3\":\"tuk\"},\n    {\"name\":\"Tagalog\", \"local\":\"Tagalog\", \"1\":\"tl\", \"2\":\"tgl\", \"2T\":\"tgl\", \"2B\":\"tgl\", \"3\":\"tgl\"},\n    {\"name\":\"Tswana\", \"local\":\"Setswana\", \"1\":\"tn\", \"2\":\"tsn\", \"2T\":\"tsn\", \"2B\":\"tsn\", \"3\":\"tsn\"},\n    {\"name\":\"Tonga\", \"local\":\"faka Tonga\", \"1\":\"to\", \"2\":\"ton\", \"2T\":\"ton\", \"2B\":\"ton\", \"3\":\"ton\"},\n    {\"name\":\"Turkish\", \"local\":\"Türkçe\", \"1\":\"tr\", \"2\":\"tur\", \"2T\":\"tur\", \"2B\":\"tur\", \"3\":\"tur\"},\n    {\"name\":\"Tsonga\", \"local\":\"Xitsonga\", \"1\":\"ts\", \"2\":\"tso\", \"2T\":\"tso\", \"2B\":\"tso\", \"3\":\"tso\"},\n    {\"name\":\"Tatar\", \"local\":\"Татарча\", \"1\":\"tt\", \"2\":\"tat\", \"2T\":\"tat\", \"2B\":\"tat\", \"3\":\"tat\"},\n    {\"name\":\"Twi\", \"local\":\"Twi\", \"1\":\"tw\", \"2\":\"twi\", \"2T\":\"twi\", \"2B\":\"twi\", \"3\":\"twi\"},\n    {\"name\":\"Tahitian\", \"local\":\"Reo Mā’ohi\", \"1\":\"ty\", \"2\":\"tah\", \"2T\":\"tah\", \"2B\":\"tah\", \"3\":\"tah\"},\n    {\"name\":\"Uyghur\", \"local\":\"ئۇيغۇرچه\", \"1\":\"ug\", \"2\":\"uig\", \"2T\":\"uig\", \"2B\":\"uig\", \"3\":\"uig\"},\n    {\"name\":\"Ukrainian\", \"local\":\"Українська\", \"1\":\"uk\", \"2\":\"ukr\", \"2T\":\"ukr\", \"2B\":\"ukr\", \"3\":\"ukr\"},\n    {\"name\":\"Urdu\", \"local\":\"اردو\", \"1\":\"ur\", \"2\":\"urd\", \"2T\":\"urd\", \"2B\":\"urd\", \"3\":\"urd\"},\n    {\"name\":\"Uzbek\", \"local\":\"O‘zbek\", \"1\":\"uz\", \"2\":\"uzb\", \"2T\":\"uzb\", \"2B\":\"uzb\", \"3\":\"uzb\"},\n    {\"name\":\"Venda\", \"local\":\"Tshivenḓa\", \"1\":\"ve\", \"2\":\"ven\", \"2T\":\"ven\", \"2B\":\"ven\", \"3\":\"ven\"},\n    {\"name\":\"Vietnamese\", \"local\":\"Tiếng Việt\", \"1\":\"vi\", \"2\":\"vie\", \"2T\":\"vie\", \"2B\":\"vie\", \"3\":\"vie\"},\n    {\"name\":\"Volapük\", \"local\":\"Volapük\", \"1\":\"vo\", \"2\":\"vol\", \"2T\":\"vol\", \"2B\":\"vol\", \"3\":\"vol\"},\n    {\"name\":\"Walloon\", \"local\":\"Walon\", \"1\":\"wa\", \"2\":\"wln\", \"2T\":\"wln\", \"2B\":\"wln\", \"3\":\"wln\"},\n    {\"name\":\"Welsh\", \"local\":\"Cymraeg\", \"1\":\"cy\", \"2\":\"cym\", \"2T\":\"cym\", \"2B\":\"wel\", \"3\":\"cym\"},\n    {\"name\":\"Wolof\", \"local\":\"Wolof\", \"1\":\"wo\", \"2\":\"wol\", \"2T\":\"wol\", \"2B\":\"wol\", \"3\":\"wol\"},\n    {\"name\":\"Western Frisian\", \"local\":\"Frysk\", \"1\":\"fy\", \"2\":\"fry\", \"2T\":\"fry\", \"2B\":\"fry\", \"3\":\"fry\"},\n    {\"name\":\"Xhosa\", \"local\":\"isiXhosa\", \"1\":\"xh\", \"2\":\"xho\", \"2T\":\"xho\", \"2B\":\"xho\", \"3\":\"xho\"},\n    {\"name\":\"Yiddish\", \"local\":\"ייִדיש\", \"1\":\"yi\", \"2\":\"yid\", \"2T\":\"yid\", \"2B\":\"yid\", \"3\":\"yid\"},\n    {\"name\":\"Yoruba\", \"local\":\"Yorùbá\", \"1\":\"yo\", \"2\":\"yor\", \"2T\":\"yor\", \"2B\":\"yor\", \"3\":\"yor\"},\n    {\"name\":\"Zhuang\", \"local\":\"Cuengh\", \"1\":\"za\", \"2\":\"zha\", \"2T\":\"zha\", \"2B\":\"zha\", \"3\":\"zha\"},\n    {\"name\":\"Zulu\", \"local\":\"isiZulu\", \"1\":\"zu\", \"2\":\"zul\", \"2T\":\"zul\", \"2B\":\"zul\", \"3\":\"zul\"}\n];\n","'use strict';\n\nvar dom = require('spa-dom'),\n    tag = dom.tag;\n\nmodule.exports = function () {\n    var infoPanel = {};\n\n    infoPanel.$body = tag(\n        'div',\n        {className: 'infoBlock'},\n\n        infoPanel.$title = tag('div', {className: 'title'}),\n\n        infoPanel.$panel = tag(\n            'div',\n            {className: 'infoContainer'},\n\n            infoPanel.$country = tag('div', {className: 'country'}),\n\n            tag(\n                'div',\n                {className: 'ratingContainer'},\n                infoPanel.$ratingKino = tag('div', {className: 'ratingKino'}),\n                infoPanel.$ratingImdb = tag('div', {className: 'ratingImdb'}),\n                infoPanel.$censor = tag('div', {className: 'ageLimit'})\n            ),\n\n            tag(\n                'div',\n                {className: 'info'},\n\n                tag(\n                    'div',\n                    {className: 'line'},\n                    tag(\n                        'div',\n                        {className: 'left'},\n                        tag('span', {}, gettext('Director:') + ' '),\n                        infoPanel.$director = tag('div')\n                    )\n                ),\n\n                tag(\n                    'div',\n                    {className: 'line double'},\n                    tag(\n                        'div',\n                        {className: 'left'},\n                        tag('span', {}, gettext('Cast:')),\n                        infoPanel.$actors = tag('div')\n                    )\n                )\n            ),\n\n            infoPanel.$description = tag('div', {className: 'description'})\n        ),\n\n        tag(\n            'div',\n            {className: 'posterContainer'},\n            infoPanel.$img = tag('div', {className: 'poster'})\n        )\n    );\n\n    infoPanel.$info = tag('div', {className: 'information'});\n\n    return infoPanel;\n};\n","/**\n * Main application entry point.\n *\n * @author Roman Stoian <r.stoyan@infomir.com>.\n */\n\n'use strict';\n\nvar keys = require('stb-keys'),\n    app = require('mag-app');\n\nif ( TARGET === 'android-stb' || TARGET === 'android-app' ) {\n    window.removeEventListener('keydown', require('spa-app/lib/events').keydown);\n    require('../../../helpers/longpress.js')(app, {code: keys.ok, emitCode: keys.f3});\n}\n\n\napp.once('load', function () {\n    app.api = core.plugins.videoBackend;\n    // app.filters = {};\n\n    require('spa-gettext').load({name: core.environment.language}, function ( error ) {\n        if ( error ) {\n            debug.inspect(error);\n        }\n\n        // load pages\n        app.pages = {\n            main: require('./pages/main'),\n            movies: require('./pages/movies'),\n            info: require('./pages/info'),\n            more: require('./pages/more')\n        };\n\n        // show main page\n        app.route(app.pages.main);\n    });\n});\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app    = require('spa-app/lib/core'),\n    events = require('spa-app/lib/events');\n\n\n// get instance\nwindow.core = window.parent.getCoreInstance(window, app);\n\n// shims\nrequire('stb-shim-classlist');\n\n// apply geometry\nrequire('stb-app/lib/metrics');\n\n// load sdk css\nrequire('stb-app/lib/css')('sdk');\n\n// load theme css\nrequire('./css');\n\n// load app css\nrequire('stb-app/lib/css')('app');\n\n/**\n * Specify platform name\n *\n * @type {string}\n */\napp.platform = 'mag';\n\n/**\n * Show app.\n */\napp.ready = function () {\n    // if ( this.events['show'] ) {\n    //     this.emit('show');\n    // }\n    window.core.call('app:ready');\n};\n\n\n/**\n * Exit from app.\n * Destroy all application instance.\n * If callback function provided, and callback returns boolean 'true', application will stay alive.\n *\n * @fires module:/stb/app#exit\n */\napp.exit = function () {\n    if ( app.events['exit'] ) {\n        app.emit('exit');\n    }\n\n    core.call('exit');\n};\n\n\nevents.load = function ( event ) {\n    //window.core = window.parent.getCoreInstanse(window, app);\n    document.body.setAttribute('platform', app.platform);\n\n    if ( core.ready ) {\n        if ( app.events['load'] ) {\n            // notify listeners\n            app.emit('load', {});\n        }\n    } else {\n        core.once('load', function () {\n            //core.ready = true;\n            if ( app.events[event.type] ) {\n                // notify listeners\n                app.emit(event.type, event);\n            }\n        });\n    }\n};\n\n\n// activate development mechanisms and tools\nif ( DEVELOP ) {\n    //require('stb-develop');\n    require('./develop/main');\n} else {\n    // disable context menu\n    events.contextmenu = function ( event ) {\n        event.preventDefault();\n    };\n}\n\n\n//apply DOM events\nObject.keys(events).forEach(function ( name ) {\n    window.addEventListener(name, events[name]);\n});\n\n\n// new way of string handling\n// all strings are in UTF-16\n// since stbapp 2.18\n// if ( window.gSTB && gSTB.SetNativeStringMode ) {\n//     /* eslint new-cap: 0 */\n//     gSTB.SetNativeStringMode(true);\n// }\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nmodule.exports = {\n    /**\n     * Parse the given location search string into object.\n     *\n     * @param {string} query string to parse\n     *\n     * @return {Object.<string, string>} result data\n     */\n    parse: function ( query ) {\n        var data = {};\n\n        // parse and fill the data\n        query.split('&').forEach(function ( part ) {\n            part = part.split('=');\n            // valid number on params\n            if ( part.length === 2 ) {\n                data[part[0]] = decodeURIComponent(part[1]);\n            }\n        });\n\n        return data;\n    },\n\n\n    /**\n     * Make uri query part in a string form.\n     *\n     * @param {Object} params data to stringify\n     *\n     * @return {string} query string\n     */\n    stringify: function ( params ) {\n        var data = [];\n\n        Object.keys(params).forEach(function ( name ) {\n            data.push(name + '=' + encodeURIComponent(params[name]));\n        });\n\n        return data.join('&');\n    }\n};\n","/**\n * Global application configuration.\n * Can store run-time options, API urls, paths, execution flags and so on.\n * Automatically loaded on application initialization and available as app.config.\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    types: {\n        file: 1,\n        season: 2,\n        series: 3\n    },\n    delay: {\n        modalShow: 100\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint-disable */\n\n'use strict';\n\n\nif ( !document.documentElement.classList ) {\n    var prototype = Array.prototype,\n        indexOf   = prototype.indexOf,\n        slice     = prototype.slice,\n        push      = prototype.push,\n        splice    = prototype.splice,\n        join      = prototype.join;\n\n    window.DOMTokenList = function ( el ) {\n        this._element = el;\n        if (el.className !== this._classCache) {\n            this._classCache = el.className;\n            if (!this._classCache) { return; }\n            var classes = this._classCache.replace(/^\\s+|\\s+$/g,'').split(/\\s+/),\n                i;\n            for (i = 0; i < classes.length; i++) {\n                push.call(this, classes[i]);\n            }\n        }\n    };\n\n    window.DOMTokenList.prototype = {\n        add: function ( token ) {\n            if(this.contains(token)) { return; }\n            push.call(this, token);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        contains: function ( token ) {\n            return indexOf.call(this, token) !== -1;\n        },\n\n        item: function ( index ) {\n            return this[index] || null;\n        },\n\n        remove: function ( token ) {\n            var i = indexOf.call(this, token);\n            if (i === -1) {\n                return;\n            }\n            splice.call(this, i, 1);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        toString: function () {\n            return join.call(this, ' ');\n        },\n\n        toggle: function ( token ) {\n            if (!this.contains(token)) {\n                this.add(token);\n            } else {\n                this.remove(token);\n            }\n            return this.contains(token);\n        }\n    };\n\n    Object.defineProperty(Element.prototype, 'classList', {\n        get: function () {\n            return new window.DOMTokenList(this);\n        }\n    });\n}\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    metrics = require('app:metrics');\n\n\n// global link\napp.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\napp.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\napp.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n\n// public\n//module.exports = app;\n","/**\n * Application geometry options.\n * Automatically loaded on application initialization and available as app.metrics.\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    480: {\n        // screen base dimension\n        height: 480,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  32,\n        availLeft:   48,\n        // app\n        grid: {\n            lineSize: 5,\n            lineCache: 3,\n            lineCount: 7,\n            size: 3,\n            cache: 3\n        },\n        moviesGrid: {\n            cache: 5,\n            x: 5,\n            y: 3\n        },\n        modal: {\n            size: 9\n        },\n        buttonList: {\n            size: 5\n        },\n        seasonsList: {\n            size: 5\n        },\n        seriesList: {\n            size: 7\n        },\n        screenList: {\n            size: 4\n        },\n        infoSroll: {\n            screen: 350,\n            season: 850\n        }\n    },\n\n    576: {\n        // screen base dimension\n        height: 576,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  26,\n        availLeft:   54,\n        // app\n        grid: {\n            lineSize: 5,\n            lineCache: 3,\n            lineCount: 7,\n            size: 3,\n            cache: 3\n        },\n        moviesGrid: {\n            cache: 5,\n            x: 5,\n            y: 3\n        },\n        modal: {\n            size: 11\n        },\n        buttonList: {\n            size: 5\n        },\n        seasonsList: {\n            size: 5\n        },\n        seriesList: {\n            size: 7\n        },\n        screenList: {\n            size: 4\n        },\n        infoSroll: {\n            screen: 350,\n            season: 850\n        }\n    },\n\n    720: {\n        // screen base dimension\n        height: 720,\n        width:  1280,\n        // safe zone margins\n        availTop:    30,\n        availBottom: 30,\n        availRight:  40,\n        availLeft:   40,\n        // app\n        grid: {\n            lineSize: 5,\n            lineCache: 3,\n            lineCount: 7,\n            size: 3,\n            cache: 3\n        },\n        moviesGrid: {\n            cache: 5,\n            x: 5,\n            y: 3\n        },\n        modal: {\n            size: 13\n        },\n        buttonList: {\n            size: 5\n        },\n        seasonsList: {\n            size: 5\n        },\n        seriesList: {\n            size: 7\n        },\n        screenList: {\n            size: 5\n        },\n        infoSroll: {\n            screen: 440,\n            season: 960\n        }\n    },\n\n    1080: {\n        // screen base dimension\n        height: 1080,\n        width:  1920,\n        // safe zone margins\n        availTop:    45,\n        availBottom: 45,\n        availRight:  60,\n        availLeft:   60,\n        // app\n        grid: {\n            lineSize: 5,\n            lineCache: 3,\n            lineCount: 7,\n            size: 3,\n            cache: 3\n        },\n        moviesGrid: {\n            cache: 5,\n            x: 5,\n            y: 3\n        },\n        modal: {\n            size: 13\n        },\n        buttonList: {\n            size: 5\n        },\n        seasonsList: {\n            size: 5\n        },\n        seriesList: {\n            size: 7\n        },\n        screenList: {\n            size: 5\n        },\n        infoSroll: {\n            screen: 440 * 1.5,\n            season: 960 * 1.5\n        }\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core'),\n    //metrics = require('app:metrics'),\n    linkCSS;\n\n\n//window.core = window.parent.getCoreInstance(window, app);\n\n\nlinkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = window.core.theme.path + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);\n\n\n// public\nmodule.exports = linkCSS;\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar longClick = {\n        timer: 0,\n        pressed: false,\n        fired: false\n    },\n    LONG_CLICK_TIMEOUT = 600;\n\n\nmodule.exports = function ( app, config ) {\n    var keyToChange = config.code,\n        emitKeyCode = config.emitCode;\n\n\n    function emitKeydown ( event, redefine ) {\n        var page = app.activePage,\n            eventLocal = {\n                code: event.keyCode,\n                stop: false\n            },\n            eventType,\n            activeComponent;\n\n        redefine = redefine || {};\n\n        eventType = redefine.type || event.type;\n\n        // apply key modifiers\n        if ( event.ctrlKey )  { eventLocal.code += 'c'; }\n        if ( event.altKey )   { eventLocal.code += 'a'; }\n        if ( event.shiftKey ) { eventLocal.code += 's'; }\n        if ( redefine.code )  { eventLocal.code = redefine.code; }\n\n        console.log('app event: ' + eventType + ' - ' + eventLocal.code, event);\n\n        // page.activeComponent can be set to null in event handles\n        activeComponent = page.activeComponent;\n\n        // current component handler\n        if ( activeComponent && activeComponent !== page ) {\n            // component is available and not page itself\n            if ( activeComponent.events[eventType] ) {\n                // there are some listeners\n                activeComponent.emit(eventType, eventLocal, event);\n            }\n\n            // todo: bubble event recursively\n            // bubbling\n            if (\n                !eventLocal.stop\n                && activeComponent.propagate\n                && activeComponent.parent\n                && activeComponent.parent.events[event.type]\n            ) {\n                activeComponent.parent.emit(eventType, eventLocal, event);\n            }\n        }\n\n        // page handler\n        if ( !eventLocal.stop ) {\n            // not prevented\n            if ( page.events[eventType] ) {\n                // there are some listeners\n                page.emit(eventType, eventLocal, event);\n            }\n\n            // global app handler\n            if ( !event.stop ) {\n                // not prevented\n                if ( app.events[eventType] ) {\n                    // there are some listeners\n                    app.emit(eventType, eventLocal, event);\n                }\n            }\n        }\n    }\n\n    function keydownHandler ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( !page ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        if ( event.keyCode === keyToChange && !longClick.pressed ) {\n            if ( longClick.fired ) {\n                longClick.fired = false;\n            }\n            longClick.pressed = true;\n            clearTimeout(longClick.timer);\n            longClick.timer = setTimeout(function () {\n                emitKeydown(event, {code: emitKeyCode});\n                longClick.fired = true;\n\n            }, LONG_CLICK_TIMEOUT);\n        } else if ( event.keyCode !== keyToChange ) {\n            emitKeydown(event);\n        }\n    }\n\n    function keyupHandler ( event ) {\n        if ( event.keyCode === keyToChange ) {\n            if  ( !longClick.fired && longClick.pressed ) {\n                clearTimeout(longClick.timer);\n                emitKeydown(event, {type: 'keydown'});\n            }\n            longClick.pressed = false;\n        }\n    }\n\n    window.addEventListener('keydown', keydownHandler);\n    window.addEventListener('keyup', keyupHandler);\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    Gettext = require('cjs-gettext'),\n    loader  = new Emitter();\n\n\n/**\n * Wrap the given data with gettext instance\n * and export methods to the global scope.\n *\n * @param {Object} [data] localization data\n *\n * @return {Gettext} gettext instance\n */\nfunction prepare ( data ) {\n    var gettext = new Gettext(data);\n\n    // make it global\n    window.gettext  = window._ = gettext.gettext;\n    window.pgettext = gettext.pgettext;\n    window.ngettext = gettext.ngettext;\n\n    return gettext;\n}\n\n\n/**\n * Main application language\n */\nloader.defaultLanguage = 'en';\n\n\n/**\n * Simple gettext implementation.\n *\n * @param {Object} config options\n * @param {string} [config.path=lang] relative path to project root\n * @param {string} config.name language name\n * @param {string} [config.ext=json] language file extension\n * @param {function} callback hook on ready\n *\n * @return {boolean} flag is ajax request was made\n */\nloader.load = function ( config, callback ) {\n    var xhr;\n\n    if ( DEVELOP ) {\n        if ( !config.name || typeof config.name !== 'string' ) {\n            throw new Error(__filename + ': config.name must be a nonempty string');\n        }\n        if ( typeof callback !== 'function' ) {\n            throw new Error(__filename + ': wrong callback type');\n        }\n    }\n\n    // defaults\n    config.ext  = config.ext  || 'json';\n    config.path = config.path || 'lang';\n\n    // is it necessary to request a localization file?\n    if ( config.name === loader.defaultLanguage ) {\n        // no\n        prepare();\n        callback(null);\n\n        return false;\n    }\n\n    // yes\n    xhr = new XMLHttpRequest();\n\n    xhr.onload = function () {\n        var json;\n\n        try {\n            json = JSON.parse(xhr.responseText);\n\n            prepare(json);\n            callback(null);\n\n            // there are some listeners\n            if ( loader.events['load'] ) {\n                // notify listeners\n                loader.emit('load');\n            }\n        } catch ( error ) {\n            xhr.onerror(error);\n        }\n    };\n\n    xhr.ontimeout = xhr.onerror = function ( error ) {\n        prepare();\n        callback(error);\n\n        // there are some listeners\n        if ( loader.events['error'] ) {\n            // notify listeners\n            loader.emit('error', error);\n        }\n    };\n\n    xhr.open('GET', config.path + '/' + config.name + '.' + config.ext, true);\n    xhr.send(null);\n\n    return true;\n};\n\n\n// public\nmodule.exports = loader;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Translations handler.\n *\n * @constructor\n *\n * @param {Object} config init parameters\n */\nfunction Gettext ( config ) {\n    var data, meta;\n\n    // sanitize\n    config   = config || {};\n    data     = config.data || {};\n    data[''] = data[''] || {};\n\n    // shortcut\n    meta = config.meta;\n\n    /**\n     * Display the native language translation of a textual message.\n     *\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.gettext = function ( msgId ) {\n        return data[''][msgId] || msgId;\n    };\n\n\n    /**\n     * The \"p\" in \"pgettext\" stands for \"particular\": fetches a particular translation of the textual message.\n     *\n     * @param {string} context message context\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.pgettext = function ( context, msgId ) {\n        return data[context] && data[context][msgId] || msgId;\n    };\n\n\n    /**\n     * Display the native language translation of a textual message whose grammatical form depends on a number.\n     *\n     * @param {string} msgId textual message in a singular form\n     * @param {string} plural textual message in a plural form\n     * @param {number} value message number\n     *\n     * @return {string} translated text\n     */\n    this.ngettext = function ( msgId, plural, value ) {\n        /* eslint no-unused-vars: 0 */\n        /* eslint no-eval: 0 */\n        /* eslint id-length: 0 */\n        var n, evalResult;\n\n        if ( DEVELOP ) {\n            if ( Number(value) !== value ) {\n                throw new Error(__filename + ': value must be a number');\n            }\n        }\n\n        if ( data && meta && data[''][msgId] ) {\n            evalResult = eval('n = ' + value + '; ' + meta.plural);\n\n            if ( typeof evalResult === 'boolean' ) {\n                evalResult = +evalResult;\n            }\n\n            // translation\n            return data[''][msgId][evalResult];\n        }\n\n        // english\n        return value === 1 ? msgId : plural;\n    };\n}\n\n\n// correct constructor name\nGettext.prototype.constructor = Gettext;\n\n\n// public\nmodule.exports = Gettext;\n","'use strict';\n\n/* eslint consistent-this: [2, \"self\", \"favoriteList\", \"watchedList\"] */\n\nvar Page = require('stb-component-page'),\n    dom  = require('spa-dom'),\n    keys = require('stb-keys'),\n\n    Layout = require('mag-component-layout'),\n    app    = require('mag-app'),\n\n    MainPanel = require('../components/main.panel'),\n\n    utils = {\n        prepareMainMovies: require('../utils/prepare.main.movies'),\n        prepareMovieData: require('../utils/prepare.movie.data'),\n        toggleFavorite: require('../utils/toggle.favorite')\n    },\n    InfoPanel         = require('../components/info.panel'),\n    itemListRender    = require('../renders/item.list'),\n\n    timers = {},\n    page   = new Page({$node: document.getElementById('pageMain')}),\n\n    infoPanel, searchLayout, searchValue,\n    mainPanel, cacheData,\n    favoriteList, watchedList,\n    leftLayout, f3;\n\n\n/**\n * Click on item.\n *\n * @param {Object} event - event\n *\n * @this mainPanel\n */\nfunction clickItem ( event ) {\n    var line = {},\n        value = event.$item.value;\n\n    if ( value ) {\n        if ( (value.censored || (value.category && value.category.censored)) && !core.accessControl.state ) {\n            core.accessControl.request(function ( error ) {\n                if ( !error ) {\n                    app.route(app.pages.info, {info: value, type: 'main'});\n                }\n            });\n        } else {\n            app.route(app.pages.info, {info: value, type: 'main'});\n        }\n    } else {\n        line = mainPanel.data[mainPanel.focusLine.index];\n        app.route(app.pages.movies, line);\n    }\n}\n\n\n/**\n * Focus to the list function.\n *\n * @this mainPanel\n */\nfunction focusList () {\n    this.emit('focus:item', {$prev: null, $curr: this.$focusItem});\n}\n\n\n/**\n * Focus on item.\n *\n * @param {Object} event - focus item event\n *\n * @this mainPanel.mainList\n */\nfunction focusItem ( event ) {\n    clearTimeout(timers.info);\n    timers.info = setTimeout(function () {\n        // var screenshots;\n\n        if ( event.$curr ) {\n            if ( event.$curr.value ) {\n                infoPanel.showMovie();\n                infoPanel.fillMovie(event.$curr.data.value);\n            } else {\n                infoPanel.showSeeMore();\n                // infoPanel.$info.innerText = _('See more');\n            }\n        }\n    }, core.environment.onFocusDebounceTimeout);\n}\n\n\n/**\n * Get items for line ( grid list ).\n *\n * @this mainPanel.mainList\n *\n * @param {Function} callback - result handler\n */\nfunction getItems ( callback ) {\n    var config = {},\n        self = this;\n\n    //TODO after fill event for check unique lists\n    if ( this.query ) {\n        Object.keys(this.query).forEach(function ( key ) {\n            if ( self.query[key] ) {\n                config[key] = self.query[key];\n            }\n        });\n        if ( this.query.favorite ) {\n            favoriteList = this;\n        }\n\n        if ( this.query['not_ended'] ) {\n            watchedList = this;\n        }\n    }\n\n    if ( DEVELOP ) {\n        window.favoriteList = favoriteList;\n        window.watchedList = watchedList;\n    }\n\n    config.limit = app.metrics.grid.lineCount + app.metrics.grid.lineCache + 1;\n    app.api.getList(config, function ( error, data ) {\n        if ( error ) {\n            callback([]);\n        } else {\n            callback(utils.prepareMainMovies(data, self.title));\n        }\n    });\n}\n\n\n/**\n * Change favorite state.\n */\nfunction toggleFavorite () {\n    var video = mainPanel.focusLine.$focusItem.value;\n\n    if ( video.favorite ) {\n        infoPanel.$movie.classList.remove('inFavorite');\n    } else {\n        infoPanel.$movie.classList.add('inFavorite');\n    }\n    utils.toggleFavorite(video);\n}\n\n\n/**\n * Prepare sections data to use in grid list.\n *\n * @this mainPanel.mainList\n *\n * @param {Object} data - sections config ( answer from server )\n */\nfunction initMainGrid ( data ) {\n    var config = {\n            data: [],\n            focusIndex: 0\n        },\n        index;\n\n    data = data.data;\n\n    cacheData = data.slice();\n    for ( index = 0; index < data.length; index++ ) {\n        data[index].query.search = searchValue;\n        config.data.push({\n            events: {\n                'focus:item': focusItem,\n                'click:item': clickItem,\n                focus: focusList\n            },\n            title: data[index].name,\n            getter: getItems,\n            size: app.metrics.grid.lineSize,\n            bufferSize: app.metrics.grid.lineCache,\n            query: data[index].query,\n            hasEmptyItems: true,\n            render: itemListRender,\n            cycle: true,\n            focusIndex: 0\n        });\n    }\n\n    mainPanel.setData(config);\n}\n\n\ninfoPanel = new InfoPanel();\n\nif ( TARGET === 'android-stb' || TARGET === 'android-app' ) {\n    f3 = new Layout({\n        focusable: true,\n        data: [\n            {\n                className: 'favoriteTitle add',\n                value: gettext('Hold the OK button to add to Favorites')\n            },\n            {\n                className: 'favoriteTitle remove',\n                value: gettext('Hold the OK button to remove from Favorites')\n            }\n        ],\n        className: 'favoriteBlock',\n        events: {\n            click: toggleFavorite\n        }\n    });\n} else {\n    f3 = new Layout({\n        focusable: true,\n        data: [\n            {\n                className: 'theme-icon theme-icon-rc-f3'\n            },\n            {\n                className: 'favoriteTitle add',\n                value: gettext('Add to favorites')\n            },\n            {\n                className: 'favoriteTitle remove',\n                value: gettext('Remove from favorites')\n            }\n        ],\n        className: 'favoriteBlock',\n        events: {\n            click: toggleFavorite\n        }\n    });\n}\ninfoPanel.$movie.appendChild(f3.$node);\n\n\nsearchLayout = new Layout({\n    data: [\n        dom.tag('div', {className: 'searchFocus'}, dom.tag('div', {className: 'searchIcon'})),\n        {\n            name: '$text',\n            value: gettext('Search for movies, series and TV shows'),\n            className: 'searchText noData'\n        }\n    ],\n    className: 'searchBlock',\n    events: {\n        focus: function () {\n            infoPanel.showInfo();\n            infoPanel.$info.innerText = gettext('Find your favorite movies, series and TV shows by title or by genre');\n        },\n        click: function () {\n            core.intent({\n                action: 'keyboard',\n                data: {\n                    value: searchValue || '',\n                    title: gettext('Search for movies, series and TV shows')\n                },\n                events: {\n                    done: function ( data ) {\n                        if ( data.value ) {\n                            searchLayout.$body.classList.add('searchActive');\n                            searchLayout.links.$text.innerText = data.value;\n                            searchLayout.links.$text.classList.remove('noData');\n                            searchValue = data.value;\n                        } else {\n                            searchLayout.$body.classList.remove('searchActive');\n                            searchLayout.links.$text.innerText = gettext('Search for movies, series and TV shows');\n                            searchLayout.links.$text.classList.add('noData');\n                            searchValue = '';\n                        }\n                        //TODO rename cacheData to sectionList\n                        initMainGrid({data: cacheData});\n                    }\n                }\n            }, function ( error ) {\n                debug.fail('Keyboard error', error);\n            });\n            event.stop = true;\n        },\n        keydown: function ( event ) {\n            switch ( event.code ) {\n                case keys.down:\n                    mainPanel.focus();\n                    event.stop = true;\n                    break;\n                case keys.enter:\n                    // there are some listeners\n                    if ( this.events['click'] ) {\n                        // notify listeners\n                        this.emit('click');\n                    }\n                    event.stop = true;\n                    break;\n            }\n        }\n    }\n});\n\n\nmainPanel = new MainPanel({\n    events: {\n        focus: function () {\n            if ( mainPanel.data.length ) {\n                infoPanel.showInfo();\n            } else {\n                searchLayout.focus();\n            }\n\n        },\n        'focus:line': function ( event ) {\n            if ( event.$curr.index === 0 ) {\n                searchLayout.show();\n            } else if ( event.$curr.index === 1 ) {\n                searchLayout.hide();\n            }\n        },\n        overflow: function ( data ) {\n            if ( data.direction === keys.up ) {\n                searchLayout.focus();\n            }\n        },\n        keydown: function ( event ) {\n            switch ( event.code ) {\n                case keys.f3:\n                    toggleFavorite();\n                    event.stop = true;\n                    break;\n                default:\n                    MainPanel.prototype.defaultEvents.keydown.call(this, event);\n                    break;\n            }\n        }\n    },\n    size: 3,\n    bufferSize: 3,\n    focusPosition: 1,\n    emptyItems: true,\n    className: 'mainPanel',\n    noData: gettext('No results found.')\n});\n\n\nmainPanel.addListener('data:load', function () {\n    if ( mainPanel.data.length ) {\n        mainPanel.focus();\n    }\n\n    app.ready();\n});\n\n\nleftLayout = new Layout({\n    focusable: false,\n    data: [searchLayout, mainPanel],\n    className: 'mainPanel'\n});\n\n\nleftLayout.$node.appendChild(dom.tag('div', {className: 'shadow'}));\n\npage.add(leftLayout);\npage.add(infoPanel.layout);\n\n\npage.once('show', function () {\n    app.api.getSections(function ( error, data ) {\n        if ( !error ) {\n            initMainGrid(data);\n        }\n    });\n\n    infoPanel.clearRating();\n});\n\n\npage.addListeners({\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.back:\n                if ( searchValue ) {\n                    searchLayout.$body.classList.remove('searchActive');\n                    searchLayout.links.$text.innerText = gettext('Search for movies, series and TV shows');\n                    searchLayout.links.$text.classList.add('noData');\n                    searchValue = '';\n                    initMainGrid({data: cacheData});\n                } else {\n                    app.exit();\n                }\n                break;\n        }\n    },\n    'change:watched': function ( data ) {\n        function checkStatus ( movie ) {\n            if ( movie.value.id === data.id ) {\n                movie.value['watched_time'] = data['watched_time'];\n                movie.value['watched_status'] = data['watched_status'];\n                movie.value['last_watched_file_id'] = data['last_watched_file_id'];\n            }\n        }\n\n        if ( watchedList.listLink && watchedList.listLink.data.length ) {\n            watchedList.listLink.refreshData();\n        } else {\n            watchedList.getter(function ( listData ) {\n                watchedList.data = listData;\n                if ( watchedList.data.length ) {\n                    if ( mainPanel.data.indexOf(watchedList) === -1 ) {\n                        mainPanel.insert(\n                            watchedList,\n                            mainPanel.data.indexOf(favoriteList) === -1 ? mainPanel.data.length : mainPanel.data.length - 1\n                        );\n                    }\n                } else if ( mainPanel.data.indexOf(watchedList) !== -1 ) {\n                    mainPanel.removeItem(watchedList);\n                }\n            });\n        }\n\n        // change state video in other category\n        mainPanel.data.forEach(function ( line ) {\n            line.data.forEach(checkStatus);\n        });\n    }\n});\n\n\napp.addListener('change:favorite', function ( data ) {\n    var video = data.video;\n\n    function checkStatus ( movie ) {\n        if ( movie.value.id === video.id && movie.value.favorite !== video.favorite ) {\n            movie.value.favorite = video.favorite;\n        }\n    }\n\n    if ( video === mainPanel.focusLine.$focusItem.value ) {\n        if ( video.favorite ) {\n            infoPanel.$movie.classList.add('inFavorite');\n        } else {\n            infoPanel.$movie.classList.remove('inFavorite');\n        }\n    }\n\n    if ( data.error ) {\n        return;\n    }\n\n    if ( favoriteList.listLink && favoriteList.listLink.data.length ) {\n        favoriteList.listLink.refreshData();\n    } else {\n        favoriteList.getter(function ( listData ) {\n            favoriteList.data = listData;\n            if ( favoriteList.data.length ) {\n                if ( mainPanel.data.indexOf(favoriteList) === -1 ) {\n                    mainPanel.insert(favoriteList, mainPanel.data.length);\n                }\n            } else if ( mainPanel.data.indexOf(favoriteList) !== -1 ) {\n                mainPanel.removeItem(favoriteList);\n            }\n        });\n    }\n\n    // change state video in other category\n    mainPanel.data.forEach(function ( line ) {\n        line.data.forEach(checkStatus);\n    });\n});\n\n\nif ( DEVELOP ) {\n    window.mainPanel = mainPanel;\n    window.searchLayout = searchLayout;\n}\n\n\ncore.addListener('intent', function ( intent, callback ) {\n    if ( intent.action === 'videoClub' ) {\n        switch ( intent.mime ) {\n            case 'info':\n                if ( intent.data ) {\n                    if ( app.pages.info === app.activePage ) {\n                        app.pages.info.emit('show', {\n                            data: {\n                                info: intent.data.prepared ? intent.data : utils.prepareMovieData(intent.data),\n                                type: 'intent',\n                                callback: callback\n                            }\n                        });\n                    } else {\n                        app.route(app.pages.info, {\n                            info: intent.data.prepared ? intent.data : utils.prepareMovieData(intent.data),\n                            type: 'intent',\n                            callback: callback\n                        });\n                    }\n                    callback(false);\n                } else {\n                    callback(true);\n                }\n\n                break;\n\n            default:\n                app.route(app.pages.main);\n                callback(false);\n                break;\n        }\n    }\n});\n\n\nmodule.exports = page;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base page implementation.\n *\n * A full-screen top-level layer that can operate as an independent separate entity.\n * It is added to the document body on creation if not already linked.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n *\n * @example\n * var Page = require('stb/ui/page'),\n *     page = new Page({\n *         $node: document.getElementById(id)\n *     });\n *\n * page.addListener('show', function show () {\n *     // page is visible now\n * });\n */\nfunction Page ( config ) {\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    /**\n     * Page visibility/active state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.active = false;\n\n    /**\n     * Link to the currently active component with focus.\n     *\n     * @readonly\n     * @type {Component}\n     */\n    this.activeComponent = null;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'page ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // state flag\n    this.active = this.$node.classList.contains('active');\n\n    // correct DOM parent/child connection if necessary\n    if ( this.$node.parentNode === null ) {\n        document.body.appendChild(this.$node);\n    }\n\n    // always itself\n    this.page = this;\n}\n\n\n// inheritance\nPage.prototype = Object.create(Component.prototype);\nPage.prototype.constructor = Page;\n\n// set component name\nPage.prototype.name = 'spa-component-page';\n\n\n// public\nmodule.exports = Page;\n","/**\n * MainPanel component. Use Component list as line.\n *\n * @author Roman Stoian <r.stoyan@infomir.com>.\n */\n\n/* eslint no-path-concat: 0 */\n/* eslint complexity: 0 */\n/* eslint max-statements: 0 */\n/* eslint max-lines-per-function: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    ItemList  = require('./item.list'),\n    keys      = require('stb-keys');\n\n\n/**\n * MainPanel implementation.\n *\n * Each data item can be either a primitive value or an object with these fields:\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}] - init parameters (all inherited from the parent)\n * @param {Array}    [config.data=[]] - component data to visualize\n * @param {Function} [config.render] - method to build each grid cell content\n * @param {Function} [config.navigate] - method to move focus according to pressed keys\n * @param {number}   [config.size=3] - amount of visible items on a page\n * @param {number}   [config.bufferSize=1] - amount of buffered items\n * @param {number}   [config.focusIndex] - list item index to make item focused (move view window to this position)\n * @param {boolean}  [config.hasEmptyItems=true] - need add empty items in before and after list data\n */\nfunction MainPanel ( config ) {\n    // current execution context\n    var self = this;\n\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    /**\n     * Link to the currently focused DOM element.\n     *\n     * @type {Element}\n     */\n    this.focusLine = null;\n\n    /**\n     * Component data to visualize.\n     *\n     * @type {Array}\n     */\n    this.data = [];\n\n    this.bufferBefore = [];\n    this.mainList = [];\n    this.bufferAfter = [];\n\n    /**\n     * Amount of visible items on a page.\n     *\n     * @type {number}\n     */\n    this.size = 3;\n    this.bufferSize = 1;\n    this.hasEmptyItems = config.hasEmptyItems || true;\n\n    this.dataReady = false;\n\n    // /**\n    //  * Allow or not to jump to the opposite side of a list when there is nowhere to go next.\n    //  *\n    //  * @type {boolean}\n    //  */\n    // this.cycle = false;\n\n\n    // config.className = config.className || '';\n\n    //config.className += ' theme-main';\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    this.$node.appendChild(this.$body);\n\n    this.$noData = document.createElement('div');\n    this.$noData.className = 'noData hidden';\n    this.$node.appendChild(this.$noData);\n\n    // component setup\n    this.init(config);\n    this.inFocus = false;\n\n    this.addListener('focus', function () {\n        if ( self.focusLine ) {\n            self.focusLine.focus();\n        }\n        self.inFocus = true;\n    });\n\n    this.addListener('blur', function () {\n        self.inFocus = false;\n    });\n}\n\n// inheritance\nMainPanel.prototype = Object.create(Component.prototype);\nMainPanel.prototype.constructor = MainPanel;\n\n// set component name\nMainPanel.prototype.name = 'mag-component-grid';\n\n/**\n * Add a new component as a first child.\n *\n * @param {...Component} [child] - variable number of elements to append\n *\n * @example\n * panel.insertBefore(\n *     new Button( ... ),\n *     new Button( ... )\n * );\n */\nMainPanel.prototype.insertBefore = function ( child ) {\n    var index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        child = arguments[index];\n\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) { throw new Error(__filename + ': wrong child type'); }\n        }\n\n        // apply\n        this.children.unshift(child);\n        child.parent = this;\n\n        // correct DOM parent/child connection if necessary\n        if ( child.$node && child.$node.parentNode === null ) {\n            this.$body.insertBefore(child.$node, this.$body.firstChild);\n        }\n\n        debug.info('add component ' + child.name + '#' + child.id + ' to ' + this.name + '#' + this.id, null, {\n            tags: ['add', 'component', this.name, this.id, child.name, child.id]\n        });\n\n        // there are some listeners\n        if ( this.events['add'] ) {\n            /**\n             * A child component is added.\n             *\n             * @event module:stb/component~Component#add\n             *\n             * @type {Object}\n             * @property {Component} item new component added\n             */\n            this.emit('add', {item: child});\n        }\n\n        //debug.log('component ' + this.name + '#' + this.id + ' new child: ' + child.name + '#' + child.id);\n    }\n};\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config - init parameters (subset of constructor config params)\n */\nMainPanel.prototype.init = function ( config ) {\n    var self     = this;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n\n    // custom render method\n    if ( config.render ) {\n        if ( DEVELOP ) {\n            if ( typeof config.render !== 'function' ) {\n                throw new Error(__filename + ': wrong config.render type');\n            }\n        }\n\n        // apply\n        this.renderItem = config.render;\n    }\n\n    // list items amount on page\n    if ( config.size ) {\n        if ( DEVELOP ) {\n            if ( +config.size !== config.size ) {\n                throw new Error(__filename + ': config.size must be a number');\n            }\n            if ( config.size <= 0 ) {\n                throw new Error(__filename + ': config.size should be positive');\n            }\n        }\n\n        // apply\n        this.size = config.size;\n    }\n\n    if ( config.bufferSize ) {\n        if ( DEVELOP ) {\n            if ( +config.bufferSize !== config.size ) {\n                throw new Error(__filename + ': config.size must be a number');\n            }\n            if ( config.bufferSize <= 0 ) {\n                throw new Error(__filename + ': config.size should be positive');\n            }\n        }\n\n        // apply\n        this.bufferSize = config.bufferSize;\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( name ) {\n            self.events[name] = null;\n            self.addListener(name, config.events[name]);\n        });\n    }\n\n    this.focusPosition = config.focusPosition || Math.ceil(this.size / 2);\n\n    this.startIndex = 0;\n\n    this.setData(config);\n};\n\nMainPanel.prototype.createItem = function ( data, index ) {\n    var item;\n\n    if ( data instanceof Component ) {\n        item = data;\n    } else {\n        data.propagate = true;\n        item = new ItemList(data);\n        data.listLink = item;\n        item.query = data;\n        item.addListener('remove', function () {\n            data.listLink = null;\n        });\n    }\n    item.index = index;\n    item.hide();\n    item.parent = this;\n\n    return item;\n};\n\nMainPanel.prototype.getItemData = function ( item, callback ) {\n    if ( item.data && item.data.length ) {\n        callback(item.data);\n    } else if ( item.getter ) {\n        item.getter(function ( listData ) {\n            item.data = listData;\n            callback(item.data);\n        });\n    } else {\n        callback();\n    }\n};\n\n\n/**\n * Fill the given item with data.\n *\n * @param {Element} $item - item DOM link\n * @param {*} data - associated with this item data\n */\nMainPanel.prototype.renderItemDefault = function ( $item, data ) {\n    $item.innerText = data.value;\n};\n\n\n/**\n * Method to build each list item content.\n * Can be redefined to provide custom rendering.\n *\n * @type {Function}\n */\nMainPanel.prototype.renderItem = MainPanel.prototype.renderItemDefault;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nMainPanel.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse wheel events.\n     *\n     * @param {Event} event - generated event\n     */\n    mousewheel: function ( event ) {\n        // scrolling by X axis\n        if ( event.wheelDeltaX ) {\n            this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n        }\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event - generated event\n     */\n    keydown: function ( event ) {\n        if ( event.stop ) {\n\n            return;\n        }\n        switch ( event.code ) {\n            case keys.down:\n            case keys.up:\n                event.stop = true;\n                // cursor move only on arrow keys\n                this.move(event.code);\n                break;\n            case keys.enter:\n                // there are some listeners\n                event.stop = true;\n                if ( this.events['click:item'] && this.focusLine ) {\n                    // notify listeners\n                    this.emit('click:item', {$item: this.focusLine, event: event});\n                }\n                break;\n        }\n    }\n};\n\n\n/**\n * Insert data and render inner structures and HTML.\n *\n * @param {Object} data - init parameters (subset of constructor config params)\n * @param {number} itemIndex - insert index\n */\nMainPanel.prototype.insert = function ( data, itemIndex ) {\n    var self = this,\n        startIndex, item, line,\n        continueIndex;\n\n    function updateIndex ( start ) {\n        var index;\n\n        for ( index = 0; index < self.bufferBefore.length; index++ ) {\n            self.bufferBefore[index].index = start;\n            start++;\n        }\n\n        for ( index = 0; index < self.mainList.length; index++ ) {\n            self.mainList[index].index = start;\n            start++;\n        }\n\n        for ( index = 0; index < self.bufferAfter.length; index++ ) {\n            self.bufferAfter[index].index = start;\n            start++;\n        }\n    }\n\n    if ( this.data.length === 0 || this.mainList.length === 0 ) {\n        this.setData({data: data});\n\n        return;\n    }\n\n    if ( this.focusLine ) {\n        line = this.focusLine;\n    } else {\n\n        return;\n    }\n\n    if ( !itemIndex ) {\n        itemIndex = 0;\n    }\n    if ( this.data.length > itemIndex ) {\n        itemIndex = this.data.length;\n    }\n\n    this.data.splice(itemIndex, 0, data);\n\n    if ( this.bufferBefore.length ) {\n        startIndex = this.bufferBefore[0].index;\n    } else {\n        startIndex = this.mainList[0].index;\n    }\n\n    if ( this.mainList[0].index > itemIndex ) {\n        if ( this.bufferBefore.length ) {\n            if ( this.bufferBefore[0].index >= itemIndex ) {\n                this.viewIndex++;\n                updateIndex(++this.bufferBefore[0].index);\n\n                return;\n            }\n            if ( this.bufferBefore[0].index < itemIndex ) {\n                item = this.createItem(data, itemIndex);\n                continueIndex = itemIndex - this.bufferBefore[0].index;\n                this.$body.insertBefore(item, this.bufferBefore[continueIndex].$node);\n                this.bufferBefore.splice(continueIndex, 0, item);\n                updateIndex(startIndex);\n                this.viewIndex++;\n                if ( this.bufferBefore.length > this.bufferSize ) {\n                    item = this.bufferBefore.shift();\n                    item.remove();\n                }\n\n                return;\n            }\n        } else {\n            item = this.createItem(data, itemIndex);\n            this.bufferBefore.unshift(item);\n            this.insertBefore(item);\n            updateIndex(0);\n            this.viewIndex++;\n\n            return;\n        }\n    }\n\n    if (\n        this.mainList[this.mainList.length - 1].index < itemIndex\n        && (this.mainList.length >= this.size || (this.hasEmptyItems && this.mainList.length >= this.size - 1))\n    ) {\n        if ( this.bufferAfter.length ) {\n            if ( this.bufferAfter[0].index + this.bufferSize <= itemIndex ) {\n                return;\n            }\n\n            if ( this.bufferAfter[this.bufferAfter.length - 1].index >= itemIndex ) {\n                item = this.createItem(data, itemIndex);\n                continueIndex = itemIndex - this.bufferAfter[this.bufferAfter.length - 1].index;\n                this.$body.insertBefore(item, this.bufferAfter[continueIndex].$node);\n                this.bufferAfter.splice(continueIndex, 0, item);\n            } else {\n                item = this.createItem(data, itemIndex);\n                this.add(item);\n                this.bufferAfter.push(item);\n            }\n\n            if ( this.bufferAfter.length > this.bufferSize ) {\n                item = this.bufferAfter.pop();\n                item.remove();\n            }\n\n        } else {\n            item = this.createItem(data, itemIndex);\n            this.add(item);\n            if ( this.mainList.length < this.size ) {\n                item.show();\n                this.mainList.push(item);\n            } else {\n                item.hide();\n                this.bufferAfter.push(item);\n            }\n        }\n        updateIndex(startIndex);\n        this.checkClassStates();\n\n        return;\n    }\n\n    item = this.createItem(data, itemIndex);\n    item.show();\n    continueIndex = itemIndex - this.mainList[0].index;\n    if ( this.mainList.length > continueIndex ) {\n        this.$body.insertBefore(item, this.mainList[continueIndex].$node);\n        this.mainList.splice(continueIndex, 0, item);\n    } else {\n        this.add(item);\n        this.mainList.push(item);\n    }\n\n    if ( itemIndex <= line.index ) {\n        item = this.mainList.shift();\n        item.hide();\n        this.bufferBefore.push(item);\n        updateIndex(startIndex);\n        this.viewIndex++;\n        if ( this.bufferBefore.length > this.bufferSize ) {\n            item = this.bufferBefore.shift();\n            item.remove();\n        }\n        this.focusToLine(this.mainList[this.focusPosition]);\n    } else if ( this.mainList.length > this.size ) {\n        item = this.mainList.pop();\n        item.hide();\n        this.bufferAfter.unshift(item);\n        if ( this.bufferAfter.length > this.bufferSize ) {\n            item = this.bufferAfter.pop();\n            item.remove();\n        }\n    }\n\n    updateIndex(startIndex);\n    this.checkClassStates();\n};\n\n\nMainPanel.prototype.checkClassStates = function () {\n    if ( this.hasEmptyItems ) {\n        if ( this.focusLine.index < this.focusPosition ) {\n            this.$node.classList.remove('noEmptyBefore');\n        } else {\n            this.$node.classList.add('noEmptyBefore');\n        }\n        if ( this.size <= this.mainList.length ) {\n            this.$node.classList.remove('emptyAfter');\n        } else {\n            this.$node.classList.add('emptyAfter');\n        }\n    }\n\n};\n\n\n/**\n * Remove inner structures and HTML.\n *\n * @param {Object} data - data to remove\n */\nMainPanel.prototype.removeItem = function ( data ) {\n    var focus = this.focusLine === data.listLink,\n        item = data.listLink,\n        self = this,\n        lastIndex = 0,\n        startIndex = 0,\n        itemIndex, dataIndex,\n        newItem, delta, index;\n\n\n    function updateIndex ( si ) {\n        startIndex = 0;\n\n        if ( si || si === 0 ) {\n            startIndex = si;\n        } else if ( self.bufferBefore.length ) {\n            startIndex = self.bufferBefore[0].index;\n        }\n\n        for ( index = 0; index < self.bufferBefore.length; index++ ) {\n            self.bufferBefore[index].index = startIndex;\n            startIndex++;\n        }\n\n        for ( index = 0; index < self.mainList.length; index++ ) {\n            self.mainList[index].index = startIndex;\n            startIndex++;\n        }\n\n        for ( index = 0; index < self.bufferAfter.length; index++ ) {\n            self.bufferAfter[index].index = startIndex;\n            startIndex++;\n        }\n    }\n\n    function fillBufferAfter () {\n        delta = self.bufferSize - self.bufferAfter.length;\n        for ( index = 0; index < delta; index++ ) {\n            item = self.bufferAfter[self.bufferAfter.length - 1];\n            if ( !item ) {\n                break;\n            }\n            lastIndex = item.index;\n            lastIndex++;\n            if ( lastIndex >= self.data.length ) {\n                break;\n            }\n\n            item = self.createItem(self.data[lastIndex], lastIndex);\n            self.add(item);\n            self.bufferAfter.push(item);\n        }\n    }\n\n    dataIndex = this.data.indexOf(data);\n\n    if ( dataIndex === -1 ) {\n        return;\n    }\n\n    this.data.splice(dataIndex, 1);\n\n    if ( !item ) {\n        if ( this.bufferBefore.length ) {\n            startIndex = this.bufferBefore[0].index;\n        } else if ( this.mainList.length ) {\n            startIndex = this.mainList[0].index;\n        } else {\n\n            return;\n        }\n\n        if ( startIndex < dataIndex && startIndex > 0 ) {\n            this.viewIndex--;\n            updateIndex(--startIndex);\n            this.checkClassStates();\n        }\n\n        return;\n    }\n\n    itemIndex = this.bufferBefore.indexOf(item);\n    if ( itemIndex !== -1 ) {\n        lastIndex = this.bufferBefore[0].index;\n        this.bufferBefore.splice(itemIndex, 1);\n        item.remove();\n        updateIndex();\n        this.viewIndex--;\n\n        return;\n    }\n\n    itemIndex = this.bufferAfter.indexOf(item);\n    if ( itemIndex !== -1 ) {\n        this.bufferAfter.splice(itemIndex, 1);\n        item.remove();\n        fillBufferAfter();\n        updateIndex();\n        if ( this.bufferBefore.length ) {\n            lastIndex = this.bufferBefore[0].index;\n        } else {\n            lastIndex = 0;\n        }\n        if ( lastIndex > 0 ) {\n            lastIndex--;\n            newItem = this.createItem(this.data[lastIndex], lastIndex);\n            newItem.hide();\n            this.insertBefore(newItem);\n            this.bufferBefore.unshift(newItem);\n        }\n\n        return;\n    }\n\n    itemIndex = this.mainList.indexOf(item);\n    if ( itemIndex !== -1 ) {\n        this.mainList.splice(itemIndex, 1);\n        if ( itemIndex < this.focusPosition ) {\n            if ( this.bufferBefore.length ) {\n                if ( this.bufferBefore.length ) {\n                    lastIndex = this.bufferBefore[0].index;\n                } else {\n                    lastIndex = 0;\n                }\n                newItem = this.bufferBefore.pop();\n                this.mainList.unshift(newItem);\n                newItem.show();\n            }\n\n            if ( lastIndex > 0 ) {\n                this.viewIndex--;\n                lastIndex--;\n                newItem = this.createItem(this.data[lastIndex], lastIndex);\n                newItem.hide();\n                this.insertBefore(newItem);\n                this.bufferBefore.unshift(newItem);\n            }\n\n        } else {\n            if ( this.bufferAfter.length ) {\n                newItem = this.bufferAfter.shift();\n                this.mainList.push(newItem);\n                newItem.show();\n                fillBufferAfter();\n            }\n\n            if ( focus ) {\n                if ( itemIndex < this.mainList.length ) {\n                    this.focusToLine(this.mainList[itemIndex]);\n                } else {\n                    this.move(keys.up);\n                }\n            }\n        }\n        item.remove();\n        updateIndex();\n        this.checkClassStates();\n    }\n};\n\n\n/**\n * Set data and render inner structures and HTML.\n *\n * @param {Object} config - init parameters (subset of constructor config params)\n */\nMainPanel.prototype.setData = function ( config ) {\n    // apply list of items\n\n    if ( config.data ) {\n        if ( DEVELOP ) {\n            if ( !Array.isArray(config.data) ) { throw new Error(__filename + ': wrong config.data type'); }\n        }\n\n        // prepare user data\n        this.data = config.data;\n        this.$node.classList.remove('noEmptyBefore');\n        this.$node.classList.remove('emptyAfter');\n    }\n\n    // reset current view window position\n    this.viewIndex = null;\n\n\n    if ( this.focusLine ) {\n        this.blurLine(this.focusLine);\n    }\n\n    if ( config.noData ) {\n        this.$noData.innerText = config.noData;\n    }\n\n    // set focus item\n    if ( config.focusIndex !== undefined && this.data.length ) {\n        if ( DEVELOP ) {\n            if ( +config.focusIndex !== config.focusIndex ) {\n                throw new Error(__filename + ': config.focusIndex must be a number');\n            }\n            if ( config.focusIndex < 0 ) {\n                throw new Error(__filename + ': config.focusIndex should be positive');\n            }\n        }\n\n        // jump to the necessary item\n        this.focusIndex(config.focusIndex);\n    } else {\n        // go to the first page\n        this.initView(0);\n    }\n};\n\n\n/**\n * Init the visible window.\n *\n * @param {number} viewIndex - start position to render\n * @param {Function} callback - callback\n *\n * @return {boolean} operation state\n */\nMainPanel.prototype.initView = function ( viewIndex, callback ) {\n    var countBefore = 0,\n        countAfter = 0,\n        count = 0,\n        stack = [],\n        self = this,\n        $item, initItems;\n\n    if ( DEVELOP ) {\n        if ( +viewIndex !== viewIndex ) {\n            throw new Error(__filename + ': viewIndex must be a number');\n        }\n        if ( viewIndex < 0 ) {\n            throw new Error(__filename + ': viewIndex should be more than zero');\n        }\n    }\n\n    //TODO replace to global do async serial\n    function finishCheck () {\n        var index;\n\n        for ( index = 0; index < stack.length; index++ ) {\n            if ( countBefore > index ) {\n                stack[index].hide();\n                self.bufferBefore.push(stack[index]);\n            } else if ( count > index ) {\n                stack[index].show();\n                self.mainList.push(stack[index]);\n            } else {\n                stack[index].hide();\n                self.bufferAfter.push(stack[index]);\n            }\n        }\n        stack = [];\n\n        if ( index < self.data.length ) {\n            // start caching data after get main data\n            setTimeout(function () {\n                function fillData ( list ) {\n                    if ( list && list.length ) {\n                        index++;\n                        if ( index < self.data.length ) {\n                            self.getItemData(self.data[index], fillData);\n                        } else {\n                            self.dataReady = true;\n                        }\n                    } else {\n                        self.data.splice(index, 1);\n                        if ( index < self.data.length ) {\n                            self.getItemData(self.data[index], fillData);\n                        } else {\n                            self.dataReady = true;\n                        }\n                    }\n                }\n\n                self.getItemData(self.data[index], fillData);\n            }, 500);\n        } else {\n            self.dataReady = true;\n        }\n\n        if ( callback ) {\n            callback();\n        }\n\n        if ( self.mainList.length ) {\n            self.$noData.classList.add('hidden');\n            self.$body.classList.remove('hidden');\n        } else {\n            self.$body.classList.add('hidden');\n            self.$noData.classList.remove('hidden');\n        }\n        self.emit('data:load');\n    }\n\n    function initItem () {\n        $item = self.createItem(self.data[viewIndex], viewIndex);\n        self.add($item);\n        stack.push($item);\n        viewIndex++;\n        initItems();\n    }\n\n    initItems = function () {\n        if ( self.data.length <= viewIndex || viewIndex >= countAfter ) {\n            finishCheck();\n\n            return;\n        }\n\n        if ( self.data[viewIndex].data ) {\n            if ( self.data[viewIndex].data.length ) {\n                initItem();\n            } else {\n                self.data.splice(viewIndex, 1);\n                countAfter = self.data.length > countAfter ? countAfter : self.data.length;\n                initItems();\n            }\n        } else if ( self.data[viewIndex].getter ) {\n            self.data[viewIndex].getter(function ( listData ) {\n                self.data[viewIndex].data = listData;\n                if ( self.data[viewIndex].data.length ) {\n                    initItem();\n                } else {\n                    self.data.splice(viewIndex, 1);\n                    countAfter = self.data.length > countAfter ? countAfter : self.data.length;\n                    initItems();\n                }\n            });\n        } else {\n            self.data.splice(viewIndex, 1);\n            countAfter = self.data.length > countAfter ? countAfter : self.data.length;\n            initItems();\n        }\n    };\n\n    if ( this.viewIndex === viewIndex ) {\n\n        return true;\n    }\n\n    while ( this.bufferBefore.length ) {\n        this.bufferBefore[0].remove();\n        this.bufferBefore.shift();\n    }\n    while ( this.mainList.length ) {\n        this.mainList[0].remove();\n        this.mainList.shift();\n    }\n    while ( this.bufferAfter.length ) {\n        this.bufferAfter[0].remove();\n        this.bufferAfter.shift();\n    }\n\n    this.viewIndex = viewIndex || 0;\n\n    this.startIndex = this.viewIndex - this.bufferSize;\n    if ( this.startIndex < 0 ) {\n        count = Math.abs(this.startIndex);\n        this.startIndex = 0;\n    }\n    viewIndex = this.startIndex;\n\n    countBefore = this.bufferSize - count;\n    count = countBefore + this.size;\n    countAfter = (this.bufferSize * 2) + this.size;\n    countAfter = this.data.length > countAfter ? countAfter : this.data.length;\n\n    if ( this.startIndex === 0 && this.hasEmptyItems ) {\n        if ( this.viewIndex > 0 && this.data.length > this.size ) {\n            this.$node.classList.add('noEmptyBefore');\n        }\n        if ( this.viewIndex + this.size >= this.data.length ) {\n            this.$node.classList.add('emptyAfter');\n        }\n        count--;\n    }\n\n    initItems();\n\n    return false;\n};\n\n\n/**\n * Move focus to the given direction.\n *\n * @param {number} direction - arrow key code\n *\n * @fires module:stb/ui/list~List#overflow\n */\nMainPanel.prototype.move = function ( direction ) {\n    var item, index, delta,\n        selectedIndex, lastIndex;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( +direction !== direction ) {\n            throw new Error(__filename + ': direction must be a number');\n        }\n    }\n\n    // empty list\n    if ( !this.data.length || !this.focusLine ) {\n\n        return;\n    }\n    switch ( direction ) {\n        case keys.up:\n            if ( this.focusLine.index > 0 ) {\n                if ( this.bufferBefore.length  && this.focusLine.index <= this.viewIndex + this.focusPosition ) {\n                    lastIndex = this.bufferBefore[0].index;\n                    lastIndex--;\n                    if ( this.hasEmptyItems ) {\n                        this.$node.classList.remove('emptyAfter');\n                    }\n                    this.viewIndex--;\n                    item = this.bufferBefore.pop();\n                    if ( this.hasEmptyItems && this.focusLine.index === 1 ) {\n                        this.$node.classList.remove('noEmptyBefore');\n                    }\n                    item.show();\n                    this.mainList.unshift(item);\n                    if ( this.size < this.mainList.length ) {\n                        item = this.mainList.pop();\n                        this.bufferAfter.unshift(item);\n                        item.hide();\n                    }\n                    if ( this.bufferAfter.length > this.bufferSize ) {\n                        item = this.bufferAfter.pop();\n                        item.remove();\n                    }\n                    if ( lastIndex >= 0 ) {\n                        item = this.createItem(this.data[lastIndex], lastIndex);\n                        this.insertBefore(item);\n                        this.bufferBefore.unshift(item);\n                    }\n                } else if ( this.hasEmptyItems ) {\n                    this.$node.classList.remove('noEmptyBefore');\n                }\n                if ( this.focusLine.index > this.focusPosition ) {\n                    selectedIndex = this.focusLine.index - this.viewIndex - 1;\n                } else {\n                    selectedIndex = this.focusLine.index - 1;\n                }\n                this.focusToLine(this.mainList[selectedIndex]);\n            } else  if ( this.events['overflow'] ) {\n                // notify listeners\n                this.emit('overflow', {direction: direction, cycle: false});\n            }\n            break;\n        case keys.down:\n            if ( !this.dataReady  ) {\n\n                return;\n            }\n            if ( this.focusLine.index < this.data.length - 1 ) {\n                if ( this.hasEmptyItems && this.focusLine.index === this.focusPosition - 1 ) {\n                    this.$node.classList.add('noEmptyBefore');\n                    if ( this.bufferAfter.length ) {\n                        item = this.bufferAfter.shift();\n                        this.mainList.push(item);\n                        item.show();\n                    }\n                    delta = this.bufferSize - this.bufferAfter.length;\n                    for ( index = 0; index < delta; index++ ) {\n                        item = this.bufferAfter[this.bufferAfter.length - 1];\n                        if ( !item ) {\n                            break;\n                        }\n                        lastIndex = item.index;\n                        lastIndex++;\n                        if ( lastIndex >= this.data.length ) {\n                            break;\n                        }\n\n                        item = this.createItem(this.data[lastIndex], lastIndex);\n                        this.add(item);\n                        this.bufferAfter.push(item);\n                    }\n                } else if ( this.focusLine.index >= this.focusPosition && this.bufferAfter.length > 0 ) {\n                    if ( this.hasEmptyItems && this.bufferAfter.length === 1 ) {\n                        this.$node.classList.add('emptyAfter');\n                    }\n                    this.viewIndex++;\n                    item = this.mainList.shift();\n                    item.hide();\n                    this.bufferBefore.push(item);\n                    if ( this.bufferBefore.length > this.bufferSize ) {\n                        item = this.bufferBefore.shift();\n                        item.remove();\n                    }\n                    if ( this.size - this.mainList.length && this.bufferAfter.length ) {\n                        item = this.bufferAfter.shift();\n                        this.mainList.push(item);\n                        item.show();\n                    }\n                    if ( this.bufferAfter.length && this.bufferSize > this.bufferAfter.length ) {\n                        lastIndex = this.bufferAfter[this.bufferAfter.length - 1].index;\n                        lastIndex++;\n                        if ( lastIndex < this.data.length ) {\n                            item = this.createItem(this.data[lastIndex], lastIndex);\n                            this.add(item);\n                            this.bufferAfter.push(item);\n                        }\n                    }\n                } else if ( this.hasEmptyItems && !this.bufferAfter.length ) {\n                    this.$node.classList.add('emptyAfter');\n                    if ( this.mainList.length >= this.size ) {\n                        this.viewIndex++;\n                        item = this.mainList.shift();\n                        item.hide();\n                        this.bufferBefore.push(item);\n                        if ( this.bufferBefore.length > this.bufferSize ) {\n                            item = this.bufferBefore.shift();\n                            item.remove();\n                        }\n                        if ( this.size - this.mainList.length && this.bufferAfter.length ) {\n                            item = this.bufferAfter.shift();\n                            this.mainList.push(item);\n                            item.show();\n                        }\n                    }\n                }\n                selectedIndex = this.mainList[0].index - this.focusLine.index + 1;\n                this.focusToLine(this.mainList[selectedIndex]);\n            } else if ( this.events['overflow'] ) {\n                // notify listeners\n                this.emit('overflow', {direction: direction, cycle: false});\n            }\n            break;\n    }\n};\n\n\n/**\n * Highlight the given DOM element as focused.\n * Remove focus from the previously focused item and generate associated event.\n *\n * @param {Element} $item - element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nMainPanel.prototype.focusToLine = function ( $item ) {\n    var $prev = this.focusLine;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number in focusLine');\n        }\n    }\n\n    // different element\n    if ( $item && $prev !== $item ) {\n        if ( DEVELOP ) {\n            if ( !($item instanceof Component) ) {\n                throw new Error(__filename + ': wrong $item type');\n            }\n            if ( $item.$node.parentNode !== this.$body ) {\n                throw new Error(__filename + ': wrong $item parent element');\n            }\n        }\n\n        // some item is focused already\n        if ( $prev !== null ) {\n            if ( DEVELOP ) {\n                if ( !($item instanceof Component) ) {\n                    throw new Error(__filename + ': wrong $prev type');\n                }\n            }\n\n            // style\n            $prev.blur();\n            //$prev.classList.remove('theme-focus');\n\n            // there are some listeners\n            if ( this.events['blur:line'] ) {\n                /**\n                 * Remove focus from an element.\n                 *\n                 * @event module:stb/ui/list~List#blur:item\n                 *\n                 * @type {Object}\n                 * @property {Element} $item previously focused HTML element\n                 */\n                this.emit('blur:line', {$item: $prev});\n            }\n        }\n        // reassign\n        this.focusLine = $item;\n\n        // this.focusLine.data = this.data[this.focusLine.index];\n\n        // correct CSS\n        if ( this.inFocus ) {\n            $item.focus();\n\n            this.inFocus = true;\n            //$item.$node.classList.add('theme-focus');\n\n            // there are some listeners\n            if ( this.events['focus:line'] ) {\n                /**\n                 * Set focus to a DOM element.\n                 *\n                 * @event module:stb/ui/list~List#focus:item\n                 *\n                 * @type {Object}\n                 * @property {Element} $prev old/previous focused HTML element\n                 * @property {Element} $curr new/current focused HTML element\n                 */\n                this.emit('focus:line', {$prev: $prev, $curr: $item});\n            }\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Highlight the given DOM element as blur.\n * Remove focus from the item and generate associated event.\n *\n * @param {Element} $item - element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nMainPanel.prototype.blurLine = function ( $item ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) { throw new Error(__filename + ': wrong arguments number'); }\n    }\n\n    // different element\n    if ( $item ) {\n        if ( $item === this.focusLine ) {\n            this.focusLine = null;\n        }\n\n        $item.blur();\n        //$item.$node.classList.remove('theme-focus');\n\n        // there are some listeners\n        if ( this.events['blur:line'] ) {\n            /**\n             * Remove focus from an element.\n             *\n             * @event module:stb/ui/list~List#blur:item\n             *\n             * @type {Object}\n             * @property {Element} $item previously focused HTML element\n             */\n            this.emit('blur:line', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Set the given item focused by item index.\n *\n * @param {number} index - item data index\n */\nMainPanel.prototype.focusIndex = function ( index ) {\n    var viewIndex = this.viewIndex || 0,\n        self = this,\n        tempIndex;\n\n    if ( DEVELOP ) {\n        if ( +index !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be positive');\n        }\n        // if ( index > this.data.length - 1 ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    if ( index >= this.data.length ) {\n        this.initView(0, function () {\n            self.focusToLine(self.$body.firstChild);\n        });\n    } else if ( index >= viewIndex + this.focusPosition ) {\n        viewIndex = index - this.focusPosition;\n        if ( viewIndex + this.size < this.data.length ) {\n            this.initView(viewIndex, function () {\n                self.focusToLine(self.mainList[self.focusPosition]);\n            });\n        } else {\n            tempIndex = this.size - this.data.length + index;\n            viewIndex = this.data.length - this.size;\n            if ( this.hasEmptyItems ) {\n                tempIndex--;\n                viewIndex++;\n            }\n            this.initView(viewIndex, function () {\n                self.focusToLine(self.mainList[tempIndex]);\n            });\n        }\n\n    } else {\n        tempIndex = index - this.focusPosition;\n        if ( tempIndex < 0 ) {\n            this.initView(0, function () {\n                self.focusToLine(self.mainList[index]);\n            });\n        } else {\n            this.initView(tempIndex, function () {\n                self.focusToLine(self.mainList[self.focusPosition]);\n            });\n        }\n    }\n};\n\n// public\nmodule.exports = MainPanel;\n","'use strict';\n\nvar dom           = require('spa-dom'),\n    app           = require('mag-app'),\n    prepareMovies = require('./prepare.movies'),\n    tag           = dom.tag;\n\n\n/**\n * Change server data to list data.\n *\n * @param {Array} data - data for prepare\n *\n * @return {Array} ready data for LayoutList\n */\nmodule.exports = function ( data ) {\n    var result = [],\n        $focusWrapper, $blurWrapper,\n        count, fill;\n\n    if ( app.metrics.grid.lineCount < data.length ) {\n        fill = true;\n        count = app.metrics.grid.lineCount;\n    } else {\n        count = data.length;\n    }\n    if ( data && data.length ) {\n        result = prepareMovies(data.slice(0, count));\n\n        if ( fill ) {\n            $focusWrapper = tag(\n                'div',\n                {className: 'focusWrapper'},\n\n                tag(\n                    'div',\n                    {className: 'container'},\n                    tag('div', {className: 'poster seeMore'})\n                ),\n\n                tag('div', {className: 'movieTitle'}, gettext('See more'))\n            );\n\n            $blurWrapper = tag(\n                'div',\n                {className: 'blurWrapper'},\n                tag('div', {className: 'poster seeMore'})\n            );\n\n            result.push({\n                items: [\n                    $focusWrapper,\n                    $blurWrapper\n                ],\n                value: false\n            });\n        }\n    }\n\n    return result;\n};\n","'use strict';\n\nvar Page = require('stb-component-page'),\n    dom  = require('spa-dom'),\n    keys = require('stb-keys'),\n\n    LayoutList     = require('mag-component-layout-list'),\n    Layout         = require('mag-component-layout'),\n    app            = require('mag-app'),\n    ModalMessage   = require('mag-component-modal'),\n    ModalCheckList = require('mag-component-modal-check-list'),\n    RadioList      = require('mag-component-radio-list'),\n\n    utils = {\n        initYears: require('../utils/init.years'),\n        prepareMovies: require('../utils/prepare.movies'),\n        toggleFavorite: require('../utils/toggle.favorite')\n    },\n    InfoPanel     = require('../components/info.panel'),\n    Grid          = require('../components/grid'),\n\n    page          = new Page({$node: document.getElementById('pageMovies')}),\n    timers        = {},\n    requestConfig = {},\n\n    noEvents = false,\n\n    moviesGrid, searchLayout,\n    modalSelectGenre, modalSelectYear, modalSortFilm,\n    filtersList, sortList, infoPanel,\n    leftLayout, f3;\n\n\nfunction getMovies ( callback, config ) {\n    app.api.getList(config, function ( error, data, count ) {\n        callback(error, utils.prepareMovies(data), count);\n    });\n}\n\n\n/**\n * Change favorite state.\n */\nfunction toggleFavorite () {\n    if ( moviesGrid.$focusItem.value.favorite ) {\n        infoPanel.$movie.classList.remove('inFavorite');\n    } else {\n        infoPanel.$movie.classList.add('inFavorite');\n    }\n\n    utils.toggleFavorite(moviesGrid.$focusItem.value);\n}\n\n\ninfoPanel = new InfoPanel();\n\nif ( TARGET === 'android-stb' || TARGET === 'android-app' ) {\n    f3 = new Layout({\n        focusable: true,\n        data: [\n            {\n                className: 'favoriteTitle add',\n                value: gettext('Hold the OK button to add to Favorites')\n            },\n            {\n                className: 'favoriteTitle remove',\n                value: gettext('Hold the OK button to remove from Favorites')\n            }\n        ],\n        className: 'favoriteBlock',\n        events: {\n            click: toggleFavorite\n        }\n    });\n} else {\n    f3 = new Layout({\n        focusable: true,\n        data: [\n            {\n                className: 'theme-icon theme-icon-rc-f3'\n            },\n            {\n                className: 'favoriteTitle add',\n                value: gettext('Add to favorites')\n            },\n            {\n                className: 'favoriteTitle remove',\n                value: gettext('Remove from favorites')\n            }\n        ],\n        className: 'favoriteBlock',\n        events: {\n            click: toggleFavorite\n        }\n    });\n}\n\ninfoPanel.$movie.appendChild(f3.$node);\n\n\nsearchLayout = new Layout({\n    data: [\n        dom.tag('div', {className: 'searchFocus'}, dom.tag('div', {className: 'searchIcon'})),\n        {\n            name: '$text',\n            value: gettext('Search for movies, series and TV shows'),\n            className: 'searchText noData'\n        }\n    ],\n    className: 'searchBlock',\n    events: {\n        focus: function () {\n            infoPanel.showInfo();\n            infoPanel.$info.innerText = gettext('Find your favorite movies, series and TV shows by title or by genre');\n        },\n        click: function () {\n            core.intent({\n                action: 'keyboard',\n                data: {\n                    value: requestConfig.search,\n                    title: gettext('Search for movies, series and TV shows')\n                },\n                events: {\n                    done: function ( data ) {\n                        requestConfig.search = data.value;\n                        if ( data.value ) {\n                            searchLayout.$body.classList.add('searchActive');\n                            searchLayout.links.$text.innerText = data.value;\n                            searchLayout.links.$text.classList.remove('noData');\n                        } else {\n                            searchLayout.$body.classList.remove('searchActive');\n                            searchLayout.links.$text.innerText = gettext('Search for movies, series and TV shows');\n                            searchLayout.links.$text.classList.add('noData');\n                        }\n                        moviesGrid.init({\n                            getter: getMovies,\n                            request: requestConfig\n                        });\n                    }\n                }\n            }, function ( error ) {\n                debug.fail('Keyboard error', error);\n            });\n            event.stop = true;\n        },\n        keydown: function ( event ) {\n            switch ( event.code ) {\n                case keys.down:\n                    filtersList.focus();\n                    event.stop = true;\n                    break;\n                case keys.enter:\n                    // there are some listeners\n                    if ( this.events['click'] ) {\n                        // notify listeners\n                        this.emit('click');\n                    }\n                    event.stop = true;\n                    break;\n            }\n        }\n    }\n});\n\n\nfiltersList = new LayoutList({\n    cycle: false,\n    className: 'filtersList',\n\n    data: [\n        {\n            name: 'genres',\n            value: gettext('All genres'),\n            data: gettext('You can choose a movie by genre or year of release. Or you can sort them using other parameters.'),\n            click: function () {\n                filtersList.blur();\n\n                //fix artefacts on mag322\n                setTimeout(function () {\n                    modalSelectGenre.show();\n                }, app.config.delay.modalShow);\n            }\n        },\n        {\n            name: 'years',\n            value: gettext('All years'),\n            data: gettext('You can choose a movie by genre or year of release. Or you can sort them using other parameters.'),\n            click: function () {\n                filtersList.blur();\n\n                //fix artefacts on mag322\n                setTimeout(function () {\n                    modalSelectYear.show();\n                }, app.config.delay.modalShow);\n            }\n        },\n        {\n            name: 'sort',\n            value: gettext('Sort by') + ' ' + gettext('date'),\n            data: gettext('You can choose a movie by genre or year of release. Or you can sort them using other parameters.'),\n            click: function () {\n                filtersList.blur();\n\n                //fix artefacts on mag322\n                setTimeout(function () {\n                    modalSortFilm.show();\n                }, app.config.delay.modalShow);\n\n            }\n        }\n    ],\n\n    render: function ( $item, config ) {\n        var layout, focus, button,\n            title = {};\n\n        while ( $item.firstChild ) {\n            $item.removeChild($item.firstChild);\n        }\n        button = dom.tag('div', {className: 'button'},\n            dom.tag('div', {className: 'titleWrapper'},\n                title.blured = dom.tag('div', {className: 'title'}, config.value)));\n        focus = dom.tag('div', {className: 'buttonFocus'},\n            dom.tag('div', {className: 'titleWrapper'},\n                title.focused = dom.tag('div', {className: 'title'}, config.value)));\n\n        while ( $item.firstChild ) {\n            $item.removeChild($item.firstChild);\n        }\n\n        layout = new Layout({\n            focusable: false,\n            data: [button, focus]\n        });\n\n        if ( config.name ) {\n            this.links[config.name] = layout;\n        }\n\n        $item.appendChild(layout.$node);\n        layout.title = title;\n        $item.title = title;\n        layout.parent = this;\n        layout.$parentItem = $item;\n        $item.layout = layout;\n\n        layout.addListener('click', function () {\n            layout.parent.emit('click:item', {$item: $item, inner: true});\n        });\n\n        if ( config.click ) {\n            this.handlers[$item.index] = config.click;\n        }\n\n        $item.value = config.value || {};\n    },\n\n    fixedData: true,\n    size: 3,\n    focusIndex: 0,\n    propagate: false,\n    type: LayoutList.prototype.TYPE_HORIZONTAL,\n    events: {\n        focus: function () {\n            infoPanel.showInfo();\n            searchLayout.show();\n            moviesGrid.$node.classList.remove('noSearchLine');\n            if ( this.$focusItem ) {\n                infoPanel.$info.innerText = this.$focusItem.data.data;\n            }\n        },\n\n        // blur: function () {},\n        'focus:item': function ( event ) {\n            infoPanel.$info.innerText = event.$curr.data.data;\n        },\n\n        keydown: function ( event ) {\n            switch ( event.code ) {\n                case keys.up:\n                    event.stop = true;\n                    searchLayout.focus();\n                    break;\n                case keys.down:\n                    event.stop = true;\n                    searchLayout.hide();\n                    moviesGrid.$node.classList.add('noSearchLine');\n                    moviesGrid.focus();\n                    break;\n                case keys.right:\n                case keys.left:\n                    // cursor move only on arrow keys\n                    this.move(event.code);\n                    event.stop = true;\n                    break;\n                case keys.enter:\n                    // there are some listeners\n                    if ( this.events['click:item'] && this.$focusItem ) {\n                        // notify listeners\n                        this.emit('click:item', {$item: this.$focusItem, event: event});\n                    }\n                    event.stop = true;\n                    break;\n            }\n        }\n    }\n});\n\n\nmoviesGrid = new Grid({\n    getter: function () {\n        return [];\n    },\n    sizeX: app.metrics.moviesGrid.x,\n    sizeY: app.metrics.moviesGrid.y,\n    focusX: 0,\n    focusY: 0,\n    title: 'Movies',\n    noData: gettext('No results found.'),\n    bufferSize: app.metrics.moviesGrid.cache,\n    emptyLine: true,\n    render: require('../renders/item.list'),\n    className: 'moviesGrid',\n\n    events: {\n        'click:item': function ( event ) {\n            var value = event.$item.value;\n\n            if ( value ) {\n                if ( (value.censored || (value.category && value.category.censored)) && !core.accessControl.state ) {\n                    core.accessControl.request(function ( error ) {\n                        if ( !error ) {\n                            app.route(app.pages.info, {info: value, type: 'main'});\n                        }\n                    });\n                } else {\n                    app.route(app.pages.info, {info: value, type: 'main'});\n                }\n            }\n        },\n\n        focus: function () {\n            if ( this.data.length ) {\n                infoPanel.showMovie();\n            } else {\n                filtersList.focus();\n            }\n\n        },\n\n        'focus:item': function ( event ) {\n            clearTimeout(timers.info);\n            if ( this.focusY > 0 ) {\n                filtersList.hide();\n            } else {\n                filtersList.show();\n            }\n            timers.info = setTimeout(function () {\n                if ( event.$curr ) {\n                    if ( event.$curr.value ) {\n                        infoPanel.fillMovie(event.$curr.value);\n                    }\n                }\n            }, core.environment.onFocusDebounceTimeout);\n        },\n\n        overflow: function ( event ) {\n            if ( event.direction === keys.up ) {\n                filtersList.focus();\n            }\n        },\n\n        keydown: function ( event ) {\n            switch ( event.code ) {\n                case keys.f3:\n                    toggleFavorite();\n                    event.stop = true;\n                    break;\n\n                default:\n                    Grid.prototype.defaultEvents.keydown.call(this, event);\n                    break;\n            }\n        }\n    }\n});\n\n\nleftLayout = new Layout({\n    focusable: false,\n    data: [searchLayout, filtersList, moviesGrid],\n    className: 'mainPanel'\n});\n\n\nleftLayout.$node.appendChild(dom.tag('div', {className: 'shadow'}));\npage.add(leftLayout);\n\npage.add(infoPanel.layout);\n\n\n//genre list selection modal\nmodalSelectGenre = new ModalCheckList({\n    visible: false,\n    title: gettext('Choose genres'),\n    events: {\n        'checked:change': function ( event ) {\n            var titleLinks = filtersList.links.genres.title,\n                title = '',\n                value = '';\n\n            event.checkedData.forEach(function ( item ) {\n                title += ( title ? ', ' : '' ) + item.title;\n                value += ( value ? ',' : '' ) + item.value;\n            });\n\n            requestConfig.offset = 0;\n            requestConfig.limit = 0;\n            if ( title ) {\n                requestConfig.genreId = value;\n                titleLinks.blured.innerText = title;\n                titleLinks.focused.innerText = title;\n            } else {\n                requestConfig.genreId = '';\n                titleLinks.blured.innerText = gettext('All genres');\n                titleLinks.focused.innerText = gettext('All genres');\n            }\n\n            if ( !noEvents ) {\n                moviesGrid.init({\n                    getter: getMovies,\n                    request: requestConfig\n                });\n            }\n        },\n\n        show: function () {\n            this.focus();\n        },\n        hide: function () {\n            filtersList.focus();\n        }\n    },\n    list: {\n        focusIndex: 0,\n        size: app.metrics.modal.size,\n        cycle: false,\n        classIconActive: 'theme-icon theme-icon-ok',\n        classIcon: 'theme-icon'\n    }\n});\npage.add(modalSelectGenre);\n\n\n//categories list selection modal\nmodalSelectYear = new ModalCheckList({\n    visible: false,\n    title: gettext('Choose years'),\n    events: {\n        'checked:change': function ( event ) {\n            var titleLinks = filtersList.links.years.title,\n                title = '',\n                value = '',\n                index = 0;\n\n            event.checkedData.forEach(function ( item ) {\n                title += ( title ? ', ' : '' ) + item.title;\n                for ( index = item.value.start; index <= item.value.end; index++ ) {\n                    value += ( value ? ',' : '' ) + index;\n                }\n            });\n\n            requestConfig.offset = 0;\n            requestConfig.limit = 0;\n            if ( title ) {\n                requestConfig.year = value;\n                titleLinks.blured.innerText = title;\n                titleLinks.focused.innerText = title;\n            } else {\n                requestConfig.year = '';\n                titleLinks.blured.innerText = gettext('All years');\n                titleLinks.focused.innerText = gettext('All years');\n            }\n\n            moviesGrid.init({\n                getter: getMovies,\n                request: requestConfig\n            });\n        },\n\n        show: function () {\n            this.focus();\n        },\n        hide: function () {\n            filtersList.focus();\n        }\n    },\n    list: {\n        focusIndex: 0,\n        size: app.metrics.modal.size,\n        cycle: false,\n        data: utils.initYears(),\n        classIconActive: 'theme-icon theme-icon-ok',\n        classIcon: 'theme-icon'\n    }\n});\npage.add(modalSelectYear);\n\n\n//sort list selection modal\nmodalSortFilm = new ModalMessage({\n    visible: false,\n    title: gettext('Sort by:'),\n    events: {\n        show: function () {\n            this.children[0].focus();\n        }\n    },\n    children: [\n        sortList = new RadioList({\n            focusIndex: 0,\n            size: app.metrics.modal.size,\n            classIconActive: 'theme-icon theme-icon-ok',\n            classIcon: 'theme-icon',\n            cycle: true,\n            data: [\n                {\n                    state: true,\n                    title: gettext('date'),\n                    value: 'added'\n                },\n                {\n                    state: false,\n                    title: gettext('name'),\n                    value: 'name'\n                },\n                {\n                    state: false,\n                    title: gettext('rating'),\n                    value: 'rating'\n                }\n            ],\n            events: {\n                select: function ( item ) {\n                    filtersList.links.sort.title.blured.innerText = gettext('Sort by') + ' ' + item.data.title;\n                    filtersList.links.sort.title.focused.innerText = gettext('Sort by') + ' ' + item.data.title;\n                    requestConfig.sortby = item.data.value;\n\n                    moviesGrid.init({\n                        getter: getMovies,\n                        request: requestConfig\n                    });\n                },\n                keydown: function ( event ) {\n                    RadioList.prototype.defaultEvents.keydown.call(this, event);\n                    switch ( event.code ) {\n                        case keys.back:\n                            modalSortFilm.hide();\n                            filtersList.focus();\n                            event.stop = true;\n                            break;\n                    }\n                }\n            }\n        })\n    ]\n});\npage.add(modalSortFilm);\n\n\nif ( DEVELOP ) {\n    window.moviesGrid = moviesGrid;\n    window.searchLayout = searchLayout;\n    window.filtersList = filtersList;\n    window.modalSelectYear = modalSelectYear;\n    window.sortList = sortList;\n    window.modalSortFilm = modalSortFilm;\n    window.modalSelectGenre = modalSelectGenre;\n}\n\n\n/**\n * Init page.\n */\npage.addListeners({\n    show: function ( event ) {\n        var config = {},\n            item;\n\n        if ( !event.data ) {\n            return;\n        }\n\n        for ( item in event.data.query ) {\n            if ( event.data.query[item] ) {\n                config[item] = event.data.query[item];\n            }\n        }\n\n        requestConfig = config;\n\n        noEvents = true;\n        modalSelectGenre.clearChecked(0);\n        modalSelectYear.clearChecked(0);\n        noEvents = false;\n\n        requestConfig.offset = 0;\n        requestConfig.limit = 0;\n        moviesGrid.init({\n            title: event.data.title,\n            getter: getMovies,\n            request: requestConfig\n        });\n\n        filtersList.show();\n        filtersList.focus();\n\n        sortList.resetData();\n        filtersList.links.sort.title.blured.innerText = gettext('Sort by') + ' ' + sortList.checkedData.title;\n        filtersList.links.sort.title.focused.innerText = gettext('Sort by') + ' ' + sortList.checkedData.title;\n\n        searchLayout.$body.classList.remove('searchActive');\n        searchLayout.links.$text.innerText = gettext('Search for movies, series and TV shows');\n        searchLayout.links.$text.classList.add('noData');\n\n        infoPanel.clearRating();\n    },\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.back:\n                event.stop = true;\n                app.route(app.pages.main);\n                break;\n        }\n    }\n});\n\n\npage.once('show', function () {\n    app.api.getGenres(function ( error, data ) {\n        var result = [];\n\n        if ( error ) {\n            data = [];\n        } else {\n            data = data.data || [];\n        }\n\n        data.forEach(function ( item ) {\n            result.push({\n                state: false,\n                title: item.name,\n                value: item.ids.join(',')\n            });\n        });\n\n        modalSelectGenre.list.setData({data: result, focusIndex: 0});\n    });\n});\n\n\napp.addListener('change:favorite', function ( data ) {\n    var video = data.video;\n\n    if ( moviesGrid.$focusItem && video === moviesGrid.$focusItem.value ) {\n        if ( video.favorite ) {\n            infoPanel.$movie.classList.add('inFavorite');\n        } else {\n            infoPanel.$movie.classList.remove('inFavorite');\n        }\n    }\n});\n\n\nmodule.exports = page;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-modal');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-modal';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base modal window implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n */\nfunction Modal ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body ) {\n            throw new Error(__filename + ': config.$body should not be provided manually');\n        }\n    }\n\n    // create centered div\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // add table-cell wrapper\n    this.$node.appendChild(document.createElement('div').appendChild(this.$body).parentNode);\n}\n\n\n// inheritance\nModal.prototype = Object.create(Component.prototype);\nModal.prototype.constructor = Modal;\n\n// set component name\nModal.prototype.name = 'spa-component-modal';\n\n\n// public\nmodule.exports = Modal;\n","/**\n * @license The MIT License (MIT)\n * @copyright Dmitry Fedotov <bas.jsdev@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\nvar Modal     = require('mag-component-modal'),\n    CheckList = require('mag-component-check-list'),\n    Scroll    = require('stb-component-scrollbar'),\n    dom       = require('spa-dom');\n\n\n/**\n * Modal window implementation.\n *\n * @constructor\n * @extends Modal\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {String} [config.title] message title\n * @param {boolean} [config.titleCounter] counter in title\n * @param {String} [config.className] message class name\n * @param {String} [config.icon] icon at header\n * @param {boolean} [config.visible] visibility flag\n * @param {Array} [config.children] content (inherited from the parent)\n * @param {Object} [config.list] all init parameters for mag-component-check-list constructor\n *\n * @example\n * var modalCheckList = new ModalCheckList({\n *     title: 'sort',\n *     events: {\n *         hide: function () {\n *             page.panelSet.focus();\n *         }\n *     },\n *     list: {\n *         size: 2,\n *         data: [\n *             {state: true, title: 'All content', value: 1, unique: true},\n *             {state: false, title: 'Music', value: 2},\n *             {state: false, title: 'Video', value: 3}\n *         ]\n *     }\n * });\n *\n * page.add(modalCheckList);\n *\n * leftPanel.add(leftPanelList = new LayoutList({\n *     size: 6,\n *     data: [\n *         {\n *             items: page.modalCheckList.getListItem(),\n *             click: function () {\n *                 panelSet.blur();\n *                 modalCheckList.show();\n *             }\n *         }\n *     ]\n * }));\n *\n */\n\n\nfunction ModalCheckList ( config ) {\n    var self = this,\n        index, listClickEvents;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        if ( !config.list ) {\n            throw new Error(__filename + ': wrong or empty mag-component-check-list component config config.list');\n        }\n    }\n\n    // sanitize\n    config = config || {};\n    config.list = config.list || {};\n    config.list.events = config.list.events || {};\n    config.list.propagate = config.list.propagate !== false;\n\n    config.children = config.children || [];\n\n    this.scroll = new Scroll({});\n    config.list.scroll = this.scroll;\n\n    this.list = new CheckList(config.list);\n\n    for ( index = 0; index < this.list.data.length; index++ ) {\n        if ( this.list.data[index].unique ) {\n            this.uniqueItem = {\n                data: this.list.data[index],\n                index: index\n            };\n\n            break;\n        }\n    }\n\n    if ( this.uniqueItem && this.uniqueItem.data.state && this.list.checkedData.length > 1 ) {\n        this.list.clearChecked();\n        if ( this.uniqueItem.index < this.list.$node.children.length + this.list.viewIndex && this.uniqueItem.index < this.list.viewIndex ) {\n            this.list.changeState(this.list.$node.children[this.uniqueItem.index - this.list.viewIndex]);\n        } else {\n            this.uniqueItem.data.state = true;\n            this.list.checkedData.push(this.uniqueItem.data);\n        }\n    }\n\n    this.checkedData = this.list.checkedData;\n\n    config.children.push(this.list);\n    config.children.push(this.scroll);\n\n\n    // parent constructor call\n    Modal.call(this, config);\n\n    if ( config.titleCounter ) {\n        this.$header.appendChild(\n            dom.tag(\n                'div',\n                {className: 'theme-icon'},\n                dom.tag(\n                    'div',\n                    {className: 'theme-counter'},\n                    self.$titleCount = dom.tag(\n                        'div',\n                        {},\n                        this.list.data.length && self.uniqueItem ?  this.list.data.length - 1 :  this.list.data.length\n                    )\n                )\n            )\n        );\n\n        this.list.setData = function ( data ) {\n            CheckList.prototype.setData.call(self.list, data);\n            self.$titleCount.innerText = data.data.length && self.uniqueItem ? data.data.length - 1 : data.data.length;\n        };\n    }\n\n    if ( config.list.data && config.list.data.length ) {\n        this.scroll.show();\n        this.scroll.init({realSize: config.list.data.length, viewSize: config.list.size || 5});\n    } else {\n        this.scroll.hide();\n    }\n\n    this.addListener('focus',\n        /**\n        * @this ModalCheckList\n        */\n        function () {\n            this.list.focus();\n        });\n\n    listClickEvents = this.list.events['click:item'] || [];\n    this.list.events['click:item'] = [];\n    this.list.addListener('click:item',\n        /**\n         * @param {Object} event click event\n         *\n         * @this ModalCheckList.list\n         */\n        function ( event ) {\n            var $item   = event.$item,\n                data = $item.data;\n\n            if ( self.uniqueItem ) {\n                if ( data.unique && !data.state ) {\n                    this.changeState($item);\n\n                    return;\n                }\n\n                if ( data.unique ) {\n                    this.clearChecked();\n                    this.changeState($item);\n                } else {\n                    if ( self.uniqueItem.data.state ) {\n                        index = self.uniqueItem.index - this.viewIndex;\n                        if ( index < this.$node.children.length && index >= 0 ) {\n                            this.changeState(this.$node.children[index]);\n                        } else {\n                            self.uniqueItem.data.state = false;\n                            index = this.checkedData.indexOf(self.uniqueItem.data);\n                            if ( index !== -1 ) {\n                                this.checkedData.splice(index, 1);\n                            }\n                        }\n                    }\n\n                    if ( this.checkedData.length === this.data.length - 1 ) {\n                        this.clearChecked();\n                        index = self.uniqueItem.index - this.viewIndex;\n                        if ( index < this.$node.children.length && index >= 0 ) {\n                            this.changeState(this.$node.children[index]);\n                        } else {\n                            self.uniqueItem.data.state = true;\n                            this.checkedData.push(self.uniqueItem.data);\n                        }\n                    }\n                }\n            }\n\n            for ( index = 0; index < listClickEvents.length; index++ ) {\n                listClickEvents[index].call(this, event);\n            }\n\n            self.checkedData = this.checkedData;\n\n            self.emit('checked:change', {checkedData: this.checkedData});\n        });\n}\n\n\n// inheritance\nModalCheckList.prototype = Object.create(Modal.prototype);\nModalCheckList.prototype.constructor = ModalCheckList;\n\n// set component name\nModalCheckList.prototype.name = 'mag-component-modal mag-component-modal-check-list';\n\n\n/**\n * Reset data to default state and render inner structures and HTML.\n */\nModalCheckList.prototype.resetData = function () {\n    this.list.resetData();\n\n    if ( this.uniqueItem && this.uniqueItem.data.state && this.list.checkedData.length > 1 ) {\n        this.list.clearChecked();\n        if ( this.uniqueItem.index < this.list.$node.children.length + this.list.viewIndex && this.uniqueItem.index < this.list.viewIndex ) {\n            this.list.changeState(this.list.$node.children[this.uniqueItem.index - this.list.viewIndex]);\n        } else {\n            this.uniqueItem.data.state = true;\n            this.list.checkedData.push(this.uniqueItem.data);\n        }\n    }\n\n    this.checkedData = this.list.checkedData;\n    this.emit('checked:change', {checkedData: this.checkedData});\n};\n\n\n/**\n * Set all states to false and render inner structures and HTML.\n *\n * @param {number} focusIndex focus index\n */\nModalCheckList.prototype.clearChecked = function ( focusIndex ) {\n    var state = this.uniqueItem && this.uniqueItem.data.defaultState;\n\n    this.list.clearChecked(focusIndex);\n\n    if ( state ) {\n        this.uniqueItem.data.defaultState = state;\n        if ( this.uniqueItem.index < this.list.$node.children.length + this.list.viewIndex && this.uniqueItem.index >= this.list.viewIndex ) {\n            this.list.changeState(this.list.$node.children[this.uniqueItem.index - this.list.viewIndex]);\n        } else {\n            this.uniqueItem.data.state = true;\n            this.list.checkedData.push(this.uniqueItem.data);\n        }\n    }\n\n    this.checkedData = this.list.checkedData;\n    this.emit('checked:change', {checkedData: this.checkedData});\n};\n\n\n// public\nmodule.exports = ModalCheckList;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n'use strict';\n\nvar List            = require('mag-component-list'),\n    keys            = require('stb-keys'),\n    classChecked    = 'checked',\n    classIcon       = 'theme-icon theme-icon-checkbox',\n    classIconActive = 'theme-icon theme-icon-checkbox-active';\n\n\n/**\n * Base check list implementation\n *\n * @constructor\n * @extends List\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {string} [config.classIcon] icon default state class name\n * @param {string} [config.classIconActive] icon active state class name\n * @param {string} [config.classChecked] checked item class\n */\nfunction CheckList ( config ) {\n    /**\n     * Checked data array\n     */\n    this.checkedData = [];\n\n    if ( config.classIcon ) {\n        classIcon = config.classIcon;\n    }\n    if ( config.classIconActive ) {\n        classIconActive = config.classIconActive;\n    }\n    if ( config.classChecked ) {\n        classIcon = config.classChecked;\n    }\n\n    List.call(this, config);\n}\n\n\nCheckList.prototype = Object.create(List.prototype);\nCheckList.prototype.constructor = CheckList;\n\n// set component name\nCheckList.prototype.name = 'mag-component-check-list';\n\n\n/**\n * Set data and render inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nCheckList.prototype.setData = function ( config ) {\n    var index = 0;\n\n    List.prototype.setData.call(this, config);\n    this.checkedData = [];\n\n    for ( index; index < this.data.length; index++ ) {\n        this.data[index].defaultState = this.data[index].state;\n        if ( this.data[index].state ) {\n            this.checkedData.push(this.data[index]);\n        }\n    }\n\n    if ( this.$focusItem ) {\n        this.defaultFocusIndex = this.$focusItem.index;\n    } else {\n        this.defaultFocusIndex = 0;\n    }\n};\n\n\n/**\n * Reset data to default state and render inner structures and HTML.\n */\nCheckList.prototype.resetData = function () {\n    var index = 0;\n\n    for ( index; index < this.data.length; index++ ) {\n        this.data[index].state = this.data[index].defaultState;\n    }\n\n    this.setData({data: this.data, focusIndex: this.defaultFocusIndex});\n};\n\n\n/**\n * Set all states to false and render inner structures and HTML.\n *\n * @param {number} [focusIndex] focus index\n */\nCheckList.prototype.clearChecked = function ( focusIndex ) {\n    var index = 0;\n\n    for ( index; index < this.data.length; index++ ) {\n        this.data[index].state = false;\n    }\n\n    // no focusIndex, focusIndex may be 0\n    if ( !focusIndex && focusIndex !== 0 ) {\n        focusIndex = this.$focusItem ? this.$focusItem.index : 0;\n    }\n\n    this.setData({data: this.data, focusIndex: focusIndex});\n};\n\n\n/**\n * CheckList of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nCheckList.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse wheel events.\n     *\n     * @param {Event} event generated event\n     */\n    mousewheel: List.prototype.defaultEvents.mousewheel,\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n            case keys.right:\n            case keys.left:\n            case keys.pageUp:\n            case keys.pageDown:\n            case keys.home:\n            case keys.end:\n                event.stop = true;\n                // cursor move only on arrow keys\n                this.move(event.code);\n                break;\n            case keys.enter:\n                this.changeState(this.$focusItem);\n                // there are some listeners\n                if ( this.events['click:item'] && this.$focusItem ) {\n                    // notify listeners\n                    this.emit('click:item', {$item: this.$focusItem, event: event});\n                }\n                break;\n        }\n    }\n};\n\n\nCheckList.prototype.changeState = function ( $item ) {\n    var state = !$item.state,\n        data = this.data[$item.index],\n        index = -1;\n\n    $item.state = state;\n    data.state = state;\n    if ( state ) {\n        $item.classList.add(classChecked);\n        $item.checkBox.className = classIconActive;\n    } else {\n        $item.classList.remove(classChecked);\n        $item.checkBox.className = classIcon;\n    }\n\n    if ( state ) {\n        this.checkedData.push(data);\n    } else {\n        index = this.checkedData.indexOf(data);\n        if ( index !== -1 ) {\n            this.checkedData.splice(index, 1);\n        }\n    }\n\n    if ( this.events['change:item'] ) {\n        // notify listeners\n        this.emit('change:item', {$item: $item, state: state});\n    }\n};\n\n\n/**\n * Default render function\n *\n * @param {Element} $item in list\n * @param {Array} data to render layout element\n * @param {string} [data.title] title of checkbox\n * @param {boolean} [data.state] state of checkbox: checked or not\n * @param {string} [data.value] special value of item\n */\nCheckList.prototype.renderItemDefault = function ( $item, data ) {\n    var table, tr, td,\n        check;\n\n    if ( data.className ) {\n        $item.className = 'item ' + data.className;\n        if ( $item === this.$focusItem ) {\n            $item.className += ' focus';\n        }\n    }\n\n    if ( $item.ready ) {\n        $item.$title.innerText = data.title || '';\n        if ( data.state ) {\n            $item.classList.add(classChecked);\n            $item.checkBox.className = classIconActive;\n        } else {\n            $item.classList.remove(classChecked);\n            $item.checkBox.className = classIcon;\n        }\n\n        $item.state = data.state;\n        $item.value = data.value;\n    } else {\n        $item.innerHTML = '';\n        table = document.createElement('table');\n        tr = document.createElement('tr');\n        td = document.createElement('td');\n        check = document.createElement('div');\n        if ( data.state ) {\n            $item.classList.add(classChecked);\n            check.className = classIconActive;\n        } else {\n            $item.classList.remove(classChecked);\n            check.className = classIcon;\n        }\n\n        table.appendChild(tr);\n        td.appendChild(check);\n\n        td.className = 'checkBoxWrapper';\n        tr.appendChild(td);\n\n        td = document.createElement('td');\n        td.className = 'title';\n        td.innerText = data.title || '';\n        tr.appendChild(td);\n\n        $item.checkBox = check;\n        $item.state = data.state;\n        $item.value = data.value;\n        $item.$title = td;\n\n        $item.appendChild(table);\n\n        $item.ready = true;\n    }\n};\n\n\nCheckList.prototype.renderItem = CheckList.prototype.renderItemDefault;\n\n\n// public\nmodule.exports = CheckList;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base scroll bar implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {number} [config.value=0] initial thumb position\n * @param {number} [config.realSize=100] actual scroll size\n * @param {number} [config.viewSize=10] visible area size\n * @param {number} [config.type] direction\n *\n * @example\n * var ScrollBar = require('stb/ui/scroll.bar'),\n *     scrollBar = new ScrollBar({\n *         viewSize: 5,\n *         realSize: 25,\n *         events: {\n *             done: function () {\n *                 debug.log('ScrollBar: done');\n *             },\n *             change: function ( data ) {\n *                 debug.log('ScrollBar: change to ' + data.curr + ' from ' + data.prev);\n *             }\n *         }\n *     });\n */\nfunction ScrollBar ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Visible area size.\n     *\n     * @type {number}\n     */\n    this.viewSize = 10;\n\n    /**\n     * Scroll area actual height or width (if scroll is horizontal).\n     *\n     * @type {number}\n     */\n    this.realSize = 100;\n\n    /**\n     * Scroll thumb position.\n     *\n     * @type {number}\n     */\n    this.value = 0;\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Geometry of the scroll thumb element.\n     *\n     * @type {ClientRect}\n     */\n    this.thumbRect = null;\n\n    /**\n     * Geometry of the scroll track element.\n     *\n     * @type {ClientRect}\n     */\n    this.trackRect = null;\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'scrollBar ' + (config.className || '');\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // insert thumb line\n    this.$thumb = this.$body.appendChild(document.createElement('div'));\n\n    // correct CSS class name\n    this.$thumb.className = 'thumb';\n\n    // component setup\n    this.init(config);\n}\n\n\n// inheritance\nScrollBar.prototype = Object.create(Component.prototype);\nScrollBar.prototype.constructor = ScrollBar;\n\n// set component name\nScrollBar.prototype.name = 'spa-component-scrollbar';\n\nScrollBar.prototype.TYPE_VERTICAL   = 1;\nScrollBar.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Init or re-init realSize/viewSize/value parameters.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nScrollBar.prototype.init = function ( config ) {\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // set actual scroll size\n    if ( config.realSize !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.realSize) !== config.realSize ) {\n                throw new Error(__filename + ': config.realSize value must be a number');\n            }\n        }\n\n        // apply\n        this.realSize = config.realSize;\n    }\n\n    // set visible area size\n    if ( config.viewSize !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.viewSize) !== config.viewSize ) {\n                throw new Error(__filename + ': config.viewSize value must be a number');\n            }\n            if ( config.viewSize < 0 ) {\n                throw new Error(__filename + ': config.viewSize value must be greater than 0');\n            }\n        }\n\n        // apply\n        this.viewSize = config.viewSize;\n    }\n\n    // show or hide thumb\n    if ( this.viewSize >= this.realSize ) {\n        this.$thumb.classList.add('hidden');\n    } else {\n        this.$thumb.classList.remove('hidden');\n    }\n\n    // set thumb position\n    if ( config.value !== undefined ) {\n        // apply\n        this.scrollTo(config.value);\n    }\n\n    // set thumb size\n    if ( this.type === this.TYPE_VERTICAL ) {\n        this.$thumb.style.height = (this.viewSize / this.realSize * 100) + '%';\n    } else {\n        this.$thumb.style.width = (this.viewSize / this.realSize * 100) + '%';\n    }\n\n    // geometry\n    this.thumbRect = this.$thumb.getBoundingClientRect();\n    this.trackRect = this.$node.getBoundingClientRect();\n};\n\n\n/**\n * Set position of the given value.\n * Does nothing in case when scroll is in the end and passed value is more than scroll bar length.\n *\n * @param {number} value new value to set\n * @return {boolean} operation result\n *\n * @fires module:stb/ui/scroll.bar~ScrollBar#done\n * @fires module:stb/ui/scroll.bar~ScrollBar#change\n */\nScrollBar.prototype.scrollTo = function ( value ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(value) !== value ) {\n            throw new Error(__filename + ': value must be a number');\n        }\n        if ( this.realSize > this.viewSize && value > this.realSize - this.viewSize ) {\n            throw new Error(__filename + ': value is greater than this.realSize-this.viewSize');\n        }\n        if ( value < 0 ) {\n            throw new Error(__filename + ': value is less then 0');\n        }\n    }\n\n    // value has changed\n    if ( this.value !== value ) {\n        // track and thumb geometry was not set\n        if ( this.thumbRect.height === 0 || this.thumbRect.width === 0 ) {\n            // apply\n            this.trackRect = this.$node.getBoundingClientRect();\n            this.thumbRect = this.$thumb.getBoundingClientRect();\n        }\n\n        // set scroll bar width\n        if ( this.type === this.TYPE_VERTICAL ) {\n            this.$thumb.style.marginTop = ((this.trackRect.height - this.thumbRect.height) * value / (this.realSize - this.viewSize)) + 'px';\n        } else {\n            this.$thumb.style.marginLeft = ((this.trackRect.width - this.thumbRect.width) * value / (this.realSize - this.viewSize)) + 'px';\n        }\n\n        // there are some listeners\n        if ( this.events['change'] ) {\n            /**\n             * Update scroll value.\n             *\n             * @event module:stb/ui/scroll.bar~ScrollBar#change\n             *\n             * @type {Object}\n             * @property {number} prev old/previous scroll value\n             * @property {number} curr new/current scroll value\n             */\n            this.emit('change', {curr: value, prev: this.value});\n        }\n\n        // is it the end?\n        if ( value >= this.realSize ) {\n            value = this.realSize;\n\n            // there are some listeners\n            if ( this.events['done'] ) {\n                /**\n                 * Set scroll to its maximum value.\n                 *\n                 * @event module:stb/ui/scroll.bar~ScrollBar#done\n                 */\n                this.emit('done');\n            }\n        }\n\n        // set new value\n        this.value = value;\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = ScrollBar;\n","'use strict';\n\n/**\n * Init years data for filters.\n *\n * @return {Array} ready data for years filter\n */\nmodule.exports = function () {\n    var list = [\n            {\n                state: false,\n                title: '1960 - 1980',\n                value: {start: 1960, end: 1980}\n            },\n            {\n                state: false,\n                title: gettext('Before') + ' 1960',\n                value: {start: 1885, end: 1959}\n            }\n        ],\n        date = new Date(),\n        index, year;\n\n    year = date.getFullYear();\n    for ( index = 1981; index <= year; index++ ) {\n        if ( year - index > 10 ) {\n            list.unshift({\n                state: false,\n                title: index + ' - ' + (index + 9),\n                value: {start: index, end: index + 9}\n            });\n            index += 9;\n        } else {\n            list.unshift({\n                state: false,\n                title: index,\n                value: {start: index, end: index}\n            });\n        }\n    }\n\n    return list;\n};\n","/**\n * MainPanel component with caching data.\n *\n * @author Roman Stoian <r.stoyan@infomir.com>.\n */\n\n/* eslint no-path-concat: 0 */\n/* eslint complexity: 0 */\n/* eslint max-statements: 0 */\n/* eslint max-lines-per-function: 0 */\n\n'use strict';\n\n//TODO inherit MainPanel\nvar Component = require('spa-component'),\n    keys      = require('spa-keys');\n\n/**\n * Mouse click event.\n *\n * @event module:stb/ui/grid~MainPanel#click:item\n *\n * @type {Object}\n * @property {Element} $item clicked HTML item\n * @property {Event} event click event data\n */\n\n\n/**\n * Cache grid implementation.\n *\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   config - init parameters (all inherited from the parent)\n * @param {Function} [config.render] - method to build item content\n * @param {Function} [config.createLine] - method to create new grid line\n * @param {boolean}  [config.cycleX=true] - allow or not to jump to the opposite side of line when there is nowhere to go next\n * @param {boolean}  [config.cycleY=true] - allow or not to jump to the opposite side of column when there is nowhere to go next\n * @param {Function} config.getter - method to get data for cache\n * @param {Object}   [config.request={}] - request params for getter\n * @param {number}   config.sizeY - grid columns count\n * @param {number}   config.sizeX - grid rows count\n * @param {number}   [config.bufferSize=3] - amount of buffered items\n * @param {number}   [config.focusIndex] - list item index to make item focused (move view window to this position)\n * @param {boolean}  [config.emptyLine=true] - need add empty items in before and after list data\n * @param {number}   [config.focusPosition] - focus line index\n *\n */\nfunction Grid ( config ) {\n    // current execution context\n    var self = this;\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) { throw new Error(__filename + ': wrong config type'); }\n        // init parameters checks\n        if ( config.className && typeof config.className !== 'string' ) { throw new Error(__filename + ': wrong or empty config.className'); }\n        //if ( config.navigate  && typeof config.navigate  !== 'function' ) { throw new Error(__filename + ': wrong config.navigate type'); }\n    }\n\n    /**\n     * List of DOM elements representing the component cells.\n     * Necessary for navigation calculations.\n     *\n     * @type {Element[][]}\n     */\n    this.bufferBefore = [];\n    this.mainList = [];\n    this.bufferAfter = [];\n\n    this.loadData = false;\n\n    this.$focusLine = null;\n    this.$focusItem = null;\n\n\n    /**\n     * Component data to visualize.\n     *\n     * @type {Array[]}\n     */\n    this.data = [];\n\n    /**\n     * Allow or not to jump to the opposite side of line when there is nowhere to go next.\n     *\n     * @type {boolean}\n     */\n    this.cycleX = false;\n\n    /**\n     * Allow or not to jump to the opposite side of column when there is nowhere to go next.\n     *\n     * @type {boolean}\n     */\n    this.cycleY = false;\n\n    this.emptyLine = false;\n    this.bufferSize = 0;\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    if ( config.title ) {\n        this.$title = document.createElement('div');\n        this.$title.className = 'title';\n        this.$node.appendChild(this.$title);\n    }\n    this.$node.appendChild(this.$body);\n\n    this.$noData = document.createElement('div');\n    this.$noData.className = 'noData hidden';\n    this.$node.appendChild(this.$noData);\n\n    // component setup\n    this.init(config);\n    this.inFocus = false;\n\n    this.addListener('focus', function () {\n        self.inFocus = true;\n        if ( self.$focusItem ) {\n            if ( self.events['focus:item'] ) {\n                self.emit('focus:item', {$prev: null, $curr: self.$focusItem});\n            }\n        }\n    });\n\n    this.addListener('blur', function () {\n        self.inFocus = false;\n    });\n}\n\n\n// inheritance\nGrid.prototype = Object.create(Component.prototype);\nGrid.prototype.constructor = Grid;\n\n// set component name\nGrid.prototype.name = 'mag-component-cache-grid';\n\n\n/**\n * Fill the given cell with data.\n * $item.data can contain the old data (from the previous render).\n *\n * @param {Element} $item - item DOM link\n * @param {*} data - associated with this item data\n */\nGrid.prototype.renderItemDefault = function ( $item, data ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        if ( !($item instanceof Element) ) { throw new Error(__filename + ': wrong $item type'); }\n    }\n\n    $item.innerText = data.value;\n};\n\n/**\n * Create line.\n * $item.data can contain the old data (from the previous render).\n *\n * @param {number} index - array index\n * @param {Object} data - associated with this item data\n *\n * @return {HTMLElement} ready item\n */\nGrid.prototype.createLineDefault = function ( index, data ) {\n    var $item = document.createElement('div');\n\n    $item.className = 'line';\n    $item.index = index;\n    $item.data = data;\n\n    return $item;\n};\n\n\n/**\n * Method to build each grid cell content.\n * Can be redefined to provide custom rendering.\n *\n * @type {function}\n */\nGrid.prototype.renderItem = Grid.prototype.renderItemDefault;\n\nGrid.prototype.createItem = function ( index ) {\n    var item = document.createElement('div');\n\n    item.className = 'item';\n    item.index = index;\n\n    return item;\n};\n\n/**\n * Method to build each grid cell content.\n * Can be redefined to provide custom rendering.\n *\n * @type {function}\n */\nGrid.prototype.createLine = Grid.prototype.createLineDefault;\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nGrid.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse wheel events.\n     *\n     * @param {Event} event - generated event\n     */\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        if ( event.wheelDeltaY ) {\n            this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n        }\n\n        // scrolling by X axis\n        if ( event.wheelDeltaX ) {\n            this.move(event.wheelDeltaX > 0 ? keys.left : keys.right);\n        }\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event - generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n            case keys.right:\n            case keys.left:\n                // cursor move only on arrow keys\n                event.stop = true;\n                this.move(event.code);\n                break;\n            case keys.enter:\n                event.stop = true;\n                // there are some listeners\n                if ( this.events['click:item'] ) {\n                    // notify listeners\n                    this.emit('click:item', {$item: this.$focusItem, event: event});\n                }\n                break;\n        }\n    }\n};\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data - incoming array\n * @return {Array} reworked - incoming data\n */\nfunction normalize ( data ) {\n    var index, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( index = 0; index < data.length; index++ ) {\n        // cell value\n        item = data[index];\n        // primitive value\n        if ( typeof item !== 'object' ) {\n            // wrap with defaults\n            item = data[index] = {\n                value: data[index]\n            };\n        }\n\n        if ( DEVELOP ) {\n            //if ( !('value' in item) ) { throw new Error(__filename + ': field \"value\" is missing'); }\n            if ( ('mark' in item) && Boolean(item.mark) !== item.mark ) {\n                throw new Error(__filename + ': item.mark must be boolean');\n            }\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config - init parameters (subset of constructor config params)\n */\nGrid.prototype.init = function ( config ) {\n    var self = this;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) { throw new Error(__filename + ': wrong arguments number'); }\n        if ( typeof config !== 'object' ) { throw new Error(__filename + ': wrong config type'); }\n    }\n\n    // custom render method\n    if ( config.render ) {\n        self.renderItem = config.render;\n    }\n\n    // custom render method\n    if ( config.createLine ) {\n        self.createLine = config.createLine;\n    }\n\n    // apply cycle behaviour\n    if ( config.cycleX !== undefined ) {\n        this.cycleX = config.cycleX;\n    }\n    if ( config.cycleY !== undefined ) {\n        this.cycleY = config.cycleY;\n    }\n\n\n    if ( config.sizeX && config.sizeY ) {\n        if ( DEVELOP ) {\n            if ( !config.sizeX || !config.sizeY ) {\n                throw new Error(__filename + ': wrong grid data size');\n            }\n        }\n\n        this.sizeX = config.sizeX;\n        this.sizeY = config.sizeY;\n    }\n\n    if ( config.bufferSize !== undefined ) {\n        if ( DEVELOP ) {\n            if ( +config.bufferSize !== config.bufferSize ) {\n                throw new Error(__filename + ': config.bufferSize must be a number');\n            }\n            if ( config.bufferSize <= 0 ) {\n                throw new Error(__filename + ': config.bufferSize should be positive');\n            }\n        }\n\n        // apply\n        this.bufferSize = config.bufferSize;\n    }\n\n    if ( config.emptyLine !== undefined ) {\n        this.emptyLine = config.emptyLine;\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( name ) {\n            self.events[name] = null;\n            self.addListener(name, config.events[name]);\n        });\n    }\n\n    if ( config.translate ) {\n        this.translate = config.translate;\n    }\n\n    if ( config.emptyLine !== undefined ) {\n        this.emptyLine = config.emptyLine;\n    }\n\n    if ( config.noData ) {\n        this.$noData.innerText = config.noData;\n    }\n\n    this.getter = config.getter;\n    this.config = config.request || {};\n\n    this.size = this.sizeX * this.sizeY;\n    this.viewIndex = null;\n    this.lastViewindex = 0;\n    this.maxCount = 0;\n\n    /**\n     * Current navigation map horizontal position.\n     *\n     * @type {number}\n     */\n    this.focusX = 0;\n\n    /**\n     * Current navigation map vertical position.\n     *\n     * @type {number}\n     */\n    this.focusY = 0;\n\n    if ( !this.getter ) {\n\n        return;\n    }\n\n    if ( this.$title && config.title ) {\n        this.$title.innerText = config.title;\n    }\n\n    if ( config.focusIndex === undefined ) {\n        // go to the first page\n        this.initView(0);\n    } else {\n        if ( DEVELOP ) {\n            if ( +config.focusIndex !== config.focusIndex ) {\n                throw new Error(__filename + ': config.focusIndex must be a number');\n            }\n            if ( config.focusIndex < 0 ) {\n                throw new Error(__filename + ': config.focusIndex should be positive');\n            }\n        }\n\n        // jump to the necessary item\n        this.focusIndex(config.focusIndex);\n    }\n};\n\n/**\n * Set the given item focused by item index.\n *\n * @param {number} index - item data index\n */\nGrid.prototype.focusIndex = function ( index ) {\n    var viewIndex = this.viewIndex || 0;\n\n    if ( DEVELOP ) {\n        if ( +index !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be positive');\n        }\n    }\n\n    this.initView(viewIndex);\n\n    //TODO: may be in future it will be need\n    // if ( index >= this.data.length ) {\n    //     this.initView(0, function () {\n    //         self.focusLine(self.$body.firstChild);\n    //     });\n    // } else if ( index >= viewIndex + this.focusPosition ) {\n    //     viewIndex = index - this.focusPosition;\n    //     if ( viewIndex + this.size < this.data.length ) {\n    //         this.initView(viewIndex, function () {\n    //             self.focusLine(self.mainList[self.focusPosition]);\n    //         });\n    //     } else {\n    //         tempIndex = this.size - this.data.length + index;//7-7+6\n    //         viewIndex = this.data.length - this.size;\n    //         if ( this.hasEmptyItems ) {\n    //             tempIndex--;\n    //             viewIndex++;\n    //         }\n    //         this.initView(viewIndex, function () {\n    //             self.focusLine(self.mainList[tempIndex]);\n    //         });\n    //     }\n    //\n    // } else {\n    //     tempIndex = index - this.focusPosition;\n    //     if ( tempIndex < 0 ) {\n    //         this.initView(0, function () {\n    //             self.focusLine(self.mainList[index]);\n    //         });\n    //     } else {\n    //         this.initView(tempIndex, function () {\n    //             self.focusLine(self.mainList[self.focusPosition]);\n    //         });\n    //     }\n    // }\n};\n\n\n/**\n * Get data and fill row.\n *\n * @param {Object} row - row to render\n */\nGrid.prototype.fillRow = function ( row ) {\n    var self = this,\n        index = row.index * this.sizeX;\n\n    this.loadData = true;\n    this.config.offset = index;\n    this.config.limit = this.sizeX;\n\n    this.getter(function ( error, data ) {\n        var $item, ix;\n\n        if ( error ) {\n            if ( self.events['data:error'] ) {\n                self.emit('data:error', error);\n            }\n            // self.fillRow(row);\n            self.loadData = false;\n\n            return;\n        }\n        data = normalize(data);\n        for ( ix = 0; ix < self.sizeX; ix++ ) {\n            if ( ix < data.length ) {\n                $item = self.createItem(index + ix);\n                self.renderItem($item, data[ix]);\n                row.appendChild($item);\n            }\n        }\n        self.loadData = false;\n    }, this.config);\n};\n\n\n/**\n * Init the visible window.\n *\n * @param {number} viewIndex - start position to render\n *\n * @fires module:stb/ui/list~List#move:view\n *\n * @return {boolean} init state\n */\nGrid.prototype.initView = function ( viewIndex ) {\n    var self = this,\n        count = 0;\n\n    if ( DEVELOP ) {\n        if ( +viewIndex !== viewIndex ) {\n            throw new Error(__filename + ': viewIndex must be a number');\n        }\n        if ( viewIndex < 0 ) {\n            throw new Error(__filename + ': viewIndex should be more than zero');\n        }\n    }\n\n    function fill ( error, data, maxCount ) {\n        var index = 0,\n            before = self.viewIndex - self.startIndex,\n            size = self.sizeY - (self.emptyLine ? 1 : 0),\n            lines = Math.ceil(data.length / self.sizeX),\n            item, row,\n            indexX, indexY;\n\n        self.data = [];\n        if ( error ) {\n            if ( self.events['data:error'] ) {\n                self.emit('data:error', error);\n            }\n            self.$title.classList.add('hidden');\n            self.$body.classList.add('hidden');\n            self.$noData.classList.remove('hidden');\n\n            return;\n        }\n\n        data = normalize(data);\n        self.data = data;\n        self.maxCount = maxCount;\n        self.lastViewindex = Math.ceil(maxCount / self.sizeX) - self.sizeY + ( self.emptyLine ? 1 : 0 );\n\n        for ( indexY = 0; indexY < lines; indexY++ ) {\n            row = self.createLine(indexY);\n            self.$body.appendChild(row);\n            if ( indexY < before ) {\n                self.bufferBefore.push(row);\n                row.classList.add('hidden');\n            } else if ( indexY < size ) {\n                self.mainList.push(row);\n            } else {\n                self.bufferAfter.push(row);\n                row.classList.add('hidden');\n            }\n            for ( indexX = 0; indexX < self.sizeX; indexX++ ) {\n                if ( index < data.length ) {\n                    item = self.createItem(self.startIndex + index);\n                    row.appendChild(item);\n                    self.renderItem(item, data[index]);\n                }\n                index++;\n            }\n        }\n\n        if ( data.length ) {\n            self.focusItem(self.focusX, self.focusY);\n            self.$noData.classList.add('hidden');\n            self.$title.classList.remove('hidden');\n            self.$body.classList.remove('hidden');\n        } else {\n            self.$title.classList.add('hidden');\n            self.$body.classList.add('hidden');\n            self.$noData.classList.remove('hidden');\n        }\n        if ( self.events['data:ready'] ) {\n            /**\n             * Provider get new data and reinit grid.\n             *\n             * @event module:stb/ui/grid~MainPanel#data:ready\n             */\n            self.emit('data:ready');\n        }\n    }\n\n    if ( this.viewIndex === viewIndex ) {\n        return true;\n    }\n\n    while ( this.$body.firstChild ) {\n        this.$body.removeChild(this.$body.firstChild);\n    }\n\n    this.viewIndex = viewIndex || 0;\n\n    this.startIndex = this.viewIndex - this.bufferSize;\n    if ( this.startIndex < 0 ) {\n        count = Math.abs(this.startIndex);\n        this.startIndex = 0;\n    } else {\n        count = this.bufferSize;\n    }\n\n    this.bufferBefore = [];\n    this.mainList = [];\n    this.bufferAfter = [];\n\n    this.$node.classList.remove('emptyAfter');\n    this.$node.classList.remove('noEmptyBefore');\n\n    count = this.size + (this.sizeX * (count + this.bufferSize));\n\n    this.config.offset = this.startIndex * this.sizeX;\n    this.config.limit = count;\n    this.getter(fill, this.config);\n\n    return false;\n};\n\n\n/**\n * Default translate function.\n *\n * @param {Array} data - data to translate\n *\n * @return {Array} data to use as grid data\n */\nGrid.prototype.defaultTranslate = function ( data ) {\n    var result = [],\n        idxY, idxX, arr;\n\n    for ( idxY = 0; idxY < this.sizeY; idxY++ ) {\n        arr = [];\n        for ( idxX = 0; idxX < this.sizeX; idxX++ ) {\n            arr[idxX] = data[(idxY * this.sizeX) + idxX];\n        }\n        result[idxY] = arr;\n    }\n\n    return result;\n};\n\n\n/**\n * Method to translate given array to array adapted to use as grid data.\n * Can be redefined to provide custom translate.\n *\n * @type {function}\n */\nGrid.prototype.translate = Grid.prototype.defaultTranslate;\n\n\n/**\n * Move focus to the given direction.\n *\n * @param {number} direction - arrow key code\n *\n * @fires module:stb/ui/grid~MainPanel#cycle\n * @fires module:stb/ui/grid~MainPanel#overflow\n * @fires module:stb/ui/grid~MainPanel#data:get\n * @fires module:stb/ui/grid~MainPanel#data:ready\n * @fires module:stb/ui/grid~MainPanel#data:error\n *\n * @return {boolean} done move correctly\n */\nGrid.prototype.move = function ( direction ) {\n    var $item, lastIndex,\n        state = false,\n        focusX   = this.focusX,\n        focusY   = this.focusY;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) { throw new Error(__filename + ': wrong arguments number'); }\n        if ( +direction !== direction ) { throw new Error(__filename + ': direction must be a number'); }\n    }\n\n    if ( this.loadData ) {\n        return false;\n    }\n    // shift till full stop\n    // arrow keys\n    switch ( direction ) {\n        case keys.up:\n            if ( this.viewIndex > 0 ) {\n                if ( this.bufferBefore.length ) {\n                    this.viewIndex--;\n                    lastIndex = this.bufferBefore[0].index;\n                    lastIndex--;\n\n                    if ( this.emptyLine ) {\n                        this.$node.classList.remove('emptyAfter');\n                    }\n                    $item = this.bufferBefore.pop();\n                    $item.classList.remove('hidden');\n                    this.mainList.unshift($item);\n\n                    if ( this.mainList.length > this.sizeY ) {\n                        $item = this.mainList.pop();\n                        this.bufferAfter.unshift($item);\n                        $item.classList.add('hidden');\n                    }\n\n                    if ( this.bufferAfter.length > this.bufferSize ) {\n                        $item = this.bufferAfter.pop();\n                        this.$body.removeChild($item);\n                    }\n\n                    if ( lastIndex >= 0 ) {\n                        $item = this.createLine(lastIndex);\n                        $item.classList.add('hidden');\n                        this.$body.insertBefore($item, this.$body.firstChild);\n                        this.bufferBefore.unshift($item);\n                        this.fillRow($item);\n                    }\n                    this.focusItem(focusX, focusY);\n                    state = true;\n                } else {\n                    if ( this.emptyLine ) {\n                        if ( this.mainList.length >= this.sizeY  ) {\n                            $item = this.mainList.pop();\n                            this.bufferAfter.unshift($item);\n                            $item.classList.add('hidden');\n                        }\n                        this.$node.classList.remove('noEmptyBefore');\n                    }\n                    if ( focusY > 0 ) {\n                        focusY--;\n                        this.focusItem(focusX, focusY);\n                        state = true;\n                    }\n                }\n            } else if ( focusY > 0 ) {\n                if ( this.emptyLine ) {\n                    this.$node.classList.remove('noEmptyBefore');\n                    if ( this.mainList.length >= this.sizeY  ) {\n                        $item = this.mainList.pop();\n                        this.bufferAfter.unshift($item);\n                        $item.classList.add('hidden');\n                    }\n                }\n                focusY--;\n                this.focusItem(focusX, focusY);\n                state = true;\n            } else {\n                if ( this.cycleY ) {\n                    this.move(keys.end);\n                } else {\n                    state = false;\n                }\n\n                if ( this.events['overflow'] ) {\n                    // notify listeners\n                    this.emit('overflow', {direction: direction, cycle: this.cycleY});\n                }\n            }\n            break;\n        case keys.down:\n            if ( this.viewIndex < this.lastViewindex - 1 ) {\n                this.$node.classList.add('noEmptyBefore');\n\n                if ( this.bufferAfter.length ) {\n                    lastIndex = this.bufferAfter[this.bufferAfter.length - 1].index;\n                    lastIndex++;\n                    // if ( this.bufferAfter[0].children.length === 0 ) {\n                    //\n                    //     return false;\n                    // }\n                    $item = this.bufferAfter.shift();\n                    this.mainList.push($item);\n                    $item.classList.remove('hidden');\n                }\n\n                if ( this.mainList.length > this.sizeY ) {\n                    this.viewIndex++;\n                    $item = this.mainList.shift();\n                    $item.classList.add('hidden');\n                    this.bufferBefore.push($item);\n                }\n\n                if ( this.bufferBefore.length > this.bufferSize ) {\n                    $item = this.bufferBefore.shift();\n                    this.$body.removeChild($item);\n                }\n\n                if ( lastIndex < this.lastViewindex + this.sizeY - 1 ) {\n                    $item = this.createLine(lastIndex);\n                    $item.classList.add('hidden');\n                    this.$body.appendChild($item);\n                    this.fillRow($item);\n                    this.bufferAfter.push($item);\n                } else if ( this.emptyLine ) {\n                    this.$node.classList.add('emptyAfter');\n                }\n                if ( focusY < this.mainList.length - 2 ) {\n                    focusY++;\n                }\n                state = true;\n                this.focusItem(focusX, focusY);\n            } else if ( focusY < this.mainList.length - 1 ) {\n                if ( this.mainList.length >= this.sizeY ) {\n                    this.viewIndex++;\n                    $item = this.mainList.shift();\n                    $item.classList.add('hidden');\n                    this.bufferBefore.push($item);\n\n                    if ( this.bufferBefore.length > this.bufferSize ) {\n                        $item = this.bufferBefore.shift();\n                        this.$body.removeChild($item);\n                    }\n                } else {\n                    if ( this.bufferAfter.length ) {\n                        $item = this.bufferAfter.shift();\n                        this.mainList.push($item);\n                        $item.classList.remove('hidden');\n                    }\n                    focusY++;\n                    this.$node.classList.add('noEmptyBefore');\n                }\n                state = true;\n                this.focusItem(focusX, focusY);\n            } else {\n                if ( this.cycleY ) {\n                    this.move(keys.home);\n                } else {\n                    state = false;\n                }\n\n                if ( this.events['overflow'] ) {\n                    // notify listeners\n                    this.emit('overflow', {direction: direction, cycle: this.cycleY});\n                }\n            }\n            break;\n\n        case keys.right:\n            if ( focusX < this.$focusLine.children.length - 1 ) {\n                // can go one step right\n                focusX++;\n                this.focusItem(focusX, focusY);\n                state = true;\n            } else if ( this.cycleX ) {\n                // jump to the first column\n                focusX = 0;\n                this.focusItem(focusX, focusY);\n                state = true;\n                if ( this.events['overflow'] ) {\n                    this.emit('overflow', {direction: direction, cycle: this.cycleX});\n                }\n            } else {\n                this.focusX = 0;\n                state = this.move(keys.down);\n                if ( !state ) {\n                    this.focusX = focusX;\n                }\n            }\n            break;\n        case keys.left:\n            if ( focusX > 0 ) {\n                // can go one step left\n                focusX--;\n                this.focusItem(focusX, focusY);\n                state = true;\n            } else if ( this.cycleX ) {\n                focusX = this.$focusLine.children.length - 1;\n                // jump to the last column\n                this.focusItem(focusX, focusY);\n                state = true;\n                if ( this.events['overflow'] ) {\n                    this.emit('overflow', {direction: direction, cycle: this.cycleX});\n                }\n            } else {\n                this.focusX = this.sizeX - 1;\n                state = this.move(keys.up);\n                if ( !state ) {\n                    this.focusX = focusX;\n                }\n            }\n            break;\n    }\n\n    return state;\n};\n\n\n/**\n * Highlight the given DOM element as focused.\n * Remove focus from the previously focused item.\n *\n * @param {number} posX - the item horizontal position\n * @param {number} posY - the item vertical position\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/grid~MainPanel#focus:item\n * @fires module:stb/ui/grid~MainPanel#blur:item\n */\nGrid.prototype.focusItem = function ( posX, posY ) {\n    var $prev = this.$focusItem,\n        $prevLine = this.$focusLine,\n        $item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n    }\n\n    if ( this.mainList[posY].children.length === 0 ) {\n\n        return false;\n    }\n    this.$focusLine = this.mainList[posY];\n\n    // different element\n    if ( this.$focusLine && this.$focusLine !== $prevLine ) {\n        // style\n        if ( $prevLine ) {\n            $prevLine.classList.remove('focus');\n        }\n\n        this.$focusLine.classList.add('focus');\n        this.focusY = posY;\n\n        if ( this.$focusLine.children.lenght <= posX ) {\n            posX = this.$focusLine.children.lenght - 1;\n        }\n    }\n    if ( this.$focusLine.children.length <= posX ) {\n        posX = this.$focusLine.children.length - 1;\n    }\n    $item = this.$focusLine.children[posX];\n\n    if ( $item && $prev !== $item ) {\n        if ( DEVELOP ) {\n            if ( !($item instanceof HTMLElement) ) { throw new Error(__filename + ': wrong $item type'); }\n        }\n\n        // some item is focused already\n        if ( $prev !== null ) {\n            if ( DEVELOP ) {\n                if ( !($prev instanceof HTMLElement) ) { throw new Error(__filename + ': wrong $prev type'); }\n            }\n\n            // style\n            $prev.classList.remove('focus');\n\n            // there are some listeners\n            if ( this.events['blur:item'] ) {\n                this.emit('blur:item', {$item: $prev});\n            }\n        }\n\n        // draft coordinates\n        this.focusX = posX;\n\n        // reassign\n        this.$focusItem = $item;\n\n        // correct CSS\n        $item.classList.add('focus');\n\n        // there are some listeners\n        if ( this.inFocus && this.events['focus:item'] ) {\n            this.emit('focus:item', {$prev: $prev, $curr: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Set item state and appearance as marked.\n *\n * @param {Element} $item - element to focus\n * @param {boolean} state - marked state (true - marked, false - not marked)\n */\nGrid.prototype.markItem = function ( $item, state ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        if ( !($item instanceof HTMLElement) ) { throw new Error(__filename + ': wrong $item type'); }\n        if ( $item.parentNode.parentNode.parentNode.parentNode !== this.$body ) { throw new Error(__filename + ': wrong $item parent element'); }\n        if ( Boolean(state) !== state ) { throw new Error(__filename + ': state must be boolean'); }\n    }\n\n    // correct CSS\n    if ( state ) {\n        $item.classList.add('mark');\n    } else {\n        $item.classList.remove('mark');\n    }\n\n    // apply flag\n    $item.data.mark = state;\n};\n\n\n// public\nmodule.exports = Grid;\n","'use strict';\n\n/* eslint camelcase: 0 */\n/* eslint max-lines-per-function: 0 */\n\nvar Page = require('stb-component-page'),\n    dom  = require('spa-dom'),\n    keys = require('stb-keys'),\n    app  = require('mag-app'),\n\n    LayoutList   = require('mag-component-layout-list'),\n    ModalMessage = require('mag-component-modal'),\n    RadioList    = require('mag-component-radio-list'),\n    Layout       = require('mag-component-layout'),\n\n    CacheList    = require('../components/item.list'),\n\n    utils = {\n        prepareScreenshots: require('../utils/prepare.screenshots'),\n        prepareSeasons: require('../utils/prepare.seasons'),\n        sortQuality: require('../utils/sort.quality'),\n        selectFile: require('../utils/select.file'),\n        prepareSeries: require('../utils/prepare.series'),\n        prepareFiles: require('../utils/prepare.files'),\n        toggleFavorite: require('../utils/toggle.favorite')\n    },\n\n    page          = new Page({$node: document.getElementById('pageInfo')}),\n    configFiles   = {},\n    configRequest = {},\n    infoData      = null,\n    tag           = dom.tag,\n\n    infoBlock, buttonList, buttonMore,\n\n    buttons, buttonsData, buttonsDataWatch,\n    buttonsSerialsWatch,\n\n    prevPage, fillFileList,\n    screenList, seasonsList, seasonsButton,\n    seriesList, seasonData, scrollPosition,\n    selectFileModal, fileList, season,\n    episode, episodes;\n\n/**\n * Save new video watched states.\n *\n * @param {Object} video - intent, context and movie data\n * @param {boolean} end - end of file\n */\nfunction saveVideo ( video, end ) {\n    var intent = video.intent,\n        context = video.context,\n        item, position, duration,\n        progress, config;\n\n    // check save function\n    function add ( error, data ) {\n        var statusText, disabled;\n\n        if ( !error && data && data.status ) {\n            item.file['watched_status'] = config['watched_status'];\n\n            if ( item.season ) {\n                item.movie['last_watched_season_id'] = item.season.id;\n                item.season['watched_status'] = data['season_watched_status'];\n            }\n\n            if ( item.episode ) {\n                switch ( config['watched_status'] ) {\n                    case 'watched':\n                        statusText = gettext('Watched');\n                        disabled = true;\n                        break;\n                    case 'not_watched':\n                        statusText = '';\n                        disabled = false;\n                        break;\n                    case 'not_ended':\n                        statusText = gettext('Not finished');\n                        disabled = false;\n                        break;\n                }\n                item.episode['watched_status'] = config['watched_status'];\n                item.movie['last_watched_episode_id'] = item.episode.id;\n\n                if ( item.episode.status ) {\n                    item.episode.status.$focus.innerText = statusText;\n                    item.episode.status.$blur.innerText = statusText;\n                    if ( disabled ) {\n                        item.episode.status.$focus.classList.add('disabled');\n                        item.episode.status.$blur.classList.add('disabled');\n                    } else {\n                        item.episode.status.$focus.classList.remove('disabled');\n                        item.episode.status.$blur.classList.remove('disabled');\n                    }\n                }\n            }\n\n            app.pages.main.emit('change:watched', infoData);\n\n            if ( infoData['watched_status'] === 'not_ended' ) {\n                if ( infoData['is_tv_series'] ) {\n                    buttonList.setData({data: buttonsSerialsWatch, focusIndex: 0});\n                } else {\n                    buttonList.setData({data: buttonsDataWatch, focusIndex: 0});\n                }\n            } else {\n                buttonList.setData({data: buttonsData, focusIndex: 0});\n            }\n        }\n\n    }\n\n    if ( intent.data && context ) {\n        position = context.metadata.position;\n        duration = context.metadata.duration;\n        // position = intent.playback.position;\n        // duration = intent.playback.duration;\n        item = intent.data;\n        if ( position > 10 ) {\n            if ( position && duration ) {\n                progress = position / duration * 100;\n                if ( progress > 95 || end ) {\n                    config = {\n                        watched_status: 'watched',\n                        watched_time: position - 10\n                    };\n                } else if ( progress > 5 ) {\n                    config = {\n                        watched_status: 'not_ended',\n                        watched_time: position - 10\n                    };\n                }\n                config.progress = progress;\n                item.file['watched_status'] = config['watched_status'];\n                item.file['watched_time'] = config['watched_time'];\n                item.movie['watched_time'] = config['watched_time'];\n                item.movie['last_watched_file_id'] = item.file.id;\n                item.movie.changeWatchedFile(item.file.id, config, add);\n            }\n        }\n    }\n}\n\n/**\n * Prepare object to play.\n *\n * @param {Object} data - data to play\n * @param {number} position - start position\n * @param {Object} context - player context\n */\nfunction prepareToPlay ( data, position, context ) {\n    var item = data,\n        name = infoData.name,\n        // episode = null,\n        intent = null,\n        next = null,\n        prev = null;\n\n    // if ( infoData.is_tv_series ) {\n    //     episode = seriesList.$focusItem.data;\n    // }\n\n    function selectNextFile ( file, languages ) {\n        var files = utils.sortQuality(file.files, infoData);\n\n        files = utils.prepareFiles(files.video);\n        file = utils.selectFile(files, languages, intent.data.file);\n\n        if ( file ) {\n            prepareToPlay(file.value, 0, context);\n        } else {\n            fillFileList(seriesList.$focusItem.data.value, function () {\n                seriesList.blur();\n                selectFileModal.prevFocus = seriesList;\n                setTimeout(function () {\n                    selectFileModal.show();\n                }, app.config.delay.modalShow);\n            });\n\n            context = null;\n            intent.close();\n        }\n    }\n\n    /**\n     * Play object.\n     *\n     * @param {boolean} error - error\n     * @param {string} uri - uri to play\n     */\n    function play ( error, uri ) {\n        var index = 0;\n\n        if ( error ) {\n\n            return;\n        }\n\n        if ( infoData.is_tv_series ) {\n            name += ' ' + season.custName + ' ' + episode.custName;\n            index = episodes.indexOf(episode);\n\n            if ( index + 1 < episodes.length ) {\n                next = function () {\n                    var lang = context.metadata.audioLang;\n\n                    saveVideo({intent: intent, context: context});\n                    index = episodes.indexOf(episode);\n\n                    if ( index === -1 ) {\n                        context = null;\n                        intent.close();\n\n                        return;\n                    }\n\n                    if ( seriesList.visible ) {\n                        seriesList.move(keys.down);\n                        episode = seriesList.$focusItem.value;\n                    } else {\n                        episode = episodes[++index];\n                    }\n                    selectNextFile(episode, lang);\n                };\n            }\n\n            if ( index > 0 ) {\n                prev = function () {\n                    var lang = context.metadata.audioLang;\n\n                    saveVideo({intent: intent, context: context});\n                    index = episodes.indexOf(episode);\n\n                    if ( index === -1 ) {\n                        context = null;\n                        intent.close();\n\n                        return;\n                    }\n\n                    if ( seriesList.visible ) {\n                        seriesList.move(keys.up);\n                        episode = seriesList.$focusItem.value;\n                    } else {\n                        episode = episodes[--index];\n                    }\n                    selectNextFile(episode, lang);\n                };\n            }\n        }\n\n        function startPlay () {\n            intent = core.intent({\n                action: 'play',\n                mime: 'content/video',\n                data: {\n                    title: name,\n                    uri: uri,\n                    movie: infoData,\n                    file: item,\n                    season: season,\n                    episode: episode,\n                    position: position,\n                    subtitles: configFiles.subtitles,\n                    mediaId: item.id\n                },\n                events: {\n                    end: function () {\n                        if ( next ) {\n                            next();\n\n                            return;\n                        }\n                        saveVideo({intent: intent, context: context}, true);\n                        context = null;\n                        intent.close();\n                    },\n                    error: function () {\n                        saveVideo({intent: intent, context: context});\n                        context = null;\n                        intent.close();\n                    },\n                    stop: function () {\n                        saveVideo({intent: intent, context: context});\n                        context = null;\n                        intent.close();\n                    },\n                    hide: function () {\n                        saveVideo({intent: intent, context: context});\n                        context = null;\n                        intent.close();\n                    },\n                    next: next,\n                    prev: prev,\n                    close: function () {\n                        if ( context ) {\n                            saveVideo({intent: intent, context: context});\n                            context = null;\n                        }\n                    }\n                },\n                context: context\n            }, function ( error, cont ) {\n                debug.fail('Play error', error);\n                context = cont;\n            });\n        }\n\n        startPlay();\n    }\n\n    if ( item.url ) {\n        play(false, item.url);\n    } else {\n        infoData.getUrl(item.id, play);\n    }\n}\n\n/**\n * Get, prepare and set files data.\n *\n * @param {Object} config - to request\n * @param {Function} callback - result handler\n */\nfillFileList = function ( config, callback ) {\n    var list = [];\n\n    if ( infoData.is_tv_series ) {\n        configRequest.episodeId = config.id;\n        episode = config;\n        if ( config.files && config.files.length ) {\n            configFiles = utils.sortQuality(config.files, infoData);\n            list = utils.prepareFiles(configFiles.video);\n            if ( list.length > 0 ) {\n                if ( list.length > 1 ) {\n                    fileList.setData({focusIndex: 0, data: list});\n                } else {\n                    prepareToPlay(list[0].value);\n\n                    return;\n                }\n            }\n\n            callback();\n        } else {\n            infoData.getEpisode(configRequest, function ( error, data ) {\n                if ( error ) {\n                    configFiles = {video: [], subtitles: []};\n                } else {\n                    configFiles = utils.sortQuality(data.files, infoData);\n                    list = utils.prepareFiles(configFiles.video);\n                }\n\n                if ( list.length > 0 ) {\n                    if ( list.length > 1 ) {\n                        fileList.setData({focusIndex: 0, data: list});\n                    } else {\n                        prepareToPlay(list[0].value);\n\n                        return;\n                    }\n                }\n\n                callback();\n            });\n        }\n    } else {\n        episode = null;\n        season = null;\n        configFiles = utils.sortQuality(infoData.files, infoData);\n        list = utils.prepareFiles(configFiles.video);\n        if ( list.length > 0 ) {\n            if ( list.length > 1 ) {\n                fileList.setData({focusIndex: 0, data: list});\n            } else {\n                prepareToPlay(list[0].value);\n\n                return;\n            }\n        }\n\n        callback();\n    }\n};\n\n/**\n * Prepare and set season data.\n *\n * @param {Object} data - history\n */\nfunction fillSeason ( data ) {\n    data = data || {};\n    seriesList.title.innerText = gettext('Seasons');\n    if ( seasonData.length ) {\n        seriesList.setData({focusIndex: data.position || 0, data: utils.prepareSeasons(seasonData, true)});\n    } else {\n        seriesList.setData({focusIndex: 0, data: []});\n    }\n}\n\n/**\n * Get, prepare and set series data.\n *\n * @param {Object} config - to request\n * @param {Function} callback - result handler\n */\nfunction fillSeries ( config, callback ) {\n    season = config;\n    configRequest.seasonId = config.id;\n    seriesList.title.innerText = config.custName;\n\n    infoData.getSeries(config.id, function ( error, data ) {\n        var list = error ? [] : utils.prepareSeries(data);\n\n        episodes = data;\n        seriesList.setData({focusIndex: 0, data: list});\n        callback();\n    });\n}\n\n/**\n * Change favorite state.\n */\nfunction toggleFavorite () {\n    if ( infoData.favorite ) {\n        buttonList.$node.classList.remove('inFavorite');\n    } else {\n        buttonList.$node.classList.add('inFavorite');\n    }\n    utils.toggleFavorite(infoData);\n}\n\n\nfunction prepareFiles () {\n    if ( infoData.is_tv_series ) {\n        if ( seasonData.length ) {\n            season = seasonData[0];\n            if ( !season.custName ) {\n                season.custName = season.name ? season.name +\n                    ( season.original_name ? ' ( ' + season.original_name + ' )' : '' ) : gettext('Season') + ' ' + season.number;\n            }\n            infoData.getSeries(season.id, function ( error, data ) {\n                if ( !error && data.length ) {\n                    utils.prepareSeries(data);\n                    episodes = data;\n                    episode = data[0];\n\n                    fillFileList(episode, function () {\n                        buttonList.blur();\n                        selectFileModal.prevFocus = buttonList;\n                        setTimeout(function () {\n                            selectFileModal.show();\n                        }, app.config.delay.modalShow);\n\n                    });\n\n                }\n            });\n        }\n    } else {\n        fillFileList(null, function () {\n            buttonList.blur();\n            selectFileModal.prevFocus = buttonList;\n            setTimeout(function () {\n                selectFileModal.show();\n            }, app.config.delay.modalShow);\n        });\n    }\n}\n\n\nfunction startLastWatched () {\n    var indexes = {},\n        file, index;\n\n    function checkFile ( data ) {\n        var list;\n\n        configFiles = utils.sortQuality(data, infoData);\n        list = configFiles.video;\n        if ( !list.length ) {\n            return;\n        }\n\n        if ( infoData.last_watched_file_id ) {\n            for ( index = 0; index < list.length; index++ ) {\n                if ( list[index].id === infoData.last_watched_file_id ) {\n                    file = list[index];\n                    break;\n                }\n            }\n        } else {\n            file = list[0];\n        }\n        prepareToPlay(file, infoData.watched_time);\n    }\n\n    if ( infoData.is_tv_series ) {\n        if ( infoData.last_watched_season_id ) {\n            for ( index = 0; index < seasonData.length; index++ ) {\n                if ( seasonData[index].id === infoData.last_watched_season_id ) {\n                    season = seasonData[index];\n                    if ( !season.custName ) {\n                        season.custName = season.name ? season.name +\n                            (season.original_name ? ' ( ' + season.original_name + ' )' : '') : gettext('Season') + ' ' + season.number;\n                    }\n                    indexes.season = index;\n                    break;\n                }\n            }\n\n            infoData.getSeries(season.id, function ( error, data ) {\n                if ( !error && data.length ) {\n                    utils.prepareSeries(data);\n                    episodes = data;\n                    if ( infoData.last_watched_episode_id ) {\n                        for ( index = 0; index < data.length; index++ ) {\n                            if ( data[index].id === infoData.last_watched_episode_id ) {\n                                episode = data[index];\n                                episode.custName = episode.name ? episode.name +\n                                    (episode['original_name']\n                                        ? ' ( ' + episode['original_name'] + ' )'\n                                        : '') : gettext('Series') + ' ' + episode.number;\n                                break;\n                            }\n                        }\n                    }\n\n                    if ( episode.files && episode.files.length ) {\n                        checkFile(episode.files);\n                    } else {\n                        infoData.getEpisode({seasonId: season.id, episodeId: episode.id}, function ( error, episodeData ) {\n                            if ( !error ) {\n                                checkFile(episodeData.files);\n                            }\n                        });\n                    }\n\n                }\n            });\n        }\n    } else {\n        checkFile(infoData.files);\n    }\n}\n\nbuttons = {\n    continueWatching: {\n        icon: 'theme-icon theme-icon-play',\n        value: [gettext('Continue watching')],\n        click: startLastWatched\n    },\n    watchAgain: {\n        icon: 'theme-icon theme-icon-reset',\n        value: [gettext('Watch again')],\n        click: prepareFiles\n    },\n    favorite: {\n        icon: 'theme-icon theme-icon-favorite-active',\n        value: [gettext('Add to favorites'), gettext('Remove from favorites')],\n        click: toggleFavorite\n    },\n    play: {\n        icon: 'theme-icon theme-icon-play',\n        value: [gettext('Play')],\n        click: prepareFiles\n    }\n};\n\nbuttonsData = [buttons.play, buttons.favorite];\nbuttonsDataWatch = [buttons.continueWatching, buttons.watchAgain, buttons.favorite];\nbuttonsSerialsWatch = [buttons.continueWatching, buttons.favorite];\n\ninfoBlock = require('../utils/init.info')();\n\nbuttonList = new LayoutList({\n    cycle: false,\n    className: 'buttonList',\n    render: function ( $item, config ) {\n        var layout, focus, icon,\n            button;\n\n        while ( $item.firstChild ) {\n            $item.removeChild($item.firstChild);\n        }\n        button = tag('div', {className: 'button'});\n        icon = tag('div', {className: config.icon});\n        button.appendChild(icon);\n\n        focus = tag('div', {className: 'buttonFocus'});\n        icon = tag('div', {className: config.icon});\n        focus.appendChild(icon);\n\n        while ( $item.firstChild ) {\n            $item.removeChild($item.firstChild);\n        }\n\n        if ( config.value.length === 1 ) {\n            layout = new Layout({\n                focusable: false,\n                data: [\n                    button,\n                    {className: 'buttonTitle', value: config.value[0]},\n                    focus\n                ]\n            });\n        } else {\n            layout = new Layout({\n                focusable: false,\n                data: [\n                    button,\n                    {className: 'buttonFirstTitle', value: config.value[0]},\n                    {className: 'buttonSecondTitle', value: config.value[1]},\n                    focus\n                ]\n            });\n        }\n\n        $item.appendChild(layout.$node);\n        $item.layout = layout;\n        layout.parent = this;\n        layout.$parentItem = $item;\n\n        // focus layoutList if click on layout\n        layout.addListener('click', function () {\n            // add inner property to set that event comes from inner component\n            layout.parent.emit('click:item', {$item: $item, inner: true});\n        });\n\n        if ( config.click ) {\n            this.handlers[$item.index] = config.click;\n        }\n        // item is rendered\n        $item.ready = true;\n\n        $item.value = config.value || {};\n    },\n    data: [],\n    size: app.metrics.buttonList.size,\n    focusIndex: 0,\n    type: LayoutList.prototype.TYPE_HORIZONTAL,\n    events: {\n        keydown: function ( event ) {\n            switch ( event.code ) {\n                case keys.up:\n                    event.stop = true;\n                    if ( buttonMore.visible ) {\n                        buttonMore.focus();\n                    }\n                    break;\n                case keys.down:\n                    event.stop = true;\n                    if ( screenList.visible ) {\n                        screenList.focus();\n                        page.$node.scrollTop = app.metrics.infoSroll.screen;\n                    } else if ( seasonsButton.visible ) {\n                        seasonsButton.focus();\n                        page.$node.scrollTop = app.metrics.infoSroll.season - app.metrics.infoSroll.screen;\n                    } else if ( seasonsList.visible ) {\n                        seasonsList.focus();\n                        page.$node.scrollTop = app.metrics.infoSroll.season - app.metrics.infoSroll.screen;\n                    }\n                    break;\n                case keys.right:\n                case keys.left:\n                    // cursor move only on arrow keys\n                    this.move(event.code);\n                    event.stop = true;\n                    break;\n                case keys.enter:\n                    // there are some listeners\n                    if ( this.events['click:item'] && this.$focusItem ) {\n                        // notify listeners\n                        this.emit('click:item', {$item: this.$focusItem, event: event});\n                    }\n                    event.stop = true;\n                    break;\n            }\n        }\n    }\n});\n\nbuttonMore = new Layout({\n    focusable: true,\n    data: [\n        tag(\n            'div',\n            {className: 'buttonMore'},\n\n            tag('div', {className: 'buttonLeft'}),\n            tag('div', {className: 'buttonRight'}, gettext('More'))\n        )\n\n    ],\n    className: 'buttonMoreContainer',\n    events: {\n        click: function () {\n            app.route(app.pages.more, infoData);\n        },\n        keydown: function ( event ) {\n            switch ( event.code ) {\n                case keys.up:\n                    event.stop = true;\n                    break;\n                case keys.down:\n                    event.stop = true;\n                    buttonList.focus();\n                    break;\n                case keys.right:\n                case keys.left:\n                    // cursor move only on arrow keys\n                    event.stop = true;\n                    break;\n                case keys.back:\n                    event.stop = true;\n                    app.route(prevPage);\n                    break;\n                case keys.enter:\n                    // there are some listeners\n                    if ( this.events['click'] ) {\n                        // notify listeners\n                        this.emit('click');\n                    }\n                    event.stop = true;\n                    break;\n            }\n        }\n    }\n});\n\npage.$node.appendChild(infoBlock.$body);\ninfoBlock.$panel.appendChild(buttonMore.$node);\ninfoBlock.$panel.appendChild(buttonList.$node);\n\nscreenList = new CacheList({\n    title: gettext('Screenshots'),\n    hasEmptyItems: true,\n    cycle: true,\n    size: app.metrics.screenList.size,\n    bufferSize: 5,\n    render: require('../renders/item.list'),\n    data: [],\n    events: {\n        keydown: function ( event ) {\n            // if ( this.inSlide ) {\n            //     switch ( event.code ) {\n            //         case keys.up:\n            //         case keys.down:\n            //             event.stop = true;\n            //             break;\n            //         case keys.right:\n            //         case keys.left:\n            //             // cursor move only on arrow keys\n            //             this.move(event.code);\n            //             event.stop = true;\n            //             break;\n            //         case keys.enter:\n            //         case keys.back:\n            //             page.$node.scrollTop = scrollPosition;\n            //             this.$slide.classList.add('hidden');\n            //             this.inSlide = false;\n            //             event.stop = true;\n            //             break;\n            //     }\n            // } else {\n            switch ( event.code ) {\n                case keys.up:\n                    event.stop = true;\n                    page.$node.scrollTop = 0;\n                    buttonList.focus();\n                    break;\n                case keys.down:\n                    event.stop = true;\n                    if ( seasonsButton.visible ) {\n                        seasonsButton.focus();\n                        page.$node.scrollTop = app.metrics.infoSroll.season;\n                    } else if ( seasonsList.visible ) {\n                        seasonsList.focus();\n                        page.$node.scrollTop = app.metrics.infoSroll.season;\n                    }\n                    break;\n                case keys.right:\n                case keys.left:\n                    // cursor move only on arrow keys\n                    this.move(event.code);\n                    event.stop = true;\n                    break;\n                case keys.enter:\n                    // there are some listeners\n                    if ( this.events['click:item'] && this.$focusItem ) {\n                        // notify listeners\n                        this.emit('click:item', {$item: this.$focusItem, event: event});\n                    }\n                    event.stop = true;\n                    break;\n            }\n            // }\n        },\n\n        // 'click:item': function () {\n        //     scrollPosition = page.$node.scrollTop;\n        //     page.$node.scrollTop = 0;\n        //     this.$slide.classList.remove('hidden');\n        //     this.inSlide = true;\n        // },\n\n        // 'focus:item': function ( event ) {\n        //     this.$slide.style.backgroundImage = 'url(' + event.$curr.value + ')';\n        // },\n\n        focus: function () {\n            if ( this.$focusItem ) {\n                this.emit('focus:item', {$curr: this.$focusItem});\n            }\n        }\n    }\n\n});\n// page.$node.appendChild(screenList.$slide = tag('div', {className: 'screenshotsSlide hidden'}));\npage.add(screenList);\n\n\nseasonsList = new LayoutList({\n    cycle: false,\n    className: 'seasonsList',\n    data: [],\n    size: app.metrics.seasonsList.size,\n    focusIndex: 0,\n    events: {\n        'click:item': function ( event ) {\n            fillSeries(event.$item.data.value, function () {\n                seriesList.prevFocus = seasonsList;\n                seriesList.show();\n                seriesList.focus();\n            });\n        },\n        overflow: function ( event ) {\n            if ( event.direction === keys.up ) {\n                if ( seasonsButton.visible ) {\n                    seasonsButton.focus();\n                } else if ( screenList.visible ) {\n                    screenList.focus();\n                    page.$node.scrollTop = app.metrics.infoSroll.screen;\n                } else {\n                    buttonList.focus();\n                    page.$node.scrollTop = 0;\n                }\n            }\n        }\n    }\n});\npage.add(seasonsList);\n\n\nseasonsButton = new Layout({\n    focusable: true,\n    data: [\n        tag(\n            'div',\n            {className: 'buttonMore'},\n\n            tag('div', {className: 'buttonLeft'}),\n            tag('div', {className: 'buttonRight'}, gettext('All seasons'))\n        )\n    ],\n    className: 'buttonMoreContainer',\n    events: {\n        click: function () {\n            seriesList.prevFocus = seasonsButton;\n            fillSeason();\n            seriesList.show();\n            seriesList.focus();\n        },\n        keydown: function ( event ) {\n            switch ( event.code ) {\n                case keys.up:\n                    event.stop = true;\n                    if ( screenList.visible ) {\n                        screenList.focus();\n                        page.$node.scrollTop = app.metrics.infoSroll.screen;\n                    } else {\n                        buttonList.focus();\n                        page.$node.scrollTop = 0;\n                    }\n                    break;\n                case keys.down:\n                    event.stop = true;\n                    seasonsList.focus();\n                    break;\n                case keys.right:\n                case keys.left:\n                    // cursor move only on arrow keys\n                    event.stop = true;\n                    break;\n                case keys.back:\n                    event.stop = true;\n                    app.route(prevPage);\n                    break;\n                case keys.enter:\n                    // there are some listeners\n                    if ( this.events['click'] ) {\n                        // notify listeners\n                        this.emit('click');\n                    }\n                    event.stop = true;\n                    break;\n            }\n        }\n    }\n});\nseasonsList.$node.insertBefore(seasonsButton.$node, seasonsList.$node.firstChild);\nseasonsList.$node.insertBefore(tag('div', {className: 'title'}, gettext('Seasons')), seasonsList.$node.firstChild);\n\n\nseriesList = new LayoutList({\n    cycle: false,\n    className: 'seriesList',\n    data: [],\n    size: app.metrics.seriesList.size,\n    focusIndex: 0,\n    render: require('../renders/series.list'),\n    events: {\n        'click:item': function ( event ) {\n            var data = event.$item.data.value;\n\n            switch ( data.type ) {\n                case app.config.types.season:\n                    this.history.push({data: data, position: event.$item.index});\n                    fillSeries(data, function () {\n                        seriesList.focus();\n                    });\n                    break;\n                case app.config.types.series:\n                    episode = data;\n                    fillFileList(data, function () {\n                        seriesList.blur();\n                        selectFileModal.prevFocus = seriesList;\n                        setTimeout(function () {\n                            selectFileModal.show();\n                        }, app.config.delay.modalShow);\n                    });\n                    break;\n            }\n        },\n\n        show: function () {\n            scrollPosition = page.$node.scrollTop;\n            page.$node.scrollTop = 0;\n            this.history = [];\n        },\n\n        hide: function () {\n            if ( this.prevFocus ) {\n                page.$node.scrollTop = scrollPosition;\n                this.prevFocus.focus();\n                this.prevFocus = null;\n            }\n        },\n\n        keydown: function ( event ) {\n            var data;\n\n            switch ( event.code ) {\n                case keys.back:\n                    if ( this.history.length ) {\n                        data = this.history.pop();\n                        fillSeason(data);\n                        this.focus();\n                    } else {\n                        this.hide();\n                    }\n                    event.stop = true;\n                    break;\n                case keys.up:\n                case keys.down:\n                case keys.right:\n                case keys.left:\n                    // cursor move only on arrow keys\n                    this.move(event.code);\n                    event.stop = true;\n                    break;\n                case keys.enter:\n                    // there are some listeners\n                    if ( this.events['click:item'] && this.$focusItem ) {\n                        // notify listeners\n                        this.emit('click:item', {$item: this.$focusItem, event: event});\n                    }\n                    event.stop = true;\n                    break;\n            }\n        }\n    }\n});\npage.add(seriesList);\nseriesList.prevFocus = null;\nseriesList.$node.insertBefore(seriesList.title = tag('div', {className: 'title'}, gettext('Seasons')), seriesList.$node.firstChild);\nseriesList.hide();\n\n\nselectFileModal = new ModalMessage({\n    visible: false,\n    title: gettext('Available video options'),\n    events: {\n        show: function () {\n            this.children[0].focus();\n        },\n        hide: function () {\n            if ( this.prevFocus ) {\n                this.prevFocus.focus();\n                this.prevFocus = null;\n            }\n        }\n    },\n    children: [\n        fileList = new RadioList({\n            focusIndex: 0,\n            size: app.metrics.modal.size,\n            cycle: true,\n            data: [],\n            events: {\n                'click:item': function ( event ) {\n                    prepareToPlay(event.$item.data.value);\n                    selectFileModal.hide();\n                },\n                keydown: function ( event ) {\n                    RadioList.prototype.defaultEvents.keydown.call(this, event);\n                    switch ( event.code ) {\n                        case keys.back:\n                            selectFileModal.hide();\n                            event.stop = true;\n                            break;\n                    }\n                }\n            }\n        })\n    ]\n});\nselectFileModal.prevFocus = null;\npage.add(selectFileModal);\n\n\napp.addListener('route', function ( data ) {\n    if ( data.to === page ) {\n        switch ( data.from ) {\n            case app.pages.more:\n                break;\n            default:\n                prevPage = data.from;\n                break;\n        }\n\n    }\n});\n\n\npage.addListener('show',\n    /**\n     * Fill pages layouts.\n     *\n     * @this page\n     *\n     * @param {Object} event - event data contain types\n     */\n    function ( event ) {\n        if ( !event || !event.data ) {\n            return;\n        }\n\n        switch ( event.data.type ) {\n            case 'start':\n                prepareFiles();\n\n                return;\n            case 'continue':\n                startLastWatched();\n\n                return;\n            case 'back':\n                buttonMore.focus();\n\n                return;\n        }\n\n        this.$node.scrollTop = 0;\n        infoData = event.data.info;\n        if ( DEVELOP ) {\n            window.infoData = infoData;\n        }\n\n        if ( infoData.poster ) {\n            infoBlock.$img.style.backgroundImage = infoData.poster;\n        } else {\n            infoBlock.$img.style.backgroundImage = '';\n        }\n\n        infoBlock.$title.innerText = infoData.name;\n        infoBlock.$country.innerText = (infoData.year_end ? infoData.year + ' - ' + infoData.year_end : infoData.year) + ', ' +\n            infoData.genre + ', ' + infoData.duration + ' ' + gettext('minutes');\n\n\n        if ( infoData.rating_kinopoisk ) {\n            infoBlock.$ratingKino.innerText = infoData.rating_kinopoisk;\n            infoBlock.$ratingKino.style.display = '';\n        } else {\n            infoBlock.$ratingKino.style.display = 'none';\n        }\n        if ( infoData.rating_imdb ) {\n            infoBlock.$ratingImdb.innerText = infoData.rating_imdb;\n            infoBlock.$ratingImdb.style.display = '';\n        } else {\n            infoBlock.$ratingImdb.style.display = 'none';\n        }\n        if ( infoData.age ) {\n            infoBlock.$censor.innerText = infoData.age;\n            infoBlock.$censor.style.display = '';\n        } else {\n            infoBlock.$censor.style.display = 'none';\n        }\n\n        infoBlock.$director.innerText = infoData.director;\n        infoBlock.$actors.innerText = infoData.actors;\n\n        infoBlock.$description.innerText = infoData.description;\n        if ( infoData.description.length ) {\n            buttonMore.show();\n        } else {\n            buttonMore.hide();\n        }\n        if ( infoData.watched_status === 'not_ended' ) {\n            if ( infoData.is_tv_series ) {\n                buttonList.setData({data: buttonsSerialsWatch, focusIndex: 0});\n            } else {\n                buttonList.setData({data: buttonsDataWatch, focusIndex: 0});\n            }\n        } else {\n            buttonList.setData({data: buttonsData, focusIndex: 0});\n        }\n\n        if ( infoData.favorite ) {\n            buttonList.$node.classList.add('inFavorite');\n        } else {\n            buttonList.$node.classList.remove('inFavorite');\n        }\n\n        buttonList.focus();\n\n        if ( infoData.screenshots.length > 0 ) {\n            screenList.setData({data: utils.prepareScreenshots(infoData.screenshots), focusIndex: 0});\n            screenList.show();\n        } else {\n            screenList.hide();\n        }\n\n        if ( infoData.is_tv_series ) {\n            infoData.getSeasons(function ( error, seasons ) {\n                if ( !error && seasons.length ) {\n                    seasonData = seasons;\n                    seasonsList.setData({focusIndex: 0, data: utils.prepareSeasons(seasons)});\n                    seasonsList.show();\n                    if ( seasons.length > seasonsList.size ) {\n                        seasonsButton.show();\n                    } else {\n                        seasonsButton.hide();\n                    }\n                } else {\n                    seasonsList.hide();\n                }\n            });\n        } else {\n            seasonsList.hide();\n            seasonsButton.hide();\n        }\n    });\n\n\nif ( DEVELOP ) {\n    window.infoBlock = infoBlock;\n    window.screenList = screenList;\n    window.seasonsList = seasonsList;\n    window.seriesList = seriesList;\n    window.selectFileModal = selectFileModal;\n    window.buttonList = buttonList;\n}\n\n\npage.addListener('keydown', function ( event ) {\n    switch ( event.code ) {\n        case keys.back:\n            app.route(prevPage);\n            break;\n        case keys.f3:\n            toggleFavorite();\n            break;\n    }\n});\n\n\napp.addListener('change:favorite', function ( data ) {\n    var video = data.video;\n\n    if ( video.favorite ) {\n        buttonList.$node.classList.add('inFavorite');\n    } else {\n        buttonList.$node.classList.remove('inFavorite');\n    }\n});\n\n\nmodule.exports = page;\n","'use strict';\n\nvar dom = require('spa-dom'),\n    tag = dom.tag;\n\n\n/**\n * Change server data to list data.\n *\n * @param {Array} data - data for prepare\n *\n * @return {Array} ready data for LayoutList\n */\nmodule.exports = function ( data ) {\n    var result = [],\n        $backgroundFocus, $backgroundBlur,\n        $focusWrapper, $blurWrapper;\n\n    data.forEach(function ( item ) {\n        $backgroundFocus = tag('div', {className: 'screenshot'});\n        $backgroundBlur = tag('div', {className: 'screenshot'});\n        $focusWrapper = tag('div', {className: 'focusWrapper'}, $backgroundFocus);\n        $blurWrapper = tag('div', {className: 'blurWrapper'}, $backgroundBlur);\n        $backgroundFocus.style.backgroundImage = 'url(' + item + ')';\n        $backgroundBlur.style.backgroundImage = 'url(' + item + ')';\n\n        result.push({\n            items: [\n                $focusWrapper,\n                $blurWrapper\n            ],\n            value: item\n        });\n    });\n\n    return result;\n};\n","'use strict';\n\nvar app = require('mag-app'),\n    dom = require('spa-dom'),\n    tag = dom.tag;\n\n\n/**\n * Prepare data for series list.\n *\n * @param {Object} data - data to prepare\n * @param {boolean} all - all series to render\n *\n * @return {Array} prepared data\n */\nmodule.exports = function ( data, all ) {\n    var length = 0,\n        result = [],\n        index, $focusWrapper, $blurWrapper,\n        $title, $container;\n\n    if ( data.length <= app.metrics.seasonsList.size || all ) {\n        length = data.length;\n    } else {\n        length = app.metrics.seasonsList.size;\n    }\n\n    if ( data && data.length ) {\n        for ( index = 0; index < length; index++ ) {\n            data[index].type = app.config.types.season;\n            data[index].custName = gettext('Season') + ' ' + data[index].number\n                + (data[index].name\n                    ? ' - ' + data[index].name\n                    : data[index].original_name ? ' - ' +  data[index].original_name : '');\n\n            $title = tag('div', {className: 'itemTitle'}, data[index].custName);\n            $container = tag('div', {className: 'container'}, $title);\n            $focusWrapper = tag('div', {className: 'focusWrapper'}, $container);\n            $title = tag('div', {className: 'itemTitle'}, data[index].custName);\n            $container = tag('div', {className: 'container'}, $title);\n            $blurWrapper = tag('div', {className: 'blurWrapper'}, $container);\n            result.push({\n                items: [\n                    $focusWrapper,\n                    $blurWrapper\n                ],\n                value: data[index]\n            });\n        }\n    }\n\n    return result;\n};\n","'use strict';\n\nmodule.exports = function ( list, video ) {\n    var data = {\n        video: [],\n        subtitles: []\n    };\n\n    /**\n     * Get subtitle uri.\n     *\n     * @param {Function} callback - result handler\n     *\n     * @this subtitleList\n     */\n    function getSubtitleUri ( callback ) {\n        if ( this.uri ) {\n            callback(false, this.uri);\n        } else {\n            video.getUrl(this.id, callback);\n        }\n    }\n\n    list.forEach(function ( item ) {\n        switch ( item.type ) {\n            case 'video':\n                data.video.push(item);\n                break;\n            case 'sub':\n                data.subtitles.push({\n                    id: item.id,\n                    title: item.name,\n                    lang: item.languages[0] || '',\n                    uri: item.url,\n                    getUri: getSubtitleUri\n                });\n                break;\n        }\n    });\n\n    list.sort(function ( itemA, itemB ) {\n        if ( !itemB.quality ) {\n            return 0;\n        }\n\n        if ( !itemA.quality ) {\n            return -1;\n        }\n\n        return itemB.quality.width - itemA.quality.width;\n    });\n\n    return data;\n};\n","'use strict';\n\nvar langCodes = require('./langs.convert');\n\n/* eslint no-continue: 0 */\n\n/**\n * Select next file.\n *\n * @param {Object} list - files for play\n * @param {Object} language - actual playing language\n * @param {Object} file - actual playing file data\n */\nmodule.exports = function ( list, language, file ) {\n    var selected = null,\n        index;\n\n    if ( list && list.length > 0 ) {\n        if ( list.length === 1 ) {\n            selected = list[0];\n        } else {\n            if ( language.length && language[0] !== '' ) {\n                language = language[0];\n            } else if ( file.languages.length ) {\n                language = file.languages[0];\n            }\n\n            language = langCodes[language];\n\n            for ( index = 0; index < list.length; index++ ) {\n                if ( list[index].value ) {\n                    if (\n                        list[index].value.languages.indexOf(language[0]) !== -1\n                        || (language[1] && list[index].value.languages.indexOf(language[1]) !== -1)\n                    ) {\n                        if ( list[index].value.quality.width === file.quality.width ) {\n                            selected = list[index];\n                            break;\n                        }\n\n                        if ( list[index].value.quality.width > file.quality.width ) {\n                            selected = {\n                                value: list[index].value,\n                                index: index\n                            };\n                            continue;\n                        }\n\n                        selected = {\n                            value: list[index].value,\n                            index: index\n                        };\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    return selected;\n};\n","'use strict';\n\nvar langs = require('langs/data'),\n    codes = {},\n    index, size, lang;\n\n\n// rework language data\nfor ( index = 0, size = langs.length; index < size; index++ ) {\n    lang = langs[index];\n\n    // link all tables with the same data\n    codes[lang['1']] = codes[lang['2T']] = codes[lang['2B']] = [lang['1'], lang['2T'], lang['2B']];\n}\n\n// clear\nlangs = null;\n\n\n// public\nmodule.exports = codes;\n","'use strict';\n\nvar app = require('mag-app'),\n    dom = require('spa-dom'),\n    tag = dom.tag;\n\n\n/**\n * Prepare data for series list.\n *\n * @param {Object} data - data to prepare\n *\n * @return {Array} prepared data\n */\nmodule.exports =  function ( data ) {\n    var disabled = false,\n        result = [],\n        $focusWrapper, $blurWrapper,\n        $status, $title, statusText,\n        $container;\n\n    data.forEach(function ( item ) {\n        disabled = false;\n        item.type = app.config.types.series;\n        item.custName = gettext('Series') + ' ' + item.number\n            + (item.name\n                ? ' - ' + item.name\n                : item['original_name'] ? ' - ' +  item['original_name'] : '');\n\n        switch ( item['watched_status'] ) {\n            case 'watched':\n                statusText = gettext('Watched');\n                disabled = true;\n                break;\n            case 'not_watched':\n                statusText = '';\n                break;\n            case 'not_ended':\n                statusText = gettext('Not finished');\n                break;\n        }\n        $title = tag('div', {className: 'itemTitle'}, item.custName);\n        $status = tag('div', {className: 'itemStatus' + (disabled ? ' disabled' : '' )}, statusText);\n        item.status = {};\n        item.status.$focus = $status;\n        $container = tag('div', {className: 'container'}, $title, $status);\n        $focusWrapper = tag('div', {className: 'focusWrapper'}, $container);\n        $title = tag('div', {className: 'itemTitle'}, item.custName);\n        $status = tag('div', {className: 'itemStatus' + (disabled ? ' disabled' : '' )}, statusText);\n        item.status.$blur = $status;\n        $container = tag('div', {className: 'container'}, $title, $status);\n        $blurWrapper = tag('div', {className: 'blurWrapper'}, $container);\n        result.push({\n            items: [\n                $focusWrapper,\n                $blurWrapper\n            ],\n            value: item\n        });\n    });\n\n    return result;\n};\n","'use strict';\n\nvar langCode = require('cjs-iso-639');\n\n\n/**\n * Transform language codes to readable format.\n *\n * @param {Array} codes - language codes to transform\n *\n * @return {string} languages\n */\nfunction fillLanguage ( codes ) {\n    var languages = [];\n\n    codes.forEach(function ( code ) {\n        var tempLang = langCode['1'][code] || langCode['2B'][code] ||\n            langCode['2T'][code];\n\n        if ( tempLang ) {\n            languages.push(tempLang[1]);\n        } else {\n            languages.push(code || gettext('Unknown language'));\n        }\n    });\n\n    return  languages.join(', ');\n}\n\n\n/**\n * Prepare data for files list.\n *\n * @param {Object} data - data to prepare\n *\n * @return {Array} prepared data\n */\nmodule.exports = function ( data ) {\n    var subList = [],\n        result = [],\n        name, lang;\n\n    data.forEach(function ( item ) {\n        lang = [];\n        item.subList = subList;\n        if ( item.languages.length ) {\n            lang = fillLanguage(item.languages);\n        } else {\n            lang = gettext('Unknown language');\n        }\n        if ( item.quality ) {\n            name = (item.quality.code ? item.quality.code + ' (' : '(')\n                + (item.quality.name ? item.quality.name : gettext('Unknown quality')) + ')';\n        } else {\n            name = '(' + gettext('Unknown quality') + ')';\n        }\n\n        result.push({\n            state: false,\n            title: lang + ' ' + name,\n            value: item\n        });\n    });\n\n    return result;\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar langs = require('langs/data'),\n    codes = {\n        1:    {},\n        '2T': {},\n        '2B': {}\n    },\n    index, size, lang;\n\n\n// rework language data\nfor ( index = 0, size = langs.length; index < size; index++ ) {\n    lang = langs[index];\n\n    // link all tables with the same data\n    codes['1'][lang['1']] = codes['2T'][lang['2T']] = codes['2B'][lang['2B']] = [lang.name, lang.local];\n}\n\n// clear\nlangs = null;\n\n\n// public\nmodule.exports = codes;\n","'use strict';\n\n\nvar Layout = require('mag-component-layout');\n\n\n/**\n * Render item function for series list.\n *\n * @param {Element} $item - item to render\n * @param {Object} config - configuration of new data\n */\nmodule.exports = function ( $item, config ) {\n    var layout, index, item,\n        layoutConfig;\n\n    // clear inner content\n    while ( $item.firstChild ) {\n        $item.removeChild($item.firstChild);\n    }\n\n    for ( index = 0; index < config.items.length; index++ ) {\n        item = config.items[index];\n        if ( item && item.value instanceof HTMLElement ) {\n            config.items[index] = item.value;\n        }\n    }\n\n    layoutConfig = {\n        focusable: false,\n        data: config.items\n    };\n\n    if ( config.className ) {\n        layoutConfig.className = config.className;\n    }\n\n    layout = new Layout(layoutConfig);\n\n    $item.appendChild(layout.$node);\n    $item.layout = layout;\n    layout.parent = this;\n    layout.$parentItem = $item;\n\n    if ( config.click ) {\n        this.handlers[$item.index] = config.click;\n    }\n    // item is rendered\n    $item.ready = true;\n\n    $item.value = config.value;\n};\n","/**\n * Main page implementation.\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n\nvar Page = require('stb-component-page'),\n\n    dom  = require('spa-dom'),\n    keys = require('stb-keys'),\n    app  = require('mag-app'),\n\n    Layout     = require('mag-component-layout'),\n    LayoutList = require('mag-component-layout-list'),\n    ScrollBar  = require('stb-component-scrollbar'),\n    ScrollArea = require('mag-component-scroll-area'),\n\n    utils = {\n        toggleFavorite: require('../utils/toggle.favorite')\n    },\n\n    page = new Page({$node: document.getElementById('pageMore')}),\n\n    infoBlock, buttonList, infoData,\n\n    buttons, buttonsData, buttonsDataWatch,\n    buttonsSerialsWatch,\n\n    // prevPage,\n    // screenList, seasonsList, seasonsButton,\n    scroll,\n\n    textArea = new ScrollArea({\n        propagate: true,\n        step: 5,\n        scroll: scroll = new ScrollBar({}),\n        events: {\n            overflow: function ( event ) {\n                if ( event.direction === keys.down ) {\n                    buttonList.focus();\n                }\n            }\n        }\n    });\n\n/**\n * Change favorite state.\n */\nfunction toggleFavorite () {\n    if ( infoData.favorite ) {\n        buttonList.$node.classList.remove('inFavorite');\n    } else {\n        buttonList.$node.classList.add('inFavorite');\n    }\n    utils.toggleFavorite(infoData);\n}\n\nbuttons = {\n    continueWatching: {\n        icon: 'theme-icon theme-icon-play',\n        value: gettext('Continue watching'),\n        click: function () {\n            app.route(app.pages.info, {info: null, type: 'continue'});\n        }\n    },\n    watchAgain: {\n        icon: 'theme-icon theme-icon-reset',\n        value: gettext('Watch again'),\n        click: function () {\n            app.route(app.pages.info, {info: null, type: 'start'});\n        }\n    },\n    favorite: {\n        icon: 'theme-icon theme-icon-favorite-active',\n        value: gettext('Favorite'),\n        click: toggleFavorite\n    },\n    play: {\n        icon: 'theme-icon theme-icon-play',\n        value: gettext('Play'),\n        click: function () {\n            app.route(app.pages.info, {info: null, type: 'start'});\n        }\n    }\n};\n\nbuttonsData = [buttons.play, buttons.favorite];\nbuttonsDataWatch = [buttons.continueWatching, buttons.watchAgain, buttons.favorite];\nbuttonsSerialsWatch = [buttons.continueWatching, buttons.favorite];\n\npage.add(textArea);\npage.add(scroll);\n\ninfoBlock = require('../utils/init.info')();\n\nbuttonList = new LayoutList({\n    cycle: false,\n    className: 'buttonList',\n    render: function ( $item, config ) {\n        var layout, focus, icon,\n            button;\n\n        while ( $item.firstChild ) {\n            $item.removeChild($item.firstChild);\n        }\n        button = dom.tag('div', {className: 'button'});\n        icon = dom.tag('div', {className: config.icon});\n        button.appendChild(icon);\n\n        focus = dom.tag('div', {className: 'buttonFocus'});\n        icon = dom.tag('div', {className: config.icon});\n        focus.appendChild(icon);\n\n        while ( $item.firstChild ) {\n            $item.removeChild($item.firstChild);\n        }\n\n        layout = new Layout({\n            focusable: false,\n            data: [button, {className: 'buttonTitle', value: config.value}, focus]\n        });\n\n        $item.appendChild(layout.$node);\n        $item.layout = layout;\n        layout.parent = this;\n        layout.$parentItem = $item;\n\n        // focus layoutList if click on layout\n        layout.addListener('click', function () {\n            // add inner property to set that event comes from inner component\n            layout.parent.emit('click:item', {$item: $item, inner: true});\n        });\n\n        if ( config.click ) {\n            this.handlers[$item.index] = config.click;\n        }\n        // item is rendered\n        $item.ready = true;\n\n        $item.value = config.value || {};\n    },\n    data: [],\n    size: app.metrics.buttonList.size,\n    focusIndex: 0,\n    propagate: false,\n    type: LayoutList.prototype.TYPE_HORIZONTAL,\n    events: {\n        keydown: function ( event ) {\n            switch ( event.code ) {\n                case keys.up:\n                    event.stop = true;\n                    textArea.focus();\n                    break;\n                case keys.down:\n                    event.stop = true;\n                    break;\n                case keys.right:\n                case keys.left:\n                    // cursor move only on arrow keys\n                    this.move(event.code);\n                    event.stop = true;\n                    break;\n                case keys.enter:\n                    // there are some listeners\n                    if ( this.events['click:item'] && this.$focusItem ) {\n                        // notify listeners\n                        this.emit('click:item', {$item: this.$focusItem, event: event});\n                    }\n                    event.stop = true;\n                    break;\n            }\n        }\n    }\n});\n\n\ntextArea.$body.appendChild(infoBlock.$body);\ninfoBlock.$panel.appendChild(buttonList.$node);\n\n\n/**\n * Fill pages layouts.\n */\npage.addListener('show', function ( data ) {\n    if ( !data || !data.data ) {\n        return;\n    }\n\n    infoData = data.data;\n\n    if ( infoData.poster ) {\n        infoBlock.$img.style.backgroundImage = infoData.poster;\n    } else {\n        infoBlock.$img.style.backgroundImage = '';\n    }\n\n    infoBlock.$title.innerText = infoData.name;\n    infoBlock.$country.innerText = ( infoData.year_end ? infoData.year + ' - ' + infoData.year_end : infoData.year ) + ', ' +\n        infoData.genre + ', ' + infoData.duration + ' ' + gettext('minutes');\n\n    if ( infoData['rating_kinopoisk'] ) {\n        infoBlock.$ratingKino.innerText = infoData.rating_kinopoisk;\n        infoBlock.$ratingKino.style.display = '';\n    } else {\n        infoBlock.$ratingKino.style.display = 'none';\n    }\n    if ( infoData['rating_imdb'] ) {\n        infoBlock.$ratingImdb.innerText = infoData.rating_imdb;\n        infoBlock.$ratingImdb.style.display = '';\n    } else {\n        infoBlock.$ratingImdb.style.display = 'none';\n    }\n    if ( infoData.age ) {\n        infoBlock.$censor.innerText = infoData.age;\n        infoBlock.$censor.style.display = '';\n    } else {\n        infoBlock.$censor.style.display = 'none';\n    }\n    infoBlock.$director.innerText = infoData.director;\n    infoBlock.$actors.innerText = infoData.actors;\n\n    infoBlock.$description.innerText = infoData.description;\n    if ( infoData.watched_status === 'not_ended' ) {\n        buttonList.setData({data: buttonsDataWatch, focusIndex: 0});\n        if ( infoData['is_tv_series'] ) {\n            buttonList.setData({data: buttonsSerialsWatch, focusIndex: 0});\n        }\n    } else {\n        buttonList.setData({data: buttonsData, focusIndex: 0});\n    }\n\n    if ( infoData.favorite ) {\n        buttonList.$node.classList.add('inFavorite');\n    } else {\n        buttonList.$node.classList.remove('inFavorite');\n    }\n\n    textArea.init();\n    textArea.focus();\n});\n\n\nif ( DEVELOP ) {\n    window.infoBlockMore = infoBlock;\n    window.textArea = textArea;\n}\n\n\npage.addListener('keydown', function ( event ) {\n    switch ( event.code ) {\n        case keys.back:\n            app.route(app.pages.info, {type: 'back'});\n            break;\n        case keys.f3:\n            toggleFavorite();\n            break;\n    }\n});\n\nmodule.exports = page;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component'),\n    keys      = require('stb-keys');\n\n\n/**\n * Scroll area implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} config object\n * @param {number} [config.step] step in % of screen height to scroll area\n */\nfunction ScrollArea ( config ) {\n\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    /**\n     * Step to scroll area in % of screen height\n     *\n     * @type {number}\n     */\n    this.step = 5;\n\n    /**\n     * Real height of scroll area\n     *\n     * @type {number}\n     */\n    this.realHeight = 0;\n\n    /**\n     * Visible height of area\n     *\n     * @type {number}\n     */\n    this.viewHeight = 0;\n\n    /**\n     * Top position of scroll container\n     *\n     * @type {number}\n     */\n    this.topPosition = 0;\n\n    /**\n     * Associated ScrollBar component link.\n     *\n     * @type {ScrollBar}\n     */\n    this.scroll = null;\n\n    Component.call(this, config);\n\n    this.$node.appendChild(this.$body);\n\n    // component setup\n    this.init(config);\n}\n\n\nScrollArea.prototype = Object.create(Component.prototype);\nScrollArea.prototype.constructor = ScrollArea;\n\n// set component name\nScrollArea.prototype.name = 'mag-component-scroll-area';\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nScrollArea.prototype.defaultEvents = {\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n                this.move(event.code);\n                break;\n        }\n    },\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n    }\n};\n\n\n/**\n * Attempt to go beyond the edge of the list.\n *\n * @event\n *\n * @type {Object}\n * @property {number} direction key code initiator of movement\n */\n\n\n/**\n * Move ScrollArea content\n *\n * @param {number} direction to move\n */\nScrollArea.prototype.move = function ( direction ) {\n    var height = screen.height,\n        delta  = this.viewHeight - this.realHeight;\n\n    // run logic only if it's reasonable to navigate\n    if ( delta < 0 ) {\n        switch ( direction ) {\n            case keys.down:\n                if ( this.topPosition - this.step * height / 100 < delta ) {\n                    this.scroll.scrollTo(-delta);\n                    this.$body.style.top = delta + 'px';\n                    this.emit('overflow', {direction: direction});\n\n                    return;\n                }\n\n                this.topPosition -= Math.ceil(this.step * height / 100);\n\n                if ( this.scroll ) {\n                    this.scroll.scrollTo(-this.topPosition);\n                }\n                this.$body.style.top = this.topPosition + 'px';\n                break;\n            case keys.up:\n                if ( this.topPosition + this.step * height / 100 > 0 ) {\n                    this.scroll.scrollTo(0);\n                    this.$body.style.top = '0px';\n                    this.emit('overflow', {direction: direction});\n\n                    return;\n                }\n                this.topPosition += Math.ceil(this.step * height / 100);\n\n                if ( this.scroll ) {\n                    this.scroll.scrollTo(-this.topPosition);\n                }\n                this.$body.style.top = this.topPosition + 'px';\n                break;\n        }\n    } else {\n        this.emit('overflow', {direction: direction});\n    }\n};\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nScrollArea.prototype.init = function ( config ) {\n\n    config = config || {};\n\n    this.realHeight = this.$body.offsetHeight;\n    this.viewHeight = this.$node.offsetHeight;\n    this.topPosition = 0;\n    this.$body.style.top = this.topPosition + 'px';\n\n    if ( config.scroll ) {\n        this.scroll = config.scroll;\n    }\n\n    if ( config.step ) {\n        this.step = config.step;\n    }\n\n    if ( this.scroll ) {\n        this.scroll.init({\n            realSize: this.realHeight,\n            viewSize: this.viewHeight,\n            value: this.topPosition\n        });\n    }\n};\n\nmodule.exports = ScrollArea;\n"],"sourceRoot":""}