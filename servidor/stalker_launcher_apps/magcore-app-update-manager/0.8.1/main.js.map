{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/stb-keys/index.js","webpack:///./node_modules/spa-component/index.js","webpack:///./node_modules/stb-component/index.js","webpack:///./node_modules/mag-app/index.js","webpack:///./node_modules/spa-app/lib/core.js","webpack:///./node_modules/stb-component-page/index.js","webpack:///./node_modules/mag-component-layout-list/index.js","webpack:///./node_modules/spa-dom/index.js","webpack:///./node_modules/spa-component-flicker/index.js","webpack:///./node_modules/mag-component-panel-set/index.js","webpack:///./node_modules/mag-component-panel/index.js","webpack:///./node_modules/mag-component-modal/index.js","webpack:///./node_modules/stb-component-scrollbar/index.js","webpack:///./node_modules/cjs-emitter/index.js","webpack:///./node_modules/mag-component-radio-list/index.js","webpack:///./node_modules/stb-component-button/index.js","webpack:///./node_modules/stb-app/lib/css.js","webpack:///./node_modules/spa-keys/index.js","webpack:///./node_modules/mag-component-list/index.js","webpack:///./node_modules/mag-component-layout/index.js","webpack:///./node_modules/mag-component-scroll-area/index.js","webpack:///./src/js/main.js","webpack:///./node_modules/mag-app/lib/main.js","webpack:///./node_modules/cjs-query/index.js","webpack:///./src/js/config.js","webpack:///./node_modules/spa-app/lib/events.js","webpack:///./node_modules/stb-shim-classlist/index.js","webpack:///./node_modules/stb-app/lib/metrics.js","webpack:///./src/js/metrics.js","webpack:///./node_modules/mag-app/lib/css.js","webpack:///./node_modules/spa-gettext/index.js","webpack:///./node_modules/cjs-gettext/index.js","webpack:///./src/js/pages/main.js","webpack:///./node_modules/spa-component-page/index.js","webpack:///./node_modules/stb-component-modal/index.js","webpack:///./node_modules/spa-component-modal/index.js","webpack:///./node_modules/spa-component-scrollbar/index.js","webpack:///./src/js/pages/info.js","webpack:///./node_modules/spa-component-button/index.js","webpack:///./src/js/pages/logs.js","webpack:///./node_modules/stb-component-panel/index.js","webpack:///./node_modules/spa-component-panel/index.js","webpack:///./node_modules/spa-component-progress-bar/index.js","webpack:///./node_modules/mag-component-footer/index.js","webpack:///./src/js/pages/usb.js","webpack:///./src/js/pages/url.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","keys","back","backspace","channelNext","tab","channelPrev","ok","enter","exit","escape","volumeUp","volumeDown","f1","f2","f3","f4","refresh","frame","phone","set","tv","menu","app","rewind","forward","audio","standby","keyboard","usbMounted","usbUnmounted","playPause","play","pause","stop","power","record","info","mute","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","Emitter","counter","Component","config","self","this","visible","focusable","$node","$body","parent","children","propagate","document","createElement","className","id","add","hide","defaultEvents","events","forEach","eventName","addListener","apply","addEventListener","event","focus","emit","stopPropagation","constructor","child","index","arguments","length","push","parentNode","appendChild","item","remove","activePage","activeComponent","blur","splice","indexOf","removeChild","data","activeItem","classList","show","callback","setTimeout","parse","query","location","search","substring","route","pageTo","page","pageFrom","active","showPage","from","to","List","Layout","LayoutList","handlers","$noData","undefined","fixedData","$item","layout","inner","focusIndex","focusItem","renderItemDefault","layoutConfig","currentNode","currentData","ready","items","childNodes","innerText","firstChild","$parentItem","click","setData","init","$wrap","noData","innerHTML","Element","renderItem","dom","tag","tagName","attrList","content","node","createTextNode","fragment","createDocumentFragment","tagDst","Node","nodes","count","clear","lastChild","Flicker","interval","timerId","render","start","run","clearTimeout","defaultRender","PanelSet","keydownHandler","code","left","panels","right","main","addListeners","keydown","Panel","$overlay","size","$shadow","title","Array","isArray","$title","StbComponentModal","Modal","onkeydown","$header","$text","icon","$icon","once","onceWrapper","removeListener","callbacks","filter","fn","slice","classIcon","classIconActive","RadioList","classChecked","checkedData","checkedIndex","previousCheckedData","checkIndex","defaultCheckedIndex","$focusItem","defaultFocusIndex","resetData","clearChecked","state","table","tr","td","check","checkBox","getItemNodeByIndex","viewIndex","link","rel","href","metrics","height","head","space","pageUp","pageDown","end","home","up","down","insert","del","type","TYPE_VERTICAL","cycle","scroll","provider","TYPE_HORIZONTAL","mousewheel","wheelDeltaY","move","wheelDeltaX","idx","currSize","onClick","blocked","error","realSize","maxCount","viewSize","pos","normalize","blurItem","renderView","itemData","prevIndex","currIndex","mark","scrollTo","direction","force","previousSibling","nextSibling","$prev","$curr","markItem","$wrapper","HTMLElement","wrap","componentClickHandler","textContent","ScrollArea","step","realHeight","viewHeight","topPosition","screen","delta","style","top","Math","ceil","offsetHeight","gettext","load","window","core","environment","language","pages","logs","usb","url","getCoreInstance","platform","body","setAttribute","contextmenu","preventDefault","split","part","decodeURIComponent","stringify","params","encodeURIComponent","join","pathToImageAtUsb","selectedImage","DOMContentLoaded","unload","eventLocal","keyCode","ctrlKey","altKey","shiftKey","keypress","documentElement","DOMTokenList","el","_element","_classCache","classes","replace","token","contains","toString","toggle","screenHeight","availHeight","availTop","availBottom","availWidth","width","availLeft","availRight","480","576","720","1080","linkCSS","theme","path","Gettext","loader","prepare","_","pgettext","ngettext","defaultLanguage","xhr","ext","XMLHttpRequest","onload","JSON","responseText","onerror","ontimeout","open","send","meta","msgId","context","plural","evalResult","eval","$channelsCountWrapper","Page","getElementById","PanelExtended","ModalMessage","fileSystem","plugins","fs","Scroll","updater","storages","getMountPoints","concat","getHDDInfo","onMount","modalUsbSelect","middlePanel","reset","panelSet","clock","time","Date","hours","getHours","mins","getMinutes","modalExit","intent","closeCallback","taskManager","hideAll","leftPanel","list","rightPanel","textArea","$fragment","htmlElem","area","calc","modalFriquency","frequency","constants","NEVER","WEEKLY","MONTHLY","click:item","modalAllowBeta","betaUpdate","sets","releases","options","localisations","autoUpdateEnabled","releaseListUpdate","array","descr","date","current","version","description","wholeArray","resetTimeOut","listSet","currentSet","focus:item","listChange","hardUpdate","action","standAloneMode","ScrollBar","thumbRect","trackRect","$thumb","getBoundingClientRect","marginTop","marginLeft","curr","prev","$channelsCount","Button","modalImageSelect","currImg","modalMore","overflow","button","notify","clickDuration","Progress","Footer","$logsBox","toogleLogBox","footer","modalActions","progress","$percents","modalReload","timeLeft","setInterval","reload","blockExit","now","stateChange","insertBefore","text","image","killAll","uri","ProgressBar","max","min","$value","prevValue","abs","currentTab","tabs","codes","$table","insertRow","rows","insertCell","$left","cells","$right","currTab","$tab","$tabChildren","addClick","ind","middle","disabled","visibility","onclick","convert","floor","label","storage","usbLabel","input","defaultPathToImageOnUsb","done","isFileExist","mountPath","exist","message","updateImageUrl","confirmedImage"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,YAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,mCCnEA,IAAAC,EAAWpC,EAAQ,IAInBoC,EAAAC,KAAAD,EAAAE,UACAF,EAAAG,YAAAH,EAAAI,IACAJ,EAAAK,YAAAL,EAAAI,IAAA,IACAJ,EAAAM,GAAAN,EAAAO,MACAP,EAAAQ,KAAAR,EAAAS,OACAT,EAAAU,SAAA,IACAV,EAAAW,WAAA,IACAX,EAAAY,GAAA,OACAZ,EAAAa,GAAA,OACAb,EAAAc,GAAA,OACAd,EAAAe,GAAA,OACAf,EAAAgB,QAAA,OACAhB,EAAAiB,MAAA,OACAjB,EAAAkB,MAAA,OACAlB,EAAAmB,IAAA,OACAnB,EAAAoB,GAAA,OACApB,EAAAqB,KAAA,OACArB,EAAAsB,IAAA,OACAtB,EAAAuB,OAAA,MACAvB,EAAAwB,QAAA,MACAxB,EAAAyB,MAAA,MACAzB,EAAA0B,QAAA,MACA1B,EAAA2B,SAAA,MACA3B,EAAA4B,WAAA,MACA5B,EAAA6B,aAAA,MACA7B,EAAA8B,UAAA,MACA9B,EAAA+B,MAAA,EACA/B,EAAAgC,OAAA,EACAhC,EAAAiC,KAAA,MACAjC,EAAAkC,MAAA,MACAlC,EAAAmC,OAAA,MACAnC,EAAAoC,KAAA,MACApC,EAAAqC,KAAA,OACArC,EAAAsC,OAAA,GACAtC,EAAAuC,OAAA,GACAvC,EAAAwC,OAAA,GACAxC,EAAAyC,OAAA,GACAzC,EAAA0C,OAAA,GACA1C,EAAA2C,OAAA,GACA3C,EAAA4C,OAAA,GACA5C,EAAA6C,OAAA,GACA7C,EAAA8C,OAAA,GACA9C,EAAA+C,OAAA,GAIAhF,EAAAD,QAAAkC,gCCxDA,IAAAsB,EAAc1D,EAAQ,GACtBoF,EAAcpF,EAAQ,IACtBqF,EAAA,EAuCA,SAAAC,EAAAC,GAEA,IACA5E,EADA6E,EAAAC,KAyHA,GArHAF,KAAA,GAmCAE,KAAAC,SAAA,EAOAD,KAAAE,WAAA,EAOAF,KAAAG,MAAA,KAQAH,KAAAI,MAAA,KAOAJ,KAAAK,OAAA,KAOAL,KAAAM,SAAA,GAQAN,KAAAO,YAAAT,EAAAS,UAGAZ,EAAA7E,KAAAkF,MAGAA,KAAAG,MAAAL,EAAAK,OAAAK,SAAAC,cAAA,OAGAT,KAAAI,MAAAN,EAAAM,OAAAJ,KAAAG,MAKAH,KAAAG,MAAAO,UAAAV,KAAA9E,KAAA,KAAA4E,EAAAY,WAAA,IAGAV,KAAAW,GAAAb,EAAAa,IAAAX,KAAAG,MAAAQ,IAAA,MAAAf,IAGAE,EAAAO,QAEAP,EAAAO,OAAAO,IAAAZ,OAIA,IAAAF,EAAAG,SAEAD,KAAAa,QAIA,IAAAf,EAAAI,YAEAF,KAAAE,WAAA,GAIAF,KAAAc,cAaA,IAAA5F,KAXA4E,EAAAiB,OAAAjB,EAAAiB,QAAA,GAWAf,KAAAc,cAEAhB,EAAAiB,OAAA7F,GAAA4E,EAAAiB,OAAA7F,IAAA8E,KAAAc,cAAA5F,GAIA4E,EAAAiB,QAEA1F,OAAAsB,KAAAmD,EAAAiB,QAAAC,QAAA,SAAAC,GACAlB,EAAAmB,YAAAD,EAAAnB,EAAAiB,OAAAE,MAKAnB,EAAAQ,UAEAN,KAAAY,IAAAO,MAAAnB,KAAAF,EAAAQ,UAIAN,KAAAG,MAAAiB,iBAAA,iBAAAC,GAIAtB,EAAAuB,QAGAvB,EAAAgB,OAAA,UASAhB,EAAAwB,KAAA,QAAAF,GAcAA,EAAAG,oBAaAxB,KAAA9E,KAAA8E,KAAAW,GACAX,KAAA9E,KAAA8E,KAAAW,GAMAd,EAAAtD,UAAAlB,OAAAY,OAAA0D,EAAApD,WACAsD,EAAAtD,UAAAkF,YAAA5B,EAQAA,EAAAtD,UAAAuE,cAAA,KAgBAjB,EAAAtD,UAAAqE,IAAA,SAAAc,GACA,IAAAC,EAGA,IAAAA,EAAA,EAAoBA,EAAAC,UAAAC,OAA0BF,IAC9CD,EAAAE,UAAAD,GASA3B,KAAAM,SAAAwB,KAAAJ,GACAA,EAAArB,OAAAL,KAGA0B,EAAAvB,OAAA,OAAAuB,EAAAvB,MAAA4B,YACA/B,KAAAI,MAAA4B,YAAAN,EAAAvB,OAGAuB,EAAAxG,KAAAwG,EAAAf,GAAAX,KAAA9E,KAAA8E,KAAAW,GACAX,KAAA9E,KAAA8E,KAAAW,GAAAe,EAAAxG,KAAAwG,EAAAf,GAIAX,KAAAe,OAAA,QASAf,KAAAuB,KAAA,OAA8BU,KAAAP,KA8C9B7B,EAAAtD,UAAA2F,OAAA,WAEAlC,KAAAK,SAQApC,EAAAkE,WAAAC,kBAAApC,OACAA,KAAAqC,OACArC,KAAAK,OAAAiB,SAEAtB,KAAAK,OAAAC,SAAAgC,OAAAtC,KAAAK,OAAAC,SAAAiC,QAAAvC,MAAA,IAIAA,KAAAM,SAAAU,QAAA,SAAAU,GAOAA,EAAAQ,WAGAlC,KAAAG,MAAA4B,WAAAS,YAAAxC,KAAAG,OAGAH,KAAAe,OAAA,WAMAf,KAAAuB,KAAA,UAIAvB,KAAAe,OAAA,GAGAf,KAAA9E,KAAA8E,KAAAW,GACAX,KAAA9E,KAAA8E,KAAAW,IAeAd,EAAAtD,UAAA+E,MAAA,SAAAmB,GACA,IAAAN,EAAAlE,EAAAkE,WACAO,EAAAP,EAAAC,gBAIA,SAAApC,KAAAE,WAAAF,OAAA0C,KAEAA,GAA2BA,EAAAL,OAK3BF,EAAAC,gBAAAM,EAAA1C,KACA0C,EAAAvC,MAAAwC,UAAA/B,IAAA,SAGAZ,KAAA9E,KAAA8E,KAAAW,GACAX,KAAA9E,KAAA8E,KAAAW,GAIA+B,EAAA3B,OAAA,UAMA2B,EAAAnB,KAAA,QAAAkB,IAGA,IAgBA5C,EAAAtD,UAAA8F,KAAA,WACA,IAAAF,EAAAlE,EAAAkE,WACAO,EAAAP,EAAAC,gBAMA,OAHApC,KAAAG,MAAAwC,UAAAT,OAAA,SAGAlC,OAAA0C,GACAP,EAAAC,gBAAA,KAGApC,KAAA9E,KAAA8E,KAAAW,GACAX,KAAA9E,KAAA8E,KAAAW,GAIAX,KAAAe,OAAA,SAMAf,KAAAuB,KAAA,SAGA,IAGAvB,KAAA9E,KAAA8E,KAAAW,GACAX,KAAA9E,KAAA8E,KAAAW,IAIA,IAmCAd,EAAAtD,UAAAqG,KAAA,SAAAH,EAAAI,GAIA,OAAA7C,KAAAC,UAaAD,KAAAG,MAAAwC,UAAAT,OAAA,UAEAlC,KAAAC,SAAA,EAEAD,KAAA9E,KAAA8E,KAAAW,GACAX,KAAA9E,KAAA8E,KAAAW,GAIAX,KAAAe,OAAA,SAMAf,KAAAuB,KAAA,OAAAkB,GAIA,mBAAAI,GAEAC,WAAAD,IAGA,IAiBAhD,EAAAtD,UAAAsE,KAAA,SAAAgC,GAEA,QAAA7C,KAAAC,UAEAD,KAAAG,MAAAwC,UAAA/B,IAAA,UAEAZ,KAAAC,SAAA,EAEAD,KAAA9E,KAAA8E,KAAAW,GACAX,KAAA9E,KAAA8E,KAAAW,GAIAX,KAAAe,OAAA,SAMAf,KAAAuB,KAAA,QAIA,mBAAAsB,GAEAC,WAAAD,IAGA,IASAnI,EAAAD,QAAAoF,gCClnBAnF,EAAAD,QAAiBF,EAAQ,iCCDzB,IAAA0D,EAAU1D,EAAQ,IAGlBG,EAAAD,QAAAwD,gCCDA,IAAA0B,EAAcpF,EAAQ,IACtBwI,EAAcxI,EAAQ,IAAWwI,MACjC9E,EAAA,IAAA0B,EA0EA1B,EAAA+E,MAAAD,EAAAvC,SAAAyC,SAAAC,OAAAC,UAAA,IAKAlF,EAAA6B,OAAavF,EAAQ,IAIrB0D,EAAAkE,WAAA,KAYAlE,EAAAmF,MAAA,SAAAC,EAAAZ,GACA,IAlDAa,EAkDAC,EAAAtF,EAAAkE,WAcA,SAAAkB,KAAAG,UAEAH,EAAAnI,KAAAmI,EAAA1C,GAAyE0C,EAAAnI,KAAAmI,EAAA1C,IAlEzE2C,EAwEArF,EAAAkE,aAtEAmB,EAAAE,SAEAF,EAAAnD,MAAAwC,UAAAT,OAAA,UACAoB,EAAAE,QAAA,EACAvF,EAAAkE,WAAA,KAEAmB,EAAApI,KAAAoI,EAAA3C,GACA2C,EAAApI,KAAAoI,EAAA3C,GAKA2C,EAAAvC,OAAA,SAEAuC,EAAA/B,KAAA,SAlDA,SAAA+B,EAAAb,IAEAa,KAAAE,SAEAF,EAAAnD,MAAAwC,UAAA/B,IAAA,UACA0C,EAAAE,QAAA,EACAvF,EAAAkE,WAAAmB,EAEAA,EAAApI,KAAAoI,EAAA3C,GACA2C,EAAApI,KAAAoI,EAAA3C,GAKA2C,EAAAvC,OAAA,SAEAuC,EAAA/B,KAAA,QAA+BkB,UA2F/BgB,CAAAJ,EAAAZ,GAGAzC,KAAAe,OAAA,UAEAf,KAAAuB,KAAA,SAAgCmC,KAAAH,EAAAI,GAAAN,KAMhC,IAYA3I,EAAAD,QAAAwD,gCCjJAvD,EAAAD,QAAiBF,EAAQ,IAGzBG,EAAAD,QAAA8B,UAAArB,KAAA,mDCFA,IAAA0I,EAAWrJ,EAAQ,IACnBsJ,EAAatJ,EAAQ,IAgErB,SAAAuJ,EAAAhE,GACA,IAAAC,EAAAC,KAEAF,KAAA,GAKAE,KAAA+D,SAAA,GAOA/D,KAAAgE,QAAA,KAIAlE,EAAAS,eAAA0D,IAAAnE,EAAAS,WAAAT,EAAAS,UAOAP,KAAAkE,UAAApE,EAAAoE,YAAA,EAIApE,EAAAM,MAAAI,SAAAC,cAAA,OACAX,EAAAM,MAAAM,UAAA,OAEAV,KAAAgE,QAAAxD,SAAAC,cAAA,OACAT,KAAAgE,QAAAtD,UAAA,gBAEAkD,EAAA9I,KAAAkF,KAAAF,GAEAE,KAAAG,MAAA6B,YAAAhC,KAAAI,OACAJ,KAAAG,MAAA6B,YAAAhC,KAAAgE,SAGAhE,KAAAkB,YAAA,sBAAAG,GAEAA,EAAA8C,MAAAC,OAAA9D,SAAAuB,SAAAR,EAAAgD,OACAhD,EAAA8C,MAAAC,OAAA9D,SAAAe,EAAA8C,MAAAC,OAAAE,YAAAhD,QAIAD,EAAAgD,QACAtE,EAAAuB,QACAvB,EAAAwE,UAAAlD,EAAA8C,QAGApE,EAAAgE,SAAA1C,EAAA8C,MAAAxC,QACA5B,EAAAgE,SAAA1C,EAAA8C,MAAAxC,OAAAN,EAAA8C,SAMAL,EAAAvH,UAAAlB,OAAAY,OAAA2H,EAAArH,WACAuH,EAAAvH,UAAAkF,YAAAqC,EAGAA,EAAAvH,UAAArB,KAAA,4BAUA4I,EAAAvH,UAAAiI,kBAAA,SAAAL,EAAArE,GACA,IAAAsE,EAAAK,EACAC,EACAC,EACAhK,EAEA,GAAAwJ,EAAAS,OAAA5E,KAAAkE,UACA,IAAAvJ,EAAA,EAAoBA,EAAAmF,EAAA+E,MAAAhD,OAAyBlH,IAE7C,iBADAgK,EAAA7E,EAAA+E,MAAAlK,IACAiB,YAAAqI,IAAAU,EAAA/I,SACA8I,EAAAP,EAAAC,OAAAjE,MAAA2E,WAAAnK,IACAoK,UAAAJ,EAAA/I,OAAA,GACA8I,EAAAhE,UAAAiE,EAAAjE,WAAA,QAGK,CAEL,KAAAyD,EAAAa,YACAb,EAAA3B,YAAA2B,EAAAa,YAGAP,EAAA,CACAvE,WAAA,EACAuC,KAAA3C,EAAA+E,OAGA/E,EAAAY,YACA+D,EAAA/D,UAAAZ,EAAAY,WAGA0D,EAAA,IAAAP,EAAAY,GAEAN,EAAAnC,YAAAoC,EAAAjE,OACAgE,EAAAC,SACAA,EAAA/D,OAAAL,KACAoE,EAAAa,YAAAd,EAGAC,EAAAlD,YAAA,mBAEAkD,EAAA/D,OAAAkB,KAAA,cAA8C4C,QAAAE,OAAA,MAG9CvE,EAAAoF,QACAlF,KAAA+D,SAAAI,EAAAxC,OAAA7B,EAAAoF,OAGAf,EAAAS,OAAA,EAEAT,EAAAvI,MAAAkE,EAAAlE,OAAA,IAIAkI,EAAAvH,UAAA4I,QAAA,SAAArF,GACA8D,EAAArH,UAAA4I,QAAArK,KAAAkF,KAAAF,GAEAA,EAAA2C,MAAA3C,EAAA2C,KAAAZ,OACA7B,KAAAgE,QAAArB,UAAA/B,IAAA,UAEAZ,KAAAgE,QAAArB,UAAAT,OAAA,WAKA4B,EAAAvH,UAAA6I,KAAA,SAAAtF,GACA,IAAAuF,EAEAzB,EAAArH,UAAA6I,KAAAtK,KAAAkF,KAAAF,GACAA,EAAAwF,SAOAtF,KAAAgE,QAAAuB,UAAA,GACAzF,EAAAwF,kBAAAE,QACAxF,KAAAgE,QAAAhC,YAAAlC,EAAAwF,QACS,iBAAAxF,EAAAwF,UACTD,EAAA7E,SAAAC,cAAA,QACAsE,UAAAjF,EAAAwF,OACAtF,KAAAgE,QAAAhC,YAAAqD,KAIAvF,EAAA2C,MAAA3C,EAAA2C,KAAAZ,OACA7B,KAAAgE,QAAArB,UAAA/B,IAAA,UAEAZ,KAAAgE,QAAArB,UAAAT,OAAA,WAIA4B,EAAAvH,UAAAkJ,WAAA3B,EAAAvH,UAAAiI,kBAGA9J,EAAAD,QAAAqJ,gCCtOA,IAAA4B,EAAA,CAiBAC,IAAA,SAAAC,EAAAC,EAAAC,GACA,IACAnE,EAAAzG,EADA6K,EAAA,KAIA,GAAAH,EAAA,CAKA,GAHAG,EAAAvF,SAAAC,cAAAmF,GAGAC,GAAA,iBAAAA,EACA,IAAA3K,KAAA2K,EAEAE,EAAA7K,GAAA2K,EAAA3K,GAKA,IAAAyG,EAAA,EAAwBA,EAAAC,UAAAC,OAA0BF,IAElDC,UAAAD,IAEAoE,EAAA/D,YACA,iBAAAJ,UAAAD,GAAAC,UAAAD,GAAAnB,SAAAwF,eAAApE,UAAAD,KAOA,OAAAoE,GAkBAE,SAAA,SAAAF,GAEA,IACApE,EADAsE,EAAAzF,SAAA0F,yBAIA,IAAAvE,EAAA,EAAoBA,EAAAC,UAAAC,OAA0BF,KAC9CoE,EAAAnE,UAAAD,KAIAsE,EAAAjE,YAAA,iBAAA+D,IAAAvF,SAAAwF,eAAAD,IAIA,OAAAE,GAqBArF,IAAA,SAAAuF,EAAAL,GACA,IAAAnE,EAGA,GAAAwE,aAAAC,KAAA,CAEA,IAAAzE,EAAA,EAAwBA,EAAAC,UAAAC,OAA0BF,IAElDC,UAAAD,IAEAwE,EAAAnE,YACA,iBAAAJ,UAAAD,GAAAC,UAAAD,GAAAnB,SAAAwF,eAAApE,UAAAD,KAKA,OAAAwE,EAGA,aAcAjE,OAAA,SAAAmE,GAEA,IACA1E,EADA2E,EAAA,EAIA,IAAA3E,EAAA,EAAoBA,EAAAC,UAAAC,OAA0BF,IAE9CC,UAAAD,IAAAC,UAAAD,GAAAI,YACAH,UAAAD,GAAAI,WAAAS,YAAAZ,UAAAD,MAAAC,UAAAD,IACA2E,IAKA,OAAA1E,UAAAC,OAAA,GAAAyE,IAAA1E,UAAAC,QAIA0E,MAAA,SAAAR,GACA,KAAAA,EAAAS,WACAT,EAAAvD,YAAAuD,EAAAS,aAMA9L,EAAAD,QAAAiL,gCCtKA,IAAA7F,EAAgBtF,EAAQ,GAcxB,SAAAkM,EAAA3G,GACA,IAAA4G,EAGA5G,KAAA,GAEAE,KAAA2G,QAAA,EAmBA7G,EAAA8G,SACA5G,KAAA4G,OAAA9G,EAAA8G,QAGA9G,EAAAI,WAAA,EAEAJ,EAAAG,QAAAH,EAAAG,UAAA,EAEAD,KAAApE,MAAAkE,EAAAlE,MAGAoE,KAAAwD,QAAA,EAKAnI,OAAAC,eAAA0E,KAAA,YACAlC,IAAA,SAAAlC,GAQA8K,EAAA9K,GAEAJ,IAAA,WACA,OAAAkL,KAIA1G,KAAA0G,SAAA5G,EAAA4G,UAAA,IAGA7G,EAAA/E,KAAAkF,KAAAF,GAKA2G,EAAAlK,UAAAlB,OAAAY,OAAA4D,EAAAtD,WACAkK,EAAAlK,UAAAkF,YAAAgF,EAGAA,EAAAlK,UAAArB,KAAA,wBAMAuL,EAAAlK,UAAAsK,MAAA,WACA,IAAA9G,EAAAC,KAEAA,KAAAwD,SACAxD,KAAAwD,QAAA,EAEA,SAAAsD,IACA/G,EAAA6G,OAAA7G,EAAAI,MAAAJ,EAAAnE,OACAmE,EAAA4G,QAAA7D,WAAAgE,EAAA/G,EAAA2G,UAFA,KAWAD,EAAAlK,UAAAqC,KAAA,WACAoB,KAAAwD,SACAxD,KAAAwD,QAAA,EACAuD,aAAA/G,KAAA2G,WAWAF,EAAAlK,UAAAyK,cAAA,SAAA7C,EAAAvI,GACAuI,EAAAY,UAAAnJ,GASA6K,EAAAlK,UAAAqK,OAAAH,EAAAlK,UAAAyK,cAIAtM,EAAAD,QAAAgM,gCCtIA,IAAA5G,EAAgBtF,EAAQ,GACxBoC,EAAgBpC,EAAQ,GAWxB,SAAA0M,EAAAnH,GACA,IACA6B,EADA5B,EAAAC,KA0DA,SAAAkH,EAAA7F,GACA,OAAAA,EAAA8F,MACA,KAAAxK,EAAAyK,KACArH,EAAAuE,WAAA,GACAvE,EAAAsH,OAAAtH,EAAAuE,WAAA,GAAAhD,QAEA,MACA,KAAA3E,EAAA2K,MACAvH,EAAAuE,WAAAvE,EAAAsH,OAAAxF,OAAA,GACA9B,EAAAsH,OAAAtH,EAAAuE,WAAA,GAAAhD,SAOA,KAvEAxB,KAAA,IAgBAI,UAAAJ,EAAAI,YAAA,EAMAL,EAAA/E,KAAAkF,KAAAF,GAEAE,KAAAqH,OAAAvH,EAAAuH,OAOArH,KAAAsE,WAAA,EAGAxE,EAAAuH,SAAAvH,EAAAuH,OAAA,GAAAE,OACAzH,EAAAuH,OAAA,GAAAlH,MAAAwC,UAAA/B,IAAA,QAEAd,EAAAuH,OAAA,GAAAlH,MAAAwC,UAAA/B,IAAA,WAGAd,EAAAuH,QAAAvH,EAAAuH,OAAA,IAAAvH,EAAAuH,OAAA,GAAAE,MAEAzH,EAAAuH,OAAA,GAAAlH,MAAAwC,UAAA/B,IAAA,kBAGAd,EAAAuH,QAAAvH,EAAAuH,OAAA,IAAAvH,EAAAuH,OAAA,GAAAE,MACAzH,EAAAuH,OAAA,GAAAlH,MAAAwC,UAAA/B,IAAA,SAIAd,EAAAuH,QACArH,KAAAY,IAAAO,MAAAnB,KAAAF,EAAAuH,QAoBA1F,EAAA,EAAoBA,EAAA3B,KAAAqH,OAAAxF,OAA4BF,IAChD3B,KAAAqH,OAAA1F,GAAA6F,aAAA,CACAC,QAAAP,IAGAlH,KAAAqH,OAAA1F,WAcAsF,EAAA1K,UAAAlB,OAAAY,OAAA4D,EAAAtD,WACA0K,EAAA1K,UAAAkF,YAAAwF,EAGAA,EAAA1K,UAAArB,KAAA,0BAMA+L,EAAA1K,UAAA+E,MAAA,WACAzB,EAAAtD,UAAA+E,MAAAxG,KAAAkF,MACAA,KAAAqH,OAAArH,KAAAsE,YAAAhD,SAMA2F,EAAA1K,UAAA8F,KAAA,WACArC,KAAAqH,OAAArH,KAAAsE,YAAAjC,QAGA3H,EAAAD,QAAAwM,gCChIA,IAAApH,EAAgBtF,EAAQ,GACxBsJ,EAAatJ,EAAQ,IAyBrB,SAAAmN,EAAA5H,GACA,IAAA6H,EAEA7H,KAAA,GAOAE,KAAA4H,KAAA,EAOA5H,KAAAuH,MAAA,EAOAvH,KAAA2B,MAAA,EAeA7B,EAAAM,MAAAI,SAAAC,cAAA,OACAX,EAAAM,MAAAM,UAAA,OAGAb,EAAA/E,KAAAkF,KAAAF,GAMAA,EAAA8H,OACA5H,KAAA4H,KAAA9H,EAAA8H,KACA5H,KAAAG,MAAAwC,UAAA/B,IAAA,OAAAd,EAAA8H,OAIA9H,EAAAyH,OACAvH,KAAAuH,MAAA,EACAvH,KAAAG,MAAAwC,UAAA/B,IAAA,SAIAZ,KAAA6H,QAAA,CACAT,KAAA5G,SAAAC,cAAA,OACA6G,MAAA9G,SAAAC,cAAA,QAGAT,KAAA6H,QAAAT,KAAA1G,UAAA,cACAV,KAAAG,MAAA6B,YAAAhC,KAAA6H,QAAAT,MAEApH,KAAA6H,QAAAP,MAAA5G,UAAA,eACAV,KAAAG,MAAA6B,YAAAhC,KAAA6H,QAAAP,OAGAxH,EAAAgI,QACAC,MAAAC,QAAAlI,EAAAgI,SACAhI,EAAAgI,MAAA,CAAAhI,EAAAgI,QAEA9H,KAAAiI,OAAA,IAAApE,EAAA,CAEAnD,UAAA,QACA+B,KAAA3C,EAAAgI,MACA5H,WAAA,IAEAF,KAAAG,MAAA6B,YAAAhC,KAAAiI,OAAA9H,QAGAH,KAAAG,MAAA6B,YAAAhC,KAAAI,QAEAuH,EAAAnH,SAAAC,cAAA,QACAC,UAAA,UACAV,KAAAG,MAAA6B,YAAA2F,GAIAD,EAAAnL,UAAAlB,OAAAY,OAAA4D,EAAAtD,WACAmL,EAAAnL,UAAAkF,YAAAiG,EAGAA,EAAAnL,UAAArB,KAAA,sBAQAwM,EAAAnL,UAAAuE,cAAA,CACAQ,MAAA,WACAtB,KAAAM,SAAAuB,QACA7B,KAAAM,SAAA,GAAAgB,UASAoG,EAAAnL,UAAA+E,MAAA,WACAtB,KAAAE,YACAF,KAAAK,OAAAgH,OAAArH,KAAAK,OAAAiE,YAAAnE,MAAAwC,UAAAT,OAAA,UACAlC,KAAAK,OAAAgH,OAAArH,KAAAK,OAAAiE,YAAAnE,MAAAwC,UAAAT,OAAA,OACArC,EAAAtD,UAAA+E,MAAAxG,KAAAkF,MACAA,KAAAK,OAAAiE,WAAAtE,KAAA2B,MACA3B,KAAAG,MAAAwC,UAAA/B,IAAA,UACAZ,KAAAG,MAAAwC,UAAA/B,IAAA,OACA,IAAAZ,KAAA2B,OAAA3B,KAAAK,OAAAgH,OAAA,IAAArH,KAAAK,OAAAgH,OAAA,GAAAE,MACAvH,KAAAK,OAAAgH,OAAA,GAAAlH,MAAAwC,UAAAT,OAAA,iBACAlC,KAAAK,OAAAgH,OAAA,GAAAlH,MAAAwC,UAAA/B,IAAA,kBACAZ,KAAAK,OAAAgH,OAAA,IACArH,KAAAK,OAAAgH,OAAA,GAAAlH,MAAAwC,UAAAT,OAAA,UAEAlC,KAAAG,MAAAwC,UAAA/B,IAAA,WAES,IAAAZ,KAAA2B,OAAA3B,KAAAK,OAAAgH,OAAA,GAAAE,OACTvH,KAAAK,OAAAgH,OAAA,GAAAlH,MAAAwC,UAAAT,OAAA,kBACAlC,KAAAK,OAAAgH,OAAA,GAAAlH,MAAAwC,UAAA/B,IAAA,iBACAZ,KAAAK,OAAAgH,OAAA,GAAAlH,MAAAwC,UAAAT,OAAA,UACAlC,KAAAG,MAAAwC,UAAA/B,IAAA,aAQA8G,EAAAnL,UAAA8F,KAAA,WACArC,KAAAK,OAAAgH,OAAArH,KAAAK,OAAAiE,YAAAnE,MAAAwC,UAAAT,OAAA,UACArC,EAAAtD,UAAA8F,KAAAvH,KAAAkF,OAKAtF,EAAAD,QAAAiN,gCClLA,IAAAQ,EAAwB3N,EAAQ,IAChCsF,EAAwBtF,EAAQ,GAChCoC,EAAwBpC,EAAQ,GAgChC,SAAA4N,EAAArI,GACA,IACA6H,EAAAvH,EAAAgI,EADArI,EAAAC,MAIAF,KAAA,IACAiB,OAAAjB,EAAAiB,QAAA,GAsBAjB,EAAAI,UAAAJ,EAAAI,YAAA,EAEAJ,EAAAG,QAAAH,EAAAG,UAAA,EAEAH,EAAAiB,OAAAmE,MAAApF,EAAAiB,OAAAmE,OAAA,WAA8DnF,EAAAc,QAE9DuH,EAAAtI,EAAAiB,OAAA0G,QACA3H,EAAAiB,OAAA0G,QAAA,SAAApG,GACA+G,GACAA,EAAAtN,KAAAkF,KAAAqB,GAEAA,EAAA8F,OAAAxK,EAAAC,MAAAyE,EAAA8F,OAAAxK,EAAAqB,OACAqD,EAAAzC,MAAA,EACAmB,EAAAc,SAKAqH,EAAApN,KAAAkF,KAAAF,GAGAE,KAAAG,MAAA6B,YAAAxB,SAAAC,cAAA,QACAT,KAAAG,MAAA6E,WAAArC,UAAA/B,IAAA,YACAZ,KAAAG,MAAA6E,WAAAhD,YAAAxB,SAAAC,cAAA,QAGAT,KAAAqI,QAAA7H,SAAAC,cAAA,OACAT,KAAAqI,QAAA3H,UAAA,SAGAV,KAAAsI,MAAAtI,KAAAqI,QAAArG,YAAAxB,SAAAC,cAAA,QACAT,KAAAsI,MAAA3F,UAAA/B,IAAA,QACAZ,KAAAsI,MAAAvD,UAAAjF,EAAAgI,OAAA,GAGAhI,EAAAyI,OACAvI,KAAAwI,MAAAxI,KAAAqI,QAAArG,YAAAxB,SAAAC,cAAA,QACAT,KAAAwI,MAAA9H,UAAA,QAAAZ,EAAAyI,OAGAZ,EAAAnH,SAAAC,cAAA,QACAC,UAAA,UAIAN,EAAAJ,KAAAI,MAAA2B,WAAAS,YAAAxC,KAAAI,OACAJ,KAAAG,MAAA6E,sBAAAhD,YAAAhC,KAAAqI,SACArI,KAAAG,MAAA6E,sBAAAhD,YAAA5B,GACAJ,KAAAG,MAAA6E,sBAAAhD,YAAA2F,GAKAQ,EAAA5L,UAAAlB,OAAAY,OAAAiM,EAAA3L,WACA4L,EAAA5L,UAAAkF,YAAA0G,EAGAA,EAAA5L,UAAArB,KAAA,sBAMAiN,EAAA5L,UAAA+E,MAAA,WACAtB,KAAAG,MAAAwC,UAAA/B,IAAA,UACAsH,EAAA3L,UAAA+E,MAAAxG,KAAAkF,MACAA,KAAAM,SAAA,IAAAN,KAAAM,SAAA,aAAAT,GACAG,KAAAM,SAAA,GAAAgB,SAQA6G,EAAA5L,UAAA8F,KAAA,WACArC,KAAAG,MAAAwC,UAAAT,OAAA,UACAgG,EAAA3L,UAAA8F,KAAAvH,KAAAkF,OAKAtF,EAAAD,QAAA0N,gCClJAzN,EAAAD,QAAiBF,EAAQ,IAGzBG,EAAAD,QAAA8B,UAAArB,KAAA,wDCQA,SAAAyE,IAwBAK,KAAAe,OAAA,GAIApB,EAAApD,UAAA,CAaA2E,YAAA,SAAAhG,EAAA2H,GAaA7C,KAAAe,OAAA7F,GAAA8E,KAAAe,OAAA7F,IAAA,GAEA8E,KAAAe,OAAA7F,GAAA4G,KAAAe,IAcA4F,KAAA,SAAAvN,EAAA2H,GAEA,IAAA9C,EAAAC,KAeAA,KAAAe,OAAA7F,GAAA8E,KAAAe,OAAA7F,IAAA,GAEA8E,KAAAe,OAAA7F,GAAA4G,KAAA,SAAA4G,IACA3I,EAAA4I,eAAAzN,EAAAwN,GACA7F,EAAA1B,MAAApB,EAAA6B,cAgBA4F,aAAA,SAAAoB,GACA,IAAA1N,EAcA,IAAAA,KAAA0N,EACAA,EAAApM,eAAAtB,IACA8E,KAAAkB,YAAAhG,EAAA0N,EAAA1N,KAeAyN,eAAA,SAAAzN,EAAA2H,GAiBA7C,KAAAe,OAAA7F,KAEA8E,KAAAe,OAAA7F,GAAA8E,KAAAe,OAAA7F,GAAA2N,OAAA,SAAAC,GAA0F,OAAAA,IAAAjG,IAE1F,IAAA7C,KAAAe,OAAA7F,GAAA2G,SAEA7B,KAAAe,OAAA7F,QAAA+I,KAwDA1C,KAAA,SAAArG,GACA,IACAyG,EADAN,EAAArB,KAAAe,OAAA7F,GAaA,GAAAmG,EAOA,IAAAM,EAAA,EAA4BA,EAAAN,EAAAQ,OAAsBF,IAQlDN,EAAAM,GAAAR,MAAAnB,KAAA+H,MAAAxL,UAAAwM,MAAAjO,KAAA8G,UAAA,MAQAjC,EAAApD,UAAAkF,YAAA9B,EAIAjF,EAAAD,QAAAkF,gCC7QA,IAAAiE,EAAuBrJ,EAAQ,IAE/ByO,EAAA,8BACAC,EAAA,qCAcA,SAAAC,EAAApJ,GACA,IAAAC,EAAAC,KAEAF,EAAAkJ,YACAA,EAAAlJ,EAAAkJ,WAEAlJ,EAAAmJ,kBACAA,EAAAnJ,EAAAmJ,iBAEAnJ,EAAAqJ,eACAH,EAAAlJ,EAAAqJ,cAQAnJ,KAAAoJ,YAAA,KAOApJ,KAAAqJ,aAAA,KAEAzF,EAAA9I,KAAAkF,KAAAF,GAEAE,KAAAkB,YAAA,sBAAAG,GACA,IAAA8C,EAAA9C,EAAA8C,MACAmF,EAAAvJ,EAAAqJ,YAEArJ,EAAAwJ,WAAApF,EAAAxC,OAEA2H,IAAAnF,EAAA1B,MAOA1C,EAAAwB,KAAA,SAAA4C,KAMA+E,EAAA3M,UAAAlB,OAAAY,OAAA2H,EAAArH,WACA2M,EAAA3M,UAAAkF,YAAAyH,EAGAA,EAAA3M,UAAArB,KAAA,2BAEAgO,EAAA3M,UAAA6I,KAAA,SAAAtF,GACAA,KAAA,GACA8D,EAAArH,UAAA6I,KAAAtK,KAAAkF,KAAAF,IASAoJ,EAAA3M,UAAA4I,QAAA,SAAArF,GACA8D,EAAArH,UAAA4I,QAAArK,KAAAkF,KAAAF,GAEAE,KAAAwJ,oBAAAxJ,KAAAqJ,aAEArJ,KAAAyJ,WACAzJ,KAAA0J,kBAAA1J,KAAAyJ,WAAA9H,MAEA3B,KAAA0J,kBAAA,GAQAR,EAAA3M,UAAAoN,UAAA,WACA3J,KAAAuJ,WAAAvJ,KAAAwJ,qBACAxJ,KAAAsE,WAAAtE,KAAA0J,oBASAR,EAAA3M,UAAAqN,aAAA,SAAAtF,GAGA,IAFA,IAAA3C,EAAA,EAEgBA,EAAA3B,KAAAyC,KAAAZ,OAA0BF,IAC1C3B,KAAAyC,KAAAd,GAAAkI,OAAA,EAIAvF,GAAA,IAAAA,IACAA,EAAAtE,KAAAyJ,WAAAzJ,KAAAyJ,WAAA9H,MAAA,GAGA3B,KAAAmF,QAAA,CAAkB1C,KAAAzC,KAAAyC,KAAA6B,gBAalB4E,EAAA3M,UAAAiI,kBAAA,SAAAL,EAAA1B,GACA,IAAAqH,EACAC,EACAC,EACAC,EAEA9F,EAAAS,OACAT,EAAA8D,OAAAlD,UAAAtC,EAAAqF,OAAA,GAEArF,EAAAoH,OACA1F,EAAAxB,UAAA/B,IA/IA,WAgJAuD,EAAA+F,SAAAxJ,UAAAuI,IAEA9E,EAAAxB,UAAAT,OAlJA,WAmJAiC,EAAA+F,SAAAxJ,UAAAsI,GAGA7E,EAAA0F,MAAApH,EAAAoH,MACA1F,EAAAvI,MAAA6G,EAAA7G,QAGAuI,EAAAoB,UAAA,GACAuE,EAAAtJ,SAAAC,cAAA,SACAsJ,EAAAvJ,SAAAC,cAAA,MACAuJ,EAAAxJ,SAAAC,cAAA,MACAwJ,EAAAzJ,SAAAC,cAAA,OAEAgC,EAAAoH,OACA1F,EAAAxB,UAAA/B,IAjKA,WAkKAqJ,EAAAvJ,UAAAuI,IAEA9E,EAAAxB,UAAAT,OApKA,WAqKA+H,EAAAvJ,UAAAsI,GAGAc,EAAA9H,YAAA+H,GACAC,EAAAhI,YAAAiI,GAEAD,EAAAtJ,UAAA,kBACAqJ,EAAA/H,YAAAgI,IAEAA,EAAAxJ,SAAAC,cAAA,OACAC,UAAA,QACAsJ,EAAAjF,UAAAtC,EAAAqF,OAAA,GACAiC,EAAA/H,YAAAgI,GAEA7F,EAAA+F,SAAAD,EACA9F,EAAA0F,MAAApH,EAAAoH,MACA1F,EAAAvI,MAAA6G,EAAA7G,MACAuI,EAAA8D,OAAA+B,EAEA7F,EAAAnC,YAAA8H,GAEArH,EAAAoH,QACA7J,KAAAoJ,YAAA3G,EACAzC,KAAAqJ,aAAAlF,EAAAxC,OAGAwC,EAAAS,OAAA,IAUAsE,EAAA3M,UAAAgN,WAAA,SAAA5H,GACA,IAAAxB,EASAwB,IAAA3B,KAAAqJ,eAEA,OAAArJ,KAAAqJ,cAAArJ,KAAAG,MAAAG,SAAAuB,SACA7B,KAAAyC,KAAAzC,KAAAqJ,cAAAQ,OAAA,GACA1J,EAAAH,KAAAmK,mBAAAnK,KAAAqJ,iBAEAlJ,EAAA+J,SAAAxJ,UAAAsI,EACA7I,EAAAwC,UAAAT,OA1NA,cA8NA/B,EAAAH,KAAAmK,mBAAAxI,MAEAxB,EAAA+J,SAAAxJ,UAAAuI,EACA9I,EAAAwC,UAAA/B,IAjOA,WAkOAT,EAAA0J,OAAA,GAGA7J,KAAAyC,KAAAd,GAAAkI,OAAA,EACA7J,KAAAoJ,YAAApJ,KAAAyC,KAAAd,GACA3B,KAAAqJ,aAAA1H,IAUAuH,EAAA3M,UAAA4N,mBAAA,SAAAxI,GACA,IAAArB,EAAAN,KAAAG,MAAAG,SAGA,OADAqB,GAAA3B,KAAAoK,WACApK,KAAA4H,MAAAjG,GAAA,EACArB,EAAAqB,GAGA,MAGAuH,EAAA3M,UAAAkJ,WAAAyD,EAAA3M,UAAAiI,kBAEA9J,EAAAD,QAAAyO,gCChQAxO,EAAAD,QAAiBF,EAAQ,IAGzBG,EAAAD,QAAA8B,UAAArB,KAAA,qDCFA,IAAA+C,EAAU1D,EAAQ,GAwBlBG,EAAAD,QAAA,SAAAS,GACA,IAAAmP,EAAA7J,SAAAC,cAAA,QAEA4J,EAAAC,IAAA,aACAD,EAAAE,KAAA,OAAArP,EAAA,IAAA+C,EAAAuM,QAAAC,OAAA,OACAjK,SAAAkK,KAAA1I,YAAAqI,kCC5BA3P,EAAAD,QAAA,CACAoC,UAAA,EACAE,IAAA,EACAG,MAAA,GACAE,OAAA,GACAuN,MAAA,GACAC,OAAA,GACAC,SAAA,GACAC,IAAA,GACAC,KAAA,GACA3D,KAAA,GACA4D,GAAA,GACA1D,MAAA,GACA2D,KAAA,GACAC,OAAA,GAEAC,IAAA,kCCbA,IAAAtL,EAAgBtF,EAAQ,GACxBoC,EAAgBpC,EAAQ,GAwCxB,SAAAqJ,EAAA9D,GAKAA,KAAA,GAkBAE,KAAAyJ,WAAA,KAOAzJ,KAAAoK,UAAA,KAOApK,KAAAyC,KAAA,GAOAzC,KAAAoL,KAAApL,KAAAqL,cAOArL,KAAA4H,KAAA,EAOA5H,KAAAsL,OAAA,EAOAtL,KAAAuL,OAAA,KAGAzL,EAAAsL,OAEApL,KAAAoL,KAAAtL,EAAAsL,MAQApL,KAAAwL,SAAA,KAEAxL,KAAAoL,OAAApL,KAAAyL,kBACA3L,EAAAY,WAAA,eAMAb,EAAA/E,KAAAkF,KAAAF,GAGAE,KAAAoF,KAAAtF,GA8BA8D,EAAArH,UAAAlB,OAAAY,OAAA4D,EAAAtD,WACAqH,EAAArH,UAAAkF,YAAAmC,EAGAA,EAAArH,UAAArB,KAAA,qBAEA0I,EAAArH,UAAA8O,cAAA,EACAzH,EAAArH,UAAAkP,gBAAA,EASA7H,EAAArH,UAAAiI,kBAAA,SAAAL,EAAA1B,GACA0B,EAAAY,UAAAtC,EAAA7G,OAUAgI,EAAArH,UAAAkJ,WAAA7B,EAAArH,UAAAiI,kBAQAZ,EAAArH,UAAAuE,cAAA,CAMA4K,WAAA,SAAArK,GAEArB,KAAAoL,OAAApL,KAAAqL,eAAAhK,EAAAsK,aACA3L,KAAA4L,KAAAvK,EAAAsK,YAAA,EAAAhP,EAAAqO,GAAArO,EAAAsO,MAIAjL,KAAAoL,OAAApL,KAAAyL,iBAAApK,EAAAwK,aACA7L,KAAA4L,KAAAvK,EAAAwK,YAAA,EAAAlP,EAAAyK,KAAAzK,EAAA2K,QASAG,QAAA,SAAApG,GACA,OAAAA,EAAA8F,MACA,KAAAxK,EAAAqO,GACA,KAAArO,EAAAsO,KACA,KAAAtO,EAAA2K,MACA,KAAA3K,EAAAyK,KACA,KAAAzK,EAAAiO,OACA,KAAAjO,EAAAkO,SACA,KAAAlO,EAAAoO,KACA,KAAApO,EAAAmO,IAEA9K,KAAA4L,KAAAvK,EAAA8F,MACA,MACA,KAAAxK,EAAAO,MAEA8C,KAAAe,OAAA,eAAAf,KAAAyJ,YAEAzJ,KAAAuB,KAAA,cAA6C4C,MAAAnE,KAAAyJ,WAAApI,aA8F7CuC,EAAArH,UAAA6I,KAAA,SAAAtF,GACA,IAsBAmC,EAAA6J,EAtBA/L,EAAAC,KACA+L,EAAA/L,KAAAI,MAAAE,SAAAuB,OAUAmK,EAAA,SAAA3K,GACArB,KAAAyC,OACA1C,EAAAwE,UAAAvE,MAGAD,EAAAgB,OAAA,eAEAhB,EAAAwB,KAAA,cAA6C4C,MAAAnE,KAAAqB,YA6D7C,QA7CA4C,IAAAnE,EAAAwL,QAAuCtL,KAAAsL,MAAAxL,EAAAwL,OAGvCxL,EAAAyL,SAA0BvL,KAAAuL,OAAAzL,EAAAyL,QAG1BzL,EAAA0L,WAA4BxL,KAAAwL,SAAA1L,EAAA0L,UAI5B1L,EAAA8G,SAQA5G,KAAAyF,WAAA3F,EAAA8G,QAIA9G,EAAA8H,OAWA5H,KAAA4H,KAAA9H,EAAA8H,MAGA9H,EAAAiB,QAEA1F,OAAAsB,KAAAmD,EAAAiB,QAAAC,QAAA,SAAA9F,GACA6E,EAAAgB,OAAA7F,GAAA,KACA6E,EAAAmB,YAAAhG,EAAA4E,EAAAiB,OAAA7F,MAKA8E,KAAA4H,OAAAmE,EAQA,IANAA,EAAA,IAEA/L,KAAAI,MAAA2E,UAAA,MAIA+G,EAAA,EAAsBA,EAAA9L,KAAA4H,KAAiBkE,KACvC7J,EAAAzB,SAAAC,cAAA,QACAkB,MAAAmK,EAEA7J,EAAAvB,UAAA,OAEAuB,EAAAb,iBAAA,QAAA4K,GACAhM,KAAAI,MAAA4B,YAAAC,GAIA,GAAAjC,KAAAwL,SAAA,CACA,GAAAxL,KAAAwL,SAAAS,QACA,OAGAjM,KAAAwL,SAAAhQ,IAAA,cAAA0Q,EAAAzJ,GACAyJ,EACAnM,EAAAgB,OAAA,eAMAhB,EAAAwB,KAAA,aAAA2K,IAGAzJ,IACA3C,EAAA2C,OACA1C,EAAAoF,QAAArF,GACAC,EAAAwL,QACAxL,EAAAwL,OAAAnG,KAAA,CACA+G,SAAApM,EAAAyL,SAAAY,SACAC,SAAAtM,EAAAyL,SAAA5D,KACAhM,MAAAmE,EAAAyL,SAAAd,KAAA3K,EAAAyL,SAAAc,OAIAvM,EAAAgB,OAAA,aAQAhB,EAAAwB,KAAA,oBAIKzB,EAAA2C,MACLzC,KAAAmF,QAAArF,IASA8D,EAAArH,UAAA4I,QAAA,SAAArF,GAGAA,EAAA2C,OAKAzC,KAAAyC,KArMA,SAAAA,GACA,IAAAqJ,EAYA,IAAAA,EAAA,EAAkBA,EAAArJ,EAAAZ,OAAmBiK,IAIrC,iBAFArJ,EAAAqJ,KAIArJ,EAAAqJ,GAAA,CACAlQ,MAAA6G,EAAAqJ,KAYA,OAAArJ,EAqKA8J,CAAAzM,EAAA2C,OAgBAzC,KAAAoK,UAAA,KAEApK,KAAAyJ,YACAzJ,KAAAwM,SAAAxM,KAAAyJ,YAGAzJ,KAAAuL,SACAvL,KAAAwL,SACAxL,KAAAuL,OAAAY,WAAAnM,KAAAwL,SAAAY,UACApM,KAAAuL,OAAAnG,KAAA,CACA+G,SAAAnM,KAAAwL,SAAAY,SACAC,SAAArM,KAAAwL,SAAA5D,KACAhM,MAAAoE,KAAAwL,SAAAd,KAAA1K,KAAAwL,SAAAc,MAIAtM,KAAAuL,OAAAnG,KAAA,CACA+G,SAAAnM,KAAAyC,KAAAZ,OACAwK,SAAArM,KAAA4H,KACAhM,MAAAkE,EAAAsK,WAAA,UAMAnG,IAAAnE,EAAAwE,YAAAtE,KAAAyC,KAAAZ,OAcA7B,KAAAsE,WAAAxE,EAAAwE,YAGAtE,KAAAyM,WAAA3M,EAAAsK,WAAA,IAyBAxG,EAAArH,UAAAkQ,WAAA,SAAA9K,GACA,IAAAwC,EAAA2H,EAAAY,EAAAC,EAAAC,EAkBA,GAAA5M,KAAAoK,YAAAzI,EAAA,CAOA,IALAgL,EAAA3M,KAAAoK,UAEApK,KAAAoK,UAAAwC,EAAAjL,EAGAmK,EAAA,EAAsBA,EAAA9L,KAAA4H,KAAiBkE,IAEvC3H,EAAAnE,KAAAI,MAAAE,SAAAwL,IACAY,EAAA1M,KAAAyC,KAAAd,KAKAwC,EAAA1B,KAAAiK,EACAvI,EAAAxC,QACA3B,KAAAyF,WAAAtB,EAAAuI,GAGAA,EAAAG,KACA1I,EAAAxB,UAAA/B,IAAA,QAEAuD,EAAAxB,UAAAT,OAAA,UAIAiC,EAAA1B,KAAA0B,EAAAxC,WAAAsC,EACAE,EAAAoB,UAAA,SACApB,EAAAS,OAAA,GAEAjD,IAoBA,OAhBA3B,KAAAe,OAAA,cAEAf,KAAAuB,KAAA,aAAoCoL,YAAAC,cAIpC5M,KAAAe,OAAA,gBACAf,KAAAuB,KAAA,eAAsC4C,UAItCnE,KAAAuL,QACAvL,KAAAuL,OAAAuB,SAAA9M,KAAAwL,SAAAxL,KAAAwL,SAAAd,KAAA1K,KAAAwL,SAAAc,IAAAtM,KAAAoK,YAIA,EAIA,UAYAxG,EAAArH,UAAAqP,KAAA,SAAAmB,GACA,IAAAhN,EAAAC,KACAgN,GAAA,EAaA,GAAAhN,KAAAyC,KAAAZ,OAIA,OAAAkL,GACA,KAAApQ,EAAAyK,KACA,GAAApH,KAAAoL,OAAApL,KAAAyL,gBAGA,MAFAuB,GAAA,EAIA,KAAArQ,EAAAqO,GACA,GAAAgC,GAAAhN,KAAAoL,OAAApL,KAAAqL,cACA,GAAArL,KAAAyJ,YAAAzJ,KAAAyJ,WAAA9H,MAAA,EACA3B,KAAAyJ,aAAAzJ,KAAAI,MAAA4E,WACAhF,KAAAyM,WAAAzM,KAAAoK,UAAA,GAEApK,KAAAuE,UAAAvE,KAAAyJ,WAAAwD,sBAEiB,GAAAjN,KAAAwL,SAAA,CACjB,GAAAxL,KAAAwL,SAAAS,QACA,OAGAjM,KAAAwL,SAAAhQ,IAAAuR,EAAA,SAAAb,EAAAzJ,EAAA6J,GACAJ,EACAnM,EAAAgB,OAAA,eAMAhB,EAAAwB,KAAA,aAAA2K,GAEyBzJ,GACzB1C,EAAAoF,QAAA,CAA0C1C,OAAA6B,WAAAgI,GAAA,IAAAA,IAAAvM,EAAA0J,WAAA9H,eAK1C3B,KAAAsL,OAEAtL,KAAA4L,KAAAjP,EAAAmO,KAEA9K,KAAAe,OAAA,aAEAf,KAAAuB,KAAA,YAA+CwL,YAAAzB,MAAAtL,KAAAsL,QAI/C,MACA,KAAA3O,EAAA2K,MACA,GAAAtH,KAAAoL,OAAApL,KAAAyL,gBAGA,MAFAuB,GAAA,EAIA,KAAArQ,EAAAsO,KACA,GAAA+B,GAAAhN,KAAAoL,OAAApL,KAAAqL,cACA,GAAArL,KAAAyJ,YAAAzJ,KAAAyJ,WAAA9H,MAAA3B,KAAAyC,KAAAZ,OAAA,EACA7B,KAAAyJ,aAAAzJ,KAAAI,MAAAoG,UACAxG,KAAAyM,WAAAzM,KAAAoK,UAAA,GAEApK,KAAAuE,UAAAvE,KAAAyJ,WAAAyD,kBAEiB,GAAAlN,KAAAwL,SAAA,CACjB,GAAAxL,KAAAwL,SAAAS,QACA,OAGAjM,KAAAwL,SAAAhQ,IAAAuR,EAAA,SAAAb,EAAAzJ,EAAA6J,GACAJ,EACAnM,EAAAgB,OAAA,eAMAhB,EAAAwB,KAAA,aAAA2K,GAEyBzJ,GACzB1C,EAAAoF,QAAA,CAA0C1C,OAAA6B,WAAAgI,GAAA,IAAAA,IAAAvM,EAAA0J,WAAA9H,eAK1C3B,KAAAsL,OAEAtL,KAAA4L,KAAAjP,EAAAoO,MAEA/K,KAAAe,OAAA,aAEAf,KAAAuB,KAAA,YAA+CwL,YAAAzB,MAAAtL,KAAAsL,QAI/C,MACA,KAAA3O,EAAAiO,OACA,GAAA5K,KAAAwL,SAAA,CACA,GAAAxL,KAAAwL,SAAAS,QACA,OAkBA,YAfAjM,KAAAwL,SAAAhQ,IAAAuR,EAAA,SAAAb,EAAAzJ,EAAA6J,GACAJ,EACAnM,EAAAgB,OAAA,eAMAhB,EAAAwB,KAAA,aAAA2K,GAEqBzJ,GACrB1C,EAAAoF,QAAA,CAAsC1C,OAAA6B,WAAAgI,GAAA,MAMtCtM,KAAAoK,UAAApK,KAAA4H,KAEA5H,KAAAyM,WAAA,GAGAzM,KAAAyM,WAAAzM,KAAAoK,UAAApK,KAAA4H,KAAA,GAGA5H,KAAAuE,UAAAvE,KAAAI,MAAA4E,YACA,MACA,KAAArI,EAAAkO,SACA,GAAA7K,KAAAwL,SAAA,CACA,GAAAxL,KAAAwL,SAAAS,QACA,OAGAjM,KAAAwL,SAAAhQ,IAAAuR,EAAA,SAAAb,EAAAzJ,EAAA6J,GACA,IAAAhI,EAEA4H,EACAnM,EAAAgB,OAAA,eAMAhB,EAAAwB,KAAA,aAAA2K,GAEqBzJ,IAErB6B,EADAgI,GAAA,IAAAA,EACAA,EAEA7J,EAAAZ,OAAA9B,EAAA6H,KAAAnF,EAAAZ,OAAA,EAAA9B,EAAA6H,KAAA,EAGA7H,EAAAoF,QAAA,CAAsC1C,OAAA6B,kBAGtC,MAGAtE,KAAAyC,KAAAZ,OAAA7B,KAAA4H,MAEA5H,KAAAoK,UAAApK,KAAAyC,KAAAZ,OAAA,EAAA7B,KAAA4H,KAEA5H,KAAAyM,WAAAzM,KAAAyC,KAAAZ,OAAA7B,KAAA4H,MAGA5H,KAAAyM,WAAAzM,KAAAoK,UAAApK,KAAA4H,KAAA,GAEA5H,KAAAuE,UAAAvE,KAAAI,MAAAoG,YAGAxG,KAAAuE,UAAAvE,KAAAI,MAAAE,SAAAN,KAAAyC,KAAAZ,OAAA,IAEA,MACA,KAAAlF,EAAAoO,KACA,GAAA/K,KAAAwL,SAAA,CACA,GAAAxL,KAAAwL,SAAAS,QACA,OAGAjM,KAAAwL,SAAAhQ,IAAAuR,EAAA,SAAAb,EAAAzJ,EAAA6J,GACAJ,EACAnM,EAAAgB,OAAA,eAMAhB,EAAAwB,KAAA,aAAA2K,GAEqBzJ,GACrB1C,EAAAoF,QAAA,CAAsC1C,OAAA6B,WAAAgI,GAAA,MAGtC,MAEAtM,KAAAyM,WAAA,GACAzM,KAAAuE,UAAAvE,KAAAI,MAAA4E,YACA,MACA,KAAArI,EAAAmO,IACA,GAAA9K,KAAAwL,SAAA,CACA,GAAAxL,KAAAwL,SAAAS,QACA,OAGAjM,KAAAwL,SAAAhQ,IAAAuR,EAAA,SAAAb,EAAAzJ,EAAA6J,GACA,IAAAhI,EAEA4H,EACAnM,EAAAgB,OAAA,eAMAhB,EAAAwB,KAAA,aAAA2K,GAEqBzJ,IAErB6B,EADAgI,GAAA,IAAAA,EACAA,EAEA7J,EAAAZ,OAAA9B,EAAA6H,KAAAnF,EAAAZ,OAAA,EAAA9B,EAAA6H,KAAA,EAGA7H,EAAAoF,QAAA,CAAsC1C,OAAA6B,kBAGtC,MAEAtE,KAAAyC,KAAAZ,OAAA7B,KAAA4H,MACA5H,KAAAyM,WAAAzM,KAAAyC,KAAAZ,OAAA7B,KAAA4H,MACA5H,KAAAuE,UAAAvE,KAAAI,MAAAoG,YAGAxG,KAAAuE,UAAAvE,KAAAI,MAAAE,SAAAN,KAAAyC,KAAAZ,OAAA,MAkBA+B,EAAArH,UAAAgI,UAAA,SAAAJ,GACA,IAAAgJ,EAAAnN,KAAAyJ,WASA,SAAAtF,GAAAgJ,IAAAhJ,KAWA,OAAAgJ,IAQAA,EAAAxK,UAAAT,OAAA,SAIAlC,KAAAe,OAAA,cASAf,KAAAuB,KAAA,aAAwC4C,MAAAgJ,KAIxCnN,KAAAyJ,WAAAtF,EAEAnE,KAAAyJ,WAAAhH,KAAAzC,KAAAyC,KAAAzC,KAAAyJ,WAAA9H,OAGAwC,EAAAxB,UAAA/B,IAAA,SAIAZ,KAAAe,OAAA,eAUAf,KAAAuB,KAAA,cAAqC4L,QAAAC,MAAAjJ,IAIrCnE,KAAAe,OAAA,gBASAf,KAAAuB,KAAA,eAAsC4C,WAGtC,IAkBAP,EAAArH,UAAAiQ,SAAA,SAAArI,GAMA,QAAAA,IACAA,IAAAnE,KAAAyJ,aACAzJ,KAAAyJ,WAAA,MAGAtF,EAAAxB,UAAAT,OAAA,SAIAlC,KAAAe,OAAA,cASAf,KAAAuB,KAAA,aAAoC4C,WAGpC,IAYAP,EAAArH,UAAA+H,WAAA,SAAA3C,GACA,IAAAyI,EAAApK,KAAAoK,WAAA,EAeAzI,GAAAyI,EAAApK,KAAA4H,MAEAjG,IAAA3B,KAAAyC,KAAAZ,OAAA,EAAAF,EAAA3B,KAAAyC,KAAAZ,OAAA,EAEA7B,KAAAyM,WAAA9K,EAAA3B,KAAA4H,KAAA,GACA5H,KAAAuE,UAAAvE,KAAAI,MAAAoG,YACK7E,EAAAyI,GAELzI,IAAA,EAAAA,EAAA,EAEA3B,KAAAyM,WAAA9K,GACA3B,KAAAuE,UAAAvE,KAAAI,MAAA4E,cAGA,OAAAhF,KAAAoK,WAEApK,KAAAyM,WAAA,GAEAzM,KAAAuE,UAAAvE,KAAAI,MAAAE,SAAAqB,EAAAyI,MAWAxG,EAAArH,UAAA8Q,SAAA,SAAAlJ,EAAA0F,GAiBAA,EACA1F,EAAAxB,UAAA/B,IAAA,QAEAuD,EAAAxB,UAAAT,OAAA,QAIAiC,EAAA1B,KAAAoK,KAAAhD,GAKAnP,EAAAD,QAAAmJ,gCCpnCA,IAAA/D,EAAgBtF,EAAQ,GACxBoC,EAAgBpC,EAAQ,GAWxB,SAAAsJ,EAAA/D,GACA,IAAAC,EAAAC,KAGAF,KAAA,GAMAE,KAAAsE,WAAA,EAkBAtE,KAAAyC,KAAA,GAEA5C,EAAA/E,KAAAkF,KAAAF,GAEAE,KAAAoF,KAAAtF,GAGAE,KAAAkB,YAAA,mBAAAG,GACA,OAAAA,EAAA8F,MACA,KAAAxK,EAAA2K,MACAvH,EAAAO,SAAAuB,QAAA9B,EAAAuE,WAAAvE,EAAAO,SAAAuB,OAAA,GACA9B,EAAAO,WAAAP,EAAAuE,YAAAhD,QAEA,MACA,KAAA3E,EAAAyK,KACArH,EAAAO,SAAAuB,QAAA9B,EAAAuE,WAAA,GACAvE,EAAAO,WAAAP,EAAAuE,YAAAhD,QAEA,MACA,KAAA3E,EAAAC,KAEAmD,EAAAM,SACAN,EAAAM,OAAAiB,QACAvB,EAAAkF,aACAlF,EAAAM,OAAAkE,UAAAxE,EAAAkF,iBASApB,EAAAtH,UAAAlB,OAAAY,OAAA4D,EAAAtD,WACAsH,EAAAtH,UAAAkF,YAAAoC,EAGAA,EAAAtH,UAAArB,KAAA,uBAuDA2I,EAAAtH,UAAA6I,KAAA,SAAAtF,GAMA,IALA,IAEAmC,EAAAqL,EAAA3L,EAFA5B,EAAAC,KACAyC,EA/CA,SAAAA,GACA,IAAAd,EAAAM,EAYA,IAAAN,EAAA,EAAoBA,EAAAc,EAAAZ,OAAqBF,IAIzC,iBAFAM,EAAAQ,EAAAd,IAIAM,aAAApC,GAAAoC,aAAAsL,YACA9K,EAAAd,GAAA,CACA/F,MAAAqG,EACAuL,MAAA,GAGA/K,EAAAd,GAAA6L,MAAA,EAIA/K,EAAAd,GAAA,CACA/F,MAAA6G,EAAAd,GACA6L,MAAA,GAKA,OAAA/K,EAWA8J,CAAAzM,EAAA2C,MAIAzC,KAAAG,MAAA6E,YACAhF,KAAAG,MAAAqC,YAAAxC,KAAAG,MAAA6E,YAQA,SAAAyI,IACA1N,EAAAuE,WAAAtE,KAAA2B,MAGA,IATA3B,KAAAyC,OASAd,EAAA,EAAoBA,EAAAc,EAAAZ,OAAqBF,IAGzC,iBAFAM,EAAAQ,EAAAd,IAEA/F,QACA0R,EAAA9M,SAAAC,cAAA,QACAiN,YAAAzL,EAAArG,MACAqG,EAAAvB,YAAmC4M,EAAA5M,UAAAuB,EAAAvB,WACnCV,KAAAG,MAAA6B,YAAAsL,IACSrL,EAAArG,iBAAA2R,YAITtL,EAAAuL,MACAF,EAAA9M,SAAAC,cAAA,OACAwB,EAAAvB,YAAuC4M,EAAA5M,UAAAuB,EAAAvB,WACvC4M,EAAAtL,YAAAC,EAAArG,OACAoE,KAAAG,MAAA6B,YAAAsL,IAGAtN,KAAAG,MAAA6B,YAAAC,EAAArG,OAESqG,EAAArG,iBAAAiE,GAGToC,EAAArG,MAAA2E,WAAA,EAGA0B,EAAArG,MAAA+F,MAAA3B,KAAAM,SAAAuB,OAGAI,EAAArG,MAAAsF,YAAA,QAAAuM,GAGAxL,EAAAuL,MAEAF,EAAA9M,SAAAC,cAAA,OACAwB,EAAAvB,YAAuC4M,EAAA5M,UAAAuB,EAAAvB,WACvC4M,EAAAtL,YAAAC,EAAArG,MAAAuE,OACAH,KAAAG,MAAA6B,YAAAsL,GACAtN,KAAAM,SAAAwB,KAAAG,EAAArG,OACAqG,EAAArG,MAAAyE,OAAAL,MAGAA,KAAAY,IAAAqB,EAAArG,SAGA0R,EAAA9M,SAAAC,cAAA,OACAwB,EAAAvB,YAAmC4M,EAAA5M,UAAAuB,EAAAvB,WACnCV,KAAAG,MAAA6B,YAAAsL,KAMA5S,EAAAD,QAAAoJ,gCC7MA,IAAAhE,EAAgBtF,EAAQ,GACxBoC,EAAgBpC,EAAQ,GAYxB,SAAAoT,EAAA7N,IAEAA,KAAA,IAYAM,MAAAI,SAAAC,cAAA,OACAX,EAAAM,MAAAM,UAAA,OAOAV,KAAA4N,KAAA,EAOA5N,KAAA6N,WAAA,EAOA7N,KAAA8N,WAAA,EAOA9N,KAAA+N,YAAA,EAOA/N,KAAAuL,OAAA,KAEA1L,EAAA/E,KAAAkF,KAAAF,GAEAE,KAAAG,MAAA6B,YAAAhC,KAAAI,OAGAJ,KAAAoF,KAAAtF,GAIA6N,EAAApR,UAAAlB,OAAAY,OAAA4D,EAAAtD,WACAoR,EAAApR,UAAAkF,YAAAkM,EAGAA,EAAApR,UAAArB,KAAA,4BAQAyS,EAAApR,UAAAuE,cAAA,CAMA2G,QAAA,SAAApG,GACA,OAAAA,EAAA8F,MACA,KAAAxK,EAAAqO,GACA,KAAArO,EAAAsO,KACAjL,KAAA4L,KAAAvK,EAAA8F,QAIAuE,WAAA,SAAArK,GAEArB,KAAA4L,KAAAvK,EAAAsK,YAAA,EAAAhP,EAAAqO,GAAArO,EAAAsO,QAoBA0C,EAAApR,UAAAqP,KAAA,SAAAmB,GACA,IAAAtC,EAAAuD,OAAAvD,OACAwD,EAAAjO,KAAA8N,WAAA9N,KAAA6N,WAGA,GAAAI,EAAA,EACA,OAAAlB,GACA,KAAApQ,EAAAsO,KACA,GAAAjL,KAAA+N,YAAA/N,KAAA4N,KAAAnD,EAAA,IAAAwD,EAKA,OAJAjO,KAAAuL,OAAAuB,UAAAmB,GACAjO,KAAAI,MAAA8N,MAAAC,IAAAF,EAAA,UACAjO,KAAAuB,KAAA,YAA2CwL,cAK3C/M,KAAA+N,aAAAK,KAAAC,KAAArO,KAAA4N,KAAAnD,EAAA,KAEAzK,KAAAuL,QACAvL,KAAAuL,OAAAuB,UAAA9M,KAAA+N,aAEA/N,KAAAI,MAAA8N,MAAAC,IAAAnO,KAAA+N,YAAA,KACA,MACA,KAAApR,EAAAqO,GACA,GAAAhL,KAAA+N,YAAA/N,KAAA4N,KAAAnD,EAAA,MAKA,OAJAzK,KAAAuL,OAAAuB,SAAA,GACA9M,KAAAI,MAAA8N,MAAAC,IAAA,WACAnO,KAAAuB,KAAA,YAA2CwL,cAI3C/M,KAAA+N,aAAAK,KAAAC,KAAArO,KAAA4N,KAAAnD,EAAA,KAEAzK,KAAAuL,QACAvL,KAAAuL,OAAAuB,UAAA9M,KAAA+N,aAEA/N,KAAAI,MAAA8N,MAAAC,IAAAnO,KAAA+N,YAAA,UAIA/N,KAAAuB,KAAA,YAA+BwL,eAU/BY,EAAApR,UAAA6I,KAAA,SAAAtF,GAEAA,KAAA,GAEAE,KAAA6N,WAAA7N,KAAAI,MAAAkO,aACAtO,KAAA8N,WAAA9N,KAAAG,MAAAmO,aACAtO,KAAA+N,YAAA,EACA/N,KAAAI,MAAA8N,MAAAC,IAAAnO,KAAA+N,YAAA,KAEAjO,EAAAyL,SACAvL,KAAAuL,OAAAzL,EAAAyL,QAGAzL,EAAA8N,OACA5N,KAAA4N,KAAA9N,EAAA8N,MAGA5N,KAAAuL,QACAvL,KAAAuL,OAAAnG,KAAA,CACA+G,SAAAnM,KAAA6N,WACAxB,SAAArM,KAAA8N,WACAlS,MAAAoE,KAAA+N,eAKArT,EAAAD,QAAAkT,gCCtMA,IAAA1P,EAAU1D,EAAQ,GAElB0D,EAAAsQ,QAAchU,EAAQ,IAGtB0D,EAAAwK,KAAA,kBAEAxK,EAAAsQ,QAAAC,KAAA,CAAsBtT,KAAAuT,OAAAC,KAAAC,YAAAC,UAAuC,SAAA1C,GAG7DjO,EAAA4Q,MAAA,CACAtH,KAAkBhN,EAAQ,IAC1BwE,KAAkBxE,EAAQ,IAC1BuU,KAAkBvU,EAAQ,IAC1BwU,IAAiBxU,EAAQ,IACzByU,IAAiBzU,EAAQ,KAGzB0D,EAAA2G,0CClBA,IAAA3G,EAAa1D,EAAQ,GACrBwG,EAAaxG,EAAQ,IAIrBkU,OAAAC,KAAAD,OAAApO,OAAA4O,gBAAAR,OAAAxQ,GAGA1D,EAAQ,IAGRA,EAAQ,IAGRA,EAAQ,GAARA,CAAyB,OAGzBA,EAAQ,IAGRA,EAAQ,GAARA,CAAyB,OAOzB0D,EAAAiR,SAAA,MAKAjR,EAAA2G,MAAA,WAIA6J,OAAAC,KAAA5T,KAAA,cAWAmD,EAAAd,KAAA,WACAc,EAAA8C,OAAA,SACA9C,EAAAsD,KAAA,QAGAmN,KAAA5T,KAAA,SAIAiG,EAAAyN,KAAA,SAAAnN,GAEAb,SAAA2O,KAAAC,aAAA,WAAAnR,EAAAiR,UAEAR,KAAA9J,MACA3G,EAAA8C,OAAA,SAEA9C,EAAAsD,KAAA,WAGAmN,KAAAjG,KAAA,kBAEAxK,EAAA8C,OAAAM,EAAA+J,OAEAnN,EAAAsD,KAAAF,EAAA+J,KAAA/J,MAaAN,EAAAsO,YAAA,SAAAhO,GACAA,EAAAiO,kBAMAjU,OAAAsB,KAAAoE,GAAAC,QAAA,SAAA9F,GACAuT,OAAArN,iBAAAlG,EAAA6F,EAAA7F,MAaAR,EAAAD,QAAAwD,gCC1GAvD,EAAAD,QAAA,CAQAsI,MAAA,SAAAC,GACA,IAAAP,EAAA,GAWA,OARAO,EAAAuM,MAAA,KAAAvO,QAAA,SAAAwO,GAGA,KAFAA,IAAAD,MAAA,MAEA1N,SACAY,EAAA+M,EAAA,IAAAC,mBAAAD,EAAA,OAIA/M,GAWAiN,UAAA,SAAAC,GACA,IAAAlN,EAAA,GAMA,OAJApH,OAAAsB,KAAAgT,GAAA3O,QAAA,SAAA9F,GACAuH,EAAAX,KAAA5G,EAAA,IAAA0U,mBAAAD,EAAAzU,OAGAuH,EAAAoN,KAAA,qCClCAnV,EAAAD,QAAA,CACAqV,iBAAA,GACAC,cAAA,iCCJA,IAAA9R,EAAU1D,EAAQ,GAIlBG,EAAAD,QAAA,CACAuV,iBAAA,SAAA3O,GAQApD,EAAA8C,OAAA,QAEA9C,EAAAsD,KAAA,MAAAF,IAiBAmN,KAAA,SAAAnN,GAcApD,EAAA8C,OAAAM,EAAA+J,OAEAnN,EAAAsD,KAAAF,EAAA+J,KAAA/J,IAoCA4O,OAAA,SAAA5O,GASApD,EAAA8C,OAAAM,EAAA+J,OAEAnN,EAAAsD,KAAAF,EAAA+J,KAAA/J,IAsBA6K,MAAA,SAAA7K,KAoBAoG,QAAA,SAAApG,GACA,IAKAe,EALAkB,EAAArF,EAAAkE,WACA+N,EAAA,CACA/I,KAAA9F,EAAA8O,QACAvR,MAAA,GAiBAyC,EAAA+O,UAA+BF,EAAA/I,MAAA,KAC/B9F,EAAAgP,SAA+BH,EAAA/I,MAAA,KAC/B9F,EAAAiP,WAA+BJ,EAAA/I,MAAA,MAQ/B/E,EAAAkB,EAAAlB,kBAGAA,IAAAkB,IAEAlB,EAAArB,OAAAM,EAAA+J,OAEAhJ,EAAAb,KAAAF,EAAA+J,KAAA8E,EAAA7O,IAMA6O,EAAAtR,MACAwD,EAAA7B,WACA6B,EAAA/B,QACA+B,EAAA/B,OAAAU,OAAAM,EAAA+J,OAEAhJ,EAAA/B,OAAAkB,KAAAF,EAAA+J,KAAA8E,EAAA7O,IAKA6O,EAAAtR,OAEA0E,EAAAvC,OAAAM,EAAA+J,OAEA9H,EAAA/B,KAAAF,EAAA+J,KAAA8E,EAAA7O,GAIAA,EAAAzC,MAEAX,EAAA8C,OAAAM,EAAA+J,OAEAnN,EAAAsD,KAAAF,EAAA+J,KAAA8E,EAAA7O,KAoBAkP,SAAA,SAAAlP,GACA,IAAAiC,EAAArF,EAAAkE,WAcAmB,EAAAlB,iBAAAkB,EAAAlB,kBAAAkB,GAEAA,EAAAlB,gBAAArB,OAAAM,EAAA+J,OAEA9H,EAAAlB,gBAAAb,KAAAF,EAAA+J,KAAA/J,IAmEAqK,WAAA,SAAArK,GACA,IAAAiC,EAAArF,EAAAkE,WAcAmB,EAAAlB,iBAAAkB,EAAAlB,kBAAAkB,GAEAA,EAAAlB,gBAAArB,OAAAM,EAAA+J,OAEA9H,EAAAlB,gBAAAb,KAAAF,EAAA+J,KAAA/J,GAKAA,EAAAzC,MAEA0E,EAAAvC,OAAAM,EAAA+J,OAEA9H,EAAA/B,KAAAF,EAAA+J,KAAA/J,mCChVA,IAAAb,SAAAgQ,gBAAA7N,UAAA,CACA,IAAApG,EAAAwL,MAAAxL,UACAgG,EAAAhG,EAAAgG,QACAwG,EAAAxM,EAAAwM,MACAjH,EAAAvF,EAAAuF,KACAQ,EAAA/F,EAAA+F,OACAuN,EAAAtT,EAAAsT,KAEApB,OAAAgC,aAAA,SAAAC,GAEA,GADA1Q,KAAA2Q,SAAAD,EACAA,EAAAhQ,YAAAV,KAAA4Q,YAAA,CAEA,GADA5Q,KAAA4Q,YAAAF,EAAAhQ,WACAV,KAAA4Q,YAAoC,OACpC,IACAjW,EADAkW,EAAA7Q,KAAA4Q,YAAAE,QAAA,iBAAAvB,MAAA,OAEA,IAAA5U,EAAA,EAAuBA,EAAAkW,EAAAhP,OAAoBlH,IAC3CmH,EAAAhH,KAAAkF,KAAA6Q,EAAAlW,MAKA8T,OAAAgC,aAAAlU,UAAA,CACAqE,IAAA,SAAAmQ,GACA/Q,KAAAgR,SAAAD,KACAjP,EAAAhH,KAAAkF,KAAA+Q,GACA/Q,KAAA2Q,SAAAjQ,UAAAqI,EAAAjO,KAAAkF,KAAA,GAAA6P,KAAA,OAGAmB,SAAA,SAAAD,GACA,WAAAxO,EAAAzH,KAAAkF,KAAA+Q,IAGA9O,KAAA,SAAAN,GACA,OAAA3B,KAAA2B,IAAA,MAGAO,OAAA,SAAA6O,GACA,IAAApW,EAAA4H,EAAAzH,KAAAkF,KAAA+Q,IACA,IAAApW,IAGA2H,EAAAxH,KAAAkF,KAAArF,EAAA,GACAqF,KAAA2Q,SAAAjQ,UAAAqI,EAAAjO,KAAAkF,KAAA,GAAA6P,KAAA,OAGAoB,SAAA,WACA,OAAApB,EAAA/U,KAAAkF,KAAA,MAGAkR,OAAA,SAAAH,GAMA,OALA/Q,KAAAgR,SAAAD,GAGA/Q,KAAAkC,OAAA6O,GAFA/Q,KAAAY,IAAAmQ,GAIA/Q,KAAAgR,SAAAD,KAIA1V,OAAAC,eAAAkK,QAAAjJ,UAAA,aACAf,IAAA,WACA,WAAAiT,OAAAgC,aAAAzQ,wCC9DA,IAAA/B,EAAc1D,EAAQ,GACtBiQ,EAAcjQ,EAAQ,IAItB0D,EAAAuM,UAAAvM,EAAA+E,MAAAmO,eAAA3G,EAAAwD,OAAAvD,SAAAD,EAAA,KAGAvM,EAAAuM,QAAA4G,YAAAnT,EAAAuM,QAAAC,QAAAxM,EAAAuM,QAAA6G,SAAApT,EAAAuM,QAAA8G,aACArT,EAAAuM,QAAA+G,WAAAtT,EAAAuM,QAAAgH,OAAAvT,EAAAuM,QAAAiH,UAAAxT,EAAAuM,QAAAkH,0CCVAhX,EAAAD,QAAA,CACAkX,IAAA,CAEAlH,OAAA,IACA+G,MAAA,IAEAH,SAAA,GACAC,YAAA,GACAI,WAAA,GACAD,UAAA,IAKAG,IAAA,CAEAnH,OAAA,IACA+G,MAAA,IAEAH,SAAA,GACAC,YAAA,GACAI,WAAA,GACAD,UAAA,IAKAI,IAAA,CAEApH,OAAA,IACA+G,MAAA,KAEAH,SAAA,GACAC,YAAA,GACAI,WAAA,GACAD,UAAA,IAKAK,KAAA,CAEArH,OAAA,KACA+G,MAAA,KAEAH,SAAA,GACAC,YAAA,GACAI,WAAA,GACAD,UAAA,mCC/CA,IAEAM,EAFA9T,EAAU1D,EAAQ,IAQlBwX,EAAAvR,SAAAC,cAAA,SACA6J,IAAA,aACAyH,EAAAxH,KAAAkE,OAAAC,KAAAsD,MAAAC,KAAAhU,EAAAuM,QAAAC,OAAA,OACAjK,SAAAkK,KAAA1I,YAAA+P,GAIArX,EAAAD,QAAAsX,gCCfA,IAAApS,EAAcpF,EAAQ,IACtB2X,EAAc3X,EAAQ,IACtB4X,EAAA,IAAAxS,EAWA,SAAAyS,EAAA3P,GACA,IAAA8L,EAAA,IAAA2D,EAAAzP,GAOA,OAJAgM,OAAAF,QAAAE,OAAA4D,EAAA9D,UACAE,OAAA6D,SAAA/D,EAAA+D,SACA7D,OAAA8D,SAAAhE,EAAAgE,SAEAhE,EAOA4D,EAAAK,gBAAA,KAcAL,EAAA3D,KAAA,SAAA1O,EAAA+C,GACA,IAAA4P,EAgBA,OAJA3S,EAAA4S,IAAA5S,EAAA4S,KAAA,OACA5S,EAAAmS,KAAAnS,EAAAmS,MAAA,OAGAnS,EAAA5E,OAAAiX,EAAAK,iBAEAJ,IACAvP,EAAA,OAEA,KAIA4P,EAAA,IAAAE,gBAEAC,OAAA,WAGA,IAGAR,EAFAS,KAAA9P,MAAA0P,EAAAK,eAGAjQ,EAAA,MAGAsP,EAAApR,OAAA,SAEAoR,EAAA5Q,KAAA,QAES,MAAA2K,GACTuG,EAAAM,QAAA7G,KAIAuG,EAAAO,UAAAP,EAAAM,QAAA,SAAA7G,GACAkG,IACAvP,EAAAqJ,GAGAiG,EAAApR,OAAA,UAEAoR,EAAA5Q,KAAA,QAAA2K,IAIAuG,EAAAQ,KAAA,MAAAnT,EAAAmS,KAAA,IAAAnS,EAAA5E,KAAA,IAAA4E,EAAA4S,KAAA,GACAD,EAAAS,KAAA,OAEA,IAKAxY,EAAAD,QAAA0X,6DCpGA,SAAAD,QAAApS,QACA,IAAA2C,KAAA0Q,KAGArT,eAAA,GACA2C,KAAA3C,OAAA2C,MAAA,GACAA,KAAA,IAAAA,KAAA,QAGA0Q,KAAArT,OAAAqT,KASAnT,KAAAuO,QAAA,SAAA6E,GACA,OAAA3Q,KAAA,IAAA2Q,OAYApT,KAAAsS,SAAA,SAAAe,EAAAD,GACA,OAAA3Q,KAAA4Q,IAAA5Q,KAAA4Q,GAAAD,OAaApT,KAAAuS,SAAA,SAAAa,MAAAE,OAAA1X,OAIA,IAAAQ,EAAAmX,WAQA,OAAA9Q,MAAA0Q,MAAA1Q,KAAA,IAAA2Q,QACAG,WAAAC,KAAA,OAAA5X,MAAA,KAAiDuX,KAAAG,QAEjD,kBAAAC,aACAA,wBAIA9Q,KAAA,IAAA2Q,OAAAG,aAIA,IAAA3X,MAAAwX,MAAAE,QAMApB,QAAA3V,UAAAkF,YAAAyQ,QAIAxX,OAAAD,QAAAyX,sCCvFA,IAeAuB,EAdAC,EAAoBnZ,EAAQ,GAC5B0D,EAAoB1D,EAAQ,GAC5B+I,EAAA,IAAAoQ,EAAA,CAA8BvT,MAAAK,SAAAmT,eAH9B,cAIA1M,EAAoB1M,EAAQ,GAC5B2O,EAAoB3O,EAAQ,IAC5BqZ,EAAoBrZ,EAAQ,IAC5BuJ,EAAoBvJ,EAAQ,GAC5BsZ,EAAoBtZ,EAAQ,IAC5BmL,EAAoBnL,EAAQ,GAC5BoC,EAAoBpC,EAAQ,GAC5BuZ,EAAArF,OAAAC,KAAAqF,QAAAC,GACAC,EAAoB1Z,EAAQ,IAC5BkM,EAAoBlM,EAAQ,GAC5BoT,EAAoBpT,EAAQ,IAI5BkZ,EAAA/N,EAAAC,IACA,MACA,CAAKjF,UAAA,mBACLgF,EAAAC,IAAA,OAAoBjF,UAAA,UAAoB,MAIxCzC,EAAAiW,QAAAzF,OAAAC,KAAAqF,QAAAG,QAEAjW,EAAAkW,SAAAL,EAAAM,iBAAAC,OAAAP,EAAAQ,cAEAR,EAAAS,QAAA,SAAA1K,GAEA5L,EAAAkW,SAAAL,EAAAM,iBAAAC,OAAAP,EAAAQ,cACArW,EAAA4Q,MAAAE,IAAAvL,SACAvF,EAAA4Q,MAAAE,IAAAyF,eAAAvU,SACAhC,EAAA4Q,MAAAE,IAAAyF,eAAA3T,OAEA5C,EAAA4Q,MAAAE,IAAA0F,YAAAC,QACAzW,EAAA4Q,MAAAE,IAAA4F,SAAArT,UAKAgC,EAAAsR,MAAA,IAAAnO,EAAA,CACA/F,UAAA,QACAgG,SAAA,IACAE,OAAA,SAAAzC,GACA,IAAA0Q,EAAA,IAAAC,KACAC,EAAAF,EAAAG,WACAC,EAAAJ,EAAAK,aAEA/Q,EAAAY,WAAAgQ,EAAA,EAAAA,EAAA,IAAAA,GAAA,KAAAE,EAAA,EAAAA,EAAA,IAAAA,MAGA3R,EAAA1C,IAAA0C,EAAAsR,OACAtR,EAAAsR,MAAA/N,QAIAvD,EAAA6R,UAAA,IAAAtB,EAAA,CACA/L,MAAAuK,EAAA,QACA3R,UAAA,YACAK,OAAA,CACA6B,KAAA,WAA2B5C,KAAAM,SAAA,GAAAgB,SAC3BT,KAAA,WAA2ByC,EAAAqR,SAAArT,UAE3BhB,SAAA,CACA,IAAAwD,EAAA,CACA8D,KAAA,EACAtD,WAAA,EACA7B,KAAA,CACA,CACAoC,MAAA,EAA6BjJ,MAAAyW,EAAA,SAC7BnN,MAAA,WACA5B,EAAA6R,UAAAtU,OACA5C,EAAAmX,QAAAnX,EAAAmX,OAAA3S,MAAAxE,EAAAmX,OAAA3S,KAAA4S,eAEA5G,OAAAC,KAAA4G,YAAAC,UACAtX,EAAAmX,OAAA3S,KAAA4S,gBACApX,EAAAmX,OAAA,MAEA3G,OAAAC,KAAA5T,KAAA,UAKA,CACA+J,MAAA,EAA6BjJ,MAAAyW,EAAA,QAC7BnN,MAAA,WAAwC5B,EAAA6R,UAAAtU,UAGxCN,WAAA,OAIA+C,EAAA1C,IAAA0C,EAAA6R,WAIA7R,EAAAkS,UAAA,IAAA5B,EAAA,CAAoC9L,MAAAuK,EAAA,QAAA/R,SAAA,GAAAI,UAAA,cACpC4C,EAAAkS,UAAA5U,IAAA0C,EAAAkS,UAAAC,KAAA,IAAA3R,EAAA,CACAwH,OAAA,EACAhH,WAAA,EACA7B,KAAA,CACA,CACAoC,MAAA,EAAqBnE,UAAA,6BAAA9E,MAAA,IAAmD,CAAGA,MAAAyW,EAAA,UAC3EnN,MAAA,WACA5B,EAAAqR,SAAAtS,OACAiB,EAAA6R,UAAAvS,aAQAU,EAAAoS,WAAA,IAAA9B,EAAA,CAAqC9L,MAAAuK,EAAA,WAAA3R,UAAA,eACrC4C,EAAAoS,WAAAnK,OAAA,IAAA0I,EAAA,IACA3Q,EAAAoS,WAAAC,SAAA,IAAAhI,EAAA,CAA2CpN,WAAA,EAAAqN,KAAA,EAAArC,OAAAjI,EAAAoS,WAAAnK,SAC3CjI,EAAAoS,WAAA9U,IAAA0C,EAAAoS,WAAAC,SAAArS,EAAAoS,WAAAnK,QAEAjI,EAAAoS,WAAAhB,MAAA,WACA,IACAjS,EAAAmT,EAAAjU,EACAkU,EAFAC,EAAAxS,EAAAoS,WAAAC,SAIAG,EAAA1V,MAAAmF,UAAA,GAEA,IACA9C,EAAAa,EAAAmR,YAAAgB,KAAAhM,WAAAhH,KAAAoC,MAAA,GAAApC,KACK,MAAAyJ,GACLzJ,EAAA,KAIA,GAAAA,KAAAZ,OAAA,CAEA,IADA+T,EAAAlQ,EAAAO,WACAtE,EAAA,EAAwBA,EAAAc,EAAAZ,OAAqBF,IAC7C,UAAAc,EAAAd,GAAAyJ,KACAwK,EAAA5T,YAAA0D,EAAAC,IACA,MACA,CAAqBjF,UAAA,8BACrB+B,EAAAd,GAAAc,MAAA,wBAAAA,EAAAd,GAAAoU,KAAA,IAAAtT,EAAAd,GAAAoU,OAAA,MAEa,SAAAtT,EAAAd,GAAAyJ,KACbwK,EAAA5T,YAAA0D,EAAAC,IACA,MACA,IACAlD,EAAAd,GAAAc,MAAA,wBAAAA,EAAAd,GAAAoU,KAAA,IAAAtT,EAAAd,GAAAoU,OAAA,MAEa,SAAAtT,EAAAd,GAAAyJ,QACbyK,EAAArV,SAAAC,cAAA,QACA8E,UAAA9C,EAAAd,GAAAc,KACAmT,EAAA5T,YAAA6T,IAGAC,EAAA1V,MAAA4B,YAAA4T,GACAtS,EAAAoS,WAAAC,SAAA/S,OACAU,EAAAoS,WAAAC,SAAAvQ,YAEA9B,EAAAoS,WAAAC,SAAA9U,QAMAyC,EAAA0S,eAAA,IAAAnC,EAAA,CACA5T,SAAA,EACA6H,MAAAuK,EAAA,yBACAtR,OAAA,CACA6B,KAAA,WAA2B5C,KAAAsB,SAC3BT,KAAA,WAA2ByC,EAAAqR,SAAArT,UAE3BhB,SAAA,CACA,IAAA4I,EAAA,CACAoC,OAAA,EACAhH,WAAA,EACAsD,KAAA,EACAnF,KAAA,CACA,CACAoH,MAAA5L,EAAAiW,QAAA+B,YAAAhY,EAAAiW,QAAAgC,UAAAC,MACArO,MAAAuK,EAAA,SACAzW,MAAAqC,EAAAiW,QAAAgC,UAAAC,OAEA,CACAtM,MAAA5L,EAAAiW,QAAA+B,YAAAhY,EAAAiW,QAAAgC,UAAAE,OACAtO,MAAAuK,EAAA,UACAzW,MAAAqC,EAAAiW,QAAAgC,UAAAE,QAEA,CACAvM,MAAA5L,EAAAiW,QAAA+B,YAAAhY,EAAAiW,QAAAgC,UAAAG,QACAvO,MAAAuK,EAAA,WACAzW,MAAAqC,EAAAiW,QAAAgC,UAAAG,UAGA9V,WAAA,EACAQ,OAAA,CACAuV,aAAA,SAAAjV,GACApD,EAAAiW,QAAA+B,UAAA5U,EAAA8C,MAAA1B,KAAA7G,MACA0H,EAAAoS,WAAAhB,QACApR,EAAA0S,eAAAnV,cAMAyC,EAAA1C,IAAA0C,EAAA0S,gBAIA1S,EAAAiT,eAAA,IAAA1C,EAAA,CACA5T,SAAA,EACA6H,MAAAuK,EAAA,kBACAtR,OAAA,CACA6B,KAAA,WAA2B5C,KAAAsB,SAC3BT,KAAA,WAA2ByC,EAAAqR,SAAArT,UAE3BhB,SAAA,CACA,IAAA4I,EAAA,CACAoC,OAAA,EACAhH,WAAA,EACAsD,KAAA,EACAnF,KAAA,CACA,CAAiBoH,OAAA5L,EAAAiW,QAAAsC,WAAA1O,MAAAuK,EAAA,OAAAzW,OAAA,GACjB,CAAiBiO,MAAA5L,EAAAiW,QAAAsC,WAAA1O,MAAAuK,EAAA,MAAAzW,OAAA,IAEjB2E,WAAA,EACAQ,OAAA,CACAuV,aAAA,SAAAjV,GACApD,EAAAiW,QAAAsC,WAAAnV,EAAA8C,MAAA1B,KAAA7G,MACA0H,EAAAoS,WAAAhB,QACApR,EAAAiT,eAAA1V,cAMAyC,EAAA1C,IAAA0C,EAAAiT,gBAIAjT,EAAAmR,YAAA,IAAAb,EAAA,CACA9L,MAAA,EAAalM,MAAAyW,EAAA,WAAA3R,UAAA,QAAuC+S,GACpDlM,MAAA,EACAjH,SAAA,GACAI,UAAA,gBAGA4C,EAAAmR,YAAAgC,KAAA,CACAlP,KAAA,CACAO,MAAAuK,EAAA,WACA1Q,MAAA,EACAc,KAAA,CACA,CACAoC,MAAA,CACA,CAAqBnE,UAAA,kCACrB,CACA9E,MAAAyW,EAAA,oBACA5P,KAAA,CACA,CAA6B2I,KAAA,QAAA3I,KAAA4P,EAAA,sBAC7B,CAA6BjH,KAAA,OAAA3I,KAAA,SAC7B,CAA6B2I,KAAA,OAAA3I,KAAA4P,EAAA,oCAI7BnN,MAAA,WACA5B,EAAAmR,YAAAC,MAAApR,EAAAmR,YAAAgC,KAAAC,YAEa,CACb7R,MAAA,CACA,CAAqBnE,UAAA,gCACrB,CACA9E,MAAAyW,EAAA,iBACA5P,KAAA,CACA,CAA6B2I,KAAA,QAAA3I,KAAA4P,EAAA,mBAC7B,CAA6BjH,KAAA,OAAA3I,KAAA,SAC7B,CAA6B2I,KAAA,OAAA3I,KAAA4P,EAAA,iCAI7BnN,MAAA,WACA5B,EAAAqR,SAAAtS,OACApE,EAAAmF,MAAAnF,EAAA4Q,MAAAG,OAEa,CACbnK,MAAA,CACA,CAAqBnE,UAAA,6BACrB,CACA9E,MAAAyW,EAAA,OACA5P,KAAA,CACA,CAA6B2I,KAAA,QAAA3I,KAAA4P,EAAA,uBAC7B,CAA6BjH,KAAA,OAAA3I,KAAA,SAC7B,CAA6B2I,KAAA,OAAA3I,KAAA4P,EAAA,4CAI7BnN,MAAA,WACA5B,EAAAqR,SAAAtS,OACApE,EAAAmF,MAAAnF,EAAA4Q,MAAAE,SAKA4H,QAAA,CACA7O,MAAAuK,EAAA,eACA1Q,MAAA,EACAc,KAAA,CACA,CACAoC,MAAA,EAAyBnE,UAAA,8BAAwC,CAAG9E,MAAA,OACpEsJ,MAAA,WAAoC5B,EAAAmR,YAAAC,MAAApR,EAAAmR,YAAAgC,KAAAlP,QACvB,CACb1C,MAAA,CACA,CAAqBnE,UAAA,8BACrB,CACA9E,MAAAyW,EAAA,2BACA5P,KAAA,CACA,CAA6B2I,KAAA,QAAA3I,KAAA4P,EAAA,6BAC7B,CAA6BjH,KAAA,OAAA2K,KAAA,WAAiC,OAAA9X,EAAAiW,QAAAsC,WAAAnE,EAAA,MAAAA,EAAA,SAC9D,CAA6BjH,KAAA,OAAA3I,KAAA,SAC7B,CAA6B2I,KAAA,OAAA3I,KAAA4P,EAAA,gCAI7BnN,MAAA,WACA5B,EAAAqR,SAAAtS,OACAiB,EAAAiT,eAAA3T,SAEa,CACbiC,MAAA,CACA,CAAqBnE,UAAA,gCACrB,CACA9E,MAAAyW,EAAA,oBACA5P,KAAA,CACA,CAA6B2I,KAAA,QAAA3I,KAAA4P,EAAA,sBAC7B,CACAjH,KAAA,OACA2K,KAAA,WACA,IAAAa,EAAA,GAMA,OAJAA,EAAA3Y,EAAAiW,QAAAgC,UAAAC,OAAA9D,EAAA,SACAuE,EAAA3Y,EAAAiW,QAAAgC,UAAAE,QAAA/D,EAAA,UACAuE,EAAA3Y,EAAAiW,QAAAgC,UAAAG,SAAAhE,EAAA,WAEAuE,EAAA3Y,EAAAiW,QAAA+B,aAGA,CAA6B7K,KAAA,OAAA3I,KAAA,SAC7B,CAA6B2I,KAAA,OAAA3I,KAAA4P,EAAA,+CAI7BnN,MAAA,WACA5B,EAAAqR,SAAAtS,OACAiB,EAAA0S,eAAApT,WAKA8T,SAAA,CACA5O,MAAAuK,EAAA,oBACA1Q,MAAA,EACAc,KAAA,CACA,CACAoC,MAAA,EAAyBnE,UAAA,8BAAwC,CAAG9E,MAAA,OACpEsJ,MAAA,WAAoC5B,EAAAmR,YAAAC,MAAApR,EAAAmR,YAAAgC,KAAAlP,WAOpCtJ,EAAAiW,QAAA2C,mBACAvT,EAAAmR,YAAAgC,KAAAlP,KAAA9E,KAAAX,KAAA,CACA+C,MAAA,CACA,CAAanE,UAAA,gCACb,CACA9E,MAAAyW,EAAA,eACA5P,KAAA,CACA,CAAqB2I,KAAA,QAAA3I,KAAA4P,EAAA,gBACrB,CAAqBjH,KAAA,OAAA3I,KAAA,SACrB,CAAqB2I,KAAA,OAAA3I,KAAA4P,EAAA,sCAIrBnN,MAAA,WACA5B,EAAAmR,YAAAC,MAAApR,EAAAmR,YAAAgC,KAAAE,YAMArT,EAAAmR,YAAAqC,kBAAA,WACA,IAAAjS,EAAA5G,EAAAiW,QAAAuB,KAsBAnS,EAAAmR,YAAAgC,KAAAC,SAAAjU,KAAA,CACA,CACAoC,MAAA,EAAqBnE,UAAA,8BAAwC,CAAG9E,MAAA,OAChEsJ,MAAA,WAAgC5B,EAAAmR,YAAAC,MAAApR,EAAAmR,YAAAgC,KAAAlP,SAIhC1C,EAAA7D,QAAA,SAAAiB,EAAAN,EAAAoV,GACAzT,EAAAmR,YAAAgC,KAAAC,SAAAjU,KAAAX,KAAA,CACA+C,MAAA,CACA,CAAiBnE,UAAA,8BACjB,CACA9E,MAAAqG,EAAA/G,KACAuH,KAAA,CACA,CAAyB2I,KAAA,QAAA3I,KAAA4P,EAAA,gBACzB,CAAyBjH,KAAA,OAAA3I,KAAA,SACzB,CAAyB2I,KAAA,OAAA3I,KAAA4P,EAAA,aAAApQ,EAAA/G,MACzB,CAAyBkQ,KAAA,OAAA3I,KAAA4P,EAAA,oBAAApQ,EAAA+U,OACzB,CAAyB5L,KAAA,OAAA3I,KAAA4P,EAAA,aAAApQ,EAAAmJ,MACzB,CAAyBA,KAAA,OAAA3I,KAAA4P,EAAA,iBAAAyC,KAAA7S,EAAAgV,MAAAhG,YACzB,CAAyB7F,KAAA,OAAA3I,KAAA,SACzB,CAAyB2I,KAAA,QAAA3I,KAAA4P,EAAA,oBACzB,CAAyBjH,KAAA,OAAA3I,KAAA,SACzB,CAAyB2I,KAAA,OAAA3I,KAAA4P,EAAA,aAAApU,EAAAiW,QAAAgD,QAAAC,SACzB,CAAyB/L,KAAA,OAAA3I,KAAA4P,EAAA,oBAAApU,EAAAiW,QAAAgD,QAAAE,aACzB,CAAyBhM,KAAA,OAAA3I,KAAA4P,EAAA,aAAApU,EAAAiW,QAAAgD,QAAAD,KAAAhG,eAIzB/L,MAAA,WACA,IAAAmS,EAAAN,EAAAhO,QAEAzF,EAAAqR,SAAAtS,OACAgV,EAAA/U,OAAAX,EAAA,GACA1D,EAAAmF,MAAAnF,EAAA4Q,MAAA9P,KAAA,CAAAkD,GAAAoS,OAAAgD,UAMA/T,EAAAmR,YAAA6C,aAAA,KACAhU,EAAAmR,YAAAC,MAAA,SAAA6C,GAEAxQ,aAAAzD,EAAAmR,YAAA6C,cAEAhU,EAAAmR,YAAA6C,aAAAxU,WAAA,WACA,IAAAqM,EACAsG,EAAAnS,EAAAmR,YAAAgB,KAEAnS,EAAAmR,YAAA+C,aACAlU,EAAAmR,YAAA+C,WAAA7V,MAAA8T,EAAAhM,WAAA9H,OAEA2B,EAAAmR,YAAA+C,WAAAD,EACApI,EAAA,CAAgB1M,KAAA8U,EAAA9U,MAChBgR,EAAAzO,WAAAD,UAAAwS,EAAA9U,KAAAZ,OACAsN,EAAA7K,WAAAiT,EAAA5V,MAAA4V,EAAA9U,KAAAZ,OAAA0V,EAAA5V,MAAA,EACA2B,EAAAmR,YAAAlJ,OAAAnG,KAAA,CAAsC+G,SAAAoL,EAAA9U,KAAAZ,OAAAwK,SAAA,IACtC/I,EAAAmR,YAAAlJ,OAAA3I,OACA6S,EAAArQ,KAAA+J,GACA7L,EAAAmR,YAAAxM,OAAA7C,KAAA,CAAsC3C,KAAA,CAAA8U,EAAAzP,UACjC,MAGLxE,EAAAmR,YAAAlJ,OAAA,IAAA0I,EAAA,IACA3Q,EAAAmR,YAAA7T,IAAA0C,EAAAmR,YAAAgB,KAAA,IAAA3R,EAAA,CACAwH,OAAA,EACAC,OAAAjI,EAAAmR,YAAAlJ,OACAjH,WAAA,EACAsD,KAAA,EACAnF,KAAAa,EAAAmR,YAAAgC,KAAAlP,KAAA9E,KACA1B,OAAA,CACA0W,aAAA,WACA3U,WAAA,WACAQ,EAAAoS,WAAAhB,SACa,SAObpR,EAAAqR,SAAA,IAAA1N,EAAA,CACAhH,SAAA,EACAE,MAAAK,SAAAmT,eAAA,gBACArP,WAAA,EACA+C,OAAA,CAAA/D,EAAAkS,UAAAlS,EAAAmR,YAAAnR,EAAAoS,cAEApS,EAAA1C,IAAA0C,EAAAqR,UAGArR,EAAApC,YAAA,mBAAAG,GACA,OAAAA,EAAA8F,MACA,KAAAxK,EAAAC,KACA0G,EAAAlB,kBAAAkB,EAAAmR,YAAAgB,MAAAnS,EAAAmR,YAAA+C,aAAAlU,EAAAmR,YAAAgC,KAAAlP,KACAjE,EAAAmR,YAAAC,MAAApR,EAAAmR,YAAAgC,KAAAlP,MAEAkH,OAAAC,KAAA5T,KAAA,WAOAmD,EAAAiW,QAAA1M,aAAA,CACAkQ,WAAA,WACApU,EAAAmR,YAAAqC,oBACA7Y,EAAA4Q,MAAAtH,KAAA/D,QAAAF,EAAAmR,YAAA+C,aAAAlU,EAAAmR,YAAAgC,KAAAE,SACArT,EAAAmR,YAAAC,MAAApR,EAAAmR,YAAAgC,KAAAE,UAIAgB,WAAA,SAAAlV,GAEAA,IACAxE,EAAAmX,OAAA,CAA0BwC,OAAA,SAAAnV,QAC1BxE,EAAAmF,MAAAnF,EAAA4Q,MAAAC,KAAA,CAAArM,QAKAgM,OAAAC,KAAAxN,YAAA,kBAAAkU,EAAAvS,GACA,WAAAuS,EAAAwC,SACAnJ,OAAAC,KAAA5T,KAAA,SACAmD,EAAAmX,SACAA,EAAA3S,OAAA2S,EAAA3S,KAAA4S,gBAGApX,EAAAiW,QAAA+B,YAAAhY,EAAAiW,QAAAgC,UAAAC,OAAAlY,EAAAiW,QAAA2D,iBAEA5Z,EAAAmF,MAAAnF,EAAA4Q,MAAAC,KAAA,CAAAsG,EAAA3S,OAGAI,GAAA,SAIAS,EAAApC,YAAA,kBACAoC,EAAAqR,SAAA/R,OACAU,EAAAqR,SAAArT,QACAgC,EAAAmR,YAAA+C,YACAlU,EAAAmR,YAAAC,MAAApR,EAAAmR,YAAAgC,KAAAlP,MAEAjE,EAAAmR,YAAAnT,QACAgC,EAAAoS,WAAAhB,UAGAjG,OAAAC,KAAAlH,aAAA,CACA5E,KAAA,WAAuBU,EAAAsR,MAAA/N,SACvBhG,KAAA,WAAuByC,EAAAsR,MAAAhW,UAGvB0E,EAAAmR,YAAAqC,oBACA7Y,EAAAmF,MAAAE,GACAA,EAAAV,OAEA3E,EAAAiW,QAAA2D,gBAEApJ,OAAAC,KAAAnN,KAAA,aAIA7G,EAAAD,QAAA6I,gCC9jBA,IAAAzD,EAAgBtF,EAAQ,GAwBxB,SAAAmZ,EAAA5T,GAEAA,KAAA,GAoBAE,KAAAwD,QAAA,EAQAxD,KAAAoC,gBAAA,KAMAvC,EAAA/E,KAAAkF,KAAAF,GAGAE,KAAAwD,OAAAxD,KAAAG,MAAAwC,UAAAqO,SAAA,UAGA,OAAAhR,KAAAG,MAAA4B,YACAvB,SAAA2O,KAAAnN,YAAAhC,KAAAG,OAIAH,KAAAsD,KAAAtD,KAKA0T,EAAAnX,UAAAlB,OAAAY,OAAA4D,EAAAtD,WACAmX,EAAAnX,UAAAkF,YAAAiS,EAGAA,EAAAnX,UAAArB,KAAA,qBAIAR,EAAAD,QAAAiZ,gCCrFAhZ,EAAAD,QAAiBF,EAAQ,IAGzBG,EAAAD,QAAA8B,UAAArB,KAAA,oDCFA,IAAA2E,EAAgBtF,EAAQ,GAWxB,SAAA4N,EAAArI,IAEAA,KAAA,IAgBAM,MAAAI,SAAAC,cAAA,OACAX,EAAAM,MAAAM,UAAA,OAGAb,EAAA/E,KAAAkF,KAAAF,GAGAE,KAAAG,MAAA6B,YAAAxB,SAAAC,cAAA,OAAAuB,YAAAhC,KAAAI,OAAA2B,YAKAoG,EAAA5L,UAAAlB,OAAAY,OAAA4D,EAAAtD,WACA4L,EAAA5L,UAAAkF,YAAA0G,EAGAA,EAAA5L,UAAArB,KAAA,sBAIAR,EAAAD,QAAA0N,gCCjDA,IAAAtI,EAAgBtF,EAAQ,GA8BxB,SAAAud,EAAAhY,GAEAA,KAAA,GAoBAE,KAAAqM,SAAA,GAOArM,KAAAmM,SAAA,IAOAnM,KAAApE,MAAA,EAOAoE,KAAAoL,KAAApL,KAAAqL,cAOArL,KAAA+X,UAAA,KAOA/X,KAAAgY,UAAA,KAGAlY,EAAAI,UAAAJ,EAAAI,YAAA,EAMAJ,EAAAsL,OAEApL,KAAAoL,KAAAtL,EAAAsL,MAGApL,KAAAoL,OAAApL,KAAAyL,kBACA3L,EAAAY,WAAA,eAIAb,EAAA/E,KAAAkF,KAAAF,GAGAE,KAAAiY,OAAAjY,KAAAI,MAAA4B,YAAAxB,SAAAC,cAAA,QAGAT,KAAAiY,OAAAvX,UAAA,QAGAV,KAAAoF,KAAAtF,GAKAgY,EAAAvb,UAAAlB,OAAAY,OAAA4D,EAAAtD,WACAub,EAAAvb,UAAAkF,YAAAqW,EAGAA,EAAAvb,UAAArB,KAAA,0BAEA4c,EAAAvb,UAAA8O,cAAA,EACAyM,EAAAvb,UAAAkP,gBAAA,EAQAqM,EAAAvb,UAAA6I,KAAA,SAAAtF,QAaAmE,KAZAnE,KAAA,IAYAqM,WAQAnM,KAAAmM,SAAArM,EAAAqM,eAIAlI,IAAAnE,EAAAuM,WAWArM,KAAAqM,SAAAvM,EAAAuM,UAIArM,KAAAqM,UAAArM,KAAAmM,SACAnM,KAAAiY,OAAAtV,UAAA/B,IAAA,UAEAZ,KAAAiY,OAAAtV,UAAAT,OAAA,eAIA+B,IAAAnE,EAAAlE,OAEAoE,KAAA8M,SAAAhN,EAAAlE,OAIAoE,KAAAoL,OAAApL,KAAAqL,cACArL,KAAAiY,OAAA/J,MAAAzD,OAAAzK,KAAAqM,SAAArM,KAAAmM,SAAA,QAEAnM,KAAAiY,OAAA/J,MAAAsD,MAAAxR,KAAAqM,SAAArM,KAAAmM,SAAA,QAIAnM,KAAA+X,UAAA/X,KAAAiY,OAAAC,wBACAlY,KAAAgY,UAAAhY,KAAAG,MAAA+X,yBAcAJ,EAAAvb,UAAAuQ,SAAA,SAAAlR,GAiBA,OAAAoE,KAAApE,YAEA,IAAAoE,KAAA+X,UAAAtN,QAAA,IAAAzK,KAAA+X,UAAAvG,QAEAxR,KAAAgY,UAAAhY,KAAAG,MAAA+X,wBACAlY,KAAA+X,UAAA/X,KAAAiY,OAAAC,yBAIAlY,KAAAoL,OAAApL,KAAAqL,cACArL,KAAAiY,OAAA/J,MAAAiK,WAAAnY,KAAAgY,UAAAvN,OAAAzK,KAAA+X,UAAAtN,QAAA7O,GAAAoE,KAAAmM,SAAAnM,KAAAqM,UAAA,KAEArM,KAAAiY,OAAA/J,MAAAkK,YAAApY,KAAAgY,UAAAxG,MAAAxR,KAAA+X,UAAAvG,OAAA5V,GAAAoE,KAAAmM,SAAAnM,KAAAqM,UAAA,KAIArM,KAAAe,OAAA,WAUAf,KAAAuB,KAAA,UAAiC8W,KAAAzc,EAAA0c,KAAAtY,KAAApE,QAIjCA,GAAAoE,KAAAmM,WACAvQ,EAAAoE,KAAAmM,SAGAnM,KAAAe,OAAA,SAMAf,KAAAuB,KAAA,SAKAvB,KAAApE,SAEA,IASAlB,EAAAD,QAAAqd,gCC3RA,IAcArE,EAAA8E,EAbA7E,EAAoBnZ,EAAQ,GAC5B0D,EAAoB1D,EAAQ,GAC5B+I,EAAA,IAAAoQ,EAAA,CAA8BvT,MAAAK,SAAAmT,eAH9B,cAIA1M,EAAoB1M,EAAQ,GAC5BqZ,EAAoBrZ,EAAQ,IAC5BuJ,EAAoBvJ,EAAQ,GAC5BsZ,EAAoBtZ,EAAQ,IAC5B2O,EAAoB3O,EAAQ,IAC5BmL,EAAoBnL,EAAQ,GAC5BoC,EAAoBpC,EAAQ,GAC5B0Z,EAAoB1Z,EAAQ,IAC5BkM,EAAoBlM,EAAQ,GAC5Bie,EAAoBje,EAAQ,IAI5BkZ,EAAA/N,EAAAC,IACA,MACA,CAAKjF,UAAA,mBACL6X,EAAA7S,EAAAC,IAAA,OAAqCjF,UAAA,UAAoB,MAIzD4C,EAAAsR,MAAA,IAAAnO,EAAA,CACA/F,UAAA,QACAgG,SAAA,IACAE,OAAA,SAAAzC,GACA,IAAA0Q,EAAA,IAAAC,KACAC,EAAAF,EAAAG,WACAC,EAAAJ,EAAAK,aAEA/Q,EAAAY,WAAAgQ,EAAA,EAAAA,EAAA,IAAAA,GAAA,KAAAE,EAAA,EAAAA,EAAA,IAAAA,MAGA3R,EAAA1C,IAAA0C,EAAAsR,OACAtR,EAAAsR,MAAA/N,QAIAvD,EAAAmV,iBAAA,IAAA5E,EAAA,CACA5T,SAAA,EACA6H,MAAAyG,QAAA,UACAxN,OAAA,CACA6B,KAAA,WACA,IAEAjB,EAFA2C,EAAA,EACA7B,EAAA,GAGA,IAAAd,EAAA,EAA4BA,EAAA2B,EAAAmS,KAAA5T,OAA0BF,IACtDc,EAAAX,KAAA,CACA+H,OAAA,EACA/B,MAAAxE,EAAAmS,KAAA9T,GAAAzG,KACAU,MAAA0H,EAAAmS,KAAA9T,KAEA2B,EAAAoV,UAAApV,EAAAmS,KAAA9T,KACAc,EAAAd,GAAAkI,OAAA,EACAvF,EAAA3C,GAGA3B,KAAAM,SAAA,GAAA8E,KAAA,CAAmC3C,OAAAmF,KAAAnF,EAAAZ,OAAAyC,eACnCtE,KAAAsB,SAEAT,KAAA,WACAyC,EAAAqR,SAAArT,UAGAhB,SAAA,CACA,IAAA4I,EAAA,CACAoC,OAAA,EACAhH,WAAA,EACAsD,KAAA,EACAnF,KAAA,GACAlC,WAAA,EACAQ,OAAA,CACAuV,aAAA,SAAAjV,GACAiC,EAAAoV,QAAArX,EAAA8C,MAAA1B,KAAA7G,MACA0H,EAAAmV,iBAAA5X,OACAyC,EAAAmR,YAAAC,eAMApR,EAAA1C,IAAA0C,EAAAmV,kBAIAnV,EAAAqV,UAAA,IAAA9E,EAAA,CACA5T,SAAA,EACAC,WAAA,EACA4H,MAAAyG,QAAA,eACAxN,OAAA,CACA6B,KAAA,WACAU,EAAAmR,YAAAgB,KAAAhM,aACAnG,EAAAqV,UAAArQ,MAAAvD,UAAAzB,EAAAmR,YAAAgB,KAAAhM,WAAAnJ,SAAA,GAAAA,SAAA,GAAAyE,UACAzB,EAAAqV,UAAAvY,MAAAmF,UAAA,QACAjC,EAAAqV,UAAAvY,MAAAmF,WAAAjC,EAAAmR,YAAAgB,KAAAhM,WAAAnJ,SAAA,GAAAA,SAAA,GAAAyE,UACAzB,EAAAqV,UAAAvY,MAAAmF,WAAA,cAEAvF,KAAAsB,SAEAT,KAAA,WACAyC,EAAAqR,SAAArT,YAIAgC,EAAA1C,IAAA0C,EAAAqV,WAIArV,EAAAmR,YAAA,IAAAb,EAAA,CACA9L,MAAA,EAAalM,MAAA2S,QAAA,mBAAA7N,UAAA,QAAqD+S,GAClElM,MAAA,EACAjH,SAAA,GACAI,UAAA,gBAGA4C,EAAAmR,YAAAlJ,OAAA,IAAA0I,EAAA,IAEA3Q,EAAAmR,YAAA7T,IAAA0C,EAAAmR,YAAAgB,KAAA,IAAA3R,EAAA,CACAwH,OAAA,EACAhH,WAAA,EACAsD,KAAA,EACAlH,UAAA,SACA6K,OAAAjI,EAAAmR,YAAAlJ,OACAxK,OAAA,CACA6X,SAAA,WACAtV,EAAAmR,YAAAgB,KAAAhM,WAAA9G,UAAAT,OAAA,SACAoB,EAAAmR,YAAAlJ,OAAA1K,OACAyC,EAAAmR,YAAAoE,OAAAvX,SAEAmG,QAAA,SAAApG,GACAyC,EAAAvH,UAAAuE,cAAA2G,QAAA3M,KAAAkF,KAAAqB,KAGAoB,KAAA,GACA6C,OAAAI,EAAAC,IACA,MACA,CAASjF,UAAA,aACTgF,EAAAC,IACA,MACA,CAAajF,UAAA,QACbgF,EAAAC,IAAA,OAA4BjF,UAAA,OAAA6E,UAAAgJ,QAAA,iBAG3BjL,EAAAmR,YAAAlJ,QAEDjI,EAAAmR,YAAAC,MAAA,WACA,IAAAjS,EAAA,CACA,CACAoC,MAAA,CACA,CAAqBnE,UAAA,gCAAA9E,MAAA2S,QAAA,qBACrB,CAAqB7N,UAAA,YAAA9E,MAAAqC,EAAAiW,QAAAgD,QAAAC,WAER,CACbtS,MAAA,CACA,CAAqBnE,UAAA,gCAAA9E,MAAA2S,QAAA,iBACrB,CAAqB7N,UAAA,YAAA9E,MAAAqC,EAAAiW,QAAAgD,QAAAE,cAErB1W,UAAA,kBACAwE,MAAA,WACA5B,EAAAqR,SAAAtS,OACAiB,EAAAqV,UAAA/V,SAEa,CACbiC,MAAA,CACA,CAAqBnE,UAAA,gCAAA9E,MAAA2S,QAAA,UACrB,CAAqB7N,UAAA,YAAA9E,MAAAqC,EAAAiW,QAAAgD,QAAAD,KAAAhG,aAErBvQ,UAAA,kBACAwE,MAAA,WACA5B,EAAAqR,SAAAtS,OACAiB,EAAAqV,UAAA/V,UAIA6S,EAAAnS,EAAAmR,YAAAgB,KAEAnS,EAAAoV,UACAjW,IAAA4R,OAAA,CACA,CACAxP,MAAA,CACA,CAAqBnE,UAAA,gCAAA9E,MAAA2S,QAAA,iBACrB,CAAqB7N,UAAA,YAAA9E,MAAA0H,EAAAoV,QAAAxd,OAErBwF,WAAA4C,EAAAmS,KAAA5T,OAAA,+CACAqD,MAAA,WACA5B,EAAAmS,KAAA5T,OAAA,IACAyB,EAAAqR,SAAAtS,OACAiB,EAAAmV,iBAAA7V,UAGa,CACbiC,MAAA,CACA,CAAqBnE,UAAA,gCAAA9E,MAAA2S,QAAA,iBACrB,CAAqB7N,UAAA,YAAA9E,MAAA0H,EAAAoV,QAAA1B,QAErBtW,UAAA,kBACAwE,MAAA,WACA5B,EAAAqR,SAAAtS,OACAiB,EAAAqV,UAAA/V,SAEa,CACbiC,MAAA,CACA,CAAqBnE,UAAA,gCAAA9E,MAAA2S,QAAA,UACrB,CAAqB7N,UAAA,YAAA9E,MAAA0H,EAAAoV,QAAAzB,KAAAhG,aAErBvQ,UAAA,kBACAwE,MAAA,WACA5B,EAAAqR,SAAAtS,OACAiB,EAAAqV,UAAA/V,YAeA2V,EAAAxT,UAAAtC,EAAAZ,OACA4T,EAAArQ,KAAA,CAAe3C,OAAA6B,WAAAmR,EAAAhM,YAAAgM,EAAAhM,WAAA9H,MAAA8T,EAAAhM,WAAA9H,MAAA,KAIf2B,EAAAmR,YAAA7T,IAAA0C,EAAAmR,YAAAoE,OAAA,IAAAL,EAAA,CACA5c,MAAA2S,QAAA,UACA7N,UAAA,sBACAP,MAAAmD,EAAAmR,YAAAtU,MAAA6B,YAAAxB,SAAAC,cAAA,QACAM,OAAA,CACAmE,MAAA,WACA5B,EAAAoV,QACAza,EAAAmF,MAAAnF,EAAA4Q,MAAAC,KAAAxL,EAAAoV,SAEAza,EAAAmF,MAAAnF,EAAA4Q,MAAAtH,OAGAE,QAAA,SAAApG,GACAA,EAAA8F,OAAAxK,EAAAqO,IACA1H,EAAAmR,YAAAgB,KAAAnU,QACAgC,EAAAmR,YAAAlJ,OAAA3I,OAEAU,EAAAmR,YAAAgB,KAAAhM,WAAA9G,UAAA/B,IAAA,SACA0C,EAAAmR,YAAAgB,KAAAnR,WAAAhB,EAAAmR,YAAAgB,KAAAhT,KAAAZ,OAAA,IACaR,EAAA8F,OAAAxK,EAAAsO,MACb3H,EAAAmR,YAAAgB,KAAAnU,QACAgC,EAAAmR,YAAAlJ,OAAA3I,OAEAU,EAAAmR,YAAAgB,KAAAhM,WAAA9G,UAAA/B,IAAA,SACA0C,EAAAmR,YAAAgB,KAAAnR,WAAA,IACajD,EAAA8F,OAAAxK,EAAAM,IACbqG,EAAAmR,YAAAoE,OAAA9X,OAAA,UACAuC,EAAAmR,YAAAoE,OAAAtX,KAAA,SAA2DF,eAQ3DiC,EAAAqR,SAAA,IAAA1N,EAAA,CACAhH,SAAA,EACAE,MAAAK,SAAAmT,eAAA,gBACArP,WAAA,EACA+C,OAAA,CAAA/D,EAAAmR,eAEAnR,EAAA1C,IAAA0C,EAAAqR,UAGArR,EAAApC,YAAA,mBAAAG,GACA,OAAAA,EAAA8F,MACA,KAAAxK,EAAAC,KACAqB,EAAAmF,MAAAnF,EAAA4Q,MAAAtH,SAMAjE,EAAApC,YAAA,gBAAAuB,GAEAa,EAAAmS,KAAAxX,EAAAiW,QAAAuB,KAEAhT,WAAAsF,MAAAC,QAAAvF,UACAa,EAAAmS,KAAAhT,QAEAa,EAAAoV,QAAApV,EAAAmS,KAAA,GACAnS,EAAAoV,QACApV,EAAAmR,YAAAoE,OAAAvQ,MAAAvD,UAAAwJ,QAAA,WAEAE,OAAAC,KAAAoK,OAAA,CAA4BhR,MAAAyG,QAAA,4CAAAhG,KAAA,SAC5BjF,EAAAmR,YAAAoE,OAAAvQ,MAAAvD,UAAAwJ,QAAA,UAGAjL,EAAAqR,SAAA/R,OACAU,EAAAqR,SAAArT,QACAgC,EAAAmR,YAAAC,QAEApR,EAAAmR,YAAAgB,KAAAhM,WAAA9G,UAAAT,OAAA,SACAoB,EAAAmR,YAAAlJ,OAAA1K,OACAyC,EAAAmR,YAAAoE,OAAAvX,UAKA5G,EAAAD,QAAA6I,gCCtTA,IAAAzD,EAAgBtF,EAAQ,GACxBoC,EAAgBpC,EAAQ,IAoCxB,SAAAie,EAAA1Y,GAKAA,KAAA,GA0BAD,EAAA/E,KAAAkF,KAAAF,GAGAA,EAAAyI,OAEAvI,KAAAwI,MAAAxI,KAAAI,MAAA4B,YAAAxB,SAAAC,cAAA,QACAT,KAAAwI,MAAA9H,UAAA,QAAAZ,EAAAyI,MAIAvI,KAAAsI,MAAAtI,KAAAI,MAAA4B,YAAAxB,SAAAC,cAAA,QACAT,KAAAsI,MAAA3F,UAAA/B,IAAA,QAEAd,EAAAlE,QAEAoE,KAAAsI,MAAAvD,UAAAjF,EAAAlE,OAMA4c,EAAAjc,UAAAlB,OAAAY,OAAA4D,EAAAtD,WACAic,EAAAjc,UAAAkF,YAAA+W,EAGAA,EAAAjc,UAAArB,KAAA,uBAIAsd,EAAAjc,UAAAwc,cAAA,IAQAP,EAAAjc,UAAAuE,cAAA,CAIAoE,MAAA,WAEA,IAAAnF,EAAAC,KAEAA,KAAAG,MAAAwC,UAAA/B,IAAA,SAEAkC,WAAA,WACA/C,EAAAI,MAAAwC,UAAAT,OAAA,UACSlC,KAAA+Y,gBAQTtR,QAAA,SAAApG,GACAA,EAAA8F,OAAAxK,EAAAO,OAGA8C,KAAAe,OAAA,UASAf,KAAAuB,KAAA,SAAoCF,YAQpC3G,EAAAD,QAAA+d,gCClJA,IACA9E,EAAmBnZ,EAAQ,GAC3B0D,EAAmB1D,EAAQ,GAC3B+I,EAAA,IAAAoQ,EAAA,CAA6BvT,MAAAK,SAAAmT,eAH7B,cAIAjM,EAAmBnN,EAAQ,IAC3BuJ,EAAmBvJ,EAAQ,GAC3BsZ,EAAmBtZ,EAAQ,IAC3Bye,EAAmBze,EAAQ,IAC3BmL,EAAmBnL,EAAQ,GAC3BoC,EAAmBpC,EAAQ,GAC3B0Z,EAAmB1Z,EAAQ,IAC3BkM,EAAmBlM,EAAQ,GAC3BoT,EAAmBpT,EAAQ,IAC3B0e,EAAmB1e,EAAQ,IAC3B2e,EAAA1Y,SAAAmT,eAAA,kBAkBA,SAAAwF,IACAD,EAAAvW,UAAAqO,SAAA,WACAkI,EAAAvW,UAAAT,OAAA,UACAoB,EAAA8V,OAAAhU,KAAA,CACA,CACA+B,KAAAxK,EAAAY,GAAAuK,MAAAyG,QAAA,YAAAqJ,OAAAuB,GACa,CACbhS,KAAAxK,EAAAqB,KACA4Z,OAAA,WACAtU,EAAAmR,YAAApS,OACAiB,EAAA+V,aAAAzW,aAKAsW,EAAAvW,UAAA/B,IAAA,UACA0C,EAAA8V,OAAAhU,KAAA,CACA,CACA+B,KAAAxK,EAAAY,GAAAuK,MAAAyG,QAAA,YAAAqJ,OAAAuB,GACa,CACbhS,KAAAxK,EAAAqB,KACA4Z,OAAA,WACAtU,EAAAmR,YAAApS,OACAiB,EAAA+V,aAAAzW,YAtCAU,EAAAsR,MAAA,IAAAnO,EAAA,CACA/F,UAAA,QACAgG,SAAA,IACAE,OAAA,SAAAzC,GACA,IAAA0Q,EAAA,IAAAC,KACAC,EAAAF,EAAAG,WACAC,EAAAJ,EAAAK,aAEA/Q,EAAAY,WAAAgQ,EAAA,EAAAA,EAAA,IAAAA,GAAA,KAAAE,EAAA,EAAAA,EAAA,IAAAA,MAGA3R,EAAA1C,IAAA0C,EAAAsR,OACAtR,EAAAsR,MAAA/N,QAkCAvD,EAAA8V,OAAA,IAAAH,EAAA,CACAhZ,SAAA,EACAI,OAAAiD,EACAb,KAAA,CACA,CACA0E,KAAAxK,EAAAY,GACAuK,MAAAyG,QAAA,YACAqJ,OAAAuB,GACS,CACThS,KAAAxK,EAAAqB,KACA4Z,OAAA,WACAtU,EAAAmR,YAAApS,OACAiB,EAAA+V,aAAAzW,YAOAU,EAAAgW,SAAA,IAAAN,EAAA,CACA7Y,MAAAK,SAAAmT,eAAA,kBACA/X,MAAA,IAEA0H,EAAAgW,SAAAC,UAAA/Y,SAAAmT,eAAA,mBAGArQ,EAAAmR,YAAA,IAAA/M,EAAA,CACAvH,MAAAK,SAAAmT,eAAA,WACAzT,WAAA,EACAD,SAAA,EACAS,UAAA,gBAGA4C,EAAAmR,YAAAlJ,OAAA,IAAA0I,EAAA,IAEA3Q,EAAAmR,YAAA7T,IACA0C,EAAAmR,YAAAkB,SAAA,IAAAhI,EAAA,CACApN,WAAA,EACAqN,KAAA,GACArC,OAAAjI,EAAAmR,YAAAlJ,OACAxK,OAAA,CACA0G,QAAA,SAAApG,GAEA,OAAAA,EAAA8F,MACA,KAAAxK,EAAAqO,GACA,KAAArO,EAAAsO,KACAjL,KAAA4L,KAAAvK,EAAA8F,WAMA7D,EAAAmR,YAAAlJ,QAGAjI,EAAAmR,YAAAC,MAAA,WACApR,EAAAmR,YAAAkB,SAAAvV,MAAAmF,UAAA,GACAjC,EAAAmR,YAAAkB,SAAAvV,MAAA4B,YAAA0D,EAAAO,SACAP,EAAAC,IACA,MACA,CAAajF,UAAA,eACbgF,EAAAC,IAAA,OAA4BjF,UAAA,6BAC5BgF,EAAAC,IAAA,SAA6B4I,QAAA,sBAG7BjL,EAAAmR,YAAAkB,SAAA/S,OACAU,EAAAmR,YAAAkB,SAAAvQ,QAKA9B,EAAA+V,aAAA,IAAAxF,EAAA,CACA5T,SAAA,EACA6H,MAAAyG,QAAA,WACAxN,OAAA,CACA6B,KAAA,WACAsW,EAAAvW,UAAAqO,SAAA,UACAhR,KAAAM,SAAA,GAAAmJ,WAAAnJ,SAAA,GAAAA,SAAA,GAAAiF,UAAAgJ,QAAA,YAEAvO,KAAAM,SAAA,GAAAmJ,WAAAnJ,SAAA,GAAAA,SAAA,GAAAiF,UAAAgJ,QAAA,YAEAvO,KAAAsB,SAEAT,KAAA,WACAqY,EAAAvW,UAAAqO,SAAA,UACA1N,EAAAhC,QAEAgC,EAAAmR,YAAAkB,SAAArU,UAIAhB,SAAA,CACA,IAAAwD,EAAA,CACAwH,OAAA,EACA1D,KAAA,EACAtD,WAAA,EACA7B,KAAA,CACA,CACAoC,MAAA,CACA,CAAyBnE,UAAA,8BAAA9E,MAAA,IACzB,CAAyBA,MAAAsd,EAAAvW,UAAAqO,SAAA,UAAAzC,QAAA,YAAAA,QAAA,cAEzBrJ,MAAA,WACAiU,IACA7V,EAAA+V,aAAAxY,UAIAN,WAAA,OAIA+C,EAAA1C,IAAA0C,EAAA+V,cAEA/V,EAAAkW,YAAA,IAAA3F,EAAA,CACA/L,MAAAuK,EAAA,gBACAtR,OAAA,CACA6B,KAAA,WACA,IAAA7C,EAAAC,KACAyZ,EAAA,GAEAzZ,KAAAM,SAAA,GAAAgB,QACAmN,OAAAiL,YAAA,aACAD,EACA,GACAhL,OAAApO,OAAA4C,SAAA0W,SAEA5Z,EAAAK,MAAA4E,4CAAA1E,SAAA,GAAAyE,UAAAsN,EAAA,eAAAoH,EAAA,KACa,MAEb5Y,KAAA,WAA2ByC,EAAAqR,SAAArT,UAE3BhB,SAAA,CACA,IAAAwD,EAAA,CACA8D,KAAA,EACAtD,WAAA,EACA7B,KAAA,CACA,CACAoC,MAAA,CACA,CAAyBnE,UAAA,aAAA9E,MAAA,IACzB,CAAyBA,MAAAyW,EAAA,YAEzBnN,MAAA,WAAwCuJ,OAAApO,OAAA4C,SAAA0W,iBAMxCrW,EAAA1C,IAAA0C,EAAAkW,aAGAlW,EAAApC,YAAA,mBAAAG,GACA,OAAAA,EAAA8F,MACA,KAAAxK,EAAAC,KACA0G,EAAAsW,WACA3b,EAAAmF,MAAAnF,EAAA4Q,MAAA9P,SAOAd,EAAAiW,QAAA1M,aAAA,CACA8R,SAAA,SAAA7W,GAEAa,EAAAgW,SAAAxb,IAAA2E,EAAAoX,KACAvW,EAAAgW,SAAAC,UAAAxU,UAAAtC,EAAAoX,IAAA,KAEAC,YAAA,SAAArX,GACAa,EAAAmR,YAAAkB,SAAAvV,MAAA2Z,aACArU,EAAAC,IACA,MACA,CAAiBjF,UAAA,eACjBgF,EAAAC,IAAA,OAAgCjF,UAAA,6BAChCgF,EAAAC,IAAA,SAAiClD,EAAAoX,IAAAG,OAEjC1W,EAAAmR,YAAAkB,SAAAvV,MAAA4E,YAEA1B,EAAAmR,YAAAkB,SAAAvQ,QAEA8G,MAAA,SAAAzJ,GAEAa,EAAAmR,YAAApS,OACAiB,EAAAkW,YAAA5W,UAcAU,EAAApC,YAAA,gBAAAuB,GACAa,EAAA2W,MAAAxX,OACAa,EAAAsW,WAAA,EAEAnL,OAAAC,KAAA4G,YAAA4E,QAAAzL,QAEAxQ,EAAAiW,QAAArN,MAAA,CAAuBsT,IAAA7W,EAAA2W,MAAAjL,MACvB1L,EAAAmR,YAAAC,QACApR,EAAAmR,YAAAkB,SAAArU,UAKA5G,EAAAD,QAAA6I,gCClRA5I,EAAAD,QAAiBF,EAAQ,IAGzBG,EAAAD,QAAA8B,UAAArB,KAAA,oDCFA,IAAA2E,EAAgBtF,EAAQ,GA8BxB,SAAAmN,EAAA5H,IAEAA,KAAA,IAeAI,UAAAJ,EAAAI,YAAA,EAMAL,EAAA/E,KAAAkF,KAAAF,GAKA4H,EAAAnL,UAAAlB,OAAAY,OAAA4D,EAAAtD,WACAmL,EAAAnL,UAAAkF,YAAAiG,EAGAA,EAAAnL,UAAArB,KAAA,sBAIAR,EAAAD,QAAAiN,gCClEA,IAAA7H,EAAgBtF,EAAQ,GAcxB,SAAA6f,EAAAta,GAEAA,KAAA,GAiBAE,KAAAqa,IAAA,IAOAra,KAAAsa,IAAA,EAOAta,KAAApE,MAAA,EAOAoE,KAAA4N,KAAA,EAGA9N,EAAAI,UAAAJ,EAAAI,YAAA,EAMAL,EAAA/E,KAAAkF,KAAAF,GAGAE,KAAAua,OAAAva,KAAAI,MAAA4B,YAAAxB,SAAAC,cAAA,QAGAT,KAAAua,OAAA7Z,UAAA,QAGAV,KAAAoF,KAAAtF,GAKAsa,EAAA7d,UAAAlB,OAAAY,OAAA4D,EAAAtD,WACA6d,EAAA7d,UAAAkF,YAAA2Y,EAGAA,EAAA7d,UAAArB,KAAA,6BAaAkf,EAAA7d,UAAAuB,IAAA,SAAAlC,GACA,IAAA4e,EAAAxa,KAAApE,MAYA,OAAAoE,KAAApE,cAAAoE,KAAAqa,KAAAze,GAAAoE,KAAAsa,MAEAta,KAAApE,QAKA,OAFAA,EAAAwS,KAAAqM,IAAAza,KAAApE,MAAAoE,KAAAsa,KAAAta,KAAA4N,OAIA5N,KAAAe,OAAA,SAMAf,KAAAuB,KAAA,QAKAvB,KAAAua,OAAArM,MAAAsD,MAAA5V,EAAA,IAGAoE,KAAAe,OAAA,WAUAf,KAAAuB,KAAA,UAAiC8W,KAAArY,KAAApE,MAAA0c,KAAAkC,KAGjC,IAaAJ,EAAA7d,UAAA6I,KAAA,SAAAtF,QAWAmE,IAAAnE,EAAAua,MAQAra,KAAAqa,IAAAva,EAAAua,UAIApW,IAAAnE,EAAAwa,MAQAta,KAAAsa,IAAAxa,EAAAwa,UAUArW,IAAAnE,EAAAlE,QAcAoE,KAAApE,MAAAkE,EAAAlE,OAGAoE,KAAA4N,KAAAQ,KAAAqM,IAAAza,KAAAqa,IAAAra,KAAAsa,KAAA,IAGAta,KAAAua,OAAArM,MAAAsD,MAAApD,KAAAqM,IAAAza,KAAAsa,IAAAta,KAAApE,OAAAoE,KAAA4N,KAAA,KAKAlT,EAAAD,QAAA2f,gCC9NA,IAAAva,EAAgBtF,EAAQ,GACxBoC,EAAgBpC,EAAQ,GACxBsW,EAAA,GAwDA,SAAAoI,EAAAnZ,GACA,IAAA4a,EAAA,EACA3a,EAAAC,MAGAF,KAAA,IAEAI,WAAA,EAEAJ,EAAAG,QAAAH,EAAAG,UAAA,EAEAH,EAAAM,MAAAI,SAAAC,cAAA,OACAX,EAAAM,MAAAM,UAAA,OAGAb,EAAA/E,KAAAkF,KAAAF,GAEAE,KAAA2a,KAAA,CACA,CAASC,MAAA,IACT,CAASA,MAAA,IACT,CAASA,MAAA,IACT,CAASA,MAAA,KAGT5a,KAAAjD,IAAA,EAEAiD,KAAA6a,OAAA7a,KAAAG,MAAA6B,YAAAxB,SAAAC,cAAA,UAEAT,KAAA6a,OAAAC,YACA9a,KAAA6a,OAAAE,KAAA,GAAAC,YAAA,GACAhb,KAAAib,MAAAjb,KAAA6a,OAAAE,KAAA,GAAAG,MAAA,GAAAlZ,YAAAxB,SAAAC,cAAA,QACAT,KAAAib,MAAAva,UAAA,aAEAV,KAAA6a,OAAAE,KAAA,GAAAC,YAAA,GACAhb,KAAA6a,OAAAE,KAAA,GAAAG,MAAA,GAAAxa,UAAA,UAGAV,KAAA2a,KAAAD,GAAAta,MAAAJ,KAAA6a,OAAAE,KAAA,GAAAG,MAAA,GAAAlZ,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAM,UAAA,iBACAV,KAAA2a,KAAAD,GAAAta,MAAA4B,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAoG,UAAA9F,UAAA,SACAV,KAAA2a,KAAAD,GAAAta,MAAAoG,UAAAxE,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAoG,UAAAxE,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAoG,oBAAA9F,UAAA,UAEAga,EACA1a,KAAA2a,KAAAD,GAAAta,MAAAJ,KAAA6a,OAAAE,KAAA,GAAAG,MAAA,GAAAlZ,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAM,UAAA,iBACAV,KAAA2a,KAAAD,GAAAta,MAAA4B,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAoG,UAAA9F,UAAA,SACAV,KAAA2a,KAAAD,GAAAta,MAAAoG,UAAAxE,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAoG,UAAAxE,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAoG,oBAAA9F,UAAA,QACAV,KAAA2a,KAAAD,GAAAta,MAAA4B,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAoG,UAAA9F,UAAA,SACAV,KAAA2a,KAAAD,GAAAta,MAAAoG,UAAAxE,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAoG,UAAAxE,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAoG,oBAAA9F,UAAA,UAEAga,EACA1a,KAAA2a,KAAAD,GAAAta,MAAAJ,KAAA6a,OAAAE,KAAA,GAAAG,MAAA,GAAAlZ,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAM,UAAA,iBACAV,KAAA2a,KAAAD,GAAAta,MAAA4B,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAoG,UAAA9F,UAAA,SACAV,KAAA2a,KAAAD,GAAAta,MAAAoG,UAAAxE,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAoG,UAAAxE,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAoG,oBAAA9F,UAAA,QACAV,KAAA2a,KAAAD,GAAAta,MAAA4B,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAoG,UAAA9F,UAAA,SACAV,KAAA2a,KAAAD,GAAAta,MAAAoG,UAAAxE,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAoG,UAAAxE,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAoG,oBAAA9F,UAAA,QACAV,KAAA2a,KAAAD,GAAAta,MAAA4B,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAoG,UAAA9F,UAAA,SACAV,KAAA2a,KAAAD,GAAAta,MAAAoG,UAAAxE,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAoG,UAAAxE,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAoG,oBAAA9F,UAAA,UAEAga,EACA1a,KAAA2a,KAAAD,GAAAta,MAAAJ,KAAA6a,OAAAE,KAAA,GAAAG,MAAA,GAAAlZ,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAM,UAAA,iBACAV,KAAA2a,KAAAD,GAAAta,MAAA4B,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAoG,UAAA9F,UAAA,SACAV,KAAA2a,KAAAD,GAAAta,MAAAoG,UAAAxE,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAoG,UAAAxE,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAoG,oBAAA9F,UAAA,QACAV,KAAA2a,KAAAD,GAAAta,MAAA4B,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAoG,UAAA9F,UAAA,SACAV,KAAA2a,KAAAD,GAAAta,MAAAoG,UAAAxE,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAoG,UAAAxE,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAoG,oBAAA9F,UAAA,QACAV,KAAA2a,KAAAD,GAAAta,MAAA4B,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAoG,UAAA9F,UAAA,SACAV,KAAA2a,KAAAD,GAAAta,MAAAoG,UAAAxE,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAoG,UAAAxE,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAoG,oBAAA9F,UAAA,QACAV,KAAA2a,KAAAD,GAAAta,MAAA4B,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAoG,UAAA9F,UAAA,SACAV,KAAA2a,KAAAD,GAAAta,MAAAoG,UAAAxE,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAoG,UAAAxE,YAAAxB,SAAAC,cAAA,QACAT,KAAA2a,KAAAD,GAAAta,MAAAoG,oBAAA9F,UAAA,QAEAV,KAAA6a,OAAAE,KAAA,GAAAC,YAAA,GACAhb,KAAAmb,OAAAnb,KAAA6a,OAAAE,KAAA,GAAAG,MAAA,GAAAlZ,YAAAxB,SAAAC,cAAA,QACAT,KAAAmb,OAAAza,UAAA,aAEAV,KAAAoF,KAAAtF,EAAA2C,MAEAzC,KAAAK,OAAAa,YAAA,mBAAAG,GACA,IAAA+Z,EAAArb,EAAA4a,KAAA5a,EAAAhD,KAEAgD,EAAAE,SACAmb,EAAAR,MAAAvZ,EAAA8F,OAAA,mBAAAiU,EAAAR,MAAAvZ,EAAA8F,MAAAyQ,QACAwD,EAAAR,MAAAvZ,EAAA8F,MAAAyQ,WArKA/G,EAAAlU,EAAAY,IAAA,mBACAsT,EAAAlU,EAAAa,IAAA,mBACAqT,EAAAlU,EAAAc,IAAA,mBACAoT,EAAAlU,EAAAe,IAAA,mBACAmT,EAAAlU,EAAAqB,MAAA,qBACA6S,EAAAlU,EAAAM,IAAA,mBACA4T,EAAAlU,EAAAoC,MAAA,qBACA8R,EAAAlU,EAAA8B,WAAA,2BACAoS,EAAAlU,EAAAC,MAAA,qBACAiU,EAAAlU,EAAAQ,MAAA,qBACA0T,EAAAlU,EAAA2B,UAAA,mBACAuS,EAAAlU,EAAAgB,SAAA,wBACAkT,EAAAlU,EAAAiB,OAAA,uBAiKAqb,EAAA1c,UAAAlB,OAAAY,OAAA4D,EAAAtD,WACA0c,EAAA1c,UAAAkF,YAAAwX,EAGAA,EAAA1c,UAAArB,KAAA,uBAqCA+d,EAAA1c,UAAA6I,KAAA,SAAAtF,GACA,IAAA6B,EAAA0Z,EAAAC,EAoEA,SAAAC,EAAAC,GACA,kBACA,mBAAA1b,EAAA2b,OAAAD,GAAA5D,QACA9X,EAAA2b,OAAAD,GAAA5D,UAMA,GA3EA9X,KAAA,GAuBAE,KAAA2a,KAAA3a,KAAAjD,KAAAqD,MAAAuC,UAAA/B,IAAA,UACAZ,KAAAjD,IAAA+C,EAAA2b,QAAA3b,EAAA2b,OAAA5Z,OAAA/B,EAAA2b,OAAA5Z,OAAA,KAEAwZ,EAAArb,KAAA2a,KAAA3a,KAAAjD,MAEA6d,MAAA,GAGA9a,EAAAsH,MACApH,KAAAib,MAAAva,UAAAZ,EAAAsH,KAAA1G,WAAA,eAAAmQ,EAAA/Q,EAAAsH,KAAAD,OAAA,sBACArH,EAAAsH,KAAAsU,SACA1b,KAAAib,MAAAtY,UAAA/B,IAAA,aAEAya,EAAAT,MAAA9a,EAAAsH,KAAAD,MAAA,CAA4CyQ,OAAA9X,EAAAsH,KAAAwQ,QAC5C5X,KAAAib,MAAA/M,MAAAyN,WAAA,UACA3b,KAAAib,MAAAW,QAAA,WACA,mBAAA9b,EAAAsH,KAAAwQ,QACA9X,EAAAsH,KAAAwQ,YAIK,WAAA5X,KAAAib,MAAA/M,MAAAyN,aACL3b,KAAAib,MAAA/M,MAAAyN,WAAA,UAIA7b,EAAAwH,OACAtH,KAAAmb,OAAAza,UAAAZ,EAAAwH,MAAA5G,WAAA,eAAAmQ,EAAA/Q,EAAAwH,MAAAH,OAAA,sBACArH,EAAAwH,MAAAoU,SACA1b,KAAAmb,OAAAxY,UAAA/B,IAAA,aAEAya,EAAAT,MAAA9a,EAAAwH,MAAAH,MAAA,CAA6CyQ,OAAA9X,EAAAwH,MAAAsQ,QAC7C5X,KAAAmb,OAAAjN,MAAAyN,WAAA,UACA3b,KAAAmb,OAAAS,QAAA,WACA,mBAAA9b,EAAAwH,MAAAsQ,QACA9X,EAAAwH,MAAAsQ,YAIK,WAAA5X,KAAAmb,OAAAjN,MAAAyN,aACL3b,KAAAmb,OAAAjN,MAAAyN,WAAA,UAYA7b,EAAA2b,QAAA3b,EAAA2b,OAAA5Z,OAAA,CACA,IAAAF,EAAA,EAAwBA,EAAA7B,EAAA2b,OAAA5Z,OAA8BF,IACtD0Z,EAAAT,MAAA9a,EAAA2b,OAAA9Z,GAAAwF,MAAA,CAAqDyQ,OAAA9X,EAAA2b,OAAA9Z,GAAAiW,QACrD9X,EAAA2b,OAAA9Z,GAAA+Z,SACAL,EAAAjb,MAAAE,SAAAqB,GAAAgB,UAAA/B,IAAA,aAEAya,EAAAjb,MAAAE,SAAAqB,GAAAgB,UAAAT,OAAA,YACAmZ,EAAAjb,MAAAE,SAAAqB,GAAAia,QAAAL,EAAA5Z,KAGA2Z,EAAAD,EAAAjb,MAAAE,SAAAqB,GAAArB,UACA,GAAAI,UAAA,YACAZ,EAAA2b,OAAA9Z,GAAAjB,WAAA,eAAAmQ,EAAA/Q,EAAA2b,OAAA9Z,GAAAwF,OAAA,uBAEAmU,EAAA,GAAAvW,UAAAjF,EAAA2b,OAAA9Z,GAAAmG,OAAA,GAEAuT,EAAAjb,MAAAuC,UAAAT,OAAA,YAMAxH,EAAAD,QAAAwe,gCChUA,IAcAxF,EAAA8E,EAbA7E,EAAoBnZ,EAAQ,GAC5B0D,EAAoB1D,EAAQ,GAC5B+I,EAAA,IAAAoQ,EAAA,CAA8BvT,MAAAK,SAAAmT,eAH9B,aAIA1M,EAAoB1M,EAAQ,GAC5BqZ,EAAoBrZ,EAAQ,IAC5BuJ,EAAoBvJ,EAAQ,GAC5BsZ,EAAoBtZ,EAAQ,IAC5B2O,EAAoB3O,EAAQ,IAC5BmL,EAAoBnL,EAAQ,GAC5BoC,EAAoBpC,EAAQ,GAC5B0Z,EAAoB1Z,EAAQ,IAC5BkM,EAAoBlM,EAAQ,GAC5Bie,EAAoBje,EAAQ,IAI5BkZ,EAAA/N,EAAAC,IACA,MACA,CAAKjF,UAAA,mBACL6X,EAAA7S,EAAAC,IAAA,OAAqCjF,UAAA,UAAoB,MAIzD4C,EAAAsR,MAAA,IAAAnO,EAAA,CACA/F,UAAA,QACAgG,SAAA,IACAE,OAAA,SAAAzC,GACA,IAAA0Q,EAAA,IAAAC,KACAC,EAAAF,EAAAG,WACAC,EAAAJ,EAAAK,aAEA/Q,EAAAY,WAAAgQ,EAAA,EAAAA,EAAA,IAAAA,GAAA,KAAAE,EAAA,EAAAA,EAAA,IAAAA,MAGA3R,EAAA1C,IAAA0C,EAAAsR,OACAtR,EAAAsR,MAAA/N,QAQAvD,EAAAuY,QAAA,SAAAjU,GACA,OAAAA,KAAA,EAA8B,MAE9BA,EAAA,WACAwG,KAAA0N,MAAAlU,EAAA,4BAAA2G,QAAA,MAEA3G,EAAA,QACAwG,KAAA0N,MAAAlU,EAAA,uBAAA2G,QAAA,MAEA3G,EAAA,KACAwG,KAAA0N,MAAAlU,EAAA,kBAAA2G,QAAA,MAGA3G,EAAA,IAAA2G,QAAA,MAKAjL,EAAAmR,YAAA,IAAAb,EAAA,CACA9L,MAAA,EAAalM,MAAA2S,QAAA,iBAAA7N,UAAA,QAAmD+S,GAChElM,MAAA,EACAjH,SAAA,GACAI,UAAA,gBAIA4C,EAAAmR,YAAAD,eAAA,IAAAX,EAAA,CACA5T,SAAA,EACA6H,MAAAyG,QAAA,cACAxN,OAAA,CACA6B,KAAA,WACA,IAEAjB,EAFAc,EAAA,GACA6B,EAAA,EAGA,IAAA3C,EAAA,EAA4BA,EAAA1D,EAAAkW,SAAAtS,OAA6BF,IACzDc,EAAAX,KAAA,CACA+H,OAAA,EACA/B,MAAA7J,EAAAkW,SAAAxS,GAAAoa,MAAA,IAAAzY,EAAAuY,QAAA5d,EAAAkW,SAAAxS,GAAAiG,MACAhM,MAAAqC,EAAAkW,SAAAxS,KAEA2B,EAAA0Y,UAAA/d,EAAAkW,SAAAxS,KACAc,EAAAd,GAAAkI,OAAA,EACAvF,EAAA3C,GAGA3B,KAAAM,SAAA,GAAA8E,KAAA,CAAmC3C,OAAAmF,KAAAnF,EAAAZ,OAAAyC,eACnCtE,KAAAsB,SAEAT,KAAA,WACAyC,EAAAqR,SAAArT,UAGAhB,SAAA,CACA,IAAA4I,EAAA,CACAoC,OAAA,EACAhH,WAAA,EACAsD,KAAA,EACAnF,KAAA,GACAlC,WAAA,EACAQ,OAAA,CACAuV,aAAA,SAAAjV,GACAiC,EAAA0Y,QAAA3a,EAAA8C,MAAA1B,KAAA7G,MACA0H,EAAAmR,YAAAD,eAAA3T,OACAyC,EAAAmR,YAAAC,eAMApR,EAAA1C,IAAA0C,EAAAmR,YAAAD,gBAGAlR,EAAAmR,YAAAlJ,OAAA,IAAA0I,EAAA,IAGA3Q,EAAAmR,YAAA7T,IAAA0C,EAAAmR,YAAAgB,KAAA,IAAA3R,EAAA,CACAwH,OAAA,EACAhH,WAAA,EACAsD,KAAA,EACAlH,UAAA,SACA6K,OAAAjI,EAAAmR,YAAAlJ,OACAxK,OAAA,CACA6X,SAAA,WACAtV,EAAAmR,YAAAgB,KAAAhM,WAAA9G,UAAAT,OAAA,SACAoB,EAAAmR,YAAAlJ,OAAA1K,OACAyC,EAAAmR,YAAAoE,OAAAvX,SAEAmG,QAAA,SAAApG,GACAyC,EAAAvH,UAAAuE,cAAA2G,QAAA3M,KAAAkF,KAAAqB,KAGAoB,KAAA,KACCa,EAAAmR,YAAAlJ,QAGDjI,EAAAmR,YAAAC,MAAA,WACA,IAAAuH,EAAA3Y,EAAA0Y,QAAA1Y,EAAA0Y,QAAAD,MAAA,IAAAzY,EAAAuY,QAAAvY,EAAA0Y,QAAApU,MAAA2G,QAAA,kBACA9L,EAAA,CACA,CACAoC,MAAA,CACA,CAAqBnE,UAAA,gCAAA9E,MAAA2S,QAAA,YACrB,CAAqB7N,UAAA,YAAA9E,MAAAqgB,IAErBvb,UAAA,kBACAwE,MAAA,WACA5B,EAAA0Y,UACA1Y,EAAAqR,SAAAtS,OACAiB,EAAAmR,YAAAD,eAAA5R,UAGa,CACbiC,MAAA,CACA,CAAqBnE,UAAA,gCAAA9E,MAAA2S,QAAA,UACrBjL,EAAA4Y,MAAAxW,EAAAC,IACA,MACA,CAAyBjF,UAAA,aACzB4C,EAAA4Y,MAAA5Y,EAAA4Y,MAAAnX,UAAA9G,EAAAiW,QAAAiI,yBAAA,KAGAzb,UAAA,kBACAwE,MAAA,WACAuJ,OAAAC,KAAA0G,OAAA,CACAwC,OAAA,WACAnV,KAAA,CACA2I,KAAA,OACAtP,KAAA,SACAgM,MAAAyG,QAAA,cACA6I,YAAA7I,QAAA,kBACA3S,MAAA0H,EAAA4Y,MAAAnX,WAEAhE,OAAA,CACAqb,KAAA,SAAA/a,GACAiC,EAAA4Y,MAAAnX,UAAA1D,EAAAzF,SAGqB,SAAAsQ,SAMrBuJ,EAAAnS,EAAAmR,YAAAgB,KAEA8C,EAAAxT,UAAAtC,EAAAZ,OACA4T,EAAArQ,KAAA,CAAe3C,OAAA6B,WAAAmR,EAAAhM,YAAAgM,EAAAhM,WAAA9H,MAAA8T,EAAAhM,WAAA9H,MAAA,KAIf2B,EAAAmR,YAAA7T,IAAA0C,EAAAmR,YAAAoE,OAAA,IAAAL,EAAA,CACA5c,MAAA2S,QAAA,YACA7N,UAAA,sBACAP,MAAAmD,EAAAmR,YAAAtU,MAAA6B,YAAAxB,SAAAC,cAAA,QACAM,OAAA,CACAmE,MAAA,WAEAuJ,OAAAC,KAAAqF,QAAAC,GAAAqI,aAAA/Y,EAAA0Y,SAAA,IAAAM,UAAA,IAAAhZ,EAAA4Y,MAAAnX,UAAA,SAAAmH,EAAAqQ,GACAA,IAAArQ,EACAjO,EAAAiW,QAAAjK,MAAA,CAAuCkQ,IAAA7W,EAAA0Y,QAAAM,UAAA,IAAAhZ,EAAA4Y,MAAAnX,WAAyD,SAAAmH,EAAAzJ,GAEhGyJ,EACAuC,OAAAC,KAAAoK,OAAA,CACAhR,MAAAyG,QAAA,+BAAArC,EAAAsQ,QACAjU,KAAA,QACA6C,KAAA,YAGAnN,EAAAmF,MAAAnF,EAAA4Q,MAAA9P,KAAA,CAAA0D,MAIAgM,OAAAC,KAAAoK,OAAA,CACAhR,MAAAyG,QAAA,iCACAhG,KAAA,QACA6C,KAAA,eAKA3D,QAAA,SAAApG,GACAA,EAAA8F,OAAAxK,EAAAqO,IACA1H,EAAAmR,YAAAgB,KAAAnU,QACAgC,EAAAmR,YAAAlJ,OAAA3I,OAEAU,EAAAmR,YAAAgB,KAAAhM,WAAA9G,UAAA/B,IAAA,SACA0C,EAAAmR,YAAAgB,KAAAnR,WAAAhB,EAAAmR,YAAAgB,KAAAhT,KAAAZ,OAAA,IACaR,EAAA8F,OAAAxK,EAAAsO,MACb3H,EAAAmR,YAAAgB,KAAAnU,QACAgC,EAAAmR,YAAAlJ,OAAA3I,OAEAU,EAAAmR,YAAAgB,KAAAhM,WAAA9G,UAAA/B,IAAA,SACA0C,EAAAmR,YAAAgB,KAAAnR,WAAA,IACajD,EAAA8F,OAAAxK,EAAAM,IACbqG,EAAAmR,YAAAoE,OAAA9X,OAAA,UACAuC,EAAAmR,YAAAoE,OAAAtX,KAAA,SAA2DF,eAS3DiC,EAAAqR,SAAA,IAAA1N,EAAA,CACAhH,SAAA,EACAE,MAAAK,SAAAmT,eAAA,eACArP,WAAA,EACA+C,OAAA,CAAA/D,EAAAmR,eAEAnR,EAAA1C,IAAA0C,EAAAqR,UAGArR,EAAApC,YAAA,mBAAAG,GACA,OAAAA,EAAA8F,MACA,KAAAxK,EAAAC,KACAqB,EAAAmF,MAAAnF,EAAA4Q,MAAAtH,SAMAjE,EAAApC,YAAA,kBACAoC,EAAA0Y,QAAA1Y,EAAA0Y,SAAA/d,EAAAkW,SAAA,GACA7Q,EAAAqR,SAAA/R,OACAU,EAAAqR,SAAArT,QACAgC,EAAAmR,YAAAC,QAEApR,EAAAmR,YAAAgB,KAAAhM,WAAA9G,UAAAT,OAAA,SACAoB,EAAAmR,YAAAlJ,OAAA1K,OACAyC,EAAAmR,YAAAoE,OAAAvX,UAKA5G,EAAAD,QAAA6I,gCCtRA,IAWAmQ,EAVAC,EAAoBnZ,EAAQ,GAC5B0D,EAAoB1D,EAAQ,GAC5B+I,EAAA,IAAAoQ,EAAA,CAA8BvT,MAAAK,SAAAmT,eAH9B,aAIA1M,EAAoB1M,EAAQ,GAC5BqZ,EAAoBrZ,EAAQ,IAC5BuJ,EAAoBvJ,EAAQ,GAC5BmL,EAAoBnL,EAAQ,GAC5BoC,EAAoBpC,EAAQ,GAC5BkM,EAAoBlM,EAAQ,GAC5Bie,EAAoBje,EAAQ,IAI5BkZ,EAAA/N,EAAAC,IACA,MACA,CAAKjF,UAAA,mBACLgF,EAAAC,IAAA,OAAoBjF,UAAA,UAAoB,MAIxC4C,EAAAsR,MAAA,IAAAnO,EAAA,CACA/F,UAAA,QACAgG,SAAA,IACAE,OAAA,SAAAzC,GACA,IAAA0Q,EAAA,IAAAC,KACAC,EAAAF,EAAAG,WACAC,EAAAJ,EAAAK,aAEA/Q,EAAAY,WAAAgQ,EAAA,EAAAA,EAAA,IAAAA,GAAA,KAAAE,EAAA,EAAAA,EAAA,IAAAA,MAGA3R,EAAA1C,IAAA0C,EAAAsR,OACAtR,EAAAsR,MAAA/N,QAIAvD,EAAAmR,YAAA,IAAAb,EAAA,CACA9L,MAAA,EAAalM,MAAA2S,QAAA,cAAA7N,UAAA,QAAgD+S,GAC7DlM,MAAA,EACAjH,SAAA,GACAI,UAAA,gBAIA4C,EAAAmR,YAAA7T,IAAA0C,EAAAmR,YAAAgB,KAAA,IAAA3R,EAAA,CACAwH,OAAA,EACAhH,WAAA,EACAsD,KAAA,EACAlH,UAAA,SACAK,OAAA,CACA6X,SAAA,WACAtV,EAAAmR,YAAAgB,KAAAhM,WAAA9G,UAAAT,OAAA,SACAoB,EAAAmR,YAAAoE,OAAAvX,SAEAmG,QAAA,SAAApG,GACAyC,EAAAvH,UAAAuE,cAAA2G,QAAA3M,KAAAkF,KAAAqB,KAGAoB,KAAA,CACA,CACAoC,MAAA,CACA,CAAiBnE,UAAA,gCAAA9E,MAAA2S,QAAA,SACjBjL,EAAA4Y,MAAAxW,EAAAC,IACA,MACA,CAAqBjF,UAAA,aACrB4C,EAAA4Y,MAAA5Y,EAAA4Y,MAAAnX,UAAA9G,EAAAiW,QAAAuI,iBAGA/b,UAAA,sBACAwE,MAAA,WACAuJ,OAAAC,KAAA0G,OAAA,CACAwC,OAAA,WACAnV,KAAA,CACA2I,KAAA,OACAtP,KAAA,SACAgM,MAAAyG,QAAA,aACA6I,YAAA7I,QAAA,kBACA3S,MAAA0H,EAAA4Y,MAAAnX,WAEAhE,OAAA,CACAqb,KAAA,SAAA/a,GACAiC,EAAA4Y,MAAAnX,UAAA1D,EAAAzF,MACA0H,EAAAoZ,eAAA,KACApZ,EAAAmR,YAAAoE,OAAAvQ,MAAAvD,UAAAwJ,QAAA,YAGiB,SAAArC,YASjB5I,EAAAmR,YAAA7T,IAAA0C,EAAAmR,YAAAoE,OAAA,IAAAL,EAAA,CACA5c,MAAA2S,QAAA,SACA7N,UAAA,sBACAP,MAAAmD,EAAAmR,YAAAtU,MAAA6B,YAAAxB,SAAAC,cAAA,QACAM,OAAA,CACAmE,MAAA,WACA5B,EAAAoZ,eACAze,EAAAmF,MAAAnF,EAAA4Q,MAAA9P,KAAA,CAAAuE,EAAAoZ,iBAGAze,EAAAiW,QAAAjK,MAAA,CAAmCkQ,IAAA7W,EAAA4Y,MAAAnX,WAA0B,SAAAmH,EAAAzJ,GAG7DyJ,EACAuC,OAAAC,KAAAoK,OAAA,CACAhR,MAAAyG,QAAA,+BAAArC,EAAAsQ,QACAjU,KAAA,QACA6C,KAAA,YAEqB3I,GAAA,kBAAAA,EAAAwU,MAAA,IAAAhG,YAOrB3N,EAAAmR,YAAAoE,OAAAvQ,MAAAvD,UAAAwJ,QAAA,YACAjL,EAAAoZ,eAAAja,GAPAgM,OAAAC,KAAAoK,OAAA,CACAhR,MAAAyG,QAAA,0BACAhG,KAAA,QACA6C,KAAA,eASA3D,QAAA,SAAApG,GACAA,EAAA8F,OAAAxK,EAAAqO,IACA1H,EAAAmR,YAAAgB,KAAAnU,QAEAgC,EAAAmR,YAAAgB,KAAAhM,WAAA9G,UAAA/B,IAAA,SACA0C,EAAAmR,YAAAgB,KAAAnR,WAAAhB,EAAAmR,YAAAgB,KAAAhT,KAAAZ,OAAA,IACaR,EAAA8F,OAAAxK,EAAAsO,MACb3H,EAAAmR,YAAAgB,KAAAnU,QAEAgC,EAAAmR,YAAAgB,KAAAhM,WAAA9G,UAAA/B,IAAA,SACA0C,EAAAmR,YAAAgB,KAAAnR,WAAA,IACajD,EAAA8F,OAAAxK,EAAAM,IACbqG,EAAAmR,YAAAoE,OAAA9X,OAAA,UACAuC,EAAAmR,YAAAoE,OAAAtX,KAAA,SAA2DF,eAS3DiC,EAAAqR,SAAA,IAAA1N,EAAA,CACAhH,SAAA,EACAE,MAAAK,SAAAmT,eAAA,eACArP,WAAA,EACA+C,OAAA,CAAA/D,EAAAmR,eAEAnR,EAAA1C,IAAA0C,EAAAqR,UAGArR,EAAApC,YAAA,mBAAAG,GACA,OAAAA,EAAA8F,MACA,KAAAxK,EAAAC,KACAqB,EAAAmF,MAAAnF,EAAA4Q,MAAAtH,SAMAjE,EAAApC,YAAA,kBACAoC,EAAAoZ,eAAA,KACApZ,EAAAmR,YAAAoE,OAAAvQ,MAAAvD,UAAAwJ,QAAA,SACAjL,EAAAqR,SAAA/R,OACAU,EAAAqR,SAAArT,QAEAgC,EAAAmR,YAAAgB,KAAAhM,WAAA9G,UAAAT,OAAA,SACAoB,EAAAmR,YAAAoE,OAAAvX,UAKA5G,EAAAD,QAAA6I","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n","/**\n * Global list of non-printable control key codes.\n *\n * At the moment `keypress` and `keydown` events are emitted for the same keys (for both printable and non-printable characters).\n *\n * WARNING!!! All codes in this file (except 'volumeUp' and 'volumeDown')\n * are used in window 'keydown' handler to prevent wrong 'keypress' firings.\n * If you add new code to this file 'keypress' event with this code will never fire.\n *\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar keys = require('spa-keys');\n\n\n// extend with additional codes\nkeys.back         = keys.backspace;\nkeys.channelNext  = keys.tab;        // Tab\nkeys.channelPrev  = keys.tab + 's';  // Shift+Tab\nkeys.ok           = keys.enter;      // Enter\nkeys.exit         = keys.escape;     // Esc\nkeys.volumeUp     = 107;             // NUMPAD +\nkeys.volumeDown   = 109;             // NUMPAD -\nkeys.f1           = 112 + 'c';       // Ctrl+F1\nkeys.f2           = 113 + 'c';       // Ctrl+F2\nkeys.f3           = 114 + 'c';       // Ctrl+F3\nkeys.f4           = 115 + 'c';       // Ctrl+F4\nkeys.refresh      = 116 + 'c';       // Ctrl+F5\nkeys.frame        = 117 + 'c';       // Ctrl+F6\nkeys.phone        = 119 + 'c';       // Ctrl+F8\nkeys.set          = 120 + 'c';       // Ctrl+F9\nkeys.tv           = 121 + 'c';       // Ctrl+F10\nkeys.menu         = 122 + 'c';       // Ctrl+F11\nkeys.app          = 123 + 'c';       // Ctrl+F12\nkeys.rewind       = 66  + 'a';       // Alt+B\nkeys.forward      = 70  + 'a';       // Alt+F\nkeys.audio        = 71  + 'a';       // Alt+G\nkeys.standby      = 74  + 'a';       // Alt+J\nkeys.keyboard     = 76  + 'a';       // Alt+L\nkeys.usbMounted   = 80  + 'a';       // Alt+P\nkeys.usbUnmounted = 81  + 'a';       // Alt+Q\nkeys.playPause    = 82  + 'a';       // Alt+R\nkeys.play         = -1;              // should be redefined on some platforms\nkeys.pause        = -1;              // should be redefined on some platforms\nkeys.stop         = 83  + 'a';       // Alt+S\nkeys.power        = 85  + 'a';       // Alt+U\nkeys.record       = 87  + 'a';       // Alt+W\nkeys.info         = 89  + 'a';       // Alt+Y\nkeys.mute         = 192 + 'a';\nkeys.digit0       = 48;\nkeys.digit1       = 49;\nkeys.digit2       = 50;\nkeys.digit3       = 51;\nkeys.digit4       = 52;\nkeys.digit5       = 53;\nkeys.digit6       = 54;\nkeys.digit7       = 55;\nkeys.digit8       = 56;\nkeys.digit9       = 57;\n\n\n// public\nmodule.exports = keys;\n\n// public\n// module.exports = {\n//     getCode: function ( event ) {\n//         var code = event.keyCode;\n//\n//         // apply key modifiers\n//         if ( event.shiftKey ) { code += 1000; }\n//         if ( event.altKey )   { code += 2000; }\n//\n//         return code;\n//     },\n//\n//     codes: {\n//         back:         8,    // Backspace\n//         channelPrev:  1009, // Shift+Tab\n//         channelNext:  9,    // Tab\n//         ok:           13,   // Enter\n//         exit:         27,   // Esc\n//         pageUp:       33,\n//         pageDown:     34,\n//         end:          35,\n//         home:         36,\n//         left:         37,\n//         up:           38,\n//         right:        39,\n//         down:         40,\n//         'delete':     46,\n//         volumeUp:     107,  // NUMPAD +\n//         volumeDown:   109,  // NUMPAD -\n//         f1:           112,  // F1\n//         f2:           113,  // F2\n//         f3:           114,  // F3\n//         f4:           115,  // F4\n//         refresh:      116,  // F5\n//         frame:        117,  // F6\n//         phone:        119,  // F8\n//         set:          120,  // F9\n//         tv:           121,  // F10\n//         menu:         122,  // F11\n//         app:          123,  // F12\n//         rewind:       2066, // Alt+B\n//         forward:      2070, // Alt+F\n//         audio:        2071, // Alt+G\n//         standby:      2074, // Alt+J\n//         keyboard:     2076, // Alt+L\n//         usbMounted:   2080, // Alt+P\n//         usbUnmounted: 2081, // Alt+Q\n//         playPause:    2082, // Alt+R\n//         stop:         2083, // Alt+S\n//         power:        2085, // Alt+U\n//         record:       2087, // Alt+W\n//         info:         2089, // Alt+Y\n//         mute:         2192\n//     }\n// };\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    Emitter = require('cjs-emitter'),\n    counter = 0;\n\n\n/**\n * Base component implementation.\n *\n * Visual element that can handle sub-components.\n * Each component has a DOM element container $node with a set of classes:\n * \"component\" and some specific component class names depending on the hierarchy, for example \"page\".\n * Each component has a unique ID given either from $node.id or from data.id. If not given will generate automatically.\n *\n * @constructor\n * @extends Emitter\n *\n * @param {Object} [config={}] init parameters\n * @param {Element} [config.id] component unique identifier (generated if not set)\n * @param {string} [config.className] space-separated list of classes for \"className\" property of this.$node\n * @param {Element} [config.$node] DOM element/fragment to be a component outer container\n * @param {Element} [config.$body] DOM element/fragment to be a component inner container (by default is the same as $node)\n * @param {Component} [config.parent] link to the parent component which has this component as a child\n * @param {Array.<Component>} [config.children=[]] list of components in this component\n * @param {Object.<string, function>} [config.events={}] list of event callbacks\n * @param {boolean} [config.visible=true] component initial visibility state flag\n * @param {boolean} [config.focusable=true] component can accept focus or not\n * @param {boolean} [config.propagate=false] allow to emit events to the parent component\n *\n * @fires module:stb/component~Component#click\n *\n * @example\n * var component = new Component({\n *     $node: document.getElementById(id),\n *     className: 'bootstrap responsive',\n *     events: {\n *         click: function () { ... }\n *     }\n * });\n * component.add( ... );\n * component.focus();\n */\nfunction Component ( config ) {\n    // current execution context\n    var self = this,\n        name;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.id && typeof config.id !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.id');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$node && !(config.$node instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$node type');\n        }\n        if ( config.$body && !(config.$body instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$body type');\n        }\n        if ( config.parent && !(config.parent instanceof Component) ) {\n            throw new Error(__filename + ': wrong config.parent type');\n        }\n        if ( config.children && !Array.isArray(config.children) ) {\n            throw new Error(__filename + ': wrong config.children type');\n        }\n    }\n\n    /**\n     * Component visibility state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.visible = true;\n\n    /**\n     * Component can accept focus or not.\n     *\n     * @type {boolean}\n     */\n    this.focusable = true;\n\n    /**\n     * DOM outer handle.\n     *\n     * @type {Element}\n     */\n    this.$node = null;\n\n    /**\n     * DOM inner handle.\n     * In simple cases is the same as $node.\n     *\n     * @type {Element}\n     */\n    this.$body = null;\n\n    /**\n     * Link to the parent component which has this component as a child.\n     *\n     * @type {Component}\n     */\n    this.parent = null;\n\n    /**\n     * List of all children components.\n     *\n     * @type {Component[]}\n     */\n    this.children = [];\n\n    /**\n     * allow to emit events to the parent component\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.propagate = !!config.propagate;\n\n    // parent constructor call\n    Emitter.call(this);\n\n    // outer handle - empty div in case nothing is given\n    this.$node = config.$node || document.createElement('div');\n\n    // inner handle - the same as outer handler in case nothing is given\n    this.$body = config.$body || this.$node;\n\n    // set CSS class names\n    //this.$node.className += ' component ' + (config.className || '');\n    // previous approach is not good as it mess with components hierarchy\n    this.$node.className = this.name + ' ' + (config.className || '');\n\n    // apply component id if given, generate otherwise\n    this.id = config.id || this.$node.id || 'cid' + counter++;\n\n    // apply hierarchy\n    if ( config.parent ) {\n        // add to parent component\n        config.parent.add(this);\n    }\n\n    // apply given visibility\n    if ( config.visible === false ) {\n        // default state is visible\n        this.hide();\n    }\n\n    // apply focus handling method\n    if ( config.focusable === false ) {\n        // can't accept focus\n        this.focusable = false;\n    }\n\n    // a descendant defined own events\n    if ( this.defaultEvents ) {\n        // sanitize\n        config.events = config.events || {};\n\n        if ( DEVELOP ) {\n            if ( typeof config.events !== 'object' ) {\n                throw new Error(__filename + ': wrong config.events type');\n            }\n            if ( typeof this.defaultEvents !== 'object' ) {\n                throw new Error(__filename + ': wrong this.defaultEvents type');\n            }\n        }\n\n        for ( name in this.defaultEvents ) {\n            // overwrite default events with user-defined\n            config.events[name] = config.events[name] || this.defaultEvents[name];\n        }\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( eventName ) {\n            self.addListener(eventName, config.events[eventName]);\n        });\n    }\n\n    // apply the given children components\n    if ( config.children ) {\n        // apply\n        this.add.apply(this, config.children);\n    }\n\n    // component activation by mouse\n    this.$node.addEventListener('click', function ( event ) {\n        // left mouse button\n        //if ( event.button === 0 ) {\n        // activate if possible\n        self.focus();\n\n        // there are some listeners\n        if ( self.events['click'] ) {\n            /**\n             * Mouse click event.\n             *\n             * @event module:stb/component~Component#click\n             *\n             * @type {Object}\n             * @property {Event} event click event data\n             */\n            self.emit('click', event);\n        }\n        //}\n\n        if ( DEVELOP ) {\n            // middle mouse button\n            if ( event.button === 1 ) {\n                //debug.inspect(self, 0);\n                debug.info('\"window.link\" or \"' + self.id + '.component\"', 'this component is now available in global scope');\n                window.link = self;\n                self.$node.classList.toggle('wired');\n            }\n        }\n\n        event.stopPropagation();\n    });\n\n    if ( DEVELOP ) {\n        // expose inner ID to global scope\n        window[self.id] = self.$node;\n\n        // expose a link\n        this.$node.component = this.$body.component = this;\n        this.$node.title = this.name + '#' + this.id + ' (outer)';\n        this.$body.title = this.name + '#' + this.id + ' (inner)';\n    }\n\n    debug.info('create component ' + this.name + '#' + this.id, null, {\n        tags: ['create', 'component', this.name, this.id]\n    });\n}\n\n\n// inheritance\nComponent.prototype = Object.create(Emitter.prototype);\nComponent.prototype.constructor = Component;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nComponent.prototype.defaultEvents = null;\n\n\n/**\n * Add a new component as a child.\n *\n * @param {...Component} [child] variable number of elements to append\n *\n * @files Component#add\n *\n * @example\n * panel.add(\n *     new Button( ... ),\n *     new Button( ... )\n * );\n */\nComponent.prototype.add = function ( child ) {\n    var index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        child = arguments[index];\n\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        // apply\n        this.children.push(child);\n        child.parent = this;\n\n        // correct DOM parent/child connection if necessary\n        if ( child.$node && child.$node.parentNode === null ) {\n            this.$body.appendChild(child.$node);\n        }\n\n        debug.info('add component ' + child.name + '#' + child.id + ' to ' + this.name + '#' + this.id, null, {\n            tags: ['add', 'component', this.name, this.id, child.name, child.id]\n        });\n\n        // there are some listeners\n        if ( this.events['add'] ) {\n            /**\n             * A child component is added.\n             *\n             * @event module:stb/component~Component#add\n             *\n             * @type {Object}\n             * @property {Component} item new component added\n             */\n            this.emit('add', {item: child});\n        }\n\n        //debug.log('component ' + this.name + '#' + this.id + ' new child: ' + child.name + '#' + child.id);\n    }\n};\n\n\n/* @todo: consider activation in future */\n///**\n// * Insert component into the specific position.\n// *\n// * @param {Component} child component instance to insert\n// * @param {number} index insertion position\n// */\n//Component.prototype.insert = function ( child, index ) {\n//    var prevIndex = this.children.indexOf(child);\n//\n//    if ( DEVELOP ) {\n//        if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n//        if ( !(child instanceof Component) ) { throw new Error(__filename + ': wrong child type'); }\n//    }\n//\n//    if ( prevIndex !== -1 ) {\n//        this.children.splice(prevIndex, 1);\n//        this.$body.removeChild(child.$node);\n//    }\n//\n//    if ( index === this.children.length ) {\n//        this.$body.appendChild(child.$node);\n//    } else {\n//        this.$body.insertBefore(child.$node, this.$body.children[index]);\n//    }\n//    this.children.splice(index, 0, child);\n//\n//    if ( !child.parent ) {\n//        child.parent = this;\n//    }\n//};\n\n\n/**\n * Delete this component and clear all associated events.\n *\n * @fires module:stb/component~Component#remove\n */\nComponent.prototype.remove = function () {\n    // really inserted somewhere\n    if ( this.parent ) {\n        if ( DEVELOP ) {\n            if ( !(this.parent instanceof Component) ) {\n                throw new Error(__filename + ': wrong this.parent type');\n            }\n        }\n\n        // active at the moment\n        if ( app.activePage.activeComponent === this ) {\n            this.blur();\n            this.parent.focus();\n        }\n        this.parent.children.splice(this.parent.children.indexOf(this), 1);\n    }\n\n    // remove all children\n    this.children.forEach(function ( child ) {\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        child.remove();\n    });\n\n    this.$node.parentNode.removeChild(this.$node);\n\n    // there are some listeners\n    if ( this.events['remove'] ) {\n        /**\n         * Delete this component.\n         *\n         * @event module:stb/component~Component#remove\n         */\n        this.emit('remove');\n    }\n\n    // remove all listeners\n    this.events = {};\n\n    //debug.log('component ' + this.name + '#' + this.id + ' remove', 'red');\n    debug.info('remove component ' + this.name + '#' + this.id, null, {\n        tags: ['remove', 'component', this.name, this.id]\n    });\n};\n\n\n/**\n * Activate the component.\n * Notify the owner-page and apply CSS class.\n *\n * @param {Object} [data] custom data which passed into handlers\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#focus\n */\nComponent.prototype.focus = function ( data ) {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // this is a visual component on a page\n    // not already focused and can accept focus\n    if ( this.focusable && this !== activeItem ) {\n        // notify the current active component\n        if ( activeItem ) { activeItem.blur(); }\n\n        /* eslint consistent-this: 0 */\n\n        // apply\n        activePage.activeComponent = activeItem = this;\n        activeItem.$node.classList.add('focus');\n\n        //debug.log('component ' + this.name + '#' + this.id + ' focus');\n        debug.info('focus component ' + this.name + '#' + this.id, null, {\n            tags: ['focus', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( activeItem.events['focus'] ) {\n            /**\n             * Make this component focused.\n             *\n             * @event module:stb/component~Component#focus\n             */\n            activeItem.emit('focus', data);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Remove focus.\n * Change page.activeComponent and notify subscribers.\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#blur\n */\nComponent.prototype.blur = function () {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // apply visuals anyway\n    this.$node.classList.remove('focus');\n\n    // this is the active component\n    if ( this === activeItem ) {\n        activePage.activeComponent = null;\n\n        //debug.log('component ' + this.name + '#' + this.id + ' blur', 'grey');\n        debug.info('blur component ' + this.name + '#' + this.id, null, {\n            tags: ['blur', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['blur'] ) {\n            /**\n             * Remove focus from this component.\n             *\n             * @event module:stb/component~Component#blur\n             */\n            this.emit('blur');\n        }\n\n        return true;\n    }\n\n    debug.warn('component ' + this.name + '#' + this.id + ' attempt to blur without link to a page', null, {\n        tags: ['blur', 'component', this.name, this.id]\n    });\n\n    // nothing was done\n    return false;\n};\n\n\n/*function show ( self, data ) {\n    // correct style\n    self.$node.classList.remove('hidden');\n    // flag\n    self.visible = true;\n\n    debug.info('show component ' + self.name + '#' + self.id, null, {\n        tags: ['show', 'component', self.name, self.id]\n    });\n\n    // there are some listeners\n    if ( self.events['show'] ) {\n        /!**\n         * Make the component visible.\n         *\n         * @event module:stb/component~Component#show\n         *!/\n        self.emit('show', data);\n    }\n}*/\n\n/**\n * Make the component visible and notify subscribers.\n *\n * @param {Object} [data] custom data which passed into handlers\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#show\n */\nComponent.prototype.show = function ( data, callback ) {\n    //var self = this;\n\n    // is it hidden\n    if ( !this.visible ) {\n        /*if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(function () {\n                show(self, data);\n                callback();\n            });\n        } else {\n            // sync call\n            show(this, data);\n        }*/\n\n        // correct style\n        this.$node.classList.remove('hidden');\n        // flag\n        this.visible = true;\n\n        debug.info('show component ' + this.name + '#' + this.id, null, {\n            tags: ['show', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['show'] ) {\n            /**\n             * Make the component visible.\n             *\n             * @event module:stb/component~Component#show\n             */\n            this.emit('show', data);\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Make the component hidden and notify subscribers.\n *\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#hide\n */\nComponent.prototype.hide = function ( callback ) {\n    // is it visible\n    if ( this.visible ) {\n        // correct style\n        this.$node.classList.add('hidden');\n        // flag\n        this.visible = false;\n\n        debug.info('hide component ' + this.name + '#' + this.id, null, {\n            tags: ['hide', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['hide'] ) {\n            /**\n             * Make the component hidden.\n             *\n             * @event module:stb/component~Component#hide\n             */\n            this.emit('hide');\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = Component;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component');\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar app = require('./lib/main');\n\n\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    parse   = require('cjs-query').parse,\n    app     = new Emitter();\n\n\n/**\n * Make the given inactive/hidden page active/visible.\n * Pass some data to the page and trigger the corresponding event.\n *\n * @param {Page} page item to show\n * @param {*} [data] data to send to page\n *\n * @return {boolean} operation status\n */\nfunction showPage ( page, data ) {\n    // page available and can be hidden\n    if ( page && !page.active ) {\n        // apply visibility\n        page.$node.classList.add('active');\n        page.active = true;\n        app.activePage = page;\n\n        debug.info('show component ' + page.name + '#' + page.id, null, {\n            tags: ['show', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' show', 'green');\n\n        // there are some listeners\n        if ( page.events['show'] ) {\n            // notify listeners\n            page.emit('show', {data: data});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n/**\n * Make the given active/visible page inactive/hidden and trigger the corresponding event.\n *\n * @param {Page} page item to hide\n *\n * @return {boolean} operation status\n */\nfunction hidePage ( page ) {\n    // page available and can be hidden\n    if ( page && page.active ) {\n        // apply visibility\n        page.$node.classList.remove('active');\n        page.active  = false;\n        app.activePage = null;\n\n        debug.info('hide component ' + page.name + '#' + page.id, null, {\n            tags: ['hide', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' hide', 'grey');\n\n        // there are some listeners\n        if ( page.events['hide'] ) {\n            // notify listeners\n            page.emit('hide');\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n// url request params\napp.query = parse(document.location.search.substring(1));\n\n\n// global application configuration\n// in config.js file in js root\napp.config = require('app:config');\n\n\n// the only visible page\napp.activePage = null;\n\n\n/**\n * Browse to a given page.\n * Do nothing if the link is invalid. Otherwise hide the current, show new and update the \"previous\" link.\n *\n * @param {Page} pageTo instance of the page to show\n * @param {*} [data] options to pass to the page on show\n *\n * @return {boolean} operation status\n */\napp.route = function ( pageTo, data ) {\n    var pageFrom = app.activePage;\n\n    if ( DEVELOP ) {\n        //if ( router.pages.length > 0 ) {\n        if ( !pageTo || typeof pageTo !== 'object' ) {\n            throw new Error(__filename + ': wrong pageTo type');\n        }\n        if ( !('active' in pageTo) ) {\n            throw new Error(__filename + ': missing field \"active\" in pageTo');\n        }\n        //}\n    }\n\n    // valid not already active page\n    if ( pageTo && !pageTo.active ) {\n        //debug.log('router.navigate: ' + pageTo.id, pageTo === pageFrom ? 'grey' : 'green');\n        debug.info('app route: ' + pageTo.name + '#' + pageTo.id, null, {tags: ['route', pageTo.name, pageTo.id]});\n\n        // update url\n        //location.hash = this.stringify(name, data);\n\n        // apply visibility\n        hidePage(app.activePage);\n        showPage(pageTo, data);\n\n        // there are some listeners\n        if ( this.events['route'] ) {\n            // notify listeners\n            this.emit('route', {from: pageFrom, to: pageTo});\n        }\n\n        // store\n        //this.history.push(pageTo);\n\n        return true;\n    }\n\n    //debug.warn('invalid page to route: ' + pageTo.id, null, {tags: ['route', 'page', pageTo.id]});\n    console.warn('invalid page to route: ' + pageTo.id);\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-page');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-page';\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar List = require('mag-component-list'),\n    Layout = require('mag-component-layout');\n\n/**\n *  Layout list contains array of layout components\n *\n * @constructor\n * @extends List\n *\n * @param {Object} config object\n * @param {Element} [config.noData=''] element or string to display if set empty data\n *\n * @example\n * var CheckList = require('../stb/ui/layout.list'),\n *     list = new LayoutList({\n *         propagate: true,\n *         size: 7,\n *         focusIndex: 0,\n *         noData: 'No channels'\n *         data: [\n *                 {\n *                     items: [\n *                         {\n *                             className: 'star'\n *                         },\n *                         'Some text'\n *                     ],\n *                     click: function () {\n *                         // do something\n *                     }\n *                 },\n *                 {\n *                     items: [\n *                         'Hello world',\n *                         {\n *                             value: 'hi',\n *                             className: 'status'\n *                         }\n *                     ],\n *                     value:{\n *                         uri: 'http://55.55.55.55/some'\n *                     },\n *                     click: someHandler\n *                 },\n *                 {\n *                     items: [\n *                         {\n *                             className: 'big',\n *                             value: ' Some'\n *                         },\n *                         {\n *                             value: new Input()\n *                         }\n *                     ]\n *                 },\n *                 {\n *                     items: [\n *                         new Button({value: 'Ok'}),\n *                         new Button({value: 'Cancel'}),\n *                         new Button({value: 'Exit'})\n *                     ]\n *                 }\n *             ]\n * });\n */\nfunction LayoutList ( config ) {\n    var self = this;\n\n    config = config || {};\n\n    /**\n     * Elements handlers\n     */\n    this.handlers = {};\n\n    /**\n     * No data placeholder\n     *\n     * @type {Element}\n     */\n    this.$noData = null;\n\n    //config.className = 'layoutList ' + (config.className || '');\n\n    config.propagate = config.propagate === undefined ? true : config.propagate;\n\n    /**\n     * Set data layout to be fixed to cache HTML elements\n     *\n     * @type {boolean|*}\n     */\n    this.fixedData = config.fixedData || false;\n\n    //config.$body = document.createElement('div');\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    this.$noData = document.createElement('div');\n    this.$noData.className = 'noData hidden';\n\n    List.call(this, config);\n\n    this.$node.appendChild(this.$body);\n    this.$node.appendChild(this.$noData);\n\n    // add handler to focus inner layout\n    this.addListener('click:item', function ( event ) {\n        // focus inner layout of item\n        if ( event.$item.layout.children.length && !event.inner ) {\n            event.$item.layout.children[event.$item.layout.focusIndex].focus();\n        }\n\n        // only focus item if we click mouse\n        if ( event.inner ) {\n            self.focus();\n            self.focusItem(event.$item);\n        }\n        // do click callback if it present\n        if ( self.handlers[event.$item.index] ) {\n            self.handlers[event.$item.index](event.$item);\n        }\n    });\n}\n\n\nLayoutList.prototype = Object.create(List.prototype);\nLayoutList.prototype.constructor = LayoutList;\n\n// set component name\nLayoutList.prototype.name = 'mag-component-layout-list';\n\n\n/*eslint id-length:0*/\n/**\n * Default render function\n *\n * @param {Element} $item in list\n * @param {Object} config to render layout element\n */\nLayoutList.prototype.renderItemDefault = function ( $item, config ) {\n    var layout, layoutConfig,\n        currentNode,\n        currentData,\n        i;\n\n    if ( $item.ready && this.fixedData ) {\n        for ( i = 0; i < config.items.length; i++ ) {\n            currentData = config.items[i];\n            if ( typeof currentData.value === 'string' || currentData.value === undefined ) {\n                currentNode = $item.layout.$node.childNodes[i];\n                currentNode.innerText = currentData.value || '';\n                currentNode.className = currentData.className || '';\n            }\n        }\n    } else {\n        // clear inner content\n        while ( $item.firstChild ) {\n            $item.removeChild($item.firstChild);\n        }\n\n        layoutConfig = {\n            focusable: false,\n            data: config.items\n        };\n\n        if ( config.className ) {\n            layoutConfig.className = config.className;\n        }\n\n        layout = new Layout(layoutConfig);\n\n        $item.appendChild(layout.$node);\n        $item.layout = layout;\n        layout.parent = this;\n        layout.$parentItem = $item;\n\n        // focus layoutList if click on layout\n        layout.addListener('click', function () {\n            // add inner property to set that event comes from inner component\n            layout.parent.emit('click:item', {$item: $item, inner: true});\n        });\n\n        if ( config.click ) {\n            this.handlers[$item.index] = config.click;\n        }\n        // item is rendered\n        $item.ready = true;\n    }\n    $item.value = config.value || {};\n};\n\n\nLayoutList.prototype.setData = function ( config ) {\n    List.prototype.setData.call(this, config);\n\n    if ( config.data && config.data.length ) {\n        this.$noData.classList.add('hidden');\n    } else {\n        this.$noData.classList.remove('hidden');\n    }\n};\n\n\nLayoutList.prototype.init = function ( config ) {\n    var $wrap;\n\n    List.prototype.init.call(this, config);\n    if ( config.noData ) {\n        if ( DEVELOP ) {\n            if ( typeof config.noData !== 'string' && !(config.noData instanceof Element) ) {\n                throw new Error(__filename + ': wrong config.$noData type');\n            }\n        }\n\n        this.$noData.innerHTML = '';\n        if ( config.noData instanceof Element ) {\n            this.$noData.appendChild(config.noData);\n        } else if ( typeof config.noData === 'string' ) {\n            $wrap = document.createElement('div');\n            $wrap.innerText = config.noData;\n            this.$noData.appendChild($wrap);\n        }\n    }\n\n    if ( config.data && config.data.length ) {\n        this.$noData.classList.add('hidden');\n    } else {\n        this.$noData.classList.remove('hidden');\n    }\n};\n\nLayoutList.prototype.renderItem = LayoutList.prototype.renderItemDefault;\n\n\nmodule.exports = LayoutList;\n","/**\n * HTML elements low-level handling.\n *\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n/* eslint no-unused-vars: 0 */\n\n/**\n * DOM manipulation module\n */\nvar dom = {};\n\n\n/**\n * Create a new HTML element.\n *\n * @param {string} tagName mandatory tag name\n * @param {Object|null} [attrList] element attributes\n * @param {...*} [content] element content (primitive value/values or other nodes)\n * @return {Node|null} HTML element or null on failure\n *\n * @example\n * dom.tag('table');\n * dom.tag('div', {}, 'some text');\n * dom.tag('div', {className:'top'}, dom.tag('span'), dom.tag('br'));\n * dom.tag('link', {rel:'stylesheet', type:'text/css', href:'http://some.url/'});\n */\ndom.tag = function ( tagName, attrList, content ) {\n    var node = null,\n        index, name;\n\n    // minimal param is given\n    if ( tagName ) {\n        // empty element\n        node = document.createElement(tagName);\n\n        // optional attribute list is given\n        if ( attrList && typeof attrList === 'object' ) {\n            for ( name in attrList ) {\n                // extend a new node with the given attributes\n                node[name] = attrList[name];\n            }\n        }\n\n        // content (arguments except the first two)\n        for ( index = 2; index < arguments.length; index++ ) {\n            // some data is given\n            if ( arguments[index] ) {\n                // regular HTML tag or plain data\n                node.appendChild(\n                    typeof arguments[index] === 'object' ? arguments[index] : document.createTextNode(arguments[index])\n                );\n            }\n        }\n\n    }\n\n    return node;\n};\n\n\n/**\n * Create a new DocumentFragment filled with the given non-empty elements if any.\n *\n * @param {...*} [node] fragment content (primitive value/values or other nodes)\n * @return {DocumentFragment} new placeholder\n *\n * @example\n * // gives an empty fragment element\n * dom.fragment();\n * // gives a fragment element with 3 div element inside\n * dom.fragment(dom.tag('div'), div2, div3);\n * // mixed case\n * dom.fragment('some text', 123, div3);\n */\ndom.fragment = function ( node ) {\n    // prepare placeholder\n    var fragment = document.createDocumentFragment(),\n        index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        node = arguments[index];\n        // some data is given\n        if ( node ) {\n            // regular HTML tag or plain data\n            fragment.appendChild(typeof node === 'object' ? node : document.createTextNode(node));\n        }\n    }\n\n    return fragment;\n};\n\n\n/**\n * Add the given non-empty data (HTML element/text or list) to the destination element.\n *\n * @param {Node} tagDst element to receive children\n * @param {...*} [content] element content (primitive value/values or other nodes)\n * @return {Node|null} the destination element - owner of all added data\n *\n * @example\n * // simple text value\n * add(some_div, 'Hello world');\n * // single DOM Element\n * add(some_div, some_other_div);\n * // DOM Element list\n * add(some_div, div1, div2, div3);\n * // mixed case\n * add(some_div, div1, 'hello', 'world');\n */\ndom.add = function ( tagDst, content ) {\n    var index;\n\n    // valid HTML tag as the destination\n    if ( tagDst instanceof Node ) {\n        // append all except the first one\n        for ( index = 1; index < arguments.length; index++ ) {\n            // some data is given\n            if ( arguments[index] ) {\n                // regular HTML tag or plain data\n                tagDst.appendChild(\n                    typeof arguments[index] === 'object' ? arguments[index] : document.createTextNode(arguments[index])\n                );\n            }\n        }\n\n        return tagDst;\n    }\n\n    return null;\n};\n\n\n/**\n * Remove the given elements from the DOM.\n *\n * @param {...Node} [nodes] element to be removed\n * @return {boolean} operation status (true - all given elements removed)\n *\n * @example\n * dom.remove(document.querySelector('div.test'));\n * dom.remove(div1, div2, div3);\n */\ndom.remove = function ( nodes ) {\n    // amount of successfully removed nodes\n    var count = 0,\n        index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        // valid non-empty tag\n        if ( arguments[index] && arguments[index].parentNode ) {\n            if ( arguments[index].parentNode.removeChild(arguments[index]) === arguments[index] ) {\n                count++;\n            }\n        }\n    }\n\n    return arguments.length > 0 && count === arguments.length;\n};\n\n\ndom.clear = function ( node ) {\n    while ( node.lastChild ) {\n        node.removeChild(node.lastChild);\n    }\n};\n\n\n// public\nmodule.exports = dom;\n","/**\n * @license The MIT License (MIT)\n * @author Yaroslav Surilov <y.surilov@infomir.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component');\n\n\n/**\n * Base flicker implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {function} [config.render] custom render function\n * @param {number} [config.interval=1000] interval for flicking\n * @param {string} [config.value] value to set in flickering container\n */\nfunction Flicker ( config ) {\n    var interval;\n\n    // sanitize\n    config = config || {};\n\n    this.timerId = 0;\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( !config.value && !config.render ) {\n            throw new Error(__filename + ': nothing to render (absent value and render method)');\n        }\n        if ( config.render && typeof config.render !== 'function' ) {\n            throw new Error(__filename + ': wrong config.render type');\n        }\n    }\n\n    if ( config.render ) {\n        this.render = config.render;\n    }\n\n    config.focusable = false;\n\n    config.visible = config.visible || true;\n\n    this.value = config.value;\n\n    // initial state\n    this.active = false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'flicker ' + (config.className || '');\n\n    Object.defineProperty(this, 'interval', {\n        set: function ( value ) {\n            if ( DEVELOP ) {\n                // interval must be 0 or positive integer\n                if ( !(typeof value === 'number' && isFinite(value) && !(value % 1) && value >= 0) ) {\n                    throw new Error(__filename + ': wrong interval value');\n                }\n            }\n\n            interval = value;\n        },\n        get: function () {\n            return interval;\n        }\n    });\n\n    this.interval = config.interval || 1000;\n\n    // parent constructor call\n    Component.call(this, config);\n}\n\n\n// inheritance\nFlicker.prototype = Object.create(Component.prototype);\nFlicker.prototype.constructor = Flicker;\n\n// set component name\nFlicker.prototype.name = 'spa-component-flicker';\n\n\n/**\n * Start flickering.\n */\nFlicker.prototype.start = function () {\n    var self = this;\n\n    if ( !this.active ) {\n        this.active = true;\n        // starts immediately\n        (function run () {\n            self.render(self.$node, self.value);\n            self.timerId = setTimeout(run, self.interval);\n        })();\n    }\n};\n\n\n/**\n * Stop flickering.\n */\nFlicker.prototype.stop = function () {\n    if ( this.active ) {\n        this.active = false;\n        clearTimeout(this.timerId);\n    }\n};\n\n\n/**\n * Fill the given item with data.\n *\n * @param {Element} $item item DOM link\n * @param {string} value associated with this item data\n */\nFlicker.prototype.defaultRender = function ( $item, value ) {\n    $item.innerText = value;\n};\n\n\n/**\n * Can be redefined to provide custom rendering.\n *\n * @type {function}\n */\nFlicker.prototype.render = Flicker.prototype.defaultRender;\n\n\n// public\nmodule.exports = Flicker;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n/**\n * Magsdk panel set implementation\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {Array} [config.panels] array of panels to use\n * @param {Array} [config.focusIndex=0] focus panel index\n * @constructor\n * @extends Component\n */\nfunction PanelSet ( config ) {\n    var self = this,\n        index;\n\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.panels && !Array.isArray(config.panels) || !config.panels.length ) {\n            throw new Error(__filename + ': wrong config.panels type');\n        }\n    }\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'panelSet ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    this.panels = config.panels;\n\n    /**\n     * Index of current active panel\n     *\n     * @type {number}\n     */\n    this.focusIndex = 0;\n\n    // set special panels classes\n    if ( config.panels && !config.panels[0].main ) {\n        config.panels[0].$node.classList.add('left');\n        // small resolution special class\n        config.panels[0].$node.classList.add('expand');\n    }\n\n    if (  config.panels && config.panels[1] && config.panels[1].main ) {\n        // small resolution special class\n        config.panels[1].$node.classList.add('position-right');\n    }\n\n    if ( config.panels && config.panels[2] && config.panels[1].main ) {\n        config.panels[2].$node.classList.add('right');\n    }\n\n    // add panels\n    if ( config.panels ) {\n        this.add.apply(this, config.panels);\n    }\n\n    // panel keydown handler to set focus panel\n    function keydownHandler ( event ) {\n        switch ( event.code ) {\n            case keys.left:\n                if ( self.focusIndex > 0 ) {\n                    self.panels[self.focusIndex - 1].focus();\n                }\n                break;\n            case keys.right:\n                if ( self.focusIndex < self.panels.length - 1 ) {\n                    self.panels[self.focusIndex + 1].focus();\n                }\n                break;\n        }\n    }\n\n    // add special listener\n    for ( index = 0; index < this.panels.length; index++ ) {\n        this.panels[index].addListeners({\n            keydown: keydownHandler\n        });\n        // set panels indexes\n        this.panels[index].index = index;\n    }\n\n    /*if ( config.focusIndex && config.focusIndex < this.panels.length ) {\n     this.panels[config.focusIndex].focus();\n     } else {\n     if ( config.panels.length > 1 ) {\n     this.panels[1].focus();\n     } else {\n     this.panels[0].focus();\n     }\n     }*/\n}\n\nPanelSet.prototype = Object.create(Component.prototype);\nPanelSet.prototype.constructor = PanelSet;\n\n// set component name\nPanelSet.prototype.name = 'mag-component-panel-set';\n\n\n/**\n *\n */\nPanelSet.prototype.focus = function () {\n    Component.prototype.focus.call(this);\n    this.panels[this.focusIndex].focus();\n};\n\n/**\n *\n */\nPanelSet.prototype.blur = function () {\n    this.panels[this.focusIndex].blur();\n};\n\nmodule.exports = PanelSet;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    Layout = require('mag-component-layout');\n\n/**\n * Extended panel implementation\n\n * @constructor\n * @extends Component\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {boolean} [config.main=false] set panel as main\n * @param {boolean} [config.size=1] size of panel width\n *\n * @example\n *\n * main = new Panel({\n *            size: 1,\n *             title: ['Left Panel', {className: 'info'}],\n *             main:true,\n *             children:[\n *                 new List({\n *                     data:['1 bla', '2 bro', '3 car', '4 hoho', 'Search'],\n *                     size:5\n *                 })\n *             ]\n *         });\n */\nfunction Panel ( config ) {\n    var $overlay;\n\n    config = config || {};\n\n    /**\n     * Size of panel\n     *\n     * @type {number}\n     */\n    this.size = 1;\n\n    /**\n     * Set panel as main\n     *\n     * @type {boolean}\n     */\n    this.main = false;\n\n    /**\n     * Index in panel set\n     *\n     * @type {number}\n     */\n    this.index = 0;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    // set default className if classList property empty or undefined\n    //config.className = 'Panel ' + (config.className || '');\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    //this.$node.classList.add('theme-main');\n    //this.$node.classList.add('theme-panel');\n\n    // add special class to set component size\n    if ( config.size ) {\n        this.size = config.size;\n        this.$node.classList.add('size' + config.size);\n    }\n\n    // add special class to set main panel\n    if ( config.main ) {\n        this.main = true;\n        this.$node.classList.add('main');\n    }\n\n    // create elements to set as component shadow\n    this.$shadow = {\n        left: document.createElement('div'),\n        right: document.createElement('div')\n    };\n\n    this.$shadow.left.className = 'shadow left';\n    this.$node.appendChild(this.$shadow.left);\n\n    this.$shadow.right.className = 'shadow right';\n    this.$node.appendChild(this.$shadow.right);\n\n    // add title to panel\n    if ( config.title ) {\n        if ( !Array.isArray(config.title) ) {\n            config.title = [config.title];\n        }\n        this.$title = new Layout({\n            //className: 'title theme-header theme-title',\n            className: 'title',\n            data: config.title,\n            focusable: false\n        });\n        this.$node.appendChild(this.$title.$node);\n    }\n\n    this.$node.appendChild(this.$body);\n\n    $overlay = document.createElement('div');\n    $overlay.className = 'overlay';\n    this.$node.appendChild($overlay);\n}\n\n// inheritance\nPanel.prototype = Object.create(Component.prototype);\nPanel.prototype.constructor = Panel;\n\n// set component name\nPanel.prototype.name = 'mag-component-panel';\n\n\n/**\n * Default events\n *\n * @type {{focus: Function}} try to focus first child component if it present\n */\nPanel.prototype.defaultEvents = {\n    focus: function () {\n        if ( this.children.length ) {\n            this.children[0].focus();\n        }\n    }\n};\n\n\n/**\n * Redefine default component focus to set panel as active even when give focus to children components\n */\nPanel.prototype.focus = function () {\n    if ( this.focusable ) {\n        this.parent.panels[this.parent.focusIndex].$node.classList.remove('active');\n        this.parent.panels[this.parent.focusIndex].$node.classList.remove('top');\n        Component.prototype.focus.call(this);\n        this.parent.focusIndex = this.index;\n        this.$node.classList.add('active');\n        this.$node.classList.add('top');\n        if ( this.index === 0 && this.parent.panels[1] && this.parent.panels[1].main ) {\n            this.parent.panels[1].$node.classList.remove('position-left');\n            this.parent.panels[1].$node.classList.add('position-right');\n            if ( this.parent.panels[2] ) {\n                this.parent.panels[2].$node.classList.remove('expand');\n            }\n            this.$node.classList.add('expand');\n\n        } else if ( this.index === 2 && this.parent.panels[1].main ) {\n            this.parent.panels[1].$node.classList.remove('position-right');\n            this.parent.panels[1].$node.classList.add('position-left');\n            this.parent.panels[0].$node.classList.remove('expand');\n            this.$node.classList.add('expand');\n        }\n    }\n};\n\n/**\n * Blur panel\n */\nPanel.prototype.blur = function () {\n    this.parent.panels[this.parent.focusIndex].$node.classList.remove('active');\n    Component.prototype.blur.call(this);\n};\n\n\n// public\nmodule.exports = Panel;\n","/**\n * @license The MIT License (MIT)\n * @copyright Dmitry Fedotov <bas.jsdev@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\nvar StbComponentModal = require('stb-component-modal'),\n    Component         = require('stb-component'),\n    keys              = require('stb-keys');\n\n\n/**\n * Modal window implementation.\n *\n * @constructor\n * @extends StbComponentModal\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {Object} [config.title] message title\n * @param {Object} [config.className] message classname\n * @param {Object} [config.icon] icon at header\n * @param {Object} [config.visible] visibility flag\n * @param {Object} [config.children] content (inherited from the parent)\n *\n * @example\n * var modalSort = new Modal({\n *     visible: false,\n *     title: 'sort',\n *     events: {\n *         show: function () {\n *             list.focus();\n *         },\n *         hide: function () {\n *             page.panelSet.focus();\n *         }\n *     },\n *     children: [list = new RadioList({})]\n * });\n * page.add(modalSort);\n */\nfunction Modal ( config ) {\n    var self = this,\n        $overlay, $body, onkeydown;\n\n    // sanitize\n    config = config || {};\n    config.events = config.events || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.icon && typeof config.icon !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.icon');\n        }\n        if ( config.title && typeof config.title !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.title');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body ) {\n            throw new Error(__filename + ': config.$body should not be provided in Modal manually');\n        }\n    }\n\n    // usually can't accept focus\n    config.focusable = config.focusable || false;\n    // hide by default\n    config.visible = config.visible || false;\n    // add default close by click\n    config.events.click = config.events.click || function () { self.hide(); };\n    // add close window behavior, when pushed a back button or a menu button\n    onkeydown = config.events.keydown;\n    config.events.keydown = function ( event ) {\n        if ( onkeydown ) {\n            onkeydown.call(this, event);\n        }\n        if ( event.code === keys.back || event.code === keys.menu ) {\n            event.stop = true;\n            self.hide();\n        }\n    };\n\n    // parent constructor call\n    StbComponentModal.call(this, config);\n\n    // add table-cell wrappers\n    this.$node.appendChild(document.createElement('div'));\n    this.$node.firstChild.classList.add('alignBox');\n    this.$node.firstChild.appendChild(document.createElement('div'));\n\n    // add header div\n    this.$header = document.createElement('div');\n    this.$header.className = 'header';\n\n    // insert caption placeholder\n    this.$text = this.$header.appendChild(document.createElement('div'));\n    this.$text.classList.add('text');\n    this.$text.innerText = config.title || '';\n\n    // optional icon\n    if ( config.icon ) {\n        this.$icon = this.$header.appendChild(document.createElement('div'));\n        this.$icon.className = 'icon ' + config.icon;\n    }\n\n    $overlay = document.createElement('div');\n    $overlay.className = 'overlay';\n\n    // add to dom\n    // add body wrapper\n    $body = this.$body.parentNode.removeChild(this.$body);\n    this.$node.firstChild.firstChild.appendChild(this.$header);\n    this.$node.firstChild.firstChild.appendChild($body);\n    this.$node.firstChild.firstChild.appendChild($overlay);\n}\n\n\n// inheritance\nModal.prototype = Object.create(StbComponentModal.prototype);\nModal.prototype.constructor = Modal;\n\n// set component name\nModal.prototype.name = 'mag-component-modal';\n\n\n/**\n * Redefine default component focus to set additional css\n */\nModal.prototype.focus = function () {\n    this.$node.classList.add('active');\n    StbComponentModal.prototype.focus.call(this);\n    if ( this.children[0] && this.children[0] instanceof Component ) {\n        this.children[0].focus();\n    }\n};\n\n\n/**\n * Blur message\n */\nModal.prototype.blur = function () {\n    this.$node.classList.remove('active');\n    StbComponentModal.prototype.blur.call(this);\n};\n\n\n// public\nmodule.exports = Modal;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-scrollbar');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-scrollbar';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Base Events Emitter implementation.\n *\n * @see http://nodejs.org/api/events.html\n * @constructor\n *\n * @example\n * var emitter = new Emitter();\n */\nfunction Emitter () {\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // if ( DEVELOP ) {\n    //     if ( typeof this !== 'object' ) { throw new Error(__filename + ': must be constructed via new'); }\n    // }\n\n    /**\n     * Inner hash table for event names and linked callbacks.\n     * Manual editing should be avoided.\n     *\n     * @member {Object.<string, function[]>}\n     *\n     * @example\n     * {\n     *     click: [\n     *         function click1 () { ... },\n     *         function click2 () { ... }\n     *     ],\n     *     keydown: [\n     *         function () { ... }\n     *     ]\n     * }\n     **/\n    this.events = {};\n}\n\n\nEmitter.prototype = {\n    /**\n     * Bind an event to the given callback function.\n     * The same callback function can be added multiple times for the same event name.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.addListener('click', function ( data ) { ... });\n     * // one more click handler\n     * emitter.addListener('click', function ( data ) { ... });\n     */\n    addListener: function ( name, callback ) {\n        console.assert(arguments.length === 2, 'wrong arguments number');\n        console.assert(typeof name === 'string', 'wrong name type');\n        console.assert(name.length > 0, 'empty name');\n        console.assert(typeof callback === 'function', 'callback should be a function');\n\n        // if ( DEVELOP ) {\n        //     if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        //     if ( typeof name !== 'string' || name.length === 0 ) { throw new Error(__filename + ': wrong or empty name'); }\n        //     if ( typeof callback !== 'function' ) { throw new Error(__filename + ': wrong callback type'); }\n        // }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(callback);\n    },\n\n\n    /**\n     * Add a one time listener for the event.\n     * This listener is invoked only the next time the event is fired, after which it is removed.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.once('click', function ( data ) { ... });\n     */\n    once: function ( name, callback ) {\n        // current execution context\n        var self = this;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n        }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(function onceWrapper () {\n            self.removeListener(name, onceWrapper);\n            callback.apply(self, arguments);\n        });\n    },\n\n\n    /**\n     * Apply multiple listeners at once.\n     *\n     * @param {Object} callbacks event names with callbacks\n     *\n     * @example\n     * emitter.addListeners({\n     *     click: function ( data ) {},\n     *     close: function ( data ) {}\n     * });\n     */\n    addListeners: function ( callbacks ) {\n        var name;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof callbacks !== 'object' ) {\n                throw new Error(__filename + ': wrong callbacks type');\n            }\n            if ( Object.keys(callbacks).length === 0 ) {\n                throw new Error(__filename + ': no callbacks given');\n            }\n        }\n\n        for ( name in callbacks ) {\n            if ( callbacks.hasOwnProperty(name) ) {\n                this.addListener(name, callbacks[name]);\n            }\n        }\n    },\n\n\n    /**\n     * Remove all instances of the given callback.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to remove\n     *\n     * @example\n     * emitter.removeListener('click', func1);\n     */\n    removeListener: function ( name, callback ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n            if ( this.events[name] && !Array.isArray(this.events[name]) ) {\n                throw new Error(__filename + ': corrupted inner data');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( this.events[name] ) {\n            // rework the callback list to exclude the given one\n            this.events[name] = this.events[name].filter(function callbacksFilter ( fn ) { return fn !== callback; });\n            // event has no more callbacks so clean it\n            if ( this.events[name].length === 0 ) {\n                // as if there were no listeners at all\n                this.events[name] = undefined;\n            }\n        }\n    },\n\n\n    /**\n     * Remove all callbacks for the given event name.\n     * Without event name clears all events.\n     *\n     * @param {string} [name] event identifier\n     *\n     * @example\n     * emitter.removeAllListeners('click');\n     * emitter.removeAllListeners();\n     *\n     * @deprecated\n     */\n    /*removeAllListeners: function ( name ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 0 && (typeof name !== 'string' || name.length === 0) ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // check input\n        if ( arguments.length === 0 ) {\n            // no arguments so remove everything\n            this.events = {};\n        } else if ( name ) {\n            if ( DEVELOP ) {\n                if ( this.events[name] ) { throw new Error(__filename + ': event is not removed'); }\n            }\n\n            // only name is given so remove all callbacks for the given event\n            // but object structure modification should be avoided\n            this.events[name] = undefined;\n        }\n    },*/\n\n\n    /**\n     * Execute each of the listeners in the given order with the supplied arguments.\n     *\n     * @param {string} name event identifier\n     *\n     * @example\n     * emitter.emit('init');\n     * emitter.emit('click', {src: panel1, dst: panel2});\n     * emitter.emit('load', error, data);\n     *\n     * // it's a good idea to emit event only when there are some listeners\n     * if ( this.events['click'] ) {\n     *     this.emit('click', {event: event});\n     * }\n     */\n    emit: function ( name ) {\n        var event = this.events[name],\n            index;\n\n        if ( DEVELOP ) {\n            if ( arguments.length < 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( event ) {\n            if ( DEVELOP ) {\n                if ( !Array.isArray(event) ) {\n                    throw new Error(__filename + ': wrong event type');\n                }\n            }\n\n            for ( index = 0; index < event.length; index++ ) {\n                if ( DEVELOP ) {\n                    if ( typeof event[index] !== 'function' ) {\n                        throw new Error(__filename + ': wrong event callback type');\n                    }\n                }\n\n                // invoke the callback with parameters\n                event[index].apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n    }\n};\n\n\n// correct constructor name\nEmitter.prototype.constructor = Emitter;\n\n\n// public\nmodule.exports = Emitter;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar List             = require('mag-component-list'),\n    classChecked     = 'checked',\n    classIcon        = 'theme-icon theme-icon-radio',\n    classIconActive  = 'theme-icon theme-icon-radio-active';\n\n\n/**\n * Base radio list implementation\n *\n * @constructor\n * @extends List\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {string} [config.classIcon] icon default state class name\n * @param {string} [config.classIconActive] icon active state class name\n * @param {string} [config.classChecked] checked item class\n */\nfunction RadioList ( config ) {\n    var self = this;\n\n    if ( config.classIcon ) {\n        classIcon = config.classIcon;\n    }\n    if ( config.classIconActive ) {\n        classIconActive = config.classIconActive;\n    }\n    if ( config.classChecked ) {\n        classIcon = config.classChecked;\n    }\n\n    /**\n     * Checked item data\n     *\n     * @type {Element}\n     */\n    this.checkedData = null;\n\n    /**\n     * Checked element index\n     *\n     * @type {number}\n     */\n    this.checkedIndex = null;\n\n    List.call(this, config);\n\n    this.addListener('click:item', function ( event ) {\n        var $item = event.$item,\n            previousCheckedData = self.checkedData;\n\n        self.checkIndex($item.index);\n\n        if ( previousCheckedData !== $item.data ) {\n            /**\n             * Select element from list\n             *\n             * @event select\n             * @property {Element} $item object\n             */\n            self.emit('select', $item);\n        }\n    });\n}\n\n\nRadioList.prototype = Object.create(List.prototype);\nRadioList.prototype.constructor = RadioList;\n\n// set component name\nRadioList.prototype.name = 'mag-component-radio-list';\n\nRadioList.prototype.init = function ( config ) {\n    config = config || {};\n    List.prototype.init.call(this, config);\n};\n\n\n/**\n * Set data and render inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nRadioList.prototype.setData = function ( config ) {\n    List.prototype.setData.call(this, config);\n\n    this.defaultCheckedIndex = this.checkedIndex;\n\n    if ( this.$focusItem ) {\n        this.defaultFocusIndex = this.$focusItem.index;\n    } else {\n        this.defaultFocusIndex = 0;\n    }\n};\n\n\n/**\n * Reset data to default state and render inner structures and HTML.\n */\nRadioList.prototype.resetData = function () {\n    this.checkIndex(this.defaultCheckedIndex);\n    this.focusIndex(this.defaultFocusIndex);\n};\n\n\n/**\n * Set all states to false and render inner structures and HTML.\n *\n * @param {number} [focusIndex] focus index\n */\nRadioList.prototype.clearChecked = function ( focusIndex ) {\n    var index = 0;\n\n    for ( index; index < this.data.length; index++ ) {\n        this.data[index].state = false;\n    }\n\n    // no focusIndex, focusIndex may be 0\n    if ( !focusIndex && focusIndex !== 0 ) {\n        focusIndex = this.$focusItem ? this.$focusItem.index : 0;\n    }\n\n    this.setData({data: this.data, focusIndex: focusIndex});\n};\n\n\n/**\n * Default render function\n *\n * @param {Element} $item in list\n * @param {Object} data to render layout element\n * @param {string} [data.title] title of checkbox\n * @param {boolean} [data.state] state of checkbox: checked or not\n * @param {string} [data.value] special value of item\n */\nRadioList.prototype.renderItemDefault = function ( $item, data ) {\n    var table,\n        tr,\n        td,\n        check;\n\n    if ( $item.ready ) {\n        $item.$title.innerText = data.title || '';\n\n        if ( data.state ) {\n            $item.classList.add(classChecked);\n            $item.checkBox.className = classIconActive;\n        } else {\n            $item.classList.remove(classChecked);\n            $item.checkBox.className = classIcon;\n        }\n\n        $item.state = data.state;\n        $item.value = data.value;\n\n    } else {\n        $item.innerHTML = '';\n        table = document.createElement('table');\n        tr = document.createElement('tr');\n        td = document.createElement('td');\n        check = document.createElement('div');\n\n        if ( data.state ) {\n            $item.classList.add(classChecked);\n            check.className = classIconActive;\n        } else {\n            $item.classList.remove(classChecked);\n            check.className = classIcon;\n        }\n\n        table.appendChild(tr);\n        td.appendChild(check);\n\n        td.className = 'checkBoxWrapper';\n        tr.appendChild(td);\n\n        td = document.createElement('td');\n        td.className = 'title';\n        td.innerText = data.title || '';\n        tr.appendChild(td);\n\n        $item.checkBox = check;\n        $item.state = data.state;\n        $item.value = data.value;\n        $item.$title = td;\n\n        $item.appendChild(table);\n\n        if ( data.state ) {\n            this.checkedData = data;\n            this.checkedIndex = $item.index;\n        }\n\n        $item.ready = true;\n    }\n};\n\n\n/**\n * Check element by index\n *\n * @param {number} index of element to check\n */\nRadioList.prototype.checkIndex = function ( index ) {\n    var $node;\n\n    if ( DEVELOP ) {\n        if ( index >= this.data.length ) {\n            throw new Error(__filename + ': wrong index to check');\n        }\n    }\n\n    // do not need to do the same\n    if ( index === this.checkedIndex ) { return; }\n\n    if ( this.checkedIndex !== null && this.$node.children.length ) {\n        this.data[this.checkedIndex].state = false;\n        $node = this.getItemNodeByIndex(this.checkedIndex);\n        if ( $node ) {\n            $node.checkBox.className = classIcon;\n            $node.classList.remove(classChecked);\n        }\n    }\n\n    $node = this.getItemNodeByIndex(index);\n    if ( $node ) {\n        $node.checkBox.className = classIconActive;\n        $node.classList.add(classChecked);\n        $node.state = true;\n    }\n\n    this.data[index].state = true;\n    this.checkedData = this.data[index];\n    this.checkedIndex = index;\n};\n\n\n/**\n * Get list item node by item index\n *\n * @param {number} index of item to find node\n * @return {?Element} item node link\n */\nRadioList.prototype.getItemNodeByIndex = function ( index ) {\n    var children = this.$node.children;\n\n    index -= this.viewIndex;\n    if ( index < this.size && index >= 0 ) {\n        return children[index];\n    }\n\n    return null;\n};\n\nRadioList.prototype.renderItem = RadioList.prototype.renderItemDefault;\n\nmodule.exports = RadioList;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-button');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-button';\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core');\n//    metrics = require('app:metrics'),\n//    linkCSS;\n\n\n// global link\n//app.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\n//app.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\n//app.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n// // set max browser window size\n// window.moveTo(0, 0);\n// window.resizeTo(metrics.width, metrics.height);\n\n// load CSS file base on resolution\n/*linkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = 'css/' + (DEVELOP ? 'develop.' : 'release.') + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);*/\n\n\n// public\nmodule.exports = function ( name ) {\n    var link = document.createElement('link');\n\n    link.rel  = 'stylesheet';\n    link.href = 'css/' + name + '.' + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\n    document.head.appendChild(link);\n};\n","/**\n * Global list of non-printable control key codes.\n *\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    backspace: 8,\n    tab:       9,\n    enter:     13,\n    escape:    27,\n    space:     32,\n    pageUp:    33,\n    pageDown:  34,\n    end:       35,\n    home:      36,\n    left:      37,\n    up:        38,\n    right:     39,\n    down:      40,\n    insert:    45,\n    // not \"delete\" because of old browsers issue\n    del:       46\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n/* eslint complexity: [error, 37] */\n/* eslint max-lines-per-function: 1 */\n/* eslint no-fallthrough: 1 */\n/* eslint complexity: 1 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n\n/**\n * Mouse click event.\n *\n * @event module:stb/ui/list~List#click:item\n *\n * @type {Object}\n * @property {Element} $item clicked HTML item\n * @property {Event} event click event data\n */\n\n\n/**\n * Base list implementation.\n *\n * Each data item can be either a primitive value or an object with these fields:\n *\n *  Name    | Description\n * ---------|-------------\n *  value   | actual cell value to render\n *  mark    | is it necessary or not to render this cell as marked\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array}    [config.data=[]]     component data to visualize\n * @param {function} [config.render]      method to build each grid cell content\n * @param {function} [config.navigate]    method to move focus according to pressed keys\n * @param {number}   [config.size=5]      amount of visible items on a page\n * @param {number}   [config.viewIndex=0] move view window to this position on init\n * @param {number}   [config.focusIndex]  list item index to make item focused (move view window to this position)\n * @param {boolean}  [config.cycle=true]  allow or not to jump to the opposite side of a list when there is nowhere to go next\n * @param {boolean}  [config.scroll=null] associated ScrollBar component link\n * @param {Object}   [config.provider]    data provider\n *\n * @fires module:stb/ui/list~List#click:item\n */\nfunction List ( config ) {\n    // current execution context\n    //var self = this;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Link to the currently focused DOM element.\n     *\n     * @type {Element}\n     */\n    this.$focusItem = null;\n\n    /**\n     * Position of the visible window to render.\n     *\n     * @type {number}\n     */\n    this.viewIndex = null;\n\n    /**\n     * Component data to visualize.\n     *\n     * @type {Array}\n     */\n    this.data = [];\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Amount of visible items on a page.\n     *\n     * @type {number}\n     */\n    this.size = 5;\n\n    /**\n     * Allow or not to jump to the opposite side of a list when there is nowhere to go next.\n     *\n     * @type {boolean}\n     */\n    this.cycle = false;\n\n    /**\n     * Associated ScrollBar component link.\n     *\n     * @type {ScrollBar}\n     */\n    this.scroll = null;\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    /**\n     * Associated data provider\n     *\n     * @type {Provider}\n     */\n    this.provider = null;\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    //config.className += ' theme-main';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // component setup\n    this.init(config);\n\n    // custom navigation method\n    //if ( config.navigate ) {\n    //    if ( DEVELOP ) {\n    //        if ( typeof config.navigate !== 'function' ) { throw new Error(__filename + ': wrong config.navigate type'); }\n    //    }\n    //    // apply\n    //    this.navigate = config.navigate;\n    //}\n\n    // navigation by keyboard\n    //this.addListener('keydown', this.navigate);\n\n    // navigation by mouse\n    //this.$body.addEventListener('mousewheel', function ( event ) {\n    //    // scrolling by Y axis\n    //    if ( self.type === self.TYPE_VERTICAL && event.wheelDeltaY ) {\n    //        self.move(event.wheelDeltaY > 0 ? 38 : keys.down);\n    //    }\n    //\n    //    // scrolling by X axis\n    //    if ( self.type === self.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n    //        self.move(event.wheelDeltaX > 0 ? 37 : 39);\n    //    }\n    //});\n}\n\n\n// inheritance\nList.prototype = Object.create(Component.prototype);\nList.prototype.constructor = List;\n\n// set component name\nList.prototype.name = 'mag-component-list';\n\nList.prototype.TYPE_VERTICAL   = 1;\nList.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Fill the given item with data.\n *\n * @param {Element} $item item DOM link\n * @param {*} data associated with this item data\n */\nList.prototype.renderItemDefault = function ( $item, data ) {\n    $item.innerText = data.value;\n};\n\n\n/**\n * Method to build each list item content.\n * Can be redefined to provide custom rendering.\n *\n * @type {function}\n */\nList.prototype.renderItem = List.prototype.renderItemDefault;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nList.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse wheel events.\n     *\n     * @param {Event} event generated event\n     */\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        if ( this.type === this.TYPE_VERTICAL && event.wheelDeltaY ) {\n            this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n        }\n\n        // scrolling by X axis\n        if ( this.type === this.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n            this.move(event.wheelDeltaX > 0 ? keys.left : keys.right);\n        }\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n            case keys.right:\n            case keys.left:\n            case keys.pageUp:\n            case keys.pageDown:\n            case keys.home:\n            case keys.end:\n                // cursor move only on arrow keys\n                this.move(event.code);\n                break;\n            case keys.enter:\n                // there are some listeners\n                if ( this.events['click:item'] && this.$focusItem ) {\n                    // notify listeners\n                    this.emit('click:item', {$item: this.$focusItem, event: event});\n                }\n                break;\n        }\n    }\n};\n\n\n/**\n * Default method to move focus according to pressed keys.\n *\n * @param {Object} event generated event source of movement\n */\n//List.prototype.navigateDefault = function ( event ) {\n//    switch ( event.code ) {\n//        case 38:\n//        case 40:\n//        case 39:\n//        case 37:\n//        case 33:\n//        case 34:\n//        case 36:\n//        case 35:\n//            // cursor move only on arrow keys\n//            this.move(event.code);\n//            break;\n//        case 13:\n//            // there are some listeners\n//            if ( this.events['click:item'] ) {\n//                // notify listeners\n//                this.emit('click:item', {$item: this.$focusItem, event: event});\n//            }\n//            break;\n//    }\n//};\n\n\n/**\n * Current active method to move focus according to pressed keys.\n * Can be redefined to provide custom navigation.\n *\n * @type {function}\n */\n//List.prototype.navigate = List.prototype.navigateDefault;\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var idx, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( idx = 0; idx < data.length; idx++ ) {\n        // cell value\n        item = data[idx];\n        // primitive value\n        if ( typeof item !== 'object' ) {\n            // wrap with defaults\n            item = data[idx] = {\n                value: data[idx]\n            };\n        }\n\n        if ( DEVELOP ) {\n            //if ( !('value' in item) ) { throw new Error(__filename + ': field \"value\" is missing'); }\n            if ( ('mark' in item) && Boolean(item.mark) !== item.mark ) {\n                throw new Error(__filename + ': item.mark must be boolean');\n            }\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.init = function ( config ) {\n    var self     = this,\n        currSize = this.$body.children.length,\n        /**\n         * Item mouse click handler.\n         *\n         * @param {Event} event click event data\n         *\n         * @this Element\n         *\n         * @fires module:stb/ui/list~List#click:item\n         */\n        onClick = function ( event ) {\n            if ( this.data ) {\n                self.focusItem(this);\n\n                // there are some listeners\n                if ( self.events['click:item'] ) {\n                    // notify listeners\n                    self.emit('click:item', {$item: this, event: event});\n                }\n            }\n        },\n        item, idx;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // apply cycle behaviour\n    if ( config.cycle !== undefined ) { this.cycle = config.cycle; }\n\n    // apply ScrollBar link\n    if ( config.scroll ) { this.scroll = config.scroll; }\n\n    // apply data provider\n    if ( config.provider ) { this.provider = config.provider; }\n\n\n    // custom render method\n    if ( config.render ) {\n        if ( DEVELOP ) {\n            if ( typeof config.render !== 'function' ) {\n                throw new Error(__filename + ': wrong config.render type');\n            }\n        }\n\n        // apply\n        this.renderItem = config.render;\n    }\n\n    // list items amount on page\n    if ( config.size ) {\n        if ( DEVELOP ) {\n            if ( Number(config.size) !== config.size ) {\n                throw new Error(__filename + ': config.size must be a number');\n            }\n            if ( config.size <= 0 ) {\n                throw new Error(__filename + ': config.size should be positive');\n            }\n        }\n\n        // apply\n        this.size = config.size;\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( name ) {\n            self.events[name] = null;\n            self.addListener(name, config.events[name]);\n        });\n    }\n\n    // geometry has changed or initial draw\n    if ( this.size !== currSize ) {\n        // non-empty list\n        if ( currSize > 0 ) {\n            // clear old items\n            this.$body.innerText = null;\n        }\n\n        // create new items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            item = document.createElement('div');\n            item.index = idx;\n            //item.className = 'item theme-list-item';\n            item.className = 'item';\n\n            item.addEventListener('click', onClick);\n            this.$body.appendChild(item);\n        }\n    }\n\n    if ( this.provider ) {\n        if ( this.provider.blocked ) {\n            return;\n        }\n\n        this.provider.get( null, function ( error, data ) {\n            if ( error ) {\n                if ( self.events['data:error'] ) {\n                    /**\n                     * Provider get error while take new data\n                     *\n                     * @event module:stb/ui/list~List#data:error\n                     */\n                    self.emit('data:error', error);\n                }\n            } else {\n                if ( data ) {\n                    config.data = data;\n                    self.setData(config);\n                    if ( self.scroll ) {\n                        self.scroll.init({\n                            realSize: self.provider.maxCount,\n                            viewSize: self.provider.size,\n                            value: self.provider.head + self.provider.pos\n                        });\n                    }\n                }\n                if ( self.events['data:get'] ) {\n                    /**\n                     * Provider request new data\n                     *\n                     * @event module:stb/ui/list~List#data:get\n                     *\n                     * @type {Object}\n                     */\n                    self.emit('data:get');\n                }\n            }\n        });\n    } else if ( config.data ) {\n        this.setData(config);\n    }\n};\n\n/**\n * Set data and render inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.setData = function ( config ) {\n    // apply list of items\n\n    if ( config.data ) {\n        if ( DEVELOP ) {\n            if ( !Array.isArray(config.data) ) { throw new Error(__filename + ': wrong config.data type'); }\n        }\n        // prepare user data\n        this.data = normalize(config.data);\n    }\n\n    // view window position\n    if ( DEVELOP ) {\n        if ( config.viewIndex !== undefined ) {\n            if ( Number(config.viewIndex) !== config.viewIndex ) {\n                throw new Error(__filename + ': config.viewIndex must be a number');\n            }\n            if ( config.viewIndex < 0 ) {\n                throw new Error(__filename + ': config.viewIndex should be positive');\n            }\n        }\n    }\n\n    // reset current view window position\n    this.viewIndex = null;\n\n    if ( this.$focusItem ) {\n        this.blurItem(this.$focusItem);\n    }\n\n    if ( this.scroll ) {\n        if ( this.provider ) {\n            if ( this.scroll.realSize !== this.provider.maxCount ) {\n                this.scroll.init({\n                    realSize: this.provider.maxCount,\n                    viewSize: this.provider.size,\n                    value: this.provider.head + this.provider.pos\n                });\n            }\n        } else {\n            this.scroll.init({\n                realSize: this.data.length,\n                viewSize: this.size,\n                value: config.viewIndex || 0\n            });\n        }\n    }\n\n    // set focus item\n    if ( config.focusIndex !== undefined && this.data.length ) {\n        if ( DEVELOP ) {\n            if ( Number(config.focusIndex) !== config.focusIndex ) {\n                throw new Error(__filename + ': config.focusIndex must be a number');\n            }\n            if ( config.focusIndex < 0 ) {\n                throw new Error(__filename + ': config.focusIndex should be positive');\n            }\n            // if ( config.focusIndex > this.data.length - 1 ) {\n            //     throw new Error(__filename + ': config.focusIndex should be less than data size');\n            // }\n        }\n\n        // jump to the necessary item\n        this.focusIndex(config.focusIndex);\n    } else {\n        // go to the first page\n        this.renderView(config.viewIndex || 0);\n    }\n};\n\n\n/**\n * Shift the visible view window event.\n *\n * @event module:stb/ui/list~List#move:view\n *\n * @type {Object}\n * @property {number} prevIndex previous view window position\n * @property {number} currIndex current view window position\n */\n\n\n/**\n * Draw the visible window.\n *\n * @param {number} index start position to render\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#move:view\n */\nList.prototype.renderView = function ( index ) {\n    var $item, idx, itemData, prevIndex, currIndex;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be more than zero');\n        }\n        // if ( index >= this.data.length ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // has the view window position changed\n    if ( this.viewIndex !== index ) {\n        // save for emit\n        prevIndex = this.viewIndex;\n        // sync global pointer\n        this.viewIndex = currIndex = index;\n\n        // rebuild all visible items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            // shortcuts\n            $item    = this.$body.children[idx];\n            itemData = this.data[index];\n\n            // real item or stub\n            if ( itemData ) {\n                // correct inner data/index and render\n                $item.data  = itemData;\n                $item.index = index;\n                this.renderItem($item, itemData);\n\n                // apply CSS\n                if ( itemData.mark ) {\n                    $item.classList.add('mark');\n                } else {\n                    $item.classList.remove('mark');\n                }\n            } else {\n                // nothing to render\n                $item.data = $item.index = undefined;\n                $item.innerHTML = '&nbsp;';\n                $item.ready = false;\n            }\n            index++;\n        }\n\n        // there are some listeners\n        if ( this.events['move:view'] ) {\n            // notify listeners\n            this.emit('move:view', {prevIndex: prevIndex, currIndex: currIndex});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            this.emit('select:item', {$item: $item});\n        }\n\n        // update a linked scroll component\n        if ( this.scroll ) {\n            this.scroll.scrollTo(this.provider ? this.provider.head + this.provider.pos : this.viewIndex);\n        }\n\n        // full rebuild\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Move focus to the given direction.\n *\n * @param {number} direction arrow key code\n *\n * @fires module:stb/ui/list~List#cycle\n * @fires module:stb/ui/list~List#overflow\n */\nList.prototype.move = function ( direction ) {\n    var self = this,\n        force = false;\n\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(direction) !== direction ) {\n            throw new Error(__filename + ': direction must be a number');\n        }\n    }\n\n    // empty list\n    if ( !this.data.length ) {\n        return;\n    }\n\n    switch ( direction ) {\n        case keys.left:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.up:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index > 0 ) {\n                    if ( this.$focusItem === this.$body.firstChild ) {\n                        this.renderView(this.viewIndex - 1);\n                    } else {\n                        this.focusItem(this.$focusItem.previousSibling);\n                    }\n                } else if ( this.provider ) {\n                    if ( this.provider.blocked ) {\n                        return;\n                    }\n\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the end of the list\n                        this.move(keys.end);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.right:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.down:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index < this.data.length - 1 ) {\n                    if ( this.$focusItem === this.$body.lastChild ) {\n                        this.renderView(this.viewIndex + 1);\n                    } else {\n                        this.focusItem(this.$focusItem.nextSibling);\n                    }\n                } else if ( this.provider ) {\n                    if ( this.provider.blocked ) {\n                        return;\n                    }\n\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the beginning of the list\n                        this.move(keys.home);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.pageUp:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n\n                return;\n            }\n            if ( this.viewIndex < this.size ) {\n                // first page\n                this.renderView(0);\n            } else {\n                // second page and further\n                this.renderView(this.viewIndex - this.size + 1);\n            }\n\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.pageDown:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            // data is bigger then one page\n            if ( this.data.length > this.size ) {\n                // determine jump size\n                if ( this.viewIndex > this.data.length - this.size * 2 ) {\n                    // last page\n                    this.renderView(this.data.length - this.size);\n                } else {\n                    // before the last page\n                    this.renderView(this.viewIndex + this.size - 1);\n                }\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n        case keys.home:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n                break;\n            }\n            this.renderView(0);\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.end:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            if ( this.data.length > this.size ) {\n                this.renderView(this.data.length - this.size);\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n    }\n};\n\n\n/**\n * Highlight the given DOM element as focused.\n * Remove focus from the previously focused item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.focusItem = function ( $item ) {\n    var $prev = this.$focusItem;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n    }\n\n    // different element\n    if ( $item && $prev !== $item ) {\n        if ( DEVELOP ) {\n            if ( !($item instanceof Element) ) {\n                throw new Error(__filename + ': wrong $item type');\n            }\n            if ( $item.parentNode !== this.$body ) {\n                throw new Error(__filename + ': wrong $item parent element');\n            }\n        }\n\n        // some item is focused already\n        if ( $prev !== null ) {\n            if ( DEVELOP ) {\n                if ( !($prev instanceof Element) ) {\n                    throw new Error(__filename + ': wrong $prev type');\n                }\n            }\n\n            // style\n            $prev.classList.remove('focus');\n            //$prev.classList.remove('theme-focus');\n\n            // there are some listeners\n            if ( this.events['blur:item'] ) {\n                /**\n                 * Remove focus from an element.\n                 *\n                 * @event module:stb/ui/list~List#blur:item\n                 *\n                 * @type {Object}\n                 * @property {Element} $item previously focused HTML element\n                 */\n                this.emit('blur:item', {$item: $prev});\n            }\n        }\n        // reassign\n        this.$focusItem = $item;\n\n        this.$focusItem.data = this.data[this.$focusItem.index];\n\n        // correct CSS\n        $item.classList.add('focus');\n        //$item.classList.add('theme-focus');\n\n        // there are some listeners\n        if ( this.events['focus:item'] ) {\n            /**\n             * Set focus to a DOM element.\n             *\n             * @event module:stb/ui/list~List#focus:item\n             *\n             * @type {Object}\n             * @property {Element} $prev old/previous focused HTML element\n             * @property {Element} $curr new/current focused HTML element\n             */\n            this.emit('focus:item', {$prev: $prev, $curr: $item});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            /**\n             * Set focus to a list item.\n             *\n             * @event module:stb/ui/list~List#select:item\n             *\n             * @type {Object}\n             * @property {Element} $item new/current focused item\n             */\n            this.emit('select:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Highlight the given DOM element as blur.\n * Remove focus from the item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.blurItem = function ( $item ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) { throw new Error(__filename + ': wrong arguments number'); }\n    }\n\n    // different element\n    if ( $item ) {\n        if ( $item === this.$focusItem ) {\n            this.$focusItem = null;\n        }\n\n        $item.classList.remove('focus');\n        //$item.classList.remove('theme-focus');\n\n        // there are some listeners\n        if ( this.events['blur:item'] ) {\n            /**\n             * Remove focus from an element.\n             *\n             * @event module:stb/ui/list~List#blur:item\n             *\n             * @type {Object}\n             * @property {Element} $item previously focused HTML element\n             */\n            this.emit('blur:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Set the given item focused by item index.\n *\n * @param {number} index item data index\n */\nList.prototype.focusIndex = function ( index ) {\n    var viewIndex = this.viewIndex || 0;\n\n    if ( DEVELOP ) {\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be positive');\n        }\n        // if ( index > this.data.length - 1 ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // determine direction\n    if ( index >= viewIndex + this.size ) {\n        // check range\n        index = index < this.data.length - 1 ? index : this.data.length - 1;\n        // move down\n        this.renderView(index - this.size + 1);\n        this.focusItem(this.$body.lastChild);\n    } else if ( index < viewIndex ) {\n        // check range\n        index = index > 0 ? index : 0;\n        // move up\n        this.renderView(index);\n        this.focusItem(this.$body.firstChild);\n    } else {\n        // no move\n        if ( this.viewIndex === null ) {\n            // first attempt\n            this.renderView(0);\n        }\n        this.focusItem(this.$body.children[index - viewIndex]);\n    }\n};\n\n\n/**\n * Set item state and appearance as marked.\n *\n * @param {Node|Element} $item element to focus\n * @param {boolean} state true - marked, false - not marked\n */\nList.prototype.markItem = function ( $item, state ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 2 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !($item instanceof Element) ) {\n            throw new Error(__filename + ': wrong $item type');\n        }\n        if ( $item.parentNode !== this.$body ) {\n            throw new Error(__filename + ': wrong $item parent element');\n        }\n        if ( Boolean(state) !== state ) {\n            throw new Error(__filename + ': state must be boolean');\n        }\n    }\n\n    // correct CSS\n    if ( state ) {\n        $item.classList.add('mark');\n    } else {\n        $item.classList.remove('mark');\n    }\n\n    // apply flag\n    $item.data.mark = state;\n};\n\n\n// public\nmodule.exports = List;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n/**\n * Layout component implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array} [config.data] array of items to add to layout\n */\nfunction Layout ( config ) {\n    var self = this;\n\n    // sanitize\n    config = config || {};\n\n    /**\n     * Index of focused child component\n     * @type {number}\n     */\n    this.focusIndex = 0;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && config.className !== undefined && typeof config.className !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    //config.className = 'layout ' + (config.className || '');\n\n    /**\n     * Component data\n     * @type {Array}\n     */\n    this.data = [];\n\n    Component.call(this, config);\n\n    this.init(config);\n\n    // add listener to move focus between children\n    this.addListener('keydown', function ( event ) {\n        switch ( event.code ) {\n            case keys.right:\n                if ( self.children.length && self.focusIndex < self.children.length - 1 ) {\n                    self.children[++self.focusIndex].focus();\n                }\n                break;\n            case keys.left:\n                if ( self.children.length && self.focusIndex > 0 ) {\n                    self.children[--self.focusIndex].focus();\n                }\n                break;\n            case keys.back:\n                // focus parent focused item if parent is layout list\n                if ( self.parent ) {\n                    self.parent.focus();\n                    if ( self.$parentItem ) {\n                        self.parent.focusItem(self.$parentItem);\n                    }\n                }\n                break;\n        }\n    });\n}\n\n\nLayout.prototype = Object.create(Component.prototype);\nLayout.prototype.constructor = Layout;\n\n// set component name\nLayout.prototype.name = 'mag-component-layout';\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var index, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( index = 0; index < data.length; index++ ) {\n        // cell value\n        item = data[index];\n        // plain text\n        if ( typeof item === 'object' ) {\n            // HTML element or component\n            if ( item instanceof Component || item instanceof HTMLElement ) {\n                data[index] = {\n                    value: item,\n                    wrap: false\n                };\n            } else {\n                data[index].wrap = true;\n            }\n        } else {\n            // wrap with defaults\n            data[index] = {\n                value: data[index],\n                wrap: true\n            };\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nLayout.prototype.init = function ( config ) {\n    var self = this,\n        data = normalize(config.data),\n        item, $wrapper, index;\n\n    // clear element if reinit\n    while (this.$node.firstChild) {\n        this.$node.removeChild(this.$node.firstChild);\n    }\n\n    this.data = data;\n\n    /**\n     * @this Component\n     */\n    function componentClickHandler (  ) {\n        self.focusIndex = this.index;\n    }\n\n    for ( index = 0; index < data.length; index++ ) {\n        item = data[index];\n        // plain text\n        if ( typeof item.value === 'string' ) {\n            $wrapper = document.createElement('div');\n            $wrapper.textContent = item.value;\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n        } else if ( item.value instanceof HTMLElement ) {\n            // HTML Element\n\n            // if with wrapper\n            if ( item.wrap ) {\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value);\n                this.$node.appendChild($wrapper);\n            } else {\n                // without wrapper\n                this.$node.appendChild(item.value);\n            }\n        } else if ( item.value instanceof Component ) {\n            // component\n            // force propagate events\n            item.value.propagate = true;\n\n            // set index to current component\n            item.value.index = this.children.length;\n\n            // change layout focus index if click component\n            item.value.addListener('click', componentClickHandler);\n\n            // append component\n            if ( item.wrap ) {\n                // with wrapper\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value.$node);\n                this.$node.appendChild($wrapper);\n                this.children.push(item.value);\n                item.value.parent = this;\n            } else {\n                // without wrapper\n                this.add(item.value);\n            }\n        } else {\n            $wrapper = document.createElement('div');\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n        }\n    }\n};\n\n\nmodule.exports = Layout;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component'),\n    keys      = require('stb-keys');\n\n\n/**\n * Scroll area implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} config object\n * @param {number} [config.step] step in % of screen height to scroll area\n */\nfunction ScrollArea ( config ) {\n\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    /**\n     * Step to scroll area in % of screen height\n     *\n     * @type {number}\n     */\n    this.step = 5;\n\n    /**\n     * Real height of scroll area\n     *\n     * @type {number}\n     */\n    this.realHeight = 0;\n\n    /**\n     * Visible height of area\n     *\n     * @type {number}\n     */\n    this.viewHeight = 0;\n\n    /**\n     * Top position of scroll container\n     *\n     * @type {number}\n     */\n    this.topPosition = 0;\n\n    /**\n     * Associated ScrollBar component link.\n     *\n     * @type {ScrollBar}\n     */\n    this.scroll = null;\n\n    Component.call(this, config);\n\n    this.$node.appendChild(this.$body);\n\n    // component setup\n    this.init(config);\n}\n\n\nScrollArea.prototype = Object.create(Component.prototype);\nScrollArea.prototype.constructor = ScrollArea;\n\n// set component name\nScrollArea.prototype.name = 'mag-component-scroll-area';\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nScrollArea.prototype.defaultEvents = {\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n                this.move(event.code);\n                break;\n        }\n    },\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n    }\n};\n\n\n/**\n * Attempt to go beyond the edge of the list.\n *\n * @event\n *\n * @type {Object}\n * @property {number} direction key code initiator of movement\n */\n\n\n/**\n * Move ScrollArea content\n *\n * @param {number} direction to move\n */\nScrollArea.prototype.move = function ( direction ) {\n    var height = screen.height,\n        delta  = this.viewHeight - this.realHeight;\n\n    // run logic only if it's reasonable to navigate\n    if ( delta < 0 ) {\n        switch ( direction ) {\n            case keys.down:\n                if ( this.topPosition - this.step * height / 100 < delta ) {\n                    this.scroll.scrollTo(-delta);\n                    this.$body.style.top = delta + 'px';\n                    this.emit('overflow', {direction: direction});\n\n                    return;\n                }\n\n                this.topPosition -= Math.ceil(this.step * height / 100);\n\n                if ( this.scroll ) {\n                    this.scroll.scrollTo(-this.topPosition);\n                }\n                this.$body.style.top = this.topPosition + 'px';\n                break;\n            case keys.up:\n                if ( this.topPosition + this.step * height / 100 > 0 ) {\n                    this.scroll.scrollTo(0);\n                    this.$body.style.top = '0px';\n                    this.emit('overflow', {direction: direction});\n\n                    return;\n                }\n                this.topPosition += Math.ceil(this.step * height / 100);\n\n                if ( this.scroll ) {\n                    this.scroll.scrollTo(-this.topPosition);\n                }\n                this.$body.style.top = this.topPosition + 'px';\n                break;\n        }\n    } else {\n        this.emit('overflow', {direction: direction});\n    }\n};\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nScrollArea.prototype.init = function ( config ) {\n\n    config = config || {};\n\n    this.realHeight = this.$body.offsetHeight;\n    this.viewHeight = this.$node.offsetHeight;\n    this.topPosition = 0;\n    this.$body.style.top = this.topPosition + 'px';\n\n    if ( config.scroll ) {\n        this.scroll = config.scroll;\n    }\n\n    if ( config.step ) {\n        this.step = config.step;\n    }\n\n    if ( this.scroll ) {\n        this.scroll.init({\n            realSize: this.realHeight,\n            viewSize: this.viewHeight,\n            value: this.topPosition\n        });\n    }\n};\n\nmodule.exports = ScrollArea;\n","/**\n * Main application entry point.\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar app = require('mag-app');\n\napp.gettext = require('spa-gettext');\n\n// main application events\napp.once('load', function () {\n    // load language first\n    app.gettext.load({name: window.core.environment.language}, function ( error ) {\n        if ( error ) { debug.info('language load error'); }\n        // set pages\n        app.pages = {\n            main: require('./pages/main'),\n            info: require('./pages/info'),\n            logs: require('./pages/logs'),\n            usb: require('./pages/usb'),\n            url: require('./pages/url')\n        };\n\n        app.ready();\n    });\n});\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app    = require('spa-app/lib/core'),\n    events = require('spa-app/lib/events');\n\n\n// get instance\nwindow.core = window.parent.getCoreInstance(window, app);\n\n// shims\nrequire('stb-shim-classlist');\n\n// apply geometry\nrequire('stb-app/lib/metrics');\n\n// load sdk css\nrequire('stb-app/lib/css')('sdk');\n\n// load theme css\nrequire('./css');\n\n// load app css\nrequire('stb-app/lib/css')('app');\n\n/**\n * Specify platform name\n *\n * @type {string}\n */\napp.platform = 'mag';\n\n/**\n * Show app.\n */\napp.ready = function () {\n    // if ( this.events['show'] ) {\n    //     this.emit('show');\n    // }\n    window.core.call('app:ready');\n};\n\n\n/**\n * Exit from app.\n * Destroy all application instance.\n * If callback function provided, and callback returns boolean 'true', application will stay alive.\n *\n * @fires module:/stb/app#exit\n */\napp.exit = function () {\n    if ( app.events['exit'] ) {\n        app.emit('exit');\n    }\n\n    core.call('exit');\n};\n\n\nevents.load = function ( event ) {\n    //window.core = window.parent.getCoreInstanse(window, app);\n    document.body.setAttribute('platform', app.platform);\n\n    if ( core.ready ) {\n        if ( app.events['load'] ) {\n            // notify listeners\n            app.emit('load', {});\n        }\n    } else {\n        core.once('load', function () {\n            //core.ready = true;\n            if ( app.events[event.type] ) {\n                // notify listeners\n                app.emit(event.type, event);\n            }\n        });\n    }\n};\n\n\n// activate development mechanisms and tools\nif ( DEVELOP ) {\n    //require('stb-develop');\n    require('./develop/main');\n} else {\n    // disable context menu\n    events.contextmenu = function ( event ) {\n        event.preventDefault();\n    };\n}\n\n\n//apply DOM events\nObject.keys(events).forEach(function ( name ) {\n    window.addEventListener(name, events[name]);\n});\n\n\n// new way of string handling\n// all strings are in UTF-16\n// since stbapp 2.18\n// if ( window.gSTB && gSTB.SetNativeStringMode ) {\n//     /* eslint new-cap: 0 */\n//     gSTB.SetNativeStringMode(true);\n// }\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nmodule.exports = {\n    /**\n     * Parse the given location search string into object.\n     *\n     * @param {string} query string to parse\n     *\n     * @return {Object.<string, string>} result data\n     */\n    parse: function ( query ) {\n        var data = {};\n\n        // parse and fill the data\n        query.split('&').forEach(function ( part ) {\n            part = part.split('=');\n            // valid number on params\n            if ( part.length === 2 ) {\n                data[part[0]] = decodeURIComponent(part[1]);\n            }\n        });\n\n        return data;\n    },\n\n\n    /**\n     * Make uri query part in a string form.\n     *\n     * @param {Object} params data to stringify\n     *\n     * @return {string} query string\n     */\n    stringify: function ( params ) {\n        var data = [];\n\n        Object.keys(params).forEach(function ( name ) {\n            data.push(name + '=' + encodeURIComponent(params[name]));\n        });\n\n        return data.join('&');\n    }\n};\n","/**\n * Global application configuration.\n * Should store run-time options, paths, flags and so on.\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    pathToImageAtUsb: '',\n    selectedImage: 0\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('./core');\n\n\n// public\nmodule.exports = {\n    DOMContentLoaded: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // there are some listeners\n        if ( app.events['dom'] ) {\n            // notify listeners\n            app.emit('dom', event);\n            //console.log('DOMContentLoaded');\n        }\n    },\n\n    /**\n     * The load event is fired when a resource and its dependent resources have finished loading.\n     *\n     * Control flow:\n     *   1. Global handler.\n     *   2. Each page handler.\n     *   3. Application DONE event.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/load\n     *\n     * @param {Event} event generated object with event data\n     */\n    load: function ( event ) {\n        //var path;\n\n        //debug.event(event);\n        //console.log(event);\n\n        // time mark\n        //app.data.time.load = event.timeStamp;\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' load', 'green');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n\n        // time mark\n        //app.data.time.done = +new Date();\n\n        // everything is ready\n        // and there are some listeners\n        // if ( app.events['done'] ) {\n        //     // notify listeners\n        //     app.emit('done', event);\n        // }\n    },\n\n    /**\n     * The unload event is fired when the document or a child resource is being unloaded.\n     *\n     * Control flow:\n     *   1. Each page handler.\n     *   2. Global handler.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/unload\n     *\n     * @param {Event} event generated object with event data\n     */\n    unload: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' unload', 'red');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n    },\n\n    /**\n     * The error event is fired when a resource failed to load.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/error\n     *\n     * @param {Event} event generated object with event data\n     */\n    error: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n        //debug.fail('app event: ' + event.message, event, {tags: [event.type, 'event']});\n        console.error('app event: ' + event.message, event);\n    },\n\n    /**\n     * The keydown event is fired when a key is pressed down.\n     * Set event.stop to true in order to prevent bubbling.\n     *\n     * Control flow:\n     *   1. Current active component on the active page.\n     *   2. Current active page itself.\n     *   3. Application.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keydown\n     *\n     * @param {Event} event generated object with event data\n     */\n    keydown: function ( event ) {\n        var page = app.activePage,\n            eventLocal = {\n                code: event.keyCode,\n                stop: false\n            },\n            activeComponent;\n\n        if ( DEVELOP ) {\n            if ( !page ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        // filter phantoms\n        //if ( event.keyCode === 0 ) { return; }\n\n        // combined key code\n        //event.code = event.keyCode;\n\n        // apply key modifiers\n        if ( event.ctrlKey )  { eventLocal.code += 'c'; }\n        if ( event.altKey )   { eventLocal.code += 'a'; }\n        if ( event.shiftKey ) { eventLocal.code += 's'; }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + eventLocal.code, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + eventLocal.code, event);\n\n        // page.activeComponent can be set to null in event handles\n        activeComponent = page.activeComponent;\n\n        // current component handler\n        if ( activeComponent && activeComponent !== page ) {\n            // component is available and not page itself\n            if ( activeComponent.events[event.type] ) {\n                // there are some listeners\n                activeComponent.emit(event.type, eventLocal, event);\n            }\n\n            // todo: bubble event recursively\n            // bubbling\n            if (\n                !eventLocal.stop &&\n                activeComponent.propagate &&\n                activeComponent.parent &&\n                activeComponent.parent.events[event.type]\n            ) {\n                activeComponent.parent.emit(event.type, eventLocal, event);\n            }\n        }\n\n        // page handler\n        if ( !eventLocal.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, eventLocal, event);\n            }\n\n            // global app handler\n            if ( !event.stop ) {\n                // not prevented\n                if ( app.events[event.type] ) {\n                    // there are some listeners\n                    app.emit(event.type, eventLocal, event);\n                }\n            }\n        }\n\n        //// suppress non-printable keys in stb device (not in your browser)\n        //if ( app.data.host && keyCodes[event.code] ) {\n        //    event.preventDefault();\n        //}\n    },\n\n    /**\n     * The keypress event is fired when press a printable character.\n     * Delivers the event only to activeComponent at active page.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keypress\n     *\n     * @param {Event} event generated object with event data\n     * @param {string} event.char entered character\n     */\n    keypress: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + event.key, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + event.key, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n    },\n\n    /**\n     * The click event is fired when a pointing device button (usually a mouse button) is pressed and released on a single element.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/click\n     *\n     * @param {Event} event generated object with event data\n     */\n    /*click: function ( event ) {\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n     },*/\n\n    /**\n     * The contextmenu event is fired when the right button of the mouse is clicked (before the context menu is displayed),\n     * or when the context menu key is pressed (in which case the context menu is displayed at the bottom left of the focused\n     * element, unless the element is a tree, in which case the context menu is displayed at the bottom left of the current row).\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/contextmenu\n     *\n     * @param {Event} event generated object with event data\n     */\n    // contextmenu: function ( event ) {\n    //     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n    //\n    //     if ( !DEVELOP ) {\n    //         // disable right click in release mode\n    //         event.preventDefault();\n    //     }\n    // },\n\n    /*contextmenu: function ( event ) {\n     //var kbEvent = {}; //Object.create(document.createEvent('KeyboardEvent'));\n\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n\n     //kbEvent.type    = 'keydown';\n     //kbEvent.keyCode = 8;\n\n     //debug.log(kbEvent.type);\n\n     //globalEventListenerKeydown(kbEvent);\n     //var event = document.createEvent('KeyboardEvent');\n     //event.initEvent('keydown', true, true);\n\n     //document.dispatchEvent(kbEvent);\n\n     if ( !DEVELOP ) {\n     // disable right click in release mode\n     event.preventDefault();\n     }\n     },*/\n\n    /**\n     * The wheel event is fired when a wheel button of a pointing device (usually a mouse) is rotated.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel\n     *\n     * @param {Event} event generated object with event data\n     */\n    mousewheel: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n\n        // page handler\n        if ( !event.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, event);\n            }\n        }\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint-disable */\n\n'use strict';\n\n\nif ( !document.documentElement.classList ) {\n    var prototype = Array.prototype,\n        indexOf   = prototype.indexOf,\n        slice     = prototype.slice,\n        push      = prototype.push,\n        splice    = prototype.splice,\n        join      = prototype.join;\n\n    window.DOMTokenList = function ( el ) {\n        this._element = el;\n        if (el.className !== this._classCache) {\n            this._classCache = el.className;\n            if (!this._classCache) { return; }\n            var classes = this._classCache.replace(/^\\s+|\\s+$/g,'').split(/\\s+/),\n                i;\n            for (i = 0; i < classes.length; i++) {\n                push.call(this, classes[i]);\n            }\n        }\n    };\n\n    window.DOMTokenList.prototype = {\n        add: function ( token ) {\n            if(this.contains(token)) { return; }\n            push.call(this, token);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        contains: function ( token ) {\n            return indexOf.call(this, token) !== -1;\n        },\n\n        item: function ( index ) {\n            return this[index] || null;\n        },\n\n        remove: function ( token ) {\n            var i = indexOf.call(this, token);\n            if (i === -1) {\n                return;\n            }\n            splice.call(this, i, 1);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        toString: function () {\n            return join.call(this, ' ');\n        },\n\n        toggle: function ( token ) {\n            if (!this.contains(token)) {\n                this.add(token);\n            } else {\n                this.remove(token);\n            }\n            return this.contains(token);\n        }\n    };\n\n    Object.defineProperty(Element.prototype, 'classList', {\n        get: function () {\n            return new window.DOMTokenList(this);\n        }\n    });\n}\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    metrics = require('app:metrics');\n\n\n// global link\napp.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\napp.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\napp.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n\n// public\n//module.exports = app;\n","/**\n * Application geometry options.\n * Automatically loaded on application initialization and available as app.metrics.\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    480: {\n        // screen base dimension\n        height: 480,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  32,\n        availLeft:   48\n        // project-specific vars\n        // put here ...\n    },\n\n    576: {\n        // screen base dimension\n        height: 576,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  26,\n        availLeft:   54\n        // project-specific vars\n        // put here ...\n    },\n\n    720: {\n        // screen base dimension\n        height: 720,\n        width:  1280,\n        // safe zone margins\n        availTop:    30,\n        availBottom: 30,\n        availRight:  40,\n        availLeft:   40\n        // project-specific vars\n        // put here ...\n    },\n\n    1080: {\n        // screen base dimension\n        height: 1080,\n        width:  1920,\n        // safe zone margins\n        availTop:    45,\n        availBottom: 45,\n        availRight:  60,\n        availLeft:   60\n        // project-specific vars\n        // put here ...\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core'),\n    //metrics = require('app:metrics'),\n    linkCSS;\n\n\n//window.core = window.parent.getCoreInstance(window, app);\n\n\nlinkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = window.core.theme.path + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);\n\n\n// public\nmodule.exports = linkCSS;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    Gettext = require('cjs-gettext'),\n    loader  = new Emitter();\n\n\n/**\n * Wrap the given data with gettext instance\n * and export methods to the global scope.\n *\n * @param {Object} [data] localization data\n *\n * @return {Gettext} gettext instance\n */\nfunction prepare ( data ) {\n    var gettext = new Gettext(data);\n\n    // make it global\n    window.gettext  = window._ = gettext.gettext;\n    window.pgettext = gettext.pgettext;\n    window.ngettext = gettext.ngettext;\n\n    return gettext;\n}\n\n\n/**\n * Main application language\n */\nloader.defaultLanguage = 'en';\n\n\n/**\n * Simple gettext implementation.\n *\n * @param {Object} config options\n * @param {string} [config.path=lang] relative path to project root\n * @param {string} config.name language name\n * @param {string} [config.ext=json] language file extension\n * @param {function} callback hook on ready\n *\n * @return {boolean} flag is ajax request was made\n */\nloader.load = function ( config, callback ) {\n    var xhr;\n\n    if ( DEVELOP ) {\n        if ( !config.name || typeof config.name !== 'string' ) {\n            throw new Error(__filename + ': config.name must be a nonempty string');\n        }\n        if ( typeof callback !== 'function' ) {\n            throw new Error(__filename + ': wrong callback type');\n        }\n    }\n\n    // defaults\n    config.ext  = config.ext  || 'json';\n    config.path = config.path || 'lang';\n\n    // is it necessary to request a localization file?\n    if ( config.name === loader.defaultLanguage ) {\n        // no\n        prepare();\n        callback(null);\n\n        return false;\n    }\n\n    // yes\n    xhr = new XMLHttpRequest();\n\n    xhr.onload = function () {\n        var json;\n\n        try {\n            json = JSON.parse(xhr.responseText);\n\n            prepare(json);\n            callback(null);\n\n            // there are some listeners\n            if ( loader.events['load'] ) {\n                // notify listeners\n                loader.emit('load');\n            }\n        } catch ( error ) {\n            xhr.onerror(error);\n        }\n    };\n\n    xhr.ontimeout = xhr.onerror = function ( error ) {\n        prepare();\n        callback(error);\n\n        // there are some listeners\n        if ( loader.events['error'] ) {\n            // notify listeners\n            loader.emit('error', error);\n        }\n    };\n\n    xhr.open('GET', config.path + '/' + config.name + '.' + config.ext, true);\n    xhr.send(null);\n\n    return true;\n};\n\n\n// public\nmodule.exports = loader;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Translations handler.\n *\n * @constructor\n *\n * @param {Object} config init parameters\n */\nfunction Gettext ( config ) {\n    var data, meta;\n\n    // sanitize\n    config   = config || {};\n    data     = config.data || {};\n    data[''] = data[''] || {};\n\n    // shortcut\n    meta = config.meta;\n\n    /**\n     * Display the native language translation of a textual message.\n     *\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.gettext = function ( msgId ) {\n        return data[''][msgId] || msgId;\n    };\n\n\n    /**\n     * The \"p\" in \"pgettext\" stands for \"particular\": fetches a particular translation of the textual message.\n     *\n     * @param {string} context message context\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.pgettext = function ( context, msgId ) {\n        return data[context] && data[context][msgId] || msgId;\n    };\n\n\n    /**\n     * Display the native language translation of a textual message whose grammatical form depends on a number.\n     *\n     * @param {string} msgId textual message in a singular form\n     * @param {string} plural textual message in a plural form\n     * @param {number} value message number\n     *\n     * @return {string} translated text\n     */\n    this.ngettext = function ( msgId, plural, value ) {\n        /* eslint no-unused-vars: 0 */\n        /* eslint no-eval: 0 */\n        /* eslint id-length: 0 */\n        var n, evalResult;\n\n        if ( DEVELOP ) {\n            if ( Number(value) !== value ) {\n                throw new Error(__filename + ': value must be a number');\n            }\n        }\n\n        if ( data && meta && data[''][msgId] ) {\n            evalResult = eval('n = ' + value + '; ' + meta.plural);\n\n            if ( typeof evalResult === 'boolean' ) {\n                evalResult = +evalResult;\n            }\n\n            // translation\n            return data[''][msgId][evalResult];\n        }\n\n        // english\n        return value === 1 ? msgId : plural;\n    };\n}\n\n\n// correct constructor name\nGettext.prototype.constructor = Gettext;\n\n\n// public\nmodule.exports = Gettext;\n","/**\n * Main page implementation.\n *\n * @author Dmytro Fedotov <d.fedotov@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar id            = 'pageMain',\n    Page          = require('stb-component-page'),\n    app           = require('mag-app'),\n    page          = new Page({$node: document.getElementById(id)}),\n    PanelSet      = require('mag-component-panel-set'),\n    RadioList     = require('mag-component-radio-list'),\n    PanelExtended = require('mag-component-panel'),\n    LayoutList    = require('mag-component-layout-list'),\n    ModalMessage  = require('mag-component-modal'),\n    dom           = require('spa-dom'),\n    keys          = require('stb-keys'),\n    fileSystem    = window.core.plugins.fs,\n    Scroll        = require('stb-component-scrollbar'),\n    Flicker       = require('spa-component-flicker'),\n    ScrollArea    = require('mag-component-scroll-area'),\n    $channelsCountWrapper;\n\n\n$channelsCountWrapper = dom.tag(\n    'div',\n    {className: 'amountContainer'},\n    dom.tag('div', {className: 'amount'}, '4')\n);\n\n// make plugin and storage visible in app\napp.updater = window.core.plugins.updater;\n\napp.storages = fileSystem.getMountPoints().concat(fileSystem.getHDDInfo());\n\nfileSystem.onMount = function ( state ) {\n    console.log('onMount: ' + state);\n    app.storages = fileSystem.getMountPoints().concat(fileSystem.getHDDInfo());\n    if ( app.pages.usb.active ) {\n        if ( app.pages.usb.modalUsbSelect.visible ) {\n            app.pages.usb.modalUsbSelect.hide();\n        }\n        app.pages.usb.middlePanel.reset();\n        app.pages.usb.panelSet.focus();\n    }\n};\n\n\npage.clock = new Flicker({\n    className: 'clock',\n    interval: 1000,\n    render: function ( $item ) {\n        var time  = new Date(),\n            hours = time.getHours(),\n            mins  = time.getMinutes();\n\n        $item.innerText = (hours > 9 ? hours : '0' + hours) + ':' + (mins > 9 ? mins : '0' + mins);\n    }\n});\npage.add(page.clock);\npage.clock.start();\n\n\n// modal message: exit\npage.modalExit = new ModalMessage({\n    title: _('Exit'),\n    className: 'modalExit',\n    events: {\n        show: function () { this.children[0].focus(); },\n        hide: function () { page.panelSet.focus(); }\n    },\n    children: [\n        new LayoutList({\n            size: 2,\n            focusIndex: 0,\n            data: [\n                {\n                    items: [{value: _('Yes')}],\n                    click: function () {\n                        page.modalExit.hide();\n                        if ( app.intent && app.intent.data && app.intent.data.closeCallback ) {\n                            // if we came here from settings reset and close them too\n                            window.core.taskManager.hideAll();\n                            app.intent.data.closeCallback();\n                            app.intent = null;\n                        } else {\n                            window.core.call('hide');\n                            //app.exit(); // don't work for system app\n                        }\n                    }\n                },\n                {\n                    items: [{value: _('No')}],\n                    click: function () { page.modalExit.hide(); }\n                }\n            ],\n            propagate: true\n        })\n    ]\n});\npage.add(page.modalExit);\n\n\n// left panel (menu)\npage.leftPanel = new PanelExtended({title: _('Menu'), children: [], className: 'leftPanel'});\npage.leftPanel.add(page.leftPanel.list = new LayoutList({\n    cycle: true,\n    focusIndex: 0,\n    data: [\n        {\n            items: [{className: 'theme-icon theme-icon-exit', value: ''}, {value: _('Exit')}],\n            click: function () {\n                page.panelSet.blur();\n                page.modalExit.show();\n            }\n        }\n    ]\n}));\n\n\n// right panel (information)\npage.rightPanel = new PanelExtended({title: _('Details'), className: 'rightPanel'});\npage.rightPanel.scroll = new Scroll({});\npage.rightPanel.textArea = new ScrollArea({propagate: true, step: 5, scroll: page.rightPanel.scroll});\npage.rightPanel.add(page.rightPanel.textArea, page.rightPanel.scroll);\n\npage.rightPanel.reset = function () {\n    var area = page.rightPanel.textArea,\n        data, $fragment, index,\n        htmlElem;\n\n    area.$body.innerHTML = '';\n\n    try {\n        data = page.middlePanel.list.$focusItem.data.items[1].data;\n    } catch ( error ) {\n        data = null;\n\n    }\n\n    if ( data && data.length ) {\n        $fragment = dom.fragment();\n        for ( index = 0; index < data.length; index++ ) {\n            if ( data[index].type === 'title' ) {\n                $fragment.appendChild(dom.tag(\n                    'div',\n                    {className: 'title theme-subhead-color'},\n                    (data[index].data || '') + (typeof data[index].calc === 'function' ? ' ' + data[index].calc() : '' )\n                ));\n            } else if ( data[index].type === 'text' ) {\n                $fragment.appendChild(dom.tag(\n                    'div',\n                    {},\n                    (data[index].data || '') + (typeof data[index].calc === 'function' ? ' ' + data[index].calc() : '' )\n                ));\n            } else if ( data[index].type === 'html' ) {\n                htmlElem = document.createElement('div');\n                htmlElem.innerHTML = data[index].data;\n                $fragment.appendChild(htmlElem);\n            }\n        }\n        area.$body.appendChild($fragment);\n        page.rightPanel.textArea.show();\n        page.rightPanel.textArea.init();\n    } else {\n        page.rightPanel.textArea.hide();\n    }\n};\n\n\n// modal message: change auto update condition\npage.modalFriquency = new ModalMessage({\n    visible: false,\n    title: _('Auto update condition'),\n    events: {\n        show: function () { this.focus(); },\n        hide: function () { page.panelSet.focus(); }\n    },\n    children: [\n        new RadioList({\n            cycle: true,\n            focusIndex: 0,\n            size: 3,\n            data: [\n                {\n                    state: app.updater.frequency === app.updater.constants.NEVER,\n                    title: _('Never'),\n                    value: app.updater.constants.NEVER\n                },\n                {\n                    state: app.updater.frequency === app.updater.constants.WEEKLY,\n                    title: _('Weekly'),\n                    value: app.updater.constants.WEEKLY\n                },\n                {\n                    state: app.updater.frequency === app.updater.constants.MONTHLY,\n                    title: _('Monthly'),\n                    value: app.updater.constants.MONTHLY\n                }\n            ],\n            propagate: true,\n            events: {\n                'click:item': function ( event ) {\n                    app.updater.frequency = event.$item.data.value;\n                    page.rightPanel.reset();\n                    page.modalFriquency.hide();\n                }\n            }\n        })\n    ]\n});\npage.add(page.modalFriquency);\n\n\n// modal message: change beta update condition\npage.modalAllowBeta = new ModalMessage({\n    visible: false,\n    title: _('Update to beta'),\n    events: {\n        show: function () { this.focus(); },\n        hide: function () { page.panelSet.focus(); }\n    },\n    children: [\n        new RadioList({\n            cycle: true,\n            focusIndex: 0,\n            size: 2,\n            data: [\n                {state: !app.updater.betaUpdate, title: _('OFF'), value: false},\n                {state: app.updater.betaUpdate, title: _('ON'), value: true}\n            ],\n            propagate: true,\n            events: {\n                'click:item': function ( event ) {\n                    app.updater.betaUpdate = event.$item.data.value;\n                    page.rightPanel.reset();\n                    page.modalAllowBeta.hide();\n                }\n            }\n        })\n    ]\n});\npage.add(page.modalAllowBeta);\n\n\n// middle panel\npage.middlePanel = new PanelExtended({\n    title: [{value: _('updates'), className: 'name'}, $channelsCountWrapper],\n    main: true,\n    children: [],\n    className: 'middlePanel'\n});\n\npage.middlePanel.sets = {\n    main: {\n        title: _('updates'),\n        index: 0,\n        data: [\n            {\n                items: [\n                    {className: 'theme-icon theme-icon-internet'},\n                    {\n                        value: _('List of releases'),\n                        data: [\n                            {type: 'title', data: _('Update via server')},\n                            {type: 'html', data: '</br>'},\n                            {type: 'text', data: _('Update to image from server.')}\n                        ]\n                    }\n                ],\n                click: function () {\n                    page.middlePanel.reset(page.middlePanel.sets.releases);\n                }\n            }, {\n                items: [\n                    {className: 'theme-icon theme-icon-update'},\n                    {\n                        value: _('Update by URL'),\n                        data: [\n                            {type: 'title', data: _('Update via URL')},\n                            {type: 'html', data: '</br>'},\n                            {type: 'text', data: _('Update to image from URL.')}\n                        ]\n                    }\n                ],\n                click: function () {\n                    page.panelSet.blur();\n                    app.route(app.pages.url);\n                }\n            }, {\n                items: [\n                    {className: 'theme-icon theme-icon-usb'},\n                    {\n                        value: _('USB'),\n                        data: [\n                            {type: 'title', data: _('Update via storage')},\n                            {type: 'html', data: '</br>'},\n                            {type: 'text', data: _('Update to image from storage device.')}\n                        ]\n                    }\n                ],\n                click: function () {\n                    page.panelSet.blur();\n                    app.route(app.pages.usb);\n                }\n            }\n        ]\n    },\n    options: {\n        title: _('Auto update'),\n        index: 0,\n        data: [\n            {\n                items: [{className: 'theme-icon theme-icon-back'}, {value: '..'}],\n                click: function () { page.middlePanel.reset(page.middlePanel.sets.main); }\n            }, {\n                items: [\n                    {className: 'theme-icon theme-icon-beta'},\n                    {\n                        value: _('Update to beta versions'),\n                        data: [\n                            {type: 'title', data: _('Update to beta versions:')},\n                            {type: 'text', calc: function () { return app.updater.betaUpdate ? _('ON') : _('OFF'); }},\n                            {type: 'html', data: '</br>'},\n                            {type: 'text', data: _('Update to beta versions.')}\n                        ]\n                    }\n                ],\n                click: function () {\n                    page.panelSet.blur();\n                    page.modalAllowBeta.show();\n                }\n            }, {\n                items: [\n                    {className: 'theme-icon theme-icon-update'},\n                    {\n                        value: _('Update frequency'),\n                        data: [\n                            {type: 'title', data: _('Update frequency:')},\n                            {\n                                type: 'text',\n                                calc: function () {\n                                    var localisations = {};\n\n                                    localisations[app.updater.constants.NEVER] = _('Never');\n                                    localisations[app.updater.constants.WEEKLY] = _('Weekly');\n                                    localisations[app.updater.constants.MONTHLY] = _('Monthly');\n\n                                    return localisations[app.updater.frequency];\n                                }\n                            },\n                            {type: 'html', data: '</br>'},\n                            {type: 'text', data: _('Choose frequency of new versions check.')}\n                        ]\n                    }\n                ],\n                click: function () {\n                    page.panelSet.blur();\n                    page.modalFriquency.show();\n                }\n            }\n        ]\n    },\n    releases: {\n        title: _('List of releases'),\n        index: 0,\n        data: [\n            {\n                items: [{className: 'theme-icon theme-icon-back'}, {value: '..'}],\n                click: function () { page.middlePanel.reset(page.middlePanel.sets.main); }\n            }\n        ]\n    }\n};\n\n\nif ( app.updater.autoUpdateEnabled ) {\n    page.middlePanel.sets.main.data.push({\n        items: [\n            {className: 'theme-icon theme-icon-folder'},\n            {\n                value: _('Auto update'),\n                data: [\n                    {type: 'title', data: _('Auto update')},\n                    {type: 'html', data: '</br>'},\n                    {type: 'text', data: _('Choose auto update conditions.')}\n                ]\n            }\n        ],\n        click: function () {\n            page.middlePanel.reset(page.middlePanel.sets.options);\n        }\n    });\n}\n\n\npage.middlePanel.releaseListUpdate = function () {\n    var items = app.updater.list;\n\n    //    items = [{\n    //        name: '0.2.20-a7.7-256',\n    //        url: 'http://update.infomir.com/mag/256/imageupdate_0.2.20-a7.7-256',\n    //        type: 'release',\n    //        date: '2016-08-19T17:06:25.000Z',\n    //        descr: '0.2.20-alpha7.7'\n    //    }, {\n    //        name: '2.20.01-256',\n    //        url: 'http://update.infomir.com/mag/256/imageupdate_2.20.01-256',\n    //        type: 'release',\n    //        date: '2017-02-27T14:50:14.000Z',\n    //        descr: '2.20.01-256'\n    //    }, {\n    //        name: '2.20.01-259',\n    //        url: 'http://update.infomir.com/mag/256/imageupdate_2.20.01-256',\n    //        type: 'release',\n    //        date: '2019-02-27T14:50:14.000Z',\n    //        descr: '9.20.01-256'\n    //    }];\n\n    page.middlePanel.sets.releases.data = [\n        {\n            items: [{className: 'theme-icon theme-icon-back'}, {value: '..'}],\n            click: function () { page.middlePanel.reset(page.middlePanel.sets.main); }\n        }\n    ];\n\n    items.forEach(function ( item, index, array ) {\n        page.middlePanel.sets.releases.data.push({\n            items: [\n                {className: 'theme-icon theme-icon-file'},\n                {\n                    value: item.name,\n                    data: [\n                        {type: 'title', data: _('New version')},\n                        {type: 'html', data: '</br>'},\n                        {type: 'text', data: _('Name:') + ' ' + item.name},\n                        {type: 'text', data: _('Description:') + ' ' + item.descr},\n                        {type: 'text', data: _('Type:') + ' ' + item.type},\n                        {type: 'text', data: _('Date:') + ' ' + (new Date(item.date)).toString()},\n                        {type: 'html', data: '</br>'},\n                        {type: 'title', data: _('Current version')},\n                        {type: 'html', data: '</br>'},\n                        {type: 'text', data: _('Name:') + ' ' + app.updater.current.version},\n                        {type: 'text', data: _('Description:') + ' ' + app.updater.current.description},\n                        {type: 'text', data: _('Date:') + ' ' + app.updater.current.date.toString()}\n                    ]\n                }\n            ],\n            click: function () {\n                var wholeArray = array.slice();\n\n                page.panelSet.blur();\n                wholeArray.splice(index, 1);\n                app.route(app.pages.info, [item].concat(wholeArray));\n            }\n        });\n    });\n};\n\npage.middlePanel.resetTimeOut = null;\npage.middlePanel.reset = function ( listSet ) {\n    // prevent reset call spam\n    clearTimeout(page.middlePanel.resetTimeOut);\n    // Check downloads info change every \"n\" (depends on plugin config) seconds.\n    page.middlePanel.resetTimeOut = setTimeout(function () {\n        var body,\n            list = page.middlePanel.list;\n\n        if ( page.middlePanel.currentSet ) {\n            page.middlePanel.currentSet.index = list.$focusItem.index;\n        }\n        page.middlePanel.currentSet = listSet;\n        body = {data: listSet.data};\n        $channelsCountWrapper.firstChild.innerText = listSet.data.length;\n        body.focusIndex = listSet.index < listSet.data.length ? listSet.index : 0;\n        page.middlePanel.scroll.init({realSize: listSet.data.length, viewSize: 7});\n        page.middlePanel.scroll.show();\n        list.init(body);\n        page.middlePanel.$title.init({data: [listSet.title]});\n    }, 300);\n};\n\npage.middlePanel.scroll = new Scroll({});\npage.middlePanel.add(page.middlePanel.list = new LayoutList({\n    cycle: true,\n    scroll: page.middlePanel.scroll,\n    focusIndex: 0,\n    size: 7,\n    data: page.middlePanel.sets.main.data,\n    events: {\n        'focus:item': function () {\n            setTimeout(function () {\n                page.rightPanel.reset();\n            }, 50);\n        }\n    }\n}));\n\n\n// panel set: main\npage.panelSet = new PanelSet({\n    visible: true,\n    $node: document.getElementById('panelSetMain'),\n    focusIndex: 1,\n    panels: [page.leftPanel, page.middlePanel, page.rightPanel]\n});\npage.add(page.panelSet);\n\n\npage.addListener('keydown', function ( event ) {\n    switch ( event.code ) {\n        case keys.back:\n            if ( page.activeComponent === page.middlePanel.list && page.middlePanel.currentSet !== page.middlePanel.sets.main ) {\n                page.middlePanel.reset(page.middlePanel.sets.main);\n            } else {\n                window.core.call('hide');\n            }\n            break;\n    }\n});\n\n// work but no use for this\napp.updater.addListeners({\n    listChange: function () {\n        page.middlePanel.releaseListUpdate();\n        if ( app.pages.main.active && page.middlePanel.currentSet === page.middlePanel.sets.options ) {\n            page.middlePanel.reset(page.middlePanel.sets.options);\n            //window.core.notify({title: _('New software version available'), icon: 'info'});\n        }\n    },\n    hardUpdate: function ( data ) {\n        console.log('start update right now with data: ' + JSON.stringify(data));\n        if ( data ) {\n            app.intent = {action: 'update', data: data};\n            app.route(app.pages.logs, [data]);\n        }\n    }\n});\n\nwindow.core.addListener('intent', function ( intent, callback ) {\n    if ( intent.action === 'update' ) {\n        window.core.call('focus');\n        app.intent = intent;\n        if ( intent.data && !intent.data.closeCallback ) {\n            console.log('intent.data' + JSON.stringify(intent.data));\n            console.log('frequency' + app.updater.frequency);\n            if ( app.updater.frequency !== app.updater.constants.NEVER || app.updater.standAloneMode ) {\n                console.log('start update right now');\n                app.route(app.pages.logs, [intent.data]);\n            }\n        }\n        callback(false, {});\n    }\n});\n\npage.addListener('show', function () {\n    page.panelSet.show();\n    page.panelSet.focus();\n    if ( !page.middlePanel.currentSet ) {\n        page.middlePanel.reset(page.middlePanel.sets.main);\n    }\n    page.middlePanel.focus();\n    page.rightPanel.reset();\n});\n\nwindow.core.addListeners({\n    show: function () { page.clock.start(); },\n    hide: function () { page.clock.stop(); }\n});\n\npage.middlePanel.releaseListUpdate();\napp.route(page);\npage.show();\n\nif ( app.updater.standAloneMode ) {\n    // in launcher mode we need to tell core that we are ready\n    window.core.emit('app:ready');\n}\n\n// public\nmodule.exports = page;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base page implementation.\n *\n * A full-screen top-level layer that can operate as an independent separate entity.\n * It is added to the document body on creation if not already linked.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n *\n * @example\n * var Page = require('stb/ui/page'),\n *     page = new Page({\n *         $node: document.getElementById(id)\n *     });\n *\n * page.addListener('show', function show () {\n *     // page is visible now\n * });\n */\nfunction Page ( config ) {\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    /**\n     * Page visibility/active state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.active = false;\n\n    /**\n     * Link to the currently active component with focus.\n     *\n     * @readonly\n     * @type {Component}\n     */\n    this.activeComponent = null;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'page ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // state flag\n    this.active = this.$node.classList.contains('active');\n\n    // correct DOM parent/child connection if necessary\n    if ( this.$node.parentNode === null ) {\n        document.body.appendChild(this.$node);\n    }\n\n    // always itself\n    this.page = this;\n}\n\n\n// inheritance\nPage.prototype = Object.create(Component.prototype);\nPage.prototype.constructor = Page;\n\n// set component name\nPage.prototype.name = 'spa-component-page';\n\n\n// public\nmodule.exports = Page;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-modal');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-modal';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base modal window implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n */\nfunction Modal ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body ) {\n            throw new Error(__filename + ': config.$body should not be provided manually');\n        }\n    }\n\n    // create centered div\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // add table-cell wrapper\n    this.$node.appendChild(document.createElement('div').appendChild(this.$body).parentNode);\n}\n\n\n// inheritance\nModal.prototype = Object.create(Component.prototype);\nModal.prototype.constructor = Modal;\n\n// set component name\nModal.prototype.name = 'spa-component-modal';\n\n\n// public\nmodule.exports = Modal;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base scroll bar implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {number} [config.value=0] initial thumb position\n * @param {number} [config.realSize=100] actual scroll size\n * @param {number} [config.viewSize=10] visible area size\n * @param {number} [config.type] direction\n *\n * @example\n * var ScrollBar = require('stb/ui/scroll.bar'),\n *     scrollBar = new ScrollBar({\n *         viewSize: 5,\n *         realSize: 25,\n *         events: {\n *             done: function () {\n *                 debug.log('ScrollBar: done');\n *             },\n *             change: function ( data ) {\n *                 debug.log('ScrollBar: change to ' + data.curr + ' from ' + data.prev);\n *             }\n *         }\n *     });\n */\nfunction ScrollBar ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Visible area size.\n     *\n     * @type {number}\n     */\n    this.viewSize = 10;\n\n    /**\n     * Scroll area actual height or width (if scroll is horizontal).\n     *\n     * @type {number}\n     */\n    this.realSize = 100;\n\n    /**\n     * Scroll thumb position.\n     *\n     * @type {number}\n     */\n    this.value = 0;\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Geometry of the scroll thumb element.\n     *\n     * @type {ClientRect}\n     */\n    this.thumbRect = null;\n\n    /**\n     * Geometry of the scroll track element.\n     *\n     * @type {ClientRect}\n     */\n    this.trackRect = null;\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'scrollBar ' + (config.className || '');\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // insert thumb line\n    this.$thumb = this.$body.appendChild(document.createElement('div'));\n\n    // correct CSS class name\n    this.$thumb.className = 'thumb';\n\n    // component setup\n    this.init(config);\n}\n\n\n// inheritance\nScrollBar.prototype = Object.create(Component.prototype);\nScrollBar.prototype.constructor = ScrollBar;\n\n// set component name\nScrollBar.prototype.name = 'spa-component-scrollbar';\n\nScrollBar.prototype.TYPE_VERTICAL   = 1;\nScrollBar.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Init or re-init realSize/viewSize/value parameters.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nScrollBar.prototype.init = function ( config ) {\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // set actual scroll size\n    if ( config.realSize !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.realSize) !== config.realSize ) {\n                throw new Error(__filename + ': config.realSize value must be a number');\n            }\n        }\n\n        // apply\n        this.realSize = config.realSize;\n    }\n\n    // set visible area size\n    if ( config.viewSize !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.viewSize) !== config.viewSize ) {\n                throw new Error(__filename + ': config.viewSize value must be a number');\n            }\n            if ( config.viewSize < 0 ) {\n                throw new Error(__filename + ': config.viewSize value must be greater than 0');\n            }\n        }\n\n        // apply\n        this.viewSize = config.viewSize;\n    }\n\n    // show or hide thumb\n    if ( this.viewSize >= this.realSize ) {\n        this.$thumb.classList.add('hidden');\n    } else {\n        this.$thumb.classList.remove('hidden');\n    }\n\n    // set thumb position\n    if ( config.value !== undefined ) {\n        // apply\n        this.scrollTo(config.value);\n    }\n\n    // set thumb size\n    if ( this.type === this.TYPE_VERTICAL ) {\n        this.$thumb.style.height = (this.viewSize / this.realSize * 100) + '%';\n    } else {\n        this.$thumb.style.width = (this.viewSize / this.realSize * 100) + '%';\n    }\n\n    // geometry\n    this.thumbRect = this.$thumb.getBoundingClientRect();\n    this.trackRect = this.$node.getBoundingClientRect();\n};\n\n\n/**\n * Set position of the given value.\n * Does nothing in case when scroll is in the end and passed value is more than scroll bar length.\n *\n * @param {number} value new value to set\n * @return {boolean} operation result\n *\n * @fires module:stb/ui/scroll.bar~ScrollBar#done\n * @fires module:stb/ui/scroll.bar~ScrollBar#change\n */\nScrollBar.prototype.scrollTo = function ( value ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(value) !== value ) {\n            throw new Error(__filename + ': value must be a number');\n        }\n        if ( this.realSize > this.viewSize && value > this.realSize - this.viewSize ) {\n            throw new Error(__filename + ': value is greater than this.realSize-this.viewSize');\n        }\n        if ( value < 0 ) {\n            throw new Error(__filename + ': value is less then 0');\n        }\n    }\n\n    // value has changed\n    if ( this.value !== value ) {\n        // track and thumb geometry was not set\n        if ( this.thumbRect.height === 0 || this.thumbRect.width === 0 ) {\n            // apply\n            this.trackRect = this.$node.getBoundingClientRect();\n            this.thumbRect = this.$thumb.getBoundingClientRect();\n        }\n\n        // set scroll bar width\n        if ( this.type === this.TYPE_VERTICAL ) {\n            this.$thumb.style.marginTop = ((this.trackRect.height - this.thumbRect.height) * value / (this.realSize - this.viewSize)) + 'px';\n        } else {\n            this.$thumb.style.marginLeft = ((this.trackRect.width - this.thumbRect.width) * value / (this.realSize - this.viewSize)) + 'px';\n        }\n\n        // there are some listeners\n        if ( this.events['change'] ) {\n            /**\n             * Update scroll value.\n             *\n             * @event module:stb/ui/scroll.bar~ScrollBar#change\n             *\n             * @type {Object}\n             * @property {number} prev old/previous scroll value\n             * @property {number} curr new/current scroll value\n             */\n            this.emit('change', {curr: value, prev: this.value});\n        }\n\n        // is it the end?\n        if ( value >= this.realSize ) {\n            value = this.realSize;\n\n            // there are some listeners\n            if ( this.events['done'] ) {\n                /**\n                 * Set scroll to its maximum value.\n                 *\n                 * @event module:stb/ui/scroll.bar~ScrollBar#done\n                 */\n                this.emit('done');\n            }\n        }\n\n        // set new value\n        this.value = value;\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = ScrollBar;\n","/**\n * Main page implementation.\n *\n * @author Dmytro Fedotov <d.fedotov@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar id            = 'pageInfo',\n    Page          = require('stb-component-page'),\n    app           = require('mag-app'),\n    page          = new Page({$node: document.getElementById(id)}),\n    PanelSet      = require('mag-component-panel-set'),\n    PanelExtended = require('mag-component-panel'),\n    LayoutList    = require('mag-component-layout-list'),\n    ModalMessage  = require('mag-component-modal'),\n    RadioList     = require('mag-component-radio-list'),\n    dom           = require('spa-dom'),\n    keys          = require('stb-keys'),\n    Scroll        = require('stb-component-scrollbar'),\n    Flicker       = require('spa-component-flicker'),\n    Button        = require('stb-component-button'),\n    $channelsCountWrapper, $channelsCount;\n\n\n$channelsCountWrapper = dom.tag(\n    'div',\n    {className: 'amountContainer'},\n    $channelsCount = dom.tag('div', {className: 'amount'}, '0')\n);\n\n\npage.clock = new Flicker({\n    className: 'clock',\n    interval: 1000,\n    render: function ( $item ) {\n        var time  = new Date(),\n            hours = time.getHours(),\n            mins  = time.getMinutes();\n\n        $item.innerText = (hours > 9 ? hours : '0' + hours) + ':' + (mins > 9 ? mins : '0' + mins);\n    }\n});\npage.add(page.clock);\npage.clock.start();\n\n\n// modal message: select image form list\npage.modalImageSelect = new ModalMessage({\n    visible: false,\n    title: gettext('images'),\n    events: {\n        show: function () {\n            var focusIndex = 0,\n                data       = [],\n                index;\n\n            for ( index = 0; index < page.list.length; index++ ) {\n                data.push({\n                    state: false,\n                    title: page.list[index].name,\n                    value: page.list[index]\n                });\n                if ( page.currImg === page.list[index] ) {\n                    data[index].state = true;\n                    focusIndex = index;\n                }\n            }\n            this.children[0].init({data: data, size: data.length, focusIndex: focusIndex});\n            this.focus();\n        },\n        hide: function () {\n            page.panelSet.focus();\n        }\n    },\n    children: [\n        new RadioList({\n            cycle: true,\n            focusIndex: 0,\n            size: 3,\n            data: [],\n            propagate: true,\n            events: {\n                'click:item': function ( event ) {\n                    page.currImg = event.$item.data.value;\n                    page.modalImageSelect.hide();\n                    page.middlePanel.reset();\n                }\n            }\n        })\n    ]\n});\npage.add(page.modalImageSelect);\n\n\n// modal message: show full text\npage.modalMore = new ModalMessage({\n    visible: false,\n    focusable: true,\n    title: gettext('information'),\n    events: {\n        show: function () {\n            if ( page.middlePanel.list.$focusItem ) {\n                page.modalMore.$text.innerText = page.middlePanel.list.$focusItem.children[0].children[0].innerText;\n                page.modalMore.$body.innerHTML = '</br>';\n                page.modalMore.$body.innerHTML += page.middlePanel.list.$focusItem.children[0].children[1].innerText;\n                page.modalMore.$body.innerHTML += '</br></br>';\n            }\n            this.focus();\n        },\n        hide: function () {\n            page.panelSet.focus();\n        }\n    }\n});\npage.add(page.modalMore);\n\n\n// middle panel (list)\npage.middlePanel = new PanelExtended({\n    title: [{value: gettext('software update'), className: 'name'}, $channelsCountWrapper],\n    main: true,\n    children: [],\n    className: 'middlePanel'\n});\n\npage.middlePanel.scroll = new Scroll({});\n\npage.middlePanel.add(page.middlePanel.list = new LayoutList({\n    cycle: true,\n    focusIndex: 0,\n    size: 6,\n    className: 'padded',\n    scroll: page.middlePanel.scroll,\n    events: {\n        overflow: function () {\n            page.middlePanel.list.$focusItem.classList.remove('focus');\n            page.middlePanel.scroll.hide();\n            page.middlePanel.button.focus();\n        },\n        keydown: function ( event ) {\n            LayoutList.prototype.defaultEvents.keydown.call(this, event);\n        }\n    },\n    data: [],\n    noData: dom.tag(\n        'div',\n        {className: 'panelHint'},\n        dom.tag(\n            'div',\n            {className: 'hint'},\n            dom.tag('div', {className: 'hint', innerHTML: gettext('No data')})\n        )\n    )\n}), page.middlePanel.scroll);\n\npage.middlePanel.reset = function () {\n    var data = [\n            {\n                items: [\n                    {className: 'item name theme-subhead-color', value: gettext('Current version:')},\n                    {className: 'item text', value: app.updater.current.version}\n                ]\n            }, {\n                items: [\n                    {className: 'item name theme-subhead-color', value: gettext('Description:')},\n                    {className: 'item text', value: app.updater.current.description}\n                ],\n                className: 'theme-item-more',\n                click: function () {\n                    page.panelSet.blur();\n                    page.modalMore.show();\n                }\n            }, {\n                items: [\n                    {className: 'item name theme-subhead-color', value: gettext('Date:')},\n                    {className: 'item text', value: app.updater.current.date.toString()}\n                ],\n                className: 'theme-item-more',\n                click: function () {\n                    page.panelSet.blur();\n                    page.modalMore.show();\n                }\n            }\n        ],\n        list = page.middlePanel.list;\n\n    if ( page.currImg ) {\n        data = data.concat([\n            {\n                items: [\n                    {className: 'item name theme-subhead-color', value: gettext('New version:')},\n                    {className: 'item text', value: page.currImg.name}\n                ],\n                className: (page.list.length > 1 ? 'theme-item-more' : '') + ' theme-separator-top',\n                click: function () {\n                    if ( page.list.length > 1 ) {\n                        page.panelSet.blur();\n                        page.modalImageSelect.show();\n                    }\n                }\n            }, {\n                items: [\n                    {className: 'item name theme-subhead-color', value: gettext('Description:')},\n                    {className: 'item text', value: page.currImg.descr}\n                ],\n                className: 'theme-item-more',\n                click: function () {\n                    page.panelSet.blur();\n                    page.modalMore.show();\n                }\n            }, {\n                items: [\n                    {className: 'item name theme-subhead-color', value: gettext('Date:')},\n                    {className: 'item text', value: page.currImg.date.toString()}\n                ],\n                className: 'theme-item-more',\n                click: function () {\n                    page.panelSet.blur();\n                    page.modalMore.show();\n                }\n            }/*, {\n            items: [\n                {className: 'item name theme-subhead-color', value: gettext('Change log:')},\n                {className: 'item text', value: page.currImg.logs}\n            ],\n            className: 'theme-item-more',\n            click: function () {\n                page.panelSet.blur();\n                page.modalMore.show();\n            }\n        }*/]);\n    }\n\n    $channelsCount.innerText = data.length;\n    list.init({data: data, focusIndex: list.$focusItem && list.$focusItem.index ? list.$focusItem.index : 0});\n};\n\n\npage.middlePanel.add(page.middlePanel.button = new Button({\n    value: gettext('UPDATE'),\n    className: 'bottom theme-footer',\n    $node: page.middlePanel.$node.appendChild(document.createElement('div')),\n    events: {\n        click: function () {\n            if ( page.currImg ) {\n                app.route(app.pages.logs, page.currImg);\n            } else {\n                app.route(app.pages.main);\n            }\n        },\n        keydown: function ( event ) {\n            if ( event.code === keys.up ) {\n                page.middlePanel.list.focus();\n                page.middlePanel.scroll.show();\n                // restore taken focus class\n                page.middlePanel.list.$focusItem.classList.add('focus');\n                page.middlePanel.list.focusIndex(page.middlePanel.list.data.length - 1);\n            } else if ( event.code === keys.down ) {\n                page.middlePanel.list.focus();\n                page.middlePanel.scroll.show();\n                // restore taken focus class\n                page.middlePanel.list.$focusItem.classList.add('focus');\n                page.middlePanel.list.focusIndex(0);\n            } else if ( event.code === keys.ok ) {\n                if ( page.middlePanel.button.events['click'] ) {\n                    page.middlePanel.button.emit('click', {event: event});\n                }\n            }\n        }\n    }\n}));\n\n// panel set: main\npage.panelSet = new PanelSet({\n    visible: true,\n    $node: document.getElementById('panelSetInfo'),\n    focusIndex: 0,\n    panels: [page.middlePanel]\n});\npage.add(page.panelSet);\n\n\npage.addListener('keydown', function ( event ) {\n    switch ( event.code ) {\n        case keys.back:\n            app.route(app.pages.main);\n            break;\n    }\n});\n\n\npage.addListener('show', function ( data ) {\n    // list of image from auto update server text file\n    page.list = app.updater.list;\n    // for usb update use list of 1 element (image at usb)\n    if ( data && data.data && Array.isArray(data.data) ) {\n        page.list = data.data;\n    }\n    page.currImg = page.list[0];\n    if ( page.currImg ) {\n        page.middlePanel.button.$text.innerText = gettext('UPDATE');\n    } else {\n        window.core.notify({title: gettext('Software up to date, no need for update.'), icon: 'info'});\n        page.middlePanel.button.$text.innerText = gettext('CLOSE');\n    }\n    console.log('page.list: ' + JSON.stringify(page.list));\n    page.panelSet.show();\n    page.panelSet.focus();\n    page.middlePanel.reset();\n    // give focus to button\n    page.middlePanel.list.$focusItem.classList.remove('focus');\n    page.middlePanel.scroll.hide();\n    page.middlePanel.button.focus();\n});\n\n\n// public\nmodule.exports = page;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component'),\n    keys      = require('spa-keys');\n\n\n/**\n * Base button implementation.\n *\n * Has global options:\n *     Button.prototype.clickDuration - time to apply \"click\" class, does not apply if 0\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {string} [config.value] button caption text (generated if not set)\n * @param {string} [config.icon] button icon name\n *\n * @example\n * var Button = require('stb/ui/button'),\n *     btnSimple, btnIcon, btnDetached;\n *\n * btnSimple = new Button({\n *     $node: document.getElementById('btnSimple'),\n *     value: 'Simple button'\n * });\n *\n * btnIcon = new Button({\n *     $node: document.getElementById('btnIcon'),\n *     icon: 'menu'\n *     value: 'Button with icon'\n * });\n *\n * btnDetached = new Button({\n *     value: 'Button not added to the page',\n *     className: 'wide'\n * });\n */\nfunction Button ( config ) {\n    // current execution context\n    //var self = this;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.icon && typeof config.icon !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.icon');\n        }\n        if ( config.value && typeof config.value !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.value');\n        }\n    }\n\n    //config.name = 'spa-component-button' + (config.className || '');\n\n    // set default className if classList property empty or undefined\n    //config.className = this.name + ' ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // optional dom\n    if ( config.icon ) {\n        // insert icon\n        this.$icon = this.$body.appendChild(document.createElement('div'));\n        this.$icon.className = 'icon ' + config.icon;\n    }\n\n    // insert caption placeholder\n    this.$text = this.$body.appendChild(document.createElement('div'));\n    this.$text.classList.add('text');\n\n    if ( config.value ) {\n        // fill it\n        this.$text.innerText = config.value;\n    }\n}\n\n\n// inheritance\nButton.prototype = Object.create(Component.prototype);\nButton.prototype.constructor = Button;\n\n// set component name\nButton.prototype.name = 'spa-component-button';\n\n\n// time to apply \"click\" class, does not apply if 0\nButton.prototype.clickDuration = 200;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nButton.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse click events.\n     */\n    click: function () {\n        // current execution context\n        var self = this;\n\n        this.$node.classList.add('click');\n\n        setTimeout(function () {\n            self.$node.classList.remove('click');\n        }, this.clickDuration);\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        if ( event.code === keys.enter ) {\n            // emulate click\n            // there are some listeners\n            if ( this.events['click'] ) {\n                /**\n                 * Mouse click event emulation.\n                 *\n                 * @event module:stb/ui/button~Button#click\n                 *\n                 * @type {Object}\n                 * @property {Event} event click event data\n                 */\n                this.emit('click', {event: event});\n            }\n        }\n    }\n};\n\n\n// public\nmodule.exports = Button;\n","/**\n * Main page implementation.\n *\n * @author Dmytro Fedotov <d.fedotov@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar id           = 'pageLogs',\n    Page         = require('stb-component-page'),\n    app          = require('mag-app'),\n    page         = new Page({$node: document.getElementById(id)}),\n    Panel        = require('stb-component-panel'),\n    LayoutList   = require('mag-component-layout-list'),\n    ModalMessage = require('mag-component-modal'),\n    Progress     = require('spa-component-progress-bar'),\n    dom          = require('spa-dom'),\n    keys         = require('stb-keys'),\n    Scroll       = require('stb-component-scrollbar'),\n    Flicker      = require('spa-component-flicker'),\n    ScrollArea   = require('mag-component-scroll-area'),\n    Footer       = require('mag-component-footer'),\n    $logsBox     = document.getElementById('plPanelBorders');\n\n\npage.clock = new Flicker({\n    className: 'clock',\n    interval: 1000,\n    render: function ( $item ) {\n        var time  = new Date(),\n            hours = time.getHours(),\n            mins  = time.getMinutes();\n\n        $item.innerText = (hours > 9 ? hours : '0' + hours) + ':' + (mins > 9 ? mins : '0' + mins);\n    }\n});\npage.add(page.clock);\npage.clock.start();\n\n\nfunction toogleLogBox () {\n    if ( $logsBox.classList.contains('hidden') ) {\n        $logsBox.classList.remove('hidden');\n        page.footer.init([\n            {\n                code: keys.f1, title: gettext('Hide log'), action: toogleLogBox\n            }, {\n                code: keys.menu,\n                action: function () {\n                    page.middlePanel.blur();\n                    page.modalActions.show();\n                }\n            }\n        ]);\n    } else {\n        $logsBox.classList.add('hidden');\n        page.footer.init([\n            {\n                code: keys.f1, title: gettext('Show log'), action: toogleLogBox\n            }, {\n                code: keys.menu,\n                action: function () {\n                    page.middlePanel.blur();\n                    page.modalActions.show();\n                }\n            }\n        ]);\n    }\n}\n\n\npage.footer = new Footer({\n    visible: true,\n    parent: page,\n    data: [\n        {\n            code: keys.f1,\n            title: gettext('Hide log'),\n            action: toogleLogBox\n        }, {\n            code: keys.menu,\n            action: function () {\n                page.middlePanel.blur();\n                page.modalActions.show();\n            }\n        }\n    ]\n});\n\n\npage.progress = new Progress({\n    $node: document.getElementById('plProgressLine'),\n    value: 0\n});\npage.progress.$percents = document.getElementById('plProgressValue');\n\n// middle panel\npage.middlePanel = new Panel({\n    $node: document.getElementById('plPanel'),\n    focusable: true,\n    visible: true,\n    className: 'middlePanel'\n});\n\npage.middlePanel.scroll = new Scroll({});\n\npage.middlePanel.add(\n    page.middlePanel.textArea = new ScrollArea({\n        propagate: true,\n        step: 25,\n        scroll: page.middlePanel.scroll,\n        events: {\n            keydown: function ( event ) {\n                console.log('area keydown');\n                switch ( event.code ) {\n                    case keys.up:\n                    case keys.down:\n                        this.move(event.code);\n                        break;\n                }\n            }\n        }\n    }),\n    page.middlePanel.scroll\n);\n\npage.middlePanel.reset = function () {\n    page.middlePanel.textArea.$body.innerHTML = '';\n    page.middlePanel.textArea.$body.appendChild(dom.fragment(\n        dom.tag(\n            'div',\n            {className: 'textWrapper'},\n            dom.tag('div', {className: 'theme-icon theme-icon-ok'}),\n            dom.tag('div', {}, gettext('Prepare update'))\n        )\n    ));\n    page.middlePanel.textArea.show();\n    page.middlePanel.textArea.init();\n};\n\n\n// modal message: do something with record\npage.modalActions = new ModalMessage({\n    visible: false,\n    title: gettext('actions'),\n    events: {\n        show: function () {\n            if ( $logsBox.classList.contains('hidden') ) {\n                this.children[0].$focusItem.children[0].children[1].innerHTML = gettext('Show log');\n            } else {\n                this.children[0].$focusItem.children[0].children[1].innerHTML = gettext('Hide log');\n            }\n            this.focus();\n        },\n        hide: function () {\n            if ( $logsBox.classList.contains('hidden') ) {\n                page.focus();\n            } else {\n                page.middlePanel.textArea.focus();\n            }\n        }\n    },\n    children: [\n        new LayoutList({\n            cycle: true,\n            size: 1,\n            focusIndex: 0,\n            data: [\n                {\n                    items: [\n                        {className: 'theme-icon theme-icon-rc-f1', value: ''},\n                        {value: $logsBox.classList.contains('hidden') ? gettext('Show log') : gettext('Hide log')}\n                    ],\n                    click: function () {\n                        toogleLogBox();\n                        page.modalActions.hide();\n                    }\n                }\n            ],\n            propagate: true\n        })\n    ]\n});\npage.add(page.modalActions);\n\npage.modalReload = new ModalMessage({\n    title: _('Update error'),\n    events: {\n        show: function () {\n            var self     = this,\n                timeLeft = 10;\n\n            this.children[0].focus();\n            window.setInterval(function () {\n                timeLeft--;\n                if ( timeLeft < 0 ) {\n                    window.parent.location.reload();\n                }\n                self.$body.firstChild.firstChild.firstChild.firstChild.children[1].innerText = _('Reload') + ' (' + timeLeft + ')';\n            }, 1000);\n        },\n        hide: function () { page.panelSet.focus(); }\n    },\n    children: [\n        new LayoutList({\n            size: 1,\n            focusIndex: 0,\n            data: [\n                {\n                    items: [\n                        {className: 'theme-icon', value: ''},\n                        {value: _('Reload')}\n                    ],\n                    click: function () { window.parent.location.reload(); }\n                }\n            ]\n        })\n    ]\n});\npage.add(page.modalReload);\n\n\npage.addListener('keydown', function ( event ) {\n    switch ( event.code ) {\n        case keys.back:\n            if ( !page.blockExit ) {\n                app.route(app.pages.info);\n            }\n            break;\n    }\n});\n\n\napp.updater.addListeners({\n    progress: function ( data ) {\n        console.log('new progress val' + data.now);\n        page.progress.set(data.now);\n        page.progress.$percents.innerText = data.now + '%';\n    },\n    stateChange: function ( data ) {\n        page.middlePanel.textArea.$body.insertBefore(\n            dom.tag(\n                'div',\n                {className: 'textWrapper'},\n                dom.tag('div', {className: 'theme-icon theme-icon-ok'}),\n                dom.tag('div', {}, data.now.text)\n            ),\n            page.middlePanel.textArea.$body.firstChild\n        );\n        page.middlePanel.textArea.init();\n    },\n    error: function ( data ) {\n        console.log('the end' + data.code);\n        page.middlePanel.blur();\n        page.modalReload.show();\n        //page.blockExit = false;\n        //        window.core.notify({\n        //            title: _('Update error. Device will be rebooted.'),\n        //            icon: 'alert',\n        //            type: 'warning'\n        //        });\n        //        window.setTimeout(function () {\n        //            window.parent.location.reload();\n        //        }, 5000);\n    }\n});\n\n\npage.addListener('show', function ( data ) {\n    page.image = data.data;\n    page.blockExit = true;\n    // kill all applications except this one\n    window.core.taskManager.killAll(window);\n    //get number of launched applications: Object.keys(core.taskManager.apps).length\n    app.updater.start({uri: page.image.url});\n    page.middlePanel.reset();\n    page.middlePanel.textArea.focus();\n});\n\n\n// public\nmodule.exports = page;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-panel');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-panel';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base panel implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n *\n * @example\n * var Panel = require('stb/ui/panel'),\n *     panel = new Panel({\n *         $node: document.getElementById('someId'),\n *         children: [\n *             new Panel({\n *                 $node: document.getElementById('anotherId')\n *             })\n *         ]\n *     });\n *\n * panel.add(\n *     new Button(),\n *     new Button(),\n *     new Button()\n * );\n *\n * page.add(panel);\n */\nfunction Panel ( config ) {\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'panel ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n}\n\n\n// inheritance\nPanel.prototype = Object.create(Component.prototype);\nPanel.prototype.constructor = Panel;\n\n// set component name\nPanel.prototype.name = 'spa-component-panel';\n\n\n// public\nmodule.exports = Panel;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base progress bar implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {number} [config.value=0] initial value\n * @param {number} [config.max=100] max progress value\n * @param {number} [config.min=0] min progress value\n */\nfunction ProgressBar ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    /**\n     * Max progress value.\n     *\n     * @type {number}\n     */\n    this.max = 100;\n\n    /**\n     * Min progress value.\n     *\n     * @type {number}\n     */\n    this.min = 0;\n\n    /**\n     * Initial progress position.\n     *\n     * @type {number}\n     */\n    this.value = 0;\n\n    /**\n     * Value of the one percent step\n     *\n     * @type {number}\n     */\n    this.step = 1;\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'progressBar ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // insert bar line\n    this.$value = this.$body.appendChild(document.createElement('div'));\n\n    // correct CSS class name\n    this.$value.className = 'value';\n\n    // component setup\n    this.init(config);\n}\n\n\n// inheritance\nProgressBar.prototype = Object.create(Component.prototype);\nProgressBar.prototype.constructor = ProgressBar;\n\n// set component name\nProgressBar.prototype.name = 'spa-component-progress-bar';\n\n\n/**\n * Set position of the given value.\n * Does nothing in case when progress is end and passed value is more than max value.\n *\n * @param {number} value new value to set\n * @return {boolean} operation result\n *\n * @fires module:stb/ui/progress.bar~ProgressBar#done\n * @fires module:stb/ui/progress.bar~ProgressBar#change\n */\nProgressBar.prototype.set = function ( value ) {\n    var prevValue = this.value;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(value) !== value ) {\n            throw new Error(__filename + ': value must be a number');\n        }\n    }\n\n    // value changed but in the given range\n    if ( this.value !== value && value <= this.max && value >= this.min ) {\n        // set new value\n        this.value = value;\n\n        // get value in percents\n        value = Math.abs(this.value - this.min) / this.step;\n\n        if ( value === 100 ) {\n            // there are some listeners\n            if ( this.events['done'] ) {\n                /**\n                 * Set progress to its maximum value.\n                 *\n                 * @event module:stb/ui/progress.bar~ProgressBar#done\n                 */\n                this.emit('done');\n            }\n        }\n\n        // set progress bar width\n        this.$value.style.width = value + '%';\n\n        // there are some listeners\n        if ( this.events['change'] ) {\n            /**\n             * Update progress value.\n             *\n             * @event module:stb/ui/progress.bar~ProgressBar#change\n             *\n             * @type {Object}\n             * @property {number} prev old/previous progress value\n             * @property {number} curr new/current progress value\n             */\n            this.emit('change', {curr: this.value, prev: prevValue});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Init or re-init current max or/and min or/and value.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nProgressBar.prototype.init = function ( config ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // set max progress value\n    if ( config.max !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.max) !== config.max ) {\n                throw new Error(__filename + ': config.max value must be a number');\n            }\n        }\n\n        // apply\n        this.max = config.max;\n    }\n\n    // set min progress value\n    if ( config.min !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.min) !== config.min ) {\n                throw new Error(__filename + ': config.min value must be a number');\n            }\n        }\n\n        // apply\n        this.min = config.min;\n    }\n\n    if ( DEVELOP ) {\n        if ( this.min >= this.max ) {\n            throw new Error(__filename + ': this.min value must be less than this.max');\n        }\n    }\n\n    // set actual progress value\n    if ( config.value !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.value) !== config.value ) {\n                throw new Error(__filename + ': config.value must be a number');\n            }\n            if ( config.value > this.max ) {\n                throw new Error(__filename + ': config.value more than config.maximum');\n            }\n            if ( config.value < this.min ) {\n                throw new Error(__filename + ': config.value less than config.minimum');\n            }\n        }\n\n        // apply\n        this.value = config.value;\n    }\n\n    this.step = Math.abs(this.max - this.min) / 100;\n\n    // init bar size, (this.min - this.value) - calculate distance from start\n    this.$value.style.width = (Math.abs(this.min - this.value) / this.step) + '%';\n};\n\n\n// public\nmodule.exports = ProgressBar;\n","/**\n * @license The MIT License (MIT)\n * @copyright Dmitry Fedotov <bas.jsdev@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys'),\n    classes   = {};\n\n\n// initialize classes\nclasses[keys.f1] = 'theme-icon-rc-f1';\nclasses[keys.f2] = 'theme-icon-rc-f2';\nclasses[keys.f3] = 'theme-icon-rc-f3';\nclasses[keys.f4] = 'theme-icon-rc-f4';\nclasses[keys.menu] = 'theme-icon-rc-menu';\nclasses[keys.ok] = 'theme-icon-rc-ok';\nclasses[keys.info] = 'theme-icon-rc-info';\nclasses[keys.playPause] = 'theme-icon-rc-play-pause';\nclasses[keys.back] = 'theme-icon-rc-back';\nclasses[keys.exit] = 'theme-icon-rc-home';\nclasses[keys.keyboard] = 'theme-icon-rc-vk';\nclasses[keys.refresh] = 'theme-icon-rc-refresh';\nclasses[keys.frame] = 'theme-icon-rc-aspect';\n\n/**\n * Footer.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}  config={} init parameters\n * @param {Object}  config.parent parent page\n * @param {boolean} [config.visible] visibility flag\n * @param {Object}  [config.data] footer buttons config\n * @param {Object}  [config.data.left] left button config\n * @param {Object}  [config.data.middle] middle buttons config\n * @param {Object}  [config.data.right] right button config\n * @param {number}  [config.data.middle.code] button key code\n * @param {Object}  [config.data.middle.title] button title\n * @param {Object}  [config.data.middle.action] button press (click) action\n *\n * @example\n * page.footer = new Footer({\n *     parent: page,\n *     data: {\n *         left: {\n *             code: keys.menu, action: function () {}\n *         },\n *         middle: [\n *             {code: 55, action: function () {}},\n *             {code: keys.f1, title: 'stop', action: function () {}},\n *             {code: 9000, className: 'customIcon', title: 'start', action: function () {}},\n *             {code: keys.f4, title: 'end', action: function () {}}\n *         ],\n *         right: {\n *             code: 65, action: function () {}\n *         }\n *     }\n * });\n */\n\n/* eslint max-statements: 0 */\nfunction Footer ( config ) {\n    var currentTab = 0,\n        self = this;\n\n    // sanitize\n    config = config || {};\n    // can't accept focus\n    config.focusable = false;\n    // hide by default\n    config.visible = config.visible || false;\n    // create centered div\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    this.tabs = [\n        {codes: {}},\n        {codes: {}},\n        {codes: {}},\n        {codes: {}}\n    ];\n\n    this.tab = 0;\n\n    this.$table = this.$node.appendChild(document.createElement('table'));\n\n    this.$table.insertRow();\n    this.$table.rows[0].insertCell(-1);\n    this.$left = this.$table.rows[0].cells[0].appendChild(document.createElement('div'));\n    this.$left.className = 'theme-icon';\n\n    this.$table.rows[0].insertCell(-1);\n    this.$table.rows[0].cells[1].className = 'central';\n\n\n    this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.className = 'wrapper hidden';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n\n    ++currentTab;\n    this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.className = 'wrapper hidden';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n\n    ++currentTab;\n    this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.className = 'wrapper hidden';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n\n    ++currentTab;\n    this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.className = 'wrapper hidden';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n\n    this.$table.rows[0].insertCell(-1);\n    this.$right = this.$table.rows[0].cells[2].appendChild(document.createElement('div'));\n    this.$right.className = 'theme-icon';\n\n    this.init(config.data);\n\n    this.parent.addListener('keydown', function ( event ) {\n        var currTab = self.tabs[self.tab];\n\n        if ( self.visible ) {\n            if ( currTab.codes[event.code] && typeof currTab.codes[event.code].action === 'function' ) {\n                currTab.codes[event.code].action();\n            }\n        }\n    });\n}\n\n\n// inheritance\nFooter.prototype = Object.create(Component.prototype);\nFooter.prototype.constructor = Footer;\n\n// set component name\nFooter.prototype.name = 'mag-component-footer';\n\n\n/**\n * Redefine buttons\n *\n * @param {Object} [config] footer buttons config\n * @param {Object} [config.left] left button config\n * @param {number} [config.left.code] left button key code\n * @param {boolean} [config.left.disabled] left button is disabled\n * @param {Object} [config.left.action] left button press (click) action\n * @param {Object} [config.middle] middle buttons config\n * @param {Object} [config.right] right button config\n * @param {number} [config.right.code] right button key code\n * @param {boolean} [config.right.disabled] right button is disabled\n * @param {Object} [config.right.action] right button press (click) action\n * @param {number} [config.middle.code] button key code\n * @param {Object} [config.middle.title] button title\n * @param {boolean} [config.middle.disabled] button is disabled\n * @param {Object} [config.middle.action] button press (click) action\n *\n * page.Footer.init({\n *     left: {\n *         code: keys.menu, action: function () {}\n *     },\n *     middle: [\n *         {code: 55, action: function () {}},\n *         {code: keys.f1, title: 'stop', action: function () {}},\n *         {code: 9000, className: 'customIcon', title: 'start', action: function () {}},\n *         {code: keys.f4, title: 'end', disabled: true}\n *     ],\n *     right: {\n *         code: 65, action: function () {}\n *     }\n * });\n *\n */\nFooter.prototype.init = function ( config ) {\n    var index, $tab, $tabChildren;\n\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( config.middle && config.middle.length > 4 ) {\n            throw new Error(__filename + ': only 4 buttons allowed in footer');\n        }\n        if ( config.middle && Array.isArray(config.middle) ) {\n            for ( index = 0; index < config.middle.length; index++ ) {\n                if ( typeof config.middle[index].action !== 'function' && !config.middle[index].disabled ) {\n                    throw new Error(__filename + ': action must be a function');\n                }\n                ++index;\n            }\n        }\n        if ( config.left && typeof config.left.action !== 'function' && !config.left.disabled ) {\n            throw new Error(__filename + ': action must be a function');\n        }\n        if ( config.right && typeof config.right.action !== 'function' && !config.right.disabled ) {\n            throw new Error(__filename + ': action must be a function');\n        }\n    }\n\n    // hide old tab\n    this.tabs[this.tab].$body.classList.add('hidden');\n    this.tab = config.middle && config.middle.length ? config.middle.length - 1 : 0;\n    // current tab shortcut\n    $tab = this.tabs[this.tab];\n    // reset all actions\n    $tab.codes = {};\n\n    // left button\n    if ( config.left ) {\n        this.$left.className = config.left.className || ('theme-icon ' + (classes[config.left.code] || 'theme-icon-warning'));\n        if ( config.left.disabled ) {\n            this.$left.classList.add('disabled');\n        } else {\n            $tab.codes[config.left.code] = {action: config.left.action};\n            this.$left.style.visibility = 'inherit';\n            this.$left.onclick = function () {\n                if ( typeof config.left.action === 'function' ) {\n                    config.left.action();\n                }\n            };\n        }\n    } else if ( this.$left.style.visibility !== 'hidden' ) {\n        this.$left.style.visibility = 'hidden';\n    }\n\n    // right button\n    if ( config.right ) {\n        this.$right.className = config.right.className || ('theme-icon ' + (classes[config.right.code] || 'theme-icon-warning'));\n        if ( config.right.disabled ) {\n            this.$right.classList.add('disabled');\n        } else {\n            $tab.codes[config.right.code] = {action: config.right.action};\n            this.$right.style.visibility = 'inherit';\n            this.$right.onclick = function () {\n                if ( typeof config.right.action === 'function' ) {\n                    config.right.action();\n                }\n            };\n        }\n    } else if ( this.$right.style.visibility !== 'hidden' ) {\n        this.$right.style.visibility = 'hidden';\n    }\n\n    function addClick ( ind ) {\n        return function () {\n            if ( typeof config.middle[ind].action === 'function' ) {\n                config.middle[ind].action();\n            }\n        };\n    }\n\n    // middle buttons\n    if ( config.middle && config.middle.length ) {\n        for ( index = 0; index < config.middle.length; index++ ) {\n            $tab.codes[config.middle[index].code] = {action: config.middle[index].action};\n            if ( config.middle[index].disabled ) {\n                $tab.$body.children[index].classList.add('disabled');\n            } else {\n                $tab.$body.children[index].classList.remove('disabled');\n                $tab.$body.children[index].onclick = addClick(index);\n            }\n            // shortcut\n            $tabChildren = $tab.$body.children[index].children;\n            $tabChildren[0].className = 'iconImg ' +\n                (config.middle[index].className || ('theme-icon ' + (classes[config.middle[index].code] || 'theme-icon-warning')));\n\n            $tabChildren[1].innerText = config.middle[index].title || '';\n        }\n        $tab.$body.classList.remove('hidden');\n    }\n};\n\n\n// public\nmodule.exports = Footer;\n","/**\n * Main page implementation.\n *\n * @author Dmytro Fedotov <d.fedotov@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar id            = 'pageUsb',\n    Page          = require('stb-component-page'),\n    app           = require('mag-app'),\n    page          = new Page({$node: document.getElementById(id)}),\n    PanelSet      = require('mag-component-panel-set'),\n    PanelExtended = require('mag-component-panel'),\n    LayoutList    = require('mag-component-layout-list'),\n    ModalMessage  = require('mag-component-modal'),\n    RadioList     = require('mag-component-radio-list'),\n    dom           = require('spa-dom'),\n    keys          = require('stb-keys'),\n    Scroll        = require('stb-component-scrollbar'),\n    Flicker       = require('spa-component-flicker'),\n    Button        = require('stb-component-button'),\n    $channelsCountWrapper, $channelsCount;\n\n\n$channelsCountWrapper = dom.tag(\n    'div',\n    {className: 'amountContainer'},\n    $channelsCount = dom.tag('div', {className: 'amount'}, '0')\n);\n\n\npage.clock = new Flicker({\n    className: 'clock',\n    interval: 1000,\n    render: function ( $item ) {\n        var time  = new Date(),\n            hours = time.getHours(),\n            mins  = time.getMinutes();\n\n        $item.innerText = (hours > 9 ? hours : '0' + hours) + ':' + (mins > 9 ? mins : '0' + mins);\n    }\n});\npage.add(page.clock);\npage.clock.start();\n\n\n/**\n * Convert bytes to human readable text value (GB/MB/KB/B)\n * @param {number} size file size in bytes\n * @return {string} size localised size\n */\npage.convert = function ( size ) {\n    if ( !size || size < 0 ) { return 'n/a'; }\n\n    if ( size > (1024 * 1024 * 1024) ) {\n        return (Math.floor(size / 1024 / 1024 / 1024 * 100) / 100) + ' ' + gettext('GB');\n    }\n    if ( size > (1024 * 1024) ) {\n        return (Math.floor(size / 1024 / 1024 * 100) / 100) + ' ' + gettext('MB');\n    }\n    if ( size > (1024) ) {\n        return (Math.floor(size / 1024 * 100) / 100) + ' ' + gettext('KB');\n    }\n\n    return size + ' ' + gettext('B');\n};\n\n\n// middle panel (list)\npage.middlePanel = new PanelExtended({\n    title: [{value: gettext('Path to image'), className: 'name'}, $channelsCountWrapper],\n    main: true,\n    children: [],\n    className: 'middlePanel'\n});\n\n\npage.middlePanel.modalUsbSelect = new ModalMessage({\n    visible: false,\n    title: gettext('Select usb'),\n    events: {\n        show: function () {\n            var data       = [],\n                focusIndex = 0,\n                index;\n\n            for ( index = 0; index < app.storages.length; index++ ) {\n                data.push({\n                    state: false,\n                    title: app.storages[index].label + ' ' + page.convert(app.storages[index].size),\n                    value: app.storages[index]\n                });\n                if ( page.storage === app.storages[index] ) {\n                    data[index].state = true;\n                    focusIndex = index;\n                }\n            }\n            this.children[0].init({data: data, size: data.length, focusIndex: focusIndex});\n            this.focus();\n        },\n        hide: function () {\n            page.panelSet.focus();\n        }\n    },\n    children: [\n        new RadioList({\n            cycle: true,\n            focusIndex: 0,\n            size: 3,\n            data: [],\n            propagate: true,\n            events: {\n                'click:item': function ( event ) {\n                    page.storage = event.$item.data.value;\n                    page.middlePanel.modalUsbSelect.hide();\n                    page.middlePanel.reset();\n                }\n            }\n        })\n    ]\n});\npage.add(page.middlePanel.modalUsbSelect);\n\n\npage.middlePanel.scroll = new Scroll({});\n\n\npage.middlePanel.add(page.middlePanel.list = new LayoutList({\n    cycle: true,\n    focusIndex: 0,\n    size: 6,\n    className: 'padded',\n    scroll: page.middlePanel.scroll,\n    events: {\n        overflow: function () {\n            page.middlePanel.list.$focusItem.classList.remove('focus');\n            page.middlePanel.scroll.hide();\n            page.middlePanel.button.focus();\n        },\n        keydown: function ( event ) {\n            LayoutList.prototype.defaultEvents.keydown.call(this, event);\n        }\n    },\n    data: []\n}), page.middlePanel.scroll);\n\n\npage.middlePanel.reset = function () {\n    var usbLabel = page.storage ? page.storage.label + ' ' + page.convert(page.storage.size) : gettext('Connect device'),\n        data     = [\n            {\n                items: [\n                    {className: 'item name theme-subhead-color', value: gettext('Device:')},\n                    {className: 'item text', value: usbLabel}\n                ],\n                className: 'theme-item-more',\n                click: function () {\n                    if ( page.storage ) {\n                        page.panelSet.blur();\n                        page.middlePanel.modalUsbSelect.show();\n                    }\n                }\n            }, {\n                items: [\n                    {className: 'item name theme-subhead-color', value: gettext('Path:')},\n                    page.input = dom.tag(\n                        'div',\n                        {className: 'item text'},\n                        page.input ? page.input.innerText : (app.updater.defaultPathToImageOnUsb || '')\n                    )\n                ],\n                className: 'theme-item-more',\n                click: function () {\n                    window.core.intent({\n                        action: 'keyboard',\n                        data: {\n                            type: 'text',\n                            mode: 'qwerty',\n                            title: gettext('ENTER PATH'),\n                            description: gettext('UPDATE MANAGER'),\n                            value: page.input.innerText\n                        },\n                        events: {\n                            done: function ( event ) {\n                                page.input.innerText = event.value;\n                            }\n                        }\n                    }, function ( error ) {\n                        if ( error ) { console.log(error); }\n                    });\n                }\n            }\n        ],\n        list     = page.middlePanel.list;\n\n    $channelsCount.innerText = data.length;\n    list.init({data: data, focusIndex: list.$focusItem && list.$focusItem.index ? list.$focusItem.index : 0});\n};\n\n\npage.middlePanel.add(page.middlePanel.button = new Button({\n    value: gettext('CONTINUE'),\n    className: 'bottom theme-footer',\n    $node: page.middlePanel.$node.appendChild(document.createElement('div')),\n    events: {\n        click: function () {\n            console.log('check image by url: ' + (page.storage || '').mountPath + '/' + page.input.innerText);\n            window.core.plugins.fs.isFileExist((page.storage || '').mountPath + '/' + page.input.innerText, function ( error, exist ) {\n                if ( exist && !error ) {\n                    app.updater.check({uri: page.storage.mountPath + '/' + page.input.innerText}, function ( error, data ) {\n                        console.log('check error? ' + error);\n                        if ( error ) {\n                            window.core.notify({\n                                title: gettext('Can\\'t check this image') + ': ' + error.message,\n                                icon: 'alert',\n                                type: 'warning'\n                            });\n                        } else {\n                            app.route(app.pages.info, [data]);\n                        }\n                    });\n                } else {\n                    window.core.notify({\n                        title: gettext('Can\\'t find image by this path'),\n                        icon: 'alert',\n                        type: 'warning'\n                    });\n                }\n            });\n        },\n        keydown: function ( event ) {\n            if ( event.code === keys.up ) {\n                page.middlePanel.list.focus();\n                page.middlePanel.scroll.show();\n                // restore taken focus class\n                page.middlePanel.list.$focusItem.classList.add('focus');\n                page.middlePanel.list.focusIndex(page.middlePanel.list.data.length - 1);\n            } else if ( event.code === keys.down ) {\n                page.middlePanel.list.focus();\n                page.middlePanel.scroll.show();\n                // restore taken focus class\n                page.middlePanel.list.$focusItem.classList.add('focus');\n                page.middlePanel.list.focusIndex(0);\n            } else if ( event.code === keys.ok ) {\n                if ( page.middlePanel.button.events['click'] ) {\n                    page.middlePanel.button.emit('click', {event: event});\n                }\n            }\n        }\n    }\n}));\n\n\n// panel set: main\npage.panelSet = new PanelSet({\n    visible: true,\n    $node: document.getElementById('panelSetUsb'),\n    focusIndex: 0,\n    panels: [page.middlePanel]\n});\npage.add(page.panelSet);\n\n\npage.addListener('keydown', function ( event ) {\n    switch ( event.code ) {\n        case keys.back:\n            app.route(app.pages.main);\n            break;\n    }\n});\n\n\npage.addListener('show', function () {\n    page.storage = page.storage || app.storages[0];\n    page.panelSet.show();\n    page.panelSet.focus();\n    page.middlePanel.reset();\n    // give focus to button\n    page.middlePanel.list.$focusItem.classList.remove('focus');\n    page.middlePanel.scroll.hide();\n    page.middlePanel.button.focus();\n});\n\n\n// public\nmodule.exports = page;\n","/**\n * Main page implementation.\n *\n * @author Dmytro Fedotov <d.fedotov@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar id            = 'pageUrl',\n    Page          = require('stb-component-page'),\n    app           = require('mag-app'),\n    page          = new Page({$node: document.getElementById(id)}),\n    PanelSet      = require('mag-component-panel-set'),\n    PanelExtended = require('mag-component-panel'),\n    LayoutList    = require('mag-component-layout-list'),\n    dom           = require('spa-dom'),\n    keys          = require('stb-keys'),\n    Flicker       = require('spa-component-flicker'),\n    Button        = require('stb-component-button'),\n    $channelsCountWrapper;\n\n\n$channelsCountWrapper = dom.tag(\n    'div',\n    {className: 'amountContainer'},\n    dom.tag('div', {className: 'amount'}, '1')\n);\n\n\npage.clock = new Flicker({\n    className: 'clock',\n    interval: 1000,\n    render: function ( $item ) {\n        var time  = new Date(),\n            hours = time.getHours(),\n            mins  = time.getMinutes();\n\n        $item.innerText = (hours > 9 ? hours : '0' + hours) + ':' + (mins > 9 ? mins : '0' + mins);\n    }\n});\npage.add(page.clock);\npage.clock.start();\n\n\n// middle panel (list)\npage.middlePanel = new PanelExtended({\n    title: [{value: gettext('Update URL'), className: 'name'}, $channelsCountWrapper],\n    main: true,\n    children: [],\n    className: 'middlePanel'\n});\n\n\npage.middlePanel.add(page.middlePanel.list = new LayoutList({\n    cycle: true,\n    focusIndex: 0,\n    size: 6,\n    className: 'padded',\n    events: {\n        overflow: function () {\n            page.middlePanel.list.$focusItem.classList.remove('focus');\n            page.middlePanel.button.focus();\n        },\n        keydown: function ( event ) {\n            LayoutList.prototype.defaultEvents.keydown.call(this, event);\n        }\n    },\n    data: [\n        {\n            items: [\n                {className: 'item name theme-subhead-color', value: gettext('URL:')},\n                page.input = dom.tag(\n                    'div',\n                    {className: 'item text'},\n                    page.input ? page.input.innerText : app.updater.updateImageUrl\n                )\n            ],\n            className: 'theme-item-editable',\n            click: function () {\n                window.core.intent({\n                    action: 'keyboard',\n                    data: {\n                        type: 'text',\n                        mode: 'qwerty',\n                        title: gettext('ENTER URL'),\n                        description: gettext('UPDATE MANAGER'),\n                        value: page.input.innerText\n                    },\n                    events: {\n                        done: function ( event ) {\n                            page.input.innerText = event.value;\n                            page.confirmedImage = null;\n                            page.middlePanel.button.$text.innerText = gettext('CHECK');\n                        }\n                    }\n                }, function ( error ) {\n                    if ( error ) { console.log(error); }\n                });\n            }\n        }\n    ]\n}));\n\n\npage.middlePanel.add(page.middlePanel.button = new Button({\n    value: gettext('CHECK'),\n    className: 'bottom theme-footer',\n    $node: page.middlePanel.$node.appendChild(document.createElement('div')),\n    events: {\n        click: function () {\n            if ( page.confirmedImage ) {\n                app.route(app.pages.info, [page.confirmedImage]);\n            } else {\n                console.log('check image by url: ' + page.input.innerText);\n                app.updater.check({uri: page.input.innerText}, function ( error, data ) {\n                    console.log('check error? ' + error);\n                    console.log('data? ' + /*JSON.stringify*/(data));\n                    if ( error ) {\n                        window.core.notify({\n                            title: gettext('Can\\'t check this image') + ': ' + error.message,\n                            icon: 'alert',\n                            type: 'warning'\n                        });\n                    } else if ( !data || (data.date || '').toString() === 'Invalid Date' ) {\n                        window.core.notify({\n                            title: gettext('Can\\'t check this image'),\n                            icon: 'alert',\n                            type: 'warning'\n                        });\n                    } else {\n                        page.middlePanel.button.$text.innerText = gettext('CONTINUE');\n                        page.confirmedImage = data;\n                    }\n                });\n            }\n        },\n        keydown: function ( event ) {\n            if ( event.code === keys.up ) {\n                page.middlePanel.list.focus();\n                // restore taken focus class\n                page.middlePanel.list.$focusItem.classList.add('focus');\n                page.middlePanel.list.focusIndex(page.middlePanel.list.data.length - 1);\n            } else if ( event.code === keys.down ) {\n                page.middlePanel.list.focus();\n                // restore taken focus class\n                page.middlePanel.list.$focusItem.classList.add('focus');\n                page.middlePanel.list.focusIndex(0);\n            } else if ( event.code === keys.ok ) {\n                if ( page.middlePanel.button.events['click'] ) {\n                    page.middlePanel.button.emit('click', {event: event});\n                }\n            }\n        }\n    }\n}));\n\n\n// panel set: main\npage.panelSet = new PanelSet({\n    visible: true,\n    $node: document.getElementById('panelSetUrl'),\n    focusIndex: 0,\n    panels: [page.middlePanel]\n});\npage.add(page.panelSet);\n\n\npage.addListener('keydown', function ( event ) {\n    switch ( event.code ) {\n        case keys.back:\n            app.route(app.pages.main);\n            break;\n    }\n});\n\n\npage.addListener('show', function () {\n    page.confirmedImage = null;\n    page.middlePanel.button.$text.innerText = gettext('CHECK');\n    page.panelSet.show();\n    page.panelSet.focus();\n    // give focus to button\n    page.middlePanel.list.$focusItem.classList.remove('focus');\n    page.middlePanel.button.focus();\n});\n\n\n// public\nmodule.exports = page;\n"],"sourceRoot":""}