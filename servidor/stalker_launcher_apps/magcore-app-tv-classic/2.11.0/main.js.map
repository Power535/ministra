{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/stb-keys/index.js","webpack:///./node_modules/mag-app/index.js","webpack:///./node_modules/spa-app/lib/core.js","webpack:///./node_modules/stb-component/index.js","webpack:///./node_modules/mag-component-layout-list/index.js","webpack:///./node_modules/magcore-theme/icons.js","webpack:///./node_modules/spa-component/index.js","webpack:///./node_modules/mag-component-modal/index.js","webpack:///./node_modules/mag-component-list/index.js","webpack:///./node_modules/cjs-emitter/index.js","webpack:///./node_modules/stb-component-page/index.js","webpack:///./node_modules/spa-dom/index.js","webpack:///./node_modules/mag-component-footer/index.js","webpack:///./node_modules/stb-component-scrollbar/index.js","webpack:///./src/js/modules/tools.js","webpack:///./node_modules/spa-app/lib/events.js","webpack:///./node_modules/stb-app/lib/css.js","webpack:///./node_modules/mag-component-layout/index.js","webpack:///./src/js/modules/epg-page/metrics.js","webpack:///./node_modules/cjs-format/index.js","webpack:///./src/js/modules/events.js","webpack:///./src/js/main.js","webpack:///./node_modules/mag-app/lib/main.js","webpack:///./node_modules/cjs-query/index.js","webpack:///./src/js/config.js","webpack:///./node_modules/stb-shim-classlist/index.js","webpack:///./node_modules/stb-app/lib/metrics.js","webpack:///./src/js/metrics.js","webpack:///./node_modules/mag-app/lib/css.js","webpack:///./node_modules/spa-keys/index.js","webpack:///../helpers/longpress.js","webpack:////home/d3/Documents/Projects/web/portal/magcore/node_modules/cjs-polyfills/lib/array.find.index.js","webpack:///./node_modules/spa-gettext/index.js","webpack:///./node_modules/cjs-gettext/index.js","webpack:///./src/js/modules/epg-page/index.js","webpack:///./node_modules/spa-component-page/index.js","webpack:///./node_modules/stb-component-modal/index.js","webpack:///./node_modules/spa-component-modal/index.js","webpack:///./node_modules/mag-component-layout-list/node_modules/mag-component-layout/index.js","webpack:///./node_modules/spa-component-scrollbar/index.js","webpack:///./src/js/modules/epg-page/epg.grid.js","webpack:///./src/js/modules/ui.js","webpack:///./src/js/modules/floating.panel.js","webpack:///./src/js/pages/main.js","webpack:///./src/js/modules/list.js","webpack:///./node_modules/mag-component-radio-list/index.js","webpack:///./src/js/modules/app.exit.js","webpack:///./src/js/modules/list.icons.js","webpack:///./src/js/modules/channels.list.item.render.js","webpack:///./src/js/pages/details.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","keys","back","backspace","channelNext","tab","channelPrev","ok","enter","exit","escape","volumeUp","volumeDown","f1","f2","f3","f4","refresh","frame","phone","set","tv","menu","app","rewind","forward","audio","standby","keyboard","usbMounted","usbUnmounted","playPause","play","pause","stop","power","record","info","mute","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","Emitter","parse","query","document","location","search","substring","config","activePage","route","pageTo","data","page","pageFrom","active","id","$node","classList","remove","events","emit","add","showPage","this","from","to","List","Layout","LayoutList","self","handlers","links","$noData","propagate","undefined","fixedData","$body","createElement","className","appendChild","addListener","event","$item","layout","children","length","inner","focusIndex","focus","focusItem","index","constructor","renderItemDefault","layoutConfig","currentNode","currentData","ready","items","childNodes","innerText","firstChild","removeChild","focusable","parent","$parentItem","click","setData","init","$wrap","noData","innerHTML","Element","renderItem","RC_F1","RC_F2","RC_F3","RC_F4","PLAY","PAUSE","PREVIOUS","NEXT","REWIND","FORWARD","EXIT","CHANNEL_MINUS","CHANNEL_PLUS","VOLUME","MUTE","FAVORITE_ACTIVE","FAVORITE","TIMESHIFT","DISPLAY","SOUND","PIP","ASPECT","MENU","CATEGORIES","EQUALIZER","SORT_AZ","SEARCH","SETTINGS","LOCK","DVB_POWER_ON","CHECKBOX","CHECKBOX_ACTIVE","RC_OK","RC_INFO","RC_MENU","RC_PLAY_PAUSE","RADIO","RADIO_ACTIVE","RC_BACK","RC_HOME","RC_STOP","RC_PREVIOUS","RC_NEXT","RC_REWIND","RC_FORWARD","RC_SETTINGS","RC_VOLUME_UP","RC_VOLUME_DOWN","RC_MUTE","SUN","MOON","CLOUD_SUN","CLOUD_MOON","RAIN","HEAVY_RAIN","SNOW","CLOUD","CLOUD_SUN_2","RC_ASPECT","RC_POWER","RC_APP","RC_TV","EQUALIZER_0","EQUALIZER_1","EQUALIZER_2","EQUALIZER_3","EQUALIZER_4","STOP","UP","DOWN","WARNING","FILTER","CLOCK","OK","CANCEL","GENRES","TELETEXT","SUBTITLES","RC_VK","RC_REFRESH","SELECT_ALL","MOVE","EDIT","MORE","NOT_ALLOWED","TOGGLE","TOGGLE_ACTIVE","TELETEXT_RATIO","HOME","RESET","INTERNET","LAN","SCALE","VIRTUAL_MOUSE","REFRESH","NAVIGATE","DOWNLOAD","AVATAR","MONITOR","SUPPORT","SLIDESHOW","SHUFFLE","REPEAT","ROTATE","ROTATE_BACK","ZOOM_IN","COLOR","CLEAR","OPACITY","HDMI","DVB","NTP_SERVER","SCREENSAVER","INTERFACE","RC","CATEGORIES_ROTATE","STANDBY","LANGUAGES","BRIGHTNESS","BRIGHTNESS_STANDBY","CLOCK_ON_PLAYBACK","PORTAL","SCREENSAVER_INTERVAL","TIMEZONE","REBOOT","LINKED","WIFI","ETHERNET","MULTICAST","GLOBE","RELOAD","SAND_CLOCK","FONT_SIZE","BACK","SD_CARD","HDD","USB","NETWORK","UPNP","FILE","FOLDER","WORKGROUP","SERVER","SHARED_FOLDER","SHORTCUT","CREATE_FOLDER","BETA","UPDATE","ALARM_CLOCK","PLUS","AUDIO","IMAGE","VIDEO","TEXT","STREAM","RECORD","ISO","CUE","PLAYLIST","_date","counter","Component","visible","hide","defaultEvents","forEach","eventName","apply","addEventListener","stopPropagation","child","arguments","push","parentNode","item","activeComponent","blur","splice","indexOf","activeItem","show","callback","setTimeout","StbComponentModal","Modal","$overlay","onkeydown","keydown","code","$header","$text","title","icon","$icon","$focusItem","viewIndex","type","TYPE_VERTICAL","size","cycle","scroll","provider","TYPE_HORIZONTAL","mousewheel","wheelDeltaY","move","up","down","wheelDeltaX","left","right","pageUp","pageDown","home","end","idx","currSize","onClick","render","blocked","error","realSize","maxCount","viewSize","head","pos","normalize","blurItem","renderView","itemData","prevIndex","currIndex","mark","scrollTo","direction","force","previousSibling","lastChild","nextSibling","$prev","$curr","markItem","state","once","onceWrapper","removeListener","addListeners","callbacks","filter","fn","Array","slice","dom","tag","tagName","attrList","content","node","createTextNode","fragment","createDocumentFragment","tagDst","Node","nodes","count","clear","classes","Footer","currentTab","tabs","codes","$table","insertRow","rows","insertCell","$left","cells","$right","currTab","action","$tab","$tabChildren","addClick","ind","middle","disabled","style","visibility","onclick","lastChannelTimeout","notifyError","text","duration","core","notify","timeout","setChannelAsLast","channel","clearTimeout","setLast","sendOsdInputIntent","number","intent","startChar","done","result","sendSearchIntent","initialValue","window","gettext","description","sendRecordIntent","pvr","local_pvr","uri","url","server","local","isCensored","censored","genre","sendOsdTvIntent","attach","favorite","timeshift","local_timeshift","DOMContentLoaded","load","unload","eventLocal","keyCode","ctrlKey","altKey","shiftKey","keypress","link","rel","href","metrics","height","$wrapper","HTMLElement","wrap","componentClickHandler","textContent","480","epgGrid","scheduleWidth","timeStep","countOfSteps","timeLineMargin","itemHeight","timeLineTop","576","720","1080","screen","format","args","replace","match","PLAYER_SET_FULLSCREEN","PLAYER_SET_VIEWPORT","PLAYER_SEND_EXIT","CORE_EVENT_HIDE","CORE_EVENT_SHOW","CORE_EVENT_EXIT","CORE_EVENT_PLAY_CHANNEL","RIGHT_ARROW_CLICK","LEFT_ARROW_CLICK","require","environment","language","epgpage","apiProvider","plugins","tvBackend","tvBack","ui","pages","main","details","epg","addEpgListeners","getCoreInstance","platform","body","setAttribute","contextmenu","preventDefault","split","part","decodeURIComponent","stringify","params","encodeURIComponent","join","documentElement","DOMTokenList","el","_element","_classCache","token","contains","toString","toggle","screenHeight","availHeight","availTop","availBottom","availWidth","width","availLeft","availRight","canvasPosition","x","y","channelListSize","scheduleListSize","floatingPanelStep","floatingPanelStepPadding","linkCSS","theme","path","space","insert","del","longClick","timer","pressed","fired","LONG_CLICK_TIMEOUT","keyToChange","emitKeyCode","emitCode","emitKeydown","redefine","eventType","findIndex","Gettext","loader","prepare","_","pgettext","ngettext","defaultLanguage","xhr","ext","XMLHttpRequest","onload","JSON","responseText","onerror","ontimeout","open","send","meta","msgId","context","plural","evalResult","eval","footer","actionModal","actionList","headerLayout","contentLayout","ICONS","Page","ModalMessage","Scroll","EpgGrid","prepareChannels","schedule","$logo","list","logo","backgroundImage","backend","host","archive","listIndex","sendRecordEpgIntent","epgLastFocused","epgName","startTime","start","time","endTime","EpgPage","startCheck","stopCheck","click:item","epgItems","epgFocus","channelIndex","focus:item","label","realtime","goToRealTime","$timeBlock","$programDescription","$description","$programName","$current","$timeLine","$timeline","setChannels","updateEpg","ScrollBar","thumbRect","trackRect","$thumb","getBoundingClientRect","marginTop","marginLeft","curr","prev","fullMonthNames","fullDaysOfWeek","day","scheduleBlock","step","timers","internal","epgMode","epgFocusTime","moveEpg","pressOk","domLinks","$number","$title","$archiveIcon","$lockIcon","$archiveLine","fillItem","subPrev","subNext","onFocus","repositionTimeLine","focusEpg","focused","onFocusDebounceTimeout","onOverflow","checkingTime","clearInterval","$epgItem","before","accessControl","Math","floor","checkCurrent","check","Date","now","checkData","epgItem","ceil","display","setCurrentProgram","newTime","getTime","epgModeChange","getStartTime","initTimeBlock","setInterval","last","first","dayName","min","hour","month","ms","dateText","getDay","getMinutes","getHours","getMonth","getDate","setTime","delta","sec","date","childrenLength","dataLength","channelList","channels","request","abort","getChannelsEpg","styledTextColor","icons","$img","$pageMain","getElementById","$canvas","$censoredPlaceholder","$channelsListTitle","$channelsListCount","$currentEpgWrapper","$currentEpg","$currentEpgCensored","$channelListNoData","ctx","getContext","coords","$coloredDiv","$styleTag","$rightArrow","$leftArrow","normalizeLink","getComputedStyle","color","resolveImage","base64ImageString","drawImage","clearRect","toDataURL","device","canvasLoaded","styles","$element","rules","ruleIndex","ruleLength","sheets","styleSheets","styleLength","nodeName","toLowerCase","styleIndex","cssRules","selectorText","getElementStyles","src","preview","showPreview","showCensoredPlaceholder","hideCensoredPlaceholder","colors","SPECIAL_BACKGROUND","updateFloatingPanel","specialColor","hideFloatingPanel","floatingPanel","showFloatingPanel","updateChannelsListTitle","tvConfig","genresList","genreItem","updateChannelsListCount","updateCurrentChannelEpg","nowTime","map","toTimeString","tools","floatingPanelNumber","floatingPanelLogo","$titleWrap","floatingPanelTitleWrapper","$name","floatingPanelTitle","$epg","floatingPanelEpg","$favoriteIcon","floatingPanelFavorite","$timeShiftIcon","floatingPanelTS","floatingPanelLock","backgroundColor","iconsCount","top","currentEpg","hours","archive_range","osdTvIntent","playChannelTimeout","updateCurrentEpgInterval","updateListOfProgramsInterval","updateCurrentEpgTimeout","currentChannelIndex","ExtendedList","RadioList","pageMain","showExit","LIST_ICONS","CURRENT_EPG_UPDATE_DELAY","CHANNELS_UPDATE_NOTIFY_TIMEOUT","byName","genreName","focusPanel","dataBuffer","playAtAppStartFlag","currentIndex","osdInputCallback","showOsd","applicationState","Number","playChannel","unlocked","fullscreen","vp","sendIntent","solution","lastIntent","mime","silent","tvChannel","persistent","headless","viewport","mediaId","extra","retryOnError","stream","controls","pip","volumeCorrection","nextChannel","nextChannelHandler","prevChannel","prevChannelHandler","onInfoPress","close","onNumberPress","onPip","activeChannel","receiver","forceFullscreen","getUrl","togglePageView","goToEpgPage","goToDetailsPage","originalFocusedChannelId","getEpg","updateListOfPrograms","showModalActions","menuItems","currentChannel","view","modalActions","favoriteActive","$favorite","toggleFavorite","tvGuide","modalActionsList","showLeftMenu","leftMenu","getChannels","modalFilter","modalSort","leftMenuList","indexToFocus","updateChannelsList","focusId","concat","updateFooter","updateRenderOnProviderEvent","deleteChannelsHandler","addChannelsHandler","modifyChannelsHandler","fullUpdateChannelsHandler","sendPlayEpgIntent","epgObject","epgIndex","getLink","epgMeta","prevHandler","nextHandler","resource","next","channelListNode","channelListBody","select:item","loaded","String","fromCharCode","move:view","update","censoredState","channelsArray","epgMap","modalActionsScroll","$closeIcon","parentElement","getCategories","categories","getLastChannelId","doneHandler","startBackgroundCheck","epgPage","source","SOURCES","INTENT","reasonToggleView","reasonPip","SYSTEM","stopBackgroundCheck","destroy","indexToPlay","findAndPlay","processAndPlay","$floating","parseInt","classIcon","classIconActive","classChecked","checkedData","checkedIndex","previousCheckedData","checkIndex","defaultCheckedIndex","defaultFocusIndex","resetData","clearChecked","table","tr","td","checkBox","getItemNodeByIndex","exitModal","lastFocus","pageToAddModal","$leftWrap","$logoWrapper","channelPrograms","textContainer","recordModalItem","playModalItem","pageDetails","isModeList","dayListScroll","weekListScroll","formatData","timestamp","dArr","toDateString","Sun","Mon","Tue","Wed","Thu","Fri","Sat","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","previousActiveComponent","$headerLeft","$buttonArrowLeft","$textTitle","$textDescription","weekList","weekListNode","weekListBody","dayData","titleData","dayList","updateTitle","currentProgramIndex","dayListNode","dayListBody","$time","$iconNow","fontWeight","footerData","indexDay","indexWeek","dayItem","focusWeek","focusDay","channelName","regExp"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n","/**\n * Global list of non-printable control key codes.\n *\n * At the moment `keypress` and `keydown` events are emitted for the same keys (for both printable and non-printable characters).\n *\n * WARNING!!! All codes in this file (except 'volumeUp' and 'volumeDown')\n * are used in window 'keydown' handler to prevent wrong 'keypress' firings.\n * If you add new code to this file 'keypress' event with this code will never fire.\n *\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar keys = require('spa-keys');\n\n\n// extend with additional codes\nkeys.back         = keys.backspace;\nkeys.channelNext  = keys.tab;        // Tab\nkeys.channelPrev  = keys.tab + 's';  // Shift+Tab\nkeys.ok           = keys.enter;      // Enter\nkeys.exit         = keys.escape;     // Esc\nkeys.volumeUp     = 107;             // NUMPAD +\nkeys.volumeDown   = 109;             // NUMPAD -\nkeys.f1           = 112 + 'c';       // Ctrl+F1\nkeys.f2           = 113 + 'c';       // Ctrl+F2\nkeys.f3           = 114 + 'c';       // Ctrl+F3\nkeys.f4           = 115 + 'c';       // Ctrl+F4\nkeys.refresh      = 116 + 'c';       // Ctrl+F5\nkeys.frame        = 117 + 'c';       // Ctrl+F6\nkeys.phone        = 119 + 'c';       // Ctrl+F8\nkeys.set          = 120 + 'c';       // Ctrl+F9\nkeys.tv           = 121 + 'c';       // Ctrl+F10\nkeys.menu         = 122 + 'c';       // Ctrl+F11\nkeys.app          = 123 + 'c';       // Ctrl+F12\nkeys.rewind       = 66  + 'a';       // Alt+B\nkeys.forward      = 70  + 'a';       // Alt+F\nkeys.audio        = 71  + 'a';       // Alt+G\nkeys.standby      = 74  + 'a';       // Alt+J\nkeys.keyboard     = 76  + 'a';       // Alt+L\nkeys.usbMounted   = 80  + 'a';       // Alt+P\nkeys.usbUnmounted = 81  + 'a';       // Alt+Q\nkeys.playPause    = 82  + 'a';       // Alt+R\nkeys.play         = -1;              // should be redefined on some platforms\nkeys.pause        = -1;              // should be redefined on some platforms\nkeys.stop         = 83  + 'a';       // Alt+S\nkeys.power        = 85  + 'a';       // Alt+U\nkeys.record       = 87  + 'a';       // Alt+W\nkeys.info         = 89  + 'a';       // Alt+Y\nkeys.mute         = 192 + 'a';\nkeys.digit0       = 48;\nkeys.digit1       = 49;\nkeys.digit2       = 50;\nkeys.digit3       = 51;\nkeys.digit4       = 52;\nkeys.digit5       = 53;\nkeys.digit6       = 54;\nkeys.digit7       = 55;\nkeys.digit8       = 56;\nkeys.digit9       = 57;\n\n\n// public\nmodule.exports = keys;\n\n// public\n// module.exports = {\n//     getCode: function ( event ) {\n//         var code = event.keyCode;\n//\n//         // apply key modifiers\n//         if ( event.shiftKey ) { code += 1000; }\n//         if ( event.altKey )   { code += 2000; }\n//\n//         return code;\n//     },\n//\n//     codes: {\n//         back:         8,    // Backspace\n//         channelPrev:  1009, // Shift+Tab\n//         channelNext:  9,    // Tab\n//         ok:           13,   // Enter\n//         exit:         27,   // Esc\n//         pageUp:       33,\n//         pageDown:     34,\n//         end:          35,\n//         home:         36,\n//         left:         37,\n//         up:           38,\n//         right:        39,\n//         down:         40,\n//         'delete':     46,\n//         volumeUp:     107,  // NUMPAD +\n//         volumeDown:   109,  // NUMPAD -\n//         f1:           112,  // F1\n//         f2:           113,  // F2\n//         f3:           114,  // F3\n//         f4:           115,  // F4\n//         refresh:      116,  // F5\n//         frame:        117,  // F6\n//         phone:        119,  // F8\n//         set:          120,  // F9\n//         tv:           121,  // F10\n//         menu:         122,  // F11\n//         app:          123,  // F12\n//         rewind:       2066, // Alt+B\n//         forward:      2070, // Alt+F\n//         audio:        2071, // Alt+G\n//         standby:      2074, // Alt+J\n//         keyboard:     2076, // Alt+L\n//         usbMounted:   2080, // Alt+P\n//         usbUnmounted: 2081, // Alt+Q\n//         playPause:    2082, // Alt+R\n//         stop:         2083, // Alt+S\n//         power:        2085, // Alt+U\n//         record:       2087, // Alt+W\n//         info:         2089, // Alt+Y\n//         mute:         2192\n//     }\n// };\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar app = require('./lib/main');\n\n\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    parse   = require('cjs-query').parse,\n    app     = new Emitter();\n\n\n/**\n * Make the given inactive/hidden page active/visible.\n * Pass some data to the page and trigger the corresponding event.\n *\n * @param {Page} page item to show\n * @param {*} [data] data to send to page\n *\n * @return {boolean} operation status\n */\nfunction showPage ( page, data ) {\n    // page available and can be hidden\n    if ( page && !page.active ) {\n        // apply visibility\n        page.$node.classList.add('active');\n        page.active = true;\n        app.activePage = page;\n\n        debug.info('show component ' + page.name + '#' + page.id, null, {\n            tags: ['show', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' show', 'green');\n\n        // there are some listeners\n        if ( page.events['show'] ) {\n            // notify listeners\n            page.emit('show', {data: data});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n/**\n * Make the given active/visible page inactive/hidden and trigger the corresponding event.\n *\n * @param {Page} page item to hide\n *\n * @return {boolean} operation status\n */\nfunction hidePage ( page ) {\n    // page available and can be hidden\n    if ( page && page.active ) {\n        // apply visibility\n        page.$node.classList.remove('active');\n        page.active  = false;\n        app.activePage = null;\n\n        debug.info('hide component ' + page.name + '#' + page.id, null, {\n            tags: ['hide', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' hide', 'grey');\n\n        // there are some listeners\n        if ( page.events['hide'] ) {\n            // notify listeners\n            page.emit('hide');\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n// url request params\napp.query = parse(document.location.search.substring(1));\n\n\n// global application configuration\n// in config.js file in js root\napp.config = require('app:config');\n\n\n// the only visible page\napp.activePage = null;\n\n\n/**\n * Browse to a given page.\n * Do nothing if the link is invalid. Otherwise hide the current, show new and update the \"previous\" link.\n *\n * @param {Page} pageTo instance of the page to show\n * @param {*} [data] options to pass to the page on show\n *\n * @return {boolean} operation status\n */\napp.route = function ( pageTo, data ) {\n    var pageFrom = app.activePage;\n\n    if ( DEVELOP ) {\n        //if ( router.pages.length > 0 ) {\n        if ( !pageTo || typeof pageTo !== 'object' ) {\n            throw new Error(__filename + ': wrong pageTo type');\n        }\n        if ( !('active' in pageTo) ) {\n            throw new Error(__filename + ': missing field \"active\" in pageTo');\n        }\n        //}\n    }\n\n    // valid not already active page\n    if ( pageTo && !pageTo.active ) {\n        //debug.log('router.navigate: ' + pageTo.id, pageTo === pageFrom ? 'grey' : 'green');\n        debug.info('app route: ' + pageTo.name + '#' + pageTo.id, null, {tags: ['route', pageTo.name, pageTo.id]});\n\n        // update url\n        //location.hash = this.stringify(name, data);\n\n        // apply visibility\n        hidePage(app.activePage);\n        showPage(pageTo, data);\n\n        // there are some listeners\n        if ( this.events['route'] ) {\n            // notify listeners\n            this.emit('route', {from: pageFrom, to: pageTo});\n        }\n\n        // store\n        //this.history.push(pageTo);\n\n        return true;\n    }\n\n    //debug.warn('invalid page to route: ' + pageTo.id, null, {tags: ['route', 'page', pageTo.id]});\n    console.warn('invalid page to route: ' + pageTo.id);\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component');\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar List = require('mag-component-list'),\n    Layout = require('mag-component-layout');\n\n/**\n *  Layout list contains array of layout components\n *\n * @constructor\n * @extends List\n *\n * @param {Object} config object\n * @param {Element} [config.noData=''] element or string to display if set empty data\n *\n * @example\n * var LayoutList = require('mag-component-layout-list'),\n *     list = new LayoutList({\n *         propagate: true,\n *         size: 7,\n *         focusIndex: 0,\n *         noData: 'No channels'\n *         data: [\n *                 {\n *                     items: [\n *                         {\n *                             className: 'star',\n *                             name: '$text'\n *                         },\n *                         'Some text'\n *                     ],\n *                     click: function () {\n *                         // do something\n *                     },\n *                     name: 'starItem'\n *                 },\n *                 {\n *                     items: [\n *                         'Hello world',\n *                         {\n *                             value: 'hi',\n *                             className: 'status'\n *                         }\n *                     ],\n *                     value:{\n *                         uri: 'http://55.55.55.55/some'\n *                     },\n *                     click: someHandler\n *                 },\n *                 {\n *                     items: [\n *                         {\n *                             className: 'big',\n *                             value: ' Some'\n *                         },\n *                         {\n *                             value: new Input()\n *                         }\n *                     ]\n *                 },\n *                 {\n *                     items: [\n *                         new Button({value: 'Ok'}),\n *                         new Button({value: 'Cancel'}),\n *                         new Button({value: 'Exit'})\n *                     ]\n *                 }\n *             ]\n * });\n *\n * list.links.starItem.links.$text.innerText = 'new Text';\n *\n */\nfunction LayoutList ( config ) {\n    var self = this;\n\n    config = config || {};\n\n    /**\n     * Elements handlers\n     */\n    this.handlers = {};\n\n    /**\n     * Hash map of layouts links\n     */\n    this.links = {};\n\n    /**\n     * No data placeholder\n     *\n     * @type {Element}\n     */\n    this.$noData = null;\n\n    //config.className = 'layoutList ' + (config.className || '');\n\n    config.propagate = config.propagate === undefined ? true : config.propagate;\n\n    /**\n     * Set data layout to be fixed to cache HTML elements\n     *\n     * @type {boolean|*}\n     */\n    this.fixedData = config.fixedData || false;\n\n    //config.$body = document.createElement('div');\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    this.$noData = document.createElement('div');\n    this.$noData.className = 'noData hidden';\n\n    List.call(this, config);\n\n    this.$node.appendChild(this.$body);\n    this.$node.appendChild(this.$noData);\n\n    // add handler to focus inner layout\n    this.addListener('click:item', function ( event ) {\n        // focus inner layout of item\n        if ( event.$item.layout.children.length && !event.inner ) {\n            event.$item.layout.children[event.$item.layout.focusIndex].focus();\n        }\n\n        // only focus item if we click mouse\n        if ( event.inner ) {\n            self.focus();\n            self.focusItem(event.$item);\n        }\n        // do click callback if it present\n        if ( self.handlers[event.$item.index] ) {\n            self.handlers[event.$item.index](event.$item);\n        }\n    });\n}\n\n\nLayoutList.prototype = Object.create(List.prototype);\nLayoutList.prototype.constructor = LayoutList;\n\n// set component name\nLayoutList.prototype.name = 'mag-component-layout-list';\n\n\n/*eslint id-length:0*/\n/**\n * Default render function\n *\n * @param {Element} $item in list\n * @param {Object} config to render layout element\n */\nLayoutList.prototype.renderItemDefault = function ( $item, config ) {\n    var layout, layoutConfig,\n        currentNode,\n        currentData,\n        i;\n\n    if ( $item.ready && this.fixedData ) {\n        for ( i = 0; i < config.items.length; i++ ) {\n            currentData = config.items[i];\n            if ( typeof currentData.value === 'string' || currentData.value === undefined ) {\n                currentNode = $item.layout.$node.childNodes[i];\n                currentNode.innerText = currentData.value || '';\n                currentNode.className = currentData.className || '';\n            }\n        }\n    } else {\n        // clear inner content\n        while ( $item.firstChild ) {\n            $item.removeChild($item.firstChild);\n        }\n\n        layoutConfig = {\n            focusable: false,\n            data: config.items\n        };\n\n        if ( config.className ) {\n            layoutConfig.className = config.className;\n        }\n\n        layout = new Layout(layoutConfig);\n\n        if ( config.name ) {\n            this.links[config.name] = layout;\n        }\n\n        $item.appendChild(layout.$node);\n        $item.layout = layout;\n        layout.parent = this;\n        layout.$parentItem = $item;\n\n        // focus layoutList if click on layout\n        layout.addListener('click', function () {\n            // add inner property to set that event comes from inner component\n            layout.parent.emit('click:item', {$item: $item, inner: true});\n        });\n\n        if ( config.click ) {\n            this.handlers[$item.index] = config.click;\n        }\n        // item is rendered\n        $item.ready = true;\n    }\n    $item.value = config.value || {};\n};\n\n\nLayoutList.prototype.setData = function ( config ) {\n    this.links = {};\n    List.prototype.setData.call(this, config);\n\n    if ( config.data && config.data.length ) {\n        this.$noData.classList.add('hidden');\n    } else {\n        this.$noData.classList.remove('hidden');\n    }\n};\n\n\nLayoutList.prototype.init = function ( config ) {\n    var $wrap;\n\n    List.prototype.init.call(this, config);\n    if ( config.noData ) {\n        if ( DEVELOP ) {\n            if ( typeof config.noData !== 'string' && !(config.noData instanceof Element) ) {\n                throw new Error(__filename + ': wrong config.$noData type');\n            }\n        }\n\n        this.$noData.innerHTML = '';\n        if ( config.noData instanceof Element ) {\n            this.$noData.appendChild(config.noData);\n        } else if ( typeof config.noData === 'string' ) {\n            $wrap = document.createElement('div');\n            $wrap.innerText = config.noData;\n            this.$noData.appendChild($wrap);\n        }\n    }\n\n    if ( config.data && config.data.length ) {\n        this.$noData.classList.add('hidden');\n    } else {\n        this.$noData.classList.remove('hidden');\n    }\n};\n\nLayoutList.prototype.renderItem = LayoutList.prototype.renderItemDefault;\n\n\nmodule.exports = LayoutList;\n","module.exports = {\n    RC_F1: 'theme-icon theme-icon-rc-f1',\n    RC_F2: 'theme-icon theme-icon-rc-f2',\n    RC_F3: 'theme-icon theme-icon-rc-f3',\n    RC_F4: 'theme-icon theme-icon-rc-f4',\n    PLAY: 'theme-icon theme-icon-play',\n    PAUSE: 'theme-icon theme-icon-pause',\n    PREVIOUS: 'theme-icon theme-icon-previous',\n    NEXT: 'theme-icon theme-icon-next',\n    REWIND: 'theme-icon theme-icon-rewind',\n    FORWARD: 'theme-icon theme-icon-forward',\n    EXIT: 'theme-icon theme-icon-exit',\n    CHANNEL_MINUS: 'theme-icon theme-icon-channel-minus',\n    CHANNEL_PLUS: 'theme-icon theme-icon-channel-plus',\n    VOLUME: 'theme-icon theme-icon-volume',\n    MUTE: 'theme-icon theme-icon-mute',\n    FAVORITE_ACTIVE: 'theme-icon theme-icon-favorite-active',\n    FAVORITE: 'theme-icon theme-icon-favorite',\n    TIMESHIFT: 'theme-icon theme-icon-timeshift',\n    DISPLAY: 'theme-icon theme-icon-display',\n    SOUND: 'theme-icon theme-icon-sound',\n    PIP: 'theme-icon theme-icon-pip',\n    ASPECT: 'theme-icon theme-icon-aspect',\n    MENU: 'theme-icon theme-icon-menu',\n    CATEGORIES: 'theme-icon theme-icon-categories',\n    EQUALIZER: 'theme-icon theme-icon-equalizer',\n    SORT_AZ: 'theme-icon theme-icon-sort-az',\n    SEARCH: 'theme-icon theme-icon-search',\n    SETTINGS: 'theme-icon theme-icon-settings',\n    LOCK: 'theme-icon theme-icon-lock',\n    DVB_POWER_ON: 'theme-icon theme-icon-dvb-power-on',\n    CHECKBOX: 'theme-icon theme-icon-checkbox',\n    CHECKBOX_ACTIVE: 'theme-icon theme-icon-checkbox-active',\n    RC_OK: 'theme-icon theme-icon-rc-ok',\n    RC_INFO: 'theme-icon theme-icon-rc-info',\n    RC_MENU: 'theme-icon theme-icon-rc-menu',\n    RC_PLAY_PAUSE: 'theme-icon theme-icon-rc-play-pause',\n    RADIO: 'theme-icon theme-icon-radio',\n    RADIO_ACTIVE: 'theme-icon theme-icon-radio-active',\n    RC_BACK: 'theme-icon theme-icon-rc-back',\n    RC_HOME: 'theme-icon theme-icon-rc-home',\n    RC_STOP: 'theme-icon theme-icon-rc-stop',\n    RC_PREVIOUS: 'theme-icon theme-icon-rc-previous',\n    RC_NEXT: 'theme-icon theme-icon-rc-next',\n    RC_REWIND: 'theme-icon theme-icon-rc-rewind',\n    RC_FORWARD: 'theme-icon theme-icon-rc-forward',\n    RC_SETTINGS: 'theme-icon theme-icon-rc-settings',\n    RC_VOLUME_UP: 'theme-icon theme-icon-rc-volume-up',\n    RC_VOLUME_DOWN: 'theme-icon theme-icon-rc-volume-down',\n    RC_MUTE: 'theme-icon theme-icon-rc-mute',\n    SUN: 'theme-icon theme-icon-sun',\n    MOON: 'theme-icon theme-icon-moon',\n    CLOUD_SUN: 'theme-icon theme-icon-cloud-sun',\n    CLOUD_MOON: 'theme-icon theme-icon-cloud-moon',\n    RAIN: 'theme-icon theme-icon-rain',\n    HEAVY_RAIN: 'theme-icon theme-icon-heavy-rain',\n    SNOW: 'theme-icon theme-icon-snow',\n    CLOUD: 'theme-icon theme-icon-cloud',\n    CLOUD_SUN_2: 'theme-icon theme-icon-cloud-sun-2',\n    RC_ASPECT: 'theme-icon theme-icon-rc-aspect',\n    RC_POWER: 'theme-icon theme-icon-rc-power',\n    RC_APP: 'theme-icon theme-icon-rc-app',\n    RC_TV: 'theme-icon theme-icon-rc-tv',\n    EQUALIZER_0: 'theme-icon theme-icon-equalizer-0',\n    EQUALIZER_1: 'theme-icon theme-icon-equalizer-1',\n    EQUALIZER_2: 'theme-icon theme-icon-equalizer-2',\n    EQUALIZER_3: 'theme-icon theme-icon-equalizer-3',\n    EQUALIZER_4: 'theme-icon theme-icon-equalizer-4',\n    STOP: 'theme-icon theme-icon-stop',\n    UP: 'theme-icon theme-icon-up',\n    DOWN: 'theme-icon theme-icon-down',\n    WARNING: 'theme-icon theme-icon-warning',\n    FILTER: 'theme-icon theme-icon-filter',\n    CLOCK: 'theme-icon theme-icon-clock',\n    OK: 'theme-icon theme-icon-ok',\n    CANCEL: 'theme-icon theme-icon-cancel',\n    GENRES: 'theme-icon theme-icon-genres',\n    TELETEXT: 'theme-icon theme-icon-teletext',\n    SUBTITLES: 'theme-icon theme-icon-subtitles',\n    RC_VK: 'theme-icon theme-icon-rc-vk',\n    RC_REFRESH: 'theme-icon theme-icon-rc-refresh',\n    SELECT_ALL: 'theme-icon theme-icon-select-all',\n    MOVE: 'theme-icon theme-icon-move',\n    EDIT: 'theme-icon theme-icon-edit',\n    MORE: 'theme-icon theme-icon-more',\n    NOT_ALLOWED: 'theme-icon theme-icon-not-allowed',\n    TOGGLE: 'theme-icon theme-icon-toggle',\n    TOGGLE_ACTIVE: 'theme-icon theme-icon-toggle-active',\n    TELETEXT_RATIO: 'theme-icon theme-icon-teletext-ratio',\n    HOME: 'theme-icon theme-icon-home',\n    RESET: 'theme-icon theme-icon-reset',\n    INTERNET: 'theme-icon theme-icon-internet',\n    LAN: 'theme-icon theme-icon-lan',\n    SCALE: 'theme-icon theme-icon-scale',\n    VIRTUAL_MOUSE: 'theme-icon theme-icon-virtual-mouse',\n    REFRESH: 'theme-icon theme-icon-refresh',\n    NAVIGATE: 'theme-icon theme-icon-navigate',\n    DOWNLOAD: 'theme-icon theme-icon-download',\n    AVATAR: 'theme-icon theme-icon-avatar',\n    MONITOR: 'theme-icon theme-icon-monitor',\n    SUPPORT: 'theme-icon theme-icon-support',\n    SLIDESHOW: 'theme-icon theme-icon-slideshow',\n    SHUFFLE: 'theme-icon theme-icon-shuffle',\n    REPEAT: 'theme-icon theme-icon-repeat',\n    ROTATE: 'theme-icon theme-icon-rotate',\n    ROTATE_BACK: 'theme-icon theme-icon-rotate-back',\n    ZOOM_IN: 'theme-icon theme-icon-zoom-in',\n    COLOR: 'theme-icon theme-icon-color',\n    CLEAR: 'theme-icon theme-icon-clear',\n    OPACITY: 'theme-icon theme-icon-opacity',\n    HDMI: 'theme-icon theme-icon-hdmi',\n    DVB: 'theme-icon theme-icon-DVB',\n    NTP_SERVER: 'theme-icon theme-icon-ntp-server',\n    SCREENSAVER: 'theme-icon theme-icon-screensaver',\n    INTERFACE: 'theme-icon theme-icon-interface',\n    RC: 'theme-icon theme-icon-rc',\n    CATEGORIES_ROTATE: 'theme-icon theme-icon-categories-rotate',\n    STANDBY: 'theme-icon theme-icon-standby',\n    LANGUAGES: 'theme-icon theme-icon-languages',\n    BRIGHTNESS: 'theme-icon theme-icon-brightness',\n    BRIGHTNESS_STANDBY: 'theme-icon theme-icon-brightness-standby',\n    CLOCK_ON_PLAYBACK: 'theme-icon theme-icon-clock-on-playback',\n    PORTAL: 'theme-icon theme-icon-portal',\n    SCREENSAVER_INTERVAL: 'theme-icon theme-icon-screensaver-interval',\n    TIMEZONE: 'theme-icon theme-icon-timezone',\n    REBOOT: 'theme-icon theme-icon-reboot',\n    LINKED: 'theme-icon theme-icon-linked',\n    WIFI: 'theme-icon theme-icon-wifi',\n    ETHERNET: 'theme-icon theme-icon-ethernet',\n    MULTICAST: 'theme-icon theme-icon-multicast',\n    GLOBE: 'theme-icon theme-icon-globe',\n    RELOAD: 'theme-icon theme-icon-reload',\n    SAND_CLOCK: 'theme-icon theme-icon-sand-clock',\n    FONT_SIZE: 'theme-icon theme-icon-font-size',\n    BACK: 'theme-icon theme-icon-back',\n    SD_CARD: 'theme-icon theme-icon-sd-card',\n    HDD: 'theme-icon theme-icon-hdd',\n    USB: 'theme-icon theme-icon-usb',\n    NETWORK: 'theme-icon theme-icon-network',\n    UPNP: 'theme-icon theme-icon-upnp',\n    FILE: 'theme-icon theme-icon-file',\n    FOLDER: 'theme-icon theme-icon-folder',\n    WORKGROUP: 'theme-icon theme-icon-workgroup',\n    SERVER: 'theme-icon theme-icon-server',\n    SHARED_FOLDER: 'theme-icon theme-icon-shared-folder',\n    SHORTCUT: 'theme-icon theme-icon-shortcut',\n    CREATE_FOLDER: 'theme-icon theme-icon-create-folder',\n    BETA: 'theme-icon theme-icon-beta',\n    UPDATE: 'theme-icon theme-icon-update',\n    ALARM_CLOCK: 'theme-icon theme-icon-alarm-clock',\n    PLUS: 'theme-icon theme-icon-plus',\n    AUDIO: 'theme-icon theme-icon-audio',\n    IMAGE: 'theme-icon theme-icon-image',\n    VIDEO: 'theme-icon theme-icon-video',\n    TEXT: 'theme-icon theme-icon-text',\n    STREAM: 'theme-icon theme-icon-stream',\n    RECORD: 'theme-icon theme-icon-record',\n    ISO: 'theme-icon theme-icon-iso',\n    CUE: 'theme-icon theme-icon-cue',\n    PLAYLIST: 'theme-icon theme-icon-playlist',\n    _date:1510737340160\n};","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    Emitter = require('cjs-emitter'),\n    counter = 0;\n\n\n/**\n * Base component implementation.\n *\n * Visual element that can handle sub-components.\n * Each component has a DOM element container $node with a set of classes:\n * \"component\" and some specific component class names depending on the hierarchy, for example \"page\".\n * Each component has a unique ID given either from $node.id or from data.id. If not given will generate automatically.\n *\n * @constructor\n * @extends Emitter\n *\n * @param {Object} [config={}] init parameters\n * @param {Element} [config.id] component unique identifier (generated if not set)\n * @param {string} [config.className] space-separated list of classes for \"className\" property of this.$node\n * @param {Element} [config.$node] DOM element/fragment to be a component outer container\n * @param {Element} [config.$body] DOM element/fragment to be a component inner container (by default is the same as $node)\n * @param {Component} [config.parent] link to the parent component which has this component as a child\n * @param {Array.<Component>} [config.children=[]] list of components in this component\n * @param {Object.<string, function>} [config.events={}] list of event callbacks\n * @param {boolean} [config.visible=true] component initial visibility state flag\n * @param {boolean} [config.focusable=true] component can accept focus or not\n * @param {boolean} [config.propagate=false] allow to emit events to the parent component\n *\n * @fires module:stb/component~Component#click\n *\n * @example\n * var component = new Component({\n *     $node: document.getElementById(id),\n *     className: 'bootstrap responsive',\n *     events: {\n *         click: function () { ... }\n *     }\n * });\n * component.add( ... );\n * component.focus();\n */\nfunction Component ( config ) {\n    // current execution context\n    var self = this,\n        name;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.id && typeof config.id !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.id');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$node && !(config.$node instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$node type');\n        }\n        if ( config.$body && !(config.$body instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$body type');\n        }\n        if ( config.parent && !(config.parent instanceof Component) ) {\n            throw new Error(__filename + ': wrong config.parent type');\n        }\n        if ( config.children && !Array.isArray(config.children) ) {\n            throw new Error(__filename + ': wrong config.children type');\n        }\n    }\n\n    /**\n     * Component visibility state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.visible = true;\n\n    /**\n     * Component can accept focus or not.\n     *\n     * @type {boolean}\n     */\n    this.focusable = true;\n\n    /**\n     * DOM outer handle.\n     *\n     * @type {Element}\n     */\n    this.$node = null;\n\n    /**\n     * DOM inner handle.\n     * In simple cases is the same as $node.\n     *\n     * @type {Element}\n     */\n    this.$body = null;\n\n    /**\n     * Link to the parent component which has this component as a child.\n     *\n     * @type {Component}\n     */\n    this.parent = null;\n\n    /**\n     * List of all children components.\n     *\n     * @type {Component[]}\n     */\n    this.children = [];\n\n    /**\n     * allow to emit events to the parent component\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.propagate = !!config.propagate;\n\n    // parent constructor call\n    Emitter.call(this);\n\n    // outer handle - empty div in case nothing is given\n    this.$node = config.$node || document.createElement('div');\n\n    // inner handle - the same as outer handler in case nothing is given\n    this.$body = config.$body || this.$node;\n\n    // set CSS class names\n    //this.$node.className += ' component ' + (config.className || '');\n    // previous approach is not good as it mess with components hierarchy\n    this.$node.className = this.name + ' ' + (config.className || '');\n\n    // apply component id if given, generate otherwise\n    this.id = config.id || this.$node.id || 'cid' + counter++;\n\n    // apply hierarchy\n    if ( config.parent ) {\n        // add to parent component\n        config.parent.add(this);\n    }\n\n    // apply given visibility\n    if ( config.visible === false ) {\n        // default state is visible\n        this.hide();\n    }\n\n    // apply focus handling method\n    if ( config.focusable === false ) {\n        // can't accept focus\n        this.focusable = false;\n    }\n\n    // a descendant defined own events\n    if ( this.defaultEvents ) {\n        // sanitize\n        config.events = config.events || {};\n\n        if ( DEVELOP ) {\n            if ( typeof config.events !== 'object' ) {\n                throw new Error(__filename + ': wrong config.events type');\n            }\n            if ( typeof this.defaultEvents !== 'object' ) {\n                throw new Error(__filename + ': wrong this.defaultEvents type');\n            }\n        }\n\n        for ( name in this.defaultEvents ) {\n            // overwrite default events with user-defined\n            config.events[name] = config.events[name] || this.defaultEvents[name];\n        }\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( eventName ) {\n            self.addListener(eventName, config.events[eventName]);\n        });\n    }\n\n    // apply the given children components\n    if ( config.children ) {\n        // apply\n        this.add.apply(this, config.children);\n    }\n\n    // component activation by mouse\n    this.$node.addEventListener('click', function ( event ) {\n        // left mouse button\n        //if ( event.button === 0 ) {\n        // activate if possible\n        self.focus();\n\n        // there are some listeners\n        if ( self.events['click'] ) {\n            /**\n             * Mouse click event.\n             *\n             * @event module:stb/component~Component#click\n             *\n             * @type {Object}\n             * @property {Event} event click event data\n             */\n            self.emit('click', event);\n        }\n        //}\n\n        if ( DEVELOP ) {\n            // middle mouse button\n            if ( event.button === 1 ) {\n                //debug.inspect(self, 0);\n                debug.info('\"window.link\" or \"' + self.id + '.component\"', 'this component is now available in global scope');\n                window.link = self;\n                self.$node.classList.toggle('wired');\n            }\n        }\n\n        event.stopPropagation();\n    });\n\n    if ( DEVELOP ) {\n        // expose inner ID to global scope\n        window[self.id] = self.$node;\n\n        // expose a link\n        this.$node.component = this.$body.component = this;\n        this.$node.title = this.name + '#' + this.id + ' (outer)';\n        this.$body.title = this.name + '#' + this.id + ' (inner)';\n    }\n\n    debug.info('create component ' + this.name + '#' + this.id, null, {\n        tags: ['create', 'component', this.name, this.id]\n    });\n}\n\n\n// inheritance\nComponent.prototype = Object.create(Emitter.prototype);\nComponent.prototype.constructor = Component;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nComponent.prototype.defaultEvents = null;\n\n\n/**\n * Add a new component as a child.\n *\n * @param {...Component} [child] variable number of elements to append\n *\n * @files Component#add\n *\n * @example\n * panel.add(\n *     new Button( ... ),\n *     new Button( ... )\n * );\n */\nComponent.prototype.add = function ( child ) {\n    var index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        child = arguments[index];\n\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        // apply\n        this.children.push(child);\n        child.parent = this;\n\n        // correct DOM parent/child connection if necessary\n        if ( child.$node && child.$node.parentNode === null ) {\n            this.$body.appendChild(child.$node);\n        }\n\n        debug.info('add component ' + child.name + '#' + child.id + ' to ' + this.name + '#' + this.id, null, {\n            tags: ['add', 'component', this.name, this.id, child.name, child.id]\n        });\n\n        // there are some listeners\n        if ( this.events['add'] ) {\n            /**\n             * A child component is added.\n             *\n             * @event module:stb/component~Component#add\n             *\n             * @type {Object}\n             * @property {Component} item new component added\n             */\n            this.emit('add', {item: child});\n        }\n\n        //debug.log('component ' + this.name + '#' + this.id + ' new child: ' + child.name + '#' + child.id);\n    }\n};\n\n\n/* @todo: consider activation in future */\n///**\n// * Insert component into the specific position.\n// *\n// * @param {Component} child component instance to insert\n// * @param {number} index insertion position\n// */\n//Component.prototype.insert = function ( child, index ) {\n//    var prevIndex = this.children.indexOf(child);\n//\n//    if ( DEVELOP ) {\n//        if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n//        if ( !(child instanceof Component) ) { throw new Error(__filename + ': wrong child type'); }\n//    }\n//\n//    if ( prevIndex !== -1 ) {\n//        this.children.splice(prevIndex, 1);\n//        this.$body.removeChild(child.$node);\n//    }\n//\n//    if ( index === this.children.length ) {\n//        this.$body.appendChild(child.$node);\n//    } else {\n//        this.$body.insertBefore(child.$node, this.$body.children[index]);\n//    }\n//    this.children.splice(index, 0, child);\n//\n//    if ( !child.parent ) {\n//        child.parent = this;\n//    }\n//};\n\n\n/**\n * Delete this component and clear all associated events.\n *\n * @fires module:stb/component~Component#remove\n */\nComponent.prototype.remove = function () {\n    // really inserted somewhere\n    if ( this.parent ) {\n        if ( DEVELOP ) {\n            if ( !(this.parent instanceof Component) ) {\n                throw new Error(__filename + ': wrong this.parent type');\n            }\n        }\n\n        // active at the moment\n        if ( app.activePage.activeComponent === this ) {\n            this.blur();\n            this.parent.focus();\n        }\n        this.parent.children.splice(this.parent.children.indexOf(this), 1);\n    }\n\n    // remove all children\n    this.children.forEach(function ( child ) {\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        child.remove();\n    });\n\n    this.$node.parentNode.removeChild(this.$node);\n\n    // there are some listeners\n    if ( this.events['remove'] ) {\n        /**\n         * Delete this component.\n         *\n         * @event module:stb/component~Component#remove\n         */\n        this.emit('remove');\n    }\n\n    // remove all listeners\n    this.events = {};\n\n    //debug.log('component ' + this.name + '#' + this.id + ' remove', 'red');\n    debug.info('remove component ' + this.name + '#' + this.id, null, {\n        tags: ['remove', 'component', this.name, this.id]\n    });\n};\n\n\n/**\n * Activate the component.\n * Notify the owner-page and apply CSS class.\n *\n * @param {Object} [data] custom data which passed into handlers\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#focus\n */\nComponent.prototype.focus = function ( data ) {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // this is a visual component on a page\n    // not already focused and can accept focus\n    if ( this.focusable && this !== activeItem ) {\n        // notify the current active component\n        if ( activeItem ) { activeItem.blur(); }\n\n        /* eslint consistent-this: 0 */\n\n        // apply\n        activePage.activeComponent = activeItem = this;\n        activeItem.$node.classList.add('focus');\n\n        //debug.log('component ' + this.name + '#' + this.id + ' focus');\n        debug.info('focus component ' + this.name + '#' + this.id, null, {\n            tags: ['focus', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( activeItem.events['focus'] ) {\n            /**\n             * Make this component focused.\n             *\n             * @event module:stb/component~Component#focus\n             */\n            activeItem.emit('focus', data);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Remove focus.\n * Change page.activeComponent and notify subscribers.\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#blur\n */\nComponent.prototype.blur = function () {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // apply visuals anyway\n    this.$node.classList.remove('focus');\n\n    // this is the active component\n    if ( this === activeItem ) {\n        activePage.activeComponent = null;\n\n        //debug.log('component ' + this.name + '#' + this.id + ' blur', 'grey');\n        debug.info('blur component ' + this.name + '#' + this.id, null, {\n            tags: ['blur', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['blur'] ) {\n            /**\n             * Remove focus from this component.\n             *\n             * @event module:stb/component~Component#blur\n             */\n            this.emit('blur');\n        }\n\n        return true;\n    }\n\n    debug.warn('component ' + this.name + '#' + this.id + ' attempt to blur without link to a page', null, {\n        tags: ['blur', 'component', this.name, this.id]\n    });\n\n    // nothing was done\n    return false;\n};\n\n\n/*function show ( self, data ) {\n    // correct style\n    self.$node.classList.remove('hidden');\n    // flag\n    self.visible = true;\n\n    debug.info('show component ' + self.name + '#' + self.id, null, {\n        tags: ['show', 'component', self.name, self.id]\n    });\n\n    // there are some listeners\n    if ( self.events['show'] ) {\n        /!**\n         * Make the component visible.\n         *\n         * @event module:stb/component~Component#show\n         *!/\n        self.emit('show', data);\n    }\n}*/\n\n/**\n * Make the component visible and notify subscribers.\n *\n * @param {Object} [data] custom data which passed into handlers\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#show\n */\nComponent.prototype.show = function ( data, callback ) {\n    //var self = this;\n\n    // is it hidden\n    if ( !this.visible ) {\n        /*if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(function () {\n                show(self, data);\n                callback();\n            });\n        } else {\n            // sync call\n            show(this, data);\n        }*/\n\n        // correct style\n        this.$node.classList.remove('hidden');\n        // flag\n        this.visible = true;\n\n        debug.info('show component ' + this.name + '#' + this.id, null, {\n            tags: ['show', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['show'] ) {\n            /**\n             * Make the component visible.\n             *\n             * @event module:stb/component~Component#show\n             */\n            this.emit('show', data);\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Make the component hidden and notify subscribers.\n *\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#hide\n */\nComponent.prototype.hide = function ( callback ) {\n    // is it visible\n    if ( this.visible ) {\n        // correct style\n        this.$node.classList.add('hidden');\n        // flag\n        this.visible = false;\n\n        debug.info('hide component ' + this.name + '#' + this.id, null, {\n            tags: ['hide', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['hide'] ) {\n            /**\n             * Make the component hidden.\n             *\n             * @event module:stb/component~Component#hide\n             */\n            this.emit('hide');\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = Component;\n","/**\n * @license The MIT License (MIT)\n * @copyright Dmitry Fedotov <bas.jsdev@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\nvar StbComponentModal = require('stb-component-modal'),\n    Component         = require('stb-component'),\n    keys              = require('stb-keys');\n\n\n/**\n * Modal window implementation.\n *\n * @constructor\n * @extends StbComponentModal\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {Object} [config.title] message title\n * @param {Object} [config.className] message classname\n * @param {Object} [config.icon] icon at header\n * @param {Object} [config.visible] visibility flag\n * @param {Object} [config.children] content (inherited from the parent)\n *\n * @example\n * var modalSort = new Modal({\n *     visible: false,\n *     title: 'sort',\n *     events: {\n *         show: function () {\n *             list.focus();\n *         },\n *         hide: function () {\n *             page.panelSet.focus();\n *         }\n *     },\n *     children: [list = new RadioList({})]\n * });\n * page.add(modalSort);\n */\nfunction Modal ( config ) {\n    var self = this,\n        $overlay, $body, onkeydown;\n\n    // sanitize\n    config = config || {};\n    config.events = config.events || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.icon && typeof config.icon !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.icon');\n        }\n        if ( config.title && typeof config.title !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.title');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body ) {\n            throw new Error(__filename + ': config.$body should not be provided in Modal manually');\n        }\n    }\n\n    // usually can't accept focus\n    config.focusable = config.focusable || false;\n    // hide by default\n    config.visible = config.visible || false;\n    // add default close by click\n    config.events.click = config.events.click || function () { self.hide(); };\n    // add close window behavior, when pushed a back button or a menu button\n    onkeydown = config.events.keydown;\n    config.events.keydown = function ( event ) {\n        if ( onkeydown ) {\n            onkeydown.call(this, event);\n        }\n        if ( event.code === keys.back || event.code === keys.menu ) {\n            event.stop = true;\n            self.hide();\n        }\n    };\n\n    // parent constructor call\n    StbComponentModal.call(this, config);\n\n    // add table-cell wrappers\n    this.$node.appendChild(document.createElement('div'));\n    this.$node.firstChild.classList.add('alignBox');\n    this.$node.firstChild.appendChild(document.createElement('div'));\n\n    // add header div\n    this.$header = document.createElement('div');\n    this.$header.className = 'header';\n\n    // insert caption placeholder\n    this.$text = this.$header.appendChild(document.createElement('div'));\n    this.$text.classList.add('text');\n    this.$text.innerText = config.title || '';\n\n    // optional icon\n    if ( config.icon ) {\n        this.$icon = this.$header.appendChild(document.createElement('div'));\n        this.$icon.className = 'icon ' + config.icon;\n    }\n\n    $overlay = document.createElement('div');\n    $overlay.className = 'overlay';\n\n    // add to dom\n    // add body wrapper\n    $body = this.$body.parentNode.removeChild(this.$body);\n    this.$node.firstChild.firstChild.appendChild(this.$header);\n    this.$node.firstChild.firstChild.appendChild($body);\n    this.$node.firstChild.firstChild.appendChild($overlay);\n}\n\n\n// inheritance\nModal.prototype = Object.create(StbComponentModal.prototype);\nModal.prototype.constructor = Modal;\n\n// set component name\nModal.prototype.name = 'mag-component-modal';\n\n\n/**\n * Redefine default component focus to set additional css\n */\nModal.prototype.focus = function () {\n    this.$node.classList.add('active');\n    StbComponentModal.prototype.focus.call(this);\n    if ( this.children[0] && this.children[0] instanceof Component ) {\n        this.children[0].focus();\n    }\n};\n\n\n/**\n * Blur message\n */\nModal.prototype.blur = function () {\n    this.$node.classList.remove('active');\n    StbComponentModal.prototype.blur.call(this);\n};\n\n\n// public\nmodule.exports = Modal;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n/* eslint complexity: [error, 37] */\n/* eslint max-lines-per-function: 1 */\n/* eslint no-fallthrough: 1 */\n/* eslint complexity: 1 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n\n/**\n * Mouse click event.\n *\n * @event module:stb/ui/list~List#click:item\n *\n * @type {Object}\n * @property {Element} $item clicked HTML item\n * @property {Event} event click event data\n */\n\n\n/**\n * Base list implementation.\n *\n * Each data item can be either a primitive value or an object with these fields:\n *\n *  Name    | Description\n * ---------|-------------\n *  value   | actual cell value to render\n *  mark    | is it necessary or not to render this cell as marked\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array}    [config.data=[]]     component data to visualize\n * @param {function} [config.render]      method to build each grid cell content\n * @param {function} [config.navigate]    method to move focus according to pressed keys\n * @param {number}   [config.size=5]      amount of visible items on a page\n * @param {number}   [config.viewIndex=0] move view window to this position on init\n * @param {number}   [config.focusIndex]  list item index to make item focused (move view window to this position)\n * @param {boolean}  [config.cycle=true]  allow or not to jump to the opposite side of a list when there is nowhere to go next\n * @param {boolean}  [config.scroll=null] associated ScrollBar component link\n * @param {Object}   [config.provider]    data provider\n *\n * @fires module:stb/ui/list~List#click:item\n */\nfunction List ( config ) {\n    // current execution context\n    //var self = this;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Link to the currently focused DOM element.\n     *\n     * @type {Element}\n     */\n    this.$focusItem = null;\n\n    /**\n     * Position of the visible window to render.\n     *\n     * @type {number}\n     */\n    this.viewIndex = null;\n\n    /**\n     * Component data to visualize.\n     *\n     * @type {Array}\n     */\n    this.data = [];\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Amount of visible items on a page.\n     *\n     * @type {number}\n     */\n    this.size = 5;\n\n    /**\n     * Allow or not to jump to the opposite side of a list when there is nowhere to go next.\n     *\n     * @type {boolean}\n     */\n    this.cycle = false;\n\n    /**\n     * Associated ScrollBar component link.\n     *\n     * @type {ScrollBar}\n     */\n    this.scroll = null;\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    /**\n     * Associated data provider\n     *\n     * @type {Provider}\n     */\n    this.provider = null;\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    //config.className += ' theme-main';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // component setup\n    this.init(config);\n\n    // custom navigation method\n    //if ( config.navigate ) {\n    //    if ( DEVELOP ) {\n    //        if ( typeof config.navigate !== 'function' ) { throw new Error(__filename + ': wrong config.navigate type'); }\n    //    }\n    //    // apply\n    //    this.navigate = config.navigate;\n    //}\n\n    // navigation by keyboard\n    //this.addListener('keydown', this.navigate);\n\n    // navigation by mouse\n    //this.$body.addEventListener('mousewheel', function ( event ) {\n    //    // scrolling by Y axis\n    //    if ( self.type === self.TYPE_VERTICAL && event.wheelDeltaY ) {\n    //        self.move(event.wheelDeltaY > 0 ? 38 : keys.down);\n    //    }\n    //\n    //    // scrolling by X axis\n    //    if ( self.type === self.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n    //        self.move(event.wheelDeltaX > 0 ? 37 : 39);\n    //    }\n    //});\n}\n\n\n// inheritance\nList.prototype = Object.create(Component.prototype);\nList.prototype.constructor = List;\n\n// set component name\nList.prototype.name = 'mag-component-list';\n\nList.prototype.TYPE_VERTICAL   = 1;\nList.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Fill the given item with data.\n *\n * @param {Element} $item item DOM link\n * @param {*} data associated with this item data\n */\nList.prototype.renderItemDefault = function ( $item, data ) {\n    $item.innerText = data.value;\n};\n\n\n/**\n * Method to build each list item content.\n * Can be redefined to provide custom rendering.\n *\n * @type {function}\n */\nList.prototype.renderItem = List.prototype.renderItemDefault;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nList.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse wheel events.\n     *\n     * @param {Event} event generated event\n     */\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        if ( this.type === this.TYPE_VERTICAL && event.wheelDeltaY ) {\n            this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n        }\n\n        // scrolling by X axis\n        if ( this.type === this.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n            this.move(event.wheelDeltaX > 0 ? keys.left : keys.right);\n        }\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n            case keys.right:\n            case keys.left:\n            case keys.pageUp:\n            case keys.pageDown:\n            case keys.home:\n            case keys.end:\n                // cursor move only on arrow keys\n                this.move(event.code);\n                break;\n            case keys.enter:\n                // there are some listeners\n                if ( this.events['click:item'] && this.$focusItem ) {\n                    // notify listeners\n                    this.emit('click:item', {$item: this.$focusItem, event: event});\n                }\n                break;\n        }\n    }\n};\n\n\n/**\n * Default method to move focus according to pressed keys.\n *\n * @param {Object} event generated event source of movement\n */\n//List.prototype.navigateDefault = function ( event ) {\n//    switch ( event.code ) {\n//        case 38:\n//        case 40:\n//        case 39:\n//        case 37:\n//        case 33:\n//        case 34:\n//        case 36:\n//        case 35:\n//            // cursor move only on arrow keys\n//            this.move(event.code);\n//            break;\n//        case 13:\n//            // there are some listeners\n//            if ( this.events['click:item'] ) {\n//                // notify listeners\n//                this.emit('click:item', {$item: this.$focusItem, event: event});\n//            }\n//            break;\n//    }\n//};\n\n\n/**\n * Current active method to move focus according to pressed keys.\n * Can be redefined to provide custom navigation.\n *\n * @type {function}\n */\n//List.prototype.navigate = List.prototype.navigateDefault;\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var idx, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( idx = 0; idx < data.length; idx++ ) {\n        // cell value\n        item = data[idx];\n        // primitive value\n        if ( typeof item !== 'object' ) {\n            // wrap with defaults\n            item = data[idx] = {\n                value: data[idx]\n            };\n        }\n\n        if ( DEVELOP ) {\n            //if ( !('value' in item) ) { throw new Error(__filename + ': field \"value\" is missing'); }\n            if ( ('mark' in item) && Boolean(item.mark) !== item.mark ) {\n                throw new Error(__filename + ': item.mark must be boolean');\n            }\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.init = function ( config ) {\n    var self     = this,\n        currSize = this.$body.children.length,\n        /**\n         * Item mouse click handler.\n         *\n         * @param {Event} event click event data\n         *\n         * @this Element\n         *\n         * @fires module:stb/ui/list~List#click:item\n         */\n        onClick = function ( event ) {\n            if ( this.data ) {\n                self.focusItem(this);\n\n                // there are some listeners\n                if ( self.events['click:item'] ) {\n                    // notify listeners\n                    self.emit('click:item', {$item: this, event: event});\n                }\n            }\n        },\n        item, idx;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // apply cycle behaviour\n    if ( config.cycle !== undefined ) { this.cycle = config.cycle; }\n\n    // apply ScrollBar link\n    if ( config.scroll ) { this.scroll = config.scroll; }\n\n    // apply data provider\n    if ( config.provider ) { this.provider = config.provider; }\n\n\n    // custom render method\n    if ( config.render ) {\n        if ( DEVELOP ) {\n            if ( typeof config.render !== 'function' ) {\n                throw new Error(__filename + ': wrong config.render type');\n            }\n        }\n\n        // apply\n        this.renderItem = config.render;\n    }\n\n    // list items amount on page\n    if ( config.size ) {\n        if ( DEVELOP ) {\n            if ( Number(config.size) !== config.size ) {\n                throw new Error(__filename + ': config.size must be a number');\n            }\n            if ( config.size <= 0 ) {\n                throw new Error(__filename + ': config.size should be positive');\n            }\n        }\n\n        // apply\n        this.size = config.size;\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( name ) {\n            self.events[name] = null;\n            self.addListener(name, config.events[name]);\n        });\n    }\n\n    // geometry has changed or initial draw\n    if ( this.size !== currSize ) {\n        // non-empty list\n        if ( currSize > 0 ) {\n            // clear old items\n            this.$body.innerText = null;\n        }\n\n        // create new items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            item = document.createElement('div');\n            item.index = idx;\n            //item.className = 'item theme-list-item';\n            item.className = 'item';\n\n            item.addEventListener('click', onClick);\n            this.$body.appendChild(item);\n        }\n    }\n\n    if ( this.provider ) {\n        if ( this.provider.blocked ) {\n            return;\n        }\n\n        this.provider.get( null, function ( error, data ) {\n            if ( error ) {\n                if ( self.events['data:error'] ) {\n                    /**\n                     * Provider get error while take new data\n                     *\n                     * @event module:stb/ui/list~List#data:error\n                     */\n                    self.emit('data:error', error);\n                }\n            } else {\n                if ( data ) {\n                    config.data = data;\n                    self.setData(config);\n                    if ( self.scroll ) {\n                        self.scroll.init({\n                            realSize: self.provider.maxCount,\n                            viewSize: self.provider.size,\n                            value: self.provider.head + self.provider.pos\n                        });\n                    }\n                }\n                if ( self.events['data:get'] ) {\n                    /**\n                     * Provider request new data\n                     *\n                     * @event module:stb/ui/list~List#data:get\n                     *\n                     * @type {Object}\n                     */\n                    self.emit('data:get');\n                }\n            }\n        });\n    } else if ( config.data ) {\n        this.setData(config);\n    }\n};\n\n/**\n * Set data and render inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.setData = function ( config ) {\n    // apply list of items\n\n    if ( config.data ) {\n        if ( DEVELOP ) {\n            if ( !Array.isArray(config.data) ) { throw new Error(__filename + ': wrong config.data type'); }\n        }\n        // prepare user data\n        this.data = normalize(config.data);\n    }\n\n    // view window position\n    if ( DEVELOP ) {\n        if ( config.viewIndex !== undefined ) {\n            if ( Number(config.viewIndex) !== config.viewIndex ) {\n                throw new Error(__filename + ': config.viewIndex must be a number');\n            }\n            if ( config.viewIndex < 0 ) {\n                throw new Error(__filename + ': config.viewIndex should be positive');\n            }\n        }\n    }\n\n    // reset current view window position\n    this.viewIndex = null;\n\n    if ( this.$focusItem ) {\n        this.blurItem(this.$focusItem);\n    }\n\n    if ( this.scroll ) {\n        if ( this.provider ) {\n            if ( this.scroll.realSize !== this.provider.maxCount ) {\n                this.scroll.init({\n                    realSize: this.provider.maxCount,\n                    viewSize: this.provider.size,\n                    value: this.provider.head + this.provider.pos\n                });\n            }\n        } else {\n            this.scroll.init({\n                realSize: this.data.length,\n                viewSize: this.size,\n                value: config.viewIndex || 0\n            });\n        }\n    }\n\n    // set focus item\n    if ( config.focusIndex !== undefined && this.data.length ) {\n        if ( DEVELOP ) {\n            if ( Number(config.focusIndex) !== config.focusIndex ) {\n                throw new Error(__filename + ': config.focusIndex must be a number');\n            }\n            if ( config.focusIndex < 0 ) {\n                throw new Error(__filename + ': config.focusIndex should be positive');\n            }\n            // if ( config.focusIndex > this.data.length - 1 ) {\n            //     throw new Error(__filename + ': config.focusIndex should be less than data size');\n            // }\n        }\n\n        // jump to the necessary item\n        this.focusIndex(config.focusIndex);\n    } else {\n        // go to the first page\n        this.renderView(config.viewIndex || 0);\n    }\n};\n\n\n/**\n * Shift the visible view window event.\n *\n * @event module:stb/ui/list~List#move:view\n *\n * @type {Object}\n * @property {number} prevIndex previous view window position\n * @property {number} currIndex current view window position\n */\n\n\n/**\n * Draw the visible window.\n *\n * @param {number} index start position to render\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#move:view\n */\nList.prototype.renderView = function ( index ) {\n    var $item, idx, itemData, prevIndex, currIndex;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be more than zero');\n        }\n        // if ( index >= this.data.length ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // has the view window position changed\n    if ( this.viewIndex !== index ) {\n        // save for emit\n        prevIndex = this.viewIndex;\n        // sync global pointer\n        this.viewIndex = currIndex = index;\n\n        // rebuild all visible items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            // shortcuts\n            $item    = this.$body.children[idx];\n            itemData = this.data[index];\n\n            // real item or stub\n            if ( itemData ) {\n                // correct inner data/index and render\n                $item.data  = itemData;\n                $item.index = index;\n                this.renderItem($item, itemData);\n\n                // apply CSS\n                if ( itemData.mark ) {\n                    $item.classList.add('mark');\n                } else {\n                    $item.classList.remove('mark');\n                }\n            } else {\n                // nothing to render\n                $item.data = $item.index = undefined;\n                $item.innerHTML = '&nbsp;';\n                $item.ready = false;\n            }\n            index++;\n        }\n\n        // there are some listeners\n        if ( this.events['move:view'] ) {\n            // notify listeners\n            this.emit('move:view', {prevIndex: prevIndex, currIndex: currIndex});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            this.emit('select:item', {$item: $item});\n        }\n\n        // update a linked scroll component\n        if ( this.scroll ) {\n            this.scroll.scrollTo(this.provider ? this.provider.head + this.provider.pos : this.viewIndex);\n        }\n\n        // full rebuild\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Move focus to the given direction.\n *\n * @param {number} direction arrow key code\n *\n * @fires module:stb/ui/list~List#cycle\n * @fires module:stb/ui/list~List#overflow\n */\nList.prototype.move = function ( direction ) {\n    var self = this,\n        force = false;\n\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(direction) !== direction ) {\n            throw new Error(__filename + ': direction must be a number');\n        }\n    }\n\n    // empty list\n    if ( !this.data.length ) {\n        return;\n    }\n\n    switch ( direction ) {\n        case keys.left:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.up:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index > 0 ) {\n                    if ( this.$focusItem === this.$body.firstChild ) {\n                        this.renderView(this.viewIndex - 1);\n                    } else {\n                        this.focusItem(this.$focusItem.previousSibling);\n                    }\n                } else if ( this.provider ) {\n                    if ( this.provider.blocked ) {\n                        return;\n                    }\n\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the end of the list\n                        this.move(keys.end);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.right:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.down:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index < this.data.length - 1 ) {\n                    if ( this.$focusItem === this.$body.lastChild ) {\n                        this.renderView(this.viewIndex + 1);\n                    } else {\n                        this.focusItem(this.$focusItem.nextSibling);\n                    }\n                } else if ( this.provider ) {\n                    if ( this.provider.blocked ) {\n                        return;\n                    }\n\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the beginning of the list\n                        this.move(keys.home);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.pageUp:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n\n                return;\n            }\n            if ( this.viewIndex < this.size ) {\n                // first page\n                this.renderView(0);\n            } else {\n                // second page and further\n                this.renderView(this.viewIndex - this.size + 1);\n            }\n\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.pageDown:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            // data is bigger then one page\n            if ( this.data.length > this.size ) {\n                // determine jump size\n                if ( this.viewIndex > this.data.length - this.size * 2 ) {\n                    // last page\n                    this.renderView(this.data.length - this.size);\n                } else {\n                    // before the last page\n                    this.renderView(this.viewIndex + this.size - 1);\n                }\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n        case keys.home:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n                break;\n            }\n            this.renderView(0);\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.end:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            if ( this.data.length > this.size ) {\n                this.renderView(this.data.length - this.size);\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n    }\n};\n\n\n/**\n * Highlight the given DOM element as focused.\n * Remove focus from the previously focused item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.focusItem = function ( $item ) {\n    var $prev = this.$focusItem;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n    }\n\n    // different element\n    if ( $item && $prev !== $item ) {\n        if ( DEVELOP ) {\n            if ( !($item instanceof Element) ) {\n                throw new Error(__filename + ': wrong $item type');\n            }\n            if ( $item.parentNode !== this.$body ) {\n                throw new Error(__filename + ': wrong $item parent element');\n            }\n        }\n\n        // some item is focused already\n        if ( $prev !== null ) {\n            if ( DEVELOP ) {\n                if ( !($prev instanceof Element) ) {\n                    throw new Error(__filename + ': wrong $prev type');\n                }\n            }\n\n            // style\n            $prev.classList.remove('focus');\n            //$prev.classList.remove('theme-focus');\n\n            // there are some listeners\n            if ( this.events['blur:item'] ) {\n                /**\n                 * Remove focus from an element.\n                 *\n                 * @event module:stb/ui/list~List#blur:item\n                 *\n                 * @type {Object}\n                 * @property {Element} $item previously focused HTML element\n                 */\n                this.emit('blur:item', {$item: $prev});\n            }\n        }\n        // reassign\n        this.$focusItem = $item;\n\n        this.$focusItem.data = this.data[this.$focusItem.index];\n\n        // correct CSS\n        $item.classList.add('focus');\n        //$item.classList.add('theme-focus');\n\n        // there are some listeners\n        if ( this.events['focus:item'] ) {\n            /**\n             * Set focus to a DOM element.\n             *\n             * @event module:stb/ui/list~List#focus:item\n             *\n             * @type {Object}\n             * @property {Element} $prev old/previous focused HTML element\n             * @property {Element} $curr new/current focused HTML element\n             */\n            this.emit('focus:item', {$prev: $prev, $curr: $item});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            /**\n             * Set focus to a list item.\n             *\n             * @event module:stb/ui/list~List#select:item\n             *\n             * @type {Object}\n             * @property {Element} $item new/current focused item\n             */\n            this.emit('select:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Highlight the given DOM element as blur.\n * Remove focus from the item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.blurItem = function ( $item ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) { throw new Error(__filename + ': wrong arguments number'); }\n    }\n\n    // different element\n    if ( $item ) {\n        if ( $item === this.$focusItem ) {\n            this.$focusItem = null;\n        }\n\n        $item.classList.remove('focus');\n        //$item.classList.remove('theme-focus');\n\n        // there are some listeners\n        if ( this.events['blur:item'] ) {\n            /**\n             * Remove focus from an element.\n             *\n             * @event module:stb/ui/list~List#blur:item\n             *\n             * @type {Object}\n             * @property {Element} $item previously focused HTML element\n             */\n            this.emit('blur:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Set the given item focused by item index.\n *\n * @param {number} index item data index\n */\nList.prototype.focusIndex = function ( index ) {\n    var viewIndex = this.viewIndex || 0;\n\n    if ( DEVELOP ) {\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be positive');\n        }\n        // if ( index > this.data.length - 1 ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // determine direction\n    if ( index >= viewIndex + this.size ) {\n        // check range\n        index = index < this.data.length - 1 ? index : this.data.length - 1;\n        // move down\n        this.renderView(index - this.size + 1);\n        this.focusItem(this.$body.lastChild);\n    } else if ( index < viewIndex ) {\n        // check range\n        index = index > 0 ? index : 0;\n        // move up\n        this.renderView(index);\n        this.focusItem(this.$body.firstChild);\n    } else {\n        // no move\n        if ( this.viewIndex === null ) {\n            // first attempt\n            this.renderView(0);\n        }\n        this.focusItem(this.$body.children[index - viewIndex]);\n    }\n};\n\n\n/**\n * Set item state and appearance as marked.\n *\n * @param {Node|Element} $item element to focus\n * @param {boolean} state true - marked, false - not marked\n */\nList.prototype.markItem = function ( $item, state ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 2 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !($item instanceof Element) ) {\n            throw new Error(__filename + ': wrong $item type');\n        }\n        if ( $item.parentNode !== this.$body ) {\n            throw new Error(__filename + ': wrong $item parent element');\n        }\n        if ( Boolean(state) !== state ) {\n            throw new Error(__filename + ': state must be boolean');\n        }\n    }\n\n    // correct CSS\n    if ( state ) {\n        $item.classList.add('mark');\n    } else {\n        $item.classList.remove('mark');\n    }\n\n    // apply flag\n    $item.data.mark = state;\n};\n\n\n// public\nmodule.exports = List;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Base Events Emitter implementation.\n *\n * @see http://nodejs.org/api/events.html\n * @constructor\n *\n * @example\n * var emitter = new Emitter();\n */\nfunction Emitter () {\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // if ( DEVELOP ) {\n    //     if ( typeof this !== 'object' ) { throw new Error(__filename + ': must be constructed via new'); }\n    // }\n\n    /**\n     * Inner hash table for event names and linked callbacks.\n     * Manual editing should be avoided.\n     *\n     * @member {Object.<string, function[]>}\n     *\n     * @example\n     * {\n     *     click: [\n     *         function click1 () { ... },\n     *         function click2 () { ... }\n     *     ],\n     *     keydown: [\n     *         function () { ... }\n     *     ]\n     * }\n     **/\n    this.events = {};\n}\n\n\nEmitter.prototype = {\n    /**\n     * Bind an event to the given callback function.\n     * The same callback function can be added multiple times for the same event name.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.addListener('click', function ( data ) { ... });\n     * // one more click handler\n     * emitter.addListener('click', function ( data ) { ... });\n     */\n    addListener: function ( name, callback ) {\n        console.assert(arguments.length === 2, 'wrong arguments number');\n        console.assert(typeof name === 'string', 'wrong name type');\n        console.assert(name.length > 0, 'empty name');\n        console.assert(typeof callback === 'function', 'callback should be a function');\n\n        // if ( DEVELOP ) {\n        //     if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        //     if ( typeof name !== 'string' || name.length === 0 ) { throw new Error(__filename + ': wrong or empty name'); }\n        //     if ( typeof callback !== 'function' ) { throw new Error(__filename + ': wrong callback type'); }\n        // }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(callback);\n    },\n\n\n    /**\n     * Add a one time listener for the event.\n     * This listener is invoked only the next time the event is fired, after which it is removed.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.once('click', function ( data ) { ... });\n     */\n    once: function ( name, callback ) {\n        // current execution context\n        var self = this;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n        }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(function onceWrapper () {\n            self.removeListener(name, onceWrapper);\n            callback.apply(self, arguments);\n        });\n    },\n\n\n    /**\n     * Apply multiple listeners at once.\n     *\n     * @param {Object} callbacks event names with callbacks\n     *\n     * @example\n     * emitter.addListeners({\n     *     click: function ( data ) {},\n     *     close: function ( data ) {}\n     * });\n     */\n    addListeners: function ( callbacks ) {\n        var name;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof callbacks !== 'object' ) {\n                throw new Error(__filename + ': wrong callbacks type');\n            }\n            if ( Object.keys(callbacks).length === 0 ) {\n                throw new Error(__filename + ': no callbacks given');\n            }\n        }\n\n        for ( name in callbacks ) {\n            if ( callbacks.hasOwnProperty(name) ) {\n                this.addListener(name, callbacks[name]);\n            }\n        }\n    },\n\n\n    /**\n     * Remove all instances of the given callback.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to remove\n     *\n     * @example\n     * emitter.removeListener('click', func1);\n     */\n    removeListener: function ( name, callback ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n            if ( this.events[name] && !Array.isArray(this.events[name]) ) {\n                throw new Error(__filename + ': corrupted inner data');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( this.events[name] ) {\n            // rework the callback list to exclude the given one\n            this.events[name] = this.events[name].filter(function callbacksFilter ( fn ) { return fn !== callback; });\n            // event has no more callbacks so clean it\n            if ( this.events[name].length === 0 ) {\n                // as if there were no listeners at all\n                this.events[name] = undefined;\n            }\n        }\n    },\n\n\n    /**\n     * Remove all callbacks for the given event name.\n     * Without event name clears all events.\n     *\n     * @param {string} [name] event identifier\n     *\n     * @example\n     * emitter.removeAllListeners('click');\n     * emitter.removeAllListeners();\n     *\n     * @deprecated\n     */\n    /*removeAllListeners: function ( name ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 0 && (typeof name !== 'string' || name.length === 0) ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // check input\n        if ( arguments.length === 0 ) {\n            // no arguments so remove everything\n            this.events = {};\n        } else if ( name ) {\n            if ( DEVELOP ) {\n                if ( this.events[name] ) { throw new Error(__filename + ': event is not removed'); }\n            }\n\n            // only name is given so remove all callbacks for the given event\n            // but object structure modification should be avoided\n            this.events[name] = undefined;\n        }\n    },*/\n\n\n    /**\n     * Execute each of the listeners in the given order with the supplied arguments.\n     *\n     * @param {string} name event identifier\n     *\n     * @example\n     * emitter.emit('init');\n     * emitter.emit('click', {src: panel1, dst: panel2});\n     * emitter.emit('load', error, data);\n     *\n     * // it's a good idea to emit event only when there are some listeners\n     * if ( this.events['click'] ) {\n     *     this.emit('click', {event: event});\n     * }\n     */\n    emit: function ( name ) {\n        var event = this.events[name],\n            index;\n\n        if ( DEVELOP ) {\n            if ( arguments.length < 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( event ) {\n            if ( DEVELOP ) {\n                if ( !Array.isArray(event) ) {\n                    throw new Error(__filename + ': wrong event type');\n                }\n            }\n\n            for ( index = 0; index < event.length; index++ ) {\n                if ( DEVELOP ) {\n                    if ( typeof event[index] !== 'function' ) {\n                        throw new Error(__filename + ': wrong event callback type');\n                    }\n                }\n\n                // invoke the callback with parameters\n                event[index].apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n    }\n};\n\n\n// correct constructor name\nEmitter.prototype.constructor = Emitter;\n\n\n// public\nmodule.exports = Emitter;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-page');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-page';\n","/**\n * HTML elements low-level handling.\n *\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n/* eslint no-unused-vars: 0 */\n\n/**\n * DOM manipulation module\n */\nvar dom = {};\n\n\n/**\n * Create a new HTML element.\n *\n * @param {string} tagName mandatory tag name\n * @param {Object|null} [attrList] element attributes\n * @param {...*} [content] element content (primitive value/values or other nodes)\n * @return {Node|null} HTML element or null on failure\n *\n * @example\n * dom.tag('table');\n * dom.tag('div', {}, 'some text');\n * dom.tag('div', {className:'top'}, dom.tag('span'), dom.tag('br'));\n * dom.tag('link', {rel:'stylesheet', type:'text/css', href:'http://some.url/'});\n */\ndom.tag = function ( tagName, attrList, content ) {\n    var node = null,\n        index, name;\n\n    // minimal param is given\n    if ( tagName ) {\n        // empty element\n        node = document.createElement(tagName);\n\n        // optional attribute list is given\n        if ( attrList && typeof attrList === 'object' ) {\n            for ( name in attrList ) {\n                // extend a new node with the given attributes\n                node[name] = attrList[name];\n            }\n        }\n\n        // content (arguments except the first two)\n        for ( index = 2; index < arguments.length; index++ ) {\n            // some data is given\n            if ( arguments[index] ) {\n                // regular HTML tag or plain data\n                node.appendChild(\n                    typeof arguments[index] === 'object' ? arguments[index] : document.createTextNode(arguments[index])\n                );\n            }\n        }\n\n    }\n\n    return node;\n};\n\n\n/**\n * Create a new DocumentFragment filled with the given non-empty elements if any.\n *\n * @param {...*} [node] fragment content (primitive value/values or other nodes)\n * @return {DocumentFragment} new placeholder\n *\n * @example\n * // gives an empty fragment element\n * dom.fragment();\n * // gives a fragment element with 3 div element inside\n * dom.fragment(dom.tag('div'), div2, div3);\n * // mixed case\n * dom.fragment('some text', 123, div3);\n */\ndom.fragment = function ( node ) {\n    // prepare placeholder\n    var fragment = document.createDocumentFragment(),\n        index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        node = arguments[index];\n        // some data is given\n        if ( node ) {\n            // regular HTML tag or plain data\n            fragment.appendChild(typeof node === 'object' ? node : document.createTextNode(node));\n        }\n    }\n\n    return fragment;\n};\n\n\n/**\n * Add the given non-empty data (HTML element/text or list) to the destination element.\n *\n * @param {Node} tagDst element to receive children\n * @param {...*} [content] element content (primitive value/values or other nodes)\n * @return {Node|null} the destination element - owner of all added data\n *\n * @example\n * // simple text value\n * add(some_div, 'Hello world');\n * // single DOM Element\n * add(some_div, some_other_div);\n * // DOM Element list\n * add(some_div, div1, div2, div3);\n * // mixed case\n * add(some_div, div1, 'hello', 'world');\n */\ndom.add = function ( tagDst, content ) {\n    var index;\n\n    // valid HTML tag as the destination\n    if ( tagDst instanceof Node ) {\n        // append all except the first one\n        for ( index = 1; index < arguments.length; index++ ) {\n            // some data is given\n            if ( arguments[index] ) {\n                // regular HTML tag or plain data\n                tagDst.appendChild(\n                    typeof arguments[index] === 'object' ? arguments[index] : document.createTextNode(arguments[index])\n                );\n            }\n        }\n\n        return tagDst;\n    }\n\n    return null;\n};\n\n\n/**\n * Remove the given elements from the DOM.\n *\n * @param {...Node} [nodes] element to be removed\n * @return {boolean} operation status (true - all given elements removed)\n *\n * @example\n * dom.remove(document.querySelector('div.test'));\n * dom.remove(div1, div2, div3);\n */\ndom.remove = function ( nodes ) {\n    // amount of successfully removed nodes\n    var count = 0,\n        index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        // valid non-empty tag\n        if ( arguments[index] && arguments[index].parentNode ) {\n            if ( arguments[index].parentNode.removeChild(arguments[index]) === arguments[index] ) {\n                count++;\n            }\n        }\n    }\n\n    return arguments.length > 0 && count === arguments.length;\n};\n\n\ndom.clear = function ( node ) {\n    while ( node.lastChild ) {\n        node.removeChild(node.lastChild);\n    }\n};\n\n\n// public\nmodule.exports = dom;\n","/**\n * @license The MIT License (MIT)\n * @copyright Dmitry Fedotov <bas.jsdev@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys'),\n    classes   = {};\n\n\n// initialize classes\nclasses[keys.f1] = 'theme-icon-rc-f1';\nclasses[keys.f2] = 'theme-icon-rc-f2';\nclasses[keys.f3] = 'theme-icon-rc-f3';\nclasses[keys.f4] = 'theme-icon-rc-f4';\nclasses[keys.menu] = 'theme-icon-rc-menu';\nclasses[keys.ok] = 'theme-icon-rc-ok';\nclasses[keys.info] = 'theme-icon-rc-info';\nclasses[keys.playPause] = 'theme-icon-rc-play-pause';\nclasses[keys.back] = 'theme-icon-rc-back';\nclasses[keys.exit] = 'theme-icon-rc-home';\nclasses[keys.keyboard] = 'theme-icon-rc-vk';\nclasses[keys.refresh] = 'theme-icon-rc-refresh';\nclasses[keys.frame] = 'theme-icon-rc-aspect';\n\n/**\n * Footer.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}  config={} - init parameters\n * @param {Object}  config.parent - parent page\n * @param {boolean} [config.visible] - visibility flag\n * @param {Object}  [config.data] - footer buttons config\n * @param {Object}  [config.data.left] - left button config\n * @param {Object}  [config.data.middle] - middle buttons config\n * @param {Object}  [config.data.right] - right button config\n * @param {number}  [config.data.middle.code] - button key code\n * @param {Object}  [config.data.middle.title] - button title\n * @param {Object}  [config.data.middle.action] - button press (click) action\n * @param {Object}  [config.data.label] - button config (for remote control with long press)\n * @param {number}  [config.data.label.code] - button key code\n * @param {Object}  [config.data.label.title] - button title\n * @param {Object}  [config.data.label.action] - button press (click) action\n *\n * @example\n * page.footer = new Footer({\n *     parent: page,\n *     data: {\n *         left: {\n *             code: keys.menu, action: function () {}\n *         },\n *         middle: [\n *             {code: 55, action: function () {}},\n *             {code: keys.f1, title: 'stop', action: function () {}},\n *             {code: 9000, className: 'customIcon', title: 'start', action: function () {}},\n *             {code: keys.f4, title: 'end', action: function () {}}\n *         ],\n *         right: {\n *             code: 65, action: function () {}\n *         },\n *         label: {\n *             code: keys.menu, title: 'Hold OK button to open the task options', action: function () {}\n *         }\n *     }\n * });\n */\n\n/* eslint max-statements: 0 */\nfunction Footer ( config ) {\n    var currentTab = 0,\n        self       = this,\n        $body;\n\n    // sanitize\n    config = config || {};\n    // can't accept focus\n    config.focusable = false;\n    // hide by default\n    config.visible = config.visible || false;\n    // create centered div\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    this.tabs = [\n        {codes: {}},\n        {codes: {}},\n        {codes: {}},\n        {codes: {}}\n    ];\n\n    this.tab = 0;\n\n    this.$table = this.$node.appendChild(document.createElement('table'));\n    this.$table.insertRow();\n    this.$table.rows[0].insertCell(-1);\n\n    if ( TARGET !== 'android-stb' && TARGET !== 'android-app' ) {\n        this.$table.rows[0].insertCell(-1);\n        this.$table.rows[0].insertCell(-1);\n\n        this.$left = this.$table.rows[0].cells[0].appendChild(document.createElement('div'));\n        this.$left.className = 'theme-icon';\n\n        this.$table.rows[0].cells[1].className = 'central';\n        $body = this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    } else {\n        this.$table.rows[0].cells[0].className = 'central noButtons';\n        $body = this.tabs[currentTab].$body = this.$table.rows[0].cells[0].appendChild(document.createElement('div'));\n    }\n\n    $body.className = 'wrapper hidden';\n    $body.appendChild(document.createElement('div'));\n    $body.lastChild.className = 'button';\n    $body.lastChild.appendChild(document.createElement('div'));\n\n    if ( TARGET !== 'android-stb' && TARGET !== 'android-app' ) {\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n        $body = this.tabs[++currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n        $body.className = 'wrapper hidden';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n\n        $body = this.tabs[++currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n        $body.className = 'wrapper hidden';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n\n        $body = this.tabs[++currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n        $body.className = 'wrapper hidden';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n\n\n        this.$right = this.$table.rows[0].cells[2].appendChild(document.createElement('div'));\n        this.$right.className = 'theme-icon';\n    } else {\n        $body.lastChild.lastChild.className = 'title label';\n    }\n\n    this.init(config.data);\n\n    this.parent.addListener('keydown', function ( event ) {\n        var currTab = self.tabs[self.tab];\n\n        if ( self.visible ) {\n            if ( currTab.codes[event.code] && typeof currTab.codes[event.code].action === 'function' ) {\n                currTab.codes[event.code].action();\n            }\n        }\n    });\n}\n\n\n// inheritance\nFooter.prototype = Object.create(Component.prototype);\nFooter.prototype.constructor = Footer;\n\n// set component name\nFooter.prototype.name = 'mag-component-footer';\n\n\nif ( TARGET !== 'android-stb' && TARGET !== 'android-app' ) {\n    /**\n     * Redefine buttons\n     *\n     * @param {Object} [config] - footer buttons config\n     * @param {Object} [config.left] - left button config\n     * @param {number} [config.left.code] - left button key code\n     * @param {boolean} [config.left.disabled] - left button is disabled\n     * @param {Object} [config.left.action] - left button press (click) action\n     * @param {Object} [config.middle] - middle buttons config\n     * @param {Object} [config.right] - right button config\n     * @param {number} [config.right.code] - right button key code\n     * @param {boolean} [config.right.disabled] - right button is disabled\n     * @param {Object} [config.right.action] - right button press (click) action\n     * @param {number} [config.middle.code] - button key code\n     * @param {Object} [config.middle.title] - button title\n     * @param {boolean} [config.middle.disabled] - button is disabled\n     * @param {Object} [config.middle.action] - button press (click) action\n     * @param {Object} [config.label] - button config\n     * @param {number} [config.label.code] - button key code\n     * @param {Object} [config.label.title] - button title\n     * @param {Object} [config.label.action] - button press (click) action\n     *\n     * page.Footer.init({\n     *     left: {\n     *         code: keys.menu, action: function () {}\n     *     },\n     *     middle: [\n     *         {code: 55, action: function () {}},\n     *         {code: keys.f1, title: 'stop', action: function () {}},\n     *         {code: 9000, className: 'customIcon', title: 'start', action: function () {}},\n     *         {code: keys.f4, title: 'end', disabled: true}\n     *     ],\n     *     right: {\n     *         code: 65, action: function () {}\n     *     }\n     * });\n     *\n     */\n    Footer.prototype.init = function ( config ) {\n        var index, $tab, $tabChildren;\n\n        config = config || {};\n\n        if ( DEVELOP ) {\n            if ( config.middle && config.middle.length > 4 ) {\n                throw new Error(__filename + ': only 4 buttons allowed in footer');\n            }\n            if ( config.middle && Array.isArray(config.middle) ) {\n                for ( index = 0; index < config.middle.length; index++ ) {\n                    if ( typeof config.middle[index].action !== 'function' && !config.middle[index].disabled ) {\n                        throw new Error(__filename + ': action must be a function');\n                    }\n                    ++index;\n                }\n            }\n            if ( config.left && typeof config.left.action !== 'function' && !config.left.disabled ) {\n                throw new Error(__filename + ': action must be a function');\n            }\n            if ( config.right && typeof config.right.action !== 'function' && !config.right.disabled ) {\n                throw new Error(__filename + ': action must be a function');\n            }\n        }\n\n        // hide old tab\n        this.tabs[this.tab].$body.classList.add('hidden');\n        this.tab = config.middle && config.middle.length ? config.middle.length - 1 : 0;\n        // current tab shortcut\n        $tab = this.tabs[this.tab];\n        // reset all actions\n        $tab.codes = {};\n\n        // left button\n        if ( config.left ) {\n            this.$left.className = config.left.className || ('theme-icon ' + (classes[config.left.code] || 'theme-icon-warning'));\n            if ( config.left.disabled ) {\n                this.$left.classList.add('disabled');\n            } else {\n                $tab.codes[config.left.code] = {action: config.left.action};\n                this.$left.style.visibility = 'inherit';\n                this.$left.onclick = function () {\n                    if ( typeof config.left.action === 'function' ) {\n                        config.left.action();\n                    }\n                };\n            }\n        } else if ( this.$left.style.visibility !== 'hidden' ) {\n            this.$left.style.visibility = 'hidden';\n        }\n\n        // right button\n        if ( config.right ) {\n            this.$right.className = config.right.className || ('theme-icon ' + (classes[config.right.code] || 'theme-icon-warning'));\n            if ( config.right.disabled ) {\n                this.$right.classList.add('disabled');\n            } else {\n                $tab.codes[config.right.code] = {action: config.right.action};\n                this.$right.style.visibility = 'inherit';\n                this.$right.onclick = function () {\n                    if ( typeof config.right.action === 'function' ) {\n                        config.right.action();\n                    }\n                };\n            }\n        } else if ( this.$right.style.visibility !== 'hidden' ) {\n            this.$right.style.visibility = 'hidden';\n        }\n\n        function addClick ( ind ) {\n            return function () {\n                if ( typeof config.middle[ind].action === 'function' ) {\n                    config.middle[ind].action();\n                }\n            };\n        }\n\n        // middle buttons\n        if ( config.middle && config.middle.length ) {\n            for ( index = 0; index < config.middle.length; index++ ) {\n                $tab.codes[config.middle[index].code] = {action: config.middle[index].action};\n                if ( config.middle[index].disabled ) {\n                    $tab.$body.children[index].classList.add('disabled');\n                } else {\n                    $tab.$body.children[index].classList.remove('disabled');\n                    $tab.$body.children[index].onclick = addClick(index);\n                }\n                // shortcut\n                $tabChildren = $tab.$body.children[index].children;\n                $tabChildren[0].className = 'iconImg ' +\n                    (config.middle[index].className || ('theme-icon ' + (classes[config.middle[index].code] || 'theme-icon-warning')));\n\n                $tabChildren[1].innerText = config.middle[index].title || '';\n            }\n            $tab.$body.classList.remove('hidden');\n        }\n    };\n} else {\n    /**\n     * Redefine buttons for android\n     *\n     * @param {Object} [config] - footer config\n     * @param {Object} [config.label] - button config\n     * @param {number} [config.label.code] - button key code\n     * @param {Object} [config.label.title] - button title\n     * @param {Object} [config.label.action] - button press (click) action\n     *\n     * initLongPressMode({\n     *     label: {code: keys.menu, title: 'Hold OK button to open the task options', action: function () {}}\n     * });\n     *\n     */\n    Footer.prototype.init = function ( config ) {\n        var $tab, $tabChildren;\n\n        config = config || {};\n\n        // current tab shortcut\n        $tab = this.tabs[0];\n        // reset\n        $tab.codes = {};\n        $tab.$body.classList.add('hidden');\n\n        if ( config.label && typeof config.label.action === 'function' ) {\n            // label button\n            $tab.codes[config.label.code] = {action: config.label.action};\n            $tab.$body.children[0].onclick = function () {\n                if ( typeof config.label.action === 'function' ) {\n                    config.label.action();\n                }\n            };\n            // shortcut\n            $tabChildren = $tab.$body.children[0].children;\n            // $tabChildren[0].className = '';\n            $tabChildren[0].innerText = config.label.title || '';\n\n            $tab.$body.classList.remove('hidden');\n        }\n    };\n}\n\n\n// public\nmodule.exports = Footer;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-scrollbar');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-scrollbar';\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar LAST_CHANNEL_TIMEOUT = 3000,\n    lastChannelTimeout;\n\nmodule.exports = {\n    /**\n     * Show error notification.\n     *\n     * @param {string} text to show\n     * @param {number} [duration] in seconds\n     */\n    notifyError: function ( text, duration ) {\n        duration = duration * 1000 || 3000;\n\n        core.notify({\n            title: text,\n            icon: 'alert',\n            type: 'warning',\n            timeout: duration\n        });\n    },\n\n    /**\n     * Create timeout to set channel as last.\n     *\n     * @param {Channel} channel to set as last\n     */\n    setChannelAsLast: function ( channel ) {\n        clearTimeout(lastChannelTimeout);\n        lastChannelTimeout = setTimeout(function () {\n            channel.setLast();\n        }, LAST_CHANNEL_TIMEOUT);\n    },\n\n    /**\n     * Send osd-input intent.\n     *\n     * @param {number} number pressed to send\n     * @param {Object} config intent reaction\n     */\n    sendOsdInputIntent: function ( number, config = {} ) {\n        core.intent({\n            action: 'osd-input',\n            data: {\n                type: 'numbers',\n                length: 4,\n                startChar: number\n            },\n            events: {\n                done: result => config.callback && config.callback(result)\n            }\n        });\n    },\n\n    /**\n     * Send intent to call keyboard with search params.\n     *\n     * @param {string} initialValue of keyboard input\n     * @param {function} callback after user input\n     */\n    sendSearchIntent: function ( initialValue, callback ) {\n        window.core.intent({\n            action: 'keyboard',\n            data: {\n                type: 'text',\n                mode: 'qwerty',\n                title: gettext('Search'),\n                description: '',\n                value: initialValue || ''\n            },\n            events: {\n                done: function ( event ) {\n                    event = event || {};\n\n                    if ( callback ) {\n                        callback(event.value);\n                    }\n                }\n            }\n        }, function ( error ) {\n            console.log(error);\n        });\n    },\n\n    /**\n     * Send intent to record manager with given channel.\n     *\n     * @param {Channel} channel to record\n     */\n    sendRecordIntent: function ( channel ) {\n        if ( !channel || (!channel.pvr && !channel.local_pvr) ) {\n            return;\n        }\n\n        core.intent({\n            action: 'record',\n            data: {\n                uri: channel.url,\n                name: channel.name,\n                id: channel.id,\n                pvr: {\n                    server: channel.pvr,\n                    local:  channel.local_pvr\n                }\n            }\n        });\n    },\n\n    /**\n     * Shortcut function to check if channel is under censored.\n     *\n     * @param {Channel} channel to check\n     * @return {boolean} state of censored\n     */\n    isCensored: function ( channel ) {\n        return (channel.censored || (channel.genre && channel.genre.censored));\n    },\n\n    /**\n     * Send intent to show osd tv.\n     *\n     * @param {Channel} channel - channel to send info\n     * @param {boolean} [attach] - attach osd on screen\n     * @return {Intent} intent - intent to osd\n     */\n    sendOsdTvIntent: function ( channel, attach ) {\n        return core.intent({\n            action: 'osd-tv',\n            data: {\n                name: channel.name,\n                number: channel.number,\n                favorite: channel.favorite,\n                pvr: (channel.local_pvr || channel.pvr),\n                timeshift: channel.local_timeshift,\n                censored: channel.censored || ( channel.genre && channel.genre.censored ),\n                // stay on display\n                attach: attach\n            }\n        }, function () {\n            debug.log('send osd intent');\n        });\n    }\n\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('./core');\n\n\n// public\nmodule.exports = {\n    DOMContentLoaded: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // there are some listeners\n        if ( app.events['dom'] ) {\n            // notify listeners\n            app.emit('dom', event);\n            //console.log('DOMContentLoaded');\n        }\n    },\n\n    /**\n     * The load event is fired when a resource and its dependent resources have finished loading.\n     *\n     * Control flow:\n     *   1. Global handler.\n     *   2. Each page handler.\n     *   3. Application DONE event.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/load\n     *\n     * @param {Event} event generated object with event data\n     */\n    load: function ( event ) {\n        //var path;\n\n        //debug.event(event);\n        //console.log(event);\n\n        // time mark\n        //app.data.time.load = event.timeStamp;\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' load', 'green');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n\n        // time mark\n        //app.data.time.done = +new Date();\n\n        // everything is ready\n        // and there are some listeners\n        // if ( app.events['done'] ) {\n        //     // notify listeners\n        //     app.emit('done', event);\n        // }\n    },\n\n    /**\n     * The unload event is fired when the document or a child resource is being unloaded.\n     *\n     * Control flow:\n     *   1. Each page handler.\n     *   2. Global handler.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/unload\n     *\n     * @param {Event} event generated object with event data\n     */\n    unload: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' unload', 'red');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n    },\n\n    /**\n     * The error event is fired when a resource failed to load.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/error\n     *\n     * @param {Event} event generated object with event data\n     */\n    error: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n        //debug.fail('app event: ' + event.message, event, {tags: [event.type, 'event']});\n        console.error('app event: ' + event.message, event);\n    },\n\n    /**\n     * The keydown event is fired when a key is pressed down.\n     * Set event.stop to true in order to prevent bubbling.\n     *\n     * Control flow:\n     *   1. Current active component on the active page.\n     *   2. Current active page itself.\n     *   3. Application.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keydown\n     *\n     * @param {Event} event generated object with event data\n     */\n    keydown: function ( event ) {\n        var page = app.activePage,\n            eventLocal = {\n                code: event.keyCode,\n                stop: false\n            },\n            activeComponent;\n\n        if ( DEVELOP ) {\n            if ( !page ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        // filter phantoms\n        //if ( event.keyCode === 0 ) { return; }\n\n        // combined key code\n        //event.code = event.keyCode;\n\n        // apply key modifiers\n        if ( event.ctrlKey )  { eventLocal.code += 'c'; }\n        if ( event.altKey )   { eventLocal.code += 'a'; }\n        if ( event.shiftKey ) { eventLocal.code += 's'; }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + eventLocal.code, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + eventLocal.code, event);\n\n        // page.activeComponent can be set to null in event handles\n        activeComponent = page.activeComponent;\n\n        // current component handler\n        if ( activeComponent && activeComponent !== page ) {\n            // component is available and not page itself\n            if ( activeComponent.events[event.type] ) {\n                // there are some listeners\n                activeComponent.emit(event.type, eventLocal, event);\n            }\n\n            // todo: bubble event recursively\n            // bubbling\n            if (\n                !eventLocal.stop &&\n                activeComponent.propagate &&\n                activeComponent.parent &&\n                activeComponent.parent.events[event.type]\n            ) {\n                activeComponent.parent.emit(event.type, eventLocal, event);\n            }\n        }\n\n        // page handler\n        if ( !eventLocal.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, eventLocal, event);\n            }\n\n            // global app handler\n            if ( !event.stop ) {\n                // not prevented\n                if ( app.events[event.type] ) {\n                    // there are some listeners\n                    app.emit(event.type, eventLocal, event);\n                }\n            }\n        }\n\n        //// suppress non-printable keys in stb device (not in your browser)\n        //if ( app.data.host && keyCodes[event.code] ) {\n        //    event.preventDefault();\n        //}\n    },\n\n    /**\n     * The keypress event is fired when press a printable character.\n     * Delivers the event only to activeComponent at active page.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keypress\n     *\n     * @param {Event} event generated object with event data\n     * @param {string} event.char entered character\n     */\n    keypress: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + event.key, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + event.key, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n    },\n\n    /**\n     * The click event is fired when a pointing device button (usually a mouse button) is pressed and released on a single element.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/click\n     *\n     * @param {Event} event generated object with event data\n     */\n    /*click: function ( event ) {\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n     },*/\n\n    /**\n     * The contextmenu event is fired when the right button of the mouse is clicked (before the context menu is displayed),\n     * or when the context menu key is pressed (in which case the context menu is displayed at the bottom left of the focused\n     * element, unless the element is a tree, in which case the context menu is displayed at the bottom left of the current row).\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/contextmenu\n     *\n     * @param {Event} event generated object with event data\n     */\n    // contextmenu: function ( event ) {\n    //     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n    //\n    //     if ( !DEVELOP ) {\n    //         // disable right click in release mode\n    //         event.preventDefault();\n    //     }\n    // },\n\n    /*contextmenu: function ( event ) {\n     //var kbEvent = {}; //Object.create(document.createEvent('KeyboardEvent'));\n\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n\n     //kbEvent.type    = 'keydown';\n     //kbEvent.keyCode = 8;\n\n     //debug.log(kbEvent.type);\n\n     //globalEventListenerKeydown(kbEvent);\n     //var event = document.createEvent('KeyboardEvent');\n     //event.initEvent('keydown', true, true);\n\n     //document.dispatchEvent(kbEvent);\n\n     if ( !DEVELOP ) {\n     // disable right click in release mode\n     event.preventDefault();\n     }\n     },*/\n\n    /**\n     * The wheel event is fired when a wheel button of a pointing device (usually a mouse) is rotated.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel\n     *\n     * @param {Event} event generated object with event data\n     */\n    mousewheel: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n\n        // page handler\n        if ( !event.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, event);\n            }\n        }\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core');\n//    metrics = require('app:metrics'),\n//    linkCSS;\n\n\n// global link\n//app.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\n//app.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\n//app.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n// // set max browser window size\n// window.moveTo(0, 0);\n// window.resizeTo(metrics.width, metrics.height);\n\n// load CSS file base on resolution\n/*linkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = 'css/' + (DEVELOP ? 'develop.' : 'release.') + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);*/\n\n\n// public\nmodule.exports = function ( name ) {\n    var link = document.createElement('link');\n\n    link.rel  = 'stylesheet';\n    link.href = 'css/' + name + '.' + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\n    document.head.appendChild(link);\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n/**\n * Layout component implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array} [config.data] array of items to add to layout\n */\nfunction Layout ( config ) {\n    var self = this;\n\n    // sanitize\n    config = config || {};\n\n    /**\n     * Index of focused child component\n     * @type {number}\n     */\n    this.focusIndex = 0;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && config.className !== undefined && typeof config.className !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    //config.className = 'layout ' + (config.className || '');\n\n    /**\n     * Component data\n     * @type {Array}\n     */\n    this.data = [];\n\n    /**\n     *  Hash map of item links\n     */\n    this.links = {};\n\n    Component.call(this, config);\n\n    this.init(config);\n\n    // add listener to move focus between children\n    this.addListener('keydown', function ( event ) {\n        switch ( event.code ) {\n            case keys.right:\n                if ( self.children.length && self.focusIndex < self.children.length - 1 ) {\n                    self.children[++self.focusIndex].focus();\n                }\n                break;\n            case keys.left:\n                if ( self.children.length && self.focusIndex > 0 ) {\n                    self.children[--self.focusIndex].focus();\n                }\n                break;\n            case keys.back:\n                // focus parent focused item if parent is layout list\n                if ( self.parent ) {\n                    self.parent.focus();\n                    if ( self.$parentItem ) {\n                        self.parent.focusItem(self.$parentItem);\n                    }\n                }\n                break;\n        }\n    });\n}\n\n\nLayout.prototype = Object.create(Component.prototype);\nLayout.prototype.constructor = Layout;\n\n// set component name\nLayout.prototype.name = 'mag-component-layout';\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var index, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( index = 0; index < data.length; index++ ) {\n        // cell value\n        item = data[index];\n        // plain text\n        if ( typeof item === 'object' ) {\n            // HTML element or component\n            if ( item instanceof Component || item instanceof HTMLElement ) {\n                data[index] = {\n                    value: item,\n                    wrap: false\n                };\n            } else {\n                data[index].wrap = true;\n            }\n        } else {\n            // wrap with defaults\n            data[index] = {\n                value: data[index],\n                wrap: true\n            };\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nLayout.prototype.init = function ( config ) {\n    var self = this,\n        data = normalize(config.data),\n        item, $wrapper, index;\n\n    // clear element if reinit\n    while (this.$node.firstChild) {\n        this.$node.removeChild(this.$node.firstChild);\n    }\n\n    this.data = data;\n\n    /**\n     * @this Component\n     */\n    function componentClickHandler () {\n        self.focusIndex = this.index;\n    }\n\n    for ( index = 0; index < data.length; index++ ) {\n        item = data[index];\n        // plain text\n        if ( typeof item.value === 'string' ) {\n            $wrapper = document.createElement('div');\n            $wrapper.textContent = item.value;\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n            if ( item.name ) {\n                this.links[item.name] = $wrapper;\n            }\n        } else if ( item.value instanceof HTMLElement ) {\n            // HTML Element\n\n            // if with wrapper\n            if ( item.wrap ) {\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value);\n                this.$node.appendChild($wrapper);\n                if ( item.name ) {\n                    this.links[item.name] = $wrapper;\n                }\n            } else {\n                // without wrapper\n                this.$node.appendChild(item.value);\n                if ( item.name ) {\n                    this.links[item.name] = item.value;\n                }\n            }\n        } else if ( item.value instanceof Component ) {\n            // component\n            // force propagate events\n            item.value.propagate = true;\n\n            // set index to current component\n            item.value.index = this.children.length;\n\n            // change layout focus index if click component\n            item.value.addListener('click', componentClickHandler);\n\n            // append component\n            if ( item.wrap ) {\n                // with wrapper\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value.$node);\n                this.$node.appendChild($wrapper);\n                this.children.push(item.value);\n                item.value.parent = this;\n                if ( item.name ) {\n                    this.links[item.name] = $wrapper;\n                }\n            } else {\n                // without wrapper\n                this.add(item.value);\n                if ( item.name ) {\n                    this.links[item.name] = item.value;\n                }\n            }\n        } else {\n            $wrapper = document.createElement('div');\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n            if ( item.name ) {\n                this.links[item.name] = $wrapper;\n            }\n        }\n    }\n};\n\n\nmodule.exports = Layout;\n","/**\n * Application geometry options.\n * Automatically loaded on application initialization and available as app.metrics.\n */\n\n'use strict';\n\nvar metrics = {\n    480: {\n        epgGrid: 6,\n        scheduleWidth: 372,\n        timeStep: 90 * 60,\n        countOfSteps: 3,\n        timeLineMargin: 250,\n        itemHeight: 38,\n        timeLineTop: 2\n    },\n\n    576: {\n        epgGrid: 9,\n        scheduleWidth: 372,\n        timeStep: 90 * 60,\n        countOfSteps: 3,\n        timeLineMargin: 250,\n        itemHeight: 38,\n        timeLineTop: 2\n    },\n\n    720: {\n        epgGrid: 9,\n        scheduleWidth: 830,\n        timeStep: 150 * 60,\n        countOfSteps: 5,\n        timeLineMargin: 350,\n        itemHeight: 48,\n        timeLineTop: 2\n    },\n\n    1080: {\n        epgGrid: 9,\n        scheduleWidth: 1245,\n        timeStep: 150 * 60,\n        countOfSteps: 5,\n        timeLineMargin: 350 * 1.5,\n        itemHeight: 48 * 1.5,\n        timeLineTop: 2\n    }\n};\n\n// public\nmodule.exports = metrics[screen.height];\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Do string substitution according to the given format.\n * http://stackoverflow.com/questions/610406/javascript-equivalent-to-printf-string-format\n *\n * @param {string} format string substitution format\n *\n * @return {string} result data\n */\nmodule.exports = function ( format ) {\n    var args = Array.prototype.slice.call(arguments, 1),\n        expr = /{(\\d+)}/g;\n\n    if ( DEVELOP ) {\n        if ( !format ) {\n            throw new Error(__filename + ': format string is empty');\n        }\n        if ( args.length === 0 ) {\n            throw new Error(__filename + ': no arguments');\n        }\n        if ( !expr.test(format) ) {\n            throw new Error(__filename + ': format string does not have substitutions: ' + format);\n        }\n    }\n\n    return format.replace(expr, function ( match, number ) {\n        return args[number] === undefined ? match : args[number];\n    });\n};\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\n\n/**\n * Shortcuts for some events to emit\n */\nmodule.exports = {\n    /**\n     * Set player viewport to full screen\n     */\n    PLAYER_SET_FULLSCREEN: 'set:fullscreen',\n\n    /**\n     * Set player viewport\n     */\n    PLAYER_SET_VIEWPORT: 'set:viewport',\n\n    /**\n     * Send exit event to player\n     */\n    PLAYER_SEND_EXIT: 'exit',\n\n    /**\n     * System event when app is hide\n     */\n    CORE_EVENT_HIDE: 'hide',\n\n    /**\n     * System events when app is show\n     */\n    CORE_EVENT_SHOW: 'show',\n\n    /**\n     * System event when app is closed\n     */\n    CORE_EVENT_EXIT: 'exit',\n\n    /**\n     * System event when we must play channel by number\n     */\n    CORE_EVENT_PLAY_CHANNEL: 'play:channel',\n\n    /**\n     * User click on right arrow\n     */\n    RIGHT_ARROW_CLICK: 'right:arrow:click',\n\n    /**\n     * User click on left arrow\n     */\n    LEFT_ARROW_CLICK: 'left:arrow:click'\n};\n","/**\n * Release application entry point.\n */\n\n'use strict';\n\nvar app  = require('mag-app'),\n    keys = require('stb-keys');\n\n\nif (  TARGET === 'android-stb' || TARGET === 'android-app' ) {\n    window.removeEventListener('keydown', require('spa-app/lib/events').keydown);\n    require('../../../helpers/longpress.js')(app, {code: keys.ok, emitCode: keys.menu});\n}\n\nrequire('cjs-polyfills/lib/array.find.index');\n\n// everything is ready\napp.once('load', function () {\n    require('spa-gettext').load({name: core.environment.language || 'en'}, function () {\n        var EpgPage = require('./modules/epg-page/index'),\n            epgpage = new EpgPage({\n                apiProvider: core.plugins.tvBackend\n            });\n\n        app.tvBack = core.plugins.tvBackend;\n        app.ui = require('./modules/ui');\n\n        // load pages\n        app.pages = {\n            main: require('./pages/main'),\n            details: require('./pages/details'),\n            epg: epgpage\n        };\n\n        // add intent handler to show app on incoming intent\n        core.addListener('intent', callback => callback(false, {}));\n\n        app.pages.main.addEpgListeners(epgpage);\n\n        // show main page\n        app.route(app.pages.main);\n    });\n});\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app    = require('spa-app/lib/core'),\n    events = require('spa-app/lib/events');\n\n\n// get instance\nwindow.core = window.parent.getCoreInstance(window, app);\n\n// shims\nrequire('stb-shim-classlist');\n\n// apply geometry\nrequire('stb-app/lib/metrics');\n\n// load sdk css\nrequire('stb-app/lib/css')('sdk');\n\n// load theme css\nrequire('./css');\n\n// load app css\nrequire('stb-app/lib/css')('app');\n\n/**\n * Specify platform name\n *\n * @type {string}\n */\napp.platform = 'mag';\n\n/**\n * Show app.\n */\napp.ready = function () {\n    // if ( this.events['show'] ) {\n    //     this.emit('show');\n    // }\n    window.core.call('app:ready');\n};\n\n\n/**\n * Exit from app.\n * Destroy all application instance.\n * If callback function provided, and callback returns boolean 'true', application will stay alive.\n *\n * @fires module:/stb/app#exit\n */\napp.exit = function () {\n    if ( app.events['exit'] ) {\n        app.emit('exit');\n    }\n\n    core.call('exit');\n};\n\n\nevents.load = function ( event ) {\n    //window.core = window.parent.getCoreInstanse(window, app);\n    document.body.setAttribute('platform', app.platform);\n\n    if ( core.ready ) {\n        if ( app.events['load'] ) {\n            // notify listeners\n            app.emit('load', {});\n        }\n    } else {\n        core.once('load', function () {\n            //core.ready = true;\n            if ( app.events[event.type] ) {\n                // notify listeners\n                app.emit(event.type, event);\n            }\n        });\n    }\n};\n\n\n// activate development mechanisms and tools\nif ( DEVELOP ) {\n    //require('stb-develop');\n    require('./develop/main');\n} else {\n    // disable context menu\n    events.contextmenu = function ( event ) {\n        event.preventDefault();\n    };\n}\n\n\n//apply DOM events\nObject.keys(events).forEach(function ( name ) {\n    window.addEventListener(name, events[name]);\n});\n\n\n// new way of string handling\n// all strings are in UTF-16\n// since stbapp 2.18\n// if ( window.gSTB && gSTB.SetNativeStringMode ) {\n//     /* eslint new-cap: 0 */\n//     gSTB.SetNativeStringMode(true);\n// }\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nmodule.exports = {\n    /**\n     * Parse the given location search string into object.\n     *\n     * @param {string} query string to parse\n     *\n     * @return {Object.<string, string>} result data\n     */\n    parse: function ( query ) {\n        var data = {};\n\n        // parse and fill the data\n        query.split('&').forEach(function ( part ) {\n            part = part.split('=');\n            // valid number on params\n            if ( part.length === 2 ) {\n                data[part[0]] = decodeURIComponent(part[1]);\n            }\n        });\n\n        return data;\n    },\n\n\n    /**\n     * Make uri query part in a string form.\n     *\n     * @param {Object} params data to stringify\n     *\n     * @return {string} query string\n     */\n    stringify: function ( params ) {\n        var data = [];\n\n        Object.keys(params).forEach(function ( name ) {\n            data.push(name + '=' + encodeURIComponent(params[name]));\n        });\n\n        return data.join('&');\n    }\n};\n","/**\n * Global application configuration.\n * Can store run-time options, API urls, paths, execution flags and so on.\n * Automatically loaded on application initialization and available as app.config.\n */\n\n'use strict';\n\n// public\nmodule.exports = {};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint-disable */\n\n'use strict';\n\n\nif ( !document.documentElement.classList ) {\n    var prototype = Array.prototype,\n        indexOf   = prototype.indexOf,\n        slice     = prototype.slice,\n        push      = prototype.push,\n        splice    = prototype.splice,\n        join      = prototype.join;\n\n    window.DOMTokenList = function ( el ) {\n        this._element = el;\n        if (el.className !== this._classCache) {\n            this._classCache = el.className;\n            if (!this._classCache) { return; }\n            var classes = this._classCache.replace(/^\\s+|\\s+$/g,'').split(/\\s+/),\n                i;\n            for (i = 0; i < classes.length; i++) {\n                push.call(this, classes[i]);\n            }\n        }\n    };\n\n    window.DOMTokenList.prototype = {\n        add: function ( token ) {\n            if(this.contains(token)) { return; }\n            push.call(this, token);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        contains: function ( token ) {\n            return indexOf.call(this, token) !== -1;\n        },\n\n        item: function ( index ) {\n            return this[index] || null;\n        },\n\n        remove: function ( token ) {\n            var i = indexOf.call(this, token);\n            if (i === -1) {\n                return;\n            }\n            splice.call(this, i, 1);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        toString: function () {\n            return join.call(this, ' ');\n        },\n\n        toggle: function ( token ) {\n            if (!this.contains(token)) {\n                this.add(token);\n            } else {\n                this.remove(token);\n            }\n            return this.contains(token);\n        }\n    };\n\n    Object.defineProperty(Element.prototype, 'classList', {\n        get: function () {\n            return new window.DOMTokenList(this);\n        }\n    });\n}\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    metrics = require('app:metrics');\n\n\n// global link\napp.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\napp.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\napp.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n\n// public\n//module.exports = app;\n","/**\n * Application geometry options.\n * Automatically loaded on application initialization and available as app.metrics.\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    480: {\n        // screen base dimension\n        height: 480,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  32,\n        availLeft:   48,\n        // project-specific vars\n        // put here ...\n        canvasPosition: {\n            x: 360,\n            y: 68,\n            width: 310,\n            height: 174\n        },\n        channelListSize: 10,\n        scheduleListSize: 8,\n        floatingPanelStep: 35,\n        floatingPanelStepPadding: 3\n    },\n\n    576: {\n        // screen base dimension\n        height: 576,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  26,\n        availLeft:   54,\n        // project-specific vars\n        // put here ...\n        canvasPosition: {\n            x: 360,\n            y: 68,\n            width: 310,\n            height: 174\n        },\n        channelListSize: 13,\n        scheduleListSize: 10,\n        floatingPanelStep: 35,\n        floatingPanelStepPadding: 3\n    },\n\n    720: {\n        // screen base dimension\n        height: 720,\n        width:  1280,\n        // safe zone margins\n        availTop:    30,\n        availBottom: 30,\n        availRight:  40,\n        availLeft:   40,\n        // project-specific vars\n        // put here ...\n        canvasPosition: {\n            x: 600,\n            y: 68,\n            width: 620,\n            height: 348\n        },\n        floatingPanelStep: 40,\n        floatingPanelStepPadding: 4,\n        channelListSize: 14,\n        scheduleListSize: 10\n    },\n\n    1080: {\n        // screen base dimension\n        height: 1080,\n        width:  1920,\n        // safe zone margins\n        availTop:    45,\n        availBottom: 45,\n        availRight:  60,\n        availLeft:   60,\n        // project-specific vars\n        // put here ...\n        canvasPosition: {\n            x: 900,\n            y: 102,\n            width: 930,\n            height: 522\n        },\n        channelListSize: 14,\n        scheduleListSize: 10,\n        floatingPanelStep: 59,\n        floatingPanelStepPadding: 6\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core'),\n    //metrics = require('app:metrics'),\n    linkCSS;\n\n\n//window.core = window.parent.getCoreInstance(window, app);\n\n\nlinkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = window.core.theme.path + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);\n\n\n// public\nmodule.exports = linkCSS;\n","/**\n * Global list of non-printable control key codes.\n *\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    backspace: 8,\n    tab:       9,\n    enter:     13,\n    escape:    27,\n    space:     32,\n    pageUp:    33,\n    pageDown:  34,\n    end:       35,\n    home:      36,\n    left:      37,\n    up:        38,\n    right:     39,\n    down:      40,\n    insert:    45,\n    // not \"delete\" because of old browsers issue\n    del:       46\n};\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar longClick = {\n        timer: 0,\n        pressed: false,\n        fired: false\n    },\n    LONG_CLICK_TIMEOUT = 600;\n\n\nmodule.exports = function ( app, config ) {\n    var keyToChange = config.code,\n        emitKeyCode = config.emitCode;\n\n\n    function emitKeydown ( event, redefine ) {\n        var page = app.activePage,\n            eventLocal = {\n                code: event.keyCode,\n                stop: false\n            },\n            eventType,\n            activeComponent;\n\n        redefine = redefine || {};\n\n        eventType = redefine.type || event.type;\n\n        // apply key modifiers\n        if ( event.ctrlKey )  { eventLocal.code += 'c'; }\n        if ( event.altKey )   { eventLocal.code += 'a'; }\n        if ( event.shiftKey ) { eventLocal.code += 's'; }\n        if ( redefine.code )  { eventLocal.code = redefine.code; }\n\n        console.log('app event: ' + eventType + ' - ' + eventLocal.code, event);\n\n        // page.activeComponent can be set to null in event handles\n        activeComponent = page.activeComponent;\n\n        // current component handler\n        if ( activeComponent && activeComponent !== page ) {\n            // component is available and not page itself\n            if ( activeComponent.events[eventType] ) {\n                // there are some listeners\n                activeComponent.emit(eventType, eventLocal, event);\n            }\n\n            // todo: bubble event recursively\n            // bubbling\n            if (\n                !eventLocal.stop\n                && activeComponent.propagate\n                && activeComponent.parent\n                && activeComponent.parent.events[event.type]\n            ) {\n                activeComponent.parent.emit(eventType, eventLocal, event);\n            }\n        }\n\n        // page handler\n        if ( !eventLocal.stop ) {\n            // not prevented\n            if ( page.events[eventType] ) {\n                // there are some listeners\n                page.emit(eventType, eventLocal, event);\n            }\n\n            // global app handler\n            if ( !event.stop ) {\n                // not prevented\n                if ( app.events[eventType] ) {\n                    // there are some listeners\n                    app.emit(eventType, eventLocal, event);\n                }\n            }\n        }\n    }\n\n    function keydownHandler ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( !page ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        if ( event.keyCode === keyToChange && !longClick.pressed ) {\n            if ( longClick.fired ) {\n                longClick.fired = false;\n            }\n            longClick.pressed = true;\n            clearTimeout(longClick.timer);\n            longClick.timer = setTimeout(function () {\n                emitKeydown(event, {code: emitKeyCode});\n                longClick.fired = true;\n\n            }, LONG_CLICK_TIMEOUT);\n        } else if ( event.keyCode !== keyToChange ) {\n            emitKeydown(event);\n        }\n    }\n\n    function keyupHandler ( event ) {\n        if ( event.keyCode === keyToChange ) {\n            if  ( !longClick.fired && longClick.pressed ) {\n                clearTimeout(longClick.timer);\n                emitKeydown(event, {type: 'keydown'});\n            }\n            longClick.pressed = false;\n        }\n    }\n\n    window.addEventListener('keydown', keydownHandler);\n    window.addEventListener('keyup', keyupHandler);\n};\n","'use strict';\n\nif ( !Array.prototype.findIndex ) {\n    Array.prototype.findIndex = function ( callback ) {\n        var size = this.length,\n            index = 0;\n\n        while ( index < size ) {\n            if ( callback(this[index], index, this) ) {\n                return index;\n            }\n\n            ++index;\n        }\n\n        return -1;\n    };\n}\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    Gettext = require('cjs-gettext'),\n    loader  = new Emitter();\n\n\n/**\n * Wrap the given data with gettext instance\n * and export methods to the global scope.\n *\n * @param {Object} [data] localization data\n *\n * @return {Gettext} gettext instance\n */\nfunction prepare ( data ) {\n    var gettext = new Gettext(data);\n\n    // make it global\n    window.gettext  = window._ = gettext.gettext;\n    window.pgettext = gettext.pgettext;\n    window.ngettext = gettext.ngettext;\n\n    return gettext;\n}\n\n\n/**\n * Main application language\n */\nloader.defaultLanguage = 'en';\n\n\n/**\n * Simple gettext implementation.\n *\n * @param {Object} config options\n * @param {string} [config.path=lang] relative path to project root\n * @param {string} config.name language name\n * @param {string} [config.ext=json] language file extension\n * @param {function} callback hook on ready\n *\n * @return {boolean} flag is ajax request was made\n */\nloader.load = function ( config, callback ) {\n    var xhr;\n\n    if ( DEVELOP ) {\n        if ( !config.name || typeof config.name !== 'string' ) {\n            throw new Error(__filename + ': config.name must be a nonempty string');\n        }\n        if ( typeof callback !== 'function' ) {\n            throw new Error(__filename + ': wrong callback type');\n        }\n    }\n\n    // defaults\n    config.ext  = config.ext  || 'json';\n    config.path = config.path || 'lang';\n\n    // is it necessary to request a localization file?\n    if ( config.name === loader.defaultLanguage ) {\n        // no\n        prepare();\n        callback(null);\n\n        return false;\n    }\n\n    // yes\n    xhr = new XMLHttpRequest();\n\n    xhr.onload = function () {\n        var json;\n\n        try {\n            json = JSON.parse(xhr.responseText);\n\n            prepare(json);\n            callback(null);\n\n            // there are some listeners\n            if ( loader.events['load'] ) {\n                // notify listeners\n                loader.emit('load');\n            }\n        } catch ( error ) {\n            xhr.onerror(error);\n        }\n    };\n\n    xhr.ontimeout = xhr.onerror = function ( error ) {\n        prepare();\n        callback(error);\n\n        // there are some listeners\n        if ( loader.events['error'] ) {\n            // notify listeners\n            loader.emit('error', error);\n        }\n    };\n\n    xhr.open('GET', config.path + '/' + config.name + '.' + config.ext, true);\n    xhr.send(null);\n\n    return true;\n};\n\n\n// public\nmodule.exports = loader;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Translations handler.\n *\n * @constructor\n *\n * @param {Object} config init parameters\n */\nfunction Gettext ( config ) {\n    var data, meta;\n\n    // sanitize\n    config   = config || {};\n    data     = config.data || {};\n    data[''] = data[''] || {};\n\n    // shortcut\n    meta = config.meta;\n\n    /**\n     * Display the native language translation of a textual message.\n     *\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.gettext = function ( msgId ) {\n        return data[''][msgId] || msgId;\n    };\n\n\n    /**\n     * The \"p\" in \"pgettext\" stands for \"particular\": fetches a particular translation of the textual message.\n     *\n     * @param {string} context message context\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.pgettext = function ( context, msgId ) {\n        return data[context] && data[context][msgId] || msgId;\n    };\n\n\n    /**\n     * Display the native language translation of a textual message whose grammatical form depends on a number.\n     *\n     * @param {string} msgId textual message in a singular form\n     * @param {string} plural textual message in a plural form\n     * @param {number} value message number\n     *\n     * @return {string} translated text\n     */\n    this.ngettext = function ( msgId, plural, value ) {\n        /* eslint no-unused-vars: 0 */\n        /* eslint no-eval: 0 */\n        /* eslint id-length: 0 */\n        var n, evalResult;\n\n        if ( DEVELOP ) {\n            if ( Number(value) !== value ) {\n                throw new Error(__filename + ': value must be a number');\n            }\n        }\n\n        if ( data && meta && data[''][msgId] ) {\n            evalResult = eval('n = ' + value + '; ' + meta.plural);\n\n            if ( typeof evalResult === 'boolean' ) {\n                evalResult = +evalResult;\n            }\n\n            // translation\n            return data[''][msgId][evalResult];\n        }\n\n        // english\n        return value === 1 ? msgId : plural;\n    };\n}\n\n\n// correct constructor name\nGettext.prototype.constructor = Gettext;\n\n\n// public\nmodule.exports = Gettext;\n","/**\n * Epg page implementation.\n *\n * @author Stoian Roman <stoyan.roman@gmail.com>\n */\n\n'use strict';\n\n/* eslint max-lines-per-function: 0 */\n\nvar Page = require('stb-component-page'),\n    // page = new Page({$node: document.getElementById('pageEpg')}),\n    // app = require('mag-app'),\n\n    tag = require('spa-dom').tag,\n    keys = require('stb-keys'),\n\n    Footer = require('mag-component-footer'),\n\n    ModalMessage = require('mag-component-modal'),\n    LayoutList = require('mag-component-layout-list'),\n    Layout = require('mag-component-layout'),\n    Scroll = require('stb-component-scrollbar'),\n\n    EpgGrid = require('./epg.grid'),\n\n    footer, actionModal, actionList,\n    headerLayout, contentLayout,\n    epgGrid,\n    scroll,\n    ICONS;\n\nif ( TARGET === 'android-app' || TARGET === 'android-stb' ) {\n    ICONS = {\n        realtime: 'theme-icon theme-icon-back',\n        record: 'theme-icon theme-icon-play'\n    };\n} else {\n    ICONS = {\n        realtime: 'theme-icon theme-icon-rc-f3',\n        record: 'theme-icon theme-icon-rc-f1'\n    };\n}\n\n\nfunction prepareChannels ( data ) {\n    var list = [],\n        items = [],\n        channel, schedule, censored,\n        index, $logo;\n\n    for ( index = 0; index < data.length; index++ ) {\n        $logo = tag('div', {className: 'logo'});\n        if ( data[index].logo ) {\n            $logo.style.backgroundImage = 'url(' + core.backend.host + data[index].logo + ')';\n        }\n\n        censored = data[index].censored || (data[index].genre && data[index].genre.censored);\n        items = [\n            {\n                className: 'number',\n                value: data[index].number.toString()\n            },\n            $logo,\n            {\n                className: 'name',\n                value: data[index].name\n            },\n            {\n                className: data[index].archive ? 'theme-icon theme-icon-timeshift disabled' : 'theme-icon hidden'\n            },\n            {\n                className: censored ? 'theme-icon theme-icon-lock disabled' : 'theme-icon hidden'\n            },\n            {\n                className: 'arrowLeft theme-epg-grid-arrow-left'\n            },\n            {\n                className: 'arrowRight theme-epg-grid-arrow-right'\n            },\n            {\n                className: 'theme-epg-grid-timeshift hidden'\n            }\n        ];\n\n        channel = new Layout({\n            focusable: false,\n            data: items,\n            className: 'channel theme-epg-grid-main',\n            events: {\n                click: function () {\n                    this.parent.emit('click');\n                }\n            }\n        });\n\n        schedule = new Layout({\n            focusable: false,\n            className: 'schedule',\n            data: [],\n            events: {\n                click: function () {\n                    this.parent.emit('click');\n                }\n            }\n        });\n\n        channel.listIndex = index;\n        schedule.listIndex = index;\n\n        list.push({\n            value: data[index],\n            items: [channel, schedule],\n            censored: censored\n        });\n    }\n\n    return list;\n}\n\n\n/**\n * Send intent ro record epg program\n */\nfunction sendRecordEpgIntent () {\n    var channel = epgGrid.$focusItem.data.value,\n        epg;\n\n    if ( epgGrid.epgLastFocused ) {\n        epg = epgGrid.epgLastFocused.data;\n    }\n\n    core.intent({\n        action: 'record',\n        data: {\n            uri: channel.url,\n            name: channel.name,\n            epgName: channel.name,\n            startTime: epg ? epg.start : epgGrid.time,\n            endTime: epg ? epg.end : epgGrid.time + epgGrid.timeStep,\n            id: channel.id,\n            pvr: {\n                server: channel.pvr,\n                local:  channel.local_pvr\n            }\n        }\n    }, function ( ) { /**/ });\n}\n\n\n/**\n * Epg page implementation.\n *\n * @constructor\n * @extends stb-component-page\n *\n * @param {Object} [config={}] - init parameters (all inherited from the parent)\n * @param {Object} config.apiProvider - api provider to get Epg\n *\n * Epg item click event.\n *\n * @event epg:click\n *\n * @type {Object}\n * @property {number} channelIndex focus channel index\n * @property {Object} epg focus epg item data\n *\n * Channel item click event.\n *\n * @event channel:click\n *\n * @type {Object}\n * @property {number} channelIndex focus channel index\n *\n * Click back button event.\n *\n * @event back\n *\n * @type {Element} focus item\n */\nfunction EpgPage ( config ) {\n    var self = this;\n\n    config.className = 'magcore-page-epg' + (config.className ? ' ' + config.className : '');\n    Page.call(this, config);\n\n    this.addListener('show', function ( event ) {\n        epgGrid.focusIndex(event.data.index);\n        epgGrid.focus();\n        epgGrid.startCheck();\n    });\n\n    this.addListener('keydown', function ( event ) {\n        switch ( event.code ) {\n            case keys.back:\n                epgGrid.stopCheck();\n                self.emit('back', epgGrid.$focusItem);\n                break;\n        }\n    });\n\n    headerLayout = new Layout({\n        focusable: false,\n        data: [\n            {\n                name: '$title',\n                className: 'title',\n                value: gettext('TV Guide')\n            },\n            {\n                name: '$current',\n                className: 'current'\n            },\n            {\n                name: '$description',\n                className: 'description'\n            }\n        ],\n        className: 'header-layout theme-epg-grid-main'\n    });\n    this.add(headerLayout);\n\n    contentLayout = new Layout({\n        focusable: false,\n        data: [\n            {\n                className: 'time'\n            },\n            {\n                name: '$timeline',\n                className: 'timeline theme-epg-grid-timeline'\n            }\n        ],\n        className: 'content'\n    });\n    this.add(contentLayout);\n\n    epgGrid = new EpgGrid({\n        className: 'epg-list',\n        size: require('./metrics').epgGrid,\n        events: {\n            'click:item': function ( event ) {\n                var item = event.$item;\n\n                if ( item.data.value.epgItems.length ) {\n                    if ( item.data.value.epgItems[item.data.value.epgFocus] ) {\n                        if ( item.data.value.archive && item.data.value.epgItems[item.data.value.epgFocus].data.archive ) {\n                            self.emit('epg:click', {channelIndex: item.index, epg: item.data.value.epgItems[item.data.value.epgFocus].data});\n                        } else {\n                            self.emit('channel:click', {channelIndex: item.index});\n                        }\n                    }\n                } else {\n                    self.emit('channel:click', {channelIndex: item.index});\n                }\n            },\n            'focus:item': function ( data ) {\n                var item = data.$curr,\n                    list = [];\n\n                data = {\n                    left: {},\n                    middle: [],\n                    label: {\n                        code: keys.menu,\n                        title: gettext('Hold OK button to open Options menu'),\n                        action: function () {\n                            actionModal.show();\n                            actionModal.focus();\n                        }\n                    }\n                };\n\n                if ( item.data.value.pvr || item.data.value.local_pvr ) {\n                    data.middle.push({\n                        code: keys.f1,\n                        title: gettext('Record'),\n                        action: sendRecordEpgIntent\n                    });\n\n                    list.push({\n                        items: [\n                            {\n                                className: ICONS.record\n                            },\n                            {\n                                className: 'title',\n                                value: gettext('Record')\n                            }\n                        ],\n                        click: function () {\n                            actionModal.hide();\n                            sendRecordEpgIntent();\n                        }\n                    });\n                }\n\n                list.push({\n                    items: [\n                        {\n                            className: ICONS.realtime\n                        },\n                        {\n                            className: 'title',\n                            value: gettext('To real time')\n                        }\n                    ],\n                    click: function () {\n                        actionModal.hide();\n                        epgGrid.goToRealTime();\n                    }\n                });\n\n                data.middle.push({\n                    code: keys.f3,\n                    title: gettext('To real time'),\n                    action: function () {\n                        epgGrid.goToRealTime();\n                    }\n                });\n                data.left = {\n                    code: keys.menu,\n                    action: function () {\n                        actionModal.show();\n                        actionModal.focus();\n                    }\n                };\n                footer.init(data);\n                actionList.init({\n                    data: list,\n                    size: list.length,\n                    focusIndex: 0\n                });\n            }\n        },\n        noData: gettext('No Channels'),\n        apiProvider: config.apiProvider,\n        focusIndex: 0,\n        scroll: scroll = new Scroll(),\n        //epg config\n        $timeBlock: contentLayout.$node.children[0],\n        $programDescription: headerLayout.links.$description,\n        $programName: headerLayout.links.$current,\n        $timeLine: contentLayout.links.$timeline\n    });\n\n    contentLayout.add(epgGrid);\n    contentLayout.add(scroll);\n\n    if ( DEVELOP ) {\n        window.epgGrid = epgGrid;\n    }\n\n    footer = new Footer({visible: false, parent: this});\n    footer.init({\n        left: {\n            code: keys.menu,\n            action: function () {\n                actionModal.show();\n                actionModal.focus();\n            }\n        },\n        middle: [\n            {\n                code: keys.f1,\n                title: gettext('Record'),\n                action: sendRecordEpgIntent\n            },\n            {\n                code: keys.f3,\n                title: gettext('To real time'),\n                action: function () {\n                    epgGrid.goToRealTime();\n                }\n            }\n        ],\n        label: {\n            code: keys.menu,\n            title: gettext('Hold OK button to open Options menu'),\n            action: function () {\n                actionModal.show();\n                actionModal.focus();\n            }\n        }\n    });\n    footer.show();\n\n    this.add(\n        actionModal = new ModalMessage({\n            title: gettext('Actions'),\n            className: 'width2x',\n            events: {\n                show: function () {\n                    footer.hide();\n                    this.children[0].focus();\n                },\n                hide: function () {\n                    footer.show();\n                    epgGrid.focus();\n                }\n            },\n            children: [\n                actionList = new LayoutList({\n                    size: 2,\n                    focusIndex: 0,\n                    cycle: true,\n                    data: [\n                        {\n                            items: [\n                                {\n                                    className: ICONS.record\n                                },\n                                {\n                                    className: 'title',\n                                    value: gettext('Record')\n                                }\n                            ],\n                            click: function () {\n                                actionModal.hide();\n                                sendRecordEpgIntent();\n                            }\n                        },\n                        {\n                            items: [\n                                {\n                                    className: ICONS.realtime\n                                },\n                                {\n                                    className: 'title',\n                                    value: gettext('To real time')\n                                }\n                            ],\n                            click: function () {\n                                actionModal.hide();\n                                epgGrid.goToRealTime();\n                            }\n                        }\n                    ],\n                    events: {\n                        keydown: function ( event ) {\n                            LayoutList.prototype.defaultEvents.keydown.call(this, event);\n                            switch ( event.code ) {\n                                case keys.menu:\n                                case keys.back:\n                                    actionModal.hide();\n                                    event.stop = true;\n                                    break;\n                            }\n                        }\n                    }\n                })\n            ]\n        })\n    );\n}\n\n\nEpgPage.prototype = Object.create(Page.prototype);\nEpgPage.prototype.constructor = EpgPage;\n\n\n/**\n * Set channel list.\n *\n * @param {Array} data - channels\n */\nEpgPage.prototype.setChannels = function ( data ) {\n    epgGrid.setData({\n        data: prepareChannels(data),\n        focusIndex: 0\n    });\n    epgGrid.updateEpg();\n};\n\n\nmodule.exports = EpgPage;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base page implementation.\n *\n * A full-screen top-level layer that can operate as an independent separate entity.\n * It is added to the document body on creation if not already linked.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n *\n * @example\n * var Page = require('stb/ui/page'),\n *     page = new Page({\n *         $node: document.getElementById(id)\n *     });\n *\n * page.addListener('show', function show () {\n *     // page is visible now\n * });\n */\nfunction Page ( config ) {\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    /**\n     * Page visibility/active state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.active = false;\n\n    /**\n     * Link to the currently active component with focus.\n     *\n     * @readonly\n     * @type {Component}\n     */\n    this.activeComponent = null;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'page ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // state flag\n    this.active = this.$node.classList.contains('active');\n\n    // correct DOM parent/child connection if necessary\n    if ( this.$node.parentNode === null ) {\n        document.body.appendChild(this.$node);\n    }\n\n    // always itself\n    this.page = this;\n}\n\n\n// inheritance\nPage.prototype = Object.create(Component.prototype);\nPage.prototype.constructor = Page;\n\n// set component name\nPage.prototype.name = 'spa-component-page';\n\n\n// public\nmodule.exports = Page;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-modal');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-modal';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base modal window implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n */\nfunction Modal ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body ) {\n            throw new Error(__filename + ': config.$body should not be provided manually');\n        }\n    }\n\n    // create centered div\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // add table-cell wrapper\n    this.$node.appendChild(document.createElement('div').appendChild(this.$body).parentNode);\n}\n\n\n// inheritance\nModal.prototype = Object.create(Component.prototype);\nModal.prototype.constructor = Modal;\n\n// set component name\nModal.prototype.name = 'spa-component-modal';\n\n\n// public\nmodule.exports = Modal;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n/**\n * Layout component implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array} [config.data] array of items to add to layout\n */\nfunction Layout ( config ) {\n    var self = this;\n\n    // sanitize\n    config = config || {};\n\n    /**\n     * Index of focused child component\n     * @type {number}\n     */\n    this.focusIndex = 0;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && config.className !== undefined && typeof config.className !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    //config.className = 'layout ' + (config.className || '');\n\n    /**\n     * Component data\n     * @type {Array}\n     */\n    this.data = [];\n\n    /**\n     *  Hash map of item links\n     */\n    this.links = {};\n\n    Component.call(this, config);\n\n    this.init(config);\n\n    // add listener to move focus between children\n    this.addListener('keydown', function ( event ) {\n        switch ( event.code ) {\n            case keys.right:\n                if ( self.children.length && self.focusIndex < self.children.length - 1 ) {\n                    self.children[++self.focusIndex].focus();\n                }\n                break;\n            case keys.left:\n                if ( self.children.length && self.focusIndex > 0 ) {\n                    self.children[--self.focusIndex].focus();\n                }\n                break;\n            case keys.back:\n                // focus parent focused item if parent is layout list\n                if ( self.parent ) {\n                    self.parent.focus();\n                    if ( self.$parentItem ) {\n                        self.parent.focusItem(self.$parentItem);\n                    }\n                }\n                break;\n        }\n    });\n}\n\n\nLayout.prototype = Object.create(Component.prototype);\nLayout.prototype.constructor = Layout;\n\n// set component name\nLayout.prototype.name = 'mag-component-layout';\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var index, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( index = 0; index < data.length; index++ ) {\n        // cell value\n        item = data[index];\n        // plain text\n        if ( typeof item === 'object' ) {\n            // HTML element or component\n            if ( item instanceof Component || item instanceof HTMLElement ) {\n                data[index] = {\n                    value: item,\n                    wrap: false\n                };\n            } else {\n                data[index].wrap = true;\n            }\n        } else {\n            // wrap with defaults\n            data[index] = {\n                value: data[index],\n                wrap: true\n            };\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nLayout.prototype.init = function ( config ) {\n    var self = this,\n        data = normalize(config.data),\n        item, $wrapper, index;\n\n    // clear element if reinit\n    while (this.$node.firstChild) {\n        this.$node.removeChild(this.$node.firstChild);\n    }\n\n    this.data = data;\n\n    /**\n     * @this Component\n     */\n    function componentClickHandler () {\n        self.focusIndex = this.index;\n    }\n\n    for ( index = 0; index < data.length; index++ ) {\n        item = data[index];\n        // plain text\n        if ( typeof item.value === 'string' ) {\n            $wrapper = document.createElement('div');\n            $wrapper.textContent = item.value;\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n            if ( item.name ) {\n                this.links[item.name] = $wrapper;\n            }\n        } else if ( item.value instanceof HTMLElement ) {\n            // HTML Element\n\n            // if with wrapper\n            if ( item.wrap ) {\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value);\n                this.$node.appendChild($wrapper);\n                if ( item.name ) {\n                    this.links[item.name] = $wrapper;\n                }\n            } else {\n                // without wrapper\n                this.$node.appendChild(item.value);\n                if ( item.name ) {\n                    this.links[item.name] = item.value;\n                }\n            }\n        } else if ( item.value instanceof Component ) {\n            // component\n            // force propagate events\n            item.value.propagate = true;\n\n            // set index to current component\n            item.value.index = this.children.length;\n\n            // change layout focus index if click component\n            item.value.addListener('click', componentClickHandler);\n\n            // append component\n            if ( item.wrap ) {\n                // with wrapper\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value.$node);\n                this.$node.appendChild($wrapper);\n                this.children.push(item.value);\n                item.value.parent = this;\n                if ( item.name ) {\n                    this.links[item.name] = $wrapper;\n                }\n            } else {\n                // without wrapper\n                this.add(item.value);\n                if ( item.name ) {\n                    this.links[item.name] = item.value;\n                }\n            }\n        } else {\n            $wrapper = document.createElement('div');\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n            if ( item.name ) {\n                this.links[item.name] = $wrapper;\n            }\n        }\n    }\n};\n\n\nmodule.exports = Layout;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base scroll bar implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {number} [config.value=0] initial thumb position\n * @param {number} [config.realSize=100] actual scroll size\n * @param {number} [config.viewSize=10] visible area size\n * @param {number} [config.type] direction\n *\n * @example\n * var ScrollBar = require('stb/ui/scroll.bar'),\n *     scrollBar = new ScrollBar({\n *         viewSize: 5,\n *         realSize: 25,\n *         events: {\n *             done: function () {\n *                 debug.log('ScrollBar: done');\n *             },\n *             change: function ( data ) {\n *                 debug.log('ScrollBar: change to ' + data.curr + ' from ' + data.prev);\n *             }\n *         }\n *     });\n */\nfunction ScrollBar ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Visible area size.\n     *\n     * @type {number}\n     */\n    this.viewSize = 10;\n\n    /**\n     * Scroll area actual height or width (if scroll is horizontal).\n     *\n     * @type {number}\n     */\n    this.realSize = 100;\n\n    /**\n     * Scroll thumb position.\n     *\n     * @type {number}\n     */\n    this.value = 0;\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Geometry of the scroll thumb element.\n     *\n     * @type {ClientRect}\n     */\n    this.thumbRect = null;\n\n    /**\n     * Geometry of the scroll track element.\n     *\n     * @type {ClientRect}\n     */\n    this.trackRect = null;\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'scrollBar ' + (config.className || '');\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // insert thumb line\n    this.$thumb = this.$body.appendChild(document.createElement('div'));\n\n    // correct CSS class name\n    this.$thumb.className = 'thumb';\n\n    // component setup\n    this.init(config);\n}\n\n\n// inheritance\nScrollBar.prototype = Object.create(Component.prototype);\nScrollBar.prototype.constructor = ScrollBar;\n\n// set component name\nScrollBar.prototype.name = 'spa-component-scrollbar';\n\nScrollBar.prototype.TYPE_VERTICAL   = 1;\nScrollBar.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Init or re-init realSize/viewSize/value parameters.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nScrollBar.prototype.init = function ( config ) {\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // set actual scroll size\n    if ( config.realSize !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.realSize) !== config.realSize ) {\n                throw new Error(__filename + ': config.realSize value must be a number');\n            }\n        }\n\n        // apply\n        this.realSize = config.realSize;\n    }\n\n    // set visible area size\n    if ( config.viewSize !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.viewSize) !== config.viewSize ) {\n                throw new Error(__filename + ': config.viewSize value must be a number');\n            }\n            if ( config.viewSize < 0 ) {\n                throw new Error(__filename + ': config.viewSize value must be greater than 0');\n            }\n        }\n\n        // apply\n        this.viewSize = config.viewSize;\n    }\n\n    // show or hide thumb\n    if ( this.viewSize >= this.realSize ) {\n        this.$thumb.classList.add('hidden');\n    } else {\n        this.$thumb.classList.remove('hidden');\n    }\n\n    // set thumb position\n    if ( config.value !== undefined ) {\n        // apply\n        this.scrollTo(config.value);\n    }\n\n    // set thumb size\n    if ( this.type === this.TYPE_VERTICAL ) {\n        this.$thumb.style.height = (this.viewSize / this.realSize * 100) + '%';\n    } else {\n        this.$thumb.style.width = (this.viewSize / this.realSize * 100) + '%';\n    }\n\n    // geometry\n    this.thumbRect = this.$thumb.getBoundingClientRect();\n    this.trackRect = this.$node.getBoundingClientRect();\n};\n\n\n/**\n * Set position of the given value.\n * Does nothing in case when scroll is in the end and passed value is more than scroll bar length.\n *\n * @param {number} value new value to set\n * @return {boolean} operation result\n *\n * @fires module:stb/ui/scroll.bar~ScrollBar#done\n * @fires module:stb/ui/scroll.bar~ScrollBar#change\n */\nScrollBar.prototype.scrollTo = function ( value ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(value) !== value ) {\n            throw new Error(__filename + ': value must be a number');\n        }\n        if ( this.realSize > this.viewSize && value > this.realSize - this.viewSize ) {\n            throw new Error(__filename + ': value is greater than this.realSize-this.viewSize');\n        }\n        if ( value < 0 ) {\n            throw new Error(__filename + ': value is less then 0');\n        }\n    }\n\n    // value has changed\n    if ( this.value !== value ) {\n        // track and thumb geometry was not set\n        if ( this.thumbRect.height === 0 || this.thumbRect.width === 0 ) {\n            // apply\n            this.trackRect = this.$node.getBoundingClientRect();\n            this.thumbRect = this.$thumb.getBoundingClientRect();\n        }\n\n        // set scroll bar width\n        if ( this.type === this.TYPE_VERTICAL ) {\n            this.$thumb.style.marginTop = ((this.trackRect.height - this.thumbRect.height) * value / (this.realSize - this.viewSize)) + 'px';\n        } else {\n            this.$thumb.style.marginLeft = ((this.trackRect.width - this.thumbRect.width) * value / (this.realSize - this.viewSize)) + 'px';\n        }\n\n        // there are some listeners\n        if ( this.events['change'] ) {\n            /**\n             * Update scroll value.\n             *\n             * @event module:stb/ui/scroll.bar~ScrollBar#change\n             *\n             * @type {Object}\n             * @property {number} prev old/previous scroll value\n             * @property {number} curr new/current scroll value\n             */\n            this.emit('change', {curr: value, prev: this.value});\n        }\n\n        // is it the end?\n        if ( value >= this.realSize ) {\n            value = this.realSize;\n\n            // there are some listeners\n            if ( this.events['done'] ) {\n                /**\n                 * Set scroll to its maximum value.\n                 *\n                 * @event module:stb/ui/scroll.bar~ScrollBar#done\n                 */\n                this.emit('done');\n            }\n        }\n\n        // set new value\n        this.value = value;\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = ScrollBar;\n","/**\n * Epg list implementation.\n *\n * @author Stoian Roman <stoyan.roman@gmail.com>\n */\n\n'use strict';\n\n/* eslint max-lines-per-function: 0 */\n\nvar dom = require('spa-dom'),\n    keys = require('stb-keys'),\n\n    Layout     = require('mag-component-layout'),\n    LayoutList = require('mag-component-layout-list'),\n    metrics    = require('./metrics'),\n\n    fullMonthNames = [\n        gettext('January'),\n        gettext('February'),\n        gettext('March'),\n        gettext('April'),\n        gettext('May'),\n        gettext('June'),\n        gettext('July'),\n        gettext('August'),\n        gettext('September'),\n        gettext('October'),\n        gettext('November'),\n        gettext('December')\n    ],\n    fullDaysOfWeek = [\n        gettext('Sunday '),\n        gettext('Monday '),\n        gettext('Tuesday '),\n        gettext('Wednesday '),\n        gettext('Thursday '),\n        gettext('Friday '),\n        gettext('Saturday ')\n    ];\n\n\nfunction EpgGrid ( config ) {\n    this.scheduleWidth = metrics.scheduleWidth;\n\n    /**\n     * Link to the object for limited scopes.\n     *\n     * @type {DVBList}\n     */\n    this.time = null;\n    this.day = 0;\n    this.timeStep = metrics.timeStep;\n    this.countOfSteps = metrics.countOfSteps;\n    this.scheduleBlock = this.scheduleWidth / this.timeStep;\n    this.step = this.timeStep / this.countOfSteps;\n\n    this.timeLineMargin = metrics.timeLineMargin;\n\n    this.itemHeight = metrics.itemHeight;\n\n    this.timeLineTop = metrics.timeLineTop;\n\n    this.$timeBlock = config.$timeBlock;\n    this.$programDescription = config.$programDescription;\n    this.$programName = config.$programName;\n    this.$timeLine = config.$timeLine;\n\n    this.$timeLine.appendChild(dom.tag('div', {className: 'timemark theme-epg-grid-timemark'}));\n\n    this.timers = {};\n    this.internal = {};\n    // 0- real time 1- in focus\n    this.epgMode = 0;\n    this.epgFocusTime = null;\n    this.epgLastFocused = null;\n    if ( !config.events ) {\n        config.events = {};\n    }\n    if ( !config.events.keydown ) {\n        config.events.keydown = function ( event ) {\n            switch ( event.code ) {\n                case keys.right:\n                case keys.left:\n                    this.moveEpg(event.code);\n                    break;\n                case keys.up:\n                case keys.down:\n                case keys.pageUp:\n                case keys.pageDown:\n                case keys.home:\n                case keys.end:\n                    // cursor move only on arrow keys\n                    this.move(event.code);\n                    break;\n                case keys.enter:\n                    // there are some listeners\n                    event.stop = true;\n                    this.pressOk();\n                    break;\n            }\n        };\n    }\n    this.apiProvider = config.apiProvider;\n\n    LayoutList.call(this, config);\n}\n\n\nEpgGrid.prototype = Object.create(LayoutList.prototype);\nEpgGrid.prototype.constructor = EpgGrid;\n\n\nEpgGrid.prototype.renderItem = function ( $item, config ) {\n    var self = this,\n        layout, domLinks, layoutConfig;\n\n    while ( $item.firstChild ) {\n        $item.removeChild($item.firstChild);\n    }\n\n    layoutConfig = {\n        focusable: false,\n        data: config.items\n    };\n\n    if ( config.className ) {\n        layoutConfig.className = config.className;\n    }\n\n    if ( config.events ) {\n        layoutConfig.events = config.events;\n    } else {\n        layoutConfig.events = {\n            click: function () {\n                self.focusItem($item);\n                self.pressOk();\n            }\n        };\n    }\n\n    layout = new Layout(layoutConfig);\n\n    $item.appendChild(layout.$node);\n    $item.layout = layout;\n    layout.parent = this;\n    layout.$parentItem = $item;\n\n    domLinks = config.items[0].value.$node.children;\n\n    $item.censored = config.censored;\n\n    // on init list save needed links\n    $item.domLinks = {\n        $number: domLinks[0],\n        $icon: domLinks[1],\n        $title: domLinks[2],\n        $archiveIcon: domLinks[3],\n        $lockIcon: domLinks[4],\n        $archiveLine: domLinks[7]\n    };\n\n    if ( config.click ) {\n        this.handlers[$item.index] = config.click;\n    }\n    // item is rendered\n    $item.ready = true;\n    // }\n    $item.value = config.value || {};\n    if ( config.value.archive ) {\n        config.value.$archiveLine = $item.domLinks.$archiveLine;\n        $item.domLinks.$archiveLine.classList.remove('hidden');\n    } else {\n        config.value.$archiveLine = null;\n        $item.domLinks.$archiveLine.classList.add('hidden');\n    }\n    if ( config ) {\n        this.fillItem($item, config);\n    }\n};\n\n\nEpgGrid.prototype.setData = function ( config ) {\n    LayoutList.prototype.setData.call(this, config);\n\n    if ( this.data.length < this.size ) {\n        this.$timeLine.style.height = (this.itemHeight * this.data.length) + this.timeLineTop + 'px';\n    } else {\n        this.$timeLine.style.height = (this.itemHeight * this.size) + this.timeLineTop + 'px';\n    }\n};\n\n\nEpgGrid.prototype.moveEpg = function ( code ) {\n    switch ( code ) {\n        case keys.left:\n            this.subPrev();\n            break;\n        case keys.right:\n            this.subNext();\n            break;\n    }\n};\n\n\nEpgGrid.prototype.pressOk = function () {\n    if ( this.events['click:item'] && this.$focusItem ) {\n        // notify listeners\n        this.emit('click:item', {$item: this.$focusItem, event: event});\n    }\n};\n\n\n/**\n * on Focus event.\n *\n * @param {Object} event - event data\n */\nEpgGrid.prototype.onFocus = function ( event ) {\n    var self = this,\n        focus = 0,\n        index, data;\n\n    this.repositionTimeLine();\n    if ( this.timers.onFocus ) {\n        clearTimeout(this.timers.onFocus);\n    }\n    if ( this.epgMode ) {\n        this.timers.onFocus = setTimeout(function () {\n            data = event.$curr.data;\n            if ( data.value.epgItems.length ) {\n                for ( index = 0; index < data.value.epgItems.length; index++ ) {\n                    if ( self.epgFocusTime >= data.value.epgItems[index].data.start && self.epgFocusTime < data.value.epgItems[index].data.end ) {\n                        focus = index;\n                        break;\n                    }\n                }\n                data.value.epgFocus = focus;\n                self.focusEpg(data.value.epgItems[data.value.epgFocus], true);\n            } else {\n                if ( self.epgLastFocused ) {\n                    self.epgLastFocused.classList.remove('theme-epg-grid-focused');\n                    self.epgLastFocused.focused = false;\n                }\n                self.epgLastFocused = null;\n            }\n        }, core.environment.onFocusDebounceTimeout);\n\n    }\n};\n\n\nEpgGrid.prototype.onOverflow = function () {\n    var self = this;\n\n    if ( this.timers.onOverflow ) {\n        clearTimeout(this.timers.onOverflow);\n    }\n    this.timers.onOverflow = setTimeout(function () {\n        self.updateEpg();\n    }, core.environment.onFocusDebounceTimeout);\n};\n\n\nEpgGrid.prototype.init = function ( config ) {\n    LayoutList.prototype.init.call(this, config);\n\n    this.addListener('focus:item', this.onFocus);\n    this.addListener('move:view', this.onOverflow);\n};\n\n\nEpgGrid.prototype.startCheck = function () {\n    this.checkingTime();\n};\n\n\nEpgGrid.prototype.stopCheck = function () {\n    var key;\n\n    for ( key in this.internal ) {\n        clearInterval(this.internal[key]);\n    }\n\n    for ( key in this.timers ) {\n        clearTimeout(this.timers[key]);\n    }\n};\n\n\nEpgGrid.prototype.fillItem = function ( $item, config ) {\n    var width = 0,\n        epgItems = [],\n        before = this.time,\n        margin = 2,\n        $epgItem, index, data;\n\n    dom.clear(config.items[1].value.$node);\n\n    if ( (!$item.censored || core.accessControl.state) && config.value.epgGrid && config.value.epgGrid.length ) {\n        for ( index = 0; index < config.value.epgGrid.length; index++ ) {\n            data = config.value.epgGrid[index];\n            if ( data.start >= this.time + this.timeStep - 60 ) {\n                break;\n            }\n\n            if ( data.end > this.time ) {\n                if ( data.start >= before + 60 ) {\n                    $epgItem = dom.tag('div', {className: 'program theme-epg-grid-noData'},\n                        dom.tag('div', {className: 'text', data: {focusable: false}}, gettext('No data')));\n\n                    width = (data.start - before) * this.scheduleBlock;\n                    width = Math.floor(width) - margin;\n                    $epgItem.children[0].style.width = width + 'px';\n                    dom.add(config.items[1].value.$node, $epgItem);\n                    before = data.start;\n                }\n                data.focusable = true;\n\n                $epgItem = dom.tag('div', {className: 'program theme-epg-grid-default'},\n                    dom.tag('div', {className: 'text', data: data}, data.title));\n\n                if ( data.end < this.time + this.timeStep ) {\n                    width = (data.end - before) * this.scheduleBlock;\n                } else {\n                    width = (this.time + this.timeStep - before) * this.scheduleBlock;\n                }\n                width = Math.floor(width) - margin;\n                before = data.end;\n                $epgItem.children[0].style.width = width + 'px';\n                $epgItem.data = data;\n                dom.add(config.items[1].value.$node, $epgItem);\n                epgItems.push($epgItem);\n            }\n            config.value.epgItems = epgItems;\n        }\n        if ( before < this.time + this.timeStep ) {\n            width = (this.time + this.timeStep - before) * this.scheduleBlock;\n            if ( width > 2 * margin ) {\n                $epgItem = dom.tag('div', {className: 'program theme-epg-grid-noData'},\n                    dom.tag('div', {className: 'text', data: {focusable: false}}, gettext('No data')));\n                width = Math.floor( width ) - margin;\n                $epgItem.children[0].style.width = width + 'px';\n                dom.add(config.items[1].value.$node, $epgItem);\n            }\n        }\n    } else {\n        $epgItem = dom.tag('div', {className: 'program theme-epg-grid-noData'},\n            dom.tag('div', {className: 'text', data: {focusable: false}}, gettext('No data')));\n        $epgItem.children[0].style.width = this.scheduleWidth - margin + 'px';\n        dom.add(config.items[1].value.$node, $epgItem);\n        config.value.epgItems = [];\n    }\n};\n\n\nEpgGrid.prototype.checkCurrent = function () {\n    var self = this,\n        $item = this.$focusItem,\n        time = Date.now() / 1000,\n        data, left, check,\n        index, child;\n\n    function checkData ( epgItem, focusIndex ) {\n        if ( check && epgItem.data && time > epgItem.data.start && time < epgItem.data.end ) {\n            epgItem.classList.add('theme-epg-grid-current');\n            check = false;\n            if ( !self.epgMode && child === $item ) {\n                self.focusEpg(epgItem, true);\n                $item.data.value.epgFocus = focusIndex;\n            }\n        } else {\n            epgItem.classList.remove('theme-epg-grid-current');\n            if ( !self.epgMode && self.$body.children[focusIndex] === $item ) {\n                epgItem.classList.remove('theme-epg-grid-focused');\n            }\n        }\n    }\n\n    for ( index = 0; index < this.$body.children.length; index++ ) {\n        check = true;\n        child = this.$body.children[index];\n        if ( child.data && child.data.value.epgItems && child.data.value.epgItems.length ) {\n            data = child.data.value.epgItems;\n            data.forEach(checkData);\n        }\n    }\n\n    if ( $item && $item.data.value.$archiveLine ) {\n        if ( $item.data.value.epgGrid && $item.data.value.epgGrid.length ) {\n            if ( (this.time + this.timeStep) > time ) {\n                if ( time >= this.time ) {\n                    left = Math.ceil((time - this.time) * this.scheduleBlock);\n                    $item.data.value.$archiveLine.style.width = left + 'px';\n                    $item.data.value.$archiveLine.style.display = '';\n                } else {\n                    $item.data.value.$archiveLine.style.display = 'none';\n                }\n            } else {\n                $item.data.value.$archiveLine.style.width = this.scheduleWidth + 'px';\n            }\n        } else {\n            $item.data.value.$archiveLine.style.display = 'none';\n        }\n    }\n};\n\n\nEpgGrid.prototype.setCurrentProgram = function () {\n    if ( this.epgLastFocused && this.epgLastFocused.data ) {\n        this.$programDescription.innerText = this.epgLastFocused.data.description || '';\n        this.$programName.innerText = this.epgLastFocused.data.title || '';\n    } else {\n        this.$programDescription.innerText = '';\n        this.$programName.innerText = '';\n    }\n};\n\n\nEpgGrid.prototype.repositionTimeLine = function () {\n    var newTime = new Date(),\n        left = 0,\n        time = Math.ceil(newTime.getTime() / 1000);\n\n    if ( time >= this.time && this.time + this.timeStep > time ) {\n        left = Math.ceil((time - this.time) / this.timeStep * this.scheduleWidth);\n        left += this.timeLineMargin;\n        this.$timeLine.style.display = 'block';\n        this.$timeLine.style.left = left + 'px';\n    } else {\n        this.$timeLine.style.display = 'none';\n    }\n    this.checkCurrent();\n};\n\n\n/**\n * Checking EPG in time.\n *\n * @param {boolean} state - epgMode\n */\nEpgGrid.prototype.epgModeChange = function ( state ) {\n    var self = this;\n\n    this.epgMode = !!state;\n\n    if ( this.timers.epgModeChange ) {\n        clearTimeout(this.timers.epgModeChange);\n    }\n\n    if ( this.epgMode ) {\n        this.timers.epgModeChange = setTimeout(function () {\n            self.goToRealTime();\n        }, 3 * 60 * 1000);\n    }\n};\n\n\n/**\n * Checking EPG in time.\n */\nEpgGrid.prototype.checkingTime = function () {\n    var newTime = this.getStartTime(),\n        self = this;\n\n    if ( this.internal.checkingTime ) {\n        clearInterval(this.internal.checkingTime);\n    }\n    if ( this.epgMode ) {\n\n        return;\n    }\n\n    if ( this.time !== newTime ) {\n        this.time = newTime;\n    }\n    this.initTimeBlock();\n    // this.repositionTimeLine();\n    this.internal.checkingTime = setInterval(function () {\n        if ( !self.epgMode  ) {\n            newTime = self.getStartTime();\n            if ( self.time !== newTime ) {\n                self.time = newTime;\n                self.initTimeBlock();\n            }\n        }\n        self.repositionTimeLine();\n    }, 60 * 1000);\n};\n\n\nEpgGrid.prototype.initTimeBlock = function ( last, first ) {\n    var time, dayName, min,\n        hour, month, day,\n        ms, dateText, index;\n\n    if ( this.time === null ) {\n        this.time = this.getStartTime();\n    }\n\n    ms = this.time - (this.step / 2);\n    time = new Date(ms * 1000);\n    dayName = fullDaysOfWeek[time.getDay()];\n    min = time.getMinutes();\n    hour = time.getHours();\n    month = time.getMonth() + 1;\n    day = time.getDate();\n    dateText = dayName + ', ' + day + ' ' + fullMonthNames[month - 1];\n\n    dom.clear(this.$timeBlock);\n    dom.add(this.$timeBlock, dom.tag('div', {className: 'date theme-epg-grid-date'}, dateText));\n    for ( index = 2; index <= 2 * this.countOfSteps; index += 2 ) {\n        time.setTime((ms + (index * this.step / 2)) * 1000);\n        min = time.getMinutes();\n        hour = time.getHours();\n        dom.add(this.$timeBlock, dom.tag('div', {className: 'hours theme-epg-grid-date ' + (min === 30 ? 'halfhour' : 'hour')},\n            (hour < 10 ? '0' + hour : hour) + ':' + (min < 10 ? '0' + min : min),\n            dom.tag('div', {className: 'hourmark theme-epg-grid-hourmark'})));\n    }\n    this.updateEpg(last, first);\n};\n\n\n/**\n * Get start time.\n *\n * @return {number} start time\n */\nEpgGrid.prototype.getStartTime = function () {\n    var date = new Date(),\n        time, delta, sec;\n\n    sec = Math.floor(date.getTime() / 1000);\n    time = date.getMinutes() * 60;\n    delta = time % (2 * this.step);\n\n    if ( delta < this.step ) {\n        return sec - delta - (this.step / 2);\n    }\n\n    return  sec - delta + (this.step / 2);\n};\n\n\nEpgGrid.prototype.updateEpg = function ( last, first ) {\n    var channelList = [],\n        config = {},\n        self = this,\n        index, childrenLength, dataLength;\n\n    for ( index = 0; index < this.$body.children.length; index++ ) {\n        if ( this.$body.children[index].data ) {\n            channelList.push(this.$body.children[index].data.value);\n        }\n    }\n\n    if ( channelList.length === 0 ) {\n        return;\n    }\n\n    config.channels = channelList;\n    if ( !this.time ) {\n        this.time = this.getStartTime();\n    }\n    config.from = this.time * 1000;\n    config.to = config.from + (this.timeStep * 1000);\n    if ( this.request ) {\n        this.request.abort();\n    }\n\n    childrenLength = this.$body.children.length;\n    dataLength = this.data.length;\n    for ( index = 0; index < childrenLength; index++ ) {\n        if ( this.$body.children[index].index < dataLength ) {\n            dom.clear(this.data[this.$body.children[index].index].items[1].value.$node);\n        } else {\n            break;\n        }\n    }\n\n    this.request = this.apiProvider.getChannelsEpg(config, function ( error, data ) {\n        if ( !error ) {\n            for ( index = 0; index < channelList.length; index++ ) {\n                if ( data[channelList[index].id] ) {\n                    channelList[index].epgGrid = data[channelList[index].id];\n                } else {\n                    channelList[index].epgGrid = null;\n                }\n            }\n        }\n        for ( index = 0; index < self.$body.children.length; index++ ) {\n            if ( self.$body.children[index].data ) {\n                self.fillItem(self.$body.children[index], self.data[self.$body.children[index].index]);\n            }\n        }\n        self.checkCurrent();\n        if ( self.epgMode ) {\n            data = self.$focusItem.data;\n            if ( data.value.epgItems.length ) {\n                if ( last ) {\n                    data.value.epgFocus = data.value.epgItems.length - 1;\n                } else if ( first ) {\n                    data.value.epgFocus = 0;\n                } else {\n                    data.value.epgFocus = 0;\n                    for ( index = 0; index < data.value.epgItems.length; index++ ) {\n                        if ( self.epgFocusTime >= data.value.epgItems[index].data.start && self.epgFocusTime < data.value.epgItems[index].data.end ) {\n                            data.value.epgFocus = index;\n                            break;\n                        }\n                    }\n                }\n                self.focusEpg(data.value.epgItems[data.value.epgFocus], true);\n            } else {\n                self.focusEpg(self.epgLastFocused, false);\n            }\n        }\n    });\n    this.repositionTimeLine();\n};\n\n\n/**\n * Handle focus state for the given item.\n * Also removes the focus from the previously focused item.\n *\n * @param {Node} item - the element to be processed\n * @param {boolean} [state=true] - flag of the state\n */\nEpgGrid.prototype.focusEpg = function ( item, state ) {\n    state = !!state;\n\n    // valid html element given, enabled and visible\n    if ( item.focused !== state ) {\n        if ( state ) {\n            if ( this.epgLastFocused ) {\n                this.epgLastFocused.classList.remove('theme-epg-grid-focused');\n                this.epgLastFocused.focused = false;\n\n            }\n            item.classList.add('theme-epg-grid-focused');\n            item.focused = true;\n            this.epgLastFocused = item;\n            this.epgFocusTime = item.data.start;\n            this.setCurrentProgram();\n            // this.repositionTimeLine();\n        } else {\n            item.classList.remove('theme-epg-grid-focused');\n            item.focused = false;\n            if ( this.epgLastFocused === item ) {\n                this.epgLastFocused = null;\n                this.epgFocusTime = this.time;\n                this.setCurrentProgram();\n                // this.repositionTimeLine();\n            }\n        }\n    }\n};\n\n\n/**\n * Set focus on next sub element.\n */\nEpgGrid.prototype.subNext = function () {\n    var data = this.$focusItem.data;\n\n    this.epgModeChange(true);\n    if ( data.value.epgItems.length && data.value.epgFocus + 1 < data.value.epgItems.length ) {\n        data.value.epgFocus++;\n        this.focusEpg(data.value.epgItems[data.value.epgFocus], true);\n    } else {\n        this.time += this.timeStep - this.step;\n        this.initTimeBlock(false, true);\n    }\n};\n\n\n/**\n * Set focus on prev sub element,\n */\nEpgGrid.prototype.subPrev = function () {\n    var data = this.$focusItem.data;\n\n    this.epgModeChange(true);\n    if ( data.value.epgItems.length > 0 && data.value.epgFocus > 0 ) {\n        data.value.epgFocus--;\n        this.focusEpg(data.value.epgItems[data.value.epgFocus], true);\n    } else {\n        this.time -= this.timeStep - this.step;\n        this.initTimeBlock(true);\n    }\n};\n\n\n/**\n * Go to real time position.\n */\nEpgGrid.prototype.goToRealTime = function () {\n    var time = this.getStartTime();\n\n    if ( this.epgMode ) {\n        this.epgModeChange(false);\n        if ( this.time !== time ) {\n            this.time = time;\n            this.initTimeBlock();\n        }\n    }\n};\n\n\nmodule.exports = EpgGrid;\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar app                  = require('mag-app'),\n    icons                = require('magcore-theme/icons'),\n    format               = require('cjs-format'),\n    $img                 = document.createElement('img'),\n    $pageMain            = document.getElementById('pageMain'),\n    $canvas              = document.getElementById('pageMainCanvas'),\n    $censoredPlaceholder = document.getElementById('previewCensoredPlaceholder'),\n    $channelsListTitle   = document.getElementById('channelListTitle'),\n    $channelsListCount   = document.getElementById('channelsCount'),\n    $currentEpgWrapper   = document.getElementById('pageMainCurrentChannelEpg'),\n    $currentEpg          = $currentEpgWrapper.children[0],\n    $currentEpgCensored  = $currentEpgWrapper.children[1],\n    $channelListNoData   = document.getElementById('channelListNoDataWrapper'),\n    ctx                  = $canvas.getContext('2d'),\n    coords               = app.metrics.canvasPosition,\n    $coloredDiv           = document.createElement('div'),\n    $styleTag             = document.createElement('style'),\n    $rightArrow          = document.createElement('div'),\n    $leftArrow           = document.createElement('div'),\n    $lockIcon            = document.createElement('span'),\n    styledTextColor;\n    // imgUrl;\n\nconst {\n    RIGHT_ARROW_CLICK,\n    LEFT_ARROW_CLICK\n} = require('./events');\n\n\nfunction getElementStyles ( $element ) {\n    var sheets = document.styleSheets,\n        styleLength = document.styleSheets.length,\n        nodeName = $element.nodeName.toLowerCase(),\n        styles = [],\n        styleIndex = 0,\n        rules, ruleIndex, ruleLength;\n\n    while ( styleIndex < styleLength ) {\n        rules = sheets[styleIndex].rules || sheets[styleIndex].cssRules;\n\n        // window.top.console.log(styleIndex + ' - styleIndex');\n        ruleIndex = 0;\n        ruleLength = rules.length;\n\n        while ( ruleIndex < ruleLength ) {\n            // window.top.console.log(ruleIndex + ' - ruleIndex');\n            // window.top.console.log('selector finded?');\n            // window.top.console.log(nodeName.indexOf(rules[ruleIndex].selectorText) !== -1);\n            if ( nodeName.indexOf(rules[ruleIndex].selectorText) !== -1 ) {\n                // window.top.console.log('push style ' + rules[ruleIndex].style.cssText);\n                styles.push(rules[ruleIndex].style);\n            }\n\n            ++ruleIndex;\n            // window.top.console.log(ruleIndex + ' - ruleIndex2');\n        }\n\n        ++styleIndex;\n    }\n\n    // window.top.console.log('return styles ' + styles.length);\n    return styles;\n}\n\n\nfunction normalizeLink ( link ) {\n    return link.replace('url(\"', '').replace('\")', '')\n        .replace('url', '').replace('(', '').replace(')', '');\n}\n\n\nfunction detectAndroidDevice () {\n    return core.device && core.device.name\n        && ['emulator', 'emulator_stb', 'AndroidAPP', 'AndroidSTB'].indexOf(core.device.name) > -1;\n}\n\nfunction resolveImage ( url ) {\n    // canvas\n    // .replace('url(\"', '').replace('\")', '')\n    // .replace('url', '').replace('(', '').replace(')', '');\n\n    // window.top.console.log('bgImage: ' + window.getComputedStyle(document.body).backgroundImage);\n\n    // floating\n    $img.onload = function () {\n        var base64ImageString;\n\n        // window.top.console.log('image onload');\n\n        ctx.drawImage($img, 0, 0);\n        ctx.clearRect(coords.x, coords.y, coords.width, coords.height);\n\n        if ( $canvas.toDataURL && detectAndroidDevice() ) {\n            base64ImageString = $canvas.toDataURL();\n            ctx.clearRect(0, 0, app.metrics.width, app.metrics.height);\n            $canvas.style.backgroundImage = 'url(' + base64ImageString + ')';\n        }\n\n        $canvas.appendChild($img);\n\n        module.exports.canvasLoaded = true;\n\n        app.emit('background:load');\n    };\n\n    $img.onerror = function ( ) {\n        var styles = getElementStyles(document.body),\n            index = 0;\n\n        while ( index < styles.length ) {\n            if ( styles[index].backgroundImage ) {\n                resolveImage(normalizeLink(styles[index].backgroundImage));\n                break;\n            }\n\n            ++index;\n        }\n    };\n\n    $img.src = url;\n}\n\n// huck to get color from class\n// when backend will supports new way of json wars should replace with core.theme[varName] to get color;\n$coloredDiv.className = 'theme-styled-text';\ndocument.body.appendChild($coloredDiv);\nstyledTextColor = window.getComputedStyle($coloredDiv).color;\n//damn hardcode css style:)\n$styleTag.innerText = '.classic-tv-special-bg {' +\n    'background-color:' + styledTextColor + '}\\n' +\n    '#pageDetails .mag-component-list.right-side .item.focus div .container {' +\n    'background-color: ' + styledTextColor + ';}\\n' +\n    '#pageDetails .mag-component-list.right-side.focus .item.focus div .text {' +\n    'color: ' + styledTextColor + ';}';\n\ndocument.head.appendChild($styleTag);\n$channelListNoData.children[0].innerText = gettext('No channels');\n\n$rightArrow.className = 'container-arrow-right';\n$rightArrow.innerText = '\\\\\\n/';\n\n$leftArrow.className = 'container-arrow-left';\n$leftArrow.innerText = '/\\n\\\\';\n\n$pageMain.appendChild($rightArrow);\n$pageMain.appendChild($leftArrow);\n\n$rightArrow.addEventListener('click', function () {\n    app.emit(RIGHT_ARROW_CLICK);\n});\n\n$leftArrow.addEventListener('click', function () {\n    app.emit(LEFT_ARROW_CLICK);\n});\n\n$canvas.width = app.metrics.width;\n$canvas.height = app.metrics.height;\n// censored placeholder\n$censoredPlaceholder.className += ' ' + icons.LOCK;\n$lockIcon.className = icons.LOCK;\n\n$currentEpgCensored.appendChild($lockIcon);\n$currentEpgCensored.innerHTML += gettext('Channel is censored');\n\nresolveImage(normalizeLink(window.getComputedStyle(document.body).backgroundImage));\n\nmodule.exports = {\n    /**\n     * State is app ui in preview mode\n     */\n    preview: true,\n\n    /**\n     * Show / hide preview mode for main page\n     *\n     * @param {boolean} state to show preview mode\n     */\n    showPreview: function ( state ) {\n        if ( state ) {\n            document.body.classList.add('background-off');\n            $pageMain.classList.remove('page-full-list');\n        } else {\n            document.body.classList.remove('background-off');\n            $pageMain.classList.add('page-full-list');\n        }\n        this.preview = !!state;\n    },\n\n    /**\n     * Show placeholder for parent locked channels\n     */\n    showCensoredPlaceholder: function () {\n        $censoredPlaceholder.classList.remove('hidden');\n        $currentEpgWrapper.classList.add('censored');\n    },\n\n    /**\n     * Hide placeholder for censored channels\n     */\n    hideCensoredPlaceholder: function () {\n        $censoredPlaceholder.classList.add('hidden');\n        $currentEpgWrapper.classList.remove('censored');\n\n    },\n\n    colors: {\n        SPECIAL_BACKGROUND: styledTextColor\n    },\n\n    updateFloatingPanel: require('./floating.panel')({specialColor: styledTextColor}),\n\n    hideFloatingPanel: function () {\n        window.floatingPanel.classList.add('hidden');\n    },\n    showFloatingPanel: function () {\n        window.floatingPanel.classList.remove('hidden');\n    },\n\n    updateChannelsListTitle: function ( tvConfig, genresList ) {\n        var genre;\n\n        if ( !tvConfig.genre && !tvConfig.search ) {\n            $channelsListTitle.innerText = gettext('Channel list');\n        } else if ( tvConfig.genre && tvConfig.search ) {\n            genre = genresList.filter(function ( genreItem ) { return genreItem.id === tvConfig.genre; })[0].name || '';\n            $channelsListTitle.innerText = gettext('Search') + ' ' + gettext('in') + ' ' + genre +\n                ' ' + gettext('by') + ' \"' + tvConfig.search + '\"';\n        } else if ( tvConfig.genre ) {\n            genre = genresList.filter(function ( genreItem ) { return genreItem.id === tvConfig.genre; })[0].name || '';\n            $channelsListTitle.innerText = genre;\n        } else if ( tvConfig.search ) {\n            $channelsListTitle.innerText = gettext('Search') + ' ' + gettext('by') + ' \"' + tvConfig.search + '\"';\n        }\n    },\n\n    updateChannelsListCount: function ( count ) {\n        var plural = window.ngettext('{0} channel', '{0} channels', count);\n\n        $channelsListCount.innerText = format(plural || '{0} channels', count);\n\n        if ( count ) {\n            $channelListNoData.classList.remove('visible');\n            if ( this.preview ) {\n                document.body.classList.add('background-off');\n            }\n        } else {\n            $channelListNoData.classList.add('visible');\n            if ( this.preview ) {\n                document.body.classList.remove('background-off');\n            }\n        }\n    },\n\n    updateCurrentChannelEpg: function ( data ) {\n        data = data || [];\n\n        $currentEpg.innerText = data.filter(function ( item ) {\n            var nowTime   = new Date(),\n                startTime = new Date(item.start * 1000),\n                endTime   = new Date(item.end * 1000);\n\n            return startTime > nowTime || ( startTime < nowTime && endTime > nowTime );\n        }).slice(0, 5).map(function ( item ) {\n            return new Date(item.start * 1000).toTimeString().replace(/.*(\\d{2}:\\d{2})(:\\d{2}).*/, '$1') + ' - ' + item.title;\n        }).join('\\n');\n\n    },\n\n    canvasLoaded: false\n};\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar metrics  = require('mag-app').metrics,\n    icons = require('magcore-theme/icons'),\n    tools = require('./tools'),\n    $node = window.floatingPanel,\n    $number = window.floatingPanelNumber,\n    // $responsiveWrapper = window.floatingPanelResponsive,\n    $logo = window.floatingPanelLogo,\n    $titleWrap = window.floatingPanelTitleWrapper,\n    $name = window.floatingPanelTitle,\n    $epg = window.floatingPanelEpg,\n    // $iconsWrapper = document.createElement('div'),\n    $favoriteIcon = window.floatingPanelFavorite,\n    $timeShiftIcon = window.floatingPanelTS,\n    $lockIcon = window.floatingPanelLock,\n\n    STYLED_TEXT_CLASS = ' theme-styled-text';\n\n$name.className += STYLED_TEXT_CLASS;\n$epg.className += STYLED_TEXT_CLASS;\n\n$favoriteIcon.className = icons.FAVORITE_ACTIVE + ' active';\n$timeShiftIcon.className = icons.TIMESHIFT + STYLED_TEXT_CLASS;\n$lockIcon.className += icons.LOCK + STYLED_TEXT_CLASS;\n\n\nmodule.exports = function ( config ) {\n    $number.style.backgroundColor = config.specialColor;\n\n    return function ( channel, focusIndex ) {\n        var iconsCount = 0;\n\n        if ( !channel ) {\n            return;\n        }\n\n        if ( focusIndex !== undefined ) {\n            $node.style.top = ( (focusIndex * metrics.floatingPanelStep) - metrics.floatingPanelStepPadding) + 'px';\n        }\n\n        $number.innerText = channel.number || '';\n        if ( channel.logo ) {\n            $logo.style.backgroundImage = 'url(' + core.backend.host + channel.logo + ')';\n        } else {\n            $logo.style.backgroundImage = '';\n        }\n\n        $name.innerText = channel.name || '';\n\n        if ( channel.currentEpg ) {\n            let startTime = new Date(channel.currentEpg.start * 1000),\n                hours = startTime.getHours(),\n                min = startTime.getMinutes();\n\n            if ( min < 10 ) {\n                min = '0' + min;\n            }\n\n            $epg.innerText = `${hours}:${min} ${channel.currentEpg.title || ''}`;\n            $name.classList.remove('no-epg');\n        } else {\n            $epg.innerText = '';\n            $name.classList.add('no-epg');\n        }\n\n        if ( channel.favorite ) {\n            $favoriteIcon.classList.add('visible');\n            iconsCount++;\n        } else {\n            $favoriteIcon.classList.remove('visible');\n        }\n\n        if ( tools.isCensored(channel) ) {\n            $lockIcon.classList.add('visible');\n            iconsCount++;\n        } else {\n            $lockIcon.classList.remove('visible');\n        }\n\n        if ( channel.local_timeshift || (channel.archive && channel.archive_range) ) {\n            $timeShiftIcon.classList.add('visible');\n            iconsCount++;\n        } else {\n            $timeShiftIcon.classList.remove('visible');\n        }\n\n        $titleWrap.className = 'title-wrapper icons-' + iconsCount;\n    };\n};\n","/**\n * Main page implementation.\n */\n\n'use strict';\n\nvar app          = require('mag-app'),\n    Page         = require('stb-component-page'),\n    format       = require('cjs-format'),\n    keys         = require('stb-keys'),\n    // new way of using theme icons\n    icons        = require('magcore-theme/icons'),\n    Footer       = require('mag-component-footer'),\n    List         = require('mag-component-list'),\n    ExtendedList = require('../modules/list'),\n    ModalMessage = require('mag-component-modal'),\n    RadioList    = require('mag-component-radio-list'),\n    LayoutList   = require('mag-component-layout-list'),\n    ScrollBar    = require('stb-component-scrollbar'),\n    page         = new Page({$node: window.pageMain, focusable: false}),\n    // modules\n\n    tools        = require('../modules/tools'),\n    showExit     = require('../modules/app.exit')(page),\n\n    LIST_ICONS   = require('../modules/list.icons'),\n    // constants\n\n    // every 15 minutes update epg for current channels\n    CURRENT_EPG_UPDATE_DELAY = 1000 * 60 * 15,\n    CHANNELS_UPDATE_NOTIFY_TIMEOUT = 7000,\n    //\n    tvConfig     = {\n        favorite: false,\n        byName: false,\n        genre: false,\n        genreName: gettext('All categories'),\n        search: false\n    },\n    focusPanel   = {},\n    osdTvIntent,\n    playChannelTimeout,\n    updateCurrentEpgInterval,\n    updateListOfProgramsInterval,\n    updateCurrentEpgTimeout,\n    dataBuffer   = [],\n    playAtAppStartFlag = false,\n    epg = {\n        list: [],\n        currentIndex: 0\n    },\n    channelList, genresList, currentChannelIndex, ctx;\n\nconst {\n    CORE_EVENT_SHOW,\n    CORE_EVENT_HIDE,\n    LEFT_ARROW_CLICK,\n    RIGHT_ARROW_CLICK,\n    PLAYER_SET_VIEWPORT,\n    PLAYER_SET_FULLSCREEN,\n    PLAYER_SEND_EXIT,\n    CORE_EVENT_EXIT,\n    CORE_EVENT_PLAY_CHANNEL\n} = require('../modules/events');\n\n\n/*eslint no-use-before-define:0*/\n/*eslint max-lines:0*/\n\n/**\n * Callback for osd-input intent.\n *\n * @param {number} value - value from user input\n */\nfunction osdInputCallback ( value ) {\n    var length = dataBuffer.length,\n        showOsd = !core.applicationState.visible,\n        index,\n        channelIndex,\n        channel;\n\n    value = Number(value);\n\n    for ( index = 0; index < length; index++ ) {\n        if ( dataBuffer[index].number === value ) {\n            channelIndex = index;\n        }\n    }\n\n    if ( channelIndex === undefined ) {\n        tools.notifyError(gettext('No such channel number'));\n    } else {\n        channel = dataBuffer[channelIndex];\n        if ( channel.id === channelList.$focusItem.data.id ) {\n            // do nothing, its active channel\n            // maybe go to player if need\n        } else {\n            // here we need to check with 'else if' and remove eslint hack\n            if ( app.ui.preview && !tools.isCensored(channel) ) { // eslint-disable-line\n                channelList.focusIndex(channelIndex);\n                playChannel(channelIndex, {showOsd: showOsd});\n            } else if ( !app.ui.preview && !tools.isCensored(channel) ) {\n                channelList.focusIndex(channelIndex);\n                playChannel(channelIndex, {\n                    fullscreen: true,\n                    showOsd: showOsd\n                });\n            } else {\n                core.accessControl.request(function ( error ) {\n                    if ( !error ) {\n                        channelList.$focusItem.data.unlocked = true;\n                        app.ui.hideCensoredPlaceholder();\n                        channel.unlocked = true;\n                        if ( app.ui.preview ) {\n                            channelList.focusIndex(channelIndex);\n                            // clear because that focus will emit `select:item` event and channel will be blocked\n                            clearTimeout(playChannelTimeout);\n                            playChannel(channelIndex/*, {silent: true}*/);\n                        } else {\n                            playChannel(channelIndex, {fullscreen: true, showOsd: showOsd});\n                        }\n                    }\n                });\n            }\n        }\n    }\n}\n\n\n/**\n * Send play channel intent\n *\n * @param {number} index of channel to play\n * @param {Object} [config] to send intent\n */\nfunction playChannel ( index, config ) {\n    var channel = dataBuffer[index],\n        vp;\n\n    config = config || {};\n\n    if ( app.ui.preview && core.applicationState.visible ) {\n        vp = app.metrics.canvasPosition;\n    }\n\n    if ( config.forceFullscreen ) {\n        vp = false;\n        config.silent = false;\n    }\n\n    if ( !channel ) { return; }\n\n    function sendIntent ( url, solution ) {\n        app.lastIntent = core.intent({\n            action: 'play',\n            mime: 'content/video',\n            context: ctx,\n            silent: config.silent,\n            data: {\n                uri: url,\n                title: channel.name,\n                tvChannel: channel,\n                solution: solution,\n                persistent: true,\n                // do not show player panel at start\n                headless: true,\n                viewport: vp,\n                // need to track content playback\n                mediaId: channel.id,\n                // extra channel data\n                extra: channel.extra,\n                retryOnError: true,\n                stream: true,\n                // disable pip for this app\n                controls: {pip: false},\n                volumeCorrection: channel['volume_correction']\n            },\n            events: {\n                nextChannel: nextChannelHandler,\n                prevChannel: prevChannelHandler,\n                onInfoPress: function () {\n                    osdTvIntent = tools.sendOsdTvIntent(channel, true);\n                },\n                close: function () {\n                    ctx = null;\n                    if ( osdTvIntent ) {\n                        osdTvIntent.close();\n                    }\n                },\n                onNumberPress: function ( event ) {\n                    tools.sendOsdInputIntent(event.number, {\n                        callback: osdInputCallback\n                    });\n                },\n                start: function () {\n                    tools.setChannelAsLast(channel);\n\n                    // restore fullscreen playback if playback start after retrying\n                    if ( !core.applicationState.visible  ) {\n                        app.lastIntent.emit(PLAYER_SET_FULLSCREEN);\n                    }\n                },\n                onPip: function () {\n                    // process channel go to pip if need\n                    ctx = null;\n                    app.lastIntent = null;\n                }\n            }\n        }, function ( error, context ) {\n            if ( error ) {\n                console.log(error);\n            }\n            ctx = context;\n        });\n\n        app.activeChannel = channel;\n        currentChannelIndex = index;\n\n        // last intent may be silent, cause core do not show player and we must call show\n        if ( config.fullscreen ) {\n            app.lastIntent.show(app.lastIntent.receiver);\n        }\n    }\n\n\n    if ( channel.url ) {\n        sendIntent(channel.url, channel.solution);\n    } else {\n        channel.getUrl(function ( error, data ) {\n            if ( error ) {\n                tools.notifyError(gettext('Error getting channel link'));\n            } else {\n                // data: {url, solution}\n                sendIntent(data.url, data.solution);\n            }\n        });\n    }\n\n    if ( config.showOsd ) {\n        osdTvIntent = tools.sendOsdTvIntent(channel);\n    }\n}\n\nfunction handleChannelClick ( event ) {\n    var channel = event.$item.data;\n\n    if ( tools.isCensored(channel) ) {\n        // check parent control\n\n        if ( app.activeChannel && app.activeChannel.id === channel.id ) {\n            // play unblocked channel\n            app.lastIntent.emit(PLAYER_SET_FULLSCREEN);\n            app.lastIntent.show(app.lastIntent.receiver);\n        } else {\n            // core.accessControle\n            core.accessControl.request(function ( error ) {\n                if ( !error ) {\n                    app.ui.hideCensoredPlaceholder();\n                    // console.log(event.$item)\n                    event.$item.data.unlocked = true;\n                    if ( app.ui.preview ) {\n                        playChannel(event.$item.index, {silent: true});\n                    } else {\n                        playChannel(event.$item.index, {fullscreen: true});\n                    }\n                }\n            });\n        }\n    } else if ( app.ui.preview && app.lastIntent ) {\n        // send player command to turn viewport to fullscreen\n        app.lastIntent.emit(PLAYER_SET_FULLSCREEN);\n        // show player app\n        app.lastIntent.show(app.lastIntent.receiver);\n    } else {\n        playChannel(channelList.$focusItem.index, {\n            fullscreen: true\n        });\n    }\n}\n\nfunction nextChannelHandler () {\n    var index = ++currentChannelIndex;\n\n    if ( index > dataBuffer.length - 1 ) {\n        index = 0;\n        currentChannelIndex = 0;\n    }\n\n\n    if ( tools.isCensored(dataBuffer[index]) ) {\n        nextChannelHandler();\n\n        return;\n    }\n\n    playChannel(index);\n    osdTvIntent = tools.sendOsdTvIntent(dataBuffer[index], false);\n}\n\nfunction prevChannelHandler () {\n    var index = --currentChannelIndex;\n\n    if ( index < 0 ) {\n        index = currentChannelIndex = dataBuffer.length - 1;\n    }\n\n    if ( tools.isCensored(dataBuffer[index]) ) {\n        prevChannelHandler();\n    } else {\n        playChannel(index);\n        osdTvIntent = tools.sendOsdTvIntent(dataBuffer[index], false);\n    }\n}\n\n/**\n * Send intent to play epg program\n *\n * @param {Object} epgObject to play\n * @param {number} channelIndex from list of current channels\n */\nfunction sendPlayEpgIntent ( epgObject, channelIndex ) {\n    var channel = dataBuffer[channelIndex];\n\n    channel.getEpg(null, function ( error, data ) {\n        var index,\n            epgIndex;\n\n        if ( !error && data && data.length ) {\n            epg.list = data;\n\n            for ( index = 0; index < data.length; index++ ) {\n                if ( data[index].id === epgObject.id ) {\n                    epgIndex = index;\n                }\n            }\n\n            epg.currentIndex = epgIndex;\n\n            if ( epgIndex ) {\n                // data[epgIndex]\n                data[epgIndex].getLink(function ( error, epgMeta ) {\n                    var prevHandler,\n                        nextHandler;\n\n                    if ( !error && epgMeta && epgMeta.url ) {\n\n                        // prev program handler\n                        if ( epg.list[epg.currentIndex - 1] && epg.list[epg.currentIndex - 1].archive ) {\n                            prevHandler = function () {\n                                sendPlayEpgIntent(epg.list[--epg.currentIndex], channelIndex);\n                            };\n                        }\n\n                        if ( epg.list[epg.currentIndex + 1] && epg.list[epg.currentIndex + 1].archive ) {\n                            nextHandler = function () {\n                                sendPlayEpgIntent(epg.list[++epg.currentIndex], channelIndex);\n                            };\n                        }\n\n                        app.lastIntent = null;\n\n                        core.intent({\n                            action: 'play',\n                            mime: 'content/video',\n                            context: null,\n                            data: {\n                                uri: epgMeta.url,\n                                solution: epgMeta.solution,\n                                title: data[epgIndex].title,\n                                mediaId: data[epgIndex].id,\n                                resource: 'tv-archive',\n                                controls: {pip: false}\n                            },\n                            events: {\n                                close: function () {\n\n                                    if ( osdTvIntent ) {\n                                        osdTvIntent.close();\n                                    }\n                                    // add handler if need\n                                    if ( app.ui.preview ) {\n                                        // playChannel(channelIndex);\n                                    }\n                                },\n                                next: nextHandler,\n                                prev: prevHandler,\n                                nextChannel: nextChannelHandler,\n                                prevChannel: prevChannelHandler,\n                                stop: function ( /*event*/ ) {\n                                    playChannel(channelIndex, {fullscreen: true});\n                                },\n                                end: function () {\n                                    if ( nextHandler ) {\n                                        nextHandler();\n                                    } else {\n                                        this.close();\n                                    }\n                                }\n                            }\n                        }, function () { /**/ });\n\n                    } else {\n                        tools.notifyError(gettext('Error getting epg link'));\n                    }\n                });\n            } else {\n                tools.notifyError(gettext('Error getting epg link'));\n            }\n        } else {\n            tools.notifyError(gettext('Error getting EPG for ') + channel.name);\n        }\n\n    });\n}\n\napp.sendPlayEpgIntent = sendPlayEpgIntent;\n\nfunction updateCurrentChannelsEpg () {\n    function update () {\n        var channelsArray = [],\n            length = channelList.$body.children.length,\n            censoredState,\n            index;\n\n        for ( index = 0; index < length; index++ ) {\n            if ( channelList.$body.children[index].data ) {\n                channelsArray.push(channelList.$body.children[index].data);\n            }\n        }\n\n        if ( channelsArray.length ) {\n            app.tvBack.getChannelsEpg({channels: channelsArray}, function ( error, epgMap ) {\n                var $item;\n\n                if ( !error && epgMap ) {\n                    for ( index = 0; index < length; index++ ) {\n                        $item = channelList.$body.children[index];\n\n                        // check for censored state to hide epg\n                        censoredState = tools.isCensored($item.data);\n\n                        if (\n                            ( !censoredState || censoredState && core.accessControl.state ) &&\n                            epgMap[$item.data.id] && epgMap[$item.data.id][0]\n                        ) {\n                            $item.$epg.innerText = epgMap[$item.data.id][0].title;\n                            channelList.data[$item.index].currentEpg = epgMap[$item.data.id][0];\n                        }\n                    }\n                    app.ui.updateFloatingPanel(channelList.$focusItem.data);\n                }\n\n            });\n        }\n    }\n\n\n    clearTimeout(updateCurrentEpgTimeout);\n    updateCurrentEpgTimeout = setTimeout(update, core.environment.onFocusDebounceTimeout || 400);\n\n    clearInterval(updateCurrentEpgInterval);\n    updateCurrentEpgInterval = setInterval(update, CURRENT_EPG_UPDATE_DELAY);\n}\n\nfunction togglePageView () {\n    if ( !channelList.$focusItem ) {\n        return;\n    }\n    app.ui.showPreview(!app.ui.preview);\n    if ( app.ui.preview ) {\n        // start playback\n        if ( channelList.$focusItem && !tools.isCensored(dataBuffer[channelList.$focusItem.index]) ) {\n            playChannel(channelList.$focusItem.index);\n        } else {\n            app.ui.showCensoredPlaceholder();\n        }\n    } else {\n        clearTimeout(playChannelTimeout);\n        app.ui.hideCensoredPlaceholder();\n        app.ui.updateFloatingPanel(channelList.$focusItem.data, channelList.$focusItem.index - channelList.viewIndex);\n\n        if ( app.lastIntent ) {\n            app.lastIntent.emit(PLAYER_SEND_EXIT);\n            app.activeChannel = null;\n        }\n    }\n}\n\n/**\n * Navigate to TV guide page\n */\nfunction goToEpgPage () {\n    if ( tools.isCensored(channelList.$focusItem.data) && !core.accessControl.state && !channelList.$focusItem.data.unlocked ) {\n        tools.notifyError(gettext('Channel is censored'));\n\n        return;\n    }\n\n    document.body.classList.add('background-off');\n\n    app.route(app.pages.epg, channelList.$focusItem);\n\n    if ( app.ui.preview && app.lastIntent ) {\n        app.lastIntent.emit(PLAYER_SET_FULLSCREEN);\n    }\n}\n\nfunction goToDetailsPage () {\n    var originalFocusedChannelId;\n\n    if ( !channelList.$focusItem ) {\n        return;\n    }\n\n    if ( !tools.isCensored(channelList.$focusItem.data) || core.accessControl.state || channelList.$focusItem.data.unlocked ) {\n        originalFocusedChannelId = channelList.$focusItem.data.id;\n        channelList.$focusItem.data.getEpg([], function ( error, data ) {\n            if ( error ) { console.log(error); }\n\n            // if user still standing on same channel and waiting for server response\n            if ( originalFocusedChannelId === channelList.$focusItem.data.id ) {\n                if ( data && data.length ) {\n                    document.body.classList.remove('background-off');\n                    app.route(app.pages.details, {list: data, channelIndex: channelList.$focusItem.index});\n                } else {\n                    tools.notifyError(gettext('This channel don\\'t have epg'));\n                }\n            }\n        });\n    } else {\n        tools.notifyError(gettext('Channel is censored'));\n    }\n}\n\n/**\n * Update footer depending on current channels\n */\nfunction updateFooter () {\n    var config = {\n        left: {\n            code: keys.menu,\n            action: showModalActions\n        },\n        label: {\n            code: keys.menu, title: gettext('Hold OK button to open Options menu'), action: showModalActions\n        },\n        middle: [\n            {\n                code: keys.f1,\n                title: gettext('View'),\n                action: togglePageView\n            },\n            {\n                code: keys.f2,\n                title: gettext('Sorting'),\n                action: function () {\n                    page.modalActions.hide();\n                    page.modalSort.show();\n                }\n            }\n\n        ]\n    };\n\n    if ( dataBuffer.length ) {\n        config.middle = config.middle.concat([\n            {\n                code: keys.f3,\n                title: gettext('Favorite'),\n                action: function () {\n                    if ( channelList.$focusItem ) {\n                        if ( channelList.$focusItem.data.favorite ) {\n                            channelList.$focusItem.$favorite.classList.add('hide');\n                        } else {\n                            channelList.$focusItem.$favorite.classList.remove('hide');\n                        }\n                        channelList.$focusItem.data.toggleFavorite(function () {\n                            app.ui.updateFloatingPanel(channelList.$focusItem.data);\n                        });\n                    }\n                }\n            },\n            {\n                code: keys.f4,\n                title: gettext('TV guide'),\n                action: goToEpgPage\n            }\n        ]);\n    }\n\n    page.footer.init(config);\n}\n\n////////////////////\n// BUILD PAGE\napp.ui.showPreview(true);\npage.footer = new Footer({\n    parent: page,\n    visible: true,\n    data: {\n        left: {\n            code: keys.menu, action: showModalActions\n        },\n        middle: [\n            {\n                code: keys.f1,\n                title: gettext('View'),\n                action: togglePageView\n            },\n            {\n                code: keys.f2,\n                title: gettext('Sorting'),\n                action: function () {\n                    page.modalSort.show();\n                }\n            },\n            {\n                code: keys.f3,\n                title: gettext('Favorite'),\n                action: function () {\n                    if ( channelList.$focusItem ) {\n                        if ( channelList.$focusItem.data.favorite ) {\n                            channelList.$focusItem.$favorite.classList.add('hide');\n                            focusPanel.$favorite.classList.add('hide');\n                        } else {\n                            channelList.$focusItem.$favorite.classList.remove('hide');\n                            focusPanel.$favorite.classList.remove('hide');\n                        }\n                        channelList.$focusItem.data.toggleFavorite();\n                    }\n                }\n            },\n            {\n                code: keys.f4,\n                title: gettext('TV guide'),\n                action: goToEpgPage\n            }\n        ]\n    },\n    label: {\n        code: keys.menu, title: gettext('Hold OK button to open Options menu'), action: showModalActions\n    }\n});\n\n\nfunction updateListOfPrograms () {\n    if ( channelList.$focusItem && channelList.$focusItem.data ) {\n        channelList.$focusItem.data.getEpg([], function ( error, data ) {\n            if ( error ) { console.log(error); }\n\n            // data = data || [];\n            app.ui.updateCurrentChannelEpg(data);\n        });\n    }\n\n    if ( updateListOfProgramsInterval ) {\n        clearInterval(updateListOfProgramsInterval);\n    }\n    updateListOfProgramsInterval = setInterval(updateListOfPrograms, CURRENT_EPG_UPDATE_DELAY);\n}\n\n//updateListOfPrograms();\n\npage.add(channelList = new ExtendedList({\n    className: 'mag-component-chanel-list',\n    size: app.metrics.channelListSize,\n    focusIndex: 0,\n    $node: window.channelListNode,\n    $body: window.channelListBody,\n    data: dataBuffer,\n    cycle: true,\n    visible: true,\n    events: {\n        'select:item': function ( event ) {\n            var forceFullscreen,\n                self = this;\n\n\n            if ( event.$item && this.$focusItem && app.loaded ) {\n\n                app.ui.updateFloatingPanel(event.$item.data, self.$focusItem.index - self.viewIndex);\n\n                if ( app.ui.preview ) {\n                    clearTimeout(playChannelTimeout);\n                    playChannelTimeout = setTimeout(function () {\n                        if ( tools.isCensored(dataBuffer[self.$focusItem.index]) ) {\n                            dataBuffer[self.$focusItem.index].unlocked = false;\n                            // channel is under parent password\n                            if ( app.lastIntent ) {\n                                app.lastIntent.emit(PLAYER_SEND_EXIT);\n                            }\n                            // we must show some placeholder here\n                            app.ui.showCensoredPlaceholder();\n                            app.activeChannel = null;\n                        } else {\n                            dataBuffer[self.$focusItem.index].unlocked = true;\n                            app.ui.hideCensoredPlaceholder();\n\n                            if ( !playAtAppStartFlag ) {\n                                playAtAppStartFlag = forceFullscreen = true;\n                            }\n\n                            if ( core.applicationState.visible ) {\n                                playChannel(self.$focusItem.index, {silent: true, forceFullscreen: forceFullscreen});\n                            }\n                        }\n                        app.ui.updateCurrentChannelEpg();\n                        updateListOfPrograms();\n                    }, 800);\n                }\n\n            } else {\n                // list is empty so hide focused item, EPG and stop player\n                app.ui.updateCurrentChannelEpg();\n                if ( app.lastIntent ) {\n                    app.lastIntent.emit(PLAYER_SEND_EXIT);\n                }\n            }\n        },\n        keydown: function ( event ) {\n            List.prototype.defaultEvents.keydown.call(this, event);\n\n            switch ( event.code ) {\n                case keys.right:\n                    goToDetailsPage();\n                    break;\n                case keys.left:\n                    showLeftMenu();\n                    break;\n                case 48:\n                case 49:\n                case 50:\n                case 51:\n                case 52:\n                case 53:\n                case 54:\n                case 55:\n                case 56:\n                case 57:\n                    tools.sendOsdInputIntent(String.fromCharCode(event.code), {\n                        callback: osdInputCallback\n                    });\n                    break;\n                case keys.back:\n                    showExit();\n                    break;\n                    // reflect channel next/prev to up/down keys\n                case keys.channelNext:\n                    this.emit('keydown', {code: keys.down});\n                    break;\n                case keys.channelPrev:\n                    this.emit('keydown', {code: keys.up});\n                    break;\n            }\n        },\n        'click:item': handleChannelClick,\n        'move:view': updateCurrentChannelsEpg\n    },\n    render: require('../modules/channels.list.item.render')\n}));\npage.channelList = channelList;\n\n\n// modal message: all actions\npage.modalActionsScroll = new ScrollBar({realSize: 6, viewSize: 7});\npage.modalActions = new ModalMessage({\n    visible: false,\n    className: 'width2x',\n    title: gettext('Menu'),\n    events: {\n        show: function () {\n            page.footer.hide();\n            this.focus();\n        },\n        hide: function () {\n            page.footer.show();\n            channelList.focus();\n        }\n    },\n    children: [\n        page.modalActionsList = new LayoutList({\n            cycle: true,\n            focusIndex: 0,\n            size: 4,\n            scroll: page.modalActionsScroll,\n            data: []\n        }),\n        page.modalActionsScroll\n    ]\n});\npage.add(page.modalActions);\n\npage.leftMenu = new ModalMessage({\n    visible: false,\n    className: 'left-side',\n    title: gettext('Menu'),\n    events: {\n        show: () => {\n            page.footer.hide();\n            page.leftMenu.focus();\n        },\n        hide: () => {\n            page.footer.show();\n            channelList.focus();\n        }\n    },\n    children: [\n        page.leftMenuList = new LayoutList({\n            cycle: true,\n            focusIndex: 0,\n            data: [],\n            events: {\n                keydown: function ( event ) {\n                    LayoutList.prototype.defaultEvents.keydown.call(this, event);\n                    if ( event.code === keys.right ) {\n                        page.leftMenu.hide();\n                    }\n                }\n            }\n        })\n    ]\n});\n\n\npage.leftMenu.$closeIcon = document.createElement('div');\npage.leftMenu.$closeIcon.className = icons.CANCEL + ' closeIcon';\npage.leftMenu.$body.parentElement.appendChild(page.leftMenu.$closeIcon);\n\npage.add(page.leftMenu);\n\n// modal message: sort\npage.modalSort = new ModalMessage({\n    visible: false,\n    title: gettext('sort'),\n    events: {\n        show: function () {\n            page.footer.hide();\n            this.focus();\n        },\n        hide: function () {\n            page.footer.show();\n            channelList.focus();\n        }\n    },\n    children: [\n        new RadioList({\n            cycle: true,\n            focusIndex: 0,\n            propagate: true,\n            size: 2,\n            data: [\n                {state: false, title: gettext('By name'), value: 0},\n                {state: true, title: gettext('By number'), value: 1}\n            ],\n            events: {\n                'click:item': function ( event ) {\n                    console.log('set sort flag to: ' + (event.$item.data.value ? 'by number' : 'by name'));\n                    tvConfig.byName = !event.$item.data.value;\n                    page.modalSort.hide();\n                    getChannels();\n                }\n            }\n        })\n    ]\n});\npage.add(page.modalSort);\n\n// modal message: filter\npage.modalFilter = new ModalMessage({\n    visible: false,\n    title: gettext('Categories'),\n    events: {\n        show: function () {\n            page.footer.hide();\n            this.focus();\n        },\n        hide: function () {\n            page.footer.show();\n            channelList.focus();\n        }\n    },\n    children: [\n        new LayoutList({\n            cycle: true,\n            data: [],\n            className: 'padded',\n            events: {\n                'click:item': function ( event ) {\n                    console.log('set filter flag to: ' + JSON.stringify(event.$item.data.value));\n                    tvConfig.genre = event.$item.data.value.id;\n                    tvConfig.genreName = event.$item.data.value.name;\n                    page.modalFilter.hide();\n                    getChannels();\n                }\n            }\n        })\n    ]\n});\npage.add(page.modalFilter);\n\n// get categories from plugin and create filter list in modal\napp.tvBack.getCategories(function ( error, data ) {\n    var categories = [\n        {\n            items: [{value: gettext('All categories'), className: 'title'}],\n            value: {id: false, name: gettext('All categories')}\n        }\n    ];\n\n    if ( !error ) {\n        genresList = data;\n        data.forEach(function ( genre ) {\n            categories.push({\n                items: [{value: genre.name, className: 'title'}],\n                value: genre\n            });\n        });\n    }\n    page.modalFilter.children[0].init({\n        data: categories,\n        focusIndex: 0\n    });\n});\n\npage.addListener('show', function ( event ) {\n    if ( app.ui.preview ) {\n        document.body.classList.add('background-off');\n    } else {\n        document.body.classList.remove('background-off');\n    }\n    channelList.focus();\n\n    if ( event && event.data ) {\n        channelList.focusIndex(event.data.index);\n    }\n\n    if ( core.applicationState.visible && !app.lastIntent && currentChannelIndex ) {\n        playChannel(currentChannelIndex);\n    }\n});\n\n/**\n * Show modal actions depends on current content\n */\nfunction showModalActions () {\n    /*eslint max-lines-per-function:0*/\n    var menuItems,\n        currentChannel;\n\n    menuItems = [\n        {\n            items: [\n                {className: LIST_ICONS.view},\n                {value: gettext('View')}\n            ],\n            click: function () {\n                page.modalActions.hide();\n                togglePageView();\n            }\n        }\n    ];\n\n    if ( channelList.$focusItem && channelList.$focusItem.data ) {\n        currentChannel = channelList.$focusItem.data;\n\n        // add favorite button\n        menuItems.splice(2, 0, {\n            items: [\n                {className: currentChannel.favorite ? LIST_ICONS.favoriteActive : LIST_ICONS.favorite},\n                {value: currentChannel.favorite ? gettext('Remove from Favorites') : gettext('Add to favorite')}\n            ],\n            click: function () {\n                if ( channelList.$focusItem ) {\n                    if ( channelList.$focusItem.data.favorite ) {\n                        channelList.$focusItem.$favorite.classList.add('hide');\n                    } else {\n                        channelList.$focusItem.$favorite.classList.remove('hide');\n                    }\n                    channelList.$focusItem.data.toggleFavorite(function () {\n                        app.ui.updateFloatingPanel(channelList.$focusItem.data);\n                    });\n                }\n                page.modalActions.hide();\n            }\n        });\n\n        menuItems.splice(3, 0, {\n            items: [\n                {className: LIST_ICONS.tvGuide},\n                {value: gettext('TV guide')}\n            ],\n            click: function () {\n                page.modalActions.hide();\n                goToEpgPage();\n            }\n        });\n\n        if ( currentChannel.pvr || currentChannel.local_pvr ) {\n            menuItems.splice(4, 0, {\n                items: [\n                    {className: LIST_ICONS.record},\n                    {value: gettext('Record')}\n                ],\n                click: function () {\n                    page.modalActions.hide();\n                    tools.sendRecordIntent(currentChannel);\n                }\n            });\n        }\n    }\n\n    page.modalActionsList.init({\n        data: menuItems,\n        size: menuItems.length,\n        focusIndex: 0\n    });\n\n    setTimeout(function () {\n        page.modalActions.show();\n    }, 10);\n}\n\nfunction showLeftMenu () {\n    var menuItems = [\n        {\n            items: [\n                {className: icons.SEARCH + (tvConfig.search ? ' active' : '')},\n                {value: tvConfig.search || gettext('Search')}\n            ],\n            click: function () {\n                page.leftMenu.hide();\n\n                tools.sendSearchIntent(tvConfig.search || '', function ( value ) {\n                    tvConfig.search = value;\n                    getChannels();\n                });\n            }\n        },\n        {\n            items: [\n                {className: (tvConfig.favorite ? icons.FAVORITE_ACTIVE + ' active' : icons.FAVORITE)},\n                {value: gettext('Favorite list')}\n            ],\n            click: function () {\n                tvConfig.favorite = !tvConfig.favorite;\n                console.log('set favorite list to ' + tvConfig.favorite);\n                page.leftMenu.hide();\n                getChannels();\n            }\n        },\n        {\n            items: [\n                {className: icons.CATEGORIES + (tvConfig.genre ? ' active' : '')},\n                {value: tvConfig.genreName}\n            ],\n            click: function () {\n                page.leftMenu.hide();\n                page.modalFilter.show();\n            },\n            className: 'theme-item-more'\n        },\n        {\n            items: [\n                {className: icons.SORT_AZ},\n                {value: tvConfig.byName ? gettext('By name') : gettext('By number')}\n            ],\n            click: function () {\n                page.leftMenu.hide();\n                page.modalSort.show();\n            },\n            className: 'theme-item-more'\n        },\n        {\n            items: [\n                {className: 'theme-icon theme-icon-reset-filters'},\n                {value: gettext('Reset filters')}\n            ],\n            click: function () {\n                page.leftMenu.hide();\n                setTimeout(function () {\n                    page.modalFilter.children[0].init({\n                        data: page.modalFilter.children[0].data,\n                        focusIndex: 0\n                    });\n                }, 10);\n                tvConfig.favorite = false;\n                tvConfig.genre = false;\n                tvConfig.genreName = gettext('All categories');\n                tvConfig.search = false;\n\n                getChannels();\n            }\n        }\n    ];\n\n    page.leftMenuList.setData({\n        data: menuItems,\n        focusIndex: 0\n    });\n\n    setTimeout(function () {\n        page.leftMenu.show();\n    });\n\n}\n\nfunction getChannels ( config, callback ) {\n    var index,\n        indexToFocus = 0;\n\n    config = config || {};\n    app.ui.hideCensoredPlaceholder();\n    app.tvBack.updateChannelsList(function () {\n        dataBuffer = [];\n        app.tvBack.getChannels(tvConfig, function ( error, channels ) {\n            if ( error ) {\n                console.log('app.tvBack.getChannels error');\n            }\n\n            setTimeout(function () {\n                app.pages.epg.setChannels(channels);\n            });\n\n            dataBuffer = channels;\n            page.dataBuffer = dataBuffer;\n\n            if ( channels.length ) {\n                app.ui.showFloatingPanel();\n            } else {\n                app.ui.hideFloatingPanel();\n            }\n\n            if ( config.focusId !== undefined ) {\n                for ( index = 0; index < dataBuffer.length; index++ ) {\n                    if ( dataBuffer[index].id === Number(config.focusId) ) {\n                        indexToFocus = index;\n                    }\n                }\n            } else if ( config.focusIndex !== undefined ) {\n                indexToFocus = config.focusIndex;\n            } else if ( channelList.$focusItem && channelList.$focusItem.index < dataBuffer.length ) {\n                indexToFocus = channelList.$focusItem.index;\n            } else {\n                indexToFocus = 0;\n            }\n\n            currentChannelIndex = indexToFocus;\n\n            app.ui.updateChannelsListTitle(tvConfig, genresList);\n            app.ui.updateChannelsListCount(dataBuffer.length);\n\n            updateFooter();\n\n\n            channelList.hide();\n            channelList.init({\n                data: dataBuffer,\n                focusIndex: indexToFocus,\n                cycle: true\n            });\n\n            // prevent graphic bug on 322\n            setTimeout(function () {\n                channelList.show();\n\n                if ( callback ) {\n                    callback();\n                }\n            }, 5);\n        });\n    });\n}\n\n/**\n * App start\n */\napp.tvBack.getLastChannelId(function ( error, id ) {\n    function doneHandler () {\n        if ( app.tvBack.startBackgroundCheck ) {\n            app.tvBack.startBackgroundCheck();\n        }\n\n        app.loaded = true;\n        app.emit('ready');\n\n        setTimeout(function () {\n            app.ready();\n        }, 50);\n    }\n\n    getChannels({\n        focusIndex: 0,\n        focusId: (!error && id) ? id : undefined\n    }, function () {\n        if ( app.ui.canvasLoaded ) {\n            doneHandler();\n        } else {\n            app.once('background:load', doneHandler);\n        }\n        updateListOfPrograms();\n    });\n});\n\n\npage.addEpgListeners = function ( epgPage ) {\n\n    epgPage.addListener('back', function ( item ) {\n        app.route(app.pages.main, item);\n        if ( app.ui.preview && app.lastIntent ) {\n            app.lastIntent.emit(PLAYER_SET_VIEWPORT, app.metrics.canvasPosition);\n        } else if ( !app.ui.preview && app.lastIntent ) {\n            app.lastIntent.emit(PLAYER_SEND_EXIT);\n        }\n    });\n\n    epgPage.addListener('channel:click', function ( event ) {\n        console.log(event, 'channel:click');\n        if ( dataBuffer[event.channelIndex] && tools.isCensored(dataBuffer[event.channelIndex]) ) {\n            core.accessControl.request(function ( error ) {\n                if ( !error ) {\n                    playChannel(event.channelIndex);\n                    app.lastIntent.emit(PLAYER_SET_FULLSCREEN);\n                }\n            });\n        } else if ( dataBuffer[event.channelIndex] ) {\n            playChannel(event.channelIndex);\n            app.lastIntent.emit(PLAYER_SET_FULLSCREEN);\n        }\n    });\n\n    epgPage.addListener('epg:click', function ( event ) {\n        console.log(event, 'epg:click');\n        // sendPlayEpgIntent()\n    });\n\n};\n\n\napp.addListener(RIGHT_ARROW_CLICK, goToDetailsPage);\napp.addListener(LEFT_ARROW_CLICK, showLeftMenu);\n\n\n/**\n * Update render view after channels events from provider\n */\nfunction updateRenderOnProviderEvent () {\n    getChannels();\n}\n\n/**\n * Callback when some channels was deleted\n *\n * @param {Object} event from provider\n */\nfunction deleteChannelsHandler ( event ) {\n    core.notify({\n        title: format(window.ngettext('{0} channel was deleted', '{0} channels were deleted', event.data.length), event.data.length),\n        icon: 'alert',\n        type: 'warning',\n        timeout: CHANNELS_UPDATE_NOTIFY_TIMEOUT\n    });\n    updateRenderOnProviderEvent();\n}\n\n/**\n * Callback when some channels was added\n *\n * @param {Object} event from provider\n */\nfunction addChannelsHandler ( event ) {\n    if (event.data.length > 1 ) {\n        core.notify({\n            title: format(gettext('{0} channels were added'), event.data.length),\n            icon: 'info',\n            type: 'success',\n            timeout: CHANNELS_UPDATE_NOTIFY_TIMEOUT\n        });\n    } else if ( event.data.length === 1 ) {\n        core.notify({\n            title:  format(gettext('Channel {0} was added'), event.data[0].name),\n            icon: 'info',\n            type: 'success',\n            timeout: CHANNELS_UPDATE_NOTIFY_TIMEOUT\n        });\n    }\n\n    updateRenderOnProviderEvent();\n}\n\n/**\n * Callback when some channels was modified\n */\nfunction modifyChannelsHandler () {\n    core.notify({\n        title: gettext('Channels were updated'),\n        icon: 'info',\n        type: 'success',\n        timeout: CHANNELS_UPDATE_NOTIFY_TIMEOUT\n    });\n\n    updateRenderOnProviderEvent();\n}\n\n/**\n * Callback when backend send message to full update channels list\n */\nfunction fullUpdateChannelsHandler () {\n\n    if ( core.applicationState.visible ) {\n        core.notify({\n            title: gettext('Channels were updated'),\n            icon: 'info',\n            type: 'success',\n            timeout: 2500\n        });\n    }\n\n    updateRenderOnProviderEvent();\n}\n\napp.tvBack.addListener('channels:delete', deleteChannelsHandler);\napp.tvBack.addListener('channels:add', addChannelsHandler);\napp.tvBack.addListener('channels:modified', modifyChannelsHandler);\napp.tvBack.addListener('update', fullUpdateChannelsHandler);\n\n\n// show app event handler\ncore.addListener(CORE_EVENT_SHOW, function ( event ) {\n    var forceFullscreen;\n\n    console.log('CORE_EVENT_SHOW ' + event.source, 'app show event');\n    console.log(event, 'app show event');\n\n    if ( osdTvIntent ) {\n        osdTvIntent.close();\n    }\n\n    // app is shown by intent from player\n    if (\n        event.source === core.SOURCES.INTENT\n        && event.data\n        && event.data.intent\n        && event.data.intent.action === 'play'\n        // player send this flag if we click list button\n        && event.data.config.reasonToggleView\n    ) {\n        if ( app.ui.preview ) {\n            app.lastIntent.emit(PLAYER_SET_VIEWPORT, app.metrics.canvasPosition);\n        } else {\n            app.lastIntent.emit(PLAYER_SEND_EXIT);\n        }\n        channelList.focusIndex(currentChannelIndex);\n        if ( osdTvIntent ) {\n            osdTvIntent.close();\n        }\n    } else if (\n        event.source === core.SOURCES.INTENT\n        && event.data\n        && event.data.intent\n        && event.data.intent.action === 'play'\n        // player send this flag is we press pip button\n        && event.data.config.reasonPip\n    ) {\n        // we should do nothing cause player go to pip\n        // here will be some handlers in future if we need\n        console.log('playback go to pip');\n        if ( osdTvIntent ) {\n            osdTvIntent.close();\n        }\n    } else if (\n        event.source !== core.SOURCES.SYSTEM &&\n        app.ui.preview && channelList.$focusItem &&\n        !tools.isCensored(channelList.$focusItem.data)\n        && app.loaded\n    ) {\n        if ( !playAtAppStartFlag ) {\n            console.log('forceFullscreen--->');\n            playAtAppStartFlag = forceFullscreen = true;\n        }\n\n        // we are restored\n        playChannel(currentChannelIndex, {forceFullscreen: forceFullscreen});\n    } else if (\n        event.source === core.SOURCES.SYSTEM &&\n        event.data &&\n        event.data.intent &&\n        event.data.intent.action === 'record'\n    ) {\n        // we are shown after record manager closed\n        if ( app.ui.preview ) {\n            playChannel(currentChannelIndex, {silent: true});\n        }\n    }\n});\n\n// hide app event handler\ncore.addListener(CORE_EVENT_HIDE, function ( event ) {\n    console.log('CORE_EVENT_HIDE ' + event.source, 'app hide');\n    if ( event.source === core.SOURCES.INTENT && event.data && event.data.intent && event.data.intent.action === 'play' ) {\n        //\n        if ( app.ui.preview ) {\n            // maybe do something with focus\n        } else {\n            // app.lastIntent.emit('exit');\n        }\n    } else {\n        app.lastIntent.emit(PLAYER_SEND_EXIT);\n        ctx = null;\n    }\n});\n\ncore.addListener(CORE_EVENT_EXIT, function () {\n    if ( app.lastIntent ) {\n        app.lastIntent.emit(PLAYER_SEND_EXIT);\n    }\n\n    if ( osdTvIntent ) {\n        osdTvIntent.close();\n    }\n\n    app.tvBack.removeListener('channels:delete', deleteChannelsHandler);\n    app.tvBack.removeListener('channels:add', addChannelsHandler);\n    app.tvBack.removeListener('channels:modified', modifyChannelsHandler);\n    app.tvBack.removeListener('update', fullUpdateChannelsHandler);\n    app.tvBack.stopBackgroundCheck();\n\n    if ( app.tvBack.destroy ) {\n        app.tvBack.destroy();\n    }\n\n\n});\n\ncore.addListener(CORE_EVENT_PLAY_CHANNEL, function ( data ) {\n    var index,\n        indexToPlay;\n\n    function findAndPlay ( number ) {\n        for ( index = 0; index < dataBuffer.length; index++ ) {\n            if ( dataBuffer[index].number === number ) {\n                indexToPlay = index;\n                break;\n            }\n        }\n\n        if ( indexToPlay !== undefined ) {\n            // if channel to play is not censored we should play\n            if (\n                !dataBuffer[indexToPlay].censored\n                && dataBuffer[indexToPlay].genre\n                && !dataBuffer[indexToPlay].censored\n            ) {\n                channelList.focusIndex(indexToPlay);\n                playChannel(indexToPlay, {fullscreen: true});\n            }\n        }\n    }\n\n    function processAndPlay ( number ) {\n        if ( app.loaded ) {\n            findAndPlay(number);\n        } else {\n            app.once('ready', function () {\n                console.log('APP READY');\n                findAndPlay(number);\n            });\n        }\n    }\n\n    // if we have some filters we should reset it first\n    if (\n        tvConfig.favorite\n        || tvConfig.byName\n        || tvConfig.genre\n        || tvConfig.search\n    ) {\n        tvConfig.favorite = false;\n        tvConfig.genre = false;\n        tvConfig.genreName = gettext('All categories');\n        tvConfig.search = false;\n        getChannels(null, function () {\n            processAndPlay(data.number);\n        });\n    } else {\n        processAndPlay(data.number);\n    }\n});\n\n// public\nmodule.exports = page;\n","/**\n * Reworked mag-component list\n *\n * Navigation emulates per-page movement\n */\n\n/*eslint-disable*/\n\n'use strict';\n\nvar app = require('mag-app'),\n    Component = require('stb-component'),\n    keys      = require('stb-keys'),\n    floatingStep = app.metrics.floatingPanelStep;\n\n\n/**\n * Mouse click event.\n *\n * @event module:stb/ui/list~List#click:item\n *\n * @type {Object}\n * @property {Element} $item clicked HTML item\n * @property {Event} event click event data\n */\n\n\n/**\n * Base list implementation.\n *\n * Each data item can be either a primitive value or an object with these fields:\n *\n *  Name    | Description\n * ---------|-------------\n *  value   | actual cell value to render\n *  mark    | is it necessary or not to render this cell as marked\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array}    [config.data=[]]     component data to visualize\n * @param {function} [config.render]      method to build each grid cell content\n * @param {function} [config.navigate]    method to move focus according to pressed keys\n * @param {number}   [config.size=5]      amount of visible items on a page\n * @param {number}   [config.viewIndex=0] move view window to this position on init\n * @param {number}   [config.focusIndex]  list item index to make item focused (move view window to this position)\n * @param {boolean}  [config.cycle=true]  allow or not to jump to the opposite side of a list when there is nowhere to go next\n * @param {boolean}  [config.scroll=null] associated ScrollBar component link\n *\n * @fires module:stb/ui/list~List#click:item\n */\nfunction List ( config ) {\n    // current execution context\n    //var self = this;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Link to the currently focused DOM element.\n     *\n     * @type {Element}\n     */\n    this.$focusItem = null;\n\n    /**\n     * Position of the visible window to render.\n     *\n     * @type {number}\n     */\n    this.viewIndex = null;\n\n    /**\n     * Floating panel dom link\n     */\n    this.$floating = config.$floating;\n\n    /**\n     * Component data to visualize.\n     *\n     * @type {Array}\n     */\n    this.data = [];\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Amount of visible items on a page.\n     *\n     * @type {number}\n     */\n    this.size = 5;\n\n    /**\n     * Allow or not to jump to the opposite side of a list when there is nowhere to go next.\n     *\n     * @type {boolean}\n     */\n    this.cycle = false;\n\n    /**\n     * Associated ScrollBar component link.\n     *\n     * @type {ScrollBar}\n     */\n    this.scroll = null;\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n\n    config.className = config.className || '';\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    //config.className += ' theme-main';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // component setup\n    this.init(config);\n}\n\n\n// inheritance\nList.prototype = Object.create(Component.prototype);\nList.prototype.constructor = List;\n\n// set component name\nList.prototype.name = 'mag-component-list';\n\nList.prototype.TYPE_VERTICAL   = 1;\nList.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Fill the given item with data.\n *\n * @param {Element} $item item DOM link\n * @param {*} data associated with this item data\n */\nList.prototype.renderItemDefault = function ( $item, data ) {\n    $item.innerText = data.value;\n};\n\n\n/**\n * Method to build each list item content.\n * Can be redefined to provide custom rendering.\n *\n * @type {function}\n */\nList.prototype.renderItem = List.prototype.renderItemDefault;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nList.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse wheel events.\n     *\n     * @param {Event} event generated event\n     */\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        if ( this.type === this.TYPE_VERTICAL && event.wheelDeltaY ) {\n            this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n        }\n\n        // scrolling by X axis\n        if ( this.type === this.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n            this.move(event.wheelDeltaX > 0 ? keys.left : keys.right);\n        }\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n            case keys.right:\n            case keys.left:\n            case keys.pageUp:\n            case keys.pageDown:\n            case keys.home:\n            case keys.end:\n                // cursor move only on arrow keys\n                this.move(event.code);\n                break;\n            case keys.enter:\n                // there are some listeners\n                if ( this.events['click:item'] && this.$focusItem ) {\n                    // notify listeners\n                    this.emit('click:item', {$item: this.$focusItem, event: event});\n                }\n                break;\n        }\n    }\n};\n\n\n/**\n * Current active method to move focus according to pressed keys.\n * Can be redefined to provide custom navigation.\n *\n * @type {function}\n */\n//List.prototype.navigate = List.prototype.navigateDefault;\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var i, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( i = 0; i < data.length; i++ ) {\n        // cell value\n        item = data[i];\n        // primitive value\n        if ( typeof item !== 'object' ) {\n            // wrap with defaults\n            item = data[i] = {\n                value: data[i]\n            };\n        }\n\n        if ( DEVELOP ) {\n            //if ( !('value' in item) ) { throw new Error(__filename + ': field \"value\" is missing'); }\n            if ( ('mark' in item) && Boolean(item.mark) !== item.mark ) {\n                throw new Error(__filename + ': item.mark must be boolean');\n            }\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.init = function ( config ) {\n    var self     = this,\n        currSize = this.$body.children.length,\n        /**\n         * Item mouse click handler.\n         *\n         * @param {Event} event click event data\n         *\n         * @this Element\n         *\n         * @fires module:stb/ui/list~List#click:item\n         */\n        onClick = function ( event ) {\n            if ( this.data ) {\n                self.focusItem(this);\n\n                // there are some listeners\n                if ( self.events['click:item'] ) {\n                    // notify listeners\n                    self.emit('click:item', {$item: this, event: event});\n                }\n            }\n        },\n        item, i;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // apply cycle behaviour\n    if ( config.cycle !== undefined ) { this.cycle = config.cycle; }\n\n    // apply ScrollBar link\n    if ( config.scroll ) { this.scroll = config.scroll; }\n\n    // apply data provider\n\n\n    // custom render method\n    if ( config.render ) {\n        if ( DEVELOP ) {\n            if ( typeof config.render !== 'function' ) {\n                throw new Error(__filename + ': wrong config.render type');\n            }\n        }\n\n        // apply\n        this.renderItem = config.render;\n    }\n\n    // list items amount on page\n    if ( config.size ) {\n        if ( DEVELOP ) {\n            if ( Number(config.size) !== config.size ) {\n                throw new Error(__filename + ': config.size must be a number');\n            }\n            if ( config.size <= 0 ) {\n                throw new Error(__filename + ': config.size should be positive');\n            }\n        }\n\n        // apply\n        this.size = config.size;\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( name ) {\n            self.events[name] = null;\n            self.addListener(name, config.events[name]);\n        });\n    }\n\n    // geometry has changed or initial draw\n    if ( this.size !== currSize ) {\n        // non-empty list\n        if ( currSize > 0 ) {\n            // clear old items\n            this.$body.innerText = null;\n        }\n\n        // create new items\n        for ( i = 0; i < this.size; i++ ) {\n            item = document.createElement('div');\n            item.index = i;\n            //item.className = 'item theme-list-item';\n            item.className = 'item';\n\n            item.addEventListener('click', onClick);\n            this.$body.appendChild(item);\n        }\n    }\n\n    this.setData(config);\n};\n\n/**\n * Set data and render inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.setData = function ( config ) {\n    // apply list of items\n\n    if ( config.data ) {\n        if ( DEVELOP ) {\n            if ( !Array.isArray(config.data) ) { throw new Error(__filename + ': wrong config.data type'); }\n        }\n        // prepare user data\n        this.data = normalize(config.data);\n    }\n\n    // view window position\n    if ( DEVELOP ) {\n        if ( config.viewIndex !== undefined ) {\n            if ( Number(config.viewIndex) !== config.viewIndex ) {\n                throw new Error(__filename + ': config.viewIndex must be a number');\n            }\n            if ( config.viewIndex < 0 ) {\n                throw new Error(__filename + ': config.viewIndex should be positive');\n            }\n        }\n    }\n\n    // reset current view window position\n    this.viewIndex = null;\n\n    if ( this.$focusItem ) {\n        this.blurItem(this.$focusItem);\n    }\n\n    if ( this.scroll ) {\n\n        this.scroll.init({\n            realSize: this.data.length,\n            viewSize: this.size,\n            value: config.viewIndex || 0\n        });\n    }\n\n    // set focus item\n    if ( config.focusIndex !== undefined && this.data.length ) {\n        if ( DEVELOP ) {\n            if ( Number(config.focusIndex) !== config.focusIndex ) {\n                throw new Error(__filename + ': config.focusIndex must be a number');\n            }\n            if ( config.focusIndex < 0 ) {\n                throw new Error(__filename + ': config.focusIndex should be positive');\n            }\n            // if ( config.focusIndex > this.data.length - 1 ) {\n            //     throw new Error(__filename + ': config.focusIndex should be less than data size');\n            // }\n        }\n\n        // jump to the necessary item\n        this.focusIndex(config.focusIndex);\n    } else {\n        // go to the first page\n        this.renderView(config.viewIndex || 0);\n    }\n};\n\n\n/**\n * Shift the visible view window event.\n *\n * @event module:stb/ui/list~List#move:view\n *\n * @type {Object}\n * @property {number} prevIndex previous view window position\n * @property {number} currIndex current view window position\n */\n\n\n/**\n * Draw the visible window.\n *\n * @param {number} index start position to render\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#move:view\n */\nList.prototype.renderView = function ( index ) {\n    var $item, i, itemData, prevIndex, currIndex;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be more than zero');\n        }\n        // if ( index >= this.data.length ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // has the view window position changed\n    if ( this.viewIndex !== index ) {\n        // save for emit\n        prevIndex = this.viewIndex;\n        // sync global pointer\n        this.viewIndex = currIndex = index;\n\n        // rebuild all visible items\n        for ( i = 0; i < this.size; i++ ) {\n            // shortcuts\n            $item    = this.$body.children[i];\n            itemData = this.data[index];\n\n            // real item or stub\n            if ( itemData ) {\n                // correct inner data/index and render\n                $item.data  = itemData;\n                $item.index = index;\n                this.renderItem($item, itemData);\n\n                // apply CSS\n                if ( itemData.mark ) {\n                    $item.classList.add('mark');\n                } else {\n                    $item.classList.remove('mark');\n                }\n            } else {\n                // nothing to render\n                $item.data = $item.index = undefined;\n                $item.innerHTML = '&nbsp;';\n                $item.ready = false;\n            }\n            index++;\n        }\n\n        // there are some listeners\n        if ( this.events['move:view'] ) {\n            // notify listeners\n            this.emit('move:view', {prevIndex: prevIndex, currIndex: currIndex});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            this.emit('select:item', {$item: $item});\n        }\n\n        // update a linked scroll component\n        if ( this.scroll ) {\n            this.scroll.scrollTo(this.viewIndex);\n        }\n\n        // full rebuild\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Jump to the opposite side.\n *\n * @event module:stb/ui/list~List#cycle\n *\n * @type {Object}\n * @property {number} direction key code initiator of movement\n */\n\n\n/**\n * Attempt to go beyond the edge of the list.\n *\n * @event module:stb/ui/list~List#overflow\n *\n * @type {Object}\n * @property {number} direction key code initiator of movement\n */\n\n\n/**\n * Move focus to the given direction.\n *\n * @param {number} direction arrow key code\n *\n * @fires module:stb/ui/list~List#cycle\n * @fires module:stb/ui/list~List#overflow\n */\nList.prototype.move = function ( direction ) {\n    var self = this,\n        force = false;\n\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(direction) !== direction ) {\n            throw new Error(__filename + ': direction must be a number');\n        }\n    }\n\n    // empty list\n    if ( !this.data.length ) {\n        return;\n    }\n    switch ( direction ) {\n        case keys.left:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.up:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index > 0 ) {\n                    if ( this.$focusItem === this.$body.firstChild ) {\n                        console.log('v:' + this.viewIndex + ' res:' + (this.viewIndex - this.size));\n                        if ( this.viewIndex - this.size >= 0) {\n                            this.renderView(this.viewIndex - this.size);\n                        } else if ( this.viewIndex - this.size === 0 ) {\n                            this.renderView(0);\n                        } else {\n                            this.renderView(this.data.length - this.size);\n                        }\n                        this.focusItem(this.$body.lastChild);\n                    } else {\n                        this.focusItem(this.$focusItem.previousSibling);\n                    }\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the end of the list\n                        this.move(keys.end);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.right:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.down:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index < this.data.length - 1 ) {\n                    if ( this.$focusItem === this.$body.lastChild ) {\n                        this.renderView(this.viewIndex + this.size);\n                        this.focusItem(this.$body.firstChild);\n                    } else {\n                        this.focusItem(this.$focusItem.nextSibling);\n                    }\n                } else {\n\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the beginning of the list\n                        this.move(keys.home);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.pageUp:\n            if ( this.viewIndex < this.size ) {\n                // first page\n                this.renderView(0);\n            } else {\n                // second page and further\n                this.renderView(this.viewIndex - this.size + 1);\n            }\n\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.pageDown:\n            // data is bigger then one page\n            if ( this.data.length > this.size ) {\n                // determine jump size\n                if ( this.viewIndex > this.data.length - this.size * 2 ) {\n                    // last page\n                    this.renderView(this.data.length - this.size);\n                } else {\n                    // before the last page\n                    this.renderView(this.viewIndex + this.size - 1);\n                }\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n        case keys.home:\n            this.renderView(0);\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.end:\n            if ( this.data.length > this.size ) {\n                if ( this.data.length % this.size ) {\n                    this.renderView(this.data.length - (this.data.length % this.size));\n                    console.log(this.$body.children[this.data.length % this.size]);\n                    this.focusItem(this.$body.children[this.data.length % this.size - 1]);\n                } else {\n                    this.renderView(this.data.length - this.size);\n                    this.focusItem(this.$body.lastChild);\n                }\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n    }\n\n    // if ( focusIndex !== undefined ) {\n    //     $node.style.top = ( 0 + focusIndex ) * metrics.floatingPanelStep + 'px';\n    // }\n\n    // this.$floating.style.top = ( 0 + this.$focusItem.index - this.viewIndex ) * floatingStep + 'px';\n};\n\n\n/**\n * Highlight the given DOM element as focused.\n * Remove focus from the previously focused item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.focusItem = function ( $item ) {\n    var $prev = this.$focusItem;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n    }\n\n    // different element\n    if ( $item && $prev !== $item ) {\n        if ( DEVELOP ) {\n            if ( !($item instanceof Element) ) {\n                throw new Error(__filename + ': wrong $item type');\n            }\n            if ( $item.parentNode !== this.$body ) {\n                throw new Error(__filename + ': wrong $item parent element');\n            }\n        }\n\n        // some item is focused already\n        if ( $prev !== null ) {\n            if ( DEVELOP ) {\n                if ( !($prev instanceof Element) ) {\n                    throw new Error(__filename + ': wrong $prev type');\n                }\n            }\n\n            // style\n            $prev.classList.remove('focus');\n\n            // there are some listeners\n            if ( this.events['blur:item'] ) {\n                /**\n                 * Remove focus from an element.\n                 *\n                 * @event module:stb/ui/list~List#blur:item\n                 *\n                 * @type {Object}\n                 * @property {Element} $item previously focused HTML element\n                 */\n                this.emit('blur:item', {$item: $prev});\n            }\n        }\n        // reassign\n        this.$focusItem = $item;\n\n        this.$focusItem.data = this.data[this.$focusItem.index];\n\n        // correct CSS\n        $item.classList.add('focus');\n        //$item.classList.add('theme-focus');\n\n        // there are some listeners\n        if ( this.events['focus:item'] ) {\n            /**\n             * Set focus to a DOM element.\n             *\n             * @event module:stb/ui/list~List#focus:item\n             *\n             * @type {Object}\n             * @property {Element} $prev old/previous focused HTML element\n             * @property {Element} $curr new/current focused HTML element\n             */\n            this.emit('focus:item', {$prev: $prev, $curr: $item});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            /**\n             * Set focus to a list item.\n             *\n             * @event module:stb/ui/list~List#select:item\n             *\n             * @type {Object}\n             * @property {Element} $item new/current focused item\n             */\n            this.emit('select:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Highlight the given DOM element as blur.\n * Remove focus from the item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.blurItem = function ( $item ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) { throw new Error(__filename + ': wrong arguments number'); }\n    }\n\n    // different element\n    if ( $item ) {\n        if ( $item === this.$focusItem ) {\n            this.$focusItem = null;\n        }\n\n        $item.classList.remove('focus');\n        //$item.classList.remove('theme-focus');\n\n        // there are some listeners\n        if ( this.events['blur:item'] ) {\n            /**\n             * Remove focus from an element.\n             *\n             * @event module:stb/ui/list~List#blur:item\n             *\n             * @type {Object}\n             * @property {Element} $item previously focused HTML element\n             */\n            this.emit('blur:item', {$item: $item});\n        }\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Set the given item focused by item index.\n *\n * @param {number} index item data index\n */\nList.prototype.focusIndex = function ( index ) {\n    var viewIndex = this.viewIndex || 0;\n\n    if ( DEVELOP ) {\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be positive');\n        }\n        // if ( index > this.data.length - 1 ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // determine direction\n    if ( index >= viewIndex + this.size ) {\n        // check range\n        index = index < this.data.length - 1 ? index : this.data.length - 1;\n        // move down\n\n        // this.renderView(index - this.size + 1);\n        this.renderView(parseInt(index / this.size) * this.size);\n\n        this.focusItem(this.$body.children[index % this.size]);\n    } else if ( index < viewIndex ) {\n        // check range\n        index = index > 0 ? index : 0;\n        this.renderView(parseInt(index / this.size) * this.size);\n        this.focusItem(this.$body.children[index % this.size]);\n    } else {\n        // no move\n        if ( this.viewIndex === null ) {\n            // first attempt\n            this.renderView(0);\n        }\n        this.focusItem(this.$body.children[index - viewIndex]);\n    }\n};\n\n\n/**\n * Set item state and appearance as marked.\n *\n * @param {Node|Element} $item element to focus\n * @param {boolean} state true - marked, false - not marked\n */\nList.prototype.markItem = function ( $item, state ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 2 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !($item instanceof Element) ) {\n            throw new Error(__filename + ': wrong $item type');\n        }\n        if ( $item.parentNode !== this.$body ) {\n            throw new Error(__filename + ': wrong $item parent element');\n        }\n        if ( Boolean(state) !== state ) {\n            throw new Error(__filename + ': state must be boolean');\n        }\n    }\n\n    // correct CSS\n    if ( state ) {\n        $item.classList.add('mark');\n    } else {\n        $item.classList.remove('mark');\n    }\n\n    // apply flag\n    $item.data.mark = state;\n};\n\n\n// public\nmodule.exports = List;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar List             = require('mag-component-list'),\n    classChecked     = 'checked',\n    classIcon        = 'theme-icon theme-icon-radio',\n    classIconActive  = 'theme-icon theme-icon-radio-active';\n\n\n/**\n * Base radio list implementation\n *\n * @constructor\n * @extends List\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {string} [config.classIcon] icon default state class name\n * @param {string} [config.classIconActive] icon active state class name\n * @param {string} [config.classChecked] checked item class\n */\nfunction RadioList ( config ) {\n    var self = this;\n\n    if ( config.classIcon ) {\n        classIcon = config.classIcon;\n    }\n    if ( config.classIconActive ) {\n        classIconActive = config.classIconActive;\n    }\n    if ( config.classChecked ) {\n        classIcon = config.classChecked;\n    }\n\n    /**\n     * Checked item data\n     *\n     * @type {Element}\n     */\n    this.checkedData = null;\n\n    /**\n     * Checked element index\n     *\n     * @type {number}\n     */\n    this.checkedIndex = null;\n\n    List.call(this, config);\n\n    this.addListener('click:item', function ( event ) {\n        var $item = event.$item,\n            previousCheckedData = self.checkedData;\n\n        self.checkIndex($item.index);\n\n        if ( previousCheckedData !== $item.data ) {\n            /**\n             * Select element from list\n             *\n             * @event select\n             * @property {Element} $item object\n             */\n            self.emit('select', $item);\n        }\n    });\n}\n\n\nRadioList.prototype = Object.create(List.prototype);\nRadioList.prototype.constructor = RadioList;\n\n// set component name\nRadioList.prototype.name = 'mag-component-radio-list';\n\nRadioList.prototype.init = function ( config ) {\n    config = config || {};\n    List.prototype.init.call(this, config);\n};\n\n\n/**\n * Set data and render inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nRadioList.prototype.setData = function ( config ) {\n    List.prototype.setData.call(this, config);\n\n    this.defaultCheckedIndex = this.checkedIndex;\n\n    if ( this.$focusItem ) {\n        this.defaultFocusIndex = this.$focusItem.index;\n    } else {\n        this.defaultFocusIndex = 0;\n    }\n};\n\n\n/**\n * Reset data to default state and render inner structures and HTML.\n */\nRadioList.prototype.resetData = function () {\n    this.checkIndex(this.defaultCheckedIndex);\n    this.focusIndex(this.defaultFocusIndex);\n};\n\n\n/**\n * Set all states to false and render inner structures and HTML.\n *\n * @param {number} [focusIndex] focus index\n */\nRadioList.prototype.clearChecked = function ( focusIndex ) {\n    var index = 0;\n\n    for ( index; index < this.data.length; index++ ) {\n        this.data[index].state = false;\n    }\n\n    // no focusIndex, focusIndex may be 0\n    if ( !focusIndex && focusIndex !== 0 ) {\n        focusIndex = this.$focusItem ? this.$focusItem.index : 0;\n    }\n\n    this.setData({data: this.data, focusIndex: focusIndex});\n};\n\n\n/**\n * Default render function\n *\n * @param {Element} $item in list\n * @param {Object} data to render layout element\n * @param {string} [data.title] title of checkbox\n * @param {boolean} [data.state] state of checkbox: checked or not\n * @param {string} [data.value] special value of item\n */\nRadioList.prototype.renderItemDefault = function ( $item, data ) {\n    var table,\n        tr,\n        td,\n        check;\n\n    if ( $item.ready ) {\n        $item.$title.innerText = data.title || '';\n\n        if ( data.state ) {\n            $item.classList.add(classChecked);\n            $item.checkBox.className = classIconActive;\n        } else {\n            $item.classList.remove(classChecked);\n            $item.checkBox.className = classIcon;\n        }\n\n        $item.state = data.state;\n        $item.value = data.value;\n\n    } else {\n        $item.innerHTML = '';\n        table = document.createElement('table');\n        tr = document.createElement('tr');\n        td = document.createElement('td');\n        check = document.createElement('div');\n\n        if ( data.state ) {\n            $item.classList.add(classChecked);\n            check.className = classIconActive;\n        } else {\n            $item.classList.remove(classChecked);\n            check.className = classIcon;\n        }\n\n        table.appendChild(tr);\n        td.appendChild(check);\n\n        td.className = 'checkBoxWrapper';\n        tr.appendChild(td);\n\n        td = document.createElement('td');\n        td.className = 'title';\n        td.innerText = data.title || '';\n        tr.appendChild(td);\n\n        $item.checkBox = check;\n        $item.state = data.state;\n        $item.value = data.value;\n        $item.$title = td;\n\n        $item.appendChild(table);\n\n        if ( data.state ) {\n            this.checkedData = data;\n            this.checkedIndex = $item.index;\n        }\n\n        $item.ready = true;\n    }\n};\n\n\n/**\n * Check element by index\n *\n * @param {number} index of element to check\n */\nRadioList.prototype.checkIndex = function ( index ) {\n    var $node;\n\n    if ( DEVELOP ) {\n        if ( index >= this.data.length ) {\n            throw new Error(__filename + ': wrong index to check');\n        }\n    }\n\n    // do not need to do the same\n    if ( index === this.checkedIndex ) { return; }\n\n    if ( this.checkedIndex !== null && this.$node.children.length ) {\n        this.data[this.checkedIndex].state = false;\n        $node = this.getItemNodeByIndex(this.checkedIndex);\n        if ( $node ) {\n            $node.checkBox.className = classIcon;\n            $node.classList.remove(classChecked);\n        }\n    }\n\n    $node = this.getItemNodeByIndex(index);\n    if ( $node ) {\n        $node.checkBox.className = classIconActive;\n        $node.classList.add(classChecked);\n        $node.state = true;\n    }\n\n    this.data[index].state = true;\n    this.checkedData = this.data[index];\n    this.checkedIndex = index;\n};\n\n\n/**\n * Get list item node by item index\n *\n * @param {number} index of item to find node\n * @return {?Element} item node link\n */\nRadioList.prototype.getItemNodeByIndex = function ( index ) {\n    var children = this.$node.children;\n\n    index -= this.viewIndex;\n    if ( index < this.size && index >= 0 ) {\n        return children[index];\n    }\n\n    return null;\n};\n\nRadioList.prototype.renderItem = RadioList.prototype.renderItemDefault;\n\nmodule.exports = RadioList;\n","/**\n * Exit from an app in three ways.\n *\n * @module app.exit\n * @author Yaroslav Surilov <y.surilov@infomir.com>\n */\n\n'use strict';\n\nvar app          = require('mag-app'),\n    keys         = require('stb-keys'),\n    LayoutList   = require('mag-component-layout-list'),\n    Modal        = require('mag-component-modal'),\n    exitModal    = new Modal({\n        title: gettext('Exit'),\n        events: {\n            show: function () {\n                this.lastFocus = app.activePage.activeComponent;\n                this.children[0].focus();\n            },\n            hide: function () {\n                this.lastFocus.focus();\n            }\n        },\n        children: [\n            new LayoutList({\n                className: 'padded',\n                size: 2,\n                focusIndex: 0,\n                cycle: true,\n                data: [\n                    {\n                        items: [\n                            {\n                                value: gettext('Exit')\n                            }\n                        ],\n                        click: function () {\n                            core.call('exit');\n                        }\n                    },\n                    {\n                        items: [\n                            {\n                                value: gettext('Cancel')\n                            }\n                        ],\n                        click: function () {\n                            exitModal.hide();\n                        }\n                    }\n                ],\n                events: {\n                    keydown: function ( event ) {\n                        LayoutList.prototype.defaultEvents.keydown.call(this, event);\n                        if ( event.code === keys.back ) {\n                            event.stop = true;\n                            exitModal.hide();\n                        }\n                    }\n                }\n            })\n        ]\n    });\n\nmodule.exports = function ( pageToAddModal ) {\n    pageToAddModal.add(exitModal);\n\n    return function () {\n        exitModal.show();\n    };\n};\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar icons = require('magcore-theme/icons');\n\n\nif (  TARGET === 'android-stb' || TARGET === 'android-app' ) {\n    module.exports = {\n        view: 'theme-icon',\n        favorite: icons.FAVORITE,\n        favoriteActive: icons.FAVORITE_ACTIVE + ' active',\n        record: icons.PLAY,\n        tvGuide: icons.MENU\n    };\n} else {\n    module.exports = {\n        view: icons.RC_F1,\n        favorite: icons.RC_F3,\n        favoriteActive: icons.RC_F3,\n        record: icons.PLAY,\n        tvGuide: icons.RC_F4\n    };\n}\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar icons   = require('magcore-theme/icons'),\n\n    STYLED_TEXT = ' theme-styled-text',\n\n    tools   = require('../modules/tools');\n\nmodule.exports = function ( $item, data ) {\n    var $left,\n        $leftWrap,\n        $right,\n        $logoWrapper,\n        $iconWrapper;\n\n    if ( !$item.ready ) {\n        if ($item.lastChild ) {\n            $item.removeChild($item.lastChild);\n        }\n\n        $leftWrap = document.createElement('div');\n        $leftWrap.className = 'left-column-wrapper';\n\n        $left = document.createElement('div');\n        $left.className = 'left-column theme-styled-background theme-styled-text';\n\n        $right = document.createElement('div');\n        $right.className = 'right-column';\n\n        $item.$number = document.createElement('div');\n        $item.$number.className = 'number classic-tv-special-bg theme-styled-text';\n        $left.appendChild($item.$number);\n\n        $item.$logo = document.createElement('div');\n        $logoWrapper = document.createElement('div');\n        $item.$logo.className = 'logo';\n        $logoWrapper.className = 'logo-wrapper';\n        $logoWrapper.appendChild($item.$logo);\n        $left.appendChild($logoWrapper);\n\n        $item.$title = document.createElement('div');\n        $item.$title.className = 'title';\n        $left.appendChild($item.$title);\n\n\n        $iconWrapper = document.createElement('div');\n        $iconWrapper.className = 'icon-wrapper';\n\n\n        $item.$lockIcon = document.createElement('div');\n        $item.$lockIcon.className = icons.LOCK + STYLED_TEXT;\n        $left.appendChild($item.$lockIcon);\n\n\n        $item.$timeShiftIcon = document.createElement('div');\n        $item.$timeShiftIcon.className = icons.TIMESHIFT + STYLED_TEXT;\n        $left.appendChild($item.$timeShiftIcon);\n\n        $item.$favorite = document.createElement('div');\n        $item.$favorite.className = icons.FAVORITE_ACTIVE + ' active';\n        $left.appendChild($item.$favorite);\n\n        $item.$epg = document.createElement('div');\n        $item.$epg.className = 'epg theme-styled-background theme-styled-text';\n        $right.appendChild($item.$epg);\n\n        // $left.appendChild($iconWrapper);\n\n        $leftWrap.appendChild($left);\n        $item.appendChild($leftWrap);\n        $item.appendChild($right);\n\n\n        // $item.appendChild(dom.tag('div', {className: 'list left theme-styled-background theme-styled-text'},\n        //     $item.$num = dom.tag('div', {className: 'icon-box num theme-styled-text'}),\n        //     $item.$icon = dom.tag('div', {className: 'icon-box channel'}),\n        //     $item.$title = dom.tag('div', {className: 'text'}),\n        //     dom.tag('div', {className: 'row-icon'},\n        //         $item.censored = dom.tag('div', {className: 'theme-icon theme-icon-lock theme-styled-text'}),\n        //         $item.$serverTimeShift = dom.tag('div', {className: 'theme-icon theme-icon-timeshift theme-styled-text'}),\n        //         $item.$favorite = dom.tag('div', {className: 'theme-icon theme-icon-favorite-active active'})\n        //     )\n        // ));\n        // $item.appendChild(dom.tag('div', {className: 'list right theme-styled-background'},\n        //     $item.$epg = $item.appendChild(dom.tag('div', {className: 'text'}))\n        // ));\n        $item.ready = true;\n    }\n\n    $item.$number.innerText = data.number;\n\n    $item.$title.innerText = data.name;\n\n    if ( data.logo ) {\n        $item.$logo.classList.remove('hide');\n        $item.$logo.style.backgroundImage = 'url(' + core.backend.host + data.logo + ')';\n    } else {\n        $item.$logo.classList.add('hide');\n        $item.$logo.style.backgroundImage = null;\n    }\n\n    if ( tools.isCensored(data) ) {\n        $item.$lockIcon.classList.remove('hide');\n    } else {\n        $item.$lockIcon.classList.add('hide');\n    }\n\n    if ( data.local_timeshift || (data.archive && data.archive_range) ) {\n        $item.$timeShiftIcon.classList.remove('hide');\n    } else {\n        $item.$timeShiftIcon.classList.add('hide');\n    }\n\n    if ( data.favorite ) {\n        $item.$favorite.classList.remove('hide');\n    } else {\n        $item.$favorite.classList.add('hide');\n    }\n\n\n    if ( data.currentEpg && data.currentEpg.title && !tools.isCensored(data) ) {\n        $item.$epg.innerText = data.currentEpg.title || '';\n    } else {\n        $item.$epg.innerText = '';\n    }\n\n\n};\n","/**\n * Main page implementation.\n */\n\n'use strict';\n\nvar app            = require('mag-app'),\n    Page           = require('stb-component-page'),\n    dom            = require('spa-dom'),\n    keys           = require('stb-keys'),\n    List           = require('mag-component-list'),\n    Footer         = require('mag-component-footer'),\n    //ScheduleList = require('../modules/schedule.list'),\n    Modal          = require('mag-component-modal'),\n    ScrollBar      = require('stb-component-scrollbar'),\n    LayoutList     = require('mag-component-layout-list'),\n    page           = new Page({$node: window.pageDetails, focusable: false}),\n    isModeList     = true,\n    dayListScroll  = new ScrollBar(),\n    weekListScroll = new ScrollBar(),\n    channelPrograms, currentEpg, textContainer, channelIndex,\n    recordModalItem, playModalItem;\n\n//TODO: merge in sass into one class with #pageDetails\npage.$node.classList.add('active-week');\npage.$node.classList.add('mag-component-schedule-list');\npage.list = [];\n\n// example: formatData(1509966600); // Output: \"Пн 06 Ноября\"\nfunction formatData ( timestamp ) {\n    var dArr = new Date(timestamp * 1000).toDateString().split(' ');\n\n    return (\n        {\n            Sun: gettext('Sun'),\n            Mon: gettext('Mon'),\n            Tue: gettext('Tue'),\n            Wed: gettext('Wed'),\n            Thu: gettext('Thu'),\n            Fri: gettext('Fri'),\n            Sat: gettext('Sat')\n        }\n    )[dArr[0]] + ' ' + dArr[2] + ' ' + (\n        {\n            Jan: gettext('January'),\n            Feb: gettext('February'),\n            Mar: gettext('March'),\n            Apr: gettext('April'),\n            May: gettext('May'),\n            Jun: gettext('June'),\n            Jul: gettext('July'),\n            Aug: gettext('August'),\n            Sep: gettext('September'),\n            Oct: gettext('October'),\n            Nov: gettext('November'),\n            Dec: gettext('December')\n        }\n    )[dArr[1]];\n}\n\n\npage.footer = new Footer({visible: false, parent: page});\n\nfunction sendRecordIntent ( url ) {\n    window.core.intent({\n        action: 'record',\n        data: {\n            uri: currentEpg.channel.url || url,\n            name: currentEpg.title,\n            id: currentEpg.channel.id,\n            pvr: {\n                local: currentEpg.channel.local_pvr,\n                server: currentEpg.channel.pvr\n            },\n            startTime: currentEpg.start,\n            endTime: currentEpg.end\n        }\n    });\n}\n\nrecordModalItem = {\n    items: [\n        {className: 'theme-icon theme-icon-rc-f1'},\n        {value: gettext('Record')}\n    ],\n    click: function () {\n        page.modalActions.hide();\n        if ( currentEpg ) {\n            if ( currentEpg.channel.local_pvr && !currentEpg.channel.url ) {\n                currentEpg.channel.getUrl(function ( error, data ) {\n                    if ( error ) {\n                        console.log(error);\n                    }\n                    console.log('get channel url ' + data.url);\n                    sendRecordIntent(data ? data.url : '');\n                });\n            } else {\n                sendRecordIntent();\n            }\n        } else {\n            console.log('currentEpg not defined - cant get current channel data');\n        }\n    }\n};\n\nplayModalItem = {\n    items: [\n        {className: 'theme-icon theme-icon-rc-f2'},\n        {value: gettext('Play')}\n    ],\n    click: function () {\n        app.sendPlayEpgIntent(currentEpg, channelIndex);\n        page.modalActions.hide();\n    }\n};\n\n// modal message: all actions\npage.modalActions = new Modal({\n    visible: false,\n    title: gettext('Menu'),\n    events: {\n        show: function () {\n            page.footer.hide();\n            page.modalActions.previousActiveComponent = page.activeComponent;\n            this.focus();\n        },\n        hide: function () {\n            page.footer.show();\n            page.modalActions.previousActiveComponent.focus();\n        }\n    },\n    children: [\n        page.modalActionsList = new LayoutList({\n            cycle: true,\n            focusIndex: 0,\n            size: 1,\n            scroll: page.modalActionsScroll,\n            data: [recordModalItem]\n        })\n    ]\n});\npage.add(page.modalActions);\n\npage.$headerLeft = page.$body.appendChild(dom.tag('div', {className: 'container-title-left'}, gettext('TV guide') + ' / ... '));\npage.$buttonArrowLeft = page.$body.appendChild(dom.tag('div', {className: 'container-arrow-left'}, '/\\n\\\\'));\n\npage.$buttonArrowLeft.addEventListener('click', function () {\n    app.route(app.pages.main);\n});\n\ntextContainer = page.$body.appendChild(\n    dom.tag('div', {className: 'detail-text-container'},\n        page.$textTitle = dom.tag('div', {className: 'text-title'}, 'text title'),\n        page.$textDescription = dom.tag('div', {className: 'text-description'}, 'text Description'))\n);\n\npage.weekList = new List({\n    $node: window.weekListNode,\n    $body: window.weekListBody,\n    scroll: weekListScroll,\n    className: 'left-side',\n    size: app.metrics.scheduleListSize,\n    focusIndex: 0,\n    data: [{label: ''}],\n    render: function ( $item, data ) {\n\n        if ( !$item.ready ) {\n            // $textWrapper = document.createElement('textWrapper');\n            if ( $item.lastChild ) {\n                $item.removeChild($item.lastChild);\n            }\n            $item.classList.add('theme-styled-background');\n            $item.$title = $item.appendChild(document.createElement('div'));\n            $item.$title.classList.add('text');\n            // $item.$title.classList.add('theme-styled-background');\n            $item.ready = true;\n        }\n        $item.$title.innerText = data.label;\n        if ( data.label === formatData(new Date().getTime() / 1000) ) {\n            $item.$title.classList.add('now');\n        } else {\n            $item.$title.classList.remove('now');\n        }\n    },\n    events: {\n        'select:item': function () {\n            var dayData   = [],\n                titleData = '';\n\n            if ( page.list.length > 0 ) {\n                if ( page.weekList.$focusItem && page.list[page.weekList.$focusItem.index] ) {\n                    dayData = page.list[page.weekList.$focusItem.index].list;\n                    if ( page.dayList.$focusItem ) {\n                        titleData = page.list[page.weekList.$focusItem.index].list[page.dayList.$focusItem.index];\n                    }\n                }\n                page.dayList.setData({\n                    focusIndex: 0,\n                    data: dayData\n                });\n                page.updateTitle(titleData);\n\n                if (\n                    page.weekList.$focusItem\n                    && page.weekList.$focusItem.data\n                    && page.weekList.$focusItem.data.label === formatData(Date.now() / 1000)\n                ) {\n                    // this is current day and we should focus current program\n                    let now = Date.now(),\n                        currentProgramIndex;\n\n                    currentProgramIndex = page.dayList.data.findIndex(\n                        day => (day.epg.start * 1000 < now && day.epg.end * 1000 > now)\n                    );\n\n                    if ( currentProgramIndex > -1 ) {\n                        page.dayList.focusIndex(currentProgramIndex);\n                    }\n                }\n            }\n        },\n        keydown: function ( event ) {\n            if ( isModeList ) {\n                if ( event.code === keys.left || event.code === keys.right ) {\n                    if ( event.code === keys.left ) {\n                        page.$node.classList.add('active-week');\n                        page.$node.classList.remove('active-day');\n                        //document.body.classList.add('background-off');\n                        if ( !isModeList ) {\n                            page.weekList.$body.style.display = '';\n                            page.dayList.$body.style.display = '';\n                            textContainer.classList.remove('full');\n                            isModeList = true;\n                        }\n                        app.route(app.pages.main);\n                    }\n                    if ( event.code === keys.right && page.list.length ) {\n                        page.$node.classList.add('active-day');\n                        page.$node.classList.remove('active-week');\n                        page.dayList.focus();\n                    }\n                } else {\n                    List.prototype.defaultEvents.keydown.call(this, event);\n                }\n            } else if ( event.code === keys.left ) {\n                page.weekList.$body.style.display = '';\n                page.dayList.$body.style.display = '';\n                textContainer.classList.remove('full');\n                isModeList = true;\n            }\n        }\n    }\n});\npage.add(page.weekList);\npage.weekList.$node.appendChild(weekListScroll.$node);\n\npage.dayList = new List({\n    className: 'right-side',\n    $node: window.dayListNode,\n    $body: window.dayListBody,\n    scroll: dayListScroll,\n    size: app.metrics.scheduleListSize,\n    focusIndex: 0,\n    data: [{time: {from: '', to: ''}, title: '', description: ''}],\n    render: function ( $item, data ) {\n        if ( !$item.ready ) {\n            if ( $item.lastChild ) {\n                $item.removeChild($item.lastChild);\n            }\n            $item.classList.add('theme-styled-background');\n            $item.appendChild(document.createElement('div'));\n            $item.$time = $item.lastChild.appendChild(document.createElement('div'));\n            $item.$time.classList.add('container');\n            $item.$title = $item.lastChild.appendChild(document.createElement('div'));\n            $item.$title.classList.add('text');\n            $item.$iconNow = $item.lastChild.appendChild(document.createElement('div'));\n            $item.$iconNow.appendChild(document.createElement('div'));\n            $item.$iconNow.className = 'current-program';\n\n            $item.ready = true;\n        }\n        $item.$time.innerText = data.time.from;\n        $item.$title.innerText = data.title;\n\n        if ( data.epg && (data.epg.archive || new Date(data.epg.start * 1000) > new Date()) ) {\n            $item.classList.remove('is-not-archive');\n        } else {\n            $item.classList.add('is-not-archive');\n        }\n\n        if ( data.epg && new Date(data.epg.start * 1000) < new Date() && new Date(data.epg.end * 1000) > new Date() ) {\n            $item.$title.style.fontWeight = 'bold';\n            $item.$iconNow.classList.add('theme-equalizer-animated');\n        } else {\n            $item.$title.style.fontWeight = null;\n            $item.$iconNow.classList.remove('theme-equalizer-animated');\n        }\n    },\n    events: {\n        keydown: function ( event ) {\n            if ( isModeList ) {\n                if ( page.list.length ) {\n                    // don't open additional info if list is empty\n                    List.prototype.defaultEvents.keydown.call(this, event);\n                }\n                if ( event.code === keys.left ) {\n                    if ( page.list.length ) {\n                        page.$node.classList.add('active-week');\n                        page.$node.classList.remove('active-day');\n                        page.weekList.focus();\n                    } else {\n                        // empty list, go to main page\n                        page.$node.classList.add('active-week');\n                        page.$node.classList.remove('active-day');\n                        //document.body.classList.add('background-off');\n                        app.route(app.pages.main);\n                    }\n                }\n            } else {\n                if ( event.code === keys.ok ) {\n                    List.prototype.defaultEvents.keydown.call(this, event);\n                }\n                if ( event.code === keys.left ) {\n                    page.weekList.$body.style.display = '';\n                    page.dayList.$body.style.display = '';\n                    textContainer.classList.remove('full');\n                    isModeList = true;\n                }\n            }\n        },\n        'select:item': function () {\n            var titleData = '',\n                footerData = {};\n\n            if ( page.list.length > 0 ) {\n                if ( page.dayList.$focusItem && page.weekList.$focusItem && page.list[page.weekList.$focusItem.index] ) {\n                    titleData = page.list[page.weekList.$focusItem.index].list[page.dayList.$focusItem.index];\n                }\n                page.updateTitle(titleData);\n                // update footer info\n                if ( currentEpg && currentEpg.channel ) {\n                    footerData.right = {\n                        code: keys.info,\n                        action: function () {\n                            if ( isModeList ) {\n                                page.weekList.$body.style.display = 'none';\n                                page.dayList.$body.style.display = 'none';\n                                textContainer.classList.add('full');\n                            } else {\n                                page.weekList.$body.style.display = '';\n                                page.dayList.$body.style.display = '';\n                                textContainer.classList.remove('full');\n                            }\n                            isModeList = !isModeList;\n                        }\n                    };\n\n                    // show \"record\" and menu buttons in footer for recordable items\n                    if ( (new Date(currentEpg.start * 1000) > Date.now()) && (currentEpg.channel.local_pvr || currentEpg.channel.pvr) ) {\n                        footerData.left = {\n                            code: keys.menu,\n                            action: function () {\n                                page.modalActionsList.setData({\n                                    data: [recordModalItem],\n                                    focusIndex: 0\n                                });\n                                setTimeout(function () {\n                                    page.modalActions.show();\n                                });\n                            }\n                        };\n                        footerData.middle = [\n                            {\n                                code: keys.f1,\n                                title: gettext('Record'),\n                                action: function () {\n                                    if ( currentEpg.channel.local_pvr && !currentEpg.channel.url ) {\n                                        currentEpg.channel.getUrl(function ( error, data ) {\n                                            if ( error ) {\n                                                console.log(error);\n                                            }\n                                            sendRecordIntent(data ? data.url : '');\n                                        });\n                                    } else {\n                                        sendRecordIntent();\n                                    }\n                                }\n                            }\n                        ];\n                    } else if ( currentEpg.archive ) {\n                        footerData.left = {\n                            code: keys.menu,\n                            action: function () {\n                                page.modalActionsList.setData({\n                                    data: [playModalItem],\n                                    focusIndex: 0\n                                });\n                                setTimeout(function () {\n                                    page.modalActions.show();\n                                });\n                            }\n                        };\n\n                        footerData.middle = [\n                            {\n                                code: keys.f2,\n                                title: gettext('Play'),\n                                action: function () {\n                                    app.sendPlayEpgIntent(currentEpg, channelIndex);\n                                }\n                            }\n                        ];\n                    }\n\n                    if ( footerData.middle ) {\n                        footerData.label = {\n                            code: keys.menu,\n                            title: gettext('Hold OK button to open Options menu'),\n                            action: function () {\n                                page.modalActionsList.setData({\n                                    data: [playModalItem],\n                                    focusIndex: 0\n                                });\n                                setTimeout(function () {\n                                    page.modalActions.show();\n                                });\n                            }\n                        };\n                    }\n                    page.footer.init(footerData);\n                    page.footer.show();\n                } else if ( page.footer.visible ) {\n                    page.footer.hide();\n                }\n            }\n        },\n        'click:item': function ( event ) {\n            var epg;\n\n            if ( isModeList && event.$item ) {\n                epg = event.$item.data.epg;\n            } else {\n                return;\n            }\n            // channel is in archive and epg program too, we can play it\n            if ( epg.archive && epg.channel && epg.channel.archive && epg.channel['archive_range'] ) {\n                app.sendPlayEpgIntent(epg, channelIndex);\n            }\n        }\n    }\n});\npage.add(page.dayList);\npage.dayList.$node.appendChild(dayListScroll.$node);\n\npage.setData = function ( data ) {\n    var focusWeek = 0,\n        focusDay  = 0,\n        indexDay, indexWeek, dayItem;\n\n    this.list = data || [];\n\n    for ( indexWeek = 0; indexWeek < data.length; indexWeek++ ) {\n        if ( data[indexWeek].label === formatData(new Date().getTime() / 1000) ) {\n            focusWeek = indexWeek;\n            for ( indexDay = 0; indexDay < data[indexWeek].list.length; indexDay++ ) {\n                dayItem = data[indexWeek].list[indexDay];\n                if ( dayItem.epg && new Date(dayItem.epg.start * 1000) < new Date() &&\n                    new Date(dayItem.epg.end * 1000) > new Date() ) {\n                    focusDay = indexDay;\n                    break;\n                }\n            }\n        }\n    }\n\n\n    this.weekList.setData({\n        focusIndex: focusWeek,\n        data: this.list,\n        size: Math.min(this.list.length, app.metrics.scheduleListSize)\n    });\n\n    this.dayList.setData({\n        focusIndex: focusDay,\n        data: this.list[focusWeek] ? this.list[focusWeek].list : [{time: {from: '', to: ''}, title: ''}],\n        size: Math.min(this.list[focusWeek], app.metrics.scheduleListSize)\n    });\n\n    page.updateTitle(this.list[0] ? this.list[0].list[0] : {error: true});\n};\n\npage.updateTitle = function ( event ) {\n    if ( !event || event.error ) {\n        currentEpg = null;\n        page.$textTitle.innerText = '';\n        page.$textDescription.innerText = '';\n\n        return;\n    }\n    currentEpg = event.epg;\n    page.$textTitle.innerText = event.title;\n    page.$textDescription.innerText = event.description;\n};\n\n\npage.addListener('keydown', function ( event ) {\n    if ( event.code === keys.back ) {\n        if ( isModeList ) {\n            //document.body.classList.add('background-off');\n            app.route(app.pages.main);\n        } else {\n            page.weekList.$body.style.display = '';\n            page.dayList.$body.style.display = '';\n            textContainer.classList.remove('full');\n            isModeList = true;\n        }\n    }\n});\n\n\npage.addListener('show', function ( event ) {\n    var regExp = /.*(\\d{2}:\\d{2})(:\\d{2}).*/,\n        itemData, channelName;\n\n\n    if ( event && event.data && event.data.list && event.data.list.length ) {\n        page.weekList.$body.style.display = '';\n        page.dayList.$body.style.display = '';\n        channelPrograms = [];\n        channelIndex = event.data.channelIndex;\n        event.data.list.forEach(function ( item ) {\n            itemData = {\n                time: {\n                    from: new Date(item.start * 1000).toTimeString().replace(regExp, '$1'),\n                    to: new Date(item.end * 1000).toTimeString().replace(regExp, '$1')\n                },\n                epg: item,\n                title: item.title || '',\n                description: item.description || ''\n            };\n\n            if ( channelPrograms[channelPrograms.length - 1] && channelPrograms[channelPrograms.length - 1].label === formatData(item.start) ) {\n                channelPrograms[channelPrograms.length - 1].list.push(itemData);\n            } else {\n                channelPrograms.push({\n                    label: formatData(item.start),\n                    list: [itemData]\n                });\n            }\n        });\n        page.setData(channelPrograms);\n        if ( app.pages.main.channelList.$focusItem ) {\n            channelName = app.pages.main.channelList.$focusItem.data.name || '';\n        }\n        page.$headerLeft.innerText = gettext('TV guide') + ' / ' + channelName;\n\n        if ( !page.activeComponent ) {\n            page.weekList.focus();\n        }\n\n        // force init epg program description\n        page.dayList.emit('select:item');\n    } else {\n        page.weekList.$body.style.display = 'none';\n        page.dayList.$body.style.display = 'none';\n        page.setData([]);\n    }\n});\n\n// public\nmodule.exports = page;\n"],"sourceRoot":""}