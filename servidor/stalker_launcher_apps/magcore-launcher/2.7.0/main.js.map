{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/spa-app/lib/core.js","webpack:///./node_modules/spa-component/index.js","webpack:///./node_modules/cjs-emitter/index.js","webpack:///./node_modules/stb-keys/index.js","webpack:///./node_modules/mag-app/index.js","webpack:///./node_modules/spa-keys/index.js","webpack:///./node_modules/stb-component/index.js","webpack:///./node_modules/stb-app/lib/css.js","webpack:///./node_modules/spa-preloader/index.js","webpack:///./node_modules/mag-component-list/index.js","webpack:///./src/js/main.js","webpack:///./node_modules/mag-app/lib/main.js","webpack:///./node_modules/cjs-query/index.js","webpack:///./src/js/config.js","webpack:///./node_modules/spa-app/lib/events.js","webpack:///./node_modules/stb-shim-classlist/index.js","webpack:///./node_modules/stb-app/lib/metrics.js","webpack:///./src/js/metrics.js","webpack:///./node_modules/mag-app/lib/css.js","webpack:///./node_modules/spa-gettext/index.js","webpack:///./node_modules/cjs-gettext/index.js","webpack:///./src/js/modules/profile.js","webpack:///./node_modules/cjs-format/index.js","webpack:///./src/js/pages/main.js","webpack:///./node_modules/stb-component-page/index.js","webpack:///./node_modules/spa-component-page/index.js","webpack:///./node_modules/spa-component-button/index.js","webpack:///./node_modules/spa-component-grid/index.js","webpack:///./node_modules/mag-component-layout-list/index.js","webpack:///./node_modules/mag-component-layout/index.js","webpack:///./src/js/modules/apps.render.js","webpack:///./node_modules/mag-component-modal/index.js","webpack:///./node_modules/stb-component-modal/index.js","webpack:///./node_modules/spa-component-modal/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Emitter","parse","app","query","document","location","search","substring","config","activePage","route","pageTo","data","page","pageFrom","active","id","$node","classList","remove","events","emit","add","showPage","this","from","to","counter","Component","self","visible","focusable","$body","parent","children","propagate","createElement","className","hide","defaultEvents","keys","forEach","eventName","addListener","apply","addEventListener","event","focus","stopPropagation","constructor","child","index","arguments","length","push","parentNode","appendChild","item","activeComponent","blur","splice","indexOf","removeChild","activeItem","show","callback","once","onceWrapper","removeListener","addListeners","callbacks","filter","fn","undefined","Array","slice","back","backspace","channelNext","tab","channelPrev","ok","enter","exit","escape","volumeUp","volumeDown","f1","f2","f3","f4","refresh","frame","phone","set","tv","menu","rewind","forward","audio","standby","keyboard","usbMounted","usbUnmounted","playPause","play","pause","stop","power","record","info","mute","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","space","pageUp","pageDown","end","home","left","up","right","down","insert","del","link","rel","href","metrics","height","head","preloader","queueSize","groups","verbose","handler","type","group","src","width","url","links","img","Image","onload","onerror","ontimeout","List","$focusItem","viewIndex","TYPE_VERTICAL","size","cycle","scroll","provider","TYPE_HORIZONTAL","init","renderItemDefault","$item","innerText","renderItem","mousewheel","wheelDeltaY","move","wheelDeltaX","keydown","code","idx","currSize","onClick","focusItem","render","error","setData","realSize","maxCount","viewSize","pos","normalize","blurItem","focusIndex","renderView","itemData","prevIndex","currIndex","mark","innerHTML","ready","scrollTo","direction","force","firstChild","previousSibling","lastChild","nextSibling","$prev","$curr","markItem","state","gettext","profile","load","core","environment","language","window","pageMain","pages","main","getCoreInstance","platform","body","setAttribute","contextmenu","preventDefault","split","part","decodeURIComponent","stringify","params","encodeURIComponent","join","DOMContentLoaded","unload","eventLocal","keyCode","ctrlKey","altKey","shiftKey","keypress","documentElement","DOMTokenList","el","_element","_classCache","classes","replace","token","contains","toString","toggle","Element","screenHeight","screen","availHeight","availTop","availBottom","availWidth","availLeft","availRight","480","appMenuRows","appMenuCols","576","720","1080","linkCSS","theme","path","Gettext","loader","prepare","_","pgettext","ngettext","defaultLanguage","xhr","ext","XMLHttpRequest","JSON","responseText","open","send","meta","msgId","context","plural","eval","format","paginateItems","items","rows","cols","iPage","iRow","iCol","pageAmount","Math","ceil","pageData","itemIndex","disable","getAppPackages","apps","categoryIndex","appIndex","categoryMap","imgLinks","offset","logo","categories","map","category","toLowerCase","currentApp","icons","icon","uris","logoNormal","focusIcon","logoActive","processData","packages","corePackage","args","alias","backend","settings","themes","request","response","color","logoFilename","logoAlign","match","number","btnArrowLeft","btnArrowRight","lastActiveComponent","menuModal","appsCount","gridCurrentItem","Page","Button","Grid","LayoutList","menuData","$time","getElementById","gridList","gridListIndex","list","setTime","time","Date","hours","getHours","mins","getMinutes","focusGrid","style","visibility","lockGridItem","focusItemData","y","x","locked","pmArrowLeft","click","pmArrowRight","pmGroupList","$title","backgroundImage","click:item","button","focus:item","pageIndex","groupPage","grid","cycleX","cycleY","pmItemDesc","description","taskManager","runApp","notify","title","overflow","ModalMessage","lockApp","pmGrid","pmLogo","setInterval","$icon","$text","clickDuration","setTimeout","focusX","focusY","fill","posX","posY","dX","dY","idxY","idxX","$row","$tbody","newData","draw","onItemClick","construct","$table","colSpan","rowSpan","insertRow","insertCell","result","sizeX","sizeY","translate","fresh","defaultTranslate","arr","Layout","handlers","$noData","fixedData","layout","inner","layoutConfig","currentNode","currentData","childNodes","$parentItem","$wrap","noData","$wrapper","HTMLElement","wrap","componentClickHandler","textContent","$cell","$app","$normalBody","$activeBody","$lock","$normalIcon","$activeIcon","$name","$shadow","backgroundColor","colors","splashBackground","splashFont","cloneNode","StbComponentModal","Modal","$overlay","onkeydown","$header"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    parse   = require('cjs-query').parse,\n    app     = new Emitter();\n\n\n/**\n * Make the given inactive/hidden page active/visible.\n * Pass some data to the page and trigger the corresponding event.\n *\n * @param {Page} page item to show\n * @param {*} [data] data to send to page\n *\n * @return {boolean} operation status\n */\nfunction showPage ( page, data ) {\n    // page available and can be hidden\n    if ( page && !page.active ) {\n        // apply visibility\n        page.$node.classList.add('active');\n        page.active = true;\n        app.activePage = page;\n\n        debug.info('show component ' + page.name + '#' + page.id, null, {\n            tags: ['show', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' show', 'green');\n\n        // there are some listeners\n        if ( page.events['show'] ) {\n            // notify listeners\n            page.emit('show', {data: data});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n/**\n * Make the given active/visible page inactive/hidden and trigger the corresponding event.\n *\n * @param {Page} page item to hide\n *\n * @return {boolean} operation status\n */\nfunction hidePage ( page ) {\n    // page available and can be hidden\n    if ( page && page.active ) {\n        // apply visibility\n        page.$node.classList.remove('active');\n        page.active  = false;\n        app.activePage = null;\n\n        debug.info('hide component ' + page.name + '#' + page.id, null, {\n            tags: ['hide', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' hide', 'grey');\n\n        // there are some listeners\n        if ( page.events['hide'] ) {\n            // notify listeners\n            page.emit('hide');\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n// url request params\napp.query = parse(document.location.search.substring(1));\n\n\n// global application configuration\n// in config.js file in js root\napp.config = require('app:config');\n\n\n// the only visible page\napp.activePage = null;\n\n\n/**\n * Browse to a given page.\n * Do nothing if the link is invalid. Otherwise hide the current, show new and update the \"previous\" link.\n *\n * @param {Page} pageTo instance of the page to show\n * @param {*} [data] options to pass to the page on show\n *\n * @return {boolean} operation status\n */\napp.route = function ( pageTo, data ) {\n    var pageFrom = app.activePage;\n\n    if ( DEVELOP ) {\n        //if ( router.pages.length > 0 ) {\n        if ( !pageTo || typeof pageTo !== 'object' ) {\n            throw new Error(__filename + ': wrong pageTo type');\n        }\n        if ( !('active' in pageTo) ) {\n            throw new Error(__filename + ': missing field \"active\" in pageTo');\n        }\n        //}\n    }\n\n    // valid not already active page\n    if ( pageTo && !pageTo.active ) {\n        //debug.log('router.navigate: ' + pageTo.id, pageTo === pageFrom ? 'grey' : 'green');\n        debug.info('app route: ' + pageTo.name + '#' + pageTo.id, null, {tags: ['route', pageTo.name, pageTo.id]});\n\n        // update url\n        //location.hash = this.stringify(name, data);\n\n        // apply visibility\n        hidePage(app.activePage);\n        showPage(pageTo, data);\n\n        // there are some listeners\n        if ( this.events['route'] ) {\n            // notify listeners\n            this.emit('route', {from: pageFrom, to: pageTo});\n        }\n\n        // store\n        //this.history.push(pageTo);\n\n        return true;\n    }\n\n    //debug.warn('invalid page to route: ' + pageTo.id, null, {tags: ['route', 'page', pageTo.id]});\n    console.warn('invalid page to route: ' + pageTo.id);\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    Emitter = require('cjs-emitter'),\n    counter = 0;\n\n\n/**\n * Base component implementation.\n *\n * Visual element that can handle sub-components.\n * Each component has a DOM element container $node with a set of classes:\n * \"component\" and some specific component class names depending on the hierarchy, for example \"page\".\n * Each component has a unique ID given either from $node.id or from data.id. If not given will generate automatically.\n *\n * @constructor\n * @extends Emitter\n *\n * @param {Object} [config={}] init parameters\n * @param {Element} [config.id] component unique identifier (generated if not set)\n * @param {string} [config.className] space-separated list of classes for \"className\" property of this.$node\n * @param {Element} [config.$node] DOM element/fragment to be a component outer container\n * @param {Element} [config.$body] DOM element/fragment to be a component inner container (by default is the same as $node)\n * @param {Component} [config.parent] link to the parent component which has this component as a child\n * @param {Array.<Component>} [config.children=[]] list of components in this component\n * @param {Object.<string, function>} [config.events={}] list of event callbacks\n * @param {boolean} [config.visible=true] component initial visibility state flag\n * @param {boolean} [config.focusable=true] component can accept focus or not\n * @param {boolean} [config.propagate=false] allow to emit events to the parent component\n *\n * @fires module:stb/component~Component#click\n *\n * @example\n * var component = new Component({\n *     $node: document.getElementById(id),\n *     className: 'bootstrap responsive',\n *     events: {\n *         click: function () { ... }\n *     }\n * });\n * component.add( ... );\n * component.focus();\n */\nfunction Component ( config ) {\n    // current execution context\n    var self = this,\n        name;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.id && typeof config.id !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.id');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$node && !(config.$node instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$node type');\n        }\n        if ( config.$body && !(config.$body instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$body type');\n        }\n        if ( config.parent && !(config.parent instanceof Component) ) {\n            throw new Error(__filename + ': wrong config.parent type');\n        }\n        if ( config.children && !Array.isArray(config.children) ) {\n            throw new Error(__filename + ': wrong config.children type');\n        }\n    }\n\n    /**\n     * Component visibility state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.visible = true;\n\n    /**\n     * Component can accept focus or not.\n     *\n     * @type {boolean}\n     */\n    this.focusable = true;\n\n    /**\n     * DOM outer handle.\n     *\n     * @type {Element}\n     */\n    this.$node = null;\n\n    /**\n     * DOM inner handle.\n     * In simple cases is the same as $node.\n     *\n     * @type {Element}\n     */\n    this.$body = null;\n\n    /**\n     * Link to the parent component which has this component as a child.\n     *\n     * @type {Component}\n     */\n    this.parent = null;\n\n    /**\n     * List of all children components.\n     *\n     * @type {Component[]}\n     */\n    this.children = [];\n\n    /**\n     * allow to emit events to the parent component\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.propagate = !!config.propagate;\n\n    // parent constructor call\n    Emitter.call(this);\n\n    // outer handle - empty div in case nothing is given\n    this.$node = config.$node || document.createElement('div');\n\n    // inner handle - the same as outer handler in case nothing is given\n    this.$body = config.$body || this.$node;\n\n    // set CSS class names\n    //this.$node.className += ' component ' + (config.className || '');\n    // previous approach is not good as it mess with components hierarchy\n    this.$node.className = this.name + ' ' + (config.className || '');\n\n    // apply component id if given, generate otherwise\n    this.id = config.id || this.$node.id || 'cid' + counter++;\n\n    // apply hierarchy\n    if ( config.parent ) {\n        // add to parent component\n        config.parent.add(this);\n    }\n\n    // apply given visibility\n    if ( config.visible === false ) {\n        // default state is visible\n        this.hide();\n    }\n\n    // apply focus handling method\n    if ( config.focusable === false ) {\n        // can't accept focus\n        this.focusable = false;\n    }\n\n    // a descendant defined own events\n    if ( this.defaultEvents ) {\n        // sanitize\n        config.events = config.events || {};\n\n        if ( DEVELOP ) {\n            if ( typeof config.events !== 'object' ) {\n                throw new Error(__filename + ': wrong config.events type');\n            }\n            if ( typeof this.defaultEvents !== 'object' ) {\n                throw new Error(__filename + ': wrong this.defaultEvents type');\n            }\n        }\n\n        for ( name in this.defaultEvents ) {\n            // overwrite default events with user-defined\n            config.events[name] = config.events[name] || this.defaultEvents[name];\n        }\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( eventName ) {\n            self.addListener(eventName, config.events[eventName]);\n        });\n    }\n\n    // apply the given children components\n    if ( config.children ) {\n        // apply\n        this.add.apply(this, config.children);\n    }\n\n    // component activation by mouse\n    this.$node.addEventListener('click', function ( event ) {\n        // left mouse button\n        //if ( event.button === 0 ) {\n        // activate if possible\n        self.focus();\n\n        // there are some listeners\n        if ( self.events['click'] ) {\n            /**\n             * Mouse click event.\n             *\n             * @event module:stb/component~Component#click\n             *\n             * @type {Object}\n             * @property {Event} event click event data\n             */\n            self.emit('click', event);\n        }\n        //}\n\n        if ( DEVELOP ) {\n            // middle mouse button\n            if ( event.button === 1 ) {\n                //debug.inspect(self, 0);\n                debug.info('\"window.link\" or \"' + self.id + '.component\"', 'this component is now available in global scope');\n                window.link = self;\n                self.$node.classList.toggle('wired');\n            }\n        }\n\n        event.stopPropagation();\n    });\n\n    if ( DEVELOP ) {\n        // expose inner ID to global scope\n        window[self.id] = self.$node;\n\n        // expose a link\n        this.$node.component = this.$body.component = this;\n        this.$node.title = this.name + '#' + this.id + ' (outer)';\n        this.$body.title = this.name + '#' + this.id + ' (inner)';\n    }\n\n    debug.info('create component ' + this.name + '#' + this.id, null, {\n        tags: ['create', 'component', this.name, this.id]\n    });\n}\n\n\n// inheritance\nComponent.prototype = Object.create(Emitter.prototype);\nComponent.prototype.constructor = Component;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nComponent.prototype.defaultEvents = null;\n\n\n/**\n * Add a new component as a child.\n *\n * @param {...Component} [child] variable number of elements to append\n *\n * @files Component#add\n *\n * @example\n * panel.add(\n *     new Button( ... ),\n *     new Button( ... )\n * );\n */\nComponent.prototype.add = function ( child ) {\n    var index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        child = arguments[index];\n\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        // apply\n        this.children.push(child);\n        child.parent = this;\n\n        // correct DOM parent/child connection if necessary\n        if ( child.$node && child.$node.parentNode === null ) {\n            this.$body.appendChild(child.$node);\n        }\n\n        debug.info('add component ' + child.name + '#' + child.id + ' to ' + this.name + '#' + this.id, null, {\n            tags: ['add', 'component', this.name, this.id, child.name, child.id]\n        });\n\n        // there are some listeners\n        if ( this.events['add'] ) {\n            /**\n             * A child component is added.\n             *\n             * @event module:stb/component~Component#add\n             *\n             * @type {Object}\n             * @property {Component} item new component added\n             */\n            this.emit('add', {item: child});\n        }\n\n        //debug.log('component ' + this.name + '#' + this.id + ' new child: ' + child.name + '#' + child.id);\n    }\n};\n\n\n/* @todo: consider activation in future */\n///**\n// * Insert component into the specific position.\n// *\n// * @param {Component} child component instance to insert\n// * @param {number} index insertion position\n// */\n//Component.prototype.insert = function ( child, index ) {\n//    var prevIndex = this.children.indexOf(child);\n//\n//    if ( DEVELOP ) {\n//        if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n//        if ( !(child instanceof Component) ) { throw new Error(__filename + ': wrong child type'); }\n//    }\n//\n//    if ( prevIndex !== -1 ) {\n//        this.children.splice(prevIndex, 1);\n//        this.$body.removeChild(child.$node);\n//    }\n//\n//    if ( index === this.children.length ) {\n//        this.$body.appendChild(child.$node);\n//    } else {\n//        this.$body.insertBefore(child.$node, this.$body.children[index]);\n//    }\n//    this.children.splice(index, 0, child);\n//\n//    if ( !child.parent ) {\n//        child.parent = this;\n//    }\n//};\n\n\n/**\n * Delete this component and clear all associated events.\n *\n * @fires module:stb/component~Component#remove\n */\nComponent.prototype.remove = function () {\n    // really inserted somewhere\n    if ( this.parent ) {\n        if ( DEVELOP ) {\n            if ( !(this.parent instanceof Component) ) {\n                throw new Error(__filename + ': wrong this.parent type');\n            }\n        }\n\n        // active at the moment\n        if ( app.activePage.activeComponent === this ) {\n            this.blur();\n            this.parent.focus();\n        }\n        this.parent.children.splice(this.parent.children.indexOf(this), 1);\n    }\n\n    // remove all children\n    this.children.forEach(function ( child ) {\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        child.remove();\n    });\n\n    this.$node.parentNode.removeChild(this.$node);\n\n    // there are some listeners\n    if ( this.events['remove'] ) {\n        /**\n         * Delete this component.\n         *\n         * @event module:stb/component~Component#remove\n         */\n        this.emit('remove');\n    }\n\n    // remove all listeners\n    this.events = {};\n\n    //debug.log('component ' + this.name + '#' + this.id + ' remove', 'red');\n    debug.info('remove component ' + this.name + '#' + this.id, null, {\n        tags: ['remove', 'component', this.name, this.id]\n    });\n};\n\n\n/**\n * Activate the component.\n * Notify the owner-page and apply CSS class.\n *\n * @param {Object} [data] custom data which passed into handlers\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#focus\n */\nComponent.prototype.focus = function ( data ) {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // this is a visual component on a page\n    // not already focused and can accept focus\n    if ( this.focusable && this !== activeItem ) {\n        // notify the current active component\n        if ( activeItem ) { activeItem.blur(); }\n\n        /* eslint consistent-this: 0 */\n\n        // apply\n        activePage.activeComponent = activeItem = this;\n        activeItem.$node.classList.add('focus');\n\n        //debug.log('component ' + this.name + '#' + this.id + ' focus');\n        debug.info('focus component ' + this.name + '#' + this.id, null, {\n            tags: ['focus', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( activeItem.events['focus'] ) {\n            /**\n             * Make this component focused.\n             *\n             * @event module:stb/component~Component#focus\n             */\n            activeItem.emit('focus', data);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Remove focus.\n * Change page.activeComponent and notify subscribers.\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#blur\n */\nComponent.prototype.blur = function () {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // apply visuals anyway\n    this.$node.classList.remove('focus');\n\n    // this is the active component\n    if ( this === activeItem ) {\n        activePage.activeComponent = null;\n\n        //debug.log('component ' + this.name + '#' + this.id + ' blur', 'grey');\n        debug.info('blur component ' + this.name + '#' + this.id, null, {\n            tags: ['blur', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['blur'] ) {\n            /**\n             * Remove focus from this component.\n             *\n             * @event module:stb/component~Component#blur\n             */\n            this.emit('blur');\n        }\n\n        return true;\n    }\n\n    debug.warn('component ' + this.name + '#' + this.id + ' attempt to blur without link to a page', null, {\n        tags: ['blur', 'component', this.name, this.id]\n    });\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Make the component visible and notify subscribers.\n *\n * @param {Object} [data] custom data which passed into handlers\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#show\n */\nComponent.prototype.show = function ( data ) {\n    // is it hidden\n    if ( !this.visible ) {\n        // correct style\n        this.$node.classList.remove('hidden');\n        // flag\n        this.visible = true;\n\n        debug.info('show component ' + this.name + '#' + this.id, null, {\n            tags: ['show', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['show'] ) {\n            /**\n             * Make the component visible.\n             *\n             * @event module:stb/component~Component#show\n             */\n            this.emit('show', data);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Make the component hidden and notify subscribers.\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#hide\n */\nComponent.prototype.hide = function () {\n    // is it visible\n    if ( this.visible ) {\n        // correct style\n        this.$node.classList.add('hidden');\n        // flag\n        this.visible = false;\n\n        debug.info('hide component ' + this.name + '#' + this.id, null, {\n            tags: ['hide', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['hide'] ) {\n            /**\n             * Make the component hidden.\n             *\n             * @event module:stb/component~Component#hide\n             */\n            this.emit('hide');\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = Component;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Base Events Emitter implementation.\n *\n * @see http://nodejs.org/api/events.html\n * @constructor\n *\n * @example\n * var emitter = new Emitter();\n */\nfunction Emitter () {\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // if ( DEVELOP ) {\n    //     if ( typeof this !== 'object' ) { throw new Error(__filename + ': must be constructed via new'); }\n    // }\n\n    /**\n     * Inner hash table for event names and linked callbacks.\n     * Manual editing should be avoided.\n     *\n     * @member {Object.<string, function[]>}\n     *\n     * @example\n     * {\n     *     click: [\n     *         function click1 () { ... },\n     *         function click2 () { ... }\n     *     ],\n     *     keydown: [\n     *         function () { ... }\n     *     ]\n     * }\n     **/\n    this.events = {};\n}\n\n\nEmitter.prototype = {\n    /**\n     * Bind an event to the given callback function.\n     * The same callback function can be added multiple times for the same event name.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.addListener('click', function ( data ) { ... });\n     * // one more click handler\n     * emitter.addListener('click', function ( data ) { ... });\n     */\n    addListener: function ( name, callback ) {\n        console.assert(arguments.length === 2, 'wrong arguments number');\n        console.assert(typeof name === 'string', 'wrong name type');\n        console.assert(name.length > 0, 'empty name');\n        console.assert(typeof callback === 'function', 'callback should be a function');\n\n        // if ( DEVELOP ) {\n        //     if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        //     if ( typeof name !== 'string' || name.length === 0 ) { throw new Error(__filename + ': wrong or empty name'); }\n        //     if ( typeof callback !== 'function' ) { throw new Error(__filename + ': wrong callback type'); }\n        // }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(callback);\n    },\n\n\n    /**\n     * Add a one time listener for the event.\n     * This listener is invoked only the next time the event is fired, after which it is removed.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.once('click', function ( data ) { ... });\n     */\n    once: function ( name, callback ) {\n        // current execution context\n        var self = this;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n        }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(function onceWrapper () {\n            self.removeListener(name, onceWrapper);\n            callback.apply(self, arguments);\n        });\n    },\n\n\n    /**\n     * Apply multiple listeners at once.\n     *\n     * @param {Object} callbacks event names with callbacks\n     *\n     * @example\n     * emitter.addListeners({\n     *     click: function ( data ) {},\n     *     close: function ( data ) {}\n     * });\n     */\n    addListeners: function ( callbacks ) {\n        var name;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof callbacks !== 'object' ) {\n                throw new Error(__filename + ': wrong callbacks type');\n            }\n            if ( Object.keys(callbacks).length === 0 ) {\n                throw new Error(__filename + ': no callbacks given');\n            }\n        }\n\n        for ( name in callbacks ) {\n            if ( callbacks.hasOwnProperty(name) ) {\n                this.addListener(name, callbacks[name]);\n            }\n        }\n    },\n\n\n    /**\n     * Remove all instances of the given callback.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to remove\n     *\n     * @example\n     * emitter.removeListener('click', func1);\n     */\n    removeListener: function ( name, callback ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n            if ( this.events[name] && !Array.isArray(this.events[name]) ) {\n                throw new Error(__filename + ': corrupted inner data');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( this.events[name] ) {\n            // rework the callback list to exclude the given one\n            this.events[name] = this.events[name].filter(function callbacksFilter ( fn ) { return fn !== callback; });\n            // event has no more callbacks so clean it\n            if ( this.events[name].length === 0 ) {\n                // as if there were no listeners at all\n                this.events[name] = undefined;\n            }\n        }\n    },\n\n\n    /**\n     * Remove all callbacks for the given event name.\n     * Without event name clears all events.\n     *\n     * @param {string} [name] event identifier\n     *\n     * @example\n     * emitter.removeAllListeners('click');\n     * emitter.removeAllListeners();\n     *\n     * @deprecated\n     */\n    /*removeAllListeners: function ( name ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 0 && (typeof name !== 'string' || name.length === 0) ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // check input\n        if ( arguments.length === 0 ) {\n            // no arguments so remove everything\n            this.events = {};\n        } else if ( name ) {\n            if ( DEVELOP ) {\n                if ( this.events[name] ) { throw new Error(__filename + ': event is not removed'); }\n            }\n\n            // only name is given so remove all callbacks for the given event\n            // but object structure modification should be avoided\n            this.events[name] = undefined;\n        }\n    },*/\n\n\n    /**\n     * Execute each of the listeners in the given order with the supplied arguments.\n     *\n     * @param {string} name event identifier\n     *\n     * @example\n     * emitter.emit('init');\n     * emitter.emit('click', {src: panel1, dst: panel2});\n     * emitter.emit('load', error, data);\n     *\n     * // it's a good idea to emit event only when there are some listeners\n     * if ( this.events['click'] ) {\n     *     this.emit('click', {event: event});\n     * }\n     */\n    emit: function ( name ) {\n        var event = this.events[name],\n            index;\n\n        if ( DEVELOP ) {\n            if ( arguments.length < 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( event ) {\n            if ( DEVELOP ) {\n                if ( !Array.isArray(event) ) {\n                    throw new Error(__filename + ': wrong event type');\n                }\n            }\n\n            for ( index = 0; index < event.length; index++ ) {\n                if ( DEVELOP ) {\n                    if ( typeof event[index] !== 'function' ) {\n                        throw new Error(__filename + ': wrong event callback type');\n                    }\n                }\n\n                // invoke the callback with parameters\n                event[index].apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n    }\n};\n\n\n// correct constructor name\nEmitter.prototype.constructor = Emitter;\n\n\n// public\nmodule.exports = Emitter;\n","/**\n * Global list of non-printable control key codes.\n *\n * At the moment `keypress` and `keydown` events are emitted for the same keys (for both printable and non-printable characters).\n *\n * WARNING!!! All codes in this file (except 'volumeUp' and 'volumeDown')\n * are used in window 'keydown' handler to prevent wrong 'keypress' firings.\n * If you add new code to this file 'keypress' event with this code will never fire.\n *\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar keys = require('spa-keys');\n\n\n// extend with additional codes\nkeys.back         = keys.backspace;\nkeys.channelNext  = keys.tab;        // Tab\nkeys.channelPrev  = keys.tab + 's';  // Shift+Tab\nkeys.ok           = keys.enter;      // Enter\nkeys.exit         = keys.escape;     // Esc\nkeys.volumeUp     = 107;             // NUMPAD +\nkeys.volumeDown   = 109;             // NUMPAD -\nkeys.f1           = 112 + 'c';       // Ctrl+F1\nkeys.f2           = 113 + 'c';       // Ctrl+F2\nkeys.f3           = 114 + 'c';       // Ctrl+F3\nkeys.f4           = 115 + 'c';       // Ctrl+F4\nkeys.refresh      = 116 + 'c';       // Ctrl+F5\nkeys.frame        = 117 + 'c';       // Ctrl+F6\nkeys.phone        = 119 + 'c';       // Ctrl+F8\nkeys.set          = 120 + 'c';       // Ctrl+F9\nkeys.tv           = 121 + 'c';       // Ctrl+F10\nkeys.menu         = 122 + 'c';       // Ctrl+F11\nkeys.app          = 123 + 'c';       // Ctrl+F12\nkeys.rewind       = 66  + 'a';       // Alt+B\nkeys.forward      = 70  + 'a';       // Alt+F\nkeys.audio        = 71  + 'a';       // Alt+G\nkeys.standby      = 74  + 'a';       // Alt+J\nkeys.keyboard     = 76  + 'a';       // Alt+L\nkeys.usbMounted   = 80  + 'a';       // Alt+P\nkeys.usbUnmounted = 81  + 'a';       // Alt+Q\nkeys.playPause    = 82  + 'a';       // Alt+R\nkeys.play         = -1;              // should be redefined on some platforms\nkeys.pause        = -1;              // should be redefined on some platforms\nkeys.stop         = 83  + 'a';       // Alt+S\nkeys.power        = 85  + 'a';       // Alt+U\nkeys.record       = 87  + 'a';       // Alt+W\nkeys.info         = 89  + 'a';       // Alt+Y\nkeys.mute         = 192 + 'a';\nkeys.digit0       = 48;\nkeys.digit1       = 49;\nkeys.digit2       = 50;\nkeys.digit3       = 51;\nkeys.digit4       = 52;\nkeys.digit5       = 53;\nkeys.digit6       = 54;\nkeys.digit7       = 55;\nkeys.digit8       = 56;\nkeys.digit9       = 57;\n\n\n// public\nmodule.exports = keys;\n\n// public\n// module.exports = {\n//     getCode: function ( event ) {\n//         var code = event.keyCode;\n//\n//         // apply key modifiers\n//         if ( event.shiftKey ) { code += 1000; }\n//         if ( event.altKey )   { code += 2000; }\n//\n//         return code;\n//     },\n//\n//     codes: {\n//         back:         8,    // Backspace\n//         channelPrev:  1009, // Shift+Tab\n//         channelNext:  9,    // Tab\n//         ok:           13,   // Enter\n//         exit:         27,   // Esc\n//         pageUp:       33,\n//         pageDown:     34,\n//         end:          35,\n//         home:         36,\n//         left:         37,\n//         up:           38,\n//         right:        39,\n//         down:         40,\n//         'delete':     46,\n//         volumeUp:     107,  // NUMPAD +\n//         volumeDown:   109,  // NUMPAD -\n//         f1:           112,  // F1\n//         f2:           113,  // F2\n//         f3:           114,  // F3\n//         f4:           115,  // F4\n//         refresh:      116,  // F5\n//         frame:        117,  // F6\n//         phone:        119,  // F8\n//         set:          120,  // F9\n//         tv:           121,  // F10\n//         menu:         122,  // F11\n//         app:          123,  // F12\n//         rewind:       2066, // Alt+B\n//         forward:      2070, // Alt+F\n//         audio:        2071, // Alt+G\n//         standby:      2074, // Alt+J\n//         keyboard:     2076, // Alt+L\n//         usbMounted:   2080, // Alt+P\n//         usbUnmounted: 2081, // Alt+Q\n//         playPause:    2082, // Alt+R\n//         stop:         2083, // Alt+S\n//         power:        2085, // Alt+U\n//         record:       2087, // Alt+W\n//         info:         2089, // Alt+Y\n//         mute:         2192\n//     }\n// };\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar app = require('./lib/main');\n\n\nmodule.exports = app;\n","/**\n * Global list of non-printable control key codes.\n *\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    backspace: 8,\n    tab:       9,\n    enter:     13,\n    escape:    27,\n    space:     32,\n    pageUp:    33,\n    pageDown:  34,\n    end:       35,\n    home:      36,\n    left:      37,\n    up:        38,\n    right:     39,\n    down:      40,\n    insert:    45,\n    // not \"delete\" because of old browsers issue\n    del:       46\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component');\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core');\n//    metrics = require('app:metrics'),\n//    linkCSS;\n\n\n// global link\n//app.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\n//app.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\n//app.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n// // set max browser window size\n// window.moveTo(0, 0);\n// window.resizeTo(metrics.width, metrics.height);\n\n// load CSS file base on resolution\n/*linkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = 'css/' + (DEVELOP ? 'develop.' : 'release.') + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);*/\n\n\n// public\nmodule.exports = function ( name ) {\n    var link = document.createElement('link');\n\n    link.rel  = 'stylesheet';\n    link.href = 'css/' + name + '.' + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\n    document.head.appendChild(link);\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter   = require('cjs-emitter'),\n    preloader = new Emitter(),\n    queueSize = 0,\n    groups    = {},\n    verbose   = false;\n\n\n/**\n * One of the links is loaded.\n *\n * @event module:stb/preloader#link\n *\n * @type {Object}\n * @property {string} url link address\n * @property {string} group group name\n */\n\n/**\n * The whole group of links is loaded.\n *\n * @event module:stb/preloader#group\n *\n * @type {Object}\n * @property {string} name group name\n */\n\n/**\n * Everything is loaded.\n *\n * @event module:stb/preloader#done\n */\n\n\n/**\n * Handler of image loading process.\n *\n * @param {Event} event load event\n *\n * @fires module:stb/preloader#link\n * @fires module:stb/preloader#group\n * @fires module:stb/preloader#done\n */\nfunction handler ( event ) {\n    /* eslint no-invalid-this: 0 */\n\n    // report\n    if ( event.type === 'error' ) {\n        debug.log('[preloader] group \"' + this.group + '\" link \"' + this.src + '\"', 'red');\n    } else if ( verbose ) {\n        debug.log('[preloader] group \"' + this.group + '\" link \"' + this.src + '\" (' + this.width + 'x' + this.height + ')');\n    }\n\n    queueSize--;\n    groups[this.group]--;\n\n    // one link is done\n    if ( preloader.events['link'] ) {\n        // notify listeners\n        preloader.emit('link', {url: this.src, group: this.group});\n    }\n\n    // the whole group is done\n    if ( groups[this.group] === 0 ) {\n        debug.log('[preloader] group \"' + this.group + '\" loaded');\n        // one link is done\n        if ( preloader.events['group'] ) {\n            // notify listeners\n            preloader.emit('group', {name: this.group});\n        }\n    }\n\n    // everything is done\n    if ( queueSize === 0 ) {\n        debug.log('[preloader] done');\n        // all links are done\n        if ( preloader.events['done'] ) {\n            // notify listeners\n            preloader.emit('done');\n        }\n    }\n}\n\n\n/**\n * Clear and fill the router with the given list of pages.\n *\n * @param {Array} links list of urls to load\n *\n * @example\n * preloader.addListener('link', function ( data ) { console.log(data.url, data.group); });\n * preloader.addListener('group', function ( data ) { console.log(data.name); });\n * preloader.addListener('done', function () { console.log('ok'); });\n *\n * preloader.add([\n *     'http://pic.uuhy.com/uploads/2011/09/01/Painting-Of-Nature.png',\n *     'https://perishablepress.com/wp/wp-content/themes/wire/img/jeff-starr.jpg',\n *     {url: 'http://www.phpied.com/files/reflow/dyna1.png', group:'qwe'},\n *     {url: 'http://www.phpied.com/files/reflow/dyna3.png', group:'qwe'},\n *     'http://www.phpied.com/files/reflow/render.wrong.extension'\n * ]);\n */\npreloader.add = function ( links ) {\n    if ( DEVELOP ) {\n        if ( !Array.isArray(links) ) {\n            throw new Error(__filename + ': wrong argument links');\n        }\n    }\n\n    // walk through all the given links\n    links.forEach(function ( item ) {\n        var img   = new Image(),\n            url   = item.url   || item,\n            group = item.group || '';\n\n        if ( DEVELOP ) {\n            if ( typeof url !== 'string' ) {\n                throw new Error(__filename + ': wrong url type');\n            }\n            if ( typeof group !== 'string' ) {\n                throw new Error(__filename + ': wrong group type');\n            }\n            if ( url.trim() === '' ) {\n                throw new Error(__filename + ': empty url');\n            }\n        }\n\n        // increase counters\n        queueSize++;\n        groups[group] = groups[group] === undefined ? 1 : groups[group] + 1;\n\n        // build tag\n        img.src    = url;\n        img.group  = group;\n        img.onload = img.onerror = img.ontimeout = handler;\n    });\n\n};\n\n\n// public\nmodule.exports = preloader;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n/* eslint complexity: [error, 37] */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n\n/**\n * Mouse click event.\n *\n * @event module:stb/ui/list~List#click:item\n *\n * @type {Object}\n * @property {Element} $item clicked HTML item\n * @property {Event} event click event data\n */\n\n\n/**\n * Base list implementation.\n *\n * Each data item can be either a primitive value or an object with these fields:\n *\n *  Name    | Description\n * ---------|-------------\n *  value   | actual cell value to render\n *  mark    | is it necessary or not to render this cell as marked\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array}    [config.data=[]]     component data to visualize\n * @param {function} [config.render]      method to build each grid cell content\n * @param {function} [config.navigate]    method to move focus according to pressed keys\n * @param {number}   [config.size=5]      amount of visible items on a page\n * @param {number}   [config.viewIndex=0] move view window to this position on init\n * @param {number}   [config.focusIndex]  list item index to make item focused (move view window to this position)\n * @param {boolean}  [config.cycle=true]  allow or not to jump to the opposite side of a list when there is nowhere to go next\n * @param {boolean}  [config.scroll=null] associated ScrollBar component link\n * @param {Object}   [config.provider]    data provider\n *\n * @fires module:stb/ui/list~List#click:item\n */\nfunction List ( config ) {\n    // current execution context\n    //var self = this;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Link to the currently focused DOM element.\n     *\n     * @type {Element}\n     */\n    this.$focusItem = null;\n\n    /**\n     * Position of the visible window to render.\n     *\n     * @type {number}\n     */\n    this.viewIndex = null;\n\n    /**\n     * Component data to visualize.\n     *\n     * @type {Array}\n     */\n    this.data = [];\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Amount of visible items on a page.\n     *\n     * @type {number}\n     */\n    this.size = 5;\n\n    /**\n     * Allow or not to jump to the opposite side of a list when there is nowhere to go next.\n     *\n     * @type {boolean}\n     */\n    this.cycle = false;\n\n    /**\n     * Associated ScrollBar component link.\n     *\n     * @type {ScrollBar}\n     */\n    this.scroll = null;\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    /**\n     * Associated data provider\n     *\n     * @type {Provider}\n     */\n    this.provider = null;\n\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    //config.className += ' theme-main';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // component setup\n    this.init(config);\n\n    // custom navigation method\n    //if ( config.navigate ) {\n    //    if ( DEVELOP ) {\n    //        if ( typeof config.navigate !== 'function' ) { throw new Error(__filename + ': wrong config.navigate type'); }\n    //    }\n    //    // apply\n    //    this.navigate = config.navigate;\n    //}\n\n    // navigation by keyboard\n    //this.addListener('keydown', this.navigate);\n\n    // navigation by mouse\n    //this.$body.addEventListener('mousewheel', function ( event ) {\n    //    // scrolling by Y axis\n    //    if ( self.type === self.TYPE_VERTICAL && event.wheelDeltaY ) {\n    //        self.move(event.wheelDeltaY > 0 ? 38 : keys.down);\n    //    }\n    //\n    //    // scrolling by X axis\n    //    if ( self.type === self.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n    //        self.move(event.wheelDeltaX > 0 ? 37 : 39);\n    //    }\n    //});\n}\n\n\n// inheritance\nList.prototype = Object.create(Component.prototype);\nList.prototype.constructor = List;\n\n// set component name\nList.prototype.name = 'mag-component-list';\n\nList.prototype.TYPE_VERTICAL   = 1;\nList.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Fill the given item with data.\n *\n * @param {Element} $item item DOM link\n * @param {*} data associated with this item data\n */\nList.prototype.renderItemDefault = function ( $item, data ) {\n    $item.innerText = data.value;\n};\n\n\n/**\n * Method to build each list item content.\n * Can be redefined to provide custom rendering.\n *\n * @type {function}\n */\nList.prototype.renderItem = List.prototype.renderItemDefault;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nList.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse wheel events.\n     *\n     * @param {Event} event generated event\n     */\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        if ( this.type === this.TYPE_VERTICAL && event.wheelDeltaY ) {\n            this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n        }\n\n        // scrolling by X axis\n        if ( this.type === this.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n            this.move(event.wheelDeltaX > 0 ? keys.left : keys.right);\n        }\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n            case keys.right:\n            case keys.left:\n            case keys.pageUp:\n            case keys.pageDown:\n            case keys.home:\n            case keys.end:\n                // cursor move only on arrow keys\n                this.move(event.code);\n                break;\n            case keys.enter:\n                // there are some listeners\n                if ( this.events['click:item'] && this.$focusItem ) {\n                    // notify listeners\n                    this.emit('click:item', {$item: this.$focusItem, event: event});\n                }\n                break;\n        }\n    }\n};\n\n\n/**\n * Default method to move focus according to pressed keys.\n *\n * @param {Object} event generated event source of movement\n */\n//List.prototype.navigateDefault = function ( event ) {\n//    switch ( event.code ) {\n//        case 38:\n//        case 40:\n//        case 39:\n//        case 37:\n//        case 33:\n//        case 34:\n//        case 36:\n//        case 35:\n//            // cursor move only on arrow keys\n//            this.move(event.code);\n//            break;\n//        case 13:\n//            // there are some listeners\n//            if ( this.events['click:item'] ) {\n//                // notify listeners\n//                this.emit('click:item', {$item: this.$focusItem, event: event});\n//            }\n//            break;\n//    }\n//};\n\n\n/**\n * Current active method to move focus according to pressed keys.\n * Can be redefined to provide custom navigation.\n *\n * @type {function}\n */\n//List.prototype.navigate = List.prototype.navigateDefault;\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var idx, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( idx = 0; idx < data.length; idx++ ) {\n        // cell value\n        item = data[idx];\n        // primitive value\n        if ( typeof item !== 'object' ) {\n            // wrap with defaults\n            item = data[idx] = {\n                value: data[idx]\n            };\n        }\n\n        if ( DEVELOP ) {\n            //if ( !('value' in item) ) { throw new Error(__filename + ': field \"value\" is missing'); }\n            if ( ('mark' in item) && Boolean(item.mark) !== item.mark ) {\n                throw new Error(__filename + ': item.mark must be boolean');\n            }\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.init = function ( config ) {\n    var self     = this,\n        currSize = this.$body.children.length,\n        /**\n         * Item mouse click handler.\n         *\n         * @param {Event} event click event data\n         *\n         * @this Element\n         *\n         * @fires module:stb/ui/list~List#click:item\n         */\n        onClick = function ( event ) {\n            if ( this.data ) {\n                self.focusItem(this);\n\n                // there are some listeners\n                if ( self.events['click:item'] ) {\n                    // notify listeners\n                    self.emit('click:item', {$item: this, event: event});\n                }\n            }\n        },\n        item, idx;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // apply cycle behaviour\n    if ( config.cycle !== undefined ) { this.cycle = config.cycle; }\n\n    // apply ScrollBar link\n    if ( config.scroll ) { this.scroll = config.scroll; }\n\n    // apply data provider\n    if ( config.provider ) { this.provider = config.provider; }\n\n\n    // custom render method\n    if ( config.render ) {\n        if ( DEVELOP ) {\n            if ( typeof config.render !== 'function' ) {\n                throw new Error(__filename + ': wrong config.render type');\n            }\n        }\n\n        // apply\n        this.renderItem = config.render;\n    }\n\n    // list items amount on page\n    if ( config.size ) {\n        if ( DEVELOP ) {\n            if ( Number(config.size) !== config.size ) {\n                throw new Error(__filename + ': config.size must be a number');\n            }\n            if ( config.size <= 0 ) {\n                throw new Error(__filename + ': config.size should be positive');\n            }\n        }\n\n        // apply\n        this.size = config.size;\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( name ) {\n            self.events[name] = null;\n            self.addListener(name, config.events[name]);\n        });\n    }\n\n    // geometry has changed or initial draw\n    if ( this.size !== currSize ) {\n        // non-empty list\n        if ( currSize > 0 ) {\n            // clear old items\n            this.$body.innerText = null;\n        }\n\n        // create new items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            item = document.createElement('div');\n            item.index = idx;\n            //item.className = 'item theme-list-item';\n            item.className = 'item';\n\n            item.addEventListener('click', onClick);\n            this.$body.appendChild(item);\n        }\n    }\n\n    if ( this.provider ) {\n        this.provider.get( null, function ( error, data ) {\n            if ( error ) {\n                if ( self.events['data:error'] ) {\n                    /**\n                     * Provider get error while take new data\n                     *\n                     * @event module:stb/ui/list~List#data:error\n                     */\n                    self.emit('data:error', error);\n                }\n            } else {\n                if ( data ) {\n                    config.data = data;\n                    self.setData(config);\n                    if ( self.scroll ) {\n                        self.scroll.init({\n                            realSize: self.provider.maxCount,\n                            viewSize: self.provider.size,\n                            value: self.provider.head + self.provider.pos\n                        });\n                    }\n                }\n                if ( self.events['data:get'] ) {\n                    /**\n                     * Provider request new data\n                     *\n                     * @event module:stb/ui/list~List#data:get\n                     *\n                     * @type {Object}\n                     */\n                    self.emit('data:get');\n                }\n            }\n        });\n    } else if ( config.data ) {\n        this.setData(config);\n    }\n};\n\n/**\n * Set data and render inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.setData = function ( config ) {\n    // apply list of items\n\n    if ( config.data ) {\n        if ( DEVELOP ) {\n            if ( !Array.isArray(config.data) ) { throw new Error(__filename + ': wrong config.data type'); }\n        }\n        // prepare user data\n        this.data = normalize(config.data);\n    }\n\n    // view window position\n    if ( DEVELOP ) {\n        if ( config.viewIndex !== undefined ) {\n            if ( Number(config.viewIndex) !== config.viewIndex ) {\n                throw new Error(__filename + ': config.viewIndex must be a number');\n            }\n            if ( config.viewIndex < 0 ) {\n                throw new Error(__filename + ': config.viewIndex should be positive');\n            }\n        }\n    }\n\n    // reset current view window position\n    this.viewIndex = null;\n\n    if ( this.$focusItem ) {\n        this.blurItem(this.$focusItem);\n    }\n\n    if ( this.scroll ) {\n        if ( this.provider ) {\n            if ( this.scroll.realSize !== this.provider.maxCount ) {\n                this.scroll.init({\n                    realSize: this.provider.maxCount,\n                    viewSize: this.provider.size,\n                    value: this.provider.head + this.provider.pos\n                });\n            }\n        } else {\n            this.scroll.init({\n                realSize: this.data.length,\n                viewSize: this.size,\n                value: config.viewIndex || 0\n            });\n        }\n    }\n\n    // set focus item\n    if ( config.focusIndex !== undefined && this.data.length ) {\n        if ( DEVELOP ) {\n            if ( Number(config.focusIndex) !== config.focusIndex ) {\n                throw new Error(__filename + ': config.focusIndex must be a number');\n            }\n            if ( config.focusIndex < 0 ) {\n                throw new Error(__filename + ': config.focusIndex should be positive');\n            }\n            // if ( config.focusIndex > this.data.length - 1 ) {\n            //     throw new Error(__filename + ': config.focusIndex should be less than data size');\n            // }\n        }\n\n        // jump to the necessary item\n        this.focusIndex(config.focusIndex);\n    } else {\n        // go to the first page\n        this.renderView(config.viewIndex || 0);\n    }\n};\n\n\n/**\n * Shift the visible view window event.\n *\n * @event module:stb/ui/list~List#move:view\n *\n * @type {Object}\n * @property {number} prevIndex previous view window position\n * @property {number} currIndex current view window position\n */\n\n\n/**\n * Draw the visible window.\n *\n * @param {number} index start position to render\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#move:view\n */\nList.prototype.renderView = function ( index ) {\n    var $item, idx, itemData, prevIndex, currIndex;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be more than zero');\n        }\n        // if ( index >= this.data.length ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // has the view window position changed\n    if ( this.viewIndex !== index ) {\n        // save for emit\n        prevIndex = this.viewIndex;\n        // sync global pointer\n        this.viewIndex = currIndex = index;\n\n        // rebuild all visible items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            // shortcuts\n            $item    = this.$body.children[idx];\n            itemData = this.data[index];\n\n            // real item or stub\n            if ( itemData ) {\n                // correct inner data/index and render\n                $item.data  = itemData;\n                $item.index = index;\n                this.renderItem($item, itemData);\n\n                // apply CSS\n                if ( itemData.mark ) {\n                    $item.classList.add('mark');\n                } else {\n                    $item.classList.remove('mark');\n                }\n            } else {\n                // nothing to render\n                $item.data = $item.index = undefined;\n                $item.innerHTML = '&nbsp;';\n                $item.ready = false;\n            }\n            index++;\n        }\n\n        // there are some listeners\n        if ( this.events['move:view'] ) {\n            // notify listeners\n            this.emit('move:view', {prevIndex: prevIndex, currIndex: currIndex});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            this.emit('select:item', {$item: $item});\n        }\n\n        // update a linked scroll component\n        if ( this.scroll ) {\n            this.scroll.scrollTo(this.provider ? this.provider.head + this.provider.pos : this.viewIndex);\n        }\n\n        // full rebuild\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Move focus to the given direction.\n *\n * @param {number} direction arrow key code\n *\n * @fires module:stb/ui/list~List#cycle\n * @fires module:stb/ui/list~List#overflow\n */\nList.prototype.move = function ( direction ) {\n    var self = this,\n        force = false;\n\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(direction) !== direction ) {\n            throw new Error(__filename + ': direction must be a number');\n        }\n    }\n\n    // empty list\n    if ( !this.data.length ) {\n        return;\n    }\n\n    switch ( direction ) {\n        case keys.left:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.up:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index > 0 ) {\n                    if ( this.$focusItem === this.$body.firstChild ) {\n                        this.renderView(this.viewIndex - 1);\n                    } else {\n                        this.focusItem(this.$focusItem.previousSibling);\n                    }\n                } else if ( this.provider ) {\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the end of the list\n                        this.move(keys.end);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.right:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.down:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index < this.data.length - 1 ) {\n                    if ( this.$focusItem === this.$body.lastChild ) {\n                        this.renderView(this.viewIndex + 1);\n                    } else {\n                        this.focusItem(this.$focusItem.nextSibling);\n                    }\n                } else if ( this.provider ) {\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the beginning of the list\n                        this.move(keys.home);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.pageUp:\n            if ( this.provider ) {\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n\n                return;\n            }\n            if ( this.viewIndex < this.size ) {\n                // first page\n                this.renderView(0);\n            } else {\n                // second page and further\n                this.renderView(this.viewIndex - this.size + 1);\n            }\n\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.pageDown:\n            if ( this.provider ) {\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            // data is bigger then one page\n            if ( this.data.length > this.size ) {\n                // determine jump size\n                if ( this.viewIndex > this.data.length - this.size * 2 ) {\n                    // last page\n                    this.renderView(this.data.length - this.size);\n                } else {\n                    // before the last page\n                    this.renderView(this.viewIndex + this.size - 1);\n                }\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n        case keys.home:\n            if ( this.provider ) {\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n                break;\n            }\n            this.renderView(0);\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.end:\n            if ( this.provider ) {\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            if ( this.data.length > this.size ) {\n                this.renderView(this.data.length - this.size);\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n    }\n};\n\n\n/**\n * Highlight the given DOM element as focused.\n * Remove focus from the previously focused item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.focusItem = function ( $item ) {\n    var $prev = this.$focusItem;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n    }\n\n    // different element\n    if ( $item && $prev !== $item ) {\n        if ( DEVELOP ) {\n            if ( !($item instanceof Element) ) {\n                throw new Error(__filename + ': wrong $item type');\n            }\n            if ( $item.parentNode !== this.$body ) {\n                throw new Error(__filename + ': wrong $item parent element');\n            }\n        }\n\n        // some item is focused already\n        if ( $prev !== null ) {\n            if ( DEVELOP ) {\n                if ( !($prev instanceof Element) ) {\n                    throw new Error(__filename + ': wrong $prev type');\n                }\n            }\n\n            // style\n            $prev.classList.remove('focus');\n            //$prev.classList.remove('theme-focus');\n\n            // there are some listeners\n            if ( this.events['blur:item'] ) {\n                /**\n                 * Remove focus from an element.\n                 *\n                 * @event module:stb/ui/list~List#blur:item\n                 *\n                 * @type {Object}\n                 * @property {Element} $item previously focused HTML element\n                 */\n                this.emit('blur:item', {$item: $prev});\n            }\n        }\n        // reassign\n        this.$focusItem = $item;\n\n        this.$focusItem.data = this.data[this.$focusItem.index];\n\n        // correct CSS\n        $item.classList.add('focus');\n        //$item.classList.add('theme-focus');\n\n        // there are some listeners\n        if ( this.events['focus:item'] ) {\n            /**\n             * Set focus to a DOM element.\n             *\n             * @event module:stb/ui/list~List#focus:item\n             *\n             * @type {Object}\n             * @property {Element} $prev old/previous focused HTML element\n             * @property {Element} $curr new/current focused HTML element\n             */\n            this.emit('focus:item', {$prev: $prev, $curr: $item});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            /**\n             * Set focus to a list item.\n             *\n             * @event module:stb/ui/list~List#select:item\n             *\n             * @type {Object}\n             * @property {Element} $item new/current focused item\n             */\n            this.emit('select:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Highlight the given DOM element as blur.\n * Remove focus from the item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.blurItem = function ( $item ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) { throw new Error(__filename + ': wrong arguments number'); }\n    }\n\n    // different element\n    if ( $item ) {\n        if ( $item === this.$focusItem ) {\n            this.$focusItem = null;\n        }\n\n        $item.classList.remove('focus');\n        //$item.classList.remove('theme-focus');\n\n        // there are some listeners\n        if ( this.events['blur:item'] ) {\n            /**\n             * Remove focus from an element.\n             *\n             * @event module:stb/ui/list~List#blur:item\n             *\n             * @type {Object}\n             * @property {Element} $item previously focused HTML element\n             */\n            this.emit('blur:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Set the given item focused by item index.\n *\n * @param {number} index item data index\n */\nList.prototype.focusIndex = function ( index ) {\n    var viewIndex = this.viewIndex || 0;\n\n    if ( DEVELOP ) {\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be positive');\n        }\n        // if ( index > this.data.length - 1 ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // determine direction\n    if ( index >= viewIndex + this.size ) {\n        // check range\n        index = index < this.data.length - 1 ? index : this.data.length - 1;\n        // move down\n        this.renderView(index - this.size + 1);\n        this.focusItem(this.$body.lastChild);\n    } else if ( index < viewIndex ) {\n        // check range\n        index = index > 0 ? index : 0;\n        // move up\n        this.renderView(index);\n        this.focusItem(this.$body.firstChild);\n    } else {\n        // no move\n        if ( this.viewIndex === null ) {\n            // first attempt\n            this.renderView(0);\n        }\n        this.focusItem(this.$body.children[index - viewIndex]);\n    }\n};\n\n\n/**\n * Set item state and appearance as marked.\n *\n * @param {Node|Element} $item element to focus\n * @param {boolean} state true - marked, false - not marked\n */\nList.prototype.markItem = function ( $item, state ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 2 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !($item instanceof Element) ) {\n            throw new Error(__filename + ': wrong $item type');\n        }\n        if ( $item.parentNode !== this.$body ) {\n            throw new Error(__filename + ': wrong $item parent element');\n        }\n        if ( Boolean(state) !== state ) {\n            throw new Error(__filename + ': state must be boolean');\n        }\n    }\n\n    // correct CSS\n    if ( state ) {\n        $item.classList.add('mark');\n    } else {\n        $item.classList.remove('mark');\n    }\n\n    // apply flag\n    $item.data.mark = state;\n};\n\n\n// public\nmodule.exports = List;\n","/**\n * Main application entry point.\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar app       = require('mag-app'),\n    preloader = require('spa-preloader'),\n    gettext   = require('spa-gettext'),\n\n    profile   = require('./modules/profile');\n\n\n// TODO: remove this hack, causes when key pressed, but page not loaded yet\napp.activePage = {\n    events: {},\n    emit: function () {\n        // this needs for handle early keydown\n    }\n};\n\n\napp.addListeners({\n    // all resources are loaded\n    load: function load () {\n        if ( MODE === 'PORTAL' ) {\n            app.network = core.plugins.networkStates;\n\n            if ( app.network.internet.linkStatus ) {\n                window.pmIcons.children[0].classList.remove('disabled');\n            } else {\n                window.pmIcons.children[0].classList.add('disabled');\n            }\n\n            if ( app.network.wifi.linkStatus ) {\n                window.pmIcons.children[1].classList.remove('disabled');\n            } else {\n                window.pmIcons.children[1].classList.add('disabled');\n            }\n\n            if ( app.network.ethernet.linkStatus ) {\n                window.pmIcons.children[2].classList.remove('disabled');\n            } else {\n                window.pmIcons.children[2].classList.add('disabled');\n            }\n\n            app.network.addListener('internetStatus:change', function ( state ) {\n                if ( state ) {\n                    window.pmIcons.children[0].classList.remove('disabled');\n                } else {\n                    window.pmIcons.children[0].classList.add('disabled');\n                }\n            });\n\n            app.network.addListener('wifiStatus:change', function ( state ) {\n                if ( state ) {\n                    window.pmIcons.children[1].classList.remove('disabled');\n                } else {\n                    window.pmIcons.children[1].classList.add('disabled');\n                }\n            });\n\n            app.network.addListener('ethernetStatus:change', function ( state ) {\n                if ( state ) {\n                    window.pmIcons.children[2].classList.remove('disabled');\n                } else {\n                    window.pmIcons.children[2].classList.add('disabled');\n                }\n            });\n        }\n\n        // load localization\n        gettext.load({name: core.environment.language}, function () {\n            // load profile\n            profile.load(app.query, function ( error, data ) {\n                if ( error ) {\n                    console.log(error);\n                    debug.info(error);\n                    window.pageMain.innerHTML = '<p>Launcher config loading error</p> ' + error;\n                } else {\n                    app.data = app.data || {};\n                    app.data.profile = data;\n\n                    app.pages = {\n                        main: require('./pages/main')\n                    };\n\n                    preloader.once('done', function () {\n                        // profile loaded\n                        app.route(app.pages.main);\n                        core.emit('app:ready');\n                    });\n\n                    preloader.add([\n                        {url: 'img/' + app.metrics.height + '/icons/shadow.normal.png', group: 'overlay'},\n                        {url: 'img/' + app.metrics.height + '/icons/shadow.active.png', group: 'overlay'}\n                    ]);\n                }\n            });\n\n        });\n    }\n});\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app    = require('spa-app/lib/core'),\n    events = require('spa-app/lib/events');\n\n\n// get instance\nwindow.core = window.parent.getCoreInstance(window, app);\n\n// shims\nrequire('stb-shim-classlist');\n\n// apply geometry\nrequire('stb-app/lib/metrics');\n\n// load sdk css\nrequire('stb-app/lib/css')('sdk');\n\n// load theme css\nrequire('./css');\n\n// load app css\nrequire('stb-app/lib/css')('app');\n\n/**\n * Specify platform name\n *\n * @type {string}\n */\napp.platform = 'mag';\n\n/**\n * Show app.\n */\napp.ready = function () {\n    // if ( this.events['show'] ) {\n    //     this.emit('show');\n    // }\n    window.core.call('app:ready');\n};\n\n\n/**\n * Exit from app.\n * Destroy all application instance.\n * If callback function provided, and callback returns boolean 'true', application will stay alive.\n *\n * @fires module:/stb/app#exit\n */\napp.exit = function () {\n    if ( app.events['exit'] ) {\n        app.emit('exit');\n    }\n\n    core.call('exit');\n};\n\n\nevents.load = function ( event ) {\n    //window.core = window.parent.getCoreInstanse(window, app);\n    document.body.setAttribute('platform', app.platform);\n\n    if ( core.ready ) {\n        if ( app.events['load'] ) {\n            // notify listeners\n            app.emit('load', {});\n        }\n    } else {\n        core.once('load', function () {\n            //core.ready = true;\n            if ( app.events[event.type] ) {\n                // notify listeners\n                app.emit(event.type, event);\n            }\n        });\n    }\n};\n\n\n// activate development mechanisms and tools\nif ( DEVELOP ) {\n    //require('stb-develop');\n    require('./develop/main');\n} else {\n    // disable context menu\n    events.contextmenu = function ( event ) {\n        event.preventDefault();\n    };\n}\n\n\n//apply DOM events\nObject.keys(events).forEach(function ( name ) {\n    window.addEventListener(name, events[name]);\n});\n\n\n// new way of string handling\n// all strings are in UTF-16\n// since stbapp 2.18\n// if ( window.gSTB && gSTB.SetNativeStringMode ) {\n//     /* eslint new-cap: 0 */\n//     gSTB.SetNativeStringMode(true);\n// }\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nmodule.exports = {\n    /**\n     * Parse the given location search string into object.\n     *\n     * @param {string} query string to parse\n     *\n     * @return {Object.<string, string>} result data\n     */\n    parse: function ( query ) {\n        var data = {};\n\n        // parse and fill the data\n        query.split('&').forEach(function ( part ) {\n            part = part.split('=');\n            // valid number on params\n            if ( part.length === 2 ) {\n                data[part[0]] = decodeURIComponent(part[1]);\n            }\n        });\n\n        return data;\n    },\n\n\n    /**\n     * Make uri query part in a string form.\n     *\n     * @param {Object} params data to stringify\n     *\n     * @return {string} query string\n     */\n    stringify: function ( params ) {\n        var data = [];\n\n        Object.keys(params).forEach(function ( name ) {\n            data.push(name + '=' + encodeURIComponent(params[name]));\n        });\n\n        return data.join('&');\n    }\n};\n","/**\n * Global application configuration.\n * Can store run-time options, API urls, paths, execution flags and so on.\n * Automatically loaded on application initialization and available as app.config.\n */\n\n'use strict';\n\n// public\nmodule.exports = {};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('./core');\n\n\n// public\nmodule.exports = {\n    DOMContentLoaded: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // there are some listeners\n        if ( app.events['dom'] ) {\n            // notify listeners\n            app.emit('dom', event);\n            //console.log('DOMContentLoaded');\n        }\n    },\n\n    /**\n     * The load event is fired when a resource and its dependent resources have finished loading.\n     *\n     * Control flow:\n     *   1. Global handler.\n     *   2. Each page handler.\n     *   3. Application DONE event.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/load\n     *\n     * @param {Event} event generated object with event data\n     */\n    load: function ( event ) {\n        //var path;\n\n        //debug.event(event);\n        //console.log(event);\n\n        // time mark\n        //app.data.time.load = event.timeStamp;\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' load', 'green');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n\n        // time mark\n        //app.data.time.done = +new Date();\n\n        // everything is ready\n        // and there are some listeners\n        // if ( app.events['done'] ) {\n        //     // notify listeners\n        //     app.emit('done', event);\n        // }\n    },\n\n    /**\n     * The unload event is fired when the document or a child resource is being unloaded.\n     *\n     * Control flow:\n     *   1. Each page handler.\n     *   2. Global handler.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/unload\n     *\n     * @param {Event} event generated object with event data\n     */\n    unload: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' unload', 'red');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n    },\n\n    /**\n     * The error event is fired when a resource failed to load.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/error\n     *\n     * @param {Event} event generated object with event data\n     */\n    error: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n        //debug.fail('app event: ' + event.message, event, {tags: [event.type, 'event']});\n        console.error('app event: ' + event.message, event);\n    },\n\n    /**\n     * The keydown event is fired when a key is pressed down.\n     * Set event.stop to true in order to prevent bubbling.\n     *\n     * Control flow:\n     *   1. Current active component on the active page.\n     *   2. Current active page itself.\n     *   3. Application.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keydown\n     *\n     * @param {Event} event generated object with event data\n     */\n    keydown: function ( event ) {\n        var page = app.activePage,\n            eventLocal = {\n                code: event.keyCode,\n                stop: false\n            },\n            activeComponent;\n\n        if ( DEVELOP ) {\n            if ( !page ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        // filter phantoms\n        //if ( event.keyCode === 0 ) { return; }\n\n        // combined key code\n        //event.code = event.keyCode;\n\n        // apply key modifiers\n        if ( event.ctrlKey )  { eventLocal.code += 'c'; }\n        if ( event.altKey )   { eventLocal.code += 'a'; }\n        if ( event.shiftKey ) { eventLocal.code += 's'; }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + eventLocal.code, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + eventLocal.code, event);\n\n        // page.activeComponent can be set to null in event handles\n        activeComponent = page.activeComponent;\n\n        // current component handler\n        if ( activeComponent && activeComponent !== page ) {\n            // component is available and not page itself\n            if ( activeComponent.events[event.type] ) {\n                // there are some listeners\n                activeComponent.emit(event.type, eventLocal, event);\n            }\n\n            // todo: bubble event recursively\n            // bubbling\n            if (\n                !eventLocal.stop &&\n                activeComponent.propagate &&\n                activeComponent.parent &&\n                activeComponent.parent.events[event.type]\n            ) {\n                activeComponent.parent.emit(event.type, eventLocal, event);\n            }\n        }\n\n        // page handler\n        if ( !eventLocal.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, eventLocal, event);\n            }\n\n            // global app handler\n            if ( !event.stop ) {\n                // not prevented\n                if ( app.events[event.type] ) {\n                    // there are some listeners\n                    app.emit(event.type, eventLocal, event);\n                }\n            }\n        }\n\n        //// suppress non-printable keys in stb device (not in your browser)\n        //if ( app.data.host && keyCodes[event.code] ) {\n        //    event.preventDefault();\n        //}\n    },\n\n    /**\n     * The keypress event is fired when press a printable character.\n     * Delivers the event only to activeComponent at active page.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keypress\n     *\n     * @param {Event} event generated object with event data\n     * @param {string} event.char entered character\n     */\n    keypress: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + event.key, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + event.key, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n    },\n\n    /**\n     * The click event is fired when a pointing device button (usually a mouse button) is pressed and released on a single element.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/click\n     *\n     * @param {Event} event generated object with event data\n     */\n    /*click: function ( event ) {\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n     },*/\n\n    /**\n     * The contextmenu event is fired when the right button of the mouse is clicked (before the context menu is displayed),\n     * or when the context menu key is pressed (in which case the context menu is displayed at the bottom left of the focused\n     * element, unless the element is a tree, in which case the context menu is displayed at the bottom left of the current row).\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/contextmenu\n     *\n     * @param {Event} event generated object with event data\n     */\n    // contextmenu: function ( event ) {\n    //     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n    //\n    //     if ( !DEVELOP ) {\n    //         // disable right click in release mode\n    //         event.preventDefault();\n    //     }\n    // },\n\n    /*contextmenu: function ( event ) {\n     //var kbEvent = {}; //Object.create(document.createEvent('KeyboardEvent'));\n\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n\n     //kbEvent.type    = 'keydown';\n     //kbEvent.keyCode = 8;\n\n     //debug.log(kbEvent.type);\n\n     //globalEventListenerKeydown(kbEvent);\n     //var event = document.createEvent('KeyboardEvent');\n     //event.initEvent('keydown', true, true);\n\n     //document.dispatchEvent(kbEvent);\n\n     if ( !DEVELOP ) {\n     // disable right click in release mode\n     event.preventDefault();\n     }\n     },*/\n\n    /**\n     * The wheel event is fired when a wheel button of a pointing device (usually a mouse) is rotated.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel\n     *\n     * @param {Event} event generated object with event data\n     */\n    mousewheel: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n\n        // page handler\n        if ( !event.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, event);\n            }\n        }\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint-disable */\n\n'use strict';\n\n\nif ( !document.documentElement.classList ) {\n    var prototype = Array.prototype,\n        indexOf   = prototype.indexOf,\n        slice     = prototype.slice,\n        push      = prototype.push,\n        splice    = prototype.splice,\n        join      = prototype.join;\n\n    window.DOMTokenList = function ( el ) {\n        this._element = el;\n        if (el.className !== this._classCache) {\n            this._classCache = el.className;\n            if (!this._classCache) { return; }\n            var classes = this._classCache.replace(/^\\s+|\\s+$/g,'').split(/\\s+/),\n                i;\n            for (i = 0; i < classes.length; i++) {\n                push.call(this, classes[i]);\n            }\n        }\n    };\n\n    window.DOMTokenList.prototype = {\n        add: function ( token ) {\n            if(this.contains(token)) { return; }\n            push.call(this, token);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        contains: function ( token ) {\n            return indexOf.call(this, token) !== -1;\n        },\n\n        item: function ( index ) {\n            return this[index] || null;\n        },\n\n        remove: function ( token ) {\n            var i = indexOf.call(this, token);\n            if (i === -1) {\n                return;\n            }\n            splice.call(this, i, 1);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        toString: function () {\n            return join.call(this, ' ');\n        },\n\n        toggle: function ( token ) {\n            if (!this.contains(token)) {\n                this.add(token);\n            } else {\n                this.remove(token);\n            }\n            return this.contains(token);\n        }\n    };\n\n    Object.defineProperty(Element.prototype, 'classList', {\n        get: function () {\n            return new window.DOMTokenList(this);\n        }\n    });\n}\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    metrics = require('app:metrics');\n\n\n// global link\napp.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\napp.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\napp.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n\n// public\n//module.exports = app;\n","/**\n * Application geometry options.\n * Automatically loaded on application initialization and available as app.metrics.\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    480: {\n        // screen base dimension\n        height: 480,\n        width: 720,\n        // safe zone margins\n        availTop: 24,\n        availBottom: 24,\n        availRight: 62,\n        availLeft: 62,\n        // project-specific vars\n        appMenuRows: 1,\n        appMenuCols: 4\n    },\n\n    576: {\n        // screen base dimension\n        height: 576,\n        width: 720,\n        // safe zone margins\n        availTop: 24,\n        availBottom: 24,\n        availRight: 62,\n        availLeft: 62,\n        // project-specific vars\n        appMenuRows: 2,\n        appMenuCols: 4\n    },\n\n    720: {\n        // screen base dimension\n        height: 720,\n        width: 1280,\n        // safe zone margins\n        availTop: 28,\n        availBottom: 28,\n        availRight: 66,\n        availLeft: 66,\n        // project-specific vars\n        appMenuRows: 2,\n        appMenuCols: 6\n    },\n\n    1080: {\n        // screen base dimension\n        height: 1080,\n        width: 1920,\n        // safe zone margins\n        availTop: 42,\n        availBottom: 42,\n        availRight: 75,\n        availLeft: 75,\n        // project-specific vars\n        appMenuRows: 2,\n        appMenuCols: 6\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core'),\n    //metrics = require('app:metrics'),\n    linkCSS;\n\n\n//window.core = window.parent.getCoreInstance(window, app);\n\n\nlinkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = window.core.theme.path + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);\n\n\n// public\nmodule.exports = linkCSS;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    Gettext = require('cjs-gettext'),\n    loader  = new Emitter();\n\n\n/**\n * Wrap the given data with gettext instance\n * and export methods to the global scope.\n *\n * @param {Object} [data] localization data\n *\n * @return {Gettext} gettext instance\n */\nfunction prepare ( data ) {\n    var gettext = new Gettext(data);\n\n    // make it global\n    window.gettext  = window._ = gettext.gettext;\n    window.pgettext = gettext.pgettext;\n    window.ngettext = gettext.ngettext;\n\n    return gettext;\n}\n\n\n/**\n * Main application language\n */\nloader.defaultLanguage = 'en';\n\n\n/**\n * Simple gettext implementation.\n *\n * @param {Object} config options\n * @param {string} [config.path=lang] relative path to project root\n * @param {string} config.name language name\n * @param {string} [config.ext=json] language file extension\n * @param {function} callback hook on ready\n *\n * @return {boolean} flag is ajax request was made\n */\nloader.load = function ( config, callback ) {\n    var xhr;\n\n    if ( DEVELOP ) {\n        if ( !config.name || typeof config.name !== 'string' ) {\n            throw new Error(__filename + ': config.name must be a nonempty string');\n        }\n        if ( typeof callback !== 'function' ) {\n            throw new Error(__filename + ': wrong callback type');\n        }\n    }\n\n    // defaults\n    config.ext  = config.ext  || 'json';\n    config.path = config.path || 'lang';\n\n    // is it necessary to request a localization file?\n    if ( config.name === loader.defaultLanguage ) {\n        // no\n        prepare();\n        callback(null);\n\n        return false;\n    }\n\n    // yes\n    xhr = new XMLHttpRequest();\n\n    xhr.onload = function () {\n        var json;\n\n        try {\n            json = JSON.parse(xhr.responseText);\n\n            prepare(json);\n            callback(null);\n\n            // there are some listeners\n            if ( loader.events['load'] ) {\n                // notify listeners\n                loader.emit('load');\n            }\n        } catch ( error ) {\n            xhr.onerror(error);\n        }\n    };\n\n    xhr.ontimeout = xhr.onerror = function ( error ) {\n        prepare();\n        callback(error);\n\n        // there are some listeners\n        if ( loader.events['error'] ) {\n            // notify listeners\n            loader.emit('error', error);\n        }\n    };\n\n    xhr.open('GET', config.path + '/' + config.name + '.' + config.ext, true);\n    xhr.send(null);\n\n    return true;\n};\n\n\n// public\nmodule.exports = loader;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Translations handler.\n *\n * @constructor\n *\n * @param {Object} config init parameters\n */\nfunction Gettext ( config ) {\n    var data, meta;\n\n    // sanitize\n    config   = config || {};\n    data     = config.data || {};\n    data[''] = data[''] || {};\n\n    // shortcut\n    meta = config.meta;\n\n    /**\n     * Display the native language translation of a textual message.\n     *\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.gettext = function ( msgId ) {\n        return data[''][msgId] || msgId;\n    };\n\n\n    /**\n     * The \"p\" in \"pgettext\" stands for \"particular\": fetches a particular translation of the textual message.\n     *\n     * @param {string} context message context\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.pgettext = function ( context, msgId ) {\n        return data[context] && data[context][msgId] || msgId;\n    };\n\n\n    /**\n     * Display the native language translation of a textual message whose grammatical form depends on a number.\n     *\n     * @param {string} msgId textual message in a singular form\n     * @param {string} plural textual message in a plural form\n     * @param {number} value message number\n     *\n     * @return {string} translated text\n     */\n    this.ngettext = function ( msgId, plural, value ) {\n        /* eslint no-unused-vars: 0 */\n        /* eslint no-eval: 0 */\n        /* eslint id-length: 0 */\n        var n;\n\n        if ( DEVELOP ) {\n            if ( Number(value) !== value ) {\n                throw new Error(__filename + ': value must be a number');\n            }\n        }\n\n        if ( data && meta && data[''][msgId] ) {\n            // translation\n            return data[''][msgId][eval('n = ' + value + '; ' + meta.plural)];\n        }\n\n        // english\n        return value === 1 ? msgId : plural;\n    };\n}\n\n\n// correct constructor name\nGettext.prototype.constructor = Gettext;\n\n\n// public\nmodule.exports = Gettext;\n","/**\n * Profile loader\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar app       = require('mag-app'),\n    format    = require('cjs-format'),\n    preloader = require('spa-preloader'),\n    profile   = {};\n\n\n/**\n * Convert vector to matrix.\n *\n * @param {Array} items list of items\n * @param {number} rows amount of rows in the output matrix\n * @param {number} cols amount of columns in the output matrix\n *\n * @return {Array} output matrix\n */\nfunction paginateItems ( items, rows, cols ) {\n    var pageAmount = Math.ceil(items.length / (rows * cols)) || 1,\n        pageData   = [],\n        itemIndex  = 0,\n        iPage, iRow, iCol;\n\n    for ( iPage = 0; iPage < pageAmount; iPage++ ) {\n        pageData[iPage] = [];\n        for ( iRow = 0; iRow < rows; iRow++ ) {\n            pageData[iPage][iRow] = [];\n            for ( iCol = 0; iCol < cols; iCol++ ) {\n                pageData[iPage][iRow][iCol] = items[itemIndex] || {disable: true};\n                itemIndex++;\n            }\n        }\n    }\n\n    return pageData;\n}\n\n\nfunction processData ( data, apps ) {\n    var height      = app.metrics.height,\n        categoryMap = {},\n        imgLinks    = [],\n        groups      = [],\n        offset      = 0,\n        categoryIndex, appIndex, group, item;\n\n    // correct links\n    try {\n        data.logo = format(data.logo, height);\n    } catch ( error ) {\n        console.log(error);\n        console.log(data.logo);\n    }\n\n    data.categories = data.categories.map(function ( category ) {\n        category.apps = [];\n        categoryMap[category.name.toLowerCase()] = category;\n\n        return category;\n    });\n\n    apps.forEach(function ( currentApp ) {\n        if ( categoryMap[currentApp.category] ) {\n            categoryMap[currentApp.category].apps.push(currentApp);\n        }\n    });\n\n    data.categories = data.categories.filter(function ( category ) {\n        return category.apps.length;\n    });\n\n    // groups\n    for ( categoryIndex = 0; categoryIndex < data.categories.length; categoryIndex++ ) {\n        group = data.categories[categoryIndex];\n\n        switch ( group.name ) {\n            case 'media':\n                group.name = gettext('Media');\n                break;\n\n            case 'apps':\n                group.name = gettext('Apps');\n                break;\n\n            case 'games':\n                group.name = gettext('Games');\n                break;\n\n            default:\n                group.name = gettext(group.name);\n                break;\n        }\n\n        group.offset = offset;\n\n        // correct links\n        imgLinks.push(group.icons = format(group.icons, height));\n\n        // group items\n        for ( appIndex = 0; appIndex < group.apps.length; appIndex++ ) {\n            item = group.apps[appIndex];\n            // correct links\n            item.icon = item.uris.icons.logoNormal || group.icons;\n            item.focusIcon = item.uris.icons.logoActive || group.icons;\n\n            imgLinks.push(item.icon);\n            imgLinks.push(item.focusIcon);\n        }\n\n        // convert vector to matrix\n        group.apps = paginateItems(group.apps, app.metrics.appMenuRows, app.metrics.appMenuCols);\n\n        offset = offset + group.apps.length;\n        groups.push(group);\n    }\n\n    data.menu = groups;\n\n    preloader.add(imgLinks);\n\n    return data;\n}\n\n\nfunction getAppPackages ( data ) {\n    return processData(data, core.packages.filter(function ( corePackage ) {\n        return corePackage.type === 'app';\n    }));\n}\n\n\nprofile.load = function ( args, callback ) {\n    var url = args.config || 'config.json',\n        xhr = new XMLHttpRequest(),\n        alias;\n\n    if ( MODE === 'PORTAL' ) {\n        xhr.onload = function () {\n            var error = false,\n                data  = {};\n\n            console.log('onload');\n\n            try {\n                console.log(xhr.responseText);\n                data = JSON.parse(xhr.responseText);\n\n                Object.keys(args).forEach(function ( param ) {\n                    if ( param !== 'config' ) {\n                        data[param] = args[param];\n                    }\n                });\n\n                data = getAppPackages(data);\n\n                callback(null, data);\n            } catch ( exceptionError ) {\n                console.log(exceptionError);\n                error = exceptionError.toString() + ' <br>url: ' + url;\n            }\n\n            callback(error, data);\n        };\n\n        xhr.onerror = function () {\n            console.log('onerror');\n            callback('url: ' + url);\n        };\n\n        xhr.ontimeout = function () {\n            console.log('ontimeout');\n            callback('url: ' + url);\n        };\n\n        xhr.open('GET', url, true);\n        xhr.send(null);\n    } else {\n        alias = core.backend.settings.theme;\n\n        if ( core.backend.settings.themes[alias] && core.backend.settings.themes[alias].alias ) {\n            alias = core.backend.settings.themes[alias].alias;\n        } else {\n            alias = 'default';\n        }\n\n        core.backend.request('themes/' + alias + '?colorSpace=rgba_hex&screenResolution=' + screen.width + 'x' + screen.height, {\n            onload: function ( error, response ) {\n                var data = {\n                    logo: 'img/{0}/logo.png',\n                    categories: [\n                        {\n                            name: 'Media',\n                            icons: 'img/{0}/icons/media.png',\n                            color: '#ffd200',\n                            apps: []\n                        },\n                        {\n                            name: 'Apps',\n                            icons: 'img/{0}/icons/apps.png',\n                            color: '#00eaff',\n                            apps: []\n                        },\n                        {\n                            name: 'Games',\n                            icons: 'img/{0}/icons/games.png',\n                            color: '#8de619',\n                            apps: []\n                        }\n                    ]\n                };\n\n                if ( !error && response.data ) {\n                    if ( response.data.logoFilename ) {\n                        data.logo = response.data.logoFilename.value;\n                    }\n\n                    if ( response.data.logoAlign ) {\n                        data.logoAlign = response.data.logoAlign.value;\n                    }\n                }\n\n                callback(null, getAppPackages(data));\n            },\n            onerror: function () {\n                var data = {\n                    logo: 'img/{0}/logo.png',\n                    categories: [\n                        {\n                            name: 'Media',\n                            icons: 'img/{0}/icons/media.png',\n                            color: '#ffd200',\n                            apps: []\n                        },\n                        {\n                            name: 'Apps',\n                            icons: 'img/{0}/icons/apps.png',\n                            color: '#00eaff',\n                            apps: []\n                        },\n                        {\n                            name: 'Games',\n                            icons: 'img/{0}/icons/games.png',\n                            color: '#8de619',\n                            apps: []\n                        }\n                    ]\n                };\n\n                data = getAppPackages(data);\n\n                callback(null, data);\n            }\n        });\n    }\n};\n\nif ( DEVELOP ) {\n    // expose to the global scope\n    window.profile = profile;\n}\n\n// public\nmodule.exports = profile;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Do string substitution according to the given format.\n * http://stackoverflow.com/questions/610406/javascript-equivalent-to-printf-string-format\n *\n * @param {string} format string substitution format\n *\n * @return {string} result data\n */\nmodule.exports = function ( format ) {\n    var args = Array.prototype.slice.call(arguments, 1),\n        expr = /{(\\d+)}/g;\n\n    if ( DEVELOP ) {\n        if ( !format ) {\n            throw new Error(__filename + ': format string is empty');\n        }\n        if ( args.length === 0 ) {\n            throw new Error(__filename + ': no arguments');\n        }\n        if ( !expr.test(format) ) {\n            throw new Error(__filename + ': format string does not have substitutions: ' + format);\n        }\n    }\n\n    return format.replace(expr, function ( match, number ) {\n        return args[number] === undefined ? match : args[number];\n    });\n};\n","/**\n * Main page implementation.\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar app        = require('mag-app'),\n    keys       = require('stb-keys'),\n    Page       = require('stb-component-page'),\n    Button     = require('spa-component-button'),\n    Grid       = require('spa-component-grid'),\n    List       = require('mag-component-list'),\n    LayoutList = require('mag-component-layout-list'),\n    render     = require('../modules/apps.render'),\n    page       = new Page({$node: window.pageMain, className: 'page-main', focusable: false}),\n    menuData   = app.data.profile.menu,\n    $time      = document.getElementById('pmTime'),\n    monthList  = [\n        gettext('January'),\n        gettext('February'),\n        gettext('March'),\n        gettext('April'),\n        gettext('May'),\n        gettext('June'),\n        gettext('July'),\n        gettext('August'),\n        gettext('September'),\n        gettext('October'),\n        gettext('November'),\n        gettext('December')\n    ],\n    dayList = [\n        gettext('Sunday'),\n        gettext('Monday'),\n        gettext('Tuesday'),\n        gettext('Wednesday'),\n        gettext('Thursday'),\n        gettext('Friday'),\n        gettext('Saturday')\n    ],\n    gridList        = [],\n    gridListIndex   = 0,\n    list            = null,\n    monthDayCurrent = 0,\n    btnArrowLeft, btnArrowRight, lastActiveComponent,\n    menuModal, appsCount, $date, $month, $day, gridCurrentItem;\n\n\nif ( MODE === 'PORTAL' ) {\n    $date = document.getElementById('pmDate');\n    $month = $date.children[0];\n    $day = $date.children[1];\n}\n\n// TODO: update time if the launcher is active\nfunction setTime () {\n    var time  = new Date(),\n        hours = time.getHours(),\n        mins  = time.getMinutes(),\n        monthDay, month, day;\n\n    if ( MODE === 'PORTAL' ) {\n        monthDay = time.getDate();\n\n        // new day check\n        if ( monthDayCurrent !== monthDay ) {\n            month = time.getMonth();\n            day   = time.getDay();\n            $month.innerText = monthList[month];\n            $day.innerText   = monthDay + ' ' + dayList[day];\n            monthDayCurrent = monthDay;\n        }\n    }\n\n    $time.innerText = (hours > 9 ? hours : '0' + hours) + ':' + (mins > 9 ? mins : '0' + mins);\n}\n\n\nfunction focusGrid ( direction ) {\n    if ( direction === keys.right ) {\n        if ( gridListIndex < gridList.length - 1 ) {\n            gridCurrentItem.$node.style.visibility = 'hidden';\n            gridCurrentItem = gridList[++gridListIndex];\n            gridCurrentItem.focus();\n            gridCurrentItem.$node.style.visibility = 'inherit';\n        }\n    }\n\n    if ( direction === keys.left ) {\n        if ( gridListIndex > 0 ) {\n            gridCurrentItem.$node.style.visibility = 'hidden';\n            gridCurrentItem = gridList[--gridListIndex];\n            gridCurrentItem.focus();\n            gridCurrentItem.$node.style.visibility = 'inherit';\n        }\n    }\n\n    if ( gridListIndex > 0 ) {\n        btnArrowLeft.show();\n    } else {\n        btnArrowLeft.hide();\n    }\n\n    if ( gridListIndex < gridList.length - 1 ) {\n        btnArrowRight.show();\n    } else {\n        btnArrowRight.hide();\n    }\n}\n\n\nfunction lockGridItem ( error ) {\n    var $focusItem, focusItemData;\n\n    if ( !error ) {\n        $focusItem    = gridCurrentItem.$focusItem;\n        focusItemData = $focusItem.data;\n        gridCurrentItem.data[$focusItem.y][$focusItem.x].locked = focusItemData.locked = !focusItemData.locked;\n\n        gridCurrentItem.renderItem(gridCurrentItem.$focusItem, focusItemData);\n        $focusItem.classList.add('focus');\n    }\n}\n\n\nfunction createParentControl () {\n    return new LayoutList({\n        size: 1,\n        focusIndex: 0,\n        data: [\n            {\n                items: [\n                    {\n                        value: ' ',\n                        className: 'theme-icon theme-icon-rc-f2'\n                    },\n                    {\n                        value: gettext('Parent control')\n                    }\n                ],\n                click: function () {\n                    core.taskManager.lockApp(gridCurrentItem.$focusItem.data, function ( error ) {\n                        lockGridItem(error);\n                        menuModal.hide();\n                    });\n                }\n            }\n        ],\n        events: {\n            keydown: function ( event ) {\n                LayoutList.prototype.defaultEvents.keydown.call(this, event);\n                if ( event.code === keys.f2 ) {\n                    core.taskManager.lockApp(gridCurrentItem.$focusItem.data, lockGridItem);\n                } else if ( event.code === keys.back || event.code === keys.menu ) {\n                    event.stop = true;\n                    menuModal.hide();\n                }\n            },\n            blur: function () {\n                menuModal.hide();\n            }\n        }\n    });\n}\n\n\nfunction createMenu () {\n    page.add(\n        list = new List({\n            $node: window.pmGroupList,\n            className: 'app-menu',\n            size: appsCount || 1,\n            data: appsCount ? menuData : [{name: 'no apps'}],\n            render: function ( $item, data ) {\n                var $body = document.createElement('div');\n\n                $item.className = 'menu-item item';\n                // clear\n                $item.innerText = null;\n\n                if ( data ) {\n                    $item.$title = document.createElement('div');\n                    $body.className = 'menu-item__body';\n                    $item.$title.className = 'menu-item__title theme-launcher-color';\n\n                    $body.style.backgroundImage = 'url(\"' + data.icons + '\")';\n                    $item.$title.innerText = data.name;\n\n                    $body.appendChild($item.$title);\n                    $item.appendChild($body);\n                }\n            },\n            focusIndex: 0,\n            type: List.prototype.TYPE_HORIZONTAL,\n            cycle: false,\n            events: {\n                keydown: function ( data ) {\n                    if ( data.code === keys.down ) {\n                        // leave\n                        gridCurrentItem.focus();\n                    } else {\n                        // left/right\n                        switch ( data.code ) {\n                            case keys.up:\n                            case keys.down:\n                            case keys.right:\n                            case keys.left:\n                            case keys.pageUp:\n                            case keys.pageDown:\n                            case keys.home:\n                            case keys.end:\n                                // cursor move only on arrow keys\n                                this.move(data.code);\n                                break;\n                            case keys.back:\n                                if ( PLATFORM !== 'MAG' ) {\n                                    window.top.platformApi.exit();\n                                }\n                                break;\n                            case keys.ok:\n                                break;\n                        }\n                    }\n                },\n                'click:item': function ( event ) {\n                    var self  = this,\n                        $prev = this.$focusItem;\n\n                    if ( event.event && typeof event.event.button !== 'undefined' && event.event.button === 0 ) {\n                        // native click\n                        this.focus();\n\n                        self.emit('focus:item', {\n                            $prev: $prev,\n                            $curr: self.$focusItem\n                        });\n                    }\n                },\n                'focus:item': function ( event ) {\n                    if ( this === page.activeComponent ) {\n                        if ( event.$prev ) {\n                            event.$prev.firstChild.firstChild.classList.remove('active');\n                            event.$curr.firstChild.firstChild.classList.add('active');\n                        }\n\n                        if ( gridCurrentItem ) {\n                            gridCurrentItem.$node.style.visibility = 'hidden';\n                        }\n\n                        gridCurrentItem = gridList[gridListIndex = event.$curr.data.offset];\n                        gridCurrentItem.$node.style.visibility = 'inherit';\n\n                        if ( gridListIndex > 0 ) {\n                            btnArrowLeft.show();\n                        } else {\n                            btnArrowLeft.hide();\n                        }\n\n                        if ( gridListIndex < gridList.length - 1 ) {\n                            btnArrowRight.show();\n                        } else {\n                            btnArrowRight.hide();\n                        }\n                    }\n\n                    if ( event.$prev ) {\n                        event.$prev.firstChild.classList.remove('theme-focus');\n                    }\n\n                    event.$curr.firstChild.classList.add('theme-focus');\n                },\n                blur: function () {\n                    this.$focusItem.firstChild.firstChild.classList.remove('active');\n                },\n                focus: function () {\n                    this.$focusItem.firstChild.firstChild.classList.add('active');\n                }\n            }\n        })\n    );\n}\n\n\nfunction createAppsGrid () {\n    menuData.forEach(function ( group, pageIndex ) {\n        group.apps.forEach(function ( groupPage ) {\n            var grid = new Grid({\n                className: 'grid',\n                data: groupPage,\n                render: render,\n                cycleX: false,\n                cycleY: false,\n                events: {\n                    focus: function () {\n                        window.pmItemDesc.innerText = this.$focusItem ? this.$focusItem.data.description : '';\n\n                        if ( list !== null ) {\n                            list.focusIndex(pageIndex);\n                        }\n\n                        console.log('focus grid: ' + gridListIndex);\n                    },\n                    'focus:item': function ( event ) {\n                        window.pmItemDesc.innerText = event.$curr.data.description;\n                    },\n                    'click:item': function ( data ) {\n                        gridCurrentItem.blur();\n\n                        core.taskManager.runApp({\n                            visible: true,\n                            config: data.$item.data,\n                            onerror: function ( error ) {\n                                if ( core.notify ) {\n                                    if ( error === 0 ) {\n                                        core.notify({\n                                            title: gettext('Network status: offline'),\n                                            icon: 'info'\n                                        });\n                                    } else {\n                                        core.notify({\n                                            title: gettext('Service not available, try later'),\n                                            icon: 'info'\n                                        });\n                                    }\n                                }\n                            }\n                        }, true);\n                    },\n                    overflow: function ( data ) {\n                        var index, size;\n\n                        if ( data.direction === keys.up && list !== null ) {\n                            list.focus();\n                        }\n\n                        if ( data.direction === keys.down ) {\n                            if ( this.$focusItem && this.$focusItem.parentNode.nextSibling ) {\n                                // if we not at the bottom already, find the last disabled item\n                                for ( index = 0, size = this.data[1].length; index < size; ++index ) {\n                                    if ( this.data[1][index].disable ) {\n                                        break;\n                                    }\n                                }\n\n                                this.focusItem(this.map[1][index - 1]);\n                            }\n                        } else if ( data.direction === keys.left || data.direction === keys.right ) {\n                            focusGrid(data.direction);\n                        }\n                    },\n                    cycle: function ( data ) {\n                        if ( data.direction === keys.up ) {\n                            list.focus();\n                        }\n                    }\n                }\n            });\n\n            grid.addListener('keydown', function ( data ) {\n                var ModalMessage;\n\n                if ( data.code === keys.menu ) {\n                    ModalMessage = require('mag-component-modal');\n\n                    if ( !menuModal ) {\n                        page.add(menuModal = new ModalMessage({\n                            title: gettext('Actions'),\n                            events: {\n                                show: function () {\n                                    this.children[0].focus();\n                                },\n                                hide: function () {\n                                    lastActiveComponent = gridCurrentItem;\n                                    gridCurrentItem.focus();\n                                }\n                            },\n                            children: [createParentControl()]\n                        }));\n\n                        menuModal.$node.firstChild.className = 'alignBox';\n                    }\n\n                    menuModal.show();\n                    menuModal.focus();\n                } else if ( data.code === keys.f2 && PLATFORM !== 'WEBOS' ) {\n                    core.taskManager.lockApp(gridCurrentItem.$focusItem.data, lockGridItem);\n                } else if ( data.code === keys.back ) {\n                    if ( PLATFORM !== 'MAG' ) {\n                        window.top.platformApi.exit();\n                    }\n                }\n            });\n\n            window.pmGrid.appendChild(grid.$node);\n            gridList.push(grid);\n        });\n    });\n\n    gridCurrentItem = gridList[gridListIndex];\n\n    if ( gridList.length < 2 ) {\n        btnArrowRight.hide();\n    }\n\n    if ( gridList.length > 0 ) {\n        gridCurrentItem.$node.style.visibility = 'inherit';\n    }\n}\n\n\nfunction fill () {\n    appsCount = menuData.length;\n\n    page.add(\n        btnArrowLeft = new Button({\n            $node: window.pmArrowLeft,\n            className: 'arrow__button',\n            events: {\n                click: function () {\n                    focusGrid(keys.left);\n                }\n            }\n        }),\n        btnArrowRight = new Button({\n            $node: window.pmArrowRight,\n            className: 'arrow__button',\n            events: {\n                click: function () {\n                    focusGrid(keys.right);\n                }\n            }\n        })\n    );\n\n    if ( MODE !== 'PORTAL' && appsCount > 1 ) {\n        createMenu();\n    }\n\n    createAppsGrid();\n\n    btnArrowLeft.hide();\n\n    // apply logo\n    window.pmLogo.style.backgroundImage = 'url(\"' + app.data.profile.logo + '\")';\n    if ( app.data.profile.logoAlign ) {\n        window.pmLogo.className = app.data.profile.logoAlign;\n        $time.className = 'reverse-' + app.data.profile.logoAlign;\n    }\n\n    setTime();\n\n    if ( PLATFORM === 'SMARTTV' ) {\n        // workaround to display time correctly for smarttv devices\n        setTimeout(function () {\n            $time.style.display = 'none';\n        }, 0);\n\n        setTimeout(function () {\n            /* eslint no-unused-expressions: 0 */\n            // force render\n            $time.offsetHeight;\n            $time.style.display = '';\n        }, 1000);\n    }\n\n    setInterval(setTime, 1000);\n}\n\n\ncore.addListener('blur', function () {\n    lastActiveComponent = page.activeComponent;\n\n    if ( lastActiveComponent ) {\n        lastActiveComponent.blur();\n    }\n});\n\ncore.addListener('focus', function () {\n    gridCurrentItem.focus();\n});\n\npage.addListener('show', function show () {\n    if ( gridList.length > 0 ) {\n        gridCurrentItem.focus();\n    }\n});\n\nfill();\n\n// public\nmodule.exports = page;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-page');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-page';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base page implementation.\n *\n * A full-screen top-level layer that can operate as an independent separate entity.\n * It is added to the document body on creation if not already linked.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n *\n * @example\n * var Page = require('stb/ui/page'),\n *     page = new Page({\n *         $node: document.getElementById(id)\n *     });\n *\n * page.addListener('show', function show () {\n *     // page is visible now\n * });\n */\nfunction Page ( config ) {\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    /**\n     * Page visibility/active state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.active = false;\n\n    /**\n     * Link to the currently active component with focus.\n     *\n     * @readonly\n     * @type {Component}\n     */\n    this.activeComponent = null;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'page ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // state flag\n    this.active = this.$node.classList.contains('active');\n\n    // correct DOM parent/child connection if necessary\n    if ( this.$node.parentNode === null ) {\n        document.body.appendChild(this.$node);\n    }\n\n    // always itself\n    this.page = this;\n}\n\n\n// inheritance\nPage.prototype = Object.create(Component.prototype);\nPage.prototype.constructor = Page;\n\n// set component name\nPage.prototype.name = 'spa-component-page';\n\n\n// public\nmodule.exports = Page;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component'),\n    keys      = require('spa-keys');\n\n\n/**\n * Base button implementation.\n *\n * Has global options:\n *     Button.prototype.clickDuration - time to apply \"click\" class, does not apply if 0\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {string} [config.value] button caption text (generated if not set)\n * @param {string} [config.icon] button icon name\n *\n * @example\n * var Button = require('stb/ui/button'),\n *     btnSimple, btnIcon, btnDetached;\n *\n * btnSimple = new Button({\n *     $node: document.getElementById('btnSimple'),\n *     value: 'Simple button'\n * });\n *\n * btnIcon = new Button({\n *     $node: document.getElementById('btnIcon'),\n *     icon: 'menu'\n *     value: 'Button with icon'\n * });\n *\n * btnDetached = new Button({\n *     value: 'Button not added to the page',\n *     className: 'wide'\n * });\n */\nfunction Button ( config ) {\n    // current execution context\n    //var self = this;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.icon && typeof config.icon !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.icon');\n        }\n        if ( config.value && typeof config.value !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.value');\n        }\n    }\n\n    //config.name = 'spa-component-button' + (config.className || '');\n\n    // set default className if classList property empty or undefined\n    //config.className = this.name + ' ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // optional dom\n    if ( config.icon ) {\n        // insert icon\n        this.$icon = this.$body.appendChild(document.createElement('div'));\n        this.$icon.className = 'icon ' + config.icon;\n    }\n\n    // insert caption placeholder\n    this.$text = this.$body.appendChild(document.createElement('div'));\n    this.$text.classList.add('text');\n\n    if ( config.value ) {\n        // fill it\n        this.$text.innerText = config.value;\n    }\n}\n\n\n// inheritance\nButton.prototype = Object.create(Component.prototype);\nButton.prototype.constructor = Button;\n\n// set component name\nButton.prototype.name = 'spa-component-button';\n\n\n// time to apply \"click\" class, does not apply if 0\nButton.prototype.clickDuration = 200;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nButton.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse click events.\n     */\n    click: function () {\n        // current execution context\n        var self = this;\n\n        this.$node.classList.add('click');\n\n        setTimeout(function () {\n            self.$node.classList.remove('click');\n        }, this.clickDuration);\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        if ( event.code === keys.enter ) {\n            // emulate click\n            // there are some listeners\n            if ( this.events['click'] ) {\n                /**\n                 * Mouse click event emulation.\n                 *\n                 * @event module:stb/ui/button~Button#click\n                 *\n                 * @type {Object}\n                 * @property {Event} event click event data\n                 */\n                this.emit('click', {event: event});\n            }\n        }\n    }\n};\n\n\n// public\nmodule.exports = Button;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component'),\n    keys      = require('spa-keys');\n\n\n/**\n * Mouse click event.\n *\n * @event module:stb/ui/grid~Grid#click:item\n *\n * @type {Object}\n * @property {Element} $item clicked HTML item\n * @property {Event} event click event data\n */\n\n\n/**\n * Base grid/table implementation.\n *\n * For navigation map implementation and tests see {@link https://gist.github.com/DarkPark/8c0c2926bfa234043ed1}.\n *\n * Each data cell can be either a primitive value or an object with these fields:\n *\n *  Name    | Description\n * ---------|-------------\n *  value   | actual cell value to render\n *  colSpan | amount of cells to merge horizontally\n *  rowSpan | amount of cells to merge vertically\n *  mark    | is it necessary or not to render this cell as marked\n *  focus   | is it necessary or not to render this cell as focused\n *  disable | is it necessary or not to set this cell as disabled\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}] init parameters (all inherited from the parent)\n * @param {Array[]}  [config.data=[]] component data to visualize\n * @param {function} [config.render] method to build each grid cell content\n * @param {function} [config.navigate] method to move focus according to pressed keys\n * @param {boolean}  [config.cycleX=true] allow or not to jump to the opposite side of line when there is nowhere to go next\n * @param {boolean}  [config.cycleY=true] allow or not to jump to the opposite side of column when there is nowhere to go next\n * @param {Object}   [config.provider] data provider\n * @param {number}   [config.sizeX] grid columns count\n * @param {number}   [config.sizeX] grid rows count\n *\n * @fires module:stb/ui/grid~Grid#click:item\n *\n * @example\n * var Grid = require('stb/ui/grid'),\n *     grid = new Grid({\n *         data: [\n *             [1,   2,  3, {value: '4;8;12;16', focus: true, rowSpan: 4}],\n *             [5,   6,  7],\n *             [9,  10, 11],\n *             [13, 14, {value: 15, disable: true}]\n *         ],\n *         render: function ( $item, data ) {\n *             $item.innerHTML = '<div>' + (data.value) + '</div>';\n *         },\n *         cycleX: false\n *     });\n */\nfunction Grid ( config ) {\n    // current execution context\n    //var self = this;\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        // if ( config.navigate && typeof config.navigate !== 'function' ) {\n        //     throw new Error(__filename + ': wrong config.navigate type');\n        // }\n    }\n\n    /**\n     * List of DOM elements representing the component cells.\n     * Necessary for navigation calculations.\n     *\n     * @type {Element[][]}\n     */\n    this.map = [];\n\n    /**\n     * Link to the currently focused DOM element.\n     *\n     * @type {Element}\n     */\n    this.$focusItem = null;\n\n    /**\n     * Component data to visualize.\n     *\n     * @type {Array[]}\n     */\n    this.data = [];\n\n    /**\n     * Allow or not to jump to the opposite side of line when there is nowhere to go next.\n     *\n     * @type {boolean}\n     */\n    this.cycleX = true;\n\n    /**\n     * Allow or not to jump to the opposite side of column when there is nowhere to go next.\n     *\n     * @type {boolean}\n     */\n    this.cycleY = true;\n\n    /**\n     * Current navigation map horizontal position.\n     *\n     * @type {number}\n     */\n    this.focusX = 0;\n\n    /**\n     * Current navigation map vertical position.\n     *\n     * @type {number}\n     */\n    this.focusY = 0;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'grid ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // component setup\n    this.init(config);\n\n    // custom navigation method\n    //if ( config.navigate ) {\n    //    // apply\n    //    this.navigate = config.navigate;\n    //}\n\n    // navigation by keyboard\n    //this.addListener('keydown', this.navigate);\n\n    // navigation by mouse\n    //this.$body.addEventListener('mousewheel', function ( event ) {\n    //    // scrolling by Y axis\n    //    if ( event.wheelDeltaY ) {\n    //        self.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n    //    }\n    //\n    //    // scrolling by X axis\n    //    if ( event.wheelDeltaX ) {\n    //        self.move(event.wheelDeltaX > 0 ? keys.left : keys.right);\n    //    }\n    //});\n}\n\n\n// inheritance\nGrid.prototype = Object.create(Component.prototype);\nGrid.prototype.constructor = Grid;\n\n// set component name\nGrid.prototype.name = 'spa-component-grid';\n\n\n/**\n * Fill the given cell with data.\n * $item.data can contain the old data (from the previous render).\n *\n * @param {Element} $item item DOM link\n * @param {*} data associated with this item data\n */\nGrid.prototype.renderItemDefault = function ( $item, data ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 2 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !($item instanceof Element) ) {\n            throw new Error(__filename + ': wrong $item type');\n        }\n    }\n\n    $item.innerText = data.value;\n};\n\n\n/**\n * Method to build each grid cell content.\n * Can be redefined to provide custom rendering.\n *\n * @type {function}\n */\nGrid.prototype.renderItem = Grid.prototype.renderItemDefault;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nGrid.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse wheel events.\n     *\n     * @param {Event} event generated event\n     */\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        if ( event.wheelDeltaY ) {\n            this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n        }\n\n        // scrolling by X axis\n        if ( event.wheelDeltaX ) {\n            this.move(event.wheelDeltaX > 0 ? keys.left : keys.right);\n        }\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n            case keys.right:\n            case keys.left:\n                // cursor move only on arrow keys\n                this.move(event.code);\n                break;\n            case keys.enter:\n                // there are some listeners\n                if ( this.events['click:item'] ) {\n                    // notify listeners\n                    this.emit('click:item', {$item: this.$focusItem, event: event});\n                }\n                break;\n        }\n    }\n};\n\n\n/**\n * Default method to move focus according to pressed keys.\n *\n * @param {Object} event generated event source of movement\n */\n//Grid.prototype.navigateDefault = function ( event ) {\n//    switch ( event.code ) {\n//        case keys.up:\n//        case keys.down:\n//        case keys.right:\n//        case keys.left:\n//            // cursor move only on arrow keys\n//            this.move(event.code);\n//            break;\n//        case keys.ok:\n//            // there are some listeners\n//            if ( this.events['click:item'] ) {\n//                // notify listeners\n//                this.emit('click:item', {$item: this.$focusItem, event: event});\n//            }\n//            break;\n//    }\n//};\n\n\n/**\n * Current active method to move focus according to pressed keys.\n * Can be redefined to provide custom navigation.\n *\n * @type {function}\n */\n//Grid.prototype.navigate = Grid.prototype.navigateDefault;\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary and add missing properties.\n *\n * @param {Array[]} data user 2-dimensional array\n * @return {Array[]} reworked incoming data\n */\nfunction normalize ( data ) {\n    var idxY, idxX, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( idxY = 0; idxY < data.length; idxY++ ) {\n        // cols\n        for ( idxX = 0; idxX < data[idxY].length; idxX++ ) {\n            // cell value\n            item = data[idxY][idxX];\n\n            // primitive value\n            if ( typeof item === 'object' ) {\n                // always at least one row/col\n                item.colSpan = item.colSpan || 1;\n                item.rowSpan = item.rowSpan || 1;\n            } else {\n                // wrap with defaults\n                item = data[idxY][idxX] = {\n                    value: data[idxY][idxX],\n                    colSpan: 1,\n                    rowSpan: 1\n                };\n            }\n\n            if ( DEVELOP ) {\n                // if ( !('value' in item) ) {\n                //     throw new Error(__filename + ': field \"value\" is missing');\n                // }\n                if ( Number(item.colSpan) !== item.colSpan ) {\n                    throw new Error(__filename + ': item.colSpan must be a number');\n                }\n                if ( Number(item.rowSpan) !== item.rowSpan ) {\n                    throw new Error(__filename + ': item.rowSpan must be a number');\n                }\n                if ( item.colSpan <= 0 ) {\n                    throw new Error(__filename + ': item.colSpan should be positive');\n                }\n                if ( item.rowSpan <= 0 ) {\n                    throw new Error(__filename + ': item.rowSpan should be positive');\n                }\n                if ( ('focus' in item) && Boolean(item.focus) !== item.focus ) {\n                    throw new Error(__filename + ': item.focus must be boolean');\n                }\n                if ( ('disable' in item) && Boolean(item.disable) !== item.disable ) {\n                    throw new Error(__filename + ': item.disable must be boolean');\n                }\n            }\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Fill the given rectangle area with value.\n *\n * @param {Array[]} map link to navigation map\n * @param {number} posX current horizontal position\n * @param {number} posY current vertical position\n * @param {number} dX amount of horizontal cell to fill\n * @param {number} dY amount of vertical cell to fill\n * @param {*} value filling data\n */\nfunction fill ( map, posX, posY, dX, dY, value ) {\n    var idxY, idxX;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 6 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(map) ) {\n            throw new Error(__filename + ': wrong map type');\n        }\n    }\n\n    // rows\n    for ( idxY = posY; idxY < posY + dY; idxY++ ) {\n        // expand map rows\n        if ( map.length < idxY + 1 ) { map.push([]); }\n\n        // compensate long columns from previous rows\n        while ( map[idxY][posX] !== undefined ) {\n            posX++;\n        }\n\n        // cols\n        for ( idxX = posX; idxX < posX + dX; idxX++ ) {\n            // expand map row cols\n            if ( map[idxY].length < idxX + 1 ) { map[idxY].push(); }\n            // fill\n            map[idxY][idxX] = value;\n            // apply coordinates for future mouse clicks\n            if ( value.x === undefined ) { value.x = idxX; }\n            if ( value.y === undefined ) { value.y = idxY; }\n        }\n    }\n}\n\n\n/**\n * Create a navigation map from incoming data.\n *\n * @param {Array[]} data user 2-dimensional array of objects\n * @return {Array[]} navigation map\n */\nfunction map ( data ) {\n    var result = [],\n        idxY, idxX, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( idxY = 0; idxY < data.length; idxY++ ) {\n        // cols\n        for ( idxX = 0; idxX < data[idxY].length; idxX++ ) {\n            // cell value\n            item = data[idxY][idxX];\n            // process a cell\n            fill(result, idxX, idxY, item.colSpan, item.rowSpan, item.$item);\n            // clear redundant info\n            delete item.$item;\n        }\n    }\n\n    return result;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nGrid.prototype.init = function ( config ) {\n    var self = this,\n        draw = false,\n        idxY, idxX,\n        $row, $item, $tbody, $focusItem,\n        itemData, newData,\n        /**\n         * Cell mouse click handler.\n         *\n         * @param {Event} event click event data\n         *\n         * @this Element\n         *\n         * @fires module:stb/ui/grid~Grid#click:item\n         */\n        onItemClick = function ( event ) {\n            // allow to accept focus\n            if ( this.data.disable !== true ) {\n                // visualize\n                self.focusItem(this);\n\n                // there are some listeners\n                if ( self.events['click:item'] ) {\n                    // notify listeners\n                    self.emit('click:item', {$item: this, event: event});\n                }\n            }\n        },\n        /**\n         * Construct grid when receive new data\n         *\n         * @param {Array} data to render\n         */\n        construct = function ( data ) {\n\n            // apply data\n            if ( data ) {\n                // new data is different\n                if ( self.data !== data ) {\n                    // apply\n                    self.data = data;\n                    // need to redraw table\n                    draw = true;\n                }\n            }\n\n            // custom render method\n            if ( config.render ) {\n                // new render is different\n                if ( self.renderItem !== config.render ) {\n                    // apply\n                    self.renderItem = config.render;\n                    // need to redraw table\n                    draw = true;\n                }\n            }\n\n            if ( !draw ) {\n                // do not redraw table\n                return;\n            }\n\n            // export pointer to inner table\n            self.$table = document.createElement('table');\n            $tbody = document.createElement('tbody');\n\n            // prepare user data\n            self.data = normalize(self.data);\n\n            // rows\n            for ( idxY = 0; idxY < self.data.length; idxY++ ) {\n                // dom\n                $row = $tbody.insertRow();\n\n                // cols\n                for ( idxX = 0; idxX < self.data[idxY].length; idxX++ ) {\n                    // dom\n                    $item = $row.insertCell(-1);\n                    // additional params\n                    $item.className = 'item';\n\n                    // shortcut\n                    itemData = self.data[idxY][idxX];\n\n                    // for map\n                    itemData.$item = $item;\n\n                    // merge columns\n                    $item.colSpan = itemData.colSpan;\n\n                    // merge rows\n                    $item.rowSpan = itemData.rowSpan;\n\n                    // active cell\n                    if ( itemData.focus ) {\n                        // store and clean\n                        $focusItem = $item;\n                    }\n\n                    // disabled cell\n                    if ( itemData.disable ) {\n                        // apply CSS\n                        $item.classList.add('disable');\n                    }\n\n                    // marked cell\n                    if ( itemData.mark ) {\n                        // apply CSS\n                        $item.classList.add('mark');\n                    }\n\n                    // visualize\n                    self.renderItem($item, itemData);\n\n                    // save data link\n                    $item.data = itemData;\n\n                    // manual focusing\n                    $item.addEventListener('click', onItemClick);\n                }\n                // row is ready\n                $tbody.appendChild($row);\n            }\n\n            // navigation map filling\n            self.map = map(self.data);\n\n            // clear all table\n            self.$body.innerText = null;\n\n            // everything is ready\n            self.$table.appendChild($tbody);\n            self.$body.appendChild(self.$table);\n\n            // apply focus\n            if ( $focusItem ) {\n                // focus item was given in data\n                self.focusItem($focusItem);\n            } else {\n                // just the first cell\n                self.focusItem(self.map[0][0]);\n            }\n        };\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        if ( config.data && (!Array.isArray(config.data) || !Array.isArray(config.data[0])) ) {\n            throw new Error(__filename + ': wrong config.data type');\n        }\n        if ( config.render && typeof config.render !== 'function' ) {\n            throw new Error(__filename + ': wrong config.render type');\n        }\n    }\n\n    // apply cycle behaviour\n    if ( config.cycleX !== undefined ) {\n        this.cycleX = config.cycleX;\n    }\n    if ( config.cycleY !== undefined ) {\n        this.cycleY = config.cycleY;\n    }\n\n\n    if ( config.provider ) {\n        if ( DEVELOP ) {\n            if ( !config.sizeX || !config.sizeY ) {\n                throw new Error(__filename + ': wrong grid data size');\n            }\n        }\n\n        this.provider = config.provider;\n        this.sizeX = config.sizeX;\n        this.sizeY = config.sizeY;\n    }\n\n    if ( config.translate ) {\n        this.translate = config.translate;\n    }\n\n    if ( config.provider ) {\n        newData = this.provider.get(null, function ( error, data ) {\n            if ( error ) {\n                if ( self.events['data:error'] ) {\n                    /**\n                     * Provider get error while take new data\n                     *\n                     * @event module:stb/ui/grid~Grid#data:error\n                     */\n                    self.emit('data:error', error);\n                }\n            }\n            construct(self.translate(data));\n\n            if ( self.events['data:ready'] ) {\n                /**\n                 * Provider get new data and reinit grid\n                 *\n                 * @event module:stb/ui/grid~Grid#data:ready\n                 */\n                self.emit('data:ready');\n            }\n        });\n\n        if ( this.events['data:get'] ) {\n            /**\n             * Provider request new data\n             *\n             * @event module:stb/ui/grid~Grid#data:get\n             *\n             * @type {Object}\n             * @property {boolean} fresh status of data to response\n             */\n            this.emit('data:get', {fresh: newData});\n        }\n    } else {\n        construct(config.data);\n    }\n\n\n};\n\n/**\n * Default translate function\n *\n * @param {Array} data to translate\n * @return {Array} data to use as grid data\n */\nGrid.prototype.defaultTranslate = function ( data ) {\n    var result = [],\n        idxY, idxX, arr;\n\n    for ( idxY = 0; idxY < this.sizeY; idxY++ ) {\n        arr = [];\n        for ( idxX = 0; idxX < this.sizeX; idxX++ ) {\n            arr[idxX] = data[idxY * this.sizeX + idxX];\n        }\n        result[idxY] = arr;\n    }\n\n    return result;\n};\n\n\n/**\n * Method to translate given array to array adapted to use as grid data\n * Can be redefined to provide custom translate.\n *\n * @type {function}\n */\nGrid.prototype.translate = Grid.prototype.defaultTranslate;\n\n\n/**\n * Move focus to the given direction.\n *\n * @param {number} direction arrow key code\n *\n * @fires module:stb/ui/grid~Grid#cycle\n * @fires module:stb/ui/grid~Grid#overflow\n * @fires module:stb/ui/grid~Grid#data:get\n * @fires module:stb/ui/grid~Grid#data:ready\n * @fires module:stb/ui/grid~Grid#data:error\n */\nGrid.prototype.move = function ( direction ) {\n    var focusX   = this.focusX,\n        focusY   = this.focusY,\n        move     = true,\n        overflow = false,\n        cycle    = false,\n        newData;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(direction) !== direction ) {\n            throw new Error(__filename + ': direction must be a number');\n        }\n    }\n\n    // shift till full stop\n    while ( move ) {\n        // arrow keys\n        switch ( direction ) {\n            case keys.up:\n                if ( focusY > 0 ) {\n                    // can go one step up\n                    focusY--;\n                } else {\n                    if ( this.cycleY ) {\n                        // jump to the last row\n                        focusY = this.map.length - 1;\n                        cycle = true;\n                    }\n                    // grid edge\n                    overflow = true;\n                }\n                break;\n\n            case keys.down:\n                if ( focusY < this.map.length - 1 ) {\n                    // can go one step down\n                    focusY++;\n                } else {\n                    if ( this.cycleY ) {\n                        // jump to the first row\n                        focusY = 0;\n                        cycle = true;\n                    }\n                    // grid edge\n                    overflow = true;\n                }\n                break;\n\n            case keys.right:\n                if ( focusX < this.map[focusY].length - 1 ) {\n                    // can go one step right\n                    focusX++;\n                } else {\n                    if ( this.cycleX ) {\n                        // jump to the first column\n                        focusX = 0;\n                        cycle = true;\n                    }\n                    // grid edge\n                    overflow = true;\n                }\n                break;\n\n            case keys.left:\n                if ( focusX > 0 ) {\n                    // can go one step left\n                    focusX--;\n                } else {\n                    if ( this.cycleX ) {\n                        // jump to the last column\n                        focusX = this.map[focusY].length - 1;\n                        cycle = true;\n                    }\n                    // grid edge\n                    overflow = true;\n\n                }\n                break;\n        }\n\n        // full cycle - has come to the start point\n        if ( focusX === this.focusX && focusY === this.focusY ) {\n            // full stop\n            move = false;\n        }\n\n        // focus item has changed and it's not disabled\n        if ( this.map[focusY][focusX] !== this.map[this.focusY][this.focusX] && this.map[focusY][focusX].data.disable !== true ) {\n            // full stop\n            move = false;\n        }\n\n        // the last cell in a row/col\n        if ( overflow ) {\n            // full stop\n            move = false;\n            // but it's disabled so need to go back\n            if ( this.map[focusY][focusX].data.disable === true ) {\n                // return to the start point\n                focusX = this.focusX;\n                focusY = this.focusY;\n            }\n        }\n    }\n\n    this.focusItem(this.map[focusY][focusX]);\n\n    // correct coordinates\n    // focusItem set approximate values\n    this.focusX = focusX;\n    this.focusY = focusY;\n\n    if ( overflow ) {\n        //\n        if ( this.provider ) {\n            newData = this.provider.get(direction, function ( error, data ) {\n                var  idxY, idxX;\n\n                if ( error ) {\n\n                    if ( self.events['data:error'] ) {\n                        /**\n                         * Provider get error while take new data\n                         *\n                         * @event module:stb/ui/grid~Grid#data:error\n                         */\n                        self.emit('data:error', error);\n\n                        return;\n                    }\n                }\n\n                if ( data ) {\n                    self.data = self.translate(data);\n                    for ( idxY = 0; idxY < self.sizeY - 1; idxY++ ) {\n                        for ( idxX = 0; idxX < self.sizeX; idxX++ ) {\n                            self.renderItem(self.map[idxY][idxX], self.data[idxY][idxX]);\n                        }\n                    }\n\n                    if ( self.events['data:ready'] ) {\n                        /**\n                         * Provider get new data and reinit grid\n                         *\n                         * @event module:stb/ui/grid~Grid#data:ready\n                         */\n                        self.emit('data:ready');\n                    }\n                }\n\n            });\n\n            if ( this.events['data:get'] ) {\n                /**\n                 * Provider request new data\n                 *\n                 * @event module:stb/ui/grid~Grid#data:get\n                 *\n                 * @type {Object}\n                 * @property {boolean} fresh status of data to response\n                 */\n                this.emit('data:get', {fresh: newData});\n            }\n        }\n\n        // there are some listeners\n        if ( this.events['overflow'] ) {\n            /**\n             * Attempt to go beyond the edge of the grid.\n             *\n             * @event module:stb/ui/grid~Grid#overflow\n             *\n             * @type {Object}\n             * @property {number} direction key code initiator of movement\n             * @property {number} cycle ...\n             */\n            this.emit('overflow', {direction: direction, cycle: cycle});\n        }\n    }\n\n    // report\n    debug.info(this.focusX + ' : ' + focusX, 'X old/new');\n    debug.info(this.focusY + ' : ' + focusY, 'Y old/new');\n    debug.info(cycle, 'cycle');\n    debug.info(overflow, 'overflow');\n\n\n};\n\n\n/**\n * Highlight the given DOM element as focused.\n * Remove focus from the previously focused item.\n *\n * @param {Node|Element} $item element to focus\n * @param {number} $item.x the item horizontal position\n * @param {number} $item.y the item vertical position\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/grid~Grid#focus:item\n * @fires module:stb/ui/grid~Grid#blur:item\n */\nGrid.prototype.focusItem = function ( $item ) {\n    var $prev = this.$focusItem;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n    }\n\n    // different element\n    if ( $item && $prev !== $item && $item.data.disable !== true ) {\n        if ( DEVELOP ) {\n            if ( !($item instanceof Element) ) {\n                throw new Error(__filename + ': wrong $item type');\n            }\n            if ( $item.parentNode.parentNode.parentNode.parentNode !== this.$body ) {\n                throw new Error(__filename + ': wrong $item parent element');\n            }\n        }\n\n        // some item is focused already\n        if ( $prev !== null ) {\n            if ( DEVELOP ) {\n                if ( !($prev instanceof Element) ) {\n                    throw new Error(__filename + ': wrong $prev type');\n                }\n            }\n\n            // style\n            $prev.classList.remove('focus');\n\n            // there are some listeners\n            if ( this.events['blur:item'] ) {\n                /**\n                 * Remove focus from an element.\n                 *\n                 * @event module:stb/ui/grid~Grid#blur:item\n                 *\n                 * @type {Object}\n                 * @property {Element} $item previously focused HTML element\n                 */\n                this.emit('blur:item', {$item: $prev});\n            }\n        }\n\n        // draft coordinates\n        this.focusX = $item.x;\n        this.focusY = $item.y;\n\n        // reassign\n        this.$focusItem = $item;\n\n        // correct CSS\n        $item.classList.add('focus');\n\n        // there are some listeners\n        if ( this.events['focus:item'] ) {\n            /**\n             * Set focus to an element.\n             *\n             * @event module:stb/ui/grid~Grid#focus:item\n             *\n             * @type {Object}\n             * @property {Element} $prev old/previous focused HTML element\n             * @property {Element} $curr new/current focused HTML element\n             */\n            this.emit('focus:item', {$prev: $prev, $curr: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Set item state and appearance as marked.\n *\n * @param {Node|Element} $item element to focus\n * @param {boolean} state true - marked, false - not marked\n */\nGrid.prototype.markItem = function ( $item, state ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 2 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !($item instanceof Element) ) {\n            throw new Error(__filename + ': wrong $item type');\n        }\n        if ( $item.parentNode.parentNode.parentNode.parentNode !== this.$body ) {\n            throw new Error(__filename + ': wrong $item parent element');\n        }\n        if ( Boolean(state) !== state ) {\n            throw new Error(__filename + ': state must be boolean');\n        }\n    }\n\n    // correct CSS\n    if ( state ) {\n        $item.classList.add('mark');\n    } else {\n        $item.classList.remove('mark');\n    }\n\n    // apply flag\n    $item.data.mark = state;\n};\n\n\n// public\nmodule.exports = Grid;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar List = require('mag-component-list'),\n    Layout = require('mag-component-layout');\n\n/**\n *  Layout list contains array of layout components\n *\n * @constructor\n * @extends List\n *\n * @param {Object} config object\n * @param {Element} [config.noData=''] element or string to display if set empty data\n *\n * @example\n * var CheckList = require('../stb/ui/layout.list'),\n *     list = new LayoutList({\n *         propagate: true,\n *         size: 7,\n *         focusIndex: 0,\n *         noData: 'No channels'\n *         data: [\n *                 {\n *                     items: [\n *                         {\n *                             className: 'star'\n *                         },\n *                         'Some text'\n *                     ],\n *                     click: function () {\n *                         // do something\n *                     }\n *                 },\n *                 {\n *                     items: [\n *                         'Hello world',\n *                         {\n *                             value: 'hi',\n *                             className: 'status'\n *                         }\n *                     ],\n *                     value:{\n *                         uri: 'http://55.55.55.55/some'\n *                     },\n *                     click: someHandler\n *                 },\n *                 {\n *                     items: [\n *                         {\n *                             className: 'big',\n *                             value: ' Some'\n *                         },\n *                         {\n *                             value: new Input()\n *                         }\n *                     ]\n *                 },\n *                 {\n *                     items: [\n *                         new Button({value: 'Ok'}),\n *                         new Button({value: 'Cancel'}),\n *                         new Button({value: 'Exit'})\n *                     ]\n *                 }\n *             ]\n * });\n */\nfunction LayoutList ( config ) {\n    var self = this;\n\n    config = config || {};\n\n    /**\n     * Elements handlers\n     */\n    this.handlers = {};\n\n    /**\n     * No data placeholder\n     *\n     * @type {Element}\n     */\n    this.$noData = null;\n\n    //config.className = 'layoutList ' + (config.className || '');\n\n    config.propagate = config.propagate === undefined ? true : config.propagate;\n\n    /**\n     * Set data layout to be fixed to cache HTML elements\n     *\n     * @type {boolean|*}\n     */\n    this.fixedData = config.fixedData || false;\n\n    //config.$body = document.createElement('div');\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    this.$noData = document.createElement('div');\n    this.$noData.className = 'noData hidden';\n\n    List.call(this, config);\n\n    this.$node.appendChild(this.$body);\n    this.$node.appendChild(this.$noData);\n\n    // add handler to focus inner layout\n    this.addListener('click:item', function ( event ) {\n        // focus inner layout of item\n        if ( event.$item.layout.children.length && !event.inner ) {\n            event.$item.layout.children[event.$item.layout.focusIndex].focus();\n        }\n\n        // only focus item if we click mouse\n        if ( event.inner ) {\n            self.focus();\n            self.focusItem(event.$item);\n        }\n        // do click callback if it present\n        if ( self.handlers[event.$item.index] ) {\n            self.handlers[event.$item.index](event.$item);\n        }\n    });\n}\n\n\nLayoutList.prototype = Object.create(List.prototype);\nLayoutList.prototype.constructor = LayoutList;\n\n// set component name\nLayoutList.prototype.name = 'mag-component-layout-list';\n\n\n/*eslint id-length:0*/\n/**\n * Default render function\n *\n * @param {Element} $item in list\n * @param {Object} config to render layout element\n */\nLayoutList.prototype.renderItemDefault = function ( $item, config ) {\n    var layout, layoutConfig,\n        currentNode,\n        currentData,\n        i;\n\n    if ( $item.ready && this.fixedData ) {\n        for ( i = 0; i < config.items.length; i++ ) {\n            currentData = config.items[i];\n            if ( typeof currentData.value === 'string' || currentData.value === undefined ) {\n                currentNode = $item.layout.$node.childNodes[i];\n                currentNode.innerText = currentData.value || '';\n                currentNode.className = currentData.className || '';\n            }\n        }\n    } else {\n        // clear inner content\n        while ( $item.firstChild ) {\n            $item.removeChild($item.firstChild);\n        }\n\n        layoutConfig = {\n            focusable: false,\n            data: config.items\n        };\n\n        if ( config.className ) {\n            layoutConfig.className = config.className;\n        }\n\n        layout = new Layout(layoutConfig);\n\n        $item.appendChild(layout.$node);\n        $item.layout = layout;\n        layout.parent = this;\n        layout.$parentItem = $item;\n\n        // focus layoutList if click on layout\n        layout.addListener('click', function () {\n            // add inner property to set that event comes from inner component\n            layout.parent.emit('click:item', {$item: $item, inner: true});\n        });\n\n        if ( config.click ) {\n            this.handlers[$item.index] = config.click;\n        }\n        // item is rendered\n        $item.ready = true;\n    }\n    $item.value = config.value || {};\n};\n\n\nLayoutList.prototype.setData = function ( config ) {\n    List.prototype.setData.call(this, config);\n\n    if ( config.data && config.data.length ) {\n        this.$noData.classList.add('hidden');\n    } else {\n        this.$noData.classList.remove('hidden');\n    }\n};\n\n\nLayoutList.prototype.init = function ( config ) {\n    var $wrap;\n\n    List.prototype.init.call(this, config);\n    if ( config.noData ) {\n        if ( DEVELOP ) {\n            if ( typeof config.noData !== 'string' && !(config.noData instanceof Element) ) {\n                throw new Error(__filename + ': wrong config.$noData type');\n            }\n        }\n\n        this.$noData.innerHTML = '';\n        if ( config.noData instanceof Element ) {\n            this.$noData.appendChild(config.noData);\n        } else if ( typeof config.noData === 'string' ) {\n            $wrap = document.createElement('div');\n            $wrap.innerText = config.noData;\n            this.$noData.appendChild($wrap);\n        }\n    }\n\n    if ( config.data && config.data.length ) {\n        this.$noData.classList.add('hidden');\n    } else {\n        this.$noData.classList.remove('hidden');\n    }\n};\n\nLayoutList.prototype.renderItem = LayoutList.prototype.renderItemDefault;\n\n\nmodule.exports = LayoutList;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n/**\n * Layout component implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array} [config.data] array of items to add to layout\n */\nfunction Layout ( config ) {\n    var self = this;\n\n    // sanitize\n    config = config || {};\n\n    /**\n     * Index of focused child component\n     * @type {number}\n     */\n    this.focusIndex = 0;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && config.className !== undefined && typeof config.className !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    //config.className = 'layout ' + (config.className || '');\n\n    /**\n     * Component data\n     * @type {Array}\n     */\n    this.data = [];\n\n    Component.call(this, config);\n\n    this.init(config);\n\n    // add listener to move focus between children\n    this.addListener('keydown', function ( event ) {\n        switch ( event.code ) {\n            case keys.right:\n                if ( self.children.length && self.focusIndex < self.children.length - 1 ) {\n                    self.children[++self.focusIndex].focus();\n                }\n                break;\n            case keys.left:\n                if ( self.children.length && self.focusIndex > 0 ) {\n                    self.children[--self.focusIndex].focus();\n                }\n                break;\n            case keys.back:\n                // focus parent focused item if parent is layout list\n                if ( self.parent ) {\n                    self.parent.focus();\n                    if ( self.$parentItem ) {\n                        self.parent.focusItem(self.$parentItem);\n                    }\n                }\n                break;\n        }\n    });\n}\n\n\nLayout.prototype = Object.create(Component.prototype);\nLayout.prototype.constructor = Layout;\n\n// set component name\nLayout.prototype.name = 'mag-component-layout';\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var index, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( index = 0; index < data.length; index++ ) {\n        // cell value\n        item = data[index];\n        // plain text\n        if ( typeof item === 'object' ) {\n            // HTML element or component\n            if ( item instanceof Component || item instanceof HTMLElement ) {\n                data[index] = {\n                    value: item,\n                    wrap: false\n                };\n            } else {\n                data[index].wrap = true;\n            }\n        } else {\n            // wrap with defaults\n            data[index] = {\n                value: data[index],\n                wrap: true\n            };\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nLayout.prototype.init = function ( config ) {\n    var self = this,\n        data = normalize(config.data),\n        item, $wrapper, index;\n\n    // clear element if reinit\n    while (this.$node.firstChild) {\n        this.$node.removeChild(this.$node.firstChild);\n    }\n\n    this.data = data;\n\n    /**\n     * @this Component\n     */\n    function componentClickHandler (  ) {\n        self.focusIndex = this.index;\n    }\n\n    for ( index = 0; index < data.length; index++ ) {\n        item = data[index];\n        // plain text\n        if ( typeof item.value === 'string' ) {\n            $wrapper = document.createElement('div');\n            $wrapper.textContent = item.value;\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n        } else if ( item.value instanceof HTMLElement ) {\n            // HTML Element\n\n            // if with wrapper\n            if ( item.wrap ) {\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value);\n                this.$node.appendChild($wrapper);\n            } else {\n                // without wrapper\n                this.$node.appendChild(item.value);\n            }\n        } else if ( item.value instanceof Component ) {\n            // component\n            // force propagate events\n            item.value.propagate = true;\n\n            // set index to current component\n            item.value.index = this.children.length;\n\n            // change layout focus index if click component\n            item.value.addListener('click', componentClickHandler);\n\n            // append component\n            if ( item.wrap ) {\n                // with wrapper\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value.$node);\n                this.$node.appendChild($wrapper);\n                this.children.push(item.value);\n                item.value.parent = this;\n            } else {\n                // without wrapper\n                this.add(item.value);\n            }\n        } else {\n            $wrapper = document.createElement('div');\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n        }\n    }\n};\n\n\nmodule.exports = Layout;\n","'use strict';\n\nmodule.exports = function ( $cell, data ) {\n    var $app        = document.createElement('div'),\n        $normalBody = document.createElement('div'),\n        $activeBody = document.createElement('div'),\n        $lock       = document.createElement('div'),\n        $normalIcon = document.createElement('div'),\n        $activeIcon = document.createElement('div'),\n        $name       = document.createElement('div'),\n        $shadow     = document.createElement('div');\n\n    $cell.className = 'grid__cell';\n    // clear\n    $cell.innerText = null;\n\n    if ( data && !data.disable ) {\n        $app.className = 'app';\n        $lock.className = 'app__lock';\n        $name.className = 'app__name';\n        $normalBody.className = 'app__body';\n        $activeBody.className = 'app__body active';\n        $normalIcon.className = 'app__icon';\n        $activeIcon.className = 'app__icon';\n        $shadow.className = 'app__shadow';\n\n        $normalBody.style.backgroundColor = $activeBody.style.backgroundColor = data.colors.splashBackground;\n        $name.style.color = data.colors.splashFont;\n        $name.innerText = data.name;\n        $normalIcon.style.backgroundImage = 'url(\"' + data.icon + '\")';\n        $activeIcon.style.backgroundImage = 'url(\"' + data.focusIcon + '\")';\n        $lock.style.visibility = data.locked ? 'inherit' : 'hidden';\n\n        $normalBody.appendChild($normalIcon);\n        $normalBody.appendChild($shadow.cloneNode());\n        $normalBody.appendChild($lock.cloneNode());\n        $normalBody.appendChild($name.cloneNode(true));\n\n        $activeBody.appendChild($activeIcon);\n        $activeBody.appendChild($shadow);\n        $activeBody.appendChild($lock);\n        $activeBody.appendChild($name);\n\n        $app.appendChild($normalBody);\n        $app.appendChild($activeBody);\n        $cell.appendChild($app);\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Dmitry Fedotov <bas.jsdev@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\nvar StbComponentModal = require('stb-component-modal'),\n    Component         = require('stb-component'),\n    keys              = require('stb-keys');\n\n\n/**\n * Modal window implementation.\n *\n * @constructor\n * @extends StbComponentModal\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {Object} [config.title] message title\n * @param {Object} [config.className] message classname\n * @param {Object} [config.icon] icon at header\n * @param {Object} [config.visible] visibility flag\n * @param {Object} [config.children] content (inherited from the parent)\n *\n * @example\n * var modalSort = new Modal({\n *     visible: false,\n *     title: 'sort',\n *     events: {\n *         show: function () {\n *             list.focus();\n *         },\n *         hide: function () {\n *             page.panelSet.focus();\n *         }\n *     },\n *     children: [list = new RadioList({})]\n * });\n * page.add(modalSort);\n */\nfunction Modal ( config ) {\n    var self = this,\n        $overlay, $body, onkeydown;\n\n    // sanitize\n    config = config || {};\n    config.events = config.events || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.icon && typeof config.icon !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.icon');\n        }\n        if ( config.title && typeof config.title !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.title');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body ) {\n            throw new Error(__filename + ': config.$body should not be provided in Modal manually');\n        }\n    }\n\n    // usually can't accept focus\n    config.focusable = config.focusable || false;\n    // hide by default\n    config.visible = config.visible || false;\n    // add default close by click\n    config.events.click = config.events.click || function () { self.hide(); };\n    // add close window behavior, when pushed a back button or a menu button\n    onkeydown = config.events.keydown;\n    config.events.keydown = function ( event ) {\n        if ( onkeydown ) {\n            onkeydown.call(this, event);\n        }\n        if ( event.code === keys.back || event.code === keys.menu ) {\n            event.stop = true;\n            self.hide();\n        }\n    };\n\n    // parent constructor call\n    StbComponentModal.call(this, config);\n\n    // add table-cell wrappers\n    this.$node.appendChild(document.createElement('div'));\n    this.$node.firstChild.classList.add('alignBox');\n    this.$node.firstChild.appendChild(document.createElement('div'));\n\n    // add header div\n    this.$header = document.createElement('div');\n    this.$header.className = 'header';\n\n    // insert caption placeholder\n    this.$text = this.$header.appendChild(document.createElement('div'));\n    this.$text.classList.add('text');\n    this.$text.innerText = config.title || '';\n\n    // optional icon\n    if ( config.icon ) {\n        this.$icon = this.$header.appendChild(document.createElement('div'));\n        this.$icon.className = 'icon ' + config.icon;\n    }\n\n    $overlay = document.createElement('div');\n    $overlay.className = 'overlay';\n\n    // add to dom\n    // add body wrapper\n    $body = this.$body.parentNode.removeChild(this.$body);\n    this.$node.firstChild.firstChild.appendChild(this.$header);\n    this.$node.firstChild.firstChild.appendChild($body);\n    this.$node.firstChild.firstChild.appendChild($overlay);\n}\n\n\n// inheritance\nModal.prototype = Object.create(StbComponentModal.prototype);\nModal.prototype.constructor = Modal;\n\n// set component name\nModal.prototype.name = 'mag-component-modal';\n\n\n/**\n * Redefine default component focus to set additional css\n */\nModal.prototype.focus = function () {\n    this.$node.classList.add('active');\n    StbComponentModal.prototype.focus.call(this);\n    if ( this.children[0] && this.children[0] instanceof Component ) {\n        this.children[0].focus();\n    }\n};\n\n\n/**\n * Blur message\n */\nModal.prototype.blur = function () {\n    this.$node.classList.remove('active');\n    StbComponentModal.prototype.blur.call(this);\n};\n\n\n// public\nmodule.exports = Modal;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-modal');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-modal';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base modal window implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n */\nfunction Modal ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body ) {\n            throw new Error(__filename + ': config.$body should not be provided manually');\n        }\n    }\n\n    // create centered div\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // add table-cell wrapper\n    this.$node.appendChild(document.createElement('div').appendChild(this.$body).parentNode);\n}\n\n\n// inheritance\nModal.prototype = Object.create(Component.prototype);\nModal.prototype.constructor = Modal;\n\n// set component name\nModal.prototype.name = 'spa-component-modal';\n\n\n// public\nmodule.exports = Modal;\n"],"sourceRoot":""}