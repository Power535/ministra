{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/stb-keys/index.js","webpack:///./node_modules/stb-component/index.js","webpack:///./node_modules/mag-app/index.js","webpack:///./node_modules/spa-app/lib/core.js","webpack:///./node_modules/spa-component/index.js","webpack:///./node_modules/stb-component-page/index.js","webpack:///./node_modules/mag-component-panel-set/index.js","webpack:///./node_modules/mag-component-panel/index.js","webpack:///./node_modules/spa-component-flicker/index.js","webpack:///./node_modules/mag-component-layout-list/index.js","webpack:///./node_modules/stb-component-button/index.js","webpack:///./node_modules/stb-component-scrollbar/index.js","webpack:///./node_modules/cjs-emitter/index.js","webpack:///./src/js/config.js","webpack:///./src/js/modules/tools.js","webpack:///./node_modules/spa-dom/index.js","webpack:///./node_modules/stb-app/lib/css.js","webpack:///./node_modules/spa-keys/index.js","webpack:///./node_modules/mag-component-layout/index.js","webpack:///./node_modules/mag-component-list/index.js","webpack:///./node_modules/mag-component-scroll-area/index.js","webpack:///./node_modules/mag-component-modal/index.js","webpack:///./node_modules/mag-component-radio-list/index.js","webpack:///./node_modules/mag-component-footer/index.js","webpack:///./src/js/main.js","webpack:///./node_modules/mag-app/lib/main.js","webpack:///./node_modules/cjs-query/index.js","webpack:///./node_modules/spa-app/lib/events.js","webpack:///./node_modules/stb-shim-classlist/index.js","webpack:///./node_modules/stb-app/lib/metrics.js","webpack:///./src/js/metrics.js","webpack:///./node_modules/mag-app/lib/css.js","webpack:///./node_modules/spa-gettext/index.js","webpack:///./node_modules/cjs-gettext/index.js","webpack:///./src/js/pages/info.js","webpack:///./node_modules/spa-component-page/index.js","webpack:///./node_modules/spa-component-button/index.js","webpack:///./node_modules/spa-component-scrollbar/index.js","webpack:///./src/js/pages/more.js","webpack:///./src/js/pages/add.js","webpack:///./node_modules/mag-component-value-list/index.js","webpack:///./node_modules/stb-component-modal/index.js","webpack:///./node_modules/spa-component-modal/index.js","webpack:///./src/js/pages/chans.js","webpack:///./src/js/pages/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","keys","back","backspace","channelNext","tab","channelPrev","ok","enter","exit","escape","volumeUp","volumeDown","f1","f2","f3","f4","refresh","frame","phone","set","tv","menu","app","rewind","forward","audio","standby","keyboard","usbMounted","usbUnmounted","playPause","play","pause","stop","power","record","info","mute","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","Emitter","parse","query","document","location","search","substring","config","activePage","route","pageTo","data","page","pageFrom","active","id","$node","classList","remove","events","emit","add","showPage","this","from","to","counter","Component","self","visible","focusable","$body","parent","children","propagate","createElement","className","hide","defaultEvents","forEach","eventName","addListener","apply","addEventListener","event","focus","stopPropagation","constructor","child","index","arguments","length","push","parentNode","appendChild","item","activeComponent","blur","splice","indexOf","removeChild","activeItem","show","callback","setTimeout","PanelSet","keydownHandler","code","left","focusIndex","panels","right","main","addListeners","keydown","Layout","Panel","$overlay","size","$shadow","title","Array","isArray","$title","Flicker","interval","timerId","render","start","run","clearTimeout","defaultRender","$item","innerText","List","LayoutList","handlers","$noData","undefined","fixedData","layout","inner","focusItem","renderItemDefault","layoutConfig","currentNode","currentData","ready","items","childNodes","firstChild","$parentItem","click","setData","init","$wrap","noData","innerHTML","Element","renderItem","once","onceWrapper","removeListener","callbacks","filter","fn","slice","list","filterStatus","filterSearch","sort","constants","BY_NAME","BY_CATEGORY","BY_DATE","extensions","registered","tools","session","token","userId","convert","Math","floor","gettext","parseDate","months","day","getDate","month","getMonth","minutes","getMinutes","hours","getHours","dates","arr","unshift","String","days","years","Date","getFullYear","dom","tag","tagName","attrList","content","node","createTextNode","fragment","createDocumentFragment","tagDst","Node","nodes","count","clear","lastChild","link","rel","href","metrics","height","head","space","pageUp","pageDown","end","home","up","down","insert","del","$wrapper","HTMLElement","wrap","normalize","componentClickHandler","textContent","$focusItem","viewIndex","type","TYPE_VERTICAL","cycle","scroll","provider","TYPE_HORIZONTAL","mousewheel","wheelDeltaY","move","wheelDeltaX","idx","currSize","onClick","blocked","error","realSize","maxCount","viewSize","pos","blurItem","renderView","itemData","prevIndex","currIndex","mark","scrollTo","direction","force","previousSibling","nextSibling","$prev","$curr","markItem","state","ScrollArea","step","realHeight","viewHeight","topPosition","screen","delta","style","top","ceil","offsetHeight","StbComponentModal","Modal","onkeydown","$header","$text","icon","$icon","classIcon","classIconActive","RadioList","classChecked","checkedData","checkedIndex","previousCheckedData","checkIndex","defaultCheckedIndex","defaultFocusIndex","resetData","clearChecked","table","tr","td","check","checkBox","getItemNodeByIndex","classes","Footer","currentTab","tabs","codes","$table","insertRow","rows","insertCell","$left","cells","$right","currTab","action","$tab","$tabChildren","addClick","ind","middle","disabled","visibility","onclick","load","window","core","environment","language","pages","more","chans","getCoreInstance","platform","body","setAttribute","contextmenu","preventDefault","split","part","decodeURIComponent","stringify","params","encodeURIComponent","join","DOMContentLoaded","unload","eventLocal","keyCode","ctrlKey","altKey","shiftKey","keypress","documentElement","DOMTokenList","el","_element","_classCache","replace","contains","toString","toggle","screenHeight","availHeight","availTop","availBottom","availWidth","width","availLeft","availRight","480","keyboardWidth","keyboardHeight","576","720","1080","linkCSS","theme","path","Gettext","loader","prepare","_","pgettext","ngettext","defaultLanguage","xhr","ext","XMLHttpRequest","onload","JSON","responseText","onerror","ontimeout","open","send","meta","msgId","context","plural","evalResult","eval","getElementById","PanelExtended","Button","Scroll","clock","time","mins","panelDetails","reset","statuses","initData","channel","url","startTime","endTime","storage","label","button","overflow","click:item","panelSet","Page","clickDuration","ScrollBar","thumbRect","trackRect","$thumb","getBoundingClientRect","marginTop","marginLeft","curr","prev","mpage","area","spvr","spvrErrorCodes","ValueList","ModalMessage","pvr","plugins","pvrErrorCodes","-1","-2","-3","-4","-5","-6","-7","-8","-9","-10","-11","-12","-13","-14","-15","-16","dateKeydown","myself","dateRender","current","getIndex","modalSelectDevice","allowStorage","intent","local","server","enabled","storages","currStorage","mountPath","Number","panelAdd","startHour","$element","startMinute","startDay","startMonth","startYear","endHour","endMinute","endDay","endMonth","endYear","allowServer","input","description","done","uri","recordId","startDate","endDate","parseInt","getTime","notify","freeSize","close","message","free","all","$textWrapper","fileName","merge","channelName","setTime","getSeconds","currentIndex","renderValue","updateData","renderValueDefault","change","appConfig","footer","panelSelect","searchHolder","doneEvent","chansSearch","startRecord","censored","genre","local_pvr","accessControl","request","data:error","tvBackend","getChannels","result","number","$channelsCountWrapper","$channelsCount","svrErrorCodes","fileSystem","fs","recordStates","stateToClass","refreshMiddleList","storageIndex","newData","states","0","ERROR","1","RECORDING","2","WAITING","3","FINISHED","records","middlePanel","itemClick","modalActions","fill","trim","fsType","isReadOnly","mediaType","model","partitionNum","sn","vendor","progress","first","next","toLowerCase","localeCompare","rightPanel","updateChannelsList","getMountPoints","concat","getHDDInfo","onMount","playFocusedFile","getFileUrl","mime","mediaId","deleteFocusedTask","deleteFile","recordItem","stopFocusedTask","downloadFocusedTask","resetFilters","$catChilds","leftPanel","modalFilterStatus","modalReset","recordData","downloadable","sameRecordItem","modalSort","modalExit","inputText","focus:item","updateDelay","onFocusDebounceTimeout","resetTimeOut","textArea","date","dur","$channel","$name","$date","$time","$storage","$state","minute","errorCode","destroy"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 24);\n","/**\n * Global list of non-printable control key codes.\n *\n * At the moment `keypress` and `keydown` events are emitted for the same keys (for both printable and non-printable characters).\n *\n * WARNING!!! All codes in this file (except 'volumeUp' and 'volumeDown')\n * are used in window 'keydown' handler to prevent wrong 'keypress' firings.\n * If you add new code to this file 'keypress' event with this code will never fire.\n *\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar keys = require('spa-keys');\n\n\n// extend with additional codes\nkeys.back         = keys.backspace;\nkeys.channelNext  = keys.tab;        // Tab\nkeys.channelPrev  = keys.tab + 's';  // Shift+Tab\nkeys.ok           = keys.enter;      // Enter\nkeys.exit         = keys.escape;     // Esc\nkeys.volumeUp     = 107;             // NUMPAD +\nkeys.volumeDown   = 109;             // NUMPAD -\nkeys.f1           = 112 + 'c';       // Ctrl+F1\nkeys.f2           = 113 + 'c';       // Ctrl+F2\nkeys.f3           = 114 + 'c';       // Ctrl+F3\nkeys.f4           = 115 + 'c';       // Ctrl+F4\nkeys.refresh      = 116 + 'c';       // Ctrl+F5\nkeys.frame        = 117 + 'c';       // Ctrl+F6\nkeys.phone        = 119 + 'c';       // Ctrl+F8\nkeys.set          = 120 + 'c';       // Ctrl+F9\nkeys.tv           = 121 + 'c';       // Ctrl+F10\nkeys.menu         = 122 + 'c';       // Ctrl+F11\nkeys.app          = 123 + 'c';       // Ctrl+F12\nkeys.rewind       = 66  + 'a';       // Alt+B\nkeys.forward      = 70  + 'a';       // Alt+F\nkeys.audio        = 71  + 'a';       // Alt+G\nkeys.standby      = 74  + 'a';       // Alt+J\nkeys.keyboard     = 76  + 'a';       // Alt+L\nkeys.usbMounted   = 80  + 'a';       // Alt+P\nkeys.usbUnmounted = 81  + 'a';       // Alt+Q\nkeys.playPause    = 82  + 'a';       // Alt+R\nkeys.play         = -1;              // should be redefined on some platforms\nkeys.pause        = -1;              // should be redefined on some platforms\nkeys.stop         = 83  + 'a';       // Alt+S\nkeys.power        = 85  + 'a';       // Alt+U\nkeys.record       = 87  + 'a';       // Alt+W\nkeys.info         = 89  + 'a';       // Alt+Y\nkeys.mute         = 192 + 'a';\nkeys.digit0       = 48;\nkeys.digit1       = 49;\nkeys.digit2       = 50;\nkeys.digit3       = 51;\nkeys.digit4       = 52;\nkeys.digit5       = 53;\nkeys.digit6       = 54;\nkeys.digit7       = 55;\nkeys.digit8       = 56;\nkeys.digit9       = 57;\n\n\n// public\nmodule.exports = keys;\n\n// public\n// module.exports = {\n//     getCode: function ( event ) {\n//         var code = event.keyCode;\n//\n//         // apply key modifiers\n//         if ( event.shiftKey ) { code += 1000; }\n//         if ( event.altKey )   { code += 2000; }\n//\n//         return code;\n//     },\n//\n//     codes: {\n//         back:         8,    // Backspace\n//         channelPrev:  1009, // Shift+Tab\n//         channelNext:  9,    // Tab\n//         ok:           13,   // Enter\n//         exit:         27,   // Esc\n//         pageUp:       33,\n//         pageDown:     34,\n//         end:          35,\n//         home:         36,\n//         left:         37,\n//         up:           38,\n//         right:        39,\n//         down:         40,\n//         'delete':     46,\n//         volumeUp:     107,  // NUMPAD +\n//         volumeDown:   109,  // NUMPAD -\n//         f1:           112,  // F1\n//         f2:           113,  // F2\n//         f3:           114,  // F3\n//         f4:           115,  // F4\n//         refresh:      116,  // F5\n//         frame:        117,  // F6\n//         phone:        119,  // F8\n//         set:          120,  // F9\n//         tv:           121,  // F10\n//         menu:         122,  // F11\n//         app:          123,  // F12\n//         rewind:       2066, // Alt+B\n//         forward:      2070, // Alt+F\n//         audio:        2071, // Alt+G\n//         standby:      2074, // Alt+J\n//         keyboard:     2076, // Alt+L\n//         usbMounted:   2080, // Alt+P\n//         usbUnmounted: 2081, // Alt+Q\n//         playPause:    2082, // Alt+R\n//         stop:         2083, // Alt+S\n//         power:        2085, // Alt+U\n//         record:       2087, // Alt+W\n//         info:         2089, // Alt+Y\n//         mute:         2192\n//     }\n// };\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component');\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar app = require('./lib/main');\n\n\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    parse   = require('cjs-query').parse,\n    app     = new Emitter();\n\n\n/**\n * Make the given inactive/hidden page active/visible.\n * Pass some data to the page and trigger the corresponding event.\n *\n * @param {Page} page item to show\n * @param {*} [data] data to send to page\n *\n * @return {boolean} operation status\n */\nfunction showPage ( page, data ) {\n    // page available and can be hidden\n    if ( page && !page.active ) {\n        // apply visibility\n        page.$node.classList.add('active');\n        page.active = true;\n        app.activePage = page;\n\n        debug.info('show component ' + page.name + '#' + page.id, null, {\n            tags: ['show', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' show', 'green');\n\n        // there are some listeners\n        if ( page.events['show'] ) {\n            // notify listeners\n            page.emit('show', {data: data});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n/**\n * Make the given active/visible page inactive/hidden and trigger the corresponding event.\n *\n * @param {Page} page item to hide\n *\n * @return {boolean} operation status\n */\nfunction hidePage ( page ) {\n    // page available and can be hidden\n    if ( page && page.active ) {\n        // apply visibility\n        page.$node.classList.remove('active');\n        page.active  = false;\n        app.activePage = null;\n\n        debug.info('hide component ' + page.name + '#' + page.id, null, {\n            tags: ['hide', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' hide', 'grey');\n\n        // there are some listeners\n        if ( page.events['hide'] ) {\n            // notify listeners\n            page.emit('hide');\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n// url request params\napp.query = parse(document.location.search.substring(1));\n\n\n// global application configuration\n// in config.js file in js root\napp.config = require('app:config');\n\n\n// the only visible page\napp.activePage = null;\n\n\n/**\n * Browse to a given page.\n * Do nothing if the link is invalid. Otherwise hide the current, show new and update the \"previous\" link.\n *\n * @param {Page} pageTo instance of the page to show\n * @param {*} [data] options to pass to the page on show\n *\n * @return {boolean} operation status\n */\napp.route = function ( pageTo, data ) {\n    var pageFrom = app.activePage;\n\n    if ( DEVELOP ) {\n        //if ( router.pages.length > 0 ) {\n        if ( !pageTo || typeof pageTo !== 'object' ) {\n            throw new Error(__filename + ': wrong pageTo type');\n        }\n        if ( !('active' in pageTo) ) {\n            throw new Error(__filename + ': missing field \"active\" in pageTo');\n        }\n        //}\n    }\n\n    // valid not already active page\n    if ( pageTo && !pageTo.active ) {\n        //debug.log('router.navigate: ' + pageTo.id, pageTo === pageFrom ? 'grey' : 'green');\n        debug.info('app route: ' + pageTo.name + '#' + pageTo.id, null, {tags: ['route', pageTo.name, pageTo.id]});\n\n        // update url\n        //location.hash = this.stringify(name, data);\n\n        // apply visibility\n        hidePage(app.activePage);\n        showPage(pageTo, data);\n\n        // there are some listeners\n        if ( this.events['route'] ) {\n            // notify listeners\n            this.emit('route', {from: pageFrom, to: pageTo});\n        }\n\n        // store\n        //this.history.push(pageTo);\n\n        return true;\n    }\n\n    //debug.warn('invalid page to route: ' + pageTo.id, null, {tags: ['route', 'page', pageTo.id]});\n    console.warn('invalid page to route: ' + pageTo.id);\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    Emitter = require('cjs-emitter'),\n    counter = 0;\n\n\n/**\n * Base component implementation.\n *\n * Visual element that can handle sub-components.\n * Each component has a DOM element container $node with a set of classes:\n * \"component\" and some specific component class names depending on the hierarchy, for example \"page\".\n * Each component has a unique ID given either from $node.id or from data.id. If not given will generate automatically.\n *\n * @constructor\n * @extends Emitter\n *\n * @param {Object} [config={}] init parameters\n * @param {Element} [config.id] component unique identifier (generated if not set)\n * @param {string} [config.className] space-separated list of classes for \"className\" property of this.$node\n * @param {Element} [config.$node] DOM element/fragment to be a component outer container\n * @param {Element} [config.$body] DOM element/fragment to be a component inner container (by default is the same as $node)\n * @param {Component} [config.parent] link to the parent component which has this component as a child\n * @param {Array.<Component>} [config.children=[]] list of components in this component\n * @param {Object.<string, function>} [config.events={}] list of event callbacks\n * @param {boolean} [config.visible=true] component initial visibility state flag\n * @param {boolean} [config.focusable=true] component can accept focus or not\n * @param {boolean} [config.propagate=false] allow to emit events to the parent component\n *\n * @fires module:stb/component~Component#click\n *\n * @example\n * var component = new Component({\n *     $node: document.getElementById(id),\n *     className: 'bootstrap responsive',\n *     events: {\n *         click: function () { ... }\n *     }\n * });\n * component.add( ... );\n * component.focus();\n */\nfunction Component ( config ) {\n    // current execution context\n    var self = this,\n        name;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.id && typeof config.id !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.id');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$node && !(config.$node instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$node type');\n        }\n        if ( config.$body && !(config.$body instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$body type');\n        }\n        if ( config.parent && !(config.parent instanceof Component) ) {\n            throw new Error(__filename + ': wrong config.parent type');\n        }\n        if ( config.children && !Array.isArray(config.children) ) {\n            throw new Error(__filename + ': wrong config.children type');\n        }\n    }\n\n    /**\n     * Component visibility state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.visible = true;\n\n    /**\n     * Component can accept focus or not.\n     *\n     * @type {boolean}\n     */\n    this.focusable = true;\n\n    /**\n     * DOM outer handle.\n     *\n     * @type {Element}\n     */\n    this.$node = null;\n\n    /**\n     * DOM inner handle.\n     * In simple cases is the same as $node.\n     *\n     * @type {Element}\n     */\n    this.$body = null;\n\n    /**\n     * Link to the parent component which has this component as a child.\n     *\n     * @type {Component}\n     */\n    this.parent = null;\n\n    /**\n     * List of all children components.\n     *\n     * @type {Component[]}\n     */\n    this.children = [];\n\n    /**\n     * allow to emit events to the parent component\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.propagate = !!config.propagate;\n\n    // parent constructor call\n    Emitter.call(this);\n\n    // outer handle - empty div in case nothing is given\n    this.$node = config.$node || document.createElement('div');\n\n    // inner handle - the same as outer handler in case nothing is given\n    this.$body = config.$body || this.$node;\n\n    // set CSS class names\n    //this.$node.className += ' component ' + (config.className || '');\n    // previous approach is not good as it mess with components hierarchy\n    this.$node.className = this.name + ' ' + (config.className || '');\n\n    // apply component id if given, generate otherwise\n    this.id = config.id || this.$node.id || 'cid' + counter++;\n\n    // apply hierarchy\n    if ( config.parent ) {\n        // add to parent component\n        config.parent.add(this);\n    }\n\n    // apply given visibility\n    if ( config.visible === false ) {\n        // default state is visible\n        this.hide();\n    }\n\n    // apply focus handling method\n    if ( config.focusable === false ) {\n        // can't accept focus\n        this.focusable = false;\n    }\n\n    // a descendant defined own events\n    if ( this.defaultEvents ) {\n        // sanitize\n        config.events = config.events || {};\n\n        if ( DEVELOP ) {\n            if ( typeof config.events !== 'object' ) {\n                throw new Error(__filename + ': wrong config.events type');\n            }\n            if ( typeof this.defaultEvents !== 'object' ) {\n                throw new Error(__filename + ': wrong this.defaultEvents type');\n            }\n        }\n\n        for ( name in this.defaultEvents ) {\n            // overwrite default events with user-defined\n            config.events[name] = config.events[name] || this.defaultEvents[name];\n        }\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( eventName ) {\n            self.addListener(eventName, config.events[eventName]);\n        });\n    }\n\n    // apply the given children components\n    if ( config.children ) {\n        // apply\n        this.add.apply(this, config.children);\n    }\n\n    // component activation by mouse\n    this.$node.addEventListener('click', function ( event ) {\n        // left mouse button\n        //if ( event.button === 0 ) {\n        // activate if possible\n        self.focus();\n\n        // there are some listeners\n        if ( self.events['click'] ) {\n            /**\n             * Mouse click event.\n             *\n             * @event module:stb/component~Component#click\n             *\n             * @type {Object}\n             * @property {Event} event click event data\n             */\n            self.emit('click', event);\n        }\n        //}\n\n        if ( DEVELOP ) {\n            // middle mouse button\n            if ( event.button === 1 ) {\n                //debug.inspect(self, 0);\n                debug.info('\"window.link\" or \"' + self.id + '.component\"', 'this component is now available in global scope');\n                window.link = self;\n                self.$node.classList.toggle('wired');\n            }\n        }\n\n        event.stopPropagation();\n    });\n\n    if ( DEVELOP ) {\n        // expose inner ID to global scope\n        window[self.id] = self.$node;\n\n        // expose a link\n        this.$node.component = this.$body.component = this;\n        this.$node.title = this.name + '#' + this.id + ' (outer)';\n        this.$body.title = this.name + '#' + this.id + ' (inner)';\n    }\n\n    debug.info('create component ' + this.name + '#' + this.id, null, {\n        tags: ['create', 'component', this.name, this.id]\n    });\n}\n\n\n// inheritance\nComponent.prototype = Object.create(Emitter.prototype);\nComponent.prototype.constructor = Component;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nComponent.prototype.defaultEvents = null;\n\n\n/**\n * Add a new component as a child.\n *\n * @param {...Component} [child] variable number of elements to append\n *\n * @files Component#add\n *\n * @example\n * panel.add(\n *     new Button( ... ),\n *     new Button( ... )\n * );\n */\nComponent.prototype.add = function ( child ) {\n    var index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        child = arguments[index];\n\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        // apply\n        this.children.push(child);\n        child.parent = this;\n\n        // correct DOM parent/child connection if necessary\n        if ( child.$node && child.$node.parentNode === null ) {\n            this.$body.appendChild(child.$node);\n        }\n\n        debug.info('add component ' + child.name + '#' + child.id + ' to ' + this.name + '#' + this.id, null, {\n            tags: ['add', 'component', this.name, this.id, child.name, child.id]\n        });\n\n        // there are some listeners\n        if ( this.events['add'] ) {\n            /**\n             * A child component is added.\n             *\n             * @event module:stb/component~Component#add\n             *\n             * @type {Object}\n             * @property {Component} item new component added\n             */\n            this.emit('add', {item: child});\n        }\n\n        //debug.log('component ' + this.name + '#' + this.id + ' new child: ' + child.name + '#' + child.id);\n    }\n};\n\n\n/* @todo: consider activation in future */\n///**\n// * Insert component into the specific position.\n// *\n// * @param {Component} child component instance to insert\n// * @param {number} index insertion position\n// */\n//Component.prototype.insert = function ( child, index ) {\n//    var prevIndex = this.children.indexOf(child);\n//\n//    if ( DEVELOP ) {\n//        if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n//        if ( !(child instanceof Component) ) { throw new Error(__filename + ': wrong child type'); }\n//    }\n//\n//    if ( prevIndex !== -1 ) {\n//        this.children.splice(prevIndex, 1);\n//        this.$body.removeChild(child.$node);\n//    }\n//\n//    if ( index === this.children.length ) {\n//        this.$body.appendChild(child.$node);\n//    } else {\n//        this.$body.insertBefore(child.$node, this.$body.children[index]);\n//    }\n//    this.children.splice(index, 0, child);\n//\n//    if ( !child.parent ) {\n//        child.parent = this;\n//    }\n//};\n\n\n/**\n * Delete this component and clear all associated events.\n *\n * @fires module:stb/component~Component#remove\n */\nComponent.prototype.remove = function () {\n    // really inserted somewhere\n    if ( this.parent ) {\n        if ( DEVELOP ) {\n            if ( !(this.parent instanceof Component) ) {\n                throw new Error(__filename + ': wrong this.parent type');\n            }\n        }\n\n        // active at the moment\n        if ( app.activePage.activeComponent === this ) {\n            this.blur();\n            this.parent.focus();\n        }\n        this.parent.children.splice(this.parent.children.indexOf(this), 1);\n    }\n\n    // remove all children\n    this.children.forEach(function ( child ) {\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        child.remove();\n    });\n\n    this.$node.parentNode.removeChild(this.$node);\n\n    // there are some listeners\n    if ( this.events['remove'] ) {\n        /**\n         * Delete this component.\n         *\n         * @event module:stb/component~Component#remove\n         */\n        this.emit('remove');\n    }\n\n    // remove all listeners\n    this.events = {};\n\n    //debug.log('component ' + this.name + '#' + this.id + ' remove', 'red');\n    debug.info('remove component ' + this.name + '#' + this.id, null, {\n        tags: ['remove', 'component', this.name, this.id]\n    });\n};\n\n\n/**\n * Activate the component.\n * Notify the owner-page and apply CSS class.\n *\n * @param {Object} [data] custom data which passed into handlers\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#focus\n */\nComponent.prototype.focus = function ( data ) {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // this is a visual component on a page\n    // not already focused and can accept focus\n    if ( this.focusable && this !== activeItem ) {\n        // notify the current active component\n        if ( activeItem ) { activeItem.blur(); }\n\n        /* eslint consistent-this: 0 */\n\n        // apply\n        activePage.activeComponent = activeItem = this;\n        activeItem.$node.classList.add('focus');\n\n        //debug.log('component ' + this.name + '#' + this.id + ' focus');\n        debug.info('focus component ' + this.name + '#' + this.id, null, {\n            tags: ['focus', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( activeItem.events['focus'] ) {\n            /**\n             * Make this component focused.\n             *\n             * @event module:stb/component~Component#focus\n             */\n            activeItem.emit('focus', data);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Remove focus.\n * Change page.activeComponent and notify subscribers.\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#blur\n */\nComponent.prototype.blur = function () {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // apply visuals anyway\n    this.$node.classList.remove('focus');\n\n    // this is the active component\n    if ( this === activeItem ) {\n        activePage.activeComponent = null;\n\n        //debug.log('component ' + this.name + '#' + this.id + ' blur', 'grey');\n        debug.info('blur component ' + this.name + '#' + this.id, null, {\n            tags: ['blur', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['blur'] ) {\n            /**\n             * Remove focus from this component.\n             *\n             * @event module:stb/component~Component#blur\n             */\n            this.emit('blur');\n        }\n\n        return true;\n    }\n\n    debug.warn('component ' + this.name + '#' + this.id + ' attempt to blur without link to a page', null, {\n        tags: ['blur', 'component', this.name, this.id]\n    });\n\n    // nothing was done\n    return false;\n};\n\n\n/*function show ( self, data ) {\n    // correct style\n    self.$node.classList.remove('hidden');\n    // flag\n    self.visible = true;\n\n    debug.info('show component ' + self.name + '#' + self.id, null, {\n        tags: ['show', 'component', self.name, self.id]\n    });\n\n    // there are some listeners\n    if ( self.events['show'] ) {\n        /!**\n         * Make the component visible.\n         *\n         * @event module:stb/component~Component#show\n         *!/\n        self.emit('show', data);\n    }\n}*/\n\n/**\n * Make the component visible and notify subscribers.\n *\n * @param {Object} [data] custom data which passed into handlers\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#show\n */\nComponent.prototype.show = function ( data, callback ) {\n    //var self = this;\n\n    // is it hidden\n    if ( !this.visible ) {\n        /*if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(function () {\n                show(self, data);\n                callback();\n            });\n        } else {\n            // sync call\n            show(this, data);\n        }*/\n\n        // correct style\n        this.$node.classList.remove('hidden');\n        // flag\n        this.visible = true;\n\n        debug.info('show component ' + this.name + '#' + this.id, null, {\n            tags: ['show', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['show'] ) {\n            /**\n             * Make the component visible.\n             *\n             * @event module:stb/component~Component#show\n             */\n            this.emit('show', data);\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Make the component hidden and notify subscribers.\n *\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#hide\n */\nComponent.prototype.hide = function ( callback ) {\n    // is it visible\n    if ( this.visible ) {\n        // correct style\n        this.$node.classList.add('hidden');\n        // flag\n        this.visible = false;\n\n        debug.info('hide component ' + this.name + '#' + this.id, null, {\n            tags: ['hide', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['hide'] ) {\n            /**\n             * Make the component hidden.\n             *\n             * @event module:stb/component~Component#hide\n             */\n            this.emit('hide');\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = Component;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-page');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-page';\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n/**\n * Magsdk panel set implementation\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {Array} [config.panels] array of panels to use\n * @param {Array} [config.focusIndex=0] focus panel index\n * @constructor\n * @extends Component\n */\nfunction PanelSet ( config ) {\n    var self = this,\n        index;\n\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.panels && !Array.isArray(config.panels) || !config.panels.length ) {\n            throw new Error(__filename + ': wrong config.panels type');\n        }\n    }\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'panelSet ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    this.panels = config.panels;\n\n    /**\n     * Index of current active panel\n     *\n     * @type {number}\n     */\n    this.focusIndex = 0;\n\n    // set special panels classes\n    if ( config.panels && !config.panels[0].main ) {\n        config.panels[0].$node.classList.add('left');\n        // small resolution special class\n        config.panels[0].$node.classList.add('expand');\n    }\n\n    if (  config.panels && config.panels[1] && config.panels[1].main ) {\n        // small resolution special class\n        config.panels[1].$node.classList.add('position-right');\n    }\n\n    if ( config.panels && config.panels[2] && config.panels[1].main ) {\n        config.panels[2].$node.classList.add('right');\n    }\n\n    // add panels\n    if ( config.panels ) {\n        this.add.apply(this, config.panels);\n    }\n\n    // panel keydown handler to set focus panel\n    function keydownHandler ( event ) {\n        switch ( event.code ) {\n            case keys.left:\n                if ( self.focusIndex > 0 ) {\n                    self.panels[self.focusIndex - 1].focus();\n                }\n                break;\n            case keys.right:\n                if ( self.focusIndex < self.panels.length - 1 ) {\n                    self.panels[self.focusIndex + 1].focus();\n                }\n                break;\n        }\n    }\n\n    // add special listener\n    for ( index = 0; index < this.panels.length; index++ ) {\n        this.panels[index].addListeners({\n            keydown: keydownHandler\n        });\n        // set panels indexes\n        this.panels[index].index = index;\n    }\n\n    /*if ( config.focusIndex && config.focusIndex < this.panels.length ) {\n     this.panels[config.focusIndex].focus();\n     } else {\n     if ( config.panels.length > 1 ) {\n     this.panels[1].focus();\n     } else {\n     this.panels[0].focus();\n     }\n     }*/\n}\n\nPanelSet.prototype = Object.create(Component.prototype);\nPanelSet.prototype.constructor = PanelSet;\n\n// set component name\nPanelSet.prototype.name = 'mag-component-panel-set';\n\n\n/**\n *\n */\nPanelSet.prototype.focus = function () {\n    Component.prototype.focus.call(this);\n    this.panels[this.focusIndex].focus();\n};\n\n/**\n *\n */\nPanelSet.prototype.blur = function () {\n    this.panels[this.focusIndex].blur();\n};\n\nmodule.exports = PanelSet;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    Layout = require('mag-component-layout');\n\n/**\n * Extended panel implementation\n\n * @constructor\n * @extends Component\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {boolean} [config.main=false] set panel as main\n * @param {boolean} [config.size=1] size of panel width\n *\n * @example\n *\n * main = new Panel({\n *            size: 1,\n *             title: ['Left Panel', {className: 'info'}],\n *             main:true,\n *             children:[\n *                 new List({\n *                     data:['1 bla', '2 bro', '3 car', '4 hoho', 'Search'],\n *                     size:5\n *                 })\n *             ]\n *         });\n */\nfunction Panel ( config ) {\n    var $overlay;\n\n    config = config || {};\n\n    /**\n     * Size of panel\n     *\n     * @type {number}\n     */\n    this.size = 1;\n\n    /**\n     * Set panel as main\n     *\n     * @type {boolean}\n     */\n    this.main = false;\n\n    /**\n     * Index in panel set\n     *\n     * @type {number}\n     */\n    this.index = 0;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    // set default className if classList property empty or undefined\n    //config.className = 'Panel ' + (config.className || '');\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    //this.$node.classList.add('theme-main');\n    //this.$node.classList.add('theme-panel');\n\n    // add special class to set component size\n    if ( config.size ) {\n        this.size = config.size;\n        this.$node.classList.add('size' + config.size);\n    }\n\n    // add special class to set main panel\n    if ( config.main ) {\n        this.main = true;\n        this.$node.classList.add('main');\n    }\n\n    // create elements to set as component shadow\n    this.$shadow = {\n        left: document.createElement('div'),\n        right: document.createElement('div')\n    };\n\n    this.$shadow.left.className = 'shadow left';\n    this.$node.appendChild(this.$shadow.left);\n\n    this.$shadow.right.className = 'shadow right';\n    this.$node.appendChild(this.$shadow.right);\n\n    // add title to panel\n    if ( config.title ) {\n        if ( !Array.isArray(config.title) ) {\n            config.title = [config.title];\n        }\n        this.$title = new Layout({\n            //className: 'title theme-header theme-title',\n            className: 'title',\n            data: config.title,\n            focusable: false\n        });\n        this.$node.appendChild(this.$title.$node);\n    }\n\n    this.$node.appendChild(this.$body);\n\n    $overlay = document.createElement('div');\n    $overlay.className = 'overlay';\n    this.$node.appendChild($overlay);\n}\n\n// inheritance\nPanel.prototype = Object.create(Component.prototype);\nPanel.prototype.constructor = Panel;\n\n// set component name\nPanel.prototype.name = 'mag-component-panel';\n\n\n/**\n * Default events\n *\n * @type {{focus: Function}} try to focus first child component if it present\n */\nPanel.prototype.defaultEvents = {\n    focus: function () {\n        if ( this.children.length ) {\n            this.children[0].focus();\n        }\n    }\n};\n\n\n/**\n * Redefine default component focus to set panel as active even when give focus to children components\n */\nPanel.prototype.focus = function () {\n    if ( this.focusable ) {\n        this.parent.panels[this.parent.focusIndex].$node.classList.remove('active');\n        this.parent.panels[this.parent.focusIndex].$node.classList.remove('top');\n        Component.prototype.focus.call(this);\n        this.parent.focusIndex = this.index;\n        this.$node.classList.add('active');\n        this.$node.classList.add('top');\n        if ( this.index === 0 && this.parent.panels[1] && this.parent.panels[1].main ) {\n            this.parent.panels[1].$node.classList.remove('position-left');\n            this.parent.panels[1].$node.classList.add('position-right');\n            if ( this.parent.panels[2] ) {\n                this.parent.panels[2].$node.classList.remove('expand');\n            }\n            this.$node.classList.add('expand');\n\n        } else if ( this.index === 2 && this.parent.panels[1].main ) {\n            this.parent.panels[1].$node.classList.remove('position-right');\n            this.parent.panels[1].$node.classList.add('position-left');\n            this.parent.panels[0].$node.classList.remove('expand');\n            this.$node.classList.add('expand');\n        }\n    }\n};\n\n/**\n * Blur panel\n */\nPanel.prototype.blur = function () {\n    this.parent.panels[this.parent.focusIndex].$node.classList.remove('active');\n    Component.prototype.blur.call(this);\n};\n\n\n// public\nmodule.exports = Panel;\n","/**\n * @license The MIT License (MIT)\n * @author Yaroslav Surilov <y.surilov@infomir.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component');\n\n\n/**\n * Base flicker implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {function} [config.render] custom render function\n * @param {number} [config.interval=1000] interval for flicking\n * @param {string} [config.value] value to set in flickering container\n */\nfunction Flicker ( config ) {\n    var interval;\n\n    // sanitize\n    config = config || {};\n\n    this.timerId = 0;\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( !config.value && !config.render ) {\n            throw new Error(__filename + ': nothing to render (absent value and render method)');\n        }\n        if ( config.render && typeof config.render !== 'function' ) {\n            throw new Error(__filename + ': wrong config.render type');\n        }\n    }\n\n    if ( config.render ) {\n        this.render = config.render;\n    }\n\n    config.focusable = false;\n\n    config.visible = config.visible || true;\n\n    this.value = config.value;\n\n    // initial state\n    this.active = false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'flicker ' + (config.className || '');\n\n    Object.defineProperty(this, 'interval', {\n        set: function ( value ) {\n            if ( DEVELOP ) {\n                // interval must be 0 or positive integer\n                if ( !(typeof value === 'number' && isFinite(value) && !(value % 1) && value >= 0) ) {\n                    throw new Error(__filename + ': wrong interval value');\n                }\n            }\n\n            interval = value;\n        },\n        get: function () {\n            return interval;\n        }\n    });\n\n    this.interval = config.interval || 1000;\n\n    // parent constructor call\n    Component.call(this, config);\n}\n\n\n// inheritance\nFlicker.prototype = Object.create(Component.prototype);\nFlicker.prototype.constructor = Flicker;\n\n// set component name\nFlicker.prototype.name = 'spa-component-flicker';\n\n\n/**\n * Start flickering.\n */\nFlicker.prototype.start = function () {\n    var self = this;\n\n    if ( !this.active ) {\n        this.active = true;\n        // starts immediately\n        (function run () {\n            self.render(self.$node, self.value);\n            self.timerId = setTimeout(run, self.interval);\n        })();\n    }\n};\n\n\n/**\n * Stop flickering.\n */\nFlicker.prototype.stop = function () {\n    if ( this.active ) {\n        this.active = false;\n        clearTimeout(this.timerId);\n    }\n};\n\n\n/**\n * Fill the given item with data.\n *\n * @param {Element} $item item DOM link\n * @param {string} value associated with this item data\n */\nFlicker.prototype.defaultRender = function ( $item, value ) {\n    $item.innerText = value;\n};\n\n\n/**\n * Can be redefined to provide custom rendering.\n *\n * @type {function}\n */\nFlicker.prototype.render = Flicker.prototype.defaultRender;\n\n\n// public\nmodule.exports = Flicker;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar List = require('mag-component-list'),\n    Layout = require('mag-component-layout');\n\n/**\n *  Layout list contains array of layout components\n *\n * @constructor\n * @extends List\n *\n * @param {Object} config object\n * @param {Element} [config.noData=''] element or string to display if set empty data\n *\n * @example\n * var CheckList = require('../stb/ui/layout.list'),\n *     list = new LayoutList({\n *         propagate: true,\n *         size: 7,\n *         focusIndex: 0,\n *         noData: 'No channels'\n *         data: [\n *                 {\n *                     items: [\n *                         {\n *                             className: 'star'\n *                         },\n *                         'Some text'\n *                     ],\n *                     click: function () {\n *                         // do something\n *                     }\n *                 },\n *                 {\n *                     items: [\n *                         'Hello world',\n *                         {\n *                             value: 'hi',\n *                             className: 'status'\n *                         }\n *                     ],\n *                     value:{\n *                         uri: 'http://55.55.55.55/some'\n *                     },\n *                     click: someHandler\n *                 },\n *                 {\n *                     items: [\n *                         {\n *                             className: 'big',\n *                             value: ' Some'\n *                         },\n *                         {\n *                             value: new Input()\n *                         }\n *                     ]\n *                 },\n *                 {\n *                     items: [\n *                         new Button({value: 'Ok'}),\n *                         new Button({value: 'Cancel'}),\n *                         new Button({value: 'Exit'})\n *                     ]\n *                 }\n *             ]\n * });\n */\nfunction LayoutList ( config ) {\n    var self = this;\n\n    config = config || {};\n\n    /**\n     * Elements handlers\n     */\n    this.handlers = {};\n\n    /**\n     * No data placeholder\n     *\n     * @type {Element}\n     */\n    this.$noData = null;\n\n    //config.className = 'layoutList ' + (config.className || '');\n\n    config.propagate = config.propagate === undefined ? true : config.propagate;\n\n    /**\n     * Set data layout to be fixed to cache HTML elements\n     *\n     * @type {boolean|*}\n     */\n    this.fixedData = config.fixedData || false;\n\n    //config.$body = document.createElement('div');\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    this.$noData = document.createElement('div');\n    this.$noData.className = 'noData hidden';\n\n    List.call(this, config);\n\n    this.$node.appendChild(this.$body);\n    this.$node.appendChild(this.$noData);\n\n    // add handler to focus inner layout\n    this.addListener('click:item', function ( event ) {\n        // focus inner layout of item\n        if ( event.$item.layout.children.length && !event.inner ) {\n            event.$item.layout.children[event.$item.layout.focusIndex].focus();\n        }\n\n        // only focus item if we click mouse\n        if ( event.inner ) {\n            self.focus();\n            self.focusItem(event.$item);\n        }\n        // do click callback if it present\n        if ( self.handlers[event.$item.index] ) {\n            self.handlers[event.$item.index](event.$item);\n        }\n    });\n}\n\n\nLayoutList.prototype = Object.create(List.prototype);\nLayoutList.prototype.constructor = LayoutList;\n\n// set component name\nLayoutList.prototype.name = 'mag-component-layout-list';\n\n\n/*eslint id-length:0*/\n/**\n * Default render function\n *\n * @param {Element} $item in list\n * @param {Object} config to render layout element\n */\nLayoutList.prototype.renderItemDefault = function ( $item, config ) {\n    var layout, layoutConfig,\n        currentNode,\n        currentData,\n        i;\n\n    if ( $item.ready && this.fixedData ) {\n        for ( i = 0; i < config.items.length; i++ ) {\n            currentData = config.items[i];\n            if ( typeof currentData.value === 'string' || currentData.value === undefined ) {\n                currentNode = $item.layout.$node.childNodes[i];\n                currentNode.innerText = currentData.value || '';\n                currentNode.className = currentData.className || '';\n            }\n        }\n    } else {\n        // clear inner content\n        while ( $item.firstChild ) {\n            $item.removeChild($item.firstChild);\n        }\n\n        layoutConfig = {\n            focusable: false,\n            data: config.items\n        };\n\n        if ( config.className ) {\n            layoutConfig.className = config.className;\n        }\n\n        layout = new Layout(layoutConfig);\n\n        $item.appendChild(layout.$node);\n        $item.layout = layout;\n        layout.parent = this;\n        layout.$parentItem = $item;\n\n        // focus layoutList if click on layout\n        layout.addListener('click', function () {\n            // add inner property to set that event comes from inner component\n            layout.parent.emit('click:item', {$item: $item, inner: true});\n        });\n\n        if ( config.click ) {\n            this.handlers[$item.index] = config.click;\n        }\n        // item is rendered\n        $item.ready = true;\n    }\n    $item.value = config.value || {};\n};\n\n\nLayoutList.prototype.setData = function ( config ) {\n    List.prototype.setData.call(this, config);\n\n    if ( config.data && config.data.length ) {\n        this.$noData.classList.add('hidden');\n    } else {\n        this.$noData.classList.remove('hidden');\n    }\n};\n\n\nLayoutList.prototype.init = function ( config ) {\n    var $wrap;\n\n    List.prototype.init.call(this, config);\n    if ( config.noData ) {\n        if ( DEVELOP ) {\n            if ( typeof config.noData !== 'string' && !(config.noData instanceof Element) ) {\n                throw new Error(__filename + ': wrong config.$noData type');\n            }\n        }\n\n        this.$noData.innerHTML = '';\n        if ( config.noData instanceof Element ) {\n            this.$noData.appendChild(config.noData);\n        } else if ( typeof config.noData === 'string' ) {\n            $wrap = document.createElement('div');\n            $wrap.innerText = config.noData;\n            this.$noData.appendChild($wrap);\n        }\n    }\n\n    if ( config.data && config.data.length ) {\n        this.$noData.classList.add('hidden');\n    } else {\n        this.$noData.classList.remove('hidden');\n    }\n};\n\nLayoutList.prototype.renderItem = LayoutList.prototype.renderItemDefault;\n\n\nmodule.exports = LayoutList;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-button');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-button';\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-scrollbar');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-scrollbar';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Base Events Emitter implementation.\n *\n * @see http://nodejs.org/api/events.html\n * @constructor\n *\n * @example\n * var emitter = new Emitter();\n */\nfunction Emitter () {\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // if ( DEVELOP ) {\n    //     if ( typeof this !== 'object' ) { throw new Error(__filename + ': must be constructed via new'); }\n    // }\n\n    /**\n     * Inner hash table for event names and linked callbacks.\n     * Manual editing should be avoided.\n     *\n     * @member {Object.<string, function[]>}\n     *\n     * @example\n     * {\n     *     click: [\n     *         function click1 () { ... },\n     *         function click2 () { ... }\n     *     ],\n     *     keydown: [\n     *         function () { ... }\n     *     ]\n     * }\n     **/\n    this.events = {};\n}\n\n\nEmitter.prototype = {\n    /**\n     * Bind an event to the given callback function.\n     * The same callback function can be added multiple times for the same event name.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.addListener('click', function ( data ) { ... });\n     * // one more click handler\n     * emitter.addListener('click', function ( data ) { ... });\n     */\n    addListener: function ( name, callback ) {\n        console.assert(arguments.length === 2, 'wrong arguments number');\n        console.assert(typeof name === 'string', 'wrong name type');\n        console.assert(name.length > 0, 'empty name');\n        console.assert(typeof callback === 'function', 'callback should be a function');\n\n        // if ( DEVELOP ) {\n        //     if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        //     if ( typeof name !== 'string' || name.length === 0 ) { throw new Error(__filename + ': wrong or empty name'); }\n        //     if ( typeof callback !== 'function' ) { throw new Error(__filename + ': wrong callback type'); }\n        // }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(callback);\n    },\n\n\n    /**\n     * Add a one time listener for the event.\n     * This listener is invoked only the next time the event is fired, after which it is removed.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.once('click', function ( data ) { ... });\n     */\n    once: function ( name, callback ) {\n        // current execution context\n        var self = this;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n        }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(function onceWrapper () {\n            self.removeListener(name, onceWrapper);\n            callback.apply(self, arguments);\n        });\n    },\n\n\n    /**\n     * Apply multiple listeners at once.\n     *\n     * @param {Object} callbacks event names with callbacks\n     *\n     * @example\n     * emitter.addListeners({\n     *     click: function ( data ) {},\n     *     close: function ( data ) {}\n     * });\n     */\n    addListeners: function ( callbacks ) {\n        var name;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof callbacks !== 'object' ) {\n                throw new Error(__filename + ': wrong callbacks type');\n            }\n            if ( Object.keys(callbacks).length === 0 ) {\n                throw new Error(__filename + ': no callbacks given');\n            }\n        }\n\n        for ( name in callbacks ) {\n            if ( callbacks.hasOwnProperty(name) ) {\n                this.addListener(name, callbacks[name]);\n            }\n        }\n    },\n\n\n    /**\n     * Remove all instances of the given callback.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to remove\n     *\n     * @example\n     * emitter.removeListener('click', func1);\n     */\n    removeListener: function ( name, callback ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n            if ( this.events[name] && !Array.isArray(this.events[name]) ) {\n                throw new Error(__filename + ': corrupted inner data');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( this.events[name] ) {\n            // rework the callback list to exclude the given one\n            this.events[name] = this.events[name].filter(function callbacksFilter ( fn ) { return fn !== callback; });\n            // event has no more callbacks so clean it\n            if ( this.events[name].length === 0 ) {\n                // as if there were no listeners at all\n                this.events[name] = undefined;\n            }\n        }\n    },\n\n\n    /**\n     * Remove all callbacks for the given event name.\n     * Without event name clears all events.\n     *\n     * @param {string} [name] event identifier\n     *\n     * @example\n     * emitter.removeAllListeners('click');\n     * emitter.removeAllListeners();\n     *\n     * @deprecated\n     */\n    /*removeAllListeners: function ( name ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 0 && (typeof name !== 'string' || name.length === 0) ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // check input\n        if ( arguments.length === 0 ) {\n            // no arguments so remove everything\n            this.events = {};\n        } else if ( name ) {\n            if ( DEVELOP ) {\n                if ( this.events[name] ) { throw new Error(__filename + ': event is not removed'); }\n            }\n\n            // only name is given so remove all callbacks for the given event\n            // but object structure modification should be avoided\n            this.events[name] = undefined;\n        }\n    },*/\n\n\n    /**\n     * Execute each of the listeners in the given order with the supplied arguments.\n     *\n     * @param {string} name event identifier\n     *\n     * @example\n     * emitter.emit('init');\n     * emitter.emit('click', {src: panel1, dst: panel2});\n     * emitter.emit('load', error, data);\n     *\n     * // it's a good idea to emit event only when there are some listeners\n     * if ( this.events['click'] ) {\n     *     this.emit('click', {event: event});\n     * }\n     */\n    emit: function ( name ) {\n        var event = this.events[name],\n            index;\n\n        if ( DEVELOP ) {\n            if ( arguments.length < 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( event ) {\n            if ( DEVELOP ) {\n                if ( !Array.isArray(event) ) {\n                    throw new Error(__filename + ': wrong event type');\n                }\n            }\n\n            for ( index = 0; index < event.length; index++ ) {\n                if ( DEVELOP ) {\n                    if ( typeof event[index] !== 'function' ) {\n                        throw new Error(__filename + ': wrong event callback type');\n                    }\n                }\n\n                // invoke the callback with parameters\n                event[index].apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n    }\n};\n\n\n// correct constructor name\nEmitter.prototype.constructor = Emitter;\n\n\n// public\nmodule.exports = Emitter;\n","/**\n * Global application configuration.\n * Can store run-time options, API urls, paths, execution flags and so on.\n * Automatically loaded on application initialization and available as app.config.\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    list: {\n        filterStatus: null,\n        filterSearch: '',\n        sort: 0\n    },\n    constants: {\n        sort: {\n            BY_NAME: 0,\n            BY_CATEGORY: 1,\n            BY_DATE: 2\n        }\n    },\n    extensions: {\n        registered: [\n            'mpg',\n            'mpeg',\n            'mkv',\n            'avi',\n            '3gp',\n            'ts',\n            'tspinf',\n            'm4a',\n            'mp3',\n            'mp4',\n            'ac3',\n            'mov',\n            'vob',\n            'wav',\n            'ape',\n            'mts',\n            'm2t',\n            'm2v',\n            'ogg',\n            'oga',\n            'divx',\n            'aiff',\n            'm2ts',\n            'wv',\n            'm2p',\n            'tp',\n            'flv',\n            'tta',\n            'mod',\n            'tod',\n            'asf',\n            'wma',\n            'wmv',\n            'flac',\n            'ape',\n            'cue',\n            'm3u',\n            'm3u8',\n            'jpg',\n            'jpeg',\n            'png',\n            'bmp',\n            'tif',\n            'tiff',\n            'iso',\n            'aac',\n            'txt',\n            'srt',\n            'sub',\n            'ass',\n            'm4v',\n            'tts'\n        ]\n    }\n};\n","/**\n *\n * @author bas.\n */\n\n'use strict';\n\nvar tools = {};\n\ntools = {\n    session: {\n        token: 'Bearer 2173.4591c9d87993c9c3ad60c6018979944c',\n        userId: '2048'\n    },\n    // convert bytes to readable size\n    convert: function ( size ) {\n        if ( (!size && size !== 0) || size < 0 ) { return 'n/a'; }\n        if ( size > (1024 * 1024 * 1024) ) {\n            return (Math.floor(size / 1024 / 1024 / 1024 * 100) / 100) + ' ' + gettext('GB');\n        }\n        if ( size > (1024 * 1024) ) {\n            return (Math.floor(size / 1024 / 1024 * 100) / 100) + ' ' + gettext('MB');\n        }\n        if ( size > (1024) ) {\n            return (Math.floor(size / 1024 * 100) / 100) + ' ' + gettext('KB');\n        }\n\n        return size + ' ' + gettext('B');\n    },\n    // convert time to readable date\n    parseDate: function parseDate ( from ) {\n        var months = [\n                gettext('Jan'),\n                gettext('Feb'),\n                gettext('Mar'),\n                gettext('Apr'),\n                gettext('May'),\n                gettext('Jun'),\n                gettext('Jul'),\n                gettext('Aug'),\n                gettext('Sep'),\n                gettext('Oct'),\n                gettext('Nov'),\n                gettext('Dec')\n            ],\n            day     = from.getDate(),\n            month   = from.getMonth(),\n            minutes = from.getMinutes(),\n            hours   = from.getHours();\n\n        return day + ' ' + months[month] + ' ' + (hours > 9 ? hours : '0' + hours) + ':' + (minutes > 9 ? minutes : '0' + minutes);\n    },\n    dates: {\n        hours: (function () {\n            var arr = [],\n                index;\n\n            for ( index = 0; index <= 23; index++ ) { arr.unshift(index < 10 ? '0' + index : String(index)); }\n\n            return arr;\n        })(),\n        minutes: (function () {\n            var arr = [],\n                index;\n\n            for ( index = 0; index <= 59; index++ ) { arr.unshift(index < 10 ? '0' + index : String(index)); }\n\n            return arr;\n        })(),\n        days: (function () {\n            var arr = [],\n                index;\n\n            for ( index = 1; index <= 31; index++ ) { arr.unshift(index < 10 ? '0' + index : String(index)); }\n\n            return arr;\n        })(),\n        months: (function () {\n            var arr = [],\n                index;\n\n            for ( index = 1; index <= 12; index++ ) { arr.unshift(index < 10 ? '0' + index : String(index)); }\n\n            return arr;\n        })(),\n        years: [String((new Date()).getFullYear()), String((new Date()).getFullYear() + 1)]\n    }\n};\n\n\nmodule.exports = tools;\n","/**\n * HTML elements low-level handling.\n *\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n/* eslint no-unused-vars: 0 */\n\n/**\n * DOM manipulation module\n */\nvar dom = {};\n\n\n/**\n * Create a new HTML element.\n *\n * @param {string} tagName mandatory tag name\n * @param {Object|null} [attrList] element attributes\n * @param {...*} [content] element content (primitive value/values or other nodes)\n * @return {Node|null} HTML element or null on failure\n *\n * @example\n * dom.tag('table');\n * dom.tag('div', {}, 'some text');\n * dom.tag('div', {className:'top'}, dom.tag('span'), dom.tag('br'));\n * dom.tag('link', {rel:'stylesheet', type:'text/css', href:'http://some.url/'});\n */\ndom.tag = function ( tagName, attrList, content ) {\n    var node = null,\n        index, name;\n\n    // minimal param is given\n    if ( tagName ) {\n        // empty element\n        node = document.createElement(tagName);\n\n        // optional attribute list is given\n        if ( attrList && typeof attrList === 'object' ) {\n            for ( name in attrList ) {\n                // extend a new node with the given attributes\n                node[name] = attrList[name];\n            }\n        }\n\n        // content (arguments except the first two)\n        for ( index = 2; index < arguments.length; index++ ) {\n            // some data is given\n            if ( arguments[index] ) {\n                // regular HTML tag or plain data\n                node.appendChild(\n                    typeof arguments[index] === 'object' ? arguments[index] : document.createTextNode(arguments[index])\n                );\n            }\n        }\n\n    }\n\n    return node;\n};\n\n\n/**\n * Create a new DocumentFragment filled with the given non-empty elements if any.\n *\n * @param {...*} [node] fragment content (primitive value/values or other nodes)\n * @return {DocumentFragment} new placeholder\n *\n * @example\n * // gives an empty fragment element\n * dom.fragment();\n * // gives a fragment element with 3 div element inside\n * dom.fragment(dom.tag('div'), div2, div3);\n * // mixed case\n * dom.fragment('some text', 123, div3);\n */\ndom.fragment = function ( node ) {\n    // prepare placeholder\n    var fragment = document.createDocumentFragment(),\n        index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        node = arguments[index];\n        // some data is given\n        if ( node ) {\n            // regular HTML tag or plain data\n            fragment.appendChild(typeof node === 'object' ? node : document.createTextNode(node));\n        }\n    }\n\n    return fragment;\n};\n\n\n/**\n * Add the given non-empty data (HTML element/text or list) to the destination element.\n *\n * @param {Node} tagDst element to receive children\n * @param {...*} [content] element content (primitive value/values or other nodes)\n * @return {Node|null} the destination element - owner of all added data\n *\n * @example\n * // simple text value\n * add(some_div, 'Hello world');\n * // single DOM Element\n * add(some_div, some_other_div);\n * // DOM Element list\n * add(some_div, div1, div2, div3);\n * // mixed case\n * add(some_div, div1, 'hello', 'world');\n */\ndom.add = function ( tagDst, content ) {\n    var index;\n\n    // valid HTML tag as the destination\n    if ( tagDst instanceof Node ) {\n        // append all except the first one\n        for ( index = 1; index < arguments.length; index++ ) {\n            // some data is given\n            if ( arguments[index] ) {\n                // regular HTML tag or plain data\n                tagDst.appendChild(\n                    typeof arguments[index] === 'object' ? arguments[index] : document.createTextNode(arguments[index])\n                );\n            }\n        }\n\n        return tagDst;\n    }\n\n    return null;\n};\n\n\n/**\n * Remove the given elements from the DOM.\n *\n * @param {...Node} [nodes] element to be removed\n * @return {boolean} operation status (true - all given elements removed)\n *\n * @example\n * dom.remove(document.querySelector('div.test'));\n * dom.remove(div1, div2, div3);\n */\ndom.remove = function ( nodes ) {\n    // amount of successfully removed nodes\n    var count = 0,\n        index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        // valid non-empty tag\n        if ( arguments[index] && arguments[index].parentNode ) {\n            if ( arguments[index].parentNode.removeChild(arguments[index]) === arguments[index] ) {\n                count++;\n            }\n        }\n    }\n\n    return arguments.length > 0 && count === arguments.length;\n};\n\n\ndom.clear = function ( node ) {\n    while ( node.lastChild ) {\n        node.removeChild(node.lastChild);\n    }\n};\n\n\n// public\nmodule.exports = dom;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core');\n//    metrics = require('app:metrics'),\n//    linkCSS;\n\n\n// global link\n//app.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\n//app.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\n//app.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n// // set max browser window size\n// window.moveTo(0, 0);\n// window.resizeTo(metrics.width, metrics.height);\n\n// load CSS file base on resolution\n/*linkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = 'css/' + (DEVELOP ? 'develop.' : 'release.') + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);*/\n\n\n// public\nmodule.exports = function ( name ) {\n    var link = document.createElement('link');\n\n    link.rel  = 'stylesheet';\n    link.href = 'css/' + name + '.' + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\n    document.head.appendChild(link);\n};\n","/**\n * Global list of non-printable control key codes.\n *\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    backspace: 8,\n    tab:       9,\n    enter:     13,\n    escape:    27,\n    space:     32,\n    pageUp:    33,\n    pageDown:  34,\n    end:       35,\n    home:      36,\n    left:      37,\n    up:        38,\n    right:     39,\n    down:      40,\n    insert:    45,\n    // not \"delete\" because of old browsers issue\n    del:       46\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n/**\n * Layout component implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array} [config.data] array of items to add to layout\n */\nfunction Layout ( config ) {\n    var self = this;\n\n    // sanitize\n    config = config || {};\n\n    /**\n     * Index of focused child component\n     * @type {number}\n     */\n    this.focusIndex = 0;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && config.className !== undefined && typeof config.className !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    //config.className = 'layout ' + (config.className || '');\n\n    /**\n     * Component data\n     * @type {Array}\n     */\n    this.data = [];\n\n    Component.call(this, config);\n\n    this.init(config);\n\n    // add listener to move focus between children\n    this.addListener('keydown', function ( event ) {\n        switch ( event.code ) {\n            case keys.right:\n                if ( self.children.length && self.focusIndex < self.children.length - 1 ) {\n                    self.children[++self.focusIndex].focus();\n                }\n                break;\n            case keys.left:\n                if ( self.children.length && self.focusIndex > 0 ) {\n                    self.children[--self.focusIndex].focus();\n                }\n                break;\n            case keys.back:\n                // focus parent focused item if parent is layout list\n                if ( self.parent ) {\n                    self.parent.focus();\n                    if ( self.$parentItem ) {\n                        self.parent.focusItem(self.$parentItem);\n                    }\n                }\n                break;\n        }\n    });\n}\n\n\nLayout.prototype = Object.create(Component.prototype);\nLayout.prototype.constructor = Layout;\n\n// set component name\nLayout.prototype.name = 'mag-component-layout';\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var index, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( index = 0; index < data.length; index++ ) {\n        // cell value\n        item = data[index];\n        // plain text\n        if ( typeof item === 'object' ) {\n            // HTML element or component\n            if ( item instanceof Component || item instanceof HTMLElement ) {\n                data[index] = {\n                    value: item,\n                    wrap: false\n                };\n            } else {\n                data[index].wrap = true;\n            }\n        } else {\n            // wrap with defaults\n            data[index] = {\n                value: data[index],\n                wrap: true\n            };\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nLayout.prototype.init = function ( config ) {\n    var self = this,\n        data = normalize(config.data),\n        item, $wrapper, index;\n\n    // clear element if reinit\n    while (this.$node.firstChild) {\n        this.$node.removeChild(this.$node.firstChild);\n    }\n\n    this.data = data;\n\n    /**\n     * @this Component\n     */\n    function componentClickHandler (  ) {\n        self.focusIndex = this.index;\n    }\n\n    for ( index = 0; index < data.length; index++ ) {\n        item = data[index];\n        // plain text\n        if ( typeof item.value === 'string' ) {\n            $wrapper = document.createElement('div');\n            $wrapper.textContent = item.value;\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n        } else if ( item.value instanceof HTMLElement ) {\n            // HTML Element\n\n            // if with wrapper\n            if ( item.wrap ) {\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value);\n                this.$node.appendChild($wrapper);\n            } else {\n                // without wrapper\n                this.$node.appendChild(item.value);\n            }\n        } else if ( item.value instanceof Component ) {\n            // component\n            // force propagate events\n            item.value.propagate = true;\n\n            // set index to current component\n            item.value.index = this.children.length;\n\n            // change layout focus index if click component\n            item.value.addListener('click', componentClickHandler);\n\n            // append component\n            if ( item.wrap ) {\n                // with wrapper\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value.$node);\n                this.$node.appendChild($wrapper);\n                this.children.push(item.value);\n                item.value.parent = this;\n            } else {\n                // without wrapper\n                this.add(item.value);\n            }\n        } else {\n            $wrapper = document.createElement('div');\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n        }\n    }\n};\n\n\nmodule.exports = Layout;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n/* eslint complexity: [error, 37] */\n/* eslint max-lines-per-function: 1 */\n/* eslint no-fallthrough: 1 */\n/* eslint complexity: 1 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n\n/**\n * Mouse click event.\n *\n * @event module:stb/ui/list~List#click:item\n *\n * @type {Object}\n * @property {Element} $item clicked HTML item\n * @property {Event} event click event data\n */\n\n\n/**\n * Base list implementation.\n *\n * Each data item can be either a primitive value or an object with these fields:\n *\n *  Name    | Description\n * ---------|-------------\n *  value   | actual cell value to render\n *  mark    | is it necessary or not to render this cell as marked\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array}    [config.data=[]]     component data to visualize\n * @param {function} [config.render]      method to build each grid cell content\n * @param {function} [config.navigate]    method to move focus according to pressed keys\n * @param {number}   [config.size=5]      amount of visible items on a page\n * @param {number}   [config.viewIndex=0] move view window to this position on init\n * @param {number}   [config.focusIndex]  list item index to make item focused (move view window to this position)\n * @param {boolean}  [config.cycle=true]  allow or not to jump to the opposite side of a list when there is nowhere to go next\n * @param {boolean}  [config.scroll=null] associated ScrollBar component link\n * @param {Object}   [config.provider]    data provider\n *\n * @fires module:stb/ui/list~List#click:item\n */\nfunction List ( config ) {\n    // current execution context\n    //var self = this;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Link to the currently focused DOM element.\n     *\n     * @type {Element}\n     */\n    this.$focusItem = null;\n\n    /**\n     * Position of the visible window to render.\n     *\n     * @type {number}\n     */\n    this.viewIndex = null;\n\n    /**\n     * Component data to visualize.\n     *\n     * @type {Array}\n     */\n    this.data = [];\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Amount of visible items on a page.\n     *\n     * @type {number}\n     */\n    this.size = 5;\n\n    /**\n     * Allow or not to jump to the opposite side of a list when there is nowhere to go next.\n     *\n     * @type {boolean}\n     */\n    this.cycle = false;\n\n    /**\n     * Associated ScrollBar component link.\n     *\n     * @type {ScrollBar}\n     */\n    this.scroll = null;\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    /**\n     * Associated data provider\n     *\n     * @type {Provider}\n     */\n    this.provider = null;\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    //config.className += ' theme-main';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // component setup\n    this.init(config);\n\n    // custom navigation method\n    //if ( config.navigate ) {\n    //    if ( DEVELOP ) {\n    //        if ( typeof config.navigate !== 'function' ) { throw new Error(__filename + ': wrong config.navigate type'); }\n    //    }\n    //    // apply\n    //    this.navigate = config.navigate;\n    //}\n\n    // navigation by keyboard\n    //this.addListener('keydown', this.navigate);\n\n    // navigation by mouse\n    //this.$body.addEventListener('mousewheel', function ( event ) {\n    //    // scrolling by Y axis\n    //    if ( self.type === self.TYPE_VERTICAL && event.wheelDeltaY ) {\n    //        self.move(event.wheelDeltaY > 0 ? 38 : keys.down);\n    //    }\n    //\n    //    // scrolling by X axis\n    //    if ( self.type === self.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n    //        self.move(event.wheelDeltaX > 0 ? 37 : 39);\n    //    }\n    //});\n}\n\n\n// inheritance\nList.prototype = Object.create(Component.prototype);\nList.prototype.constructor = List;\n\n// set component name\nList.prototype.name = 'mag-component-list';\n\nList.prototype.TYPE_VERTICAL   = 1;\nList.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Fill the given item with data.\n *\n * @param {Element} $item item DOM link\n * @param {*} data associated with this item data\n */\nList.prototype.renderItemDefault = function ( $item, data ) {\n    $item.innerText = data.value;\n};\n\n\n/**\n * Method to build each list item content.\n * Can be redefined to provide custom rendering.\n *\n * @type {function}\n */\nList.prototype.renderItem = List.prototype.renderItemDefault;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nList.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse wheel events.\n     *\n     * @param {Event} event generated event\n     */\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        if ( this.type === this.TYPE_VERTICAL && event.wheelDeltaY ) {\n            this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n        }\n\n        // scrolling by X axis\n        if ( this.type === this.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n            this.move(event.wheelDeltaX > 0 ? keys.left : keys.right);\n        }\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n            case keys.right:\n            case keys.left:\n            case keys.pageUp:\n            case keys.pageDown:\n            case keys.home:\n            case keys.end:\n                // cursor move only on arrow keys\n                this.move(event.code);\n                break;\n            case keys.enter:\n                // there are some listeners\n                if ( this.events['click:item'] && this.$focusItem ) {\n                    // notify listeners\n                    this.emit('click:item', {$item: this.$focusItem, event: event});\n                }\n                break;\n        }\n    }\n};\n\n\n/**\n * Default method to move focus according to pressed keys.\n *\n * @param {Object} event generated event source of movement\n */\n//List.prototype.navigateDefault = function ( event ) {\n//    switch ( event.code ) {\n//        case 38:\n//        case 40:\n//        case 39:\n//        case 37:\n//        case 33:\n//        case 34:\n//        case 36:\n//        case 35:\n//            // cursor move only on arrow keys\n//            this.move(event.code);\n//            break;\n//        case 13:\n//            // there are some listeners\n//            if ( this.events['click:item'] ) {\n//                // notify listeners\n//                this.emit('click:item', {$item: this.$focusItem, event: event});\n//            }\n//            break;\n//    }\n//};\n\n\n/**\n * Current active method to move focus according to pressed keys.\n * Can be redefined to provide custom navigation.\n *\n * @type {function}\n */\n//List.prototype.navigate = List.prototype.navigateDefault;\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var idx, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( idx = 0; idx < data.length; idx++ ) {\n        // cell value\n        item = data[idx];\n        // primitive value\n        if ( typeof item !== 'object' ) {\n            // wrap with defaults\n            item = data[idx] = {\n                value: data[idx]\n            };\n        }\n\n        if ( DEVELOP ) {\n            //if ( !('value' in item) ) { throw new Error(__filename + ': field \"value\" is missing'); }\n            if ( ('mark' in item) && Boolean(item.mark) !== item.mark ) {\n                throw new Error(__filename + ': item.mark must be boolean');\n            }\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.init = function ( config ) {\n    var self     = this,\n        currSize = this.$body.children.length,\n        /**\n         * Item mouse click handler.\n         *\n         * @param {Event} event click event data\n         *\n         * @this Element\n         *\n         * @fires module:stb/ui/list~List#click:item\n         */\n        onClick = function ( event ) {\n            if ( this.data ) {\n                self.focusItem(this);\n\n                // there are some listeners\n                if ( self.events['click:item'] ) {\n                    // notify listeners\n                    self.emit('click:item', {$item: this, event: event});\n                }\n            }\n        },\n        item, idx;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // apply cycle behaviour\n    if ( config.cycle !== undefined ) { this.cycle = config.cycle; }\n\n    // apply ScrollBar link\n    if ( config.scroll ) { this.scroll = config.scroll; }\n\n    // apply data provider\n    if ( config.provider ) { this.provider = config.provider; }\n\n\n    // custom render method\n    if ( config.render ) {\n        if ( DEVELOP ) {\n            if ( typeof config.render !== 'function' ) {\n                throw new Error(__filename + ': wrong config.render type');\n            }\n        }\n\n        // apply\n        this.renderItem = config.render;\n    }\n\n    // list items amount on page\n    if ( config.size ) {\n        if ( DEVELOP ) {\n            if ( Number(config.size) !== config.size ) {\n                throw new Error(__filename + ': config.size must be a number');\n            }\n            if ( config.size <= 0 ) {\n                throw new Error(__filename + ': config.size should be positive');\n            }\n        }\n\n        // apply\n        this.size = config.size;\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( name ) {\n            self.events[name] = null;\n            self.addListener(name, config.events[name]);\n        });\n    }\n\n    // geometry has changed or initial draw\n    if ( this.size !== currSize ) {\n        // non-empty list\n        if ( currSize > 0 ) {\n            // clear old items\n            this.$body.innerText = null;\n        }\n\n        // create new items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            item = document.createElement('div');\n            item.index = idx;\n            //item.className = 'item theme-list-item';\n            item.className = 'item';\n\n            item.addEventListener('click', onClick);\n            this.$body.appendChild(item);\n        }\n    }\n\n    if ( this.provider ) {\n        if ( this.provider.blocked ) {\n            return;\n        }\n\n        this.provider.get( null, function ( error, data ) {\n            if ( error ) {\n                if ( self.events['data:error'] ) {\n                    /**\n                     * Provider get error while take new data\n                     *\n                     * @event module:stb/ui/list~List#data:error\n                     */\n                    self.emit('data:error', error);\n                }\n            } else {\n                if ( data ) {\n                    config.data = data;\n                    self.setData(config);\n                    if ( self.scroll ) {\n                        self.scroll.init({\n                            realSize: self.provider.maxCount,\n                            viewSize: self.provider.size,\n                            value: self.provider.head + self.provider.pos\n                        });\n                    }\n                }\n                if ( self.events['data:get'] ) {\n                    /**\n                     * Provider request new data\n                     *\n                     * @event module:stb/ui/list~List#data:get\n                     *\n                     * @type {Object}\n                     */\n                    self.emit('data:get');\n                }\n            }\n        });\n    } else if ( config.data ) {\n        this.setData(config);\n    }\n};\n\n/**\n * Set data and render inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.setData = function ( config ) {\n    // apply list of items\n\n    if ( config.data ) {\n        if ( DEVELOP ) {\n            if ( !Array.isArray(config.data) ) { throw new Error(__filename + ': wrong config.data type'); }\n        }\n        // prepare user data\n        this.data = normalize(config.data);\n    }\n\n    // view window position\n    if ( DEVELOP ) {\n        if ( config.viewIndex !== undefined ) {\n            if ( Number(config.viewIndex) !== config.viewIndex ) {\n                throw new Error(__filename + ': config.viewIndex must be a number');\n            }\n            if ( config.viewIndex < 0 ) {\n                throw new Error(__filename + ': config.viewIndex should be positive');\n            }\n        }\n    }\n\n    // reset current view window position\n    this.viewIndex = null;\n\n    if ( this.$focusItem ) {\n        this.blurItem(this.$focusItem);\n    }\n\n    if ( this.scroll ) {\n        if ( this.provider ) {\n            if ( this.scroll.realSize !== this.provider.maxCount ) {\n                this.scroll.init({\n                    realSize: this.provider.maxCount,\n                    viewSize: this.provider.size,\n                    value: this.provider.head + this.provider.pos\n                });\n            }\n        } else {\n            this.scroll.init({\n                realSize: this.data.length,\n                viewSize: this.size,\n                value: config.viewIndex || 0\n            });\n        }\n    }\n\n    // set focus item\n    if ( config.focusIndex !== undefined && this.data.length ) {\n        if ( DEVELOP ) {\n            if ( Number(config.focusIndex) !== config.focusIndex ) {\n                throw new Error(__filename + ': config.focusIndex must be a number');\n            }\n            if ( config.focusIndex < 0 ) {\n                throw new Error(__filename + ': config.focusIndex should be positive');\n            }\n            // if ( config.focusIndex > this.data.length - 1 ) {\n            //     throw new Error(__filename + ': config.focusIndex should be less than data size');\n            // }\n        }\n\n        // jump to the necessary item\n        this.focusIndex(config.focusIndex);\n    } else {\n        // go to the first page\n        this.renderView(config.viewIndex || 0);\n    }\n};\n\n\n/**\n * Shift the visible view window event.\n *\n * @event module:stb/ui/list~List#move:view\n *\n * @type {Object}\n * @property {number} prevIndex previous view window position\n * @property {number} currIndex current view window position\n */\n\n\n/**\n * Draw the visible window.\n *\n * @param {number} index start position to render\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#move:view\n */\nList.prototype.renderView = function ( index ) {\n    var $item, idx, itemData, prevIndex, currIndex;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be more than zero');\n        }\n        // if ( index >= this.data.length ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // has the view window position changed\n    if ( this.viewIndex !== index ) {\n        // save for emit\n        prevIndex = this.viewIndex;\n        // sync global pointer\n        this.viewIndex = currIndex = index;\n\n        // rebuild all visible items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            // shortcuts\n            $item    = this.$body.children[idx];\n            itemData = this.data[index];\n\n            // real item or stub\n            if ( itemData ) {\n                // correct inner data/index and render\n                $item.data  = itemData;\n                $item.index = index;\n                this.renderItem($item, itemData);\n\n                // apply CSS\n                if ( itemData.mark ) {\n                    $item.classList.add('mark');\n                } else {\n                    $item.classList.remove('mark');\n                }\n            } else {\n                // nothing to render\n                $item.data = $item.index = undefined;\n                $item.innerHTML = '&nbsp;';\n                $item.ready = false;\n            }\n            index++;\n        }\n\n        // there are some listeners\n        if ( this.events['move:view'] ) {\n            // notify listeners\n            this.emit('move:view', {prevIndex: prevIndex, currIndex: currIndex});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            this.emit('select:item', {$item: $item});\n        }\n\n        // update a linked scroll component\n        if ( this.scroll ) {\n            this.scroll.scrollTo(this.provider ? this.provider.head + this.provider.pos : this.viewIndex);\n        }\n\n        // full rebuild\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Move focus to the given direction.\n *\n * @param {number} direction arrow key code\n *\n * @fires module:stb/ui/list~List#cycle\n * @fires module:stb/ui/list~List#overflow\n */\nList.prototype.move = function ( direction ) {\n    var self = this,\n        force = false;\n\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(direction) !== direction ) {\n            throw new Error(__filename + ': direction must be a number');\n        }\n    }\n\n    // empty list\n    if ( !this.data.length ) {\n        return;\n    }\n\n    switch ( direction ) {\n        case keys.left:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.up:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index > 0 ) {\n                    if ( this.$focusItem === this.$body.firstChild ) {\n                        this.renderView(this.viewIndex - 1);\n                    } else {\n                        this.focusItem(this.$focusItem.previousSibling);\n                    }\n                } else if ( this.provider ) {\n                    if ( this.provider.blocked ) {\n                        return;\n                    }\n\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the end of the list\n                        this.move(keys.end);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.right:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.down:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index < this.data.length - 1 ) {\n                    if ( this.$focusItem === this.$body.lastChild ) {\n                        this.renderView(this.viewIndex + 1);\n                    } else {\n                        this.focusItem(this.$focusItem.nextSibling);\n                    }\n                } else if ( this.provider ) {\n                    if ( this.provider.blocked ) {\n                        return;\n                    }\n\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the beginning of the list\n                        this.move(keys.home);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.pageUp:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n\n                return;\n            }\n            if ( this.viewIndex < this.size ) {\n                // first page\n                this.renderView(0);\n            } else {\n                // second page and further\n                this.renderView(this.viewIndex - this.size + 1);\n            }\n\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.pageDown:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            // data is bigger then one page\n            if ( this.data.length > this.size ) {\n                // determine jump size\n                if ( this.viewIndex > this.data.length - this.size * 2 ) {\n                    // last page\n                    this.renderView(this.data.length - this.size);\n                } else {\n                    // before the last page\n                    this.renderView(this.viewIndex + this.size - 1);\n                }\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n        case keys.home:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n                break;\n            }\n            this.renderView(0);\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.end:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            if ( this.data.length > this.size ) {\n                this.renderView(this.data.length - this.size);\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n    }\n};\n\n\n/**\n * Highlight the given DOM element as focused.\n * Remove focus from the previously focused item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.focusItem = function ( $item ) {\n    var $prev = this.$focusItem;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n    }\n\n    // different element\n    if ( $item && $prev !== $item ) {\n        if ( DEVELOP ) {\n            if ( !($item instanceof Element) ) {\n                throw new Error(__filename + ': wrong $item type');\n            }\n            if ( $item.parentNode !== this.$body ) {\n                throw new Error(__filename + ': wrong $item parent element');\n            }\n        }\n\n        // some item is focused already\n        if ( $prev !== null ) {\n            if ( DEVELOP ) {\n                if ( !($prev instanceof Element) ) {\n                    throw new Error(__filename + ': wrong $prev type');\n                }\n            }\n\n            // style\n            $prev.classList.remove('focus');\n            //$prev.classList.remove('theme-focus');\n\n            // there are some listeners\n            if ( this.events['blur:item'] ) {\n                /**\n                 * Remove focus from an element.\n                 *\n                 * @event module:stb/ui/list~List#blur:item\n                 *\n                 * @type {Object}\n                 * @property {Element} $item previously focused HTML element\n                 */\n                this.emit('blur:item', {$item: $prev});\n            }\n        }\n        // reassign\n        this.$focusItem = $item;\n\n        this.$focusItem.data = this.data[this.$focusItem.index];\n\n        // correct CSS\n        $item.classList.add('focus');\n        //$item.classList.add('theme-focus');\n\n        // there are some listeners\n        if ( this.events['focus:item'] ) {\n            /**\n             * Set focus to a DOM element.\n             *\n             * @event module:stb/ui/list~List#focus:item\n             *\n             * @type {Object}\n             * @property {Element} $prev old/previous focused HTML element\n             * @property {Element} $curr new/current focused HTML element\n             */\n            this.emit('focus:item', {$prev: $prev, $curr: $item});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            /**\n             * Set focus to a list item.\n             *\n             * @event module:stb/ui/list~List#select:item\n             *\n             * @type {Object}\n             * @property {Element} $item new/current focused item\n             */\n            this.emit('select:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Highlight the given DOM element as blur.\n * Remove focus from the item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.blurItem = function ( $item ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) { throw new Error(__filename + ': wrong arguments number'); }\n    }\n\n    // different element\n    if ( $item ) {\n        if ( $item === this.$focusItem ) {\n            this.$focusItem = null;\n        }\n\n        $item.classList.remove('focus');\n        //$item.classList.remove('theme-focus');\n\n        // there are some listeners\n        if ( this.events['blur:item'] ) {\n            /**\n             * Remove focus from an element.\n             *\n             * @event module:stb/ui/list~List#blur:item\n             *\n             * @type {Object}\n             * @property {Element} $item previously focused HTML element\n             */\n            this.emit('blur:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Set the given item focused by item index.\n *\n * @param {number} index item data index\n */\nList.prototype.focusIndex = function ( index ) {\n    var viewIndex = this.viewIndex || 0;\n\n    if ( DEVELOP ) {\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be positive');\n        }\n        // if ( index > this.data.length - 1 ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // determine direction\n    if ( index >= viewIndex + this.size ) {\n        // check range\n        index = index < this.data.length - 1 ? index : this.data.length - 1;\n        // move down\n        this.renderView(index - this.size + 1);\n        this.focusItem(this.$body.lastChild);\n    } else if ( index < viewIndex ) {\n        // check range\n        index = index > 0 ? index : 0;\n        // move up\n        this.renderView(index);\n        this.focusItem(this.$body.firstChild);\n    } else {\n        // no move\n        if ( this.viewIndex === null ) {\n            // first attempt\n            this.renderView(0);\n        }\n        this.focusItem(this.$body.children[index - viewIndex]);\n    }\n};\n\n\n/**\n * Set item state and appearance as marked.\n *\n * @param {Node|Element} $item element to focus\n * @param {boolean} state true - marked, false - not marked\n */\nList.prototype.markItem = function ( $item, state ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 2 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !($item instanceof Element) ) {\n            throw new Error(__filename + ': wrong $item type');\n        }\n        if ( $item.parentNode !== this.$body ) {\n            throw new Error(__filename + ': wrong $item parent element');\n        }\n        if ( Boolean(state) !== state ) {\n            throw new Error(__filename + ': state must be boolean');\n        }\n    }\n\n    // correct CSS\n    if ( state ) {\n        $item.classList.add('mark');\n    } else {\n        $item.classList.remove('mark');\n    }\n\n    // apply flag\n    $item.data.mark = state;\n};\n\n\n// public\nmodule.exports = List;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component'),\n    keys      = require('stb-keys');\n\n\n/**\n * Scroll area implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} config object\n * @param {number} [config.step] step in % of screen height to scroll area\n */\nfunction ScrollArea ( config ) {\n\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    /**\n     * Step to scroll area in % of screen height\n     *\n     * @type {number}\n     */\n    this.step = 5;\n\n    /**\n     * Real height of scroll area\n     *\n     * @type {number}\n     */\n    this.realHeight = 0;\n\n    /**\n     * Visible height of area\n     *\n     * @type {number}\n     */\n    this.viewHeight = 0;\n\n    /**\n     * Top position of scroll container\n     *\n     * @type {number}\n     */\n    this.topPosition = 0;\n\n    /**\n     * Associated ScrollBar component link.\n     *\n     * @type {ScrollBar}\n     */\n    this.scroll = null;\n\n    Component.call(this, config);\n\n    this.$node.appendChild(this.$body);\n\n    // component setup\n    this.init(config);\n}\n\n\nScrollArea.prototype = Object.create(Component.prototype);\nScrollArea.prototype.constructor = ScrollArea;\n\n// set component name\nScrollArea.prototype.name = 'mag-component-scroll-area';\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nScrollArea.prototype.defaultEvents = {\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n                this.move(event.code);\n                break;\n        }\n    },\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n    }\n};\n\n\n/**\n * Attempt to go beyond the edge of the list.\n *\n * @event\n *\n * @type {Object}\n * @property {number} direction key code initiator of movement\n */\n\n\n/**\n * Move ScrollArea content\n *\n * @param {number} direction to move\n */\nScrollArea.prototype.move = function ( direction ) {\n    var height = screen.height,\n        delta  = this.viewHeight - this.realHeight;\n\n    // run logic only if it's reasonable to navigate\n    if ( delta < 0 ) {\n        switch ( direction ) {\n            case keys.down:\n                if ( this.topPosition - this.step * height / 100 < delta ) {\n                    this.scroll.scrollTo(-delta);\n                    this.$body.style.top = delta + 'px';\n                    this.emit('overflow', {direction: direction});\n\n                    return;\n                }\n\n                this.topPosition -= Math.ceil(this.step * height / 100);\n\n                if ( this.scroll ) {\n                    this.scroll.scrollTo(-this.topPosition);\n                }\n                this.$body.style.top = this.topPosition + 'px';\n                break;\n            case keys.up:\n                if ( this.topPosition + this.step * height / 100 > 0 ) {\n                    this.scroll.scrollTo(0);\n                    this.$body.style.top = '0px';\n                    this.emit('overflow', {direction: direction});\n\n                    return;\n                }\n                this.topPosition += Math.ceil(this.step * height / 100);\n\n                if ( this.scroll ) {\n                    this.scroll.scrollTo(-this.topPosition);\n                }\n                this.$body.style.top = this.topPosition + 'px';\n                break;\n        }\n    } else {\n        this.emit('overflow', {direction: direction});\n    }\n};\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nScrollArea.prototype.init = function ( config ) {\n\n    config = config || {};\n\n    this.realHeight = this.$body.offsetHeight;\n    this.viewHeight = this.$node.offsetHeight;\n    this.topPosition = 0;\n    this.$body.style.top = this.topPosition + 'px';\n\n    if ( config.scroll ) {\n        this.scroll = config.scroll;\n    }\n\n    if ( config.step ) {\n        this.step = config.step;\n    }\n\n    if ( this.scroll ) {\n        this.scroll.init({\n            realSize: this.realHeight,\n            viewSize: this.viewHeight,\n            value: this.topPosition\n        });\n    }\n};\n\nmodule.exports = ScrollArea;\n","/**\n * @license The MIT License (MIT)\n * @copyright Dmitry Fedotov <bas.jsdev@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\nvar StbComponentModal = require('stb-component-modal'),\n    Component         = require('stb-component'),\n    keys              = require('stb-keys');\n\n\n/**\n * Modal window implementation.\n *\n * @constructor\n * @extends StbComponentModal\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {Object} [config.title] message title\n * @param {Object} [config.className] message classname\n * @param {Object} [config.icon] icon at header\n * @param {Object} [config.visible] visibility flag\n * @param {Object} [config.children] content (inherited from the parent)\n *\n * @example\n * var modalSort = new Modal({\n *     visible: false,\n *     title: 'sort',\n *     events: {\n *         show: function () {\n *             list.focus();\n *         },\n *         hide: function () {\n *             page.panelSet.focus();\n *         }\n *     },\n *     children: [list = new RadioList({})]\n * });\n * page.add(modalSort);\n */\nfunction Modal ( config ) {\n    var self = this,\n        $overlay, $body, onkeydown;\n\n    // sanitize\n    config = config || {};\n    config.events = config.events || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.icon && typeof config.icon !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.icon');\n        }\n        if ( config.title && typeof config.title !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.title');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body ) {\n            throw new Error(__filename + ': config.$body should not be provided in Modal manually');\n        }\n    }\n\n    // usually can't accept focus\n    config.focusable = config.focusable || false;\n    // hide by default\n    config.visible = config.visible || false;\n    // add default close by click\n    config.events.click = config.events.click || function () { self.hide(); };\n    // add close window behavior, when pushed a back button or a menu button\n    onkeydown = config.events.keydown;\n    config.events.keydown = function ( event ) {\n        if ( onkeydown ) {\n            onkeydown.call(this, event);\n        }\n        if ( event.code === keys.back || event.code === keys.menu ) {\n            event.stop = true;\n            self.hide();\n        }\n    };\n\n    // parent constructor call\n    StbComponentModal.call(this, config);\n\n    // add table-cell wrappers\n    this.$node.appendChild(document.createElement('div'));\n    this.$node.firstChild.classList.add('alignBox');\n    this.$node.firstChild.appendChild(document.createElement('div'));\n\n    // add header div\n    this.$header = document.createElement('div');\n    this.$header.className = 'header';\n\n    // insert caption placeholder\n    this.$text = this.$header.appendChild(document.createElement('div'));\n    this.$text.classList.add('text');\n    this.$text.innerText = config.title || '';\n\n    // optional icon\n    if ( config.icon ) {\n        this.$icon = this.$header.appendChild(document.createElement('div'));\n        this.$icon.className = 'icon ' + config.icon;\n    }\n\n    $overlay = document.createElement('div');\n    $overlay.className = 'overlay';\n\n    // add to dom\n    // add body wrapper\n    $body = this.$body.parentNode.removeChild(this.$body);\n    this.$node.firstChild.firstChild.appendChild(this.$header);\n    this.$node.firstChild.firstChild.appendChild($body);\n    this.$node.firstChild.firstChild.appendChild($overlay);\n}\n\n\n// inheritance\nModal.prototype = Object.create(StbComponentModal.prototype);\nModal.prototype.constructor = Modal;\n\n// set component name\nModal.prototype.name = 'mag-component-modal';\n\n\n/**\n * Redefine default component focus to set additional css\n */\nModal.prototype.focus = function () {\n    this.$node.classList.add('active');\n    StbComponentModal.prototype.focus.call(this);\n    if ( this.children[0] && this.children[0] instanceof Component ) {\n        this.children[0].focus();\n    }\n};\n\n\n/**\n * Blur message\n */\nModal.prototype.blur = function () {\n    this.$node.classList.remove('active');\n    StbComponentModal.prototype.blur.call(this);\n};\n\n\n// public\nmodule.exports = Modal;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar List             = require('mag-component-list'),\n    classChecked     = 'checked',\n    classIcon        = 'theme-icon theme-icon-radio',\n    classIconActive  = 'theme-icon theme-icon-radio-active';\n\n\n/**\n * Base radio list implementation\n *\n * @constructor\n * @extends List\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {string} [config.classIcon] icon default state class name\n * @param {string} [config.classIconActive] icon active state class name\n * @param {string} [config.classChecked] checked item class\n */\nfunction RadioList ( config ) {\n    var self = this;\n\n    if ( config.classIcon ) {\n        classIcon = config.classIcon;\n    }\n    if ( config.classIconActive ) {\n        classIconActive = config.classIconActive;\n    }\n    if ( config.classChecked ) {\n        classIcon = config.classChecked;\n    }\n\n    /**\n     * Checked item data\n     *\n     * @type {Element}\n     */\n    this.checkedData = null;\n\n    /**\n     * Checked element index\n     *\n     * @type {number}\n     */\n    this.checkedIndex = null;\n\n    List.call(this, config);\n\n    this.addListener('click:item', function ( event ) {\n        var $item = event.$item,\n            previousCheckedData = self.checkedData;\n\n        self.checkIndex($item.index);\n\n        if ( previousCheckedData !== $item.data ) {\n            /**\n             * Select element from list\n             *\n             * @event select\n             * @property {Element} $item object\n             */\n            self.emit('select', $item);\n        }\n    });\n}\n\n\nRadioList.prototype = Object.create(List.prototype);\nRadioList.prototype.constructor = RadioList;\n\n// set component name\nRadioList.prototype.name = 'mag-component-radio-list';\n\nRadioList.prototype.init = function ( config ) {\n    config = config || {};\n    List.prototype.init.call(this, config);\n};\n\n\n/**\n * Set data and render inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nRadioList.prototype.setData = function ( config ) {\n    List.prototype.setData.call(this, config);\n\n    this.defaultCheckedIndex = this.checkedIndex;\n\n    if ( this.$focusItem ) {\n        this.defaultFocusIndex = this.$focusItem.index;\n    } else {\n        this.defaultFocusIndex = 0;\n    }\n};\n\n\n/**\n * Reset data to default state and render inner structures and HTML.\n */\nRadioList.prototype.resetData = function () {\n    this.checkIndex(this.defaultCheckedIndex);\n    this.focusIndex(this.defaultFocusIndex);\n};\n\n\n/**\n * Set all states to false and render inner structures and HTML.\n *\n * @param {number} [focusIndex] focus index\n */\nRadioList.prototype.clearChecked = function ( focusIndex ) {\n    var index = 0;\n\n    for ( index; index < this.data.length; index++ ) {\n        this.data[index].state = false;\n    }\n\n    // no focusIndex, focusIndex may be 0\n    if ( !focusIndex && focusIndex !== 0 ) {\n        focusIndex = this.$focusItem ? this.$focusItem.index : 0;\n    }\n\n    this.setData({data: this.data, focusIndex: focusIndex});\n};\n\n\n/**\n * Default render function\n *\n * @param {Element} $item in list\n * @param {Object} data to render layout element\n * @param {string} [data.title] title of checkbox\n * @param {boolean} [data.state] state of checkbox: checked or not\n * @param {string} [data.value] special value of item\n */\nRadioList.prototype.renderItemDefault = function ( $item, data ) {\n    var table,\n        tr,\n        td,\n        check;\n\n    if ( $item.ready ) {\n        $item.$title.innerText = data.title || '';\n\n        if ( data.state ) {\n            $item.classList.add(classChecked);\n            $item.checkBox.className = classIconActive;\n        } else {\n            $item.classList.remove(classChecked);\n            $item.checkBox.className = classIcon;\n        }\n\n        $item.state = data.state;\n        $item.value = data.value;\n\n    } else {\n        $item.innerHTML = '';\n        table = document.createElement('table');\n        tr = document.createElement('tr');\n        td = document.createElement('td');\n        check = document.createElement('div');\n\n        if ( data.state ) {\n            $item.classList.add(classChecked);\n            check.className = classIconActive;\n        } else {\n            $item.classList.remove(classChecked);\n            check.className = classIcon;\n        }\n\n        table.appendChild(tr);\n        td.appendChild(check);\n\n        td.className = 'checkBoxWrapper';\n        tr.appendChild(td);\n\n        td = document.createElement('td');\n        td.className = 'title';\n        td.innerText = data.title || '';\n        tr.appendChild(td);\n\n        $item.checkBox = check;\n        $item.state = data.state;\n        $item.value = data.value;\n        $item.$title = td;\n\n        $item.appendChild(table);\n\n        if ( data.state ) {\n            this.checkedData = data;\n            this.checkedIndex = $item.index;\n        }\n\n        $item.ready = true;\n    }\n};\n\n\n/**\n * Check element by index\n *\n * @param {number} index of element to check\n */\nRadioList.prototype.checkIndex = function ( index ) {\n    var $node;\n\n    if ( DEVELOP ) {\n        if ( index >= this.data.length ) {\n            throw new Error(__filename + ': wrong index to check');\n        }\n    }\n\n    // do not need to do the same\n    if ( index === this.checkedIndex ) { return; }\n\n    if ( this.checkedIndex !== null && this.$node.children.length ) {\n        this.data[this.checkedIndex].state = false;\n        $node = this.getItemNodeByIndex(this.checkedIndex);\n        if ( $node ) {\n            $node.checkBox.className = classIcon;\n            $node.classList.remove(classChecked);\n        }\n    }\n\n    $node = this.getItemNodeByIndex(index);\n    if ( $node ) {\n        $node.checkBox.className = classIconActive;\n        $node.classList.add(classChecked);\n        $node.state = true;\n    }\n\n    this.data[index].state = true;\n    this.checkedData = this.data[index];\n    this.checkedIndex = index;\n};\n\n\n/**\n * Get list item node by item index\n *\n * @param {number} index of item to find node\n * @return {?Element} item node link\n */\nRadioList.prototype.getItemNodeByIndex = function ( index ) {\n    var children = this.$node.children;\n\n    index -= this.viewIndex;\n    if ( index < this.size && index >= 0 ) {\n        return children[index];\n    }\n\n    return null;\n};\n\nRadioList.prototype.renderItem = RadioList.prototype.renderItemDefault;\n\nmodule.exports = RadioList;\n","/**\n * @license The MIT License (MIT)\n * @copyright Dmitry Fedotov <bas.jsdev@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys'),\n    classes   = {};\n\n\n// initialize classes\nclasses[keys.f1] = 'theme-icon-rc-f1';\nclasses[keys.f2] = 'theme-icon-rc-f2';\nclasses[keys.f3] = 'theme-icon-rc-f3';\nclasses[keys.f4] = 'theme-icon-rc-f4';\nclasses[keys.menu] = 'theme-icon-rc-menu';\nclasses[keys.ok] = 'theme-icon-rc-ok';\nclasses[keys.info] = 'theme-icon-rc-info';\nclasses[keys.playPause] = 'theme-icon-rc-play-pause';\nclasses[keys.back] = 'theme-icon-rc-back';\nclasses[keys.exit] = 'theme-icon-rc-home';\nclasses[keys.keyboard] = 'theme-icon-rc-vk';\nclasses[keys.refresh] = 'theme-icon-rc-refresh';\nclasses[keys.frame] = 'theme-icon-rc-aspect';\n\n/**\n * Footer.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}  config={} init parameters\n * @param {Object}  config.parent parent page\n * @param {boolean} [config.visible] visibility flag\n * @param {Object}  [config.data] footer buttons config\n * @param {Object}  [config.data.left] left button config\n * @param {Object}  [config.data.middle] middle buttons config\n * @param {Object}  [config.data.right] right button config\n * @param {number}  [config.data.middle.code] button key code\n * @param {Object}  [config.data.middle.title] button title\n * @param {Object}  [config.data.middle.action] button press (click) action\n *\n * @example\n * page.footer = new Footer({\n *     parent: page,\n *     data: {\n *         left: {\n *             code: keys.menu, action: function () {}\n *         },\n *         middle: [\n *             {code: 55, action: function () {}},\n *             {code: keys.f1, title: 'stop', action: function () {}},\n *             {code: 9000, className: 'customIcon', title: 'start', action: function () {}},\n *             {code: keys.f4, title: 'end', action: function () {}}\n *         ],\n *         right: {\n *             code: 65, action: function () {}\n *         }\n *     }\n * });\n */\n\n/* eslint max-statements: 0 */\nfunction Footer ( config ) {\n    var currentTab = 0,\n        self = this;\n\n    // sanitize\n    config = config || {};\n    // can't accept focus\n    config.focusable = false;\n    // hide by default\n    config.visible = config.visible || false;\n    // create centered div\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    this.tabs = [\n        {codes: {}},\n        {codes: {}},\n        {codes: {}},\n        {codes: {}}\n    ];\n\n    this.tab = 0;\n\n    this.$table = this.$node.appendChild(document.createElement('table'));\n\n    this.$table.insertRow();\n    this.$table.rows[0].insertCell(-1);\n    this.$left = this.$table.rows[0].cells[0].appendChild(document.createElement('div'));\n    this.$left.className = 'theme-icon';\n\n    this.$table.rows[0].insertCell(-1);\n    this.$table.rows[0].cells[1].className = 'central';\n\n\n    this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.className = 'wrapper hidden';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n\n    ++currentTab;\n    this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.className = 'wrapper hidden';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n\n    ++currentTab;\n    this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.className = 'wrapper hidden';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n\n    ++currentTab;\n    this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.className = 'wrapper hidden';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n    this.tabs[currentTab].$body.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.className = 'button';\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.appendChild(document.createElement('div'));\n    this.tabs[currentTab].$body.lastChild.lastChild.className = 'title';\n\n    this.$table.rows[0].insertCell(-1);\n    this.$right = this.$table.rows[0].cells[2].appendChild(document.createElement('div'));\n    this.$right.className = 'theme-icon';\n\n    this.init(config.data);\n\n    this.parent.addListener('keydown', function ( event ) {\n        var currTab = self.tabs[self.tab];\n\n        if ( self.visible ) {\n            if ( currTab.codes[event.code] && typeof currTab.codes[event.code].action === 'function' ) {\n                currTab.codes[event.code].action();\n            }\n        }\n    });\n}\n\n\n// inheritance\nFooter.prototype = Object.create(Component.prototype);\nFooter.prototype.constructor = Footer;\n\n// set component name\nFooter.prototype.name = 'mag-component-footer';\n\n\n/**\n * Redefine buttons\n *\n * @param {Object} [config] footer buttons config\n * @param {Object} [config.left] left button config\n * @param {number} [config.left.code] left button key code\n * @param {boolean} [config.left.disabled] left button is disabled\n * @param {Object} [config.left.action] left button press (click) action\n * @param {Object} [config.middle] middle buttons config\n * @param {Object} [config.right] right button config\n * @param {number} [config.right.code] right button key code\n * @param {boolean} [config.right.disabled] right button is disabled\n * @param {Object} [config.right.action] right button press (click) action\n * @param {number} [config.middle.code] button key code\n * @param {Object} [config.middle.title] button title\n * @param {boolean} [config.middle.disabled] button is disabled\n * @param {Object} [config.middle.action] button press (click) action\n *\n * page.Footer.init({\n *     left: {\n *         code: keys.menu, action: function () {}\n *     },\n *     middle: [\n *         {code: 55, action: function () {}},\n *         {code: keys.f1, title: 'stop', action: function () {}},\n *         {code: 9000, className: 'customIcon', title: 'start', action: function () {}},\n *         {code: keys.f4, title: 'end', disabled: true}\n *     ],\n *     right: {\n *         code: 65, action: function () {}\n *     }\n * });\n *\n */\nFooter.prototype.init = function ( config ) {\n    var index, $tab, $tabChildren;\n\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( config.middle && config.middle.length > 4 ) {\n            throw new Error(__filename + ': only 4 buttons allowed in footer');\n        }\n        if ( config.middle && Array.isArray(config.middle) ) {\n            for ( index = 0; index < config.middle.length; index++ ) {\n                if ( typeof config.middle[index].action !== 'function' && !config.middle[index].disabled ) {\n                    throw new Error(__filename + ': action must be a function');\n                }\n                ++index;\n            }\n        }\n        if ( config.left && typeof config.left.action !== 'function' && !config.left.disabled ) {\n            throw new Error(__filename + ': action must be a function');\n        }\n        if ( config.right && typeof config.right.action !== 'function' && !config.right.disabled ) {\n            throw new Error(__filename + ': action must be a function');\n        }\n    }\n\n    // hide old tab\n    this.tabs[this.tab].$body.classList.add('hidden');\n    this.tab = config.middle && config.middle.length ? config.middle.length - 1 : 0;\n    // current tab shortcut\n    $tab = this.tabs[this.tab];\n    // reset all actions\n    $tab.codes = {};\n\n    // left button\n    if ( config.left ) {\n        this.$left.className = config.left.className || ('theme-icon ' + (classes[config.left.code] || 'theme-icon-warning'));\n        if ( config.left.disabled ) {\n            this.$left.classList.add('disabled');\n        } else {\n            $tab.codes[config.left.code] = {action: config.left.action};\n            this.$left.style.visibility = 'inherit';\n            this.$left.onclick = function () {\n                if ( typeof config.left.action === 'function' ) {\n                    config.left.action();\n                }\n            };\n        }\n    } else if ( this.$left.style.visibility !== 'hidden' ) {\n        this.$left.style.visibility = 'hidden';\n    }\n\n    // right button\n    if ( config.right ) {\n        this.$right.className = config.right.className || ('theme-icon ' + (classes[config.right.code] || 'theme-icon-warning'));\n        if ( config.right.disabled ) {\n            this.$right.classList.add('disabled');\n        } else {\n            $tab.codes[config.right.code] = {action: config.right.action};\n            this.$right.style.visibility = 'inherit';\n            this.$right.onclick = function () {\n                if ( typeof config.right.action === 'function' ) {\n                    config.right.action();\n                }\n            };\n        }\n    } else if ( this.$right.style.visibility !== 'hidden' ) {\n        this.$right.style.visibility = 'hidden';\n    }\n\n    function addClick ( ind ) {\n        return function () {\n            if ( typeof config.middle[ind].action === 'function' ) {\n                config.middle[ind].action();\n            }\n        };\n    }\n\n    // middle buttons\n    if ( config.middle && config.middle.length ) {\n        for ( index = 0; index < config.middle.length; index++ ) {\n            $tab.codes[config.middle[index].code] = {action: config.middle[index].action};\n            if ( config.middle[index].disabled ) {\n                $tab.$body.children[index].classList.add('disabled');\n            } else {\n                $tab.$body.children[index].classList.remove('disabled');\n                $tab.$body.children[index].onclick = addClick(index);\n            }\n            // shortcut\n            $tabChildren = $tab.$body.children[index].children;\n            $tabChildren[0].className = 'iconImg ' +\n                (config.middle[index].className || ('theme-icon ' + (classes[config.middle[index].code] || 'theme-icon-warning')));\n\n            $tabChildren[1].innerText = config.middle[index].title || '';\n        }\n        $tab.$body.classList.remove('hidden');\n    }\n};\n\n\n// public\nmodule.exports = Footer;\n","/**\n * Main application entry point.\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar app     = require('mag-app'),\n    gettext = require('spa-gettext');\n\n// main application events\napp.once('load', function () {\n    // load language first\n    gettext.load({name: window.core.environment.language}, function ( error ) {\n        if ( error ) {\n            debug.info('language load error');\n        }\n\n        // set pages\n        app.pages = {\n            info: require('./pages/info'),\n            more: require('./pages/more'),\n            add: require('./pages/add'),\n            chans: require('./pages/chans'),\n            main: require('./pages/main')\n        };\n\n        app.ready();\n    });\n});\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app    = require('spa-app/lib/core'),\n    events = require('spa-app/lib/events');\n\n\n// get instance\nwindow.core = window.parent.getCoreInstance(window, app);\n\n// shims\nrequire('stb-shim-classlist');\n\n// apply geometry\nrequire('stb-app/lib/metrics');\n\n// load sdk css\nrequire('stb-app/lib/css')('sdk');\n\n// load theme css\nrequire('./css');\n\n// load app css\nrequire('stb-app/lib/css')('app');\n\n/**\n * Specify platform name\n *\n * @type {string}\n */\napp.platform = 'mag';\n\n/**\n * Show app.\n */\napp.ready = function () {\n    // if ( this.events['show'] ) {\n    //     this.emit('show');\n    // }\n    window.core.call('app:ready');\n};\n\n\n/**\n * Exit from app.\n * Destroy all application instance.\n * If callback function provided, and callback returns boolean 'true', application will stay alive.\n *\n * @fires module:/stb/app#exit\n */\napp.exit = function () {\n    if ( app.events['exit'] ) {\n        app.emit('exit');\n    }\n\n    core.call('exit');\n};\n\n\nevents.load = function ( event ) {\n    //window.core = window.parent.getCoreInstanse(window, app);\n    document.body.setAttribute('platform', app.platform);\n\n    if ( core.ready ) {\n        if ( app.events['load'] ) {\n            // notify listeners\n            app.emit('load', {});\n        }\n    } else {\n        core.once('load', function () {\n            //core.ready = true;\n            if ( app.events[event.type] ) {\n                // notify listeners\n                app.emit(event.type, event);\n            }\n        });\n    }\n};\n\n\n// activate development mechanisms and tools\nif ( DEVELOP ) {\n    //require('stb-develop');\n    require('./develop/main');\n} else {\n    // disable context menu\n    events.contextmenu = function ( event ) {\n        event.preventDefault();\n    };\n}\n\n\n//apply DOM events\nObject.keys(events).forEach(function ( name ) {\n    window.addEventListener(name, events[name]);\n});\n\n\n// new way of string handling\n// all strings are in UTF-16\n// since stbapp 2.18\n// if ( window.gSTB && gSTB.SetNativeStringMode ) {\n//     /* eslint new-cap: 0 */\n//     gSTB.SetNativeStringMode(true);\n// }\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nmodule.exports = {\n    /**\n     * Parse the given location search string into object.\n     *\n     * @param {string} query string to parse\n     *\n     * @return {Object.<string, string>} result data\n     */\n    parse: function ( query ) {\n        var data = {};\n\n        // parse and fill the data\n        query.split('&').forEach(function ( part ) {\n            part = part.split('=');\n            // valid number on params\n            if ( part.length === 2 ) {\n                data[part[0]] = decodeURIComponent(part[1]);\n            }\n        });\n\n        return data;\n    },\n\n\n    /**\n     * Make uri query part in a string form.\n     *\n     * @param {Object} params data to stringify\n     *\n     * @return {string} query string\n     */\n    stringify: function ( params ) {\n        var data = [];\n\n        Object.keys(params).forEach(function ( name ) {\n            data.push(name + '=' + encodeURIComponent(params[name]));\n        });\n\n        return data.join('&');\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('./core');\n\n\n// public\nmodule.exports = {\n    DOMContentLoaded: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // there are some listeners\n        if ( app.events['dom'] ) {\n            // notify listeners\n            app.emit('dom', event);\n            //console.log('DOMContentLoaded');\n        }\n    },\n\n    /**\n     * The load event is fired when a resource and its dependent resources have finished loading.\n     *\n     * Control flow:\n     *   1. Global handler.\n     *   2. Each page handler.\n     *   3. Application DONE event.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/load\n     *\n     * @param {Event} event generated object with event data\n     */\n    load: function ( event ) {\n        //var path;\n\n        //debug.event(event);\n        //console.log(event);\n\n        // time mark\n        //app.data.time.load = event.timeStamp;\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' load', 'green');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n\n        // time mark\n        //app.data.time.done = +new Date();\n\n        // everything is ready\n        // and there are some listeners\n        // if ( app.events['done'] ) {\n        //     // notify listeners\n        //     app.emit('done', event);\n        // }\n    },\n\n    /**\n     * The unload event is fired when the document or a child resource is being unloaded.\n     *\n     * Control flow:\n     *   1. Each page handler.\n     *   2. Global handler.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/unload\n     *\n     * @param {Event} event generated object with event data\n     */\n    unload: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' unload', 'red');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n    },\n\n    /**\n     * The error event is fired when a resource failed to load.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/error\n     *\n     * @param {Event} event generated object with event data\n     */\n    error: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n        //debug.fail('app event: ' + event.message, event, {tags: [event.type, 'event']});\n        console.error('app event: ' + event.message, event);\n    },\n\n    /**\n     * The keydown event is fired when a key is pressed down.\n     * Set event.stop to true in order to prevent bubbling.\n     *\n     * Control flow:\n     *   1. Current active component on the active page.\n     *   2. Current active page itself.\n     *   3. Application.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keydown\n     *\n     * @param {Event} event generated object with event data\n     */\n    keydown: function ( event ) {\n        var page = app.activePage,\n            eventLocal = {\n                code: event.keyCode,\n                stop: false\n            },\n            activeComponent;\n\n        if ( DEVELOP ) {\n            if ( !page ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        // filter phantoms\n        //if ( event.keyCode === 0 ) { return; }\n\n        // combined key code\n        //event.code = event.keyCode;\n\n        // apply key modifiers\n        if ( event.ctrlKey )  { eventLocal.code += 'c'; }\n        if ( event.altKey )   { eventLocal.code += 'a'; }\n        if ( event.shiftKey ) { eventLocal.code += 's'; }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + eventLocal.code, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + eventLocal.code, event);\n\n        // page.activeComponent can be set to null in event handles\n        activeComponent = page.activeComponent;\n\n        // current component handler\n        if ( activeComponent && activeComponent !== page ) {\n            // component is available and not page itself\n            if ( activeComponent.events[event.type] ) {\n                // there are some listeners\n                activeComponent.emit(event.type, eventLocal, event);\n            }\n\n            // todo: bubble event recursively\n            // bubbling\n            if (\n                !eventLocal.stop &&\n                activeComponent.propagate &&\n                activeComponent.parent &&\n                activeComponent.parent.events[event.type]\n            ) {\n                activeComponent.parent.emit(event.type, eventLocal, event);\n            }\n        }\n\n        // page handler\n        if ( !eventLocal.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, eventLocal, event);\n            }\n\n            // global app handler\n            if ( !event.stop ) {\n                // not prevented\n                if ( app.events[event.type] ) {\n                    // there are some listeners\n                    app.emit(event.type, eventLocal, event);\n                }\n            }\n        }\n\n        //// suppress non-printable keys in stb device (not in your browser)\n        //if ( app.data.host && keyCodes[event.code] ) {\n        //    event.preventDefault();\n        //}\n    },\n\n    /**\n     * The keypress event is fired when press a printable character.\n     * Delivers the event only to activeComponent at active page.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keypress\n     *\n     * @param {Event} event generated object with event data\n     * @param {string} event.char entered character\n     */\n    keypress: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + event.key, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + event.key, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n    },\n\n    /**\n     * The click event is fired when a pointing device button (usually a mouse button) is pressed and released on a single element.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/click\n     *\n     * @param {Event} event generated object with event data\n     */\n    /*click: function ( event ) {\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n     },*/\n\n    /**\n     * The contextmenu event is fired when the right button of the mouse is clicked (before the context menu is displayed),\n     * or when the context menu key is pressed (in which case the context menu is displayed at the bottom left of the focused\n     * element, unless the element is a tree, in which case the context menu is displayed at the bottom left of the current row).\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/contextmenu\n     *\n     * @param {Event} event generated object with event data\n     */\n    // contextmenu: function ( event ) {\n    //     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n    //\n    //     if ( !DEVELOP ) {\n    //         // disable right click in release mode\n    //         event.preventDefault();\n    //     }\n    // },\n\n    /*contextmenu: function ( event ) {\n     //var kbEvent = {}; //Object.create(document.createEvent('KeyboardEvent'));\n\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n\n     //kbEvent.type    = 'keydown';\n     //kbEvent.keyCode = 8;\n\n     //debug.log(kbEvent.type);\n\n     //globalEventListenerKeydown(kbEvent);\n     //var event = document.createEvent('KeyboardEvent');\n     //event.initEvent('keydown', true, true);\n\n     //document.dispatchEvent(kbEvent);\n\n     if ( !DEVELOP ) {\n     // disable right click in release mode\n     event.preventDefault();\n     }\n     },*/\n\n    /**\n     * The wheel event is fired when a wheel button of a pointing device (usually a mouse) is rotated.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel\n     *\n     * @param {Event} event generated object with event data\n     */\n    mousewheel: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n\n        // page handler\n        if ( !event.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, event);\n            }\n        }\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint-disable */\n\n'use strict';\n\n\nif ( !document.documentElement.classList ) {\n    var prototype = Array.prototype,\n        indexOf   = prototype.indexOf,\n        slice     = prototype.slice,\n        push      = prototype.push,\n        splice    = prototype.splice,\n        join      = prototype.join;\n\n    window.DOMTokenList = function ( el ) {\n        this._element = el;\n        if (el.className !== this._classCache) {\n            this._classCache = el.className;\n            if (!this._classCache) { return; }\n            var classes = this._classCache.replace(/^\\s+|\\s+$/g,'').split(/\\s+/),\n                i;\n            for (i = 0; i < classes.length; i++) {\n                push.call(this, classes[i]);\n            }\n        }\n    };\n\n    window.DOMTokenList.prototype = {\n        add: function ( token ) {\n            if(this.contains(token)) { return; }\n            push.call(this, token);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        contains: function ( token ) {\n            return indexOf.call(this, token) !== -1;\n        },\n\n        item: function ( index ) {\n            return this[index] || null;\n        },\n\n        remove: function ( token ) {\n            var i = indexOf.call(this, token);\n            if (i === -1) {\n                return;\n            }\n            splice.call(this, i, 1);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        toString: function () {\n            return join.call(this, ' ');\n        },\n\n        toggle: function ( token ) {\n            if (!this.contains(token)) {\n                this.add(token);\n            } else {\n                this.remove(token);\n            }\n            return this.contains(token);\n        }\n    };\n\n    Object.defineProperty(Element.prototype, 'classList', {\n        get: function () {\n            return new window.DOMTokenList(this);\n        }\n    });\n}\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    metrics = require('app:metrics');\n\n\n// global link\napp.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\napp.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\napp.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n\n// public\n//module.exports = app;\n","/**\n * Application geometry options.\n * Automatically loaded on application initialization and available as app.metrics.\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    480: {\n        // screen base dimension\n        height: 480,\n        width: 720,\n        // safe zone margins\n        availTop: 24,\n        availBottom: 24,\n        availRight: 32,\n        availLeft: 48,\n        // project-specific vars\n        // put here ...\n        keyboardWidth: 558,\n        keyboardHeight: 311\n    },\n\n    576: {\n        // screen base dimension\n        height: 576,\n        width: 720,\n        // safe zone margins\n        availTop: 24,\n        availBottom: 24,\n        availRight: 26,\n        availLeft: 54,\n        // project-specific vars\n        // put here ...\n        keyboardWidth: 558,\n        keyboardHeight: 311\n    },\n\n    720: {\n        // screen base dimension\n        height: 720,\n        width: 1280,\n        // safe zone margins\n        availTop: 30,\n        availBottom: 30,\n        availRight: 40,\n        availLeft: 40,\n        // project-specific vars\n        // put here ...\n        keyboardWidth: 818,\n        keyboardHeight: 311\n    },\n\n    1080: {\n        // screen base dimension\n        height: 1080,\n        width: 1920,\n        // safe zone margins\n        availTop: 45,\n        availBottom: 45,\n        availRight: 60,\n        availLeft: 60,\n        // project-specific vars\n        // put here ...\n        keyboardWidth: 1227,\n        keyboardHeight: 467\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core'),\n    //metrics = require('app:metrics'),\n    linkCSS;\n\n\n//window.core = window.parent.getCoreInstance(window, app);\n\n\nlinkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = window.core.theme.path + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);\n\n\n// public\nmodule.exports = linkCSS;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    Gettext = require('cjs-gettext'),\n    loader  = new Emitter();\n\n\n/**\n * Wrap the given data with gettext instance\n * and export methods to the global scope.\n *\n * @param {Object} [data] localization data\n *\n * @return {Gettext} gettext instance\n */\nfunction prepare ( data ) {\n    var gettext = new Gettext(data);\n\n    // make it global\n    window.gettext  = window._ = gettext.gettext;\n    window.pgettext = gettext.pgettext;\n    window.ngettext = gettext.ngettext;\n\n    return gettext;\n}\n\n\n/**\n * Main application language\n */\nloader.defaultLanguage = 'en';\n\n\n/**\n * Simple gettext implementation.\n *\n * @param {Object} config options\n * @param {string} [config.path=lang] relative path to project root\n * @param {string} config.name language name\n * @param {string} [config.ext=json] language file extension\n * @param {function} callback hook on ready\n *\n * @return {boolean} flag is ajax request was made\n */\nloader.load = function ( config, callback ) {\n    var xhr;\n\n    if ( DEVELOP ) {\n        if ( !config.name || typeof config.name !== 'string' ) {\n            throw new Error(__filename + ': config.name must be a nonempty string');\n        }\n        if ( typeof callback !== 'function' ) {\n            throw new Error(__filename + ': wrong callback type');\n        }\n    }\n\n    // defaults\n    config.ext  = config.ext  || 'json';\n    config.path = config.path || 'lang';\n\n    // is it necessary to request a localization file?\n    if ( config.name === loader.defaultLanguage ) {\n        // no\n        prepare();\n        callback(null);\n\n        return false;\n    }\n\n    // yes\n    xhr = new XMLHttpRequest();\n\n    xhr.onload = function () {\n        var json;\n\n        try {\n            json = JSON.parse(xhr.responseText);\n\n            prepare(json);\n            callback(null);\n\n            // there are some listeners\n            if ( loader.events['load'] ) {\n                // notify listeners\n                loader.emit('load');\n            }\n        } catch ( error ) {\n            xhr.onerror(error);\n        }\n    };\n\n    xhr.ontimeout = xhr.onerror = function ( error ) {\n        prepare();\n        callback(error);\n\n        // there are some listeners\n        if ( loader.events['error'] ) {\n            // notify listeners\n            loader.emit('error', error);\n        }\n    };\n\n    xhr.open('GET', config.path + '/' + config.name + '.' + config.ext, true);\n    xhr.send(null);\n\n    return true;\n};\n\n\n// public\nmodule.exports = loader;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Translations handler.\n *\n * @constructor\n *\n * @param {Object} config init parameters\n */\nfunction Gettext ( config ) {\n    var data, meta;\n\n    // sanitize\n    config   = config || {};\n    data     = config.data || {};\n    data[''] = data[''] || {};\n\n    // shortcut\n    meta = config.meta;\n\n    /**\n     * Display the native language translation of a textual message.\n     *\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.gettext = function ( msgId ) {\n        return data[''][msgId] || msgId;\n    };\n\n\n    /**\n     * The \"p\" in \"pgettext\" stands for \"particular\": fetches a particular translation of the textual message.\n     *\n     * @param {string} context message context\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.pgettext = function ( context, msgId ) {\n        return data[context] && data[context][msgId] || msgId;\n    };\n\n\n    /**\n     * Display the native language translation of a textual message whose grammatical form depends on a number.\n     *\n     * @param {string} msgId textual message in a singular form\n     * @param {string} plural textual message in a plural form\n     * @param {number} value message number\n     *\n     * @return {string} translated text\n     */\n    this.ngettext = function ( msgId, plural, value ) {\n        /* eslint no-unused-vars: 0 */\n        /* eslint no-eval: 0 */\n        /* eslint id-length: 0 */\n        var n, evalResult;\n\n        if ( DEVELOP ) {\n            if ( Number(value) !== value ) {\n                throw new Error(__filename + ': value must be a number');\n            }\n        }\n\n        if ( data && meta && data[''][msgId] ) {\n            evalResult = eval('n = ' + value + '; ' + meta.plural);\n\n            if ( typeof evalResult === 'boolean' ) {\n                evalResult = +evalResult;\n            }\n\n            // translation\n            return data[''][msgId][evalResult];\n        }\n\n        // english\n        return value === 1 ? msgId : plural;\n    };\n}\n\n\n// correct constructor name\nGettext.prototype.constructor = Gettext;\n\n\n// public\nmodule.exports = Gettext;\n","/**\n * Main page implementation.\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar id            = 'pageInfo',\n    app           = require('mag-app'),\n    Page          = require('stb-component-page'),\n    page          = new Page({$node: document.getElementById(id)}),\n    PanelSet      = require('mag-component-panel-set'),\n    PanelExtended = require('mag-component-panel'),\n    LayoutList    = require('mag-component-layout-list'),\n    Button        = require('stb-component-button'),\n    keys          = require('stb-keys'),\n    Scroll        = require('stb-component-scrollbar'),\n    Flicker       = require('spa-component-flicker'),\n    tools         = require('../modules/tools');\n\n\npage.clock = new Flicker({\n    className: 'clock',\n    interval: 1000,\n    render: function ( $item ) {\n        var time  = new Date(),\n            hours = time.getHours(),\n            mins  = time.getMinutes();\n\n        $item.innerText = (hours > 9 ? hours : '0' + hours) + ':' + (mins > 9 ? mins : '0' + mins);\n    }\n});\npage.add(page.clock);\npage.clock.start();\n\n// details panel\npage.panelDetails = new PanelExtended({\n    title: gettext('About record'),\n    main: true,\n    visible: true,\n    className: 'panelDetails',\n    children: []\n});\n\npage.panelDetails.reset = function () {\n    var statuses = ['', gettext('Waiting'), gettext('Running'), gettext('Error'), gettext('Completed')];\n\n    page.panelDetails.list.init({\n        focusIndex: 0,\n        data: [\n            {\n                items: [\n                    {className: 'item name theme-subhead-color', value: gettext('Channel:')},\n                    {className: 'item text', value: page.initData.channel}\n                ]\n\n            }, {\n                items: [\n                    {className: 'item name theme-subhead-color', value: gettext('URL:')},\n                    {className: 'item text', value: page.initData.url}\n                ]\n            }, {\n                items: [\n                    {className: 'item name theme-subhead-color', value: gettext('File name:')},\n                    {className: 'item text', value: page.initData.name}\n                ]\n            }, {\n                items: [\n                    {className: 'item name theme-subhead-color', value: gettext('Start time:')},\n                    {className: 'item text', value: tools.parseDate(new Date(page.initData.startTime * 1000))}\n                ]\n            }, {\n                items: [\n                    {className: 'item name theme-subhead-color', value: gettext('End time:')},\n                    {className: 'item text', value: tools.parseDate(new Date(page.initData.endTime * 1000))}\n                ]\n            }, {\n                items: [\n                    {className: 'item name theme-subhead-color', value: gettext('Device:')},\n                    {\n                        className: 'item text',\n                        value: page.initData.storage ? page.initData.storage.label : gettext('Not connected')\n                    }\n                ]\n            }, {\n                items: [\n                    {className: 'item name theme-subhead-color', value: gettext('Status:')},\n                    {className: 'item text', value: statuses[page.initData.state]}\n                ]\n            }\n        ]\n    });\n    page.panelDetails.scroll.init({realSize: 7, viewSize: 6});\n\n    page.panelDetails.$node.classList.add('disabled');\n    page.panelDetails.focus();\n    if ( page.panelDetails.list.$focusItem ) {\n        page.panelDetails.list.$focusItem.classList.remove('focus');\n        page.panelDetails.scroll.hide();\n    }\n    page.panelDetails.button.focus();\n};\n\npage.panelDetails.scroll = new Scroll({});\n\npage.panelDetails.add(page.panelDetails.list = new LayoutList({\n    focusIndex: 0,\n    size: 6,\n    scroll: page.panelDetails.scroll,\n    events: {\n        overflow: function () {\n            page.panelDetails.list.$focusItem.classList.remove('focus');\n            page.panelDetails.scroll.hide();\n            page.panelDetails.button.focus();\n        },\n        'click:item': function ( data ) {\n            if ( page.panelDetails.list.$focusItem ) {\n                app.route(app.pages.more, data);\n            }\n        },\n        keydown: function ( event ) {\n            LayoutList.prototype.defaultEvents.keydown.call(this, event);\n        }\n    },\n    data: []\n}), page.panelDetails.scroll);\n\npage.panelDetails.add(page.panelDetails.button = new Button({\n    value: gettext('Close'),\n    className: 'bottom theme-footer',\n    $node: page.panelDetails.$node.appendChild(document.createElement('div')),\n    events: {\n        click: function () {\n            app.route(app.pages.main);\n        },\n        keydown: function ( event ) {\n            if ( event.code === keys.up ) {\n                page.panelDetails.list.focus();\n                page.panelDetails.scroll.show();\n                // restore taken focus class\n                page.panelDetails.list.$focusItem.classList.add('focus');\n                page.panelDetails.list.focusIndex(page.panelDetails.list.data.length - 1);\n            } else if ( event.code === keys.down ) {\n                page.panelDetails.list.focus();\n                page.panelDetails.scroll.show();\n                // restore taken focus class\n                page.panelDetails.list.$focusItem.classList.add('focus');\n                page.panelDetails.list.focusIndex(0);\n            } else if ( event.code === keys.ok ) {\n                if ( page.panelDetails.button.events['click'] ) {\n                    page.panelDetails.button.emit('click', {event: event});\n                }\n            }\n        }\n    }\n}));\n\n// panel set: record details\npage.panelSet = new PanelSet({\n    visible: false,\n    $node: document.getElementById('panelSetInfo'),\n    focusIndex: 0,\n    panels: [page.panelDetails]\n});\npage.add(page.panelSet);\n\n\npage.addListener('keydown', function ( event ) {\n    switch ( event.code ) {\n        case keys.back:\n            app.route(app.pages.main);\n            break;\n    }\n});\n\npage.addListener('show', function ( data ) {\n//         debug.info('pageInfo->show');\n    page.panelSet.show();\n    if ( data && data.data && data.data.data ) {\n        page.initData = data.data.data.items[1].record.data;\n        page.panelDetails.reset();\n    }\n});\n\n\n// public\nmodule.exports = page;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base page implementation.\n *\n * A full-screen top-level layer that can operate as an independent separate entity.\n * It is added to the document body on creation if not already linked.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n *\n * @example\n * var Page = require('stb/ui/page'),\n *     page = new Page({\n *         $node: document.getElementById(id)\n *     });\n *\n * page.addListener('show', function show () {\n *     // page is visible now\n * });\n */\nfunction Page ( config ) {\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    /**\n     * Page visibility/active state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.active = false;\n\n    /**\n     * Link to the currently active component with focus.\n     *\n     * @readonly\n     * @type {Component}\n     */\n    this.activeComponent = null;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'page ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // state flag\n    this.active = this.$node.classList.contains('active');\n\n    // correct DOM parent/child connection if necessary\n    if ( this.$node.parentNode === null ) {\n        document.body.appendChild(this.$node);\n    }\n\n    // always itself\n    this.page = this;\n}\n\n\n// inheritance\nPage.prototype = Object.create(Component.prototype);\nPage.prototype.constructor = Page;\n\n// set component name\nPage.prototype.name = 'spa-component-page';\n\n\n// public\nmodule.exports = Page;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component'),\n    keys      = require('spa-keys');\n\n\n/**\n * Base button implementation.\n *\n * Has global options:\n *     Button.prototype.clickDuration - time to apply \"click\" class, does not apply if 0\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {string} [config.value] button caption text (generated if not set)\n * @param {string} [config.icon] button icon name\n *\n * @example\n * var Button = require('stb/ui/button'),\n *     btnSimple, btnIcon, btnDetached;\n *\n * btnSimple = new Button({\n *     $node: document.getElementById('btnSimple'),\n *     value: 'Simple button'\n * });\n *\n * btnIcon = new Button({\n *     $node: document.getElementById('btnIcon'),\n *     icon: 'menu'\n *     value: 'Button with icon'\n * });\n *\n * btnDetached = new Button({\n *     value: 'Button not added to the page',\n *     className: 'wide'\n * });\n */\nfunction Button ( config ) {\n    // current execution context\n    //var self = this;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.icon && typeof config.icon !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.icon');\n        }\n        if ( config.value && typeof config.value !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.value');\n        }\n    }\n\n    //config.name = 'spa-component-button' + (config.className || '');\n\n    // set default className if classList property empty or undefined\n    //config.className = this.name + ' ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // optional dom\n    if ( config.icon ) {\n        // insert icon\n        this.$icon = this.$body.appendChild(document.createElement('div'));\n        this.$icon.className = 'icon ' + config.icon;\n    }\n\n    // insert caption placeholder\n    this.$text = this.$body.appendChild(document.createElement('div'));\n    this.$text.classList.add('text');\n\n    if ( config.value ) {\n        // fill it\n        this.$text.innerText = config.value;\n    }\n}\n\n\n// inheritance\nButton.prototype = Object.create(Component.prototype);\nButton.prototype.constructor = Button;\n\n// set component name\nButton.prototype.name = 'spa-component-button';\n\n\n// time to apply \"click\" class, does not apply if 0\nButton.prototype.clickDuration = 200;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nButton.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse click events.\n     */\n    click: function () {\n        // current execution context\n        var self = this;\n\n        this.$node.classList.add('click');\n\n        setTimeout(function () {\n            self.$node.classList.remove('click');\n        }, this.clickDuration);\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        if ( event.code === keys.enter ) {\n            // emulate click\n            // there are some listeners\n            if ( this.events['click'] ) {\n                /**\n                 * Mouse click event emulation.\n                 *\n                 * @event module:stb/ui/button~Button#click\n                 *\n                 * @type {Object}\n                 * @property {Event} event click event data\n                 */\n                this.emit('click', {event: event});\n            }\n        }\n    }\n};\n\n\n// public\nmodule.exports = Button;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base scroll bar implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {number} [config.value=0] initial thumb position\n * @param {number} [config.realSize=100] actual scroll size\n * @param {number} [config.viewSize=10] visible area size\n * @param {number} [config.type] direction\n *\n * @example\n * var ScrollBar = require('stb/ui/scroll.bar'),\n *     scrollBar = new ScrollBar({\n *         viewSize: 5,\n *         realSize: 25,\n *         events: {\n *             done: function () {\n *                 debug.log('ScrollBar: done');\n *             },\n *             change: function ( data ) {\n *                 debug.log('ScrollBar: change to ' + data.curr + ' from ' + data.prev);\n *             }\n *         }\n *     });\n */\nfunction ScrollBar ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Visible area size.\n     *\n     * @type {number}\n     */\n    this.viewSize = 10;\n\n    /**\n     * Scroll area actual height or width (if scroll is horizontal).\n     *\n     * @type {number}\n     */\n    this.realSize = 100;\n\n    /**\n     * Scroll thumb position.\n     *\n     * @type {number}\n     */\n    this.value = 0;\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Geometry of the scroll thumb element.\n     *\n     * @type {ClientRect}\n     */\n    this.thumbRect = null;\n\n    /**\n     * Geometry of the scroll track element.\n     *\n     * @type {ClientRect}\n     */\n    this.trackRect = null;\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'scrollBar ' + (config.className || '');\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // insert thumb line\n    this.$thumb = this.$body.appendChild(document.createElement('div'));\n\n    // correct CSS class name\n    this.$thumb.className = 'thumb';\n\n    // component setup\n    this.init(config);\n}\n\n\n// inheritance\nScrollBar.prototype = Object.create(Component.prototype);\nScrollBar.prototype.constructor = ScrollBar;\n\n// set component name\nScrollBar.prototype.name = 'spa-component-scrollbar';\n\nScrollBar.prototype.TYPE_VERTICAL   = 1;\nScrollBar.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Init or re-init realSize/viewSize/value parameters.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nScrollBar.prototype.init = function ( config ) {\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // set actual scroll size\n    if ( config.realSize !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.realSize) !== config.realSize ) {\n                throw new Error(__filename + ': config.realSize value must be a number');\n            }\n        }\n\n        // apply\n        this.realSize = config.realSize;\n    }\n\n    // set visible area size\n    if ( config.viewSize !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.viewSize) !== config.viewSize ) {\n                throw new Error(__filename + ': config.viewSize value must be a number');\n            }\n            if ( config.viewSize < 0 ) {\n                throw new Error(__filename + ': config.viewSize value must be greater than 0');\n            }\n        }\n\n        // apply\n        this.viewSize = config.viewSize;\n    }\n\n    // show or hide thumb\n    if ( this.viewSize >= this.realSize ) {\n        this.$thumb.classList.add('hidden');\n    } else {\n        this.$thumb.classList.remove('hidden');\n    }\n\n    // set thumb position\n    if ( config.value !== undefined ) {\n        // apply\n        this.scrollTo(config.value);\n    }\n\n    // set thumb size\n    if ( this.type === this.TYPE_VERTICAL ) {\n        this.$thumb.style.height = (this.viewSize / this.realSize * 100) + '%';\n    } else {\n        this.$thumb.style.width = (this.viewSize / this.realSize * 100) + '%';\n    }\n\n    // geometry\n    this.thumbRect = this.$thumb.getBoundingClientRect();\n    this.trackRect = this.$node.getBoundingClientRect();\n};\n\n\n/**\n * Set position of the given value.\n * Does nothing in case when scroll is in the end and passed value is more than scroll bar length.\n *\n * @param {number} value new value to set\n * @return {boolean} operation result\n *\n * @fires module:stb/ui/scroll.bar~ScrollBar#done\n * @fires module:stb/ui/scroll.bar~ScrollBar#change\n */\nScrollBar.prototype.scrollTo = function ( value ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(value) !== value ) {\n            throw new Error(__filename + ': value must be a number');\n        }\n        if ( this.realSize > this.viewSize && value > this.realSize - this.viewSize ) {\n            throw new Error(__filename + ': value is greater than this.realSize-this.viewSize');\n        }\n        if ( value < 0 ) {\n            throw new Error(__filename + ': value is less then 0');\n        }\n    }\n\n    // value has changed\n    if ( this.value !== value ) {\n        // track and thumb geometry was not set\n        if ( this.thumbRect.height === 0 || this.thumbRect.width === 0 ) {\n            // apply\n            this.trackRect = this.$node.getBoundingClientRect();\n            this.thumbRect = this.$thumb.getBoundingClientRect();\n        }\n\n        // set scroll bar width\n        if ( this.type === this.TYPE_VERTICAL ) {\n            this.$thumb.style.marginTop = ((this.trackRect.height - this.thumbRect.height) * value / (this.realSize - this.viewSize)) + 'px';\n        } else {\n            this.$thumb.style.marginLeft = ((this.trackRect.width - this.thumbRect.width) * value / (this.realSize - this.viewSize)) + 'px';\n        }\n\n        // there are some listeners\n        if ( this.events['change'] ) {\n            /**\n             * Update scroll value.\n             *\n             * @event module:stb/ui/scroll.bar~ScrollBar#change\n             *\n             * @type {Object}\n             * @property {number} prev old/previous scroll value\n             * @property {number} curr new/current scroll value\n             */\n            this.emit('change', {curr: value, prev: this.value});\n        }\n\n        // is it the end?\n        if ( value >= this.realSize ) {\n            value = this.realSize;\n\n            // there are some listeners\n            if ( this.events['done'] ) {\n                /**\n                 * Set scroll to its maximum value.\n                 *\n                 * @event module:stb/ui/scroll.bar~ScrollBar#done\n                 */\n                this.emit('done');\n            }\n        }\n\n        // set new value\n        this.value = value;\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = ScrollBar;\n","/**\n * Main page implementation.\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar id            = 'pageMore',\n    app           = require('mag-app'),\n    Page          = require('stb-component-page'),\n    page          = new Page({$node: document.getElementById(id)}),\n    ScrollArea    = require('mag-component-scroll-area'),\n    Scroll        = require('stb-component-scrollbar'),\n    PanelSet      = require('mag-component-panel-set'),\n    PanelExtended = require('mag-component-panel'),\n    Button        = require('stb-component-button'),\n    Flicker       = require('spa-component-flicker'),\n    keys          = require('stb-keys');\n\nwindow.mpage = page;\n\npage.clock = new Flicker({\n    className: 'clock',\n    interval: 1000,\n    render: function ( $item ) {\n        var time  = new Date(),\n            hours = time.getHours(),\n            mins  = time.getMinutes();\n\n        $item.innerText = (hours > 9 ? hours : '0' + hours) + ':' + (mins > 9 ? mins : '0' + mins);\n    }\n});\npage.add(page.clock);\npage.clock.start();\n\npage.panelDetails = new PanelExtended({\n    main: true, visible: true, className: 'panelDetails', children: [], title: '_'\n});\npage.panelDetails.reset = function ( data ) {\n    page.panelDetails.$title.$node.innerText = data.title;\n    page.panelDetails.scroll.init({value: 0});\n    page.panelDetails.area.$body.innerText = data.value;\n    page.panelDetails.area.$body.style.top = '0px';\n    page.panelDetails.area.init();\n    page.panelDetails.focus();\n    if ( page.panelDetails.scroll.viewSize < page.panelDetails.scroll.realSize ) {\n        page.panelDetails.area.focus();\n    } else {\n        page.panelDetails.button.focus();\n    }\n};\n\npage.panelDetails.button = new Button({\n    value: gettext('Close'),\n    className: 'bottom theme-footer',\n    $node: page.panelDetails.$node.appendChild(document.createElement('div')),\n    events: {\n        click: function () { app.route(app.pages.info); },\n        keydown: function ( event ) {\n            if ( event.code === keys.up && page.panelDetails.scroll.viewSize < page.panelDetails.scroll.realSize ) {\n                page.panelDetails.area.focus();\n            } else if ( event.code === keys.ok ) {\n                if ( page.panelDetails.button.events['click'] ) {\n                    page.panelDetails.button.emit('click', {event: event});\n                }\n            }\n        }\n    }\n});\npage.panelDetails.add(page.panelDetails.button);\n\npage.panelDetails.scroll = new Scroll({});\npage.panelDetails.area = new ScrollArea({\n    visible: true,\n    scroll: page.panelDetails.scroll,\n    events: {\n        overflow: function ( data ) {\n            if ( data.direction === keys.down ) {\n                page.panelDetails.area.blur();\n                page.panelDetails.button.focus();\n            }\n        }\n    }\n});\npage.panelDetails.add(page.panelDetails.area, page.panelDetails.scroll);\n\n// panel set: download details\npage.panelSet = new PanelSet({\n    visible: false,\n    $node: document.getElementById('panelSetMore'),\n    focusIndex: 0,\n    panels: [page.panelDetails]\n});\npage.add(page.panelSet);\n\npage.addListener('keydown', function ( event ) {\n    switch ( event.code ) {\n        case keys.back:\n            app.route(app.pages.info);\n            break;\n    }\n});\n\npage.addListener('show', function ( data ) {\n    page.panelSet.show();\n    page.panelDetails.reset({\n        title: data.data.$item.data.items[0].value,\n        value: data.data.$item.data.items[1].value\n    });\n});\n\n\n// public\nmodule.exports = page;\n","/**\n * Main page implementation.\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar id            = 'pageAdd',\n    Page          = require('stb-component-page'),\n    app           = require('mag-app'),\n    ValueList     = require('mag-component-value-list'),\n    page          = new Page({$node: document.getElementById(id)}),\n    PanelSet      = require('mag-component-panel-set'),\n    PanelExtended = require('mag-component-panel'),\n    LayoutList    = require('mag-component-layout-list'),\n    ModalMessage  = require('mag-component-modal'),\n    RadioList     = require('mag-component-radio-list'),\n    Button        = require('stb-component-button'),\n    dom           = require('spa-dom'),\n    keys          = require('stb-keys'),\n    tools         = require('../modules/tools'),\n    Flicker       = require('spa-component-flicker'),\n    pvr           = window.core.plugins.pvr,\n    pvrErrorCodes = {\n        '-1': gettext('Wrong record parameters.'),\n        '-2': gettext('Not enough memory.'),\n        '-3': gettext('Wrong record range. Record lenth must be less than or equal 24 hours.'),\n        '-4': gettext('Task with specified ID was not found.'),\n        '-5': gettext('Wrong file name. Folder where you want to save recording must exist.'),\n        '-6': gettext('Record with that name already exists.'),\n        '-7': gettext('Error opening stream URL.'),\n        '-8': gettext('Error opening file.'),\n        '-9': gettext('Maximum number of simultaneous recording is exceeded.'),\n        '-10': gettext('Records app got a thread exit notification. File record is over.'),\n        '-11': gettext('Error writing file. Probably the disk is full or has been disconnected during recording.'),\n        '-12': gettext('Wrong record url.'),\n        '-13': gettext('Wrong file name.'),\n        '-14': gettext('Wrong record start time.'),\n        '-15': gettext('Wrong record end time.'),\n        '-16': gettext('Bad record.')\n    },\n    spvr, spvrErrorCodes;\n\n\nif ( MODE === 'MINISTRA' ) {\n    // stalker have server pvr so we can use it\n    spvr = window.core.plugins.spvr;\n    app.spvr = spvr;\n    spvrErrorCodes = {\n        '-1': gettext('Wrong channel id.'),\n        '-2': gettext('Server error.'),\n        '-3': gettext('Bad record.')\n    };\n}\n\napp.pvr = pvr;\n\npage.clock = new Flicker({\n    className: 'clock',\n    interval: 1000,\n    render: function ( $item ) {\n        var time  = new Date(),\n            hours = time.getHours(),\n            mins  = time.getMinutes();\n\n        $item.innerText = (hours > 9 ? hours : '0' + hours) + ':' + (mins > 9 ? mins : '0' + mins);\n    }\n});\npage.add(page.clock);\npage.clock.start();\n\nfunction dateKeydown ( event, myself ) {\n    ValueList.prototype.defaultEvents.keydown.call(myself, event);\n    if ( event.code === keys.ok ) {\n        myself.parent.emit('click');\n    }\n}\n\nfunction dateRender ( $body, myself ) {\n    if ( $body.children.length > 1 ) {\n        $body.children[1].innerText = myself.current ? myself.current.value : 0;\n    } else {\n        $body.appendChild(dom.tag('div', {className: 'pointerWrapper'}));\n        $body.appendChild(dom.tag('div', {className: 'text'}, myself.current ? myself.current.value : 0));\n        $body.appendChild(\n            dom.tag(\n                'div',\n                {className: 'pointerWrapper'},\n                dom.tag('div', {className: 'dateInputHint'})\n            )\n        );\n    }\n}\n\nfunction getIndex ( value, data ) {\n    return data.indexOf(value < 10 ? '0' + value : '' + value);\n}\n\n// modal message: select device\npage.modalSelectDevice = new ModalMessage({\n    title: gettext('devices'),\n    className: 'modalSelectDevice',\n    visible: false,\n    events: {\n        show: function () {\n            var allowStorage = app.intent ? app.intent.data.pvr.local : true,\n                allowServer  = app.intent ? app.intent.data.pvr.server : true,\n                body         = [],\n                focusIndex   = 0,\n                index;\n\n            if ( MODE === 'MINISTRA' && allowServer && spvr.enabled ) {\n                body = [{state: true, title: gettext('Server'), value: 'Server'}];\n            }\n            if ( allowStorage ) {\n                for ( index = 0; index < app.storages.length; index++ ) {\n                    body.push({state: false, title: app.storages[index].label, value: app.storages[index]});\n                    if ( page.currStorage && page.currStorage.mountPath === app.storages[index].mountPath ) {\n                        body[0].state = false;\n                        body[body.length - 1].state = true;\n                        focusIndex = Number(body.length - 1);\n                    }\n                }\n            }\n\n            this.children[0].init({data: body, size: body.length, focusIndex: focusIndex});\n            this.focus();\n        },\n        hide: function () {\n            page.panelSet.focus();\n        }\n    },\n    children: [\n        new RadioList({\n            cycle: true,\n            focusIndex: 0,\n            size: 3,\n            data: [],\n            propagate: true,\n            events: {\n                'click:item': function ( event ) {\n                    page.modalSelectDevice.hide();\n                    page.panelSet.reset({storage: event.$item.data.value});\n                }\n            }\n        })\n    ]\n});\npage.add(page.modalSelectDevice);\n\n\n// panel: add new record\npage.panelAdd = new PanelExtended({\n    title: gettext('new record'),\n    main: true,\n    visible: true,\n    className: 'panelAdd'\n});\n\npage.panelAdd.add(page.panelAdd.list = new LayoutList({\n    focusIndex: 0,\n    size: 5,\n    events: {\n        overflow: function () {\n            page.panelAdd.list.$focusItem.classList.remove('focus');\n            page.panelAdd.button.focus();\n        },\n        keydown: function ( event ) {\n            LayoutList.prototype.defaultEvents.keydown.call(this, event);\n        }\n    },\n    data: [\n        {\n            items: [\n                {className: 'item name theme-subhead-color', value: gettext('Channel:')},\n                {className: 'item text', value: ''},\n                {className: 'item placeholder theme-item-more', value: ''}\n            ],\n            click: function () {\n                app.route(app.pages.chans);\n            }\n        },\n        {\n            items: [\n                {className: 'item name theme-subhead-color', value: gettext('Start time:')},\n                page.panelAdd.startHour = new ValueList({\n                    data: tools.dates.hours.slice(),\n                    cycle: true,\n                    events: {\n                        keydown: function ( event ) { dateKeydown(event, this); }\n                    },\n                    render: function ( $element ) { dateRender($element, this); }\n                }),\n                {className: 'separator', value: ':'},\n                page.panelAdd.startMinute = new ValueList({\n                    data: tools.dates.minutes.slice(),\n                    cycle: true,\n                    events: {\n                        keydown: function ( event ) { dateKeydown(event, this); }\n                    },\n                    render: function ( $element ) { dateRender($element, this); }\n                }),\n                {className: 'separator', value: ' '},\n                page.panelAdd.startDay = new ValueList({\n                    data: tools.dates.days.slice(),\n                    cycle: true,\n                    events: {\n                        keydown: function ( event ) { dateKeydown(event, this); }\n                    },\n                    render: function ( $element ) { dateRender($element, this); }\n                }),\n                {className: 'separator', value: '/'},\n                page.panelAdd.startMonth = new ValueList({\n                    data: tools.dates.months.slice(),\n                    cycle: true,\n                    events: {\n                        keydown: function ( event ) { dateKeydown(event, this); }\n                    },\n                    render: function ( $element ) { dateRender($element, this); }\n                }),\n                {className: 'separator', value: '/'},\n                page.panelAdd.startYear = new ValueList({\n                    data: tools.dates.years.slice(),\n                    cycle: true,\n                    events: {\n                        keydown: function ( event ) { dateKeydown(event, this); }\n                    },\n                    render: function ( $element ) { dateRender($element, this); }\n                }),\n                {className: 'lastPadding', value: ' '}\n            ]\n        },\n        {\n            items: [\n                {className: 'item name theme-subhead-color', value: gettext('End time:')},\n                page.panelAdd.endHour = new ValueList({\n                    data: tools.dates.hours.slice(),\n                    cycle: true,\n                    events: {\n                        keydown: function ( event ) { dateKeydown(event, this); }\n                    },\n                    render: function ( $element ) { dateRender($element, this); }\n                }),\n                {className: 'separator', value: ':'},\n                page.panelAdd.endMinute = new ValueList({\n                    data: tools.dates.minutes.slice(),\n                    cycle: true,\n                    events: {\n                        keydown: function ( event ) { dateKeydown(event, this); }\n                    },\n                    render: function ( $element ) { dateRender($element, this); }\n                }),\n                {className: 'separator', value: ' '},\n                page.panelAdd.endDay = new ValueList({\n                    data: tools.dates.days.slice(),\n                    cycle: true,\n                    events: {\n                        keydown: function ( event ) { dateKeydown(event, this); }\n                    },\n                    render: function ( $element ) { dateRender($element, this); }\n                }),\n                {className: 'separator', value: '/'},\n                page.panelAdd.endMonth = new ValueList({\n                    data: tools.dates.months.slice(),\n                    cycle: true,\n                    events: {\n                        keydown: function ( event ) { dateKeydown(event, this); }\n                    },\n                    render: function ( $element ) { dateRender($element, this); }\n                }),\n                {className: 'separator', value: '/'},\n                page.panelAdd.endYear = new ValueList({\n                    data: tools.dates.years.slice(),\n                    cycle: true,\n                    events: {\n                        keydown: function ( event ) { dateKeydown(event, this); }\n                    },\n                    render: function ( $element ) { dateRender($element, this); }\n                }),\n                {className: 'lastPadding', value: ' '}\n            ]\n        },\n        {\n            items: [\n                {className: 'item name theme-subhead-color', value: gettext('Storage:')},\n                {className: 'item text', value: gettext('Recording not allowed')},\n                {className: 'item placeholder theme-item-more', value: ''}\n            ],\n            click: function () {\n                var allowStorage = app.intent ? app.intent.data.pvr.local : true,\n                    allowServer  = app.intent ? app.intent.data.pvr.server : true;\n\n                if (\n                    (app.storages.length && allowStorage)\n                    || (allowServer && MODE === 'MINISTRA' && spvr && spvr.enabled)\n                ) {\n                    page.panelSet.blur();\n                    page.modalSelectDevice.show();\n                    page.panelSet.visible = false;\n                }\n            }\n        },\n        {\n            items: [\n                {className: 'item name theme-subhead-color', value: gettext('File name:')},\n                page.panelAdd.input = dom.tag('div', {className: 'item text'}, gettext('Type here')),\n                {className: 'item placeholder theme-item-editable', value: ''}\n            ],\n            click: function () {\n                window.core.intent({\n                    action: 'keyboard',\n                    data: {\n                        type: 'text',\n                        mode: 'qwerty',\n                        title: gettext('ENTER FILE NAME'),\n                        description: gettext('RECORDS'),\n                        value: page.panelAdd.input.innerText\n                    },\n                    events: {\n                        done: function ( event ) {\n                            page.panelAdd.input.innerText = event.value;\n                        }\n                    }\n                }, function ( error ) {\n                    console.log(error);\n                });\n            }\n        }\n    ]\n}));\n// add hints for start time\npage.panelAdd.startHour.$node.children[2].children[0].innerText = 'hh';\npage.panelAdd.startMinute.$node.children[2].children[0].innerText = 'mm';\npage.panelAdd.startDay.$node.children[2].children[0].innerText = 'DD';\npage.panelAdd.startMonth.$node.children[2].children[0].innerText = 'MM';\npage.panelAdd.startYear.$node.children[2].children[0].innerText = 'YYYY';\n// add hints for end time\npage.panelAdd.endHour.$node.children[2].children[0].innerText = 'hh';\npage.panelAdd.endMinute.$node.children[2].children[0].innerText = 'mm';\npage.panelAdd.endDay.$node.children[2].children[0].innerText = 'DD';\npage.panelAdd.endMonth.$node.children[2].children[0].innerText = 'MM';\npage.panelAdd.endYear.$node.children[2].children[0].innerText = 'YYYY';\n\n\npage.panelAdd.add(page.panelAdd.button = new Button({\n    value: gettext('Create'),\n    className: 'bottom theme-footer',\n    $node: page.panelAdd.$node.appendChild(document.createElement('div')),\n    events: {\n        click: function () {\n            var name      = app.intent ? app.intent.data.name : '',\n                uri       = app.intent ? app.intent.data.uri : '',\n                recordId  = app.intent ? app.intent.data.id : '',\n                startDate = new Date(\n                    page.panelAdd.startYear.current.value,\n                    page.panelAdd.startMonth.current.value - 1,\n                    page.panelAdd.startDay.current.value,\n                    page.panelAdd.startHour.current.value,\n                    page.panelAdd.startMinute.current.value\n                ),\n                endDate   = new Date(\n                    page.panelAdd.endYear.current.value,\n                    page.panelAdd.endMonth.current.value - 1,\n                    page.panelAdd.endDay.current.value,\n                    page.panelAdd.endHour.current.value,\n                    page.panelAdd.endMinute.current.value\n                ),\n                path;\n\n            if ( startDate.getMonth() + 1 !== parseInt(page.panelAdd.startMonth.current.value, 10) ) {\n                window.core.notify({title: gettext('Wrong record start time.'), icon: 'alert', type: 'warning'});\n\n                return;\n            }\n            if ( endDate.getMonth() + 1 !== parseInt(page.panelAdd.endMonth.current.value, 10) ) {\n                window.core.notify({title: gettext('Wrong record end time.'), icon: 'alert', type: 'warning'});\n\n                return;\n            }\n            if ( startDate.getTime() >= endDate.getTime() ) {\n                window.core.notify({\n                    title: gettext('Wrong record range. Record lenth must be less than or equal 24 hours.'),\n                    icon: 'alert',\n                    type: 'warning'\n                });\n\n                return;\n            }\n            // check if storage have free space\n            if ( page.currStorage && Number(page.currStorage.freeSize) === 0 ) {\n                window.core.notify({\n                    title: gettext('Not enough free space in storage'),\n                    icon: 'alert',\n                    type: 'warning'\n                });\n\n                return;\n            }\n            // write to storage\n            if ( page.currStorage && page.currStorage.label ) {\n                path = page.currStorage.mountPath + '/records/' + name + '/';\n                path += page.panelAdd.startYear.current.value + '-' + page.panelAdd.startMonth.current.value + '-';\n                path += page.panelAdd.startDay.current.value + '/' + page.panelAdd.input.innerText + '.ts';\n                pvr.add({\n                    name: path,\n                    channel: uri,\n                    startTime: Math.ceil(startDate.getTime() / 1000),\n                    endTime: Math.ceil(endDate.getTime() / 1000)\n                }, function ( item, error ) {\n                    if ( error ) {\n                        window.core.notify({title: pvrErrorCodes[error.code], icon: 'alert', type: 'warning'});\n                    } else {\n                        if ( app.intent && app.intent.close ) {\n                            app.intent.close();\n                            app.intent = null;\n                        }\n                        app.route(app.pages.main);\n                    }\n                });\n            } else if ( MODE === 'MINISTRA' && page.currStorage === 'Server' && spvr.enabled ) {\n                // or to server\n                spvr.add({\n                    id: recordId,\n                    startTime: Math.ceil(startDate.getTime() / 1000),\n                    endTime: Math.ceil(endDate.getTime() / 1000)\n                }, function ( error ) {\n                    //console.log('add callback called');\n                    if ( error ) {\n                        console.log('error.code' + error.code + '  typeof ' + typeof error.code + ' error.message:' + error.message);\n                        if ( spvrErrorCodes[error.code] ) {\n                            // show our own custom localised error message\n                            core.notify({title: spvrErrorCodes[error.code], icon: 'alert', type: 'warning'});\n                        } else {\n                            // or use default one\n                            core.notify({title: error.message, icon: 'alert', type: 'warning'});\n                        }\n                    } else {\n                        if ( app.intent && app.intent.close ) {\n                            app.intent.close();\n                            app.intent = null;\n                        }\n                        app.route(app.pages.main);\n                    }\n                });\n            } else if ( page.currStorage === null ) {\n                window.core.notify({title: gettext('No storage device.'), icon: 'alert', type: 'warning'});\n            } else {\n                window.core.notify({title: gettext('Recording not allowed'), icon: 'alert', type: 'warning'});\n            }\n        },\n        keydown: function ( event ) {\n            if ( event.code === keys.up ) {\n                page.panelAdd.list.$focusItem.classList.add('focus');\n                page.panelAdd.list.focus();\n                page.panelAdd.list.focusIndex(page.panelAdd.list.data.length - 1);\n            } else if ( event.code === keys.down ) {\n                page.panelAdd.list.$focusItem.classList.add('focus');\n                page.panelAdd.list.focus();\n                page.panelAdd.list.focusIndex(0);\n            } else if ( event.code === keys.ok ) {\n                if ( page.panelAdd.button.events['click'] ) {\n                    page.panelAdd.button.emit('click', {event: event});\n                }\n            }\n        }\n    }\n}));\n\n// panel set: add record\npage.panelSet = new PanelSet({\n    visible: true,\n    $node: document.getElementById('panelSetAdd'),\n    focusIndex: 0,\n    panels: [page.panelAdd]\n});\npage.panelSet.reset = function ( config ) {\n    var $text, free, all,\n        $textWrapper = page.panelAdd.list.$body.children[3].children[0].children[1],\n        allowStorage = app.intent ? app.intent.data.pvr.local : true,\n        allowServer  = app.intent ? app.intent.data.pvr.server : true;\n\n    if ( config && config.storage && config.storage.size && allowStorage ) {\n        // selected storage\n        free = gettext('Free space:') + ' ' + tools.convert(config.storage.freeSize);\n        all = tools.convert(config.storage.size);\n        $text = dom.fragment(\n            dom.tag('div', {className: 'itemHalf'}, config.storage.label),\n            dom.tag('div', {className: 'itemHalf'}, free + gettext(' of ') + all)\n        );\n        page.currStorage = config.storage;\n    } else if ( MODE === 'MINISTRA' && allowServer && spvr && spvr.enabled ) {\n        // server by default (if allowed)\n        $text = document.createTextNode(gettext('Server'));\n        page.currStorage = 'Server';\n    } else if ( allowStorage && app.storages.length ) {\n        // first storage by default (if allowed)\n        free = gettext('Free space:') + ' ' + tools.convert(app.storages[0].freeSize);\n        all = tools.convert(app.storages[0].size);\n        $text = dom.fragment(\n            dom.tag('div', {className: 'itemHalf'}, app.storages[0].label),\n            dom.tag('div', {className: 'itemHalf'}, free + gettext(' of ') + all)\n        );\n        page.currStorage = app.storages[0];\n    } else if ( allowStorage ) {\n        // no storage (if allowed)\n        $text = document.createTextNode(gettext('No storage device.'));\n        page.currStorage = null;\n    } else {\n        // nothing is allowed\n        $text = document.createTextNode(gettext('Recording not allowed'));\n        page.currStorage = undefined;\n    }\n    while ( $textWrapper.firstChild ) {\n        $textWrapper.removeChild($textWrapper.firstChild);\n    }\n    $textWrapper.appendChild($text);\n    page.panelAdd.list.$focusItem.classList.add('focus');\n    page.panelAdd.list.focus();\n};\npage.add(page.panelSet);\n\n\npage.addListener('keydown', function ( event ) {\n    switch ( event.code ) {\n        case keys.back:\n            if ( app.intent && app.intent.close ) {\n                app.intent.close();\n                app.intent = null;\n            }\n            app.route(app.pages.main);\n            break;\n    }\n});\n\npage.reset = function () {\n    // merge option tell us to left, if possible, all fields as they were\n    var merge       = app.intent && app.intent.data.merge,\n        channelName = app.intent ? app.intent.data.name : gettext('Select channel'),\n        start       = new Date(),\n        end         = new Date(\n            start.getFullYear(),\n            start.getMonth(),\n            start.getDate(),\n            start.getHours() === 23 ? 0 : start.getHours() + 1,\n            start.getMinutes()\n        ),\n        minutes     = tools.dates.minutes.slice(),\n        hours       = tools.dates.hours.slice(),\n        days        = tools.dates.days.slice(),\n        months      = tools.dates.months.slice(),\n        years       = tools.dates.years.slice(),\n        fileName;\n\n    if ( app.intent && app.intent.data.startTime ) {\n        start.setTime(app.intent.data.startTime * 1000);\n        end.setTime(app.intent.data.endTime * 1000);\n    }\n    // set channel name\n    page.panelAdd.list.$body.children[0].children[0].children[1].innerText = channelName;\n    if ( !merge ) {\n        // set start time\n        page.panelAdd.startMinute.init({data: minutes.slice(), index: getIndex(start.getMinutes(), minutes.slice())});\n        page.panelAdd.startHour.init({data: hours.slice(), index: getIndex(start.getHours(), hours.slice())});\n        page.panelAdd.startDay.init({data: days.slice(), index: getIndex(start.getDate(), days.slice())});\n        page.panelAdd.startMonth.init({data: months.slice(), index: getIndex(start.getMonth() + 1, months.slice())});\n        page.panelAdd.startYear.init({data: years.slice(), index: getIndex(start.getFullYear(), years.slice())});\n        // set end time\n        page.panelAdd.endMinute.init({data: minutes.slice(), index: getIndex(end.getMinutes(), minutes.slice())});\n        page.panelAdd.endHour.init({data: hours.slice(), index: getIndex(end.getHours(), hours.slice())});\n        page.panelAdd.endDay.init({data: days.slice(), index: getIndex(end.getDate(), days.slice())});\n        page.panelAdd.endMonth.init({data: months.slice(), index: getIndex(end.getMonth() + 1, months.slice())});\n        page.panelAdd.endYear.init({data: years.slice(), index: getIndex(end.getFullYear(), years.slice())});\n        // set file name\n        fileName = page.panelAdd.startHour.current.value + '-' + page.panelAdd.startMinute.current.value + '-';\n        fileName += (start.getSeconds() < 10 ? '0' + start.getSeconds() : start.getSeconds());\n        page.panelAdd.input.innerText = fileName;\n    }\n    // hide modal\n    if ( page.modalSelectDevice.visible ) {\n        page.modalSelectDevice.hide();\n        page.panelSet.focus();\n    }\n    // set default storage\n    page.panelSet.reset(merge && page.currStorage && page.currStorage.freeSize ? {storage: page.currStorage} : null);\n};\n\npage.addListener('show', function () {\n    page.reset();\n    page.panelSet.focus();\n});\n\n\n// public\nmodule.exports = page;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n\n/**\n * Value list implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array} [config.data] data to display\n * @param {function} [config.render] function to render data\n * @param {number} [config.index] index of start position to display data\n */\nfunction ValueList ( config ) {\n\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    //config.className = 'valueList ' + (config.className || '');\n\n    /**\n     * Component data\n     *\n     * @type {Array}\n     */\n    this.data = [];\n\n    /**\n     * Current data index\n     *\n     * @type {number}\n     */\n    this.currentIndex = 0;\n\n    /**\n     * Current value\n     *\n     * @type {null}\n     */\n    this.current = null;\n\n    /**\n     *\n     * @type {boolean}\n     */\n    this.cycle = false;\n\n    Component.call(this, config);\n\n    this.init(config);\n}\n\n// inheritance\nValueList.prototype = Object.create(Component.prototype);\nValueList.prototype.constructor = ValueList;\n\n// set component name\nValueList.prototype.name = 'mag-component-value-list';\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var index, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( index = 0; index < data.length; index++ ) {\n        // cell value\n        item = data[index];\n        // primitive value\n        if ( typeof item !== 'object' ) {\n            // wrap with defaults\n            item = data[index] = {\n                value: data[index]\n            };\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or reinit component\n *\n * @param {Object} config of component\n */\nValueList.prototype.init = function ( config ) {\n\n    if ( config.cycle ) { this.cycle = config.cycle; }\n\n    if ( config.render ) {\n        // apply render function\n        this.renderValue = config.render;\n    }\n\n    if ( config.data ) {\n        if ( DEVELOP ) {\n            if ( config.index && config.index > config.data.length - 1 || config.index < 0 ) {\n                throw new Error(__filename + ': config.index should be positive and less then data size');\n            }\n            if ( config.render && typeof config.render !== 'function' ) {\n                throw new Error(__filename + ': wrong config.render type');\n            }\n            if ( config.data && !Array.isArray(config.data) ) {\n                throw new Error(__filename + ': wrong data type');\n            }\n        }\n\n        this.data = normalize(config.data);\n        if ( config.index ) {\n            this.currentIndex = config.index;\n        }\n        this.current = this.data[this.currentIndex];\n        // no render if no data\n        this.updateData();\n    }\n};\n\n\n/**\n * Default render function\n *\n * @param {Element} $body item DOM link\n */\nValueList.prototype.renderValueDefault = function ( $body ) {\n    $body.innerText = this.current.value;\n};\n\n\n/**\n * Method to render data\n * Can be redefined to provide custom rendering.\n *\n * @type {function}\n */\nValueList.prototype.renderValue = ValueList.prototype.renderValueDefault;\n\n\n/**\n * Update current display data\n */\nValueList.prototype.updateData = function () {\n    this.renderValue(this.$body);\n    /**\n     * Change current data\n     *\n     * @event\n     *\n     * @type {Object}\n     * @property {object} current data\n     */\n    this.emit('data:change', {current: this.current});\n};\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nValueList.prototype.defaultEvents = {\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.down:\n            case keys.up:\n                this.change(event.code);\n                break;\n        }\n    }\n};\n\n\n/**\n * Attempt to go beyond the edge of the list.\n *\n * @event overflow\n *\n * @type {Object}\n * @property {number} direction key code initiator of movement\n * @property {boolean} cycle if cycle change happen\n */\n\n/**\n * Change display data\n *\n * @param {number} direction to change data\n * @fires overflow\n */\nValueList.prototype.change = function ( direction ) {\n    switch ( direction ) {\n        case keys.down:\n            if ( this.currentIndex + 1 < this.data.length ) {\n                this.currentIndex++;\n                this.current = this.data[this.currentIndex];\n                this.updateData();\n            } else {\n                if ( this.cycle ) {\n                    this.currentIndex = 0;\n                    this.current = this.data[0];\n                    this.updateData();\n                }\n                this.emit('overflow', {direction: direction, cycle: this.cycle});\n            }\n            break;\n        case keys.up:\n            if ( this.currentIndex > 0) {\n                this.currentIndex--;\n                this.current = this.data[this.currentIndex];\n                this.updateData();\n            } else {\n                if ( this.cycle ) {\n                    this.currentIndex = this.data.length - 1;\n                    this.current = this.data[this.currentIndex];\n                    this.updateData();\n                }\n                this.emit('overflow', {direction: direction, cycle: this.cycle});\n            }\n            break;\n    }\n};\n\n\nmodule.exports = ValueList;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-modal');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-modal';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base modal window implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n */\nfunction Modal ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body ) {\n            throw new Error(__filename + ': config.$body should not be provided manually');\n        }\n    }\n\n    // create centered div\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // add table-cell wrapper\n    this.$node.appendChild(document.createElement('div').appendChild(this.$body).parentNode);\n}\n\n\n// inheritance\nModal.prototype = Object.create(Component.prototype);\nModal.prototype.constructor = Modal;\n\n// set component name\nModal.prototype.name = 'spa-component-modal';\n\n\n// public\nmodule.exports = Modal;\n","/**\n * Main page implementation.\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar id            = 'pageChannels',\n    app           = require('mag-app'),\n    appConfig     = require('../config'),\n    Page          = require('stb-component-page'),\n    Scroll        = require('stb-component-scrollbar'),\n    page          = new Page({$node: document.getElementById(id)}),\n    PanelSet      = require('mag-component-panel-set'),\n    PanelExtended = require('mag-component-panel'),\n    LayoutList    = require('mag-component-layout-list'),\n    dom           = require('spa-dom'),\n    keys          = require('stb-keys'),\n    Button        = require('stb-component-button'),\n    Flicker       = require('spa-component-flicker'),\n    Footer        = require('mag-component-footer');\n\n\npage.clock = new Flicker({\n    className: 'clock',\n    interval: 1000,\n    render: function ( $item ) {\n        var time  = new Date(),\n            hours = time.getHours(),\n            mins  = time.getMinutes();\n\n        $item.innerText = (hours > 9 ? hours : '0' + hours) + ':' + (mins > 9 ? mins : '0' + mins);\n    }\n});\npage.add(page.clock);\npage.clock.start();\n\npage.footer = new Footer({\n    visible: true,\n    parent: page,\n    data: [\n        {\n            code: keys.f4,\n            title: gettext('Search'),\n            action: function () {\n                if ( page.panelSelect.list.$focusItem ) {\n                    page.panelSelect.list.$focusItem.classList.remove('focus');\n                }\n                page.panelSelect.searchHolder.focus();\n            }\n        }\n    ]\n});\n\n// panel: add new record\npage.panelSelect = new PanelExtended({\n    title: gettext('Select channel'),\n    main: true,\n    visible: true,\n    className: 'panelSelect'\n});\n\npage.panelSelect.searchHolder = new Button({\n    className: 'panelInput',\n    events: {\n        keydown: function ( event ) {\n            switch ( event.code ) {\n                case keys.ok:\n                    window.core.intent({\n                        action: 'keyboard',\n                        data: {\n                            type: 'text',\n                            mode: 'qwerty',\n                            title: gettext('ENTER CHANNEL'),\n                            description: gettext('RECORDS'),\n                            value: page.panelSelect.input.innerText\n                        },\n                        events: {\n                            done: function ( doneEvent ) {\n                                page.panelSelect.input.innerText = doneEvent.value;\n                                appConfig.chansSearch = doneEvent.value;\n                                if ( page.panelSelect.list.$focusItem ) { page.panelSelect.list.$focusItem.index = 0; }\n                                page.panelSet.reset();\n                            }\n                        }\n                    }, function ( error ) {\n                        console.log(error);\n                    });\n                    break;\n                case keys.up:\n                case keys.down:\n                    if ( page.panelSelect.list.data.length ) {\n                        page.panelSelect.list.focus();\n                        if ( page.panelSelect.list.$focusItem ) {\n                            page.panelSelect.list.$focusItem.classList.add('focus');\n                        }\n                    }\n                    break;\n            }\n        }\n    }\n});\n\npage.panelSelect.searchHolder.$body.appendChild(dom.tag('div', {className: 'theme-icon theme-icon-search'}));\npage.panelSelect.searchHolder.$body.appendChild(page.panelSelect.input = dom.tag('div', {className: 'searchInput'}));\n\npage.panelSelect.scroll = new Scroll({});\n\npage.panelSelect.list = new LayoutList({\n    scroll: page.panelSelect.scroll,\n    noData: gettext('No channels'),\n    focusIndex: 0,\n    size: 6,\n    data: [],\n    events: {\n        overflow: function () {\n            if ( page.panelSelect.list.$focusItem ) {\n                page.panelSelect.list.$focusItem.classList.remove('focus');\n            }\n            page.panelSelect.searchHolder.focus();\n        },\n        'click:item': function ( event ) {\n            function startRecord ( data ) {\n                app.intent = {\n                    action: 'record',\n                    data: {\n                        uri: data.url,\n                        name: data.name,\n                        id: data.id,\n                        censored: data.censored || (data.genre && data.genre.censored),\n                        pvr: {\n                            local: data.local_pvr,\n                            server: data.pvr\n                        },\n                        merge: true\n                    }\n                };\n            }\n\n            if ( (window.core.accessControl && !window.core.accessControl.state) &&\n                (event.$item.data.value.censored || (event.$item.data.value.genre && event.$item.data.value.genre.censored)) ) {\n                window.core.accessControl.request(function ( error ) {\n                    if ( !error ) {\n                        startRecord(event.$item.data.value);\n                        app.route(app.pages.add);\n                    }\n                });\n            } else {\n                startRecord(event.$item.data.value);\n                app.route(app.pages.add);\n            }\n        },\n        keydown: function ( event ) {\n            LayoutList.prototype.defaultEvents.keydown.call(this, event);\n        },\n        'data:error': function ( event ) {\n            debug.log('List error get data', 'red');\n            debug.log(event);\n        }\n    }\n});\n\npage.panelSelect.add(page.panelSelect.searchHolder, page.panelSelect.list, page.panelSelect.scroll);\n\npage.panelSet = new PanelSet({\n    visible: true,\n    $node: document.getElementById('panelSetChans'),\n    focusIndex: 0,\n    panels: [page.panelSelect]\n});\npage.panelSet.reset = function () {\n    if ( window.core.plugins.tvBackend ) {\n        window.core.plugins.tvBackend.getChannels({\n            search: appConfig.chansSearch,\n            pvr: true\n        }, function ( error, data ) {\n            var index,\n                result = [];\n\n            if ( error ) {\n                debug.log('core.plugins.tvBackend.getChannels function returned error');\n            }\n            if ( !data || data.length < 1 ) {\n                page.panelSelect.list.init({data: []});\n                page.footer.hide();\n                page.panelSelect.scroll.hide();\n\n                return;\n            }\n            for ( index = 0; index < data.length; index++ ) {\n                result[index] = {\n                    items: [\n                        {className: 'number', value: data[index].number.toString()},\n                        {className: 'title', value: data[index].name},\n                        {className: 'placeholder ' + (data[index].censored ? ' theme-icon theme-icon-lock' : '')}\n                    ],\n                    value: data[index]\n                };\n            }\n            page.panelSelect.list.init({\n                data: result,\n                focusIndex: page.panelSelect.list.$focusItem ? page.panelSelect.list.$focusItem.index : 0\n            });\n            page.panelSelect.scroll.init({realSize: data.length, viewSize: 6});\n            page.panelSelect.show();\n            page.footer.show();\n            page.panelSelect.list.$focusItem.classList.add('focus');\n            page.panelSelect.list.focus();\n        });\n    } else {\n        page.panelSelect.list.init({data: [], focusIndex: 0});\n        page.panelSelect.scroll.init({realSize: 0, viewSize: 6});\n        page.panelSelect.show();\n        page.footer.show();\n        page.panelSelect.searchHolder.focus();\n    }\n};\npage.add(page.panelSet);\n\n\npage.addListener('keydown', function ( event ) {\n    switch ( event.code ) {\n        case keys.back:\n            app.route(app.pages.add);\n            break;\n    }\n});\n\npage.reset = function () {\n    page.panelSelect.input.innerText = (appConfig.chansSearch || '');\n    page.panelSet.reset();\n};\n\npage.addListener('show', function () {\n    page.panelSet.focus();\n    page.reset();\n});\n\n\n// public\nmodule.exports = page;\n","/**\n * Main page implementation.\n *\n * @author Stanislav Kalashnik <sk@infomir.eu>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\nvar id            = 'pageMain',\n    Page          = require('stb-component-page'),\n    app           = require('mag-app'),\n    appConfig     = require('../config'),\n    page          = new Page({$node: document.getElementById(id)}),\n    PanelSet      = require('mag-component-panel-set'),\n    PanelExtended = require('mag-component-panel'),\n    LayoutList    = require('mag-component-layout-list'),\n    ModalMessage  = require('mag-component-modal'),\n    RadioList     = require('mag-component-radio-list'),\n    dom           = require('spa-dom'),\n    keys          = require('stb-keys'),\n    tools         = require('../modules/tools'),\n    Scroll        = require('stb-component-scrollbar'),\n    fileSystem    = window.core.plugins.fs,\n    pvr           = app.pvr,\n    recordStates  = pvr.recordStates,\n    Flicker       = require('spa-component-flicker'),\n    Footer        = require('mag-component-footer'),\n    ScrollArea    = require('mag-component-scroll-area'),\n    pvrErrorCodes = {\n        '-1': gettext('Wrong record parameters.'),\n        '-2': gettext('Not enough memory.'),\n        '-3': gettext('Wrong record range. Record lenth must be less than or equal 24 hours.'),\n        '-4': gettext('Task with specified ID was not found.'),\n        '-5': gettext('Wrong file name. Folder where you want to save recording must exist.'),\n        '-6': gettext('Record with that name already exists.'),\n        '-7': gettext('Error opening stream URL.'),\n        '-8': gettext('Error opening file.'),\n        '-9': gettext('Maximum number of simultaneous recording is exceeded.'),\n        '-10': gettext('Records app got a thread exit notification. File record is over.'),\n        '-11': gettext('Error writing file. Probably the disk is full or has been disconnected during recording.'),\n        '-12': gettext('Wrong record url.'),\n        '-13': gettext('Wrong file name.'),\n        '-14': gettext('Wrong record start time.'),\n        '-15': gettext('Wrong record end time.'),\n        '-16': gettext('Bad record.')\n    },\n    stateToClass  = {},\n    $channelsCountWrapper, $channelsCount, spvr, svrErrorCodes;\n\n\n// define class name for each state\nstateToClass[recordStates.WAITING] = 'theme-icon-clock theme-color-error';\nstateToClass[recordStates.RECORDING] = 'theme-icon-play';\nstateToClass[recordStates.ERROR] = 'theme-icon-warning theme-color-warning';\nstateToClass[recordStates.FINISHED] = 'theme-icon-ok theme-color-success';\n\n\nif ( MODE === 'MINISTRA' ) {\n    // stalker have server pvr so we can use it\n    spvr = app.spvr;\n    svrErrorCodes = {\n        '-1': gettext('Wrong channel id.'),\n        '-2': gettext('Server error.'),\n        '-3': gettext('Bad record.')\n    };\n    if ( window.core.plugins.tvBackend ) {\n        // update channels\n        window.core.plugins.tvBackend.updateChannelsList(function ( error ) {\n            if ( error ) { console.log('channel list update error'); }\n        });\n    }\n}\n\n$channelsCountWrapper = dom.tag(\n    'div',\n    {className: 'amountContainer'},\n    $channelsCount = dom.tag('div', {className: 'amount'}, '0')\n);\n\n\napp.storages = fileSystem.getMountPoints().concat(fileSystem.getHDDInfo());\napp.records = [];\n\npage.clock = new Flicker({\n    className: 'clock',\n    interval: 1000,\n    render: function ( $item ) {\n        var time  = new Date(),\n            hours = time.getHours(),\n            mins  = time.getMinutes();\n\n        $item.innerText = (hours > 9 ? hours : '0' + hours) + ':' + (mins > 9 ? mins : '0' + mins);\n    }\n});\npage.add(page.clock);\npage.clock.start();\n\npage.footer = new Footer({visible: false, parent: page});\n\nfileSystem.onMount = function ( state ) {\n    debug.log('onMount: ' + state);\n    app.storages = fileSystem.getMountPoints().concat(fileSystem.getHDDInfo());\n    if ( app.pages.add.active ) {\n        if ( app.pages.add.modalSelectDevice.visible ) {\n            app.pages.add.modalSelectDevice.hide();\n        }\n        app.pages.add.panelSet.reset();\n        app.pages.add.panelSet.focus();\n    }\n};\n\npage.playFocusedFile = function () {\n    // focused file data\n    var item = page.middlePanel.list.$focusItem.data.items[1].record;\n\n    if ( item.data.state === item.states.FINISHED ) {\n        if ( MODE === 'MINISTRA' && item.data.server ) {\n            spvr.getFileUrl(item, function ( error, result ) {\n                if ( error ) {\n                    window.core.notify({title: svrErrorCodes[error.code], icon: 'alert', type: 'warning'});\n                } else {\n                    window.core.intent({\n                        action: 'play',\n                        mime: 'content/video',\n                        data: {\n                            uri: result.url,\n                            title: item.data.name,\n                            mediaId: result.mediaId\n                        }\n                    }, function ( error ) {\n                        if ( error ) { window.core.notify({title: error.message, icon: 'alert', type: 'warning'}); }\n                    });\n                }\n            });\n        } else {\n            window.core.intent({\n                action: 'play',\n                mime: 'content/video',\n                data: {\n                    uri: item.data.path,\n                    title: item.data.name\n                }\n            }, function ( error ) {\n                if ( error ) { window.core.notify({title: error.message, icon: 'alert', type: 'warning'}); }\n            });\n        }\n        //     debug.log('send to play: ' + item.data.path);\n    }\n};\npage.deleteFocusedTask = function () {\n    var item;\n\n    if ( page.middlePanel.list.$focusItem && page.middlePanel.list.$focusItem.data ) {\n        item = page.middlePanel.list.$focusItem.data.items[1].record;\n        if ( MODE === 'MINISTRA' && item.data.server ) {\n            spvr.remove(item, function ( error ) {\n                if ( error ) {\n                    window.core.notify({title: svrErrorCodes[error.code], icon: 'alert', type: 'warning'});\n                }\n                page.modalActions.hide();\n                page.middlePanel.focus();\n                page.middlePanel.reset();\n            });\n        } else {\n            pvr.remove(item, {deleteFile: false}, function ( recordItem, error ) {\n                if ( error ) {\n                    window.core.notify({title: pvrErrorCodes[error.code], icon: 'alert', type: 'warning'});\n                }\n                page.modalActions.hide();\n                page.middlePanel.focus();\n                page.middlePanel.reset();\n            });\n        }\n    }\n};\npage.stopFocusedTask = function () {\n    var item;\n\n    if ( page.middlePanel.list.$focusItem && page.middlePanel.list.$focusItem.data ) {\n        item = page.middlePanel.list.$focusItem.data.items[1].record;\n        item.stop(item, function ( error ) {\n            if ( error ) { window.core.notify({title: pvrErrorCodes[error.code], icon: 'alert', type: 'warning'}); }\n        });\n    }\n};\npage.downloadFocusedTask = function () {\n    var item;\n\n    if ( page.middlePanel.list.$focusItem && page.middlePanel.list.$focusItem.data ) {\n        item = page.middlePanel.list.$focusItem.data.items[1].record;\n        if ( MODE === 'MINISTRA' && item.data.state === item.states.FINISHED && item.data.server ) {\n            spvr.getFileUrl(item, function ( error, result ) {\n                if ( error ) {\n                    window.core.notify({title: svrErrorCodes[error.code], icon: 'alert', type: 'warning'});\n                } else {\n                    // debug.info('send intent with data');\n                    // debug.info(JSON.stringify({\n                    //     action: 'download',\n                    //     data: {uri: result.url, title: item.data.name}\n                    // }));\n                    window.core.intent({\n                        action: 'download',\n                        data: {uri: result.url, title: item.data.name}\n                    }, function ( error ) {\n                        if ( error ) { window.core.notify({title: error.message, icon: 'alert', type: 'warning'}); }\n                    });\n                }\n            });\n        }\n        // debug.log('send to play: ' + item.data.path);\n    }\n};\npage.resetFilters = function () {\n    var $catChilds = page.leftPanel.list.$body.children[2].layout.$node.children;\n\n    // reset search filter\n    appConfig.list.filterSearch = '';\n    page.leftPanel.search.innerText = gettext('Search');\n    page.leftPanel.list.$body.children[1].children[0].children[0].classList.remove('active');\n\n    // reset status filter and corresponding modal window\n    if ( appConfig.list.filterStatus ) {\n        appConfig.list.filterStatus = null;\n        page.modalFilterStatus.children[0].resetData();\n        $catChilds[1].innerText = gettext('All categories');\n        $catChilds[0].classList.remove('active');\n    }\n\n    page.footer.hide();\n    page.middlePanel.reset();\n};\n\n// modal message: reset all filters\npage.modalReset = new ModalMessage({\n    visible: false,\n    title: gettext('actions'),\n    events: {\n        show: function () { this.focus(); },\n        hide: function () { page.leftPanel.focus(); }\n    },\n    children: [\n        new LayoutList({\n            cycle: true,\n            size: 1,\n            data: [\n                {\n                    items: [\n                        {className: 'theme-icon theme-icon-rc-f1', value: ''},\n                        {value: gettext('Reset filters')}\n                    ],\n                    click: function () {\n                        page.resetFilters();\n                        page.modalReset.hide();\n                        page.panelSet.focus();\n                    }\n                }\n            ],\n            propagate: true\n        })\n    ]\n});\npage.add(page.modalReset);\n\n// modal message: do something with record\npage.modalActions = new ModalMessage({\n    visible: false,\n    title: gettext('actions'),\n    events: {\n        show: function () {\n            this.focus();\n        },\n        hide: function () {\n            page.middlePanel.focus();\n        }\n    },\n    children: [\n        new LayoutList({\n            cycle: true,\n            data: [],\n            propagate: true\n        })\n    ]\n});\npage.modalActions.fill = function ( data ) {\n    // Timeout 1 of 2\n    // Was added to fix visual artifacts during long and buggy dom rendering at mag322\n    setTimeout(function () {\n        var recordData = data.$item.data.items[1].record.data,\n            record     = data.$item.data.items[1].record,\n            body       = [\n                {\n                    items: [\n                        {className: 'theme-icon', value: ''},\n                        {value: gettext('Details')}\n                    ],\n                    click: function () {\n                        page.modalActions.hide();\n                        page.panelSet.blur();\n                        app.route(app.pages.info, page.middlePanel.list.$focusItem);\n                    }\n                }, {\n                    items: [\n                        {className: 'theme-icon theme-icon-rc-f1', value: ''},\n                        {value: gettext('Delete task')}\n                    ],\n                    click: page.deleteFocusedTask\n                }\n            ];\n\n        // play finished record\n        if ( recordData.state === record.states.FINISHED ) {\n            body.unshift({\n                items: [{className: 'theme-icon theme-icon-play', value: ''}, {value: gettext('Play file')}],\n                click: function () {\n                    page.modalActions.hide();\n                    page.panelSet.focus();\n                    page.playFocusedFile();\n                }\n            });\n            if ( MODE === 'MINISTRA' && recordData.server && recordData.downloadable ) {\n                body.unshift({\n                    items: [{className: 'theme-icon', value: ''}, {value: gettext('Download file')}],\n                    click: function () {\n                        page.modalActions.hide();\n                        page.panelSet.focus();\n                        page.downloadFocusedTask();\n                    }\n                });\n            }\n        }\n        // stop active record\n        if ( recordData.state === record.states.RECORDING ) {\n            body.unshift({\n                items: [{className: 'theme-icon', value: ''}, {value: gettext('Stop recording')}],\n                click: function () {\n                    page.modalActions.hide();\n                    page.panelSet.focus();\n                    page.stopFocusedTask();\n                }\n            });\n        }\n        // add file deletion if local pvr\n        if ( !recordData.server ) {\n            body.push({\n                items: [\n                    {className: 'theme-icon', value: ''},\n                    {value: gettext('Delete task and file')}\n                ],\n                click: function () {\n                    var recordItem;\n\n                    if ( page.middlePanel.list.$focusItem && page.middlePanel.list.$focusItem.data ) {\n                        recordItem = page.middlePanel.list.$focusItem.data.items[1].record;\n                        pvr.remove(recordItem, {deleteFile: true}, function ( sameRecordItem, error ) {\n                            if ( error ) {\n                                window.core.notify({\n                                    title: pvrErrorCodes[error.code],\n                                    icon: 'alert',\n                                    type: 'warning'\n                                });\n                            }\n                            page.modalActions.hide();\n                            page.middlePanel.focus();\n                            page.middlePanel.reset();\n                        });\n                    }\n                }\n            });\n        }\n        page.modalActions.children[0].init({data: body, size: body.length, focusIndex: 0});\n\n        // Timeout 2 of 2\n        // Was added to fix visual artifacts during long and buggy dom rendering at mag322\n        setTimeout(function () {\n            page.modalActions.show();\n        }, 0);\n    }, 0);\n};\npage.add(page.modalActions);\n\n\n// modal message: filter by record status\npage.modalFilterStatus = new ModalMessage({\n    visible: false,\n    title: gettext('categories'),\n    events: {\n        show: function () { this.focus(); },\n        hide: function () { page.panelSet.focus(); }\n    },\n    children: [\n        new RadioList({\n            cycle: true,\n            focusIndex: 0,\n            size: 5,\n            data: [\n                {state: true, title: gettext('All categories'), value: null},\n                {state: false, title: gettext('Waiting'), value: 1},\n                {state: false, title: gettext('In progress'), value: 2},\n                {state: false, title: gettext('Error'), value: 3},\n                {state: false, title: gettext('Completed'), value: 4}\n            ],\n            events: {\n                'click:item': function ( event ) {\n                    var $item = page.leftPanel.list.$body.children[2].children[0];\n\n                    if ( event.$item.data.value ) {\n                        $item.children[0].classList.add('active');\n                    } else {\n                        $item.children[0].classList.remove('active');\n                    }\n                    $item.children[1].innerText = event.$item.data.title;\n                    appConfig.list.filterStatus = event.$item.data.value;\n                    page.middlePanel.reset();\n                    page.modalFilterStatus.hide();\n                }\n            },\n            propagate: true\n        })\n    ]\n});\npage.add(page.modalFilterStatus);\n\n// modal message: sort\npage.modalSort = new ModalMessage({\n    visible: false,\n    title: gettext('sort'),\n    events: {\n        show: function () { this.focus(); },\n        hide: function () { page.panelSet.focus(); }\n    },\n    children: [\n        new RadioList({\n            cycle: true,\n            focusIndex: 0,\n            size: 3,\n            data: [\n                {state: true, title: gettext('By name'), value: 0},\n                {state: false, title: gettext('By category'), value: 1},\n                {state: false, title: gettext('By date'), value: 2}\n            ],\n            events: {\n                'click:item': function ( event ) {\n                    page.leftPanel.list.$focusItem.layout.$node.children[1].innerText = event.$item.data.title;\n                    appConfig.list.sort = event.$item.data.value;\n                    page.middlePanel.reset();\n                    page.modalSort.hide();\n                }\n            },\n            propagate: true\n        })\n    ]\n});\npage.add(page.modalSort);\n\n// modal message: exit\npage.modalExit = new ModalMessage({\n    title: gettext('Exit'),\n    className: 'modalExit',\n    events: {\n        show: function () { this.children[0].focus(); },\n        hide: function () { page.panelSet.focus(); }\n    },\n    children: [\n        new LayoutList({\n            size: 2,\n            focusIndex: 0,\n            data: [\n                {\n                    items: [{value: gettext('Yes')}],\n                    click: function () {\n                        page.modalExit.hide();\n                        app.exit();\n                    }\n                },\n                {\n                    items: [{value: gettext('No')}],\n                    click: function () { page.modalExit.hide(); }\n                }\n            ],\n            propagate: true\n        })\n    ]\n});\npage.add(page.modalExit);\n\n// left panel (menu)\npage.leftPanel = new PanelExtended({title: gettext('Menu'), children: [], className: 'leftPanel'});\npage.leftPanel.add(page.leftPanel.list = new LayoutList({\n    cycle: true,\n    focusIndex: 0,\n    size: 5,\n    data: [\n        {\n            items: [{className: 'theme-icon theme-icon-plus', value: ''}, {value: gettext('Create')}],\n            click: function () {\n                page.panelSet.blur();\n                app.route(app.pages.add);\n            }\n        },\n        {\n            items: [\n                {className: 'theme-icon theme-icon-search', value: ''},\n                page.leftPanel.search = dom.tag('div', {className: 'searchText'}, gettext('Search'))\n            ],\n            click: function () {\n                var inputText = page.leftPanel.search.innerText;\n\n                window.core.intent({\n                    action: 'keyboard',\n                    data: {\n                        type: 'text',\n                        mode: 'qwerty',\n                        title: gettext('SEARCH RECORDS'),\n                        description: gettext('RECORDS'),\n                        value: inputText === gettext('Search') ? '' : inputText\n                    },\n                    events: {\n                        done: function ( event ) {\n                            var $icon = page.leftPanel.list.$body.children[1].children[0].children[0];\n\n                            if ( event.value ) {\n                                $icon.classList.add('active');\n                            } else {\n                                $icon.classList.remove('active');\n                            }\n                            page.leftPanel.search.innerText = event.value || gettext('Search');\n                            appConfig.list.filterSearch = event.value;\n                            page.middlePanel.reset();\n                        }\n                    }\n                }, function ( error ) {\n                    console.log(error);\n                });\n            }\n        },\n        {\n            items: [\n                {className: 'theme-icon theme-icon-categories', value: ''},\n                {className: 'theme-item-more', value: gettext('All categories')}\n            ],\n            click: function () {\n                page.panelSet.blur();\n                page.modalFilterStatus.show();\n            }\n        },\n        {\n            items: [\n                {className: 'theme-icon theme-icon-sort-az', value: ''},\n                {className: 'theme-item-more', value: gettext('By name')}\n            ],\n            click: function () {\n                page.panelSet.blur();\n                page.modalSort.show();\n            }\n        },\n        {\n            items: [{className: 'theme-icon theme-icon-exit', value: ''}, {value: gettext('Exit')}],\n            click: function () {\n                page.panelSet.blur();\n                page.modalExit.show();\n            }\n        }\n    ],\n    events: {\n        'focus:item': function () {\n            if ( appConfig.list.filterSearch || appConfig.list.filterStatus ) {\n                page.footer.init({\n                    middle: [{code: keys.f1, title: gettext('Reset filters'), action: page.resetFilters}],\n                    left: {\n                        code: keys.menu,\n                        action: function () {\n                            page.panelSet.blur();\n                            page.modalReset.show();\n                        }\n                    }\n                });\n                page.footer.show();\n            } else {\n                page.footer.hide();\n            }\n        },\n        focus: function () {\n            if ( appConfig.list.filterSearch || appConfig.list.filterStatus ) {\n                page.footer.init({\n                    middle: [{code: keys.f1, title: gettext('Reset filters'), action: page.resetFilters}],\n                    left: {\n                        code: keys.menu,\n                        action: function () {\n                            page.panelSet.blur();\n                            page.modalReset.show();\n                        }\n                    }\n                });\n                page.footer.show();\n            } else {\n                page.footer.hide();\n            }\n        },\n        blur: function () {\n            page.footer.hide();\n        }\n    }\n}));\n\n\n// middle panel (records list)\npage.middlePanel = new PanelExtended({\n    title: [{value: gettext('Records'), className: 'name'}, $channelsCountWrapper],\n    main: true,\n    children: [],\n    className: 'middlePanel'\n});\n// delay between buttons press and refreshing action menu and right panel\npage.middlePanel.updateDelay = null;\npage.middlePanel.scroll = new Scroll({});\npage.middlePanel.add(page.middlePanel.list = new LayoutList({\n    cycle: true,\n    focusIndex: 0,\n    size: 7,\n    data: [],\n    scroll: page.middlePanel.scroll,\n    events: {\n        'focus:item': function ( data ) {\n            var body;\n\n            // cancel previous update\n            clearTimeout(page.middlePanel.updateDelay);\n            page.middlePanel.updateDelay = setTimeout(function () {\n                var current;\n\n                if ( data ) {\n                    body = {\n                        middle: [{code: keys.f1, title: gettext('Delete task'), action: page.deleteFocusedTask}],\n                        left: {\n                            code: keys.menu,\n                            action: function () {\n                                // redefine menu to fix first item delayed add\n                                page.panelSet.blur();\n                                page.modalActions.fill({$item: page.middlePanel.list.$focusItem});\n                            }\n                        }\n                    };\n                    page.rightPanel.reset(data);\n\n                    if ( page.middlePanel.list.$focusItem ) {\n                        current = page.middlePanel.list.$focusItem.data.items[1].record;\n                        if ( current.data.state === current.states.FINISHED ) {\n                            // playable file\n                            body.middle.push({\n                                code: keys.f2,\n                                title: gettext('Play file'),\n                                action: page.playFocusedFile\n                            });\n                        }\n                    }\n                    if ( page.activeComponent === page.middlePanel.list ) {\n                        page.footer.init(body);\n                        page.footer.show();\n                    }\n                } else if ( page.activeComponent === page.middlePanel.list ) {\n                    // bad item, hide footer\n                    page.footer.hide();\n                }\n            }, window.core.environment.onFocusDebounceTimeout);\n        },\n        focus: function () {\n            // show footer if list have at least one item\n            var body = {\n                    middle: [{code: keys.f1, title: gettext('Delete task'), action: page.deleteFocusedTask}],\n                    left: {\n                        code: keys.menu,\n                        action: function () {\n                            page.panelSet.blur();\n                            page.modalActions.fill({$item: page.middlePanel.list.$focusItem});\n                        }\n                    }\n                },\n                current;\n\n            if ( page.middlePanel.list.$focusItem ) {\n                current = page.middlePanel.list.$focusItem.data.items[1].record;\n                if ( current.data.state === current.states.FINISHED ) {\n                    // playable file\n                    body.middle.push({code: keys.f2, title: gettext('Play file'), action: page.playFocusedFile});\n                }\n                page.footer.init(body);\n                page.footer.show();\n            } else {\n                page.footer.hide();\n            }\n        },\n        blur: function () {\n            page.footer.hide();\n        }\n    },\n    noData: dom.tag(\n        'div',\n        {className: 'panelHint'},\n        dom.tag(\n            'div',\n            {className: 'hint'},\n            dom.tag('div', {className: 'hint', innerHTML: gettext('No records')})\n        )\n    )\n}), page.middlePanel.scroll);\n\n\nfunction refreshMiddleList () {\n    var newData = [],\n        // predefined items order for sort by state in records list\n        states  = {\n            0: recordStates.ERROR,\n            1: recordStates.RECORDING,\n            2: recordStates.WAITING,\n            3: recordStates.FINISHED\n        },\n        records = app.records.slice(),\n        list    = page.middlePanel.list,\n        body, index, storageIndex;\n\n    function itemClick () {\n        if ( page.middlePanel.list.$focusItem ) {\n            page.panelSet.blur();\n            page.modalActions.fill({$item: page.middlePanel.list.$focusItem});\n        }\n    }\n\n    for ( index = 0; index < records.length; index++ ) {\n        // check if it correspond to status filter\n        if ( !(appConfig.list.filterStatus !== null && records[index].data.state !== appConfig.list.filterStatus) &&\n            // check if it correspond to search filter\n            !(appConfig.list.filterSearch.trim() && records[index].data.name.indexOf(appConfig.list.filterSearch) === -1 &&\n                records[index].data.url.indexOf(appConfig.list.filterSearch) === -1) ) {\n            // add info about storage\n            if ( MODE === 'MINISTRA' && records[index].data.server ) {\n                records[index].data.storage = {\n                    freeSize: 0,\n                    fsType: 0,\n                    isReadOnly: 0,\n                    label: gettext('Server'),\n                    mediaType: 2,\n                    model: '',\n                    mountPath: '',\n                    partitionNum: 0,\n                    size: 0,\n                    sn: '',\n                    vendor: ''\n                };\n            } else {\n                for ( storageIndex = 0; storageIndex < app.storages.length; storageIndex++ ) {\n                    if ( records[index].data.path.indexOf(app.storages[storageIndex].mountPath) !== -1 ) {\n                        records[index].data.storage = app.storages[storageIndex];\n                        break;\n                    }\n                }\n            }\n\n            newData.push({\n                items: [\n                    {\n                        className: 'theme-icon ' + stateToClass[Number(records[index].data.state)],\n                        value: ''\n                    },\n                    {\n                        value: records[index].data.progress + '% ' + records[index].data.name,\n                        className: 'title',\n                        record: app.records[index]\n                    }\n                ],\n                click: itemClick\n            });\n        }\n    }\n\n    // sort it\n    if ( !appConfig.list.sort ) {\n        // by name\n        newData.sort(function ( first, next ) {\n            return first.items[1].record.data.name.toLowerCase().localeCompare(next.items[1].record.data.name.toLowerCase());\n        });\n    } else if ( appConfig.list.sort === appConfig.constants.sort.BY_CATEGORY ) {\n        // by category\n        newData.sort(function ( first, next ) {\n            return states[first.items[1].record.data.state] - states[next.items[1].record.data.state];\n        });\n    } else {\n        // by date\n        newData.sort(function ( first, next ) {\n            return next.items[1].record.data.startTime - first.items[1].record.data.startTime;\n        });\n    }\n\n    body = {data: newData};\n    $channelsCount.innerText = newData.length;\n    if ( newData.length ) {\n        body.focusIndex = list.$focusItem && list.$focusItem.index < newData.length ? list.$focusItem.index : 0;\n        page.middlePanel.scroll.init({realSize: newData.length, viewSize: 7});\n        page.middlePanel.scroll.show();\n    } else {\n        page.rightPanel.reset();\n        if ( page.activeComponent === page.middlePanel.list ) { page.footer.hide(); }\n        page.middlePanel.scroll.hide();\n    }\n    list.init(body);\n}\n\n\npage.middlePanel.resetTimeOut = null;\npage.middlePanel.reset = function () {\n    // prevent reset call spam\n    clearTimeout(page.middlePanel.resetTimeOut);\n    page.middlePanel.resetTimeOut = setTimeout(refreshMiddleList, 300);\n};\n\n// right panel (record information)\npage.rightPanel = new PanelExtended({title: gettext('Details'), className: 'rightPanel'});\npage.rightPanel.scroll = new Scroll({});\npage.rightPanel.textArea = new ScrollArea({propagate: true, step: 5, scroll: page.rightPanel.scroll});\npage.rightPanel.add(page.rightPanel.textArea, page.rightPanel.scroll);\npage.rightPanel.reset = function ( data ) {\n    var area = page.rightPanel.textArea,\n        item, date, dur;\n\n    if ( !area.$channel ) {\n        area.$body.appendChild(dom.fragment(\n            dom.tag('div', {className: 'title theme-subhead-color'}, gettext('Channel:')),\n            area.$channel = dom.tag('div', {}),\n            dom.tag('div', {className: 'title theme-subhead-color'}, gettext('Record name:')),\n            area.$name = dom.tag('div', {}),\n            dom.tag('div', {className: 'title theme-subhead-color'}, gettext('Record start:')),\n            area.$date = dom.tag('div', {}),\n            dom.tag('div', {className: 'title theme-subhead-color'}, gettext('Record length:')),\n            area.$time = dom.tag('div', {}),\n            dom.tag('div', {className: 'title theme-subhead-color'}, gettext('Storage:')),\n            area.$storage = dom.tag('div', {}),\n            dom.tag('div', {className: 'title theme-subhead-color'}, gettext('Status:')),\n            area.$state = dom.tag('div', {})\n        ));\n    }\n    if ( data && data.$curr && data.$curr.data ) {\n        item = data.$curr.data.items[1].record.data;\n        date = tools.parseDate(new Date(item.startTime * 1000));\n        dur = {\n            hours: Math.floor((item.endTime - item.startTime) / 3600),\n            minute: Math.ceil((item.endTime - item.startTime) / 60 % 60)\n        };\n        area.$channel.innerText = item.channel;\n        area.$name.innerText = item.name;\n        area.$date.innerText = date;\n        if ( dur.hours ) {\n            area.$time.innerText = dur.hours + ' ' + gettext('h.') + ' ' + dur.minute + ' ' + gettext('m.');\n        } else {\n            area.$time.innerText = dur.minute + ' ' + gettext('m.');\n        }\n        area.$storage.innerText = item.storage ? item.storage.label : gettext('Not connected');\n        area.$state.innerText = ['', gettext('Waiting'), gettext('Running'), gettext('Error'), gettext('Completed')][Number(item.state)];\n        if ( Number(item.state) === 3 && !item.server && pvrErrorCodes[item.errorCode] ) {\n            // local pvr have error text\n            area.$state.innerText += ': ' + pvrErrorCodes[item.errorCode];\n        }\n        page.rightPanel.textArea.show();\n        page.rightPanel.textArea.init();\n    } else {\n        page.rightPanel.textArea.hide();\n    }\n};\n\n\n// panel set: main\npage.panelSet = new PanelSet({\n    visible: true,\n    $node: document.getElementById('panelSetMain'),\n    panels: [page.leftPanel, page.middlePanel, page.rightPanel]\n});\n// panelSet constructor cant handle focus by himself\npage.panelSet.focusIndex = 1;\npage.add(page.panelSet);\n\n\npage.addListener('keydown', function ( event ) {\n    switch ( event.code ) {\n        case keys.back:\n            page.panelSet.blur();\n            window.core.call('stop');\n            break;\n    }\n});\n\n// server video recorder events\nif ( MODE === 'MINISTRA' ) {\n    // reset all event listeners\n    spvr.events = {};\n    spvr.addListeners({\n        add: function ( config ) {\n            app.records.push(config.item);\n            page.middlePanel.reset();\n        },\n        remove: function ( config ) {\n            app.records.splice(app.records.indexOf(config.item), 1);\n            page.middlePanel.reset();\n        },\n        progress: function () {\n            page.middlePanel.reset();\n        },\n        state: function () {\n            page.middlePanel.reset();\n        }\n    });\n    spvr.reset();\n}\n\n// local (personal) video recorder events\n// reset all event listeners\npvr.events = {};\npvr.addListeners({\n    add: function ( config ) {\n        if ( config.item.data.state === config.item.states.ERROR ) {\n            window.core.notify({\n                title: gettext('Error') + (pvrErrorCodes[config.item.data.errorCode] ? ': ' + pvrErrorCodes[config.item.data.errorCode] : ''),\n                icon: 'alert',\n                type: 'warning'\n            });\n        }\n\n        config.item.addListeners({\n            progress: function () {\n                page.middlePanel.reset();\n            },\n            state: function ( data ) {\n                if ( data.curr === data.item.states.ERROR ) {\n                    window.core.notify({\n                        title: gettext('Error') + (pvrErrorCodes[data.item.data.errorCode] ? ': ' + pvrErrorCodes[data.item.data.errorCode] : ''),\n                        icon: 'alert',\n                        type: 'warning'\n                    });\n                }\n                page.middlePanel.reset();\n            }\n        });\n\n        app.records.push(config.item);\n\n        page.middlePanel.reset();\n    },\n    remove: function ( config ) {\n        app.records.splice(app.records.indexOf(config.item), 1);\n        page.middlePanel.reset();\n    }\n});\n\n// restore records added before this app have had been launched\npvr.list.forEach(function ( item ) {\n    app.records.push(item);\n});\n// reset to apply added items\npage.middlePanel.reset();\n\n// window.core.intent({action:'record',data:{uri:'rtp://239.1.1.1:1234',name:'video',id:14,pvr:{local:true, server:true},\n// startTime:Math.ceil((new Date).getTime()/1000),endTime:Math.ceil((new Date).getTime()/1000+60)}},function(){});\nwindow.core.addListener('intent', function ( intent, callback ) {\n    if ( intent.action === 'record' ) {\n        app.intent = intent;\n        app.route(app.pages.add);\n        app.pages.add.reset();\n        callback(false, {});\n    }\n});\n\npage.addListener('show', function () {\n    page.panelSet.show();\n    page.panelSet.focus();\n});\n\nwindow.core.addListeners({\n    show: function () { page.clock.start(); },\n    hide: function () { page.clock.stop(); },\n    exit: function () {\n        pvr.destroy();\n        if ( MODE === 'MINISTRA' ) {\n            spvr.destroy();\n        }\n    }\n});\n\napp.route(page);\npage.show();\n\n// public\nmodule.exports = page;\n"],"sourceRoot":""}