{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/stb-keys/index.js","webpack:///./src/js/modules/renders/list.item.js","webpack:///./src/js/modules/node.map.js","webpack:///./node_modules/spa-component/index.js","webpack:///./node_modules/mag-app/index.js","webpack:///./node_modules/cjs-emitter/index.js","webpack:///./node_modules/spa-app/lib/core.js","webpack:///./node_modules/stb-component/index.js","webpack:///./src/js/components/page.main/main.panel.js","webpack:///./node_modules/mag-component-modal/index.js","webpack:///./node_modules/mag-component-layout-list/index.js","webpack:///./node_modules/stb-component-scrollbar/index.js","webpack:///./src/js/modules/models/option.js","webpack:///./node_modules/mag-component-panel/index.js","webpack:///./src/js/modules/application.api.js","webpack:///./src/js/modules/utils/confirm.js","webpack:///./src/js/components/page.main/right.panel.js","webpack:///./node_modules/spa-app/lib/events.js","webpack:///./node_modules/stb-app/lib/css.js","webpack:///./node_modules/spa-keys/index.js","webpack:///./src/js/components/page.main/left.panel.js","webpack:///./node_modules/mag-component-layout/index.js","webpack:///./src/js/components/widgets/exit.confirm.js","webpack:///./node_modules/stb-component-list/index.js","webpack:///./src/js/modules/content.provider.js","webpack:///./src/js/components/page.main/footer.js","webpack:///./src/js/components/page.main/popup.menu.js","webpack:///./src/js/main.js","webpack:///./node_modules/mag-app/lib/main.js","webpack:///./node_modules/cjs-query/index.js","webpack:///./src/js/config.js","webpack:///./node_modules/stb-shim-classlist/index.js","webpack:///./node_modules/stb-app/lib/metrics.js","webpack:///./src/js/metrics.js","webpack:///./node_modules/mag-app/lib/css.js","webpack:///../helpers/longpress.js","webpack:///./node_modules/spa-gettext/index.js","webpack:///./node_modules/cjs-gettext/index.js","webpack:///./src/js/pages/main.js","webpack:///./node_modules/stb-component-page/index.js","webpack:///./node_modules/spa-component-page/index.js","webpack:///./node_modules/mag-component-panel-set/index.js","webpack:///./node_modules/mag-component-list/index.js","webpack:///./node_modules/spa-component-widget/index.js","webpack:///./node_modules/stb-component-modal/index.js","webpack:///./node_modules/spa-component-modal/index.js","webpack:///./node_modules/cjs-debounce/index.js","webpack:///./node_modules/spa-component-scrollbar/index.js","webpack:///./src/js/components/settings.list.js","webpack:///./node_modules/spa-component-list/index.js","webpack:///./src/js/modules/models/section.js","webpack:///./src/js/modules/renders/popup.select.js","webpack:///./src/js/modules/renders/popup.layout.list.js","webpack:///./src/js/modules/renders/range.input.js","webpack:///./node_modules/spa-component-progress-bar/index.js","webpack:///./src/js/modules/renders/toggle.js","webpack:///./src/js/modules/renders/confirm.js","webpack:///./src/js/modules/renders/input.js","webpack:///./src/js/modules/renders/checkbox.js","webpack:///./node_modules/spa-preloader/index.js","webpack:///./node_modules/mag-component-scroll-area/index.js","webpack:///./node_modules/mag-component-footer/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","keys","back","backspace","channelNext","tab","channelPrev","ok","enter","exit","escape","volumeUp","volumeDown","f1","f2","f3","f4","refresh","frame","phone","set","tv","menu","app","rewind","forward","audio","standby","keyboard","usbMounted","usbUnmounted","playPause","play","pause","stop","power","record","info","mute","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","nodeMap","callback","self","this","$layout","document","createElement","$icon","$text","data","id","firstChild","removeChild","innerText","className","icon","appendChild","config","group","enabled","events","change","isChanged","listInstance","$nodeChange","onclick","click","emit","saver","Emitter","counter","Component","visible","focusable","$node","$body","parent","children","propagate","add","hide","defaultEvents","forEach","eventName","addListener","apply","addEventListener","event","focus","stopPropagation","constructor","child","index","arguments","length","push","parentNode","item","remove","activePage","activeComponent","blur","splice","indexOf","activeItem","classList","show","setTimeout","once","onceWrapper","removeListener","addListeners","callbacks","filter","fn","undefined","Array","slice","parse","query","location","search","substring","route","pageTo","page","pageFrom","active","showPage","from","to","footerConfig","debounce","Panel","Scroll","List","actions","Option","contentProvider","listItemRender","footer","popupMenu","rightPanel","$amountContainer","$amount","panel","title","gettext","main","scroll","currentSectionId","navigationHistory","filters","currentList","isAdvancedSettingsEnabled","setInfo","core","environment","onFocusDebounceTimeout","getDataForSection","section","content","size","leftPanel","description","render","setSearchQuery","getContent","advanced","toLowerCase","options","type","middle","code","action","save","left","list","cycle","focusIndex","focus:item","$curr","click:item","$item","onenter","error","notify","clearSection","addContent","temp","init","realSize","viewIndex","instance","setData","pluginData","sections","addSections","addOptions","reloadMessage","reloadAction","requirements","getSaveRequirements","reload","device","reboot","portal","buttons","openedSection","empty","pop","reset","initialize","filterContent","$focusItem","StbComponentModal","Modal","$overlay","onkeydown","keydown","$header","Layout","LayoutList","handlers","$noData","fixedData","layout","inner","focusItem","renderItemDefault","layoutConfig","currentNode","currentData","ready","items","childNodes","$parentItem","$wrap","noData","innerHTML","Element","renderItem","keysSize","cached","$shadow","right","isArray","$title","panels","mainPanel","renders","listItem","popupSelect","popupLayoutList","rangeInput","toggle","confirm","input","checkbox","applyTheme","themePath","querySelectorAll","href","window","screen","height","view","getters","savers","sectionId","removeSections","removeOptions","removeContent","preloader","ScrollBar","ScrollArea","textArea","step","$preview","$fragment","preview","style","backgroundImage","createDocumentFragment","label","DOMContentLoaded","load","unload","eventLocal","keyCode","ctrlKey","altKey","shiftKey","keypress","mousewheel","link","rel","metrics","head","space","pageUp","pageDown","end","home","up","down","insert","del","menuData","exitConfirm","$searchIcon","$searchText","lastChild","intent","done","$wrapper","HTMLElement","wrap","normalize","componentClickHandler","textContent","Widget","ModalMessage","exitModal","widget","widgetExitConfirm","Section","provider","root","iteration","filterCallback","Footer","prepare","layoutItems","activePanelSet","language","pages","plugins","settings","saveSettings","getCoreInstance","platform","body","setAttribute","contextmenu","preventDefault","split","part","decodeURIComponent","stringify","params","encodeURIComponent","join","documentElement","DOMTokenList","el","_element","_classCache","classes","replace","token","contains","toString","screenHeight","availHeight","availTop","availBottom","availWidth","width","availLeft","availRight","480","576","720","1080","linkCSS","theme","path","longClick","timer","pressed","fired","LONG_CLICK_TIMEOUT","keyToChange","emitKeyCode","emitCode","emitKeydown","redefine","eventType","clearTimeout","Gettext","loader","_","pgettext","ngettext","defaultLanguage","xhr","ext","XMLHttpRequest","onload","JSON","responseText","onerror","ontimeout","open","send","meta","msgId","context","plural","evalResult","eval","Page","PanelSet","pageMain","panelSet","panelSetMain","lastReceivedIntent","close","keydownHandler","TYPE_VERTICAL","TYPE_HORIZONTAL","wheelDeltaY","move","wheelDeltaX","idx","currSize","onClick","blocked","maxCount","viewSize","pos","blurItem","renderView","itemData","prevIndex","currIndex","mark","scrollTo","direction","force","previousSibling","nextSibling","$prev","markItem","state","func","wait","timeout","args","thumbRect","trackRect","$thumb","getBoundingClientRect","marginTop","marginLeft","curr","prev","SettingsList","$panelHint","$hint","renderCount","itemIndex","$emptyLabel","navigationDisabled","unsavedOptions","unsavedOptionsCounter","onRenderEnd","enable","disable","onRenderItem","prepareForRender","preparedData","option","savedSections","optionId","prepareForSave","onsave","afterSave","saverCallback","requirePortalReboot","requireDeviceReboot","isNaN","backItem","unshift","currentOption","modal","selected","saveImmediate","initialValue","zIndex","refreshCurrentList","$counter","top","stbEvent","onDeviceStorageListChange","evt","refreshEvent","broadcast","message","highlightFocus","move:view","showModal","warningText","result","ProgressBar","progressBar","$progressValue","$rangeInput","$value","min","max","prevValue","Math","abs","__filename","$checkbox","Error","confirmation","queueSize","groups","verbose","handler","src","url","links","img","Image","realHeight","viewHeight","topPosition","delta","ceil","offsetHeight","currentTab","tabs","codes","$table","insertRow","rows","insertCell","$left","cells","$right","currTab","$tab","$tabChildren","addClick","ind","disabled","visibility"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 27);\n","/**\n * Global list of non-printable control key codes.\n *\n * At the moment `keypress` and `keydown` events are emitted for the same keys (for both printable and non-printable characters).\n *\n * WARNING!!! All codes in this file (except 'volumeUp' and 'volumeDown')\n * are used in window 'keydown' handler to prevent wrong 'keypress' firings.\n * If you add new code to this file 'keypress' event with this code will never fire.\n *\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar keys = require('spa-keys');\n\n\n// extend with additional codes\nkeys.back         = keys.backspace;\nkeys.channelNext  = keys.tab;        // Tab\nkeys.channelPrev  = keys.tab + 's';  // Shift+Tab\nkeys.ok           = keys.enter;      // Enter\nkeys.exit         = keys.escape;     // Esc\nkeys.volumeUp     = 107;             // NUMPAD +\nkeys.volumeDown   = 109;             // NUMPAD -\nkeys.f1           = 112 + 'c';       // Ctrl+F1\nkeys.f2           = 113 + 'c';       // Ctrl+F2\nkeys.f3           = 114 + 'c';       // Ctrl+F3\nkeys.f4           = 115 + 'c';       // Ctrl+F4\nkeys.refresh      = 116 + 'c';       // Ctrl+F5\nkeys.frame        = 117 + 'c';       // Ctrl+F6\nkeys.phone        = 119 + 'c';       // Ctrl+F8\nkeys.set          = 120 + 'c';       // Ctrl+F9\nkeys.tv           = 121 + 'c';       // Ctrl+F10\nkeys.menu         = 122 + 'c';       // Ctrl+F11\nkeys.app          = 123 + 'c';       // Ctrl+F12\nkeys.rewind       = 66  + 'a';       // Alt+B\nkeys.forward      = 70  + 'a';       // Alt+F\nkeys.audio        = 71  + 'a';       // Alt+G\nkeys.standby      = 74  + 'a';       // Alt+J\nkeys.keyboard     = 76  + 'a';       // Alt+L\nkeys.usbMounted   = 80  + 'a';       // Alt+P\nkeys.usbUnmounted = 81  + 'a';       // Alt+Q\nkeys.playPause    = 82  + 'a';       // Alt+R\nkeys.play         = -1;              // should be redefined on some platforms\nkeys.pause        = -1;              // should be redefined on some platforms\nkeys.stop         = 83  + 'a';       // Alt+S\nkeys.power        = 85  + 'a';       // Alt+U\nkeys.record       = 87  + 'a';       // Alt+W\nkeys.info         = 89  + 'a';       // Alt+Y\nkeys.mute         = 192 + 'a';\nkeys.digit0       = 48;\nkeys.digit1       = 49;\nkeys.digit2       = 50;\nkeys.digit3       = 51;\nkeys.digit4       = 52;\nkeys.digit5       = 53;\nkeys.digit6       = 54;\nkeys.digit7       = 55;\nkeys.digit8       = 56;\nkeys.digit9       = 57;\n\n\n// public\nmodule.exports = keys;\n\n// public\n// module.exports = {\n//     getCode: function ( event ) {\n//         var code = event.keyCode;\n//\n//         // apply key modifiers\n//         if ( event.shiftKey ) { code += 1000; }\n//         if ( event.altKey )   { code += 2000; }\n//\n//         return code;\n//     },\n//\n//     codes: {\n//         back:         8,    // Backspace\n//         channelPrev:  1009, // Shift+Tab\n//         channelNext:  9,    // Tab\n//         ok:           13,   // Enter\n//         exit:         27,   // Esc\n//         pageUp:       33,\n//         pageDown:     34,\n//         end:          35,\n//         home:         36,\n//         left:         37,\n//         up:           38,\n//         right:        39,\n//         down:         40,\n//         'delete':     46,\n//         volumeUp:     107,  // NUMPAD +\n//         volumeDown:   109,  // NUMPAD -\n//         f1:           112,  // F1\n//         f2:           113,  // F2\n//         f3:           114,  // F3\n//         f4:           115,  // F4\n//         refresh:      116,  // F5\n//         frame:        117,  // F6\n//         phone:        119,  // F8\n//         set:          120,  // F9\n//         tv:           121,  // F10\n//         menu:         122,  // F11\n//         app:          123,  // F12\n//         rewind:       2066, // Alt+B\n//         forward:      2070, // Alt+F\n//         audio:        2071, // Alt+G\n//         standby:      2074, // Alt+J\n//         keyboard:     2076, // Alt+L\n//         usbMounted:   2080, // Alt+P\n//         usbUnmounted: 2081, // Alt+Q\n//         playPause:    2082, // Alt+R\n//         stop:         2083, // Alt+S\n//         power:        2085, // Alt+U\n//         record:       2087, // Alt+W\n//         info:         2089, // Alt+Y\n//         mute:         2192\n//     }\n// };\n","'use strict';\n\n\nvar nodeMap = require('../node.map.js');/*,\n\n    group = {\n        name: '',\n        list: [],\n        active: null\n    };*/\n\n\n/* eslint no-useless-call: 0 */\n\n\nmodule.exports = function ( value, callback ) {\n    var self = this,\n        $layout = document.createElement('div'),\n        $icon = document.createElement('div'),\n        $text = document.createElement('div');\n\n\n    while ( nodeMap.data[this.id].firstChild ) {\n        nodeMap.data[this.id].removeChild(nodeMap.data[this.id].firstChild);\n    }\n\n    $text.innerText = this.name;\n\n    $icon.className = 'theme-icon ' + this.icon;\n    $text.className = 'settings-list-item-name';\n\n    $layout.className = 'mag-component-layout';\n\n    $layout.appendChild($icon);\n    $layout.appendChild($text);\n\n    if ( this.config && this.config.group ) {\n        // if ( group.name !== this.config.group ) {\n        //     group.name = this.config.group;\n        //     group.list.splice(0);\n        //     group.active = null;\n        // }\n\n        $icon = document.createElement('div');\n        $layout.appendChild($icon);\n\n        // group.list.push({\n        //     option: this,\n        //     $icon: $icon\n        // });\n\n        if ( this.config.enabled  ) {\n            // group.active = group.list[group.list.length - 1];\n            $icon.className = 'theme-icon theme-icon theme-icon-ok';\n        }\n    }\n\n    // $node here\n    nodeMap.data[this.id].appendChild($layout);\n\n    if ( this instanceof require('../models/option') ) {\n        this.events.change = [\n            function ( isChanged ) {\n                nodeMap.data[self.id].listInstance.$nodeChange(isChanged, self);\n            }\n        ];\n\n        nodeMap.data[this.id].onclick = function () {\n            if ( self.events.click ) {\n                self.emit('click');\n            } else {\n                self.saver.call(self);\n            }\n        };\n    }\n\n    callback();\n};\n","'use strict';\n\nmodule.exports = {\n    data: {}\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    Emitter = require('cjs-emitter'),\n    counter = 0;\n\n\n/**\n * Base component implementation.\n *\n * Visual element that can handle sub-components.\n * Each component has a DOM element container $node with a set of classes:\n * \"component\" and some specific component class names depending on the hierarchy, for example \"page\".\n * Each component has a unique ID given either from $node.id or from data.id. If not given will generate automatically.\n *\n * @constructor\n * @extends Emitter\n *\n * @param {Object} [config={}] init parameters\n * @param {Element} [config.id] component unique identifier (generated if not set)\n * @param {string} [config.className] space-separated list of classes for \"className\" property of this.$node\n * @param {Element} [config.$node] DOM element/fragment to be a component outer container\n * @param {Element} [config.$body] DOM element/fragment to be a component inner container (by default is the same as $node)\n * @param {Component} [config.parent] link to the parent component which has this component as a child\n * @param {Array.<Component>} [config.children=[]] list of components in this component\n * @param {Object.<string, function>} [config.events={}] list of event callbacks\n * @param {boolean} [config.visible=true] component initial visibility state flag\n * @param {boolean} [config.focusable=true] component can accept focus or not\n * @param {boolean} [config.propagate=false] allow to emit events to the parent component\n *\n * @fires module:stb/component~Component#click\n *\n * @example\n * var component = new Component({\n *     $node: document.getElementById(id),\n *     className: 'bootstrap responsive',\n *     events: {\n *         click: function () { ... }\n *     }\n * });\n * component.add( ... );\n * component.focus();\n */\nfunction Component ( config ) {\n    // current execution context\n    var self = this,\n        name;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.id && typeof config.id !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.id');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$node && !(config.$node instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$node type');\n        }\n        if ( config.$body && !(config.$body instanceof Element) ) {\n            throw new Error(__filename + ': wrong config.$body type');\n        }\n        if ( config.parent && !(config.parent instanceof Component) ) {\n            throw new Error(__filename + ': wrong config.parent type');\n        }\n        if ( config.children && !Array.isArray(config.children) ) {\n            throw new Error(__filename + ': wrong config.children type');\n        }\n    }\n\n    /**\n     * Component visibility state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.visible = true;\n\n    /**\n     * Component can accept focus or not.\n     *\n     * @type {boolean}\n     */\n    this.focusable = true;\n\n    /**\n     * DOM outer handle.\n     *\n     * @type {Element}\n     */\n    this.$node = null;\n\n    /**\n     * DOM inner handle.\n     * In simple cases is the same as $node.\n     *\n     * @type {Element}\n     */\n    this.$body = null;\n\n    /**\n     * Link to the parent component which has this component as a child.\n     *\n     * @type {Component}\n     */\n    this.parent = null;\n\n    /**\n     * List of all children components.\n     *\n     * @type {Component[]}\n     */\n    this.children = [];\n\n    /**\n     * allow to emit events to the parent component\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.propagate = !!config.propagate;\n\n    // parent constructor call\n    Emitter.call(this);\n\n    // outer handle - empty div in case nothing is given\n    this.$node = config.$node || document.createElement('div');\n\n    // inner handle - the same as outer handler in case nothing is given\n    this.$body = config.$body || this.$node;\n\n    // set CSS class names\n    //this.$node.className += ' component ' + (config.className || '');\n    // previous approach is not good as it mess with components hierarchy\n    this.$node.className = this.name + ' ' + (config.className || '');\n\n    // apply component id if given, generate otherwise\n    this.id = config.id || this.$node.id || 'cid' + counter++;\n\n    // apply hierarchy\n    if ( config.parent ) {\n        // add to parent component\n        config.parent.add(this);\n    }\n\n    // apply given visibility\n    if ( config.visible === false ) {\n        // default state is visible\n        this.hide();\n    }\n\n    // apply focus handling method\n    if ( config.focusable === false ) {\n        // can't accept focus\n        this.focusable = false;\n    }\n\n    // a descendant defined own events\n    if ( this.defaultEvents ) {\n        // sanitize\n        config.events = config.events || {};\n\n        if ( DEVELOP ) {\n            if ( typeof config.events !== 'object' ) {\n                throw new Error(__filename + ': wrong config.events type');\n            }\n            if ( typeof this.defaultEvents !== 'object' ) {\n                throw new Error(__filename + ': wrong this.defaultEvents type');\n            }\n        }\n\n        for ( name in this.defaultEvents ) {\n            // overwrite default events with user-defined\n            config.events[name] = config.events[name] || this.defaultEvents[name];\n        }\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( eventName ) {\n            self.addListener(eventName, config.events[eventName]);\n        });\n    }\n\n    // apply the given children components\n    if ( config.children ) {\n        // apply\n        this.add.apply(this, config.children);\n    }\n\n    // component activation by mouse\n    this.$node.addEventListener('click', function ( event ) {\n        // left mouse button\n        //if ( event.button === 0 ) {\n        // activate if possible\n        self.focus();\n\n        // there are some listeners\n        if ( self.events['click'] ) {\n            /**\n             * Mouse click event.\n             *\n             * @event module:stb/component~Component#click\n             *\n             * @type {Object}\n             * @property {Event} event click event data\n             */\n            self.emit('click', event);\n        }\n        //}\n\n        if ( DEVELOP ) {\n            // middle mouse button\n            if ( event.button === 1 ) {\n                //debug.inspect(self, 0);\n                debug.info('\"window.link\" or \"' + self.id + '.component\"', 'this component is now available in global scope');\n                window.link = self;\n                self.$node.classList.toggle('wired');\n            }\n        }\n\n        event.stopPropagation();\n    });\n\n    if ( DEVELOP ) {\n        // expose inner ID to global scope\n        window[self.id] = self.$node;\n\n        // expose a link\n        this.$node.component = this.$body.component = this;\n        this.$node.title = this.name + '#' + this.id + ' (outer)';\n        this.$body.title = this.name + '#' + this.id + ' (inner)';\n    }\n\n    debug.info('create component ' + this.name + '#' + this.id, null, {\n        tags: ['create', 'component', this.name, this.id]\n    });\n}\n\n\n// inheritance\nComponent.prototype = Object.create(Emitter.prototype);\nComponent.prototype.constructor = Component;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nComponent.prototype.defaultEvents = null;\n\n\n/**\n * Add a new component as a child.\n *\n * @param {...Component} [child] variable number of elements to append\n *\n * @files Component#add\n *\n * @example\n * panel.add(\n *     new Button( ... ),\n *     new Button( ... )\n * );\n */\nComponent.prototype.add = function ( child ) {\n    var index;\n\n    // walk through all the given elements\n    for ( index = 0; index < arguments.length; index++ ) {\n        child = arguments[index];\n\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        // apply\n        this.children.push(child);\n        child.parent = this;\n\n        // correct DOM parent/child connection if necessary\n        if ( child.$node && child.$node.parentNode === null ) {\n            this.$body.appendChild(child.$node);\n        }\n\n        debug.info('add component ' + child.name + '#' + child.id + ' to ' + this.name + '#' + this.id, null, {\n            tags: ['add', 'component', this.name, this.id, child.name, child.id]\n        });\n\n        // there are some listeners\n        if ( this.events['add'] ) {\n            /**\n             * A child component is added.\n             *\n             * @event module:stb/component~Component#add\n             *\n             * @type {Object}\n             * @property {Component} item new component added\n             */\n            this.emit('add', {item: child});\n        }\n\n        //debug.log('component ' + this.name + '#' + this.id + ' new child: ' + child.name + '#' + child.id);\n    }\n};\n\n\n/* @todo: consider activation in future */\n///**\n// * Insert component into the specific position.\n// *\n// * @param {Component} child component instance to insert\n// * @param {number} index insertion position\n// */\n//Component.prototype.insert = function ( child, index ) {\n//    var prevIndex = this.children.indexOf(child);\n//\n//    if ( DEVELOP ) {\n//        if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n//        if ( !(child instanceof Component) ) { throw new Error(__filename + ': wrong child type'); }\n//    }\n//\n//    if ( prevIndex !== -1 ) {\n//        this.children.splice(prevIndex, 1);\n//        this.$body.removeChild(child.$node);\n//    }\n//\n//    if ( index === this.children.length ) {\n//        this.$body.appendChild(child.$node);\n//    } else {\n//        this.$body.insertBefore(child.$node, this.$body.children[index]);\n//    }\n//    this.children.splice(index, 0, child);\n//\n//    if ( !child.parent ) {\n//        child.parent = this;\n//    }\n//};\n\n\n/**\n * Delete this component and clear all associated events.\n *\n * @fires module:stb/component~Component#remove\n */\nComponent.prototype.remove = function () {\n    // really inserted somewhere\n    if ( this.parent ) {\n        if ( DEVELOP ) {\n            if ( !(this.parent instanceof Component) ) {\n                throw new Error(__filename + ': wrong this.parent type');\n            }\n        }\n\n        // active at the moment\n        if ( app.activePage.activeComponent === this ) {\n            this.blur();\n            this.parent.focus();\n        }\n        this.parent.children.splice(this.parent.children.indexOf(this), 1);\n    }\n\n    // remove all children\n    this.children.forEach(function ( child ) {\n        if ( DEVELOP ) {\n            if ( !(child instanceof Component) ) {\n                throw new Error(__filename + ': wrong child type');\n            }\n        }\n\n        child.remove();\n    });\n\n    this.$node.parentNode.removeChild(this.$node);\n\n    // there are some listeners\n    if ( this.events['remove'] ) {\n        /**\n         * Delete this component.\n         *\n         * @event module:stb/component~Component#remove\n         */\n        this.emit('remove');\n    }\n\n    // remove all listeners\n    this.events = {};\n\n    //debug.log('component ' + this.name + '#' + this.id + ' remove', 'red');\n    debug.info('remove component ' + this.name + '#' + this.id, null, {\n        tags: ['remove', 'component', this.name, this.id]\n    });\n};\n\n\n/**\n * Activate the component.\n * Notify the owner-page and apply CSS class.\n *\n * @param {Object} [data] custom data which passed into handlers\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#focus\n */\nComponent.prototype.focus = function ( data ) {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // this is a visual component on a page\n    // not already focused and can accept focus\n    if ( this.focusable && this !== activeItem ) {\n        // notify the current active component\n        if ( activeItem ) { activeItem.blur(); }\n\n        /* eslint consistent-this: 0 */\n\n        // apply\n        activePage.activeComponent = activeItem = this;\n        activeItem.$node.classList.add('focus');\n\n        //debug.log('component ' + this.name + '#' + this.id + ' focus');\n        debug.info('focus component ' + this.name + '#' + this.id, null, {\n            tags: ['focus', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( activeItem.events['focus'] ) {\n            /**\n             * Make this component focused.\n             *\n             * @event module:stb/component~Component#focus\n             */\n            activeItem.emit('focus', data);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Remove focus.\n * Change page.activeComponent and notify subscribers.\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#blur\n */\nComponent.prototype.blur = function () {\n    var activePage = app.activePage,\n        activeItem = activePage.activeComponent;\n\n    // apply visuals anyway\n    this.$node.classList.remove('focus');\n\n    // this is the active component\n    if ( this === activeItem ) {\n        activePage.activeComponent = null;\n\n        //debug.log('component ' + this.name + '#' + this.id + ' blur', 'grey');\n        debug.info('blur component ' + this.name + '#' + this.id, null, {\n            tags: ['blur', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['blur'] ) {\n            /**\n             * Remove focus from this component.\n             *\n             * @event module:stb/component~Component#blur\n             */\n            this.emit('blur');\n        }\n\n        return true;\n    }\n\n    debug.warn('component ' + this.name + '#' + this.id + ' attempt to blur without link to a page', null, {\n        tags: ['blur', 'component', this.name, this.id]\n    });\n\n    // nothing was done\n    return false;\n};\n\n\n/*function show ( self, data ) {\n    // correct style\n    self.$node.classList.remove('hidden');\n    // flag\n    self.visible = true;\n\n    debug.info('show component ' + self.name + '#' + self.id, null, {\n        tags: ['show', 'component', self.name, self.id]\n    });\n\n    // there are some listeners\n    if ( self.events['show'] ) {\n        /!**\n         * Make the component visible.\n         *\n         * @event module:stb/component~Component#show\n         *!/\n        self.emit('show', data);\n    }\n}*/\n\n/**\n * Make the component visible and notify subscribers.\n *\n * @param {Object} [data] custom data which passed into handlers\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#show\n */\nComponent.prototype.show = function ( data, callback ) {\n    //var self = this;\n\n    // is it hidden\n    if ( !this.visible ) {\n        /*if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(function () {\n                show(self, data);\n                callback();\n            });\n        } else {\n            // sync call\n            show(this, data);\n        }*/\n\n        // correct style\n        this.$node.classList.remove('hidden');\n        // flag\n        this.visible = true;\n\n        debug.info('show component ' + this.name + '#' + this.id, null, {\n            tags: ['show', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['show'] ) {\n            /**\n             * Make the component visible.\n             *\n             * @event module:stb/component~Component#show\n             */\n            this.emit('show', data);\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Make the component hidden and notify subscribers.\n *\n * @param {function} [callback] user callback\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/component~Component#hide\n */\nComponent.prototype.hide = function ( callback ) {\n    // is it visible\n    if ( this.visible ) {\n        // correct style\n        this.$node.classList.add('hidden');\n        // flag\n        this.visible = false;\n\n        debug.info('hide component ' + this.name + '#' + this.id, null, {\n            tags: ['hide', 'component', this.name, this.id]\n        });\n\n        // there are some listeners\n        if ( this.events['hide'] ) {\n            /**\n             * Make the component hidden.\n             *\n             * @event module:stb/component~Component#hide\n             */\n            this.emit('hide');\n        }\n\n        // async call\n        if ( typeof callback === 'function' ) {\n            // async call\n            setTimeout(callback);\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = Component;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nvar app = require('./lib/main');\n\n\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Base Events Emitter implementation.\n *\n * @see http://nodejs.org/api/events.html\n * @constructor\n *\n * @example\n * var emitter = new Emitter();\n */\nfunction Emitter () {\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    // if ( DEVELOP ) {\n    //     if ( typeof this !== 'object' ) { throw new Error(__filename + ': must be constructed via new'); }\n    // }\n\n    /**\n     * Inner hash table for event names and linked callbacks.\n     * Manual editing should be avoided.\n     *\n     * @member {Object.<string, function[]>}\n     *\n     * @example\n     * {\n     *     click: [\n     *         function click1 () { ... },\n     *         function click2 () { ... }\n     *     ],\n     *     keydown: [\n     *         function () { ... }\n     *     ]\n     * }\n     **/\n    this.events = {};\n}\n\n\nEmitter.prototype = {\n    /**\n     * Bind an event to the given callback function.\n     * The same callback function can be added multiple times for the same event name.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.addListener('click', function ( data ) { ... });\n     * // one more click handler\n     * emitter.addListener('click', function ( data ) { ... });\n     */\n    addListener: function ( name, callback ) {\n        console.assert(arguments.length === 2, 'wrong arguments number');\n        console.assert(typeof name === 'string', 'wrong name type');\n        console.assert(name.length > 0, 'empty name');\n        console.assert(typeof callback === 'function', 'callback should be a function');\n\n        // if ( DEVELOP ) {\n        //     if ( arguments.length !== 2 ) { throw new Error(__filename + ': wrong arguments number'); }\n        //     if ( typeof name !== 'string' || name.length === 0 ) { throw new Error(__filename + ': wrong or empty name'); }\n        //     if ( typeof callback !== 'function' ) { throw new Error(__filename + ': wrong callback type'); }\n        // }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(callback);\n    },\n\n\n    /**\n     * Add a one time listener for the event.\n     * This listener is invoked only the next time the event is fired, after which it is removed.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to call on this event\n     *\n     * @example\n     * emitter.once('click', function ( data ) { ... });\n     */\n    once: function ( name, callback ) {\n        // current execution context\n        var self = this;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n        }\n\n        // initialization may be required\n        this.events[name] = this.events[name] || [];\n        // append this new event to the list\n        this.events[name].push(function onceWrapper () {\n            self.removeListener(name, onceWrapper);\n            callback.apply(self, arguments);\n        });\n    },\n\n\n    /**\n     * Apply multiple listeners at once.\n     *\n     * @param {Object} callbacks event names with callbacks\n     *\n     * @example\n     * emitter.addListeners({\n     *     click: function ( data ) {},\n     *     close: function ( data ) {}\n     * });\n     */\n    addListeners: function ( callbacks ) {\n        var name;\n\n        if ( DEVELOP ) {\n            if ( arguments.length !== 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof callbacks !== 'object' ) {\n                throw new Error(__filename + ': wrong callbacks type');\n            }\n            if ( Object.keys(callbacks).length === 0 ) {\n                throw new Error(__filename + ': no callbacks given');\n            }\n        }\n\n        for ( name in callbacks ) {\n            if ( callbacks.hasOwnProperty(name) ) {\n                this.addListener(name, callbacks[name]);\n            }\n        }\n    },\n\n\n    /**\n     * Remove all instances of the given callback.\n     *\n     * @param {string} name event identifier\n     * @param {function} callback function to remove\n     *\n     * @example\n     * emitter.removeListener('click', func1);\n     */\n    removeListener: function ( name, callback ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 2 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n            if ( typeof callback !== 'function' ) {\n                throw new Error(__filename + ': wrong callback type');\n            }\n            if ( this.events[name] && !Array.isArray(this.events[name]) ) {\n                throw new Error(__filename + ': corrupted inner data');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( this.events[name] ) {\n            // rework the callback list to exclude the given one\n            this.events[name] = this.events[name].filter(function callbacksFilter ( fn ) { return fn !== callback; });\n            // event has no more callbacks so clean it\n            if ( this.events[name].length === 0 ) {\n                // as if there were no listeners at all\n                this.events[name] = undefined;\n            }\n        }\n    },\n\n\n    /**\n     * Remove all callbacks for the given event name.\n     * Without event name clears all events.\n     *\n     * @param {string} [name] event identifier\n     *\n     * @example\n     * emitter.removeAllListeners('click');\n     * emitter.removeAllListeners();\n     *\n     * @deprecated\n     */\n    /*removeAllListeners: function ( name ) {\n        if ( DEVELOP ) {\n            if ( arguments.length !== 0 && (typeof name !== 'string' || name.length === 0) ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // check input\n        if ( arguments.length === 0 ) {\n            // no arguments so remove everything\n            this.events = {};\n        } else if ( name ) {\n            if ( DEVELOP ) {\n                if ( this.events[name] ) { throw new Error(__filename + ': event is not removed'); }\n            }\n\n            // only name is given so remove all callbacks for the given event\n            // but object structure modification should be avoided\n            this.events[name] = undefined;\n        }\n    },*/\n\n\n    /**\n     * Execute each of the listeners in the given order with the supplied arguments.\n     *\n     * @param {string} name event identifier\n     *\n     * @example\n     * emitter.emit('init');\n     * emitter.emit('click', {src: panel1, dst: panel2});\n     * emitter.emit('load', error, data);\n     *\n     * // it's a good idea to emit event only when there are some listeners\n     * if ( this.events['click'] ) {\n     *     this.emit('click', {event: event});\n     * }\n     */\n    emit: function ( name ) {\n        var event = this.events[name],\n            index;\n\n        if ( DEVELOP ) {\n            if ( arguments.length < 1 ) {\n                throw new Error(__filename + ': wrong arguments number');\n            }\n            if ( typeof name !== 'string' || name.length === 0 ) {\n                throw new Error(__filename + ': wrong or empty name');\n            }\n        }\n\n        // the event exists and should have some callbacks\n        if ( event ) {\n            if ( DEVELOP ) {\n                if ( !Array.isArray(event) ) {\n                    throw new Error(__filename + ': wrong event type');\n                }\n            }\n\n            for ( index = 0; index < event.length; index++ ) {\n                if ( DEVELOP ) {\n                    if ( typeof event[index] !== 'function' ) {\n                        throw new Error(__filename + ': wrong event callback type');\n                    }\n                }\n\n                // invoke the callback with parameters\n                event[index].apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n    }\n};\n\n\n// correct constructor name\nEmitter.prototype.constructor = Emitter;\n\n\n// public\nmodule.exports = Emitter;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    parse   = require('cjs-query').parse,\n    app     = new Emitter();\n\n\n/**\n * Make the given inactive/hidden page active/visible.\n * Pass some data to the page and trigger the corresponding event.\n *\n * @param {Page} page item to show\n * @param {*} [data] data to send to page\n *\n * @return {boolean} operation status\n */\nfunction showPage ( page, data ) {\n    // page available and can be hidden\n    if ( page && !page.active ) {\n        // apply visibility\n        page.$node.classList.add('active');\n        page.active = true;\n        app.activePage = page;\n\n        debug.info('show component ' + page.name + '#' + page.id, null, {\n            tags: ['show', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' show', 'green');\n\n        // there are some listeners\n        if ( page.events['show'] ) {\n            // notify listeners\n            page.emit('show', {data: data});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n/**\n * Make the given active/visible page inactive/hidden and trigger the corresponding event.\n *\n * @param {Page} page item to hide\n *\n * @return {boolean} operation status\n */\nfunction hidePage ( page ) {\n    // page available and can be hidden\n    if ( page && page.active ) {\n        // apply visibility\n        page.$node.classList.remove('active');\n        page.active  = false;\n        app.activePage = null;\n\n        debug.info('hide component ' + page.name + '#' + page.id, null, {\n            tags: ['hide', 'component', page.name, page.id]\n        });\n        //console.log('component ' + page.name + '.' + page.id + ' hide', 'grey');\n\n        // there are some listeners\n        if ( page.events['hide'] ) {\n            // notify listeners\n            page.emit('hide');\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n}\n\n\n// url request params\napp.query = parse(document.location.search.substring(1));\n\n\n// global application configuration\n// in config.js file in js root\napp.config = require('app:config');\n\n\n// the only visible page\napp.activePage = null;\n\n\n/**\n * Browse to a given page.\n * Do nothing if the link is invalid. Otherwise hide the current, show new and update the \"previous\" link.\n *\n * @param {Page} pageTo instance of the page to show\n * @param {*} [data] options to pass to the page on show\n *\n * @return {boolean} operation status\n */\napp.route = function ( pageTo, data ) {\n    var pageFrom = app.activePage;\n\n    if ( DEVELOP ) {\n        //if ( router.pages.length > 0 ) {\n        if ( !pageTo || typeof pageTo !== 'object' ) {\n            throw new Error(__filename + ': wrong pageTo type');\n        }\n        if ( !('active' in pageTo) ) {\n            throw new Error(__filename + ': missing field \"active\" in pageTo');\n        }\n        //}\n    }\n\n    // valid not already active page\n    if ( pageTo && !pageTo.active ) {\n        //debug.log('router.navigate: ' + pageTo.id, pageTo === pageFrom ? 'grey' : 'green');\n        debug.info('app route: ' + pageTo.name + '#' + pageTo.id, null, {tags: ['route', pageTo.name, pageTo.id]});\n\n        // update url\n        //location.hash = this.stringify(name, data);\n\n        // apply visibility\n        hidePage(app.activePage);\n        showPage(pageTo, data);\n\n        // there are some listeners\n        if ( this.events['route'] ) {\n            // notify listeners\n            this.emit('route', {from: pageFrom, to: pageTo});\n        }\n\n        // store\n        //this.history.push(pageTo);\n\n        return true;\n    }\n\n    //debug.warn('invalid page to route: ' + pageTo.id, null, {tags: ['route', 'page', pageTo.id]});\n    console.warn('invalid page to route: ' + pageTo.id);\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component');\n","'use strict';\n\n\nvar keys     = require('stb-keys'),\n    debounce = require('cjs-debounce'),\n\n    Panel  = require('mag-component-panel'),\n    Scroll = require('stb-component-scrollbar'),\n\n    List = require('../settings.list.js'),\n\n    actions = require('../../modules/application.api').actions,\n\n    Option          = require('../../modules/models/option'),\n    contentProvider = require('../../modules/content.provider'),\n    listItemRender  = require('../../modules/renders/list.item'),\n\n    footer     = require('./footer'),\n    popupMenu  = require('./popup.menu'),\n    rightPanel = require('./right.panel'),\n\n    $amountContainer = document.createElement('div'),\n    $amount          = $amountContainer.appendChild(document.createElement('div')),\n\n    panel = new Panel({\n        title: [{value: gettext('Settings'), className: 'name'}, $amountContainer],\n        main: true,\n        children: [],\n        className: 'middlePanel'\n    }),\n    scroll = new Scroll(),\n\n    currentSectionId = 'root',\n\n    navigationHistory = [],\n    lists             = [],\n    filters           = {},\n\n    currentList = null,\n\n    isAdvancedSettingsEnabled = false,\n    restoreFooterOnMenuHide   = false,\n    // rightPanel                = null,\n\n    setInfo = debounce(function ( config ) {\n        rightPanel.setInfo(config);\n    }, core.environment.onFocusDebounceTimeout),\n\n    footerConfig;\n\n\nfunction getDataForSection ( section ) {\n    var leftPanel = require('./left.panel'),\n        data = [],\n        content, index, size;\n\n\n    // console.log('getDataForItem: ' + (section ? section.id : 'root'));\n\n    // console.log('push ' + section);\n\n    if ( section && section.id !== 'root' ) {\n        navigationHistory.push(section);\n        data.push({\n            id: 'back',\n            onclick: function () {\n                panel.back();\n            },\n            name: '..',\n            description: gettext('Back to the previous list'),\n            icon: 'theme-icon-back',\n            render: listItemRender\n        });\n        currentSectionId = section.id;\n    } else {\n        //console.log(navigationHistory.length);\n        //while ( navigationHistory.length ) {\n        //    navigationHistory.pop();\n        //}\n        currentSectionId = 'root';\n    }\n\n    console.log('currentFilter ' + filters[currentSectionId]);\n    console.log('isAdvancedSettingsEnabled ' + isAdvancedSettingsEnabled);\n\n    leftPanel.setSearchQuery(filters[currentSectionId]);\n\n    if ( filters[currentSectionId] ) {\n        content = contentProvider.getContent(currentSectionId, function ( item ) {\n            if ( isAdvancedSettingsEnabled && item.advanced ) {\n                return true;\n            }\n\n            return item.name.toLowerCase().indexOf(filters[currentSectionId]) !== -1;\n        });\n    } else if ( isAdvancedSettingsEnabled ) {\n        content = contentProvider.getContent(currentSectionId);\n    } else {\n        content = contentProvider.getContent(currentSectionId, function ( item ) {\n            return !item.advanced;\n        });\n    }\n\n    if ( content.length === 0 ) {\n        data = [];\n        $amount.innerText = 0;\n    } else {\n        size = content.length;\n        index = 0;\n\n        while ( index < size ) {\n            data.push(content[index]);\n            ++index;\n        }\n\n        $amount.innerText = content.length;\n    }\n\n\n    /*\n    if ( currentFilterName ) {\n        contentProvider.getContent(currentSectionId).forEach(function (item) {\n            if ( item.name.toLowerCase().indexOf(currentFilterName) !== -1 ) {\n                data.push(item);\n            }\n        });\n    } else if ( isAdvancedSettingsEnabled ) {\n        contentProvider.getContent(currentSectionId).forEach(function ( item ) {\n            data.push(item);\n        });\n    } else {\n        contentProvider.getContent(currentSectionId).forEach(function ( item ) {\n            if ( !item.advanced ) {\n                data.push(item);\n            }\n        });\n    }\n     */\n\n    if ( section ) {\n        section.options = [];\n\n        // set inner options to\n        size = data.length;\n        index = 0;\n\n        while ( index < size ) {\n            if ( data[index].type === 'option' ) {\n                section.options.push(data[index]);\n                data[index].section = section;\n            }\n\n            ++index;\n        }\n    }\n\n    return data;\n}\n\n\nif ( TARGET === 'android-stb' ) {\n    footerConfig = {\n        label: {\n            code: keys.menu,\n            title: gettext('Hold OK button to save new settings'),\n            action: function () {\n                setTimeout(function () {\n                    popupMenu.show();\n                }, 0);\n            }\n        }\n    };\n} else {\n    footerConfig = {\n        middle: [\n            {\n                code: keys.f1,\n                title: gettext('Apply'),\n                action: function () {\n                    panel.save();\n                }\n            }\n        ],\n        left: {\n            code: keys.menu,\n            action: function () {\n                popupMenu.show();\n            }\n        }\n    };\n}\n\n\n$amountContainer.className = 'amountContainer';\n$amount.className = 'amount';\n$amount.innerText = '0';\n\n\npanel.list = currentList = new List({\n    propagate: true,\n    cycle: false,\n    focusIndex: 0,\n    size: 7,\n    data: [],\n    scroll: scroll,\n    events: {\n        'focus:item': function ( event ) {\n            var item = event.$curr.data;\n\n            if ( item instanceof Option && item.events.focus ) {\n                item.emit('focus');\n            } else {\n                setInfo(item);\n            }\n        },\n        'click:item': function ( event ) {\n            var item = event.$item.data;\n\n            if ( item instanceof Option ) {\n                if ( event.$item.onclick ) {\n                    event.$item.onclick(true);\n                } else {\n                    item.emit('click');\n                }\n            } else if ( event.$item.data.onclick ) {\n                event.$item.data.onclick();\n            } else if ( event.$item.data.onenter ) {\n                // section\n                /* eslint no-useless-call: 0 */\n                event.$item.data.onenter.call(event.$item.data, function ( error, data ) {\n                    if ( error ) {\n                        core.notify({\n                            title: error,\n                            icon: 'alert',\n                            type: ''\n                        });\n                    } else if ( data && data.length > 0 ) {\n                        // clear exists tree\n                        contentProvider.clearSection(event.$item.data.id);\n                        contentProvider.addContent(data);\n                        event.$item.data.temp = true;\n                        currentList.render(getDataForSection(event.$item.data), function () {\n                            currentList.focusIndex(0);\n\n                            currentList.scroll.init({\n                                realSize: currentList.data.length,\n                                value: currentList.viewIndex\n                            });\n                        });\n                    }\n                });\n            } else {\n                // section\n                currentList.render(getDataForSection(event.$item.data), function () {\n                    currentList.focusIndex(0);\n\n                    currentList.scroll.init({\n                        realSize: currentList.data.length,\n                        value: currentList.viewIndex\n                    });\n                });\n            }\n        },\n        focus: function () {\n            // show footer if list have at least one item\n            footer.instance.init(footerConfig);\n        },\n        change: function ( isChanged ) {\n            if ( isChanged ) {\n                if ( TARGET === 'android-app' ) {\n                    require('../../modules/utils/confirm')(gettext('Apply new settings?'), function ( result ) {\n                        console.log('result ' + result);\n                        if ( result ) {\n                            setTimeout(function () {\n                                panel.save();\n                            }, 0);\n                        }\n                    });\n                } else {\n                    footer.instance.show();\n                }\n            } else {\n                footer.instance.hide();\n            }\n        }\n    }\n});\n\nlists.push(currentList);\n\ncurrentList.addListener('keydown', function ( event ) {\n    switch ( event.code ) {\n        case keys.back:\n            event.stop = panel.back();\n            break;\n\n        default:\n            break;\n    }\n});\n\npanel.add(currentList, currentList.scroll);\n\npanel.setData = function ( data, callback ) {\n    data.forEach(function ( pluginData ) {\n        if ( pluginData.sections && pluginData.sections.length ) {\n            contentProvider.addSections(pluginData.sections);\n        }\n\n        if ( pluginData.options && pluginData.options.length ) {\n            contentProvider.addOptions(pluginData.options);\n        }\n\n        if ( pluginData.content && pluginData.content.length ) {\n            contentProvider.addContent(pluginData.content);\n        }\n    });\n\n    currentList.render(getDataForSection(), function () {\n        panel.focus();\n        currentList.focusIndex(0);\n\n        currentList.scroll.init({\n            realSize: currentList.data.length,\n            value: currentList.viewIndex\n        });\n\n        callback();\n    });\n};\n\n\npanel.save = function () {\n    var requirements = currentList.getSaveRequirements(),\n        reloadMessage, reloadAction;\n\n    if ( requirements.reload ) {\n        if ( requirements.reload.device ) {\n            reloadMessage = gettext('To save new settings, the device should be reloaded');\n            reloadAction = actions.reboot;\n        } else if ( requirements.reload.portal ) {\n            reloadMessage = gettext('To apply new settings, the portal should be reloaded.');\n            reloadAction = actions.reload;\n\n            if ( PLATFORM === 'SMARTTV' || PLATFORM === 'TIZEN' || PLATFORM === 'WEBOS' ) {\n                reloadMessage = gettext('Restart the application to apply new settings.');\n            }\n        }\n\n        core.notify({\n            title: reloadMessage,\n            icon: 'alert',\n            type: '',\n            buttons: [\n                {\n                    value: gettext('Cancel')\n                },\n                {\n                    value: gettext('Ok'),\n                    click: function () {\n                        currentList.save(function () {\n                            footer.instance.hide();\n\n                            reloadAction();\n                        });\n                    }\n                }\n            ]\n        });\n    } else {\n        currentList.save(function () {\n            footer.instance.hide();\n        });\n    }\n\n};\n\n\n/**\n * Method used in page navigation.\n *\n * @return {boolean} false if panel in root of list\n */\npanel.back = function () {\n    var openedSection, focusIndex;\n\n    if ( currentList.empty ) {\n        return false;\n    }\n\n    if ( currentSectionId === 'root' ) {\n        return false;\n    }\n\n    openedSection = navigationHistory.pop();\n\n    if ( openedSection && openedSection.temp ) {\n        contentProvider.clearSection(openedSection.id);\n    }\n\n    // open the parent of opened section\n    currentList.render(getDataForSection(navigationHistory.pop()), function () {\n        focusIndex = currentList.data.indexOf(openedSection);\n        if ( focusIndex === -1 ) {\n            currentList.focusIndex(0);\n            focusIndex = 0;\n        } else {\n            currentList.focusIndex(focusIndex);\n            if ( focusIndex - currentList.size >= 0 ) {\n                focusIndex -= currentList.size;\n            }\n        }\n\n        currentList.scroll.init({\n            realSize: currentList.data.length,\n            value: focusIndex\n        });\n    });\n\n    return true;\n};\n\n\npanel.reset = function () {\n    while ( panel.back() ) {\n        // console.log('back');\n    }\n\n    // reset filters\n    filters = {};\n};\n\n\npanel.refresh = function () {\n    currentList.refresh();\n};\n\n\npanel.init = function ( config ) {\n    var parent;\n\n    if ( currentSectionId === 'root' ) {\n        currentList.initialize(null, config);\n    } else {\n        parent = config.data[0].parent;\n        contentProvider.clearSection(parent);\n        contentProvider.addContent(config.data);\n        // console.log(config.data[0].parent);\n        config.data = contentProvider.getContent(parent);\n\n        currentList.initialize({\n            id: 'back',\n            onclick: function () {\n                panel.back();\n            },\n            name: '..',\n            description: gettext('Back to the previous list'),\n            icon: 'theme-icon-back',\n            render: listItemRender\n        }, config);\n    }\n};\n\n\n/**\n * Filter content on current level by name.\n *\n * @param {Object} config - filter config\n */\npanel.filterContent = function ( config ) {\n    var focusIndex = currentList.viewIndex;\n\n    if ( currentList.$focusItem ) {\n        focusIndex = currentList.$focusItem.index;\n    }\n\n    // console.log('filterContent');\n    // console.log(JSON.stringify(config));\n\n    if ( config.name && config.name.length > 0 ) {\n        filters[currentSectionId] = config.name.toLowerCase();\n        currentList.render(getDataForSection({\n            id: currentSectionId\n        }), function () {\n            navigationHistory.pop();\n            // currentList.focusIndex(0);\n\n            currentList.scroll.init({\n                realSize: currentList.data.length,\n                value: currentList.viewIndex\n            });\n            console.log(currentList.data.length);\n            console.log('focusIndex ' + focusIndex);\n            if ( focusIndex > currentList.data.length ) {\n                currentList.focusIndex(0);\n            } else {\n                currentList.focusIndex(focusIndex);\n            }\n        });\n    } else {\n        if ( typeof config.name !== 'undefined' && config.name.length === 0 ) {\n            filters[currentSectionId] = null;\n        }\n        isAdvancedSettingsEnabled = !!config.advanced;\n        currentList.render(getDataForSection({\n            id: currentSectionId\n        }), function () {\n            navigationHistory.pop();\n            // currentList.focusIndex(0);\n\n            currentList.scroll.init({\n                realSize: currentList.data.length,\n                value: currentList.viewIndex\n            });\n\n            if ( focusIndex > currentList.data.length ) {\n                currentList.focusIndex(0);\n            } else {\n                currentList.focusIndex(focusIndex);\n            }\n        });\n    }\n};\n\n\nif ( TARGET === 'android-stb' ) {\n    popupMenu.addListener('show', function () {\n        if ( footer.instance.visible ) {\n            restoreFooterOnMenuHide = true;\n            footer.instance.hide();\n        }\n    });\n\n    popupMenu.addListener('hide', function () {\n        if ( restoreFooterOnMenuHide ) {\n            restoreFooterOnMenuHide = false;\n            footer.instance.show();\n        }\n    });\n}\n\n\nmodule.exports = panel;\n","/**\n * @license The MIT License (MIT)\n * @copyright Dmitry Fedotov <bas.jsdev@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\nvar StbComponentModal = require('stb-component-modal'),\n    Component         = require('stb-component'),\n    keys              = require('stb-keys');\n\n\n/**\n * Modal window implementation.\n *\n * @constructor\n * @extends StbComponentModal\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {Object} [config.title] message title\n * @param {Object} [config.className] message classname\n * @param {Object} [config.icon] icon at header\n * @param {Object} [config.visible] visibility flag\n * @param {Object} [config.children] content (inherited from the parent)\n *\n * @example\n * var modalSort = new Modal({\n *     visible: false,\n *     title: 'sort',\n *     events: {\n *         show: function () {\n *             list.focus();\n *         },\n *         hide: function () {\n *             page.panelSet.focus();\n *         }\n *     },\n *     children: [list = new RadioList({})]\n * });\n * page.add(modalSort);\n */\nfunction Modal ( config ) {\n    var self = this,\n        $overlay, $body, onkeydown;\n\n    // sanitize\n    config = config || {};\n    config.events = config.events || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( config.icon && typeof config.icon !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.icon');\n        }\n        if ( config.title && typeof config.title !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.title');\n        }\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body ) {\n            throw new Error(__filename + ': config.$body should not be provided in Modal manually');\n        }\n    }\n\n    // usually can't accept focus\n    config.focusable = config.focusable || false;\n    // hide by default\n    config.visible = config.visible || false;\n    // add default close by click\n    config.events.click = config.events.click || function () { self.hide(); };\n    // add close window behavior, when pushed a back button or a menu button\n    onkeydown = config.events.keydown;\n    config.events.keydown = function ( event ) {\n        if ( onkeydown ) {\n            onkeydown.call(this, event);\n        }\n        if ( event.code === keys.back || event.code === keys.menu ) {\n            event.stop = true;\n            self.hide();\n        }\n    };\n\n    // parent constructor call\n    StbComponentModal.call(this, config);\n\n    // add table-cell wrappers\n    this.$node.appendChild(document.createElement('div'));\n    this.$node.firstChild.classList.add('alignBox');\n    this.$node.firstChild.appendChild(document.createElement('div'));\n\n    // add header div\n    this.$header = document.createElement('div');\n    this.$header.className = 'header';\n\n    // insert caption placeholder\n    this.$text = this.$header.appendChild(document.createElement('div'));\n    this.$text.classList.add('text');\n    this.$text.innerText = config.title || '';\n\n    // optional icon\n    if ( config.icon ) {\n        this.$icon = this.$header.appendChild(document.createElement('div'));\n        this.$icon.className = 'icon ' + config.icon;\n    }\n\n    $overlay = document.createElement('div');\n    $overlay.className = 'overlay';\n\n    // add to dom\n    // add body wrapper\n    $body = this.$body.parentNode.removeChild(this.$body);\n    this.$node.firstChild.firstChild.appendChild(this.$header);\n    this.$node.firstChild.firstChild.appendChild($body);\n    this.$node.firstChild.firstChild.appendChild($overlay);\n}\n\n\n// inheritance\nModal.prototype = Object.create(StbComponentModal.prototype);\nModal.prototype.constructor = Modal;\n\n// set component name\nModal.prototype.name = 'mag-component-modal';\n\n\n/**\n * Redefine default component focus to set additional css\n */\nModal.prototype.focus = function () {\n    this.$node.classList.add('active');\n    StbComponentModal.prototype.focus.call(this);\n    if ( this.children[0] && this.children[0] instanceof Component ) {\n        this.children[0].focus();\n    }\n};\n\n\n/**\n * Blur message\n */\nModal.prototype.blur = function () {\n    this.$node.classList.remove('active');\n    StbComponentModal.prototype.blur.call(this);\n};\n\n\n// public\nmodule.exports = Modal;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar List = require('mag-component-list'),\n    Layout = require('mag-component-layout');\n\n/**\n *  Layout list contains array of layout components\n *\n * @constructor\n * @extends List\n *\n * @param {Object} config object\n * @param {Element} [config.noData=''] element or string to display if set empty data\n *\n * @example\n * var CheckList = require('../stb/ui/layout.list'),\n *     list = new LayoutList({\n *         propagate: true,\n *         size: 7,\n *         focusIndex: 0,\n *         noData: 'No channels'\n *         data: [\n *                 {\n *                     items: [\n *                         {\n *                             className: 'star'\n *                         },\n *                         'Some text'\n *                     ],\n *                     click: function () {\n *                         // do something\n *                     }\n *                 },\n *                 {\n *                     items: [\n *                         'Hello world',\n *                         {\n *                             value: 'hi',\n *                             className: 'status'\n *                         }\n *                     ],\n *                     value:{\n *                         uri: 'http://55.55.55.55/some'\n *                     },\n *                     click: someHandler\n *                 },\n *                 {\n *                     items: [\n *                         {\n *                             className: 'big',\n *                             value: ' Some'\n *                         },\n *                         {\n *                             value: new Input()\n *                         }\n *                     ]\n *                 },\n *                 {\n *                     items: [\n *                         new Button({value: 'Ok'}),\n *                         new Button({value: 'Cancel'}),\n *                         new Button({value: 'Exit'})\n *                     ]\n *                 }\n *             ]\n * });\n */\nfunction LayoutList ( config ) {\n    var self = this;\n\n    config = config || {};\n\n    /**\n     * Elements handlers\n     */\n    this.handlers = {};\n\n    /**\n     * No data placeholder\n     *\n     * @type {Element}\n     */\n    this.$noData = null;\n\n    //config.className = 'layoutList ' + (config.className || '');\n\n    config.propagate = config.propagate === undefined ? true : config.propagate;\n\n    /**\n     * Set data layout to be fixed to cache HTML elements\n     *\n     * @type {boolean|*}\n     */\n    this.fixedData = config.fixedData || false;\n\n    //config.$body = document.createElement('div');\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    this.$noData = document.createElement('div');\n    this.$noData.className = 'noData hidden';\n\n    List.call(this, config);\n\n    this.$node.appendChild(this.$body);\n    this.$node.appendChild(this.$noData);\n\n    // add handler to focus inner layout\n    this.addListener('click:item', function ( event ) {\n        // focus inner layout of item\n        if ( event.$item.layout.children.length && !event.inner ) {\n            event.$item.layout.children[event.$item.layout.focusIndex].focus();\n        }\n\n        // only focus item if we click mouse\n        if ( event.inner ) {\n            self.focus();\n            self.focusItem(event.$item);\n        }\n        // do click callback if it present\n        if ( self.handlers[event.$item.index] ) {\n            self.handlers[event.$item.index](event.$item);\n        }\n    });\n}\n\n\nLayoutList.prototype = Object.create(List.prototype);\nLayoutList.prototype.constructor = LayoutList;\n\n// set component name\nLayoutList.prototype.name = 'mag-component-layout-list';\n\n\n/*eslint id-length:0*/\n/**\n * Default render function\n *\n * @param {Element} $item in list\n * @param {Object} config to render layout element\n */\nLayoutList.prototype.renderItemDefault = function ( $item, config ) {\n    var layout, layoutConfig,\n        currentNode,\n        currentData,\n        i;\n\n    if ( $item.ready && this.fixedData ) {\n        for ( i = 0; i < config.items.length; i++ ) {\n            currentData = config.items[i];\n            if ( typeof currentData.value === 'string' || currentData.value === undefined ) {\n                currentNode = $item.layout.$node.childNodes[i];\n                currentNode.innerText = currentData.value || '';\n                currentNode.className = currentData.className || '';\n            }\n        }\n    } else {\n        // clear inner content\n        while ( $item.firstChild ) {\n            $item.removeChild($item.firstChild);\n        }\n\n        layoutConfig = {\n            focusable: false,\n            data: config.items\n        };\n\n        if ( config.className ) {\n            layoutConfig.className = config.className;\n        }\n\n        layout = new Layout(layoutConfig);\n\n        $item.appendChild(layout.$node);\n        $item.layout = layout;\n        layout.parent = this;\n        layout.$parentItem = $item;\n\n        // focus layoutList if click on layout\n        layout.addListener('click', function () {\n            // add inner property to set that event comes from inner component\n            layout.parent.emit('click:item', {$item: $item, inner: true});\n        });\n\n        if ( config.click ) {\n            this.handlers[$item.index] = config.click;\n        }\n        // item is rendered\n        $item.ready = true;\n    }\n    $item.value = config.value || {};\n};\n\n\nLayoutList.prototype.setData = function ( config ) {\n    List.prototype.setData.call(this, config);\n\n    if ( config.data && config.data.length ) {\n        this.$noData.classList.add('hidden');\n    } else {\n        this.$noData.classList.remove('hidden');\n    }\n};\n\n\nLayoutList.prototype.init = function ( config ) {\n    var $wrap;\n\n    List.prototype.init.call(this, config);\n    if ( config.noData ) {\n        if ( DEVELOP ) {\n            if ( typeof config.noData !== 'string' && !(config.noData instanceof Element) ) {\n                throw new Error(__filename + ': wrong config.$noData type');\n            }\n        }\n\n        this.$noData.innerHTML = '';\n        if ( config.noData instanceof Element ) {\n            this.$noData.appendChild(config.noData);\n        } else if ( typeof config.noData === 'string' ) {\n            $wrap = document.createElement('div');\n            $wrap.innerText = config.noData;\n            this.$noData.appendChild($wrap);\n        }\n    }\n\n    if ( config.data && config.data.length ) {\n        this.$noData.classList.add('hidden');\n    } else {\n        this.$noData.classList.remove('hidden');\n    }\n};\n\nLayoutList.prototype.renderItem = LayoutList.prototype.renderItemDefault;\n\n\nmodule.exports = LayoutList;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-scrollbar');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-scrollbar';\n","'use strict';\n\n\nvar Emitter = require('cjs-emitter'),\n\n    listItemRender = require('../renders/list.item');\n\n\nfunction Option ( config ) {\n    var keys     = Object.keys(config),\n        keysSize = keys.length,\n        index    = 0,\n        events   = config.events,\n        event;\n\n    while ( index < keysSize ) {\n        this[keys[index]] = config[keys[index]];\n        ++index;\n    }\n\n    /*\n     * this.saveImmediate;\n     * this.requirePortalReboot;\n     * this.requireDeviceReboot;\n     */\n\n    this.events = {};\n\n    Emitter.call(this, config);\n\n    for ( event in events ) {\n        this.addListener(event, events[event]);\n    }\n\n    if ( typeof this.render === 'undefined' ) {\n        this.render = listItemRender;\n    }\n\n    this.type = 'option';\n    this.cached = null;\n    this.advanced = !!config.advanced;\n}\n\n\n// inheritance\nOption.prototype = Object.create(Emitter.prototype);\nOption.prototype.constructor = Option;\n\n\nmodule.exports = Option;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    Layout = require('mag-component-layout');\n\n/**\n * Extended panel implementation\n\n * @constructor\n * @extends Component\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {boolean} [config.main=false] set panel as main\n * @param {boolean} [config.size=1] size of panel width\n *\n * @example\n *\n * main = new Panel({\n *            size: 1,\n *             title: ['Left Panel', {className: 'info'}],\n *             main:true,\n *             children:[\n *                 new List({\n *                     data:['1 bla', '2 bro', '3 car', '4 hoho', 'Search'],\n *                     size:5\n *                 })\n *             ]\n *         });\n */\nfunction Panel ( config ) {\n    var $overlay;\n\n    config = config || {};\n\n    /**\n     * Size of panel\n     *\n     * @type {number}\n     */\n    this.size = 1;\n\n    /**\n     * Set panel as main\n     *\n     * @type {boolean}\n     */\n    this.main = false;\n\n    /**\n     * Index in panel set\n     *\n     * @type {number}\n     */\n    this.index = 0;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    // set default className if classList property empty or undefined\n    //config.className = 'Panel ' + (config.className || '');\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    //this.$node.classList.add('theme-main');\n    //this.$node.classList.add('theme-panel');\n\n    // add special class to set component size\n    if ( config.size ) {\n        this.size = config.size;\n        this.$node.classList.add('size' + config.size);\n    }\n\n    // add special class to set main panel\n    if ( config.main ) {\n        this.main = true;\n        this.$node.classList.add('main');\n    }\n\n    // create elements to set as component shadow\n    this.$shadow = {\n        left: document.createElement('div'),\n        right: document.createElement('div')\n    };\n\n    this.$shadow.left.className = 'shadow left';\n    this.$node.appendChild(this.$shadow.left);\n\n    this.$shadow.right.className = 'shadow right';\n    this.$node.appendChild(this.$shadow.right);\n\n    // add title to panel\n    if ( config.title ) {\n        if ( !Array.isArray(config.title) ) {\n            config.title = [config.title];\n        }\n        this.$title = new Layout({\n            //className: 'title theme-header theme-title',\n            className: 'title',\n            data: config.title,\n            focusable: false\n        });\n        this.$node.appendChild(this.$title.$node);\n    }\n\n    this.$node.appendChild(this.$body);\n\n    $overlay = document.createElement('div');\n    $overlay.className = 'overlay';\n    this.$node.appendChild($overlay);\n}\n\n// inheritance\nPanel.prototype = Object.create(Component.prototype);\nPanel.prototype.constructor = Panel;\n\n// set component name\nPanel.prototype.name = 'mag-component-panel';\n\n\n/**\n * Default events\n *\n * @type {{focus: Function}} try to focus first child component if it present\n */\nPanel.prototype.defaultEvents = {\n    focus: function () {\n        if ( this.children.length ) {\n            this.children[0].focus();\n        }\n    }\n};\n\n\n/**\n * Redefine default component focus to set panel as active even when give focus to children components\n */\nPanel.prototype.focus = function () {\n    if ( this.focusable ) {\n        this.parent.panels[this.parent.focusIndex].$node.classList.remove('active');\n        this.parent.panels[this.parent.focusIndex].$node.classList.remove('top');\n        Component.prototype.focus.call(this);\n        this.parent.focusIndex = this.index;\n        this.$node.classList.add('active');\n        this.$node.classList.add('top');\n        if ( this.index === 0 && this.parent.panels[1] && this.parent.panels[1].main ) {\n            this.parent.panels[1].$node.classList.remove('position-left');\n            this.parent.panels[1].$node.classList.add('position-right');\n            if ( this.parent.panels[2] ) {\n                this.parent.panels[2].$node.classList.remove('expand');\n            }\n            this.$node.classList.add('expand');\n\n        } else if ( this.index === 2 && this.parent.panels[1].main ) {\n            this.parent.panels[1].$node.classList.remove('position-right');\n            this.parent.panels[1].$node.classList.add('position-left');\n            this.parent.panels[0].$node.classList.remove('expand');\n            this.$node.classList.add('expand');\n        }\n    }\n};\n\n/**\n * Blur panel\n */\nPanel.prototype.blur = function () {\n    this.parent.panels[this.parent.focusIndex].$node.classList.remove('active');\n    Component.prototype.blur.call(this);\n};\n\n\n// public\nmodule.exports = Panel;\n","'use strict';\n\nvar contentProvider = require('./content.provider'),\n    mainPanel = null;\n\n\nmodule.exports = {\n    renders: {\n        listItem: require('./renders/list.item'),\n        popupSelect: require('./renders/popup.select'),\n        popupLayoutList: require('./renders/popup.layout.list'),\n        rangeInput: require('./renders/range.input'),\n        toggle: require('./renders/toggle'),\n        confirm: require('./renders/confirm'),\n        input: require('./renders/input'),\n        checkbox: require('./renders/checkbox')\n    },\n    actions: {\n        setInfo: require('../components/page.main/right.panel').setInfo,\n        applyTheme: function ( themePath ) {\n            var themeCss = document.querySelectorAll('[rel=\"stylesheet\"]')[1];\n\n            console.log(themePath + '/' + window.screen.height + '.css');\n            themeCss.href = themePath + '/' + window.screen.height + '.css';\n        },\n        view: {\n            reset: function () {\n                if ( mainPanel === null ) {\n                    mainPanel = require('../components/page.main/main.panel');\n                }\n\n                mainPanel.reset();\n            },\n            refresh: function () {\n                if ( mainPanel === null ) {\n                    mainPanel = require('../components/page.main/main.panel');\n                }\n\n                mainPanel.refresh();\n            },\n            init: function ( config ) {\n                if ( mainPanel === null ) {\n                    mainPanel = require('../components/page.main/main.panel');\n                }\n\n                mainPanel.init(config);\n            }\n        }\n    },\n    getters: {\n\n    },\n    savers: {\n    },\n    sections: {\n        add: function ( data ) {\n            contentProvider.addSections(data);\n        },\n        remove: function ( sectionId ) {\n            contentProvider.removeSections(sectionId);\n        }\n    },\n    options: {\n        add: function ( data ) {\n            contentProvider.addOptions(data);\n        },\n        remove: function ( data ) {\n            contentProvider.removeOptions(data);\n        }\n    },\n    content: {\n        add: function ( data ) {\n            contentProvider.addContent(data);\n        },\n        remove: function ( data ) {\n            contentProvider.removeContent(data);\n        }\n    }\n};\n","'use strict';\n\n\nmodule.exports = function ( title, callback ) {\n    core.notify({\n        title: title,\n        icon: 'info',\n        type: '',\n        buttons: [\n            {\n                value: gettext('Cancel'),\n                click: function () {\n                    callback();\n                }\n            },\n            {\n                value: gettext('Ok'),\n                click: function () {\n                    callback(true);\n                }\n            }\n        ]\n    });\n};\n","'use strict';\n\n\nvar preloader = require('spa-preloader'),\n\n    Panel      = require('mag-component-panel'),\n    ScrollBar  = require('stb-component-scrollbar'),\n    ScrollArea = require('mag-component-scroll-area'),\n\n    //footer = require('./footer'),\n\n    panel    = new Panel({\n        title: gettext('Info'),\n        children: [],\n        className: 'rightPanel'\n    }),\n    scroll   = new ScrollBar(),\n    textArea = new ScrollArea({\n        propagate: true,\n        step: 5,\n        scroll: scroll\n    });\n\n\npanel.add(textArea, scroll);\n\ntextArea.$body.$preview = textArea.$body.appendChild(document.createElement('canvas'));\ntextArea.$body.$preview.className = 'preview';\ntextArea.$body.$text = textArea.$body.appendChild(document.createElement('div'));\ntextArea.$body.$text.className = 'text';\n\n\npanel.setInfo = function ( config ) {\n    var $fragment;\n\n    textArea.$body.$text.innerHTML = '';\n    if ( config.preview ) {\n        preloader.add([config.preview]);\n        preloader.once('link', function () {\n            textArea.$body.$preview.style.backgroundImage = 'url(\"' + config.preview + '\")';\n            textArea.$body.$preview.classList.remove('hidden');\n        });\n    } else {\n        textArea.$body.$preview.classList.add('hidden');\n    }\n\n    if ( typeof config.description === 'string' ) {\n        textArea.$body.$text.innerText = config.description;\n    } else if ( config.description && config.description.length ) {\n        // array of values\n        $fragment = document.createDocumentFragment();\n        config.description.forEach(function ( item ) {\n            var $node = $fragment.appendChild(document.createElement('span'));\n\n            $node.className = 'theme-subhead-color';\n            $node.innerText = item.label + ' ';\n\n            $node = $fragment.appendChild(document.createElement('span'));\n            $node.className = '';\n            $node.innerText = item.value;\n\n            $fragment.appendChild(document.createElement('br'));\n        });\n        textArea.$body.$text.appendChild($fragment);\n    }\n\n    textArea.init();\n};\n\n\nmodule.exports = panel;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('./core');\n\n\n// public\nmodule.exports = {\n    DOMContentLoaded: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // there are some listeners\n        if ( app.events['dom'] ) {\n            // notify listeners\n            app.emit('dom', event);\n            //console.log('DOMContentLoaded');\n        }\n    },\n\n    /**\n     * The load event is fired when a resource and its dependent resources have finished loading.\n     *\n     * Control flow:\n     *   1. Global handler.\n     *   2. Each page handler.\n     *   3. Application DONE event.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/load\n     *\n     * @param {Event} event generated object with event data\n     */\n    load: function ( event ) {\n        //var path;\n\n        //debug.event(event);\n        //console.log(event);\n\n        // time mark\n        //app.data.time.load = event.timeStamp;\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' load', 'green');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n\n        // time mark\n        //app.data.time.done = +new Date();\n\n        // everything is ready\n        // and there are some listeners\n        // if ( app.events['done'] ) {\n        //     // notify listeners\n        //     app.emit('done', event);\n        // }\n    },\n\n    /**\n     * The unload event is fired when the document or a child resource is being unloaded.\n     *\n     * Control flow:\n     *   1. Each page handler.\n     *   2. Global handler.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/unload\n     *\n     * @param {Event} event generated object with event data\n     */\n    unload: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // global handler\n        // there are some listeners\n        if ( app.events[event.type] ) {\n            // notify listeners\n            app.emit(event.type, event);\n        }\n\n        // local handler on each page\n        /*router.pages.forEach(function forEachPages ( page ) {\n         debug.log('component ' + page.constructor.name + '.' + page.id + ' unload', 'red');\n\n         // there are some listeners\n         if ( page.events[event.type] ) {\n         // notify listeners\n         page.emit(event.type, event);\n         }\n         });*/\n    },\n\n    /**\n     * The error event is fired when a resource failed to load.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/error\n     *\n     * @param {Event} event generated object with event data\n     */\n    error: function ( event ) {\n        //debug.event(event);\n        //console.log(event);\n        //debug.fail('app event: ' + event.message, event, {tags: [event.type, 'event']});\n        console.error('app event: ' + event.message, event);\n    },\n\n    /**\n     * The keydown event is fired when a key is pressed down.\n     * Set event.stop to true in order to prevent bubbling.\n     *\n     * Control flow:\n     *   1. Current active component on the active page.\n     *   2. Current active page itself.\n     *   3. Application.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keydown\n     *\n     * @param {Event} event generated object with event data\n     */\n    keydown: function ( event ) {\n        var page = app.activePage,\n            eventLocal = {\n                code: event.keyCode,\n                stop: false\n            },\n            activeComponent;\n\n        if ( DEVELOP ) {\n            if ( !page ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        // filter phantoms\n        //if ( event.keyCode === 0 ) { return; }\n\n        // combined key code\n        //event.code = event.keyCode;\n\n        // apply key modifiers\n        if ( event.ctrlKey )  { eventLocal.code += 'c'; }\n        if ( event.altKey )   { eventLocal.code += 'a'; }\n        if ( event.shiftKey ) { eventLocal.code += 's'; }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + eventLocal.code, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + eventLocal.code, event);\n\n        // page.activeComponent can be set to null in event handles\n        activeComponent = page.activeComponent;\n\n        // current component handler\n        if ( activeComponent && activeComponent !== page ) {\n            // component is available and not page itself\n            if ( activeComponent.events[event.type] ) {\n                // there are some listeners\n                activeComponent.emit(event.type, eventLocal, event);\n            }\n\n            // todo: bubble event recursively\n            // bubbling\n            if (\n                !eventLocal.stop &&\n                activeComponent.propagate &&\n                activeComponent.parent &&\n                activeComponent.parent.events[event.type]\n            ) {\n                activeComponent.parent.emit(event.type, eventLocal, event);\n            }\n        }\n\n        // page handler\n        if ( !eventLocal.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, eventLocal, event);\n            }\n\n            // global app handler\n            if ( !event.stop ) {\n                // not prevented\n                if ( app.events[event.type] ) {\n                    // there are some listeners\n                    app.emit(event.type, eventLocal, event);\n                }\n            }\n        }\n\n        //// suppress non-printable keys in stb device (not in your browser)\n        //if ( app.data.host && keyCodes[event.code] ) {\n        //    event.preventDefault();\n        //}\n    },\n\n    /**\n     * The keypress event is fired when press a printable character.\n     * Delivers the event only to activeComponent at active page.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/keypress\n     *\n     * @param {Event} event generated object with event data\n     * @param {string} event.char entered character\n     */\n    keypress: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type + ' - ' + event.key, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type + ' - ' + event.key, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n    },\n\n    /**\n     * The click event is fired when a pointing device button (usually a mouse button) is pressed and released on a single element.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/click\n     *\n     * @param {Event} event generated object with event data\n     */\n    /*click: function ( event ) {\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n     },*/\n\n    /**\n     * The contextmenu event is fired when the right button of the mouse is clicked (before the context menu is displayed),\n     * or when the context menu key is pressed (in which case the context menu is displayed at the bottom left of the focused\n     * element, unless the element is a tree, in which case the context menu is displayed at the bottom left of the current row).\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/contextmenu\n     *\n     * @param {Event} event generated object with event data\n     */\n    // contextmenu: function ( event ) {\n    //     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n    //\n    //     if ( !DEVELOP ) {\n    //         // disable right click in release mode\n    //         event.preventDefault();\n    //     }\n    // },\n\n    /*contextmenu: function ( event ) {\n     //var kbEvent = {}; //Object.create(document.createEvent('KeyboardEvent'));\n\n     //debug.event(event);\n     //console.log(event);\n     debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n\n     //kbEvent.type    = 'keydown';\n     //kbEvent.keyCode = 8;\n\n     //debug.log(kbEvent.type);\n\n     //globalEventListenerKeydown(kbEvent);\n     //var event = document.createEvent('KeyboardEvent');\n     //event.initEvent('keydown', true, true);\n\n     //document.dispatchEvent(kbEvent);\n\n     if ( !DEVELOP ) {\n     // disable right click in release mode\n     event.preventDefault();\n     }\n     },*/\n\n    /**\n     * The wheel event is fired when a wheel button of a pointing device (usually a mouse) is rotated.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel\n     *\n     * @param {Event} event generated object with event data\n     */\n    mousewheel: function ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( page === null || page === undefined ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        //debug.event(event);\n        //console.log(event);\n        //debug.info('app event: ' + event.type, event, {tags: [event.type, 'event']});\n        console.log('app event: ' + event.type, event);\n\n        // current component handler\n        if ( page.activeComponent && page.activeComponent !== page ) {\n            // component is available and not page itself\n            if ( page.activeComponent.events[event.type] ) {\n                // there are some listeners\n                page.activeComponent.emit(event.type, event);\n            }\n        }\n\n        // page handler\n        if ( !event.stop ) {\n            // not prevented\n            if ( page.events[event.type] ) {\n                // there are some listeners\n                page.emit(event.type, event);\n            }\n        }\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core');\n//    metrics = require('app:metrics'),\n//    linkCSS;\n\n\n// global link\n//app.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\n//app.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\n//app.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n// // set max browser window size\n// window.moveTo(0, 0);\n// window.resizeTo(metrics.width, metrics.height);\n\n// load CSS file base on resolution\n/*linkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = 'css/' + (DEVELOP ? 'develop.' : 'release.') + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);*/\n\n\n// public\nmodule.exports = function ( name ) {\n    var link = document.createElement('link');\n\n    link.rel  = 'stylesheet';\n    link.href = 'css/' + name + '.' + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\n    document.head.appendChild(link);\n};\n","/**\n * Global list of non-printable control key codes.\n *\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n * @license GNU GENERAL PUBLIC LICENSE Version 3\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    backspace: 8,\n    tab:       9,\n    enter:     13,\n    escape:    27,\n    space:     32,\n    pageUp:    33,\n    pageDown:  34,\n    end:       35,\n    home:      36,\n    left:      37,\n    up:        38,\n    right:     39,\n    down:      40,\n    insert:    45,\n    // not \"delete\" because of old browsers issue\n    del:       46\n};\n","'use strict';\n\n\nvar Panel        = require('mag-component-panel'),\n    LayoutList   = require('mag-component-layout-list'),\n\n    //footer      = require('./footer'),\n    exitConfirm = require('../widgets/exit.confirm'),\n    mainPanel   = require('./main.panel'),\n\n    panel        = new Panel({\n        title: gettext('Menu'),\n        children: [],\n        className: 'leftPanel'\n    }),\n    list = new LayoutList({\n        cycle: true,\n        focusIndex: 0,\n        size: 3,\n        events: {\n            focus: function () {\n                // show footer if list have at least one item\n                //footer.init();\n            },\n            blur: function () {\n                //footer.init();\n            }\n        }\n    }),\n    $searchIcon = null,\n    $searchText = null,\n    menuData;\n\n\nmenuData = [\n    {\n        items: [\n            {\n                className: 'theme-icon theme-icon-search',\n                value: ''\n            },\n            {\n                value: gettext('Search')\n            }\n        ],\n        click: function ( $item ) {\n            $searchIcon = $item.firstChild.firstChild;\n            $searchText = $item.firstChild.lastChild;\n\n            core.intent({\n                action: 'keyboard',\n                data: {\n                    title: 'Enter query',\n                    value: $item.lastChild.lastChild.innerText === gettext('Search') ? '' : $item.lastChild.lastChild.innerText\n                },\n                events: {\n                    done: function ( event ) {\n                        // var mainPanel = require('./main.panel');\n                        // if ( mainPanel === null ) {\n                        //     mainPanel = require('./main.panel')\n                        // }\n\n                        mainPanel.filterContent({\n                            name: event.value\n                        });\n                        panel.setSearchQuery(event.value);\n                    }\n                }\n            }, function ( error ) {\n                console.log(error);\n            });\n        }\n    },\n    {\n        items: [\n            {\n                className: 'theme-icon theme-icon-toggle'\n            },\n            {\n                value: gettext('Advanced')\n            }\n        ],\n        click: function ( event )  {\n            // var mainPanel = require('./main.panel');\n\n            if ( this.advanced ) {\n                event.layout.$body.children[0].className = 'theme-icon theme-icon-toggle';\n            } else {\n                event.layout.$body.children[0].className = 'theme-icon theme-icon-toggle-active active';\n            }\n            this.advanced = !this.advanced;\n\n            mainPanel.filterContent({\n                advanced: this.advanced\n            });\n        }\n    },\n    {\n        items: [\n            {\n                className: 'theme-icon theme-icon-exit'\n            },\n            {\n                value: gettext('Exit')\n            }\n        ],\n        click: function () {\n            exitConfirm.show(list);\n        }\n    }\n];\n\n\nif ( PLATFORM !== 'MAG' ) {\n    menuData.splice(1, 1);\n}\n\nlist.setData({\n    data: menuData,\n    focusIndex: 0\n});\n\n\npanel.setSearchQuery = function ( query ) {\n    if ( $searchIcon !== null ) {\n        // already initialzed\n        if ( query ) {\n            $searchIcon.classList.add('active');\n            $searchText.innerText = query;\n        } else {\n            $searchIcon.classList.remove('active');\n            $searchText.innerText = gettext('Search');\n        }\n    }\n};\n\npanel.add(list);\n\nmodule.exports = panel;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n/**\n * Layout component implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array} [config.data] array of items to add to layout\n */\nfunction Layout ( config ) {\n    var self = this;\n\n    // sanitize\n    config = config || {};\n\n    /**\n     * Index of focused child component\n     * @type {number}\n     */\n    this.focusIndex = 0;\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && config.className !== undefined && typeof config.className !== 'string' ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    //config.className = 'layout ' + (config.className || '');\n\n    /**\n     * Component data\n     * @type {Array}\n     */\n    this.data = [];\n\n    Component.call(this, config);\n\n    this.init(config);\n\n    // add listener to move focus between children\n    this.addListener('keydown', function ( event ) {\n        switch ( event.code ) {\n            case keys.right:\n                if ( self.children.length && self.focusIndex < self.children.length - 1 ) {\n                    self.children[++self.focusIndex].focus();\n                }\n                break;\n            case keys.left:\n                if ( self.children.length && self.focusIndex > 0 ) {\n                    self.children[--self.focusIndex].focus();\n                }\n                break;\n            case keys.back:\n                // focus parent focused item if parent is layout list\n                if ( self.parent ) {\n                    self.parent.focus();\n                    if ( self.$parentItem ) {\n                        self.parent.focusItem(self.$parentItem);\n                    }\n                }\n                break;\n        }\n    });\n}\n\n\nLayout.prototype = Object.create(Component.prototype);\nLayout.prototype.constructor = Layout;\n\n// set component name\nLayout.prototype.name = 'mag-component-layout';\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var index, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( index = 0; index < data.length; index++ ) {\n        // cell value\n        item = data[index];\n        // plain text\n        if ( typeof item === 'object' ) {\n            // HTML element or component\n            if ( item instanceof Component || item instanceof HTMLElement ) {\n                data[index] = {\n                    value: item,\n                    wrap: false\n                };\n            } else {\n                data[index].wrap = true;\n            }\n        } else {\n            // wrap with defaults\n            data[index] = {\n                value: data[index],\n                wrap: true\n            };\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nLayout.prototype.init = function ( config ) {\n    var self = this,\n        data = normalize(config.data),\n        item, $wrapper, index;\n\n    // clear element if reinit\n    while (this.$node.firstChild) {\n        this.$node.removeChild(this.$node.firstChild);\n    }\n\n    this.data = data;\n\n    /**\n     * @this Component\n     */\n    function componentClickHandler (  ) {\n        self.focusIndex = this.index;\n    }\n\n    for ( index = 0; index < data.length; index++ ) {\n        item = data[index];\n        // plain text\n        if ( typeof item.value === 'string' ) {\n            $wrapper = document.createElement('div');\n            $wrapper.textContent = item.value;\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n        } else if ( item.value instanceof HTMLElement ) {\n            // HTML Element\n\n            // if with wrapper\n            if ( item.wrap ) {\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value);\n                this.$node.appendChild($wrapper);\n            } else {\n                // without wrapper\n                this.$node.appendChild(item.value);\n            }\n        } else if ( item.value instanceof Component ) {\n            // component\n            // force propagate events\n            item.value.propagate = true;\n\n            // set index to current component\n            item.value.index = this.children.length;\n\n            // change layout focus index if click component\n            item.value.addListener('click', componentClickHandler);\n\n            // append component\n            if ( item.wrap ) {\n                // with wrapper\n                $wrapper = document.createElement('div');\n                if ( item.className ) { $wrapper.className = item.className; }\n                $wrapper.appendChild(item.value.$node);\n                this.$node.appendChild($wrapper);\n                this.children.push(item.value);\n                item.value.parent = this;\n            } else {\n                // without wrapper\n                this.add(item.value);\n            }\n        } else {\n            $wrapper = document.createElement('div');\n            if ( item.className ) { $wrapper.className = item.className; }\n            this.$node.appendChild($wrapper);\n        }\n    }\n};\n\n\nmodule.exports = Layout;\n","'use strict';\n\nvar app  = require('mag-app'),\n    keys = require('stb-keys'),\n\n    Widget = require('spa-component-widget'),\n    ModalMessage  = require('mag-component-modal'),\n    LayoutList    = require('mag-component-layout-list'),\n    exitModal = new ModalMessage({\n        title: gettext('Exit'),\n        visible: true\n    }),\n    widget = new Widget({\n        $node: window.widgetExitConfirm,\n        visible: false,\n        events: {\n            show: function () {\n                exitModal.focus();\n            }\n        }\n    });\n\n\nexitModal.add(new LayoutList({\n    parent: exitModal,\n    className: 'padded',\n    size: 2,\n    focusIndex: 0,\n    data: [\n        {\n            items: [\n                {\n                    value: gettext('Yes')\n                }\n            ],\n            click: function () {\n                if ( PLATFORM === 'STB' ) {\n                    if ( app.query.standalone ) {\n                        window.top.stbWebWindow.close();\n                    } else {\n                        app.exit();\n                    }\n                } else {\n                    app.exit();\n                }\n            }\n        },\n        {\n            items: [\n                {\n                    value: gettext('No')\n                }\n            ],\n            click: function () {\n                // widget\n                exitModal.parent.hide();\n            }\n        }\n    ],\n    events: {\n        keydown: function ( event ) {\n            LayoutList.prototype.defaultEvents.keydown.call(this, event);\n            if ( event.code === keys.back ) {\n                event.stop = true;\n                // widget\n                exitModal.parent.hide();\n            }\n        }\n    }\n}));\nwidget.add(exitModal);\n\n\nmodule.exports = widget;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-list');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-list';\n","/**\n * Created by harry on 09.03.17.\n */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    Section = require('./models/section'),\n    Option  = require('./models/option'),\n\n    provider = new Emitter();\n\n\nif ( DEVELOP ) {\n    window.ids = {};\n}\n\n\nprovider.data = {\n    root: []\n};\n\n\nprovider.advanced = false;\n\n/* eslint no-path-concat: 0 */\n/**\n * Add new options to data.\n *\n * @param {Array} data - options array to add\n */\nprovider.addOptions = function ( data ) {\n    var iteration, parent;\n\n    for ( iteration = 0; iteration < data.length; iteration++ ) {\n        // console.log(data[iteration].parent);\n        parent = data[iteration].parent || 'root';\n        // console.log('new option ' + data[iteration].id + ' to ' + parent);\n\n        if ( DEVELOP ) {\n            if ( !provider.data[parent] ) {\n                throw new Error(__filename + ': Not found parent section \"' + parent + '\" for option ' + data[iteration].id);\n            }\n\n            if ( window.ids[data[iteration].id] ) {\n                throw new Error(__filename + ': Found duplicate option id - \"' + data[iteration].id + '\"');\n            }\n            window.ids[data[iteration].id] = 1;\n        }\n\n        data[iteration] = new Option(data[iteration]);\n\n        this.data[parent].push(data[iteration]);\n    }\n\n    provider.emit('content:added', {options: data});\n};\n\n\n/**\n * Remove options from data.\n *\n * @param {Array} data - options array to remove\n */\nprovider.removeOptions = function ( data ) {\n    var iteration, parent,\n        index = -1;\n\n    for ( iteration = 0; iteration < data.length; iteration++ ) {\n        parent = data[iteration].parent || 'root';\n\n        if ( DEVELOP ) {\n            if ( !window.ids[parent] ) {\n                throw new Error(__filename + ': Not found section - \"' + parent + '\"');\n            }\n\n            if ( !window.ids[data[iteration].id] ) {\n                throw new Error(__filename + ': Not found option - \"' + data[iteration].id + '\"');\n            }\n\n            window.ids[data[iteration].id] = 0;\n        }\n\n        index = this.data[parent].indexOf(data[iteration]);\n\n        if ( DEVELOP ) {\n            if ( index === -1 ) {\n                throw new Error(__filename + ': Not found option - \"' + data[iteration].id + '\"');\n            }\n        }\n\n        this.data[parent].splice(index, 1);\n    }\n\n    provider.emit('content:removed', {options: data});\n};\n\n\n/**\n * Add new sections to data.\n *\n * @param {Array} data - sections array to add\n */\nprovider.addSections = function ( data ) {\n    var iteration, parent;\n\n    for ( iteration = 0; iteration < data.length; iteration++ ) {\n        parent = data[iteration].parent || 'root';\n        // console.log('new section ' + data[iteration].id + ' to ' + parent);\n\n        if ( DEVELOP ) {\n            if ( !provider.data[parent] ) {\n                throw new Error(__filename + ': Not found parent section id - \"' + parent + '\" for option ' + data[iteration].id);\n            }\n            if ( window.ids[data[iteration].id] ) {\n                throw new Error(__filename + ': Found duplicate section id - \"' + data[iteration].id + '\"');\n            }\n            window.ids[data[iteration].id] = 1;\n        }\n\n        data[iteration] = new Section(data[iteration]);\n\n        this.data[parent].push(data[iteration]);\n        this.data[data[iteration].id] = [];\n    }\n\n    provider.emit('content:added', {sections: data});\n};\n\n\n/**\n * Remove sections from data.\n *\n * @param {Array} data - sections array to remove\n */\nprovider.removeSections = function ( data ) {\n    var iteration, parent, index;\n    // changes = [];\n\n    for ( iteration = 0; iteration < data.length; iteration++ ) {\n        parent = data[iteration].parent || 'root';\n\n        if ( DEVELOP ) {\n            if ( !window.ids[parent] ) {\n                throw new Error(__filename + ': Not found parent section - \"' + parent + '\"');\n            }\n\n            if ( !window.ids[data[iteration].id] ) {\n                throw new Error(__filename + ': Not found section - \"' + data[iteration].id + '\"');\n            }\n\n            window.ids[data[iteration].id] = null;\n        }\n\n        index = this.data[parent].indexOf(data[iteration]);\n\n        if ( DEVELOP ) {\n            if ( index === -1 ) {\n                throw new Error(__filename + ': Not found section - \"' + data[iteration].id + '\"');\n            }\n        }\n\n        this.data[parent][index] = null;\n        this.data[parent].splice(index, 1);\n\n    }\n\n    // provider.emit('content:removed', {sections: changes});\n};\n\n\nprovider.addContent = function ( data ) {\n    var self = this;\n\n    data.forEach(function ( item ) {\n        if ( item.type === 'section' ) {\n            self.addSections([item]);\n\n            return;\n        }\n\n        if ( item.type === 'option' ) {\n            self.addOptions([item]);\n\n            return;\n        }\n\n        if ( DEVELOP ) {\n            throw new Error(__filename + ' content item must have type, id: ' + item.id);\n        }\n    });\n};\n\n\nprovider.removeContent = function ( data ) {\n    var self = this;\n\n    data.forEach(function ( item ) {\n        if ( item.type === 'section' ) {\n            self.removeSections([item]);\n\n            return;\n        }\n        if ( item.type === 'option' ) {\n            self.removeOptions([item]);\n\n            return;\n        }\n\n        if ( DEVELOP ) {\n            throw new Error(__filename + ' content item must have type, id: ' + item.id);\n        }\n    });\n};\n\n\nprovider.getContent = function ( sectionId, filterCallback ) {\n    var data  = [],\n        index = 0,\n        size  = 0;\n\n    if ( this.data[sectionId] ) {\n        size = this.data[sectionId].length;\n        if ( typeof filterCallback === 'function' ) {\n            // filter enabled\n            data = [];\n            while ( index < size ) {\n                if ( filterCallback(this.data[sectionId][index]) ) {\n                    data.push(this.data[sectionId][index]);\n                }\n                ++index;\n            }\n        } else {\n            data = this.data[sectionId];\n        }\n    }\n\n    return data;\n};\n\n\nprovider.clearSection = function ( id ) {\n    var self = this;\n\n    this.data[id].forEach(function ( item ) {\n        if ( DEVELOP ) {\n            // console.log('clear ' + item.id);\n            window.ids[item.id] = null;\n            if ( self.data[item.id] ) {\n                self.data[item.id].forEach(function ( child ) {\n                    // console.log('clear ' + child.id);\n                    window.ids[child.id] = null;\n                });\n            }\n        }\n        if ( self.data[item.id] ) {\n            // section\n            self.clearSection(item.id);\n        }\n    });\n\n    this.data[id] = [];\n};\n\nmodule.exports = provider;\n","'use strict';\n\n\nvar Footer = require('mag-component-footer');\n\n\nmodule.exports = {\n    prepare: function ( page ) {\n        this.instance = new Footer({\n            visible: false,\n            parent:  page\n        });\n    },\n    instance: null\n};\n","'use strict';\n\nvar app  = require('mag-app'),\n    keys = require('stb-keys'),\n\n    ModalMessage  = require('mag-component-modal'),\n    LayoutList    = require('mag-component-layout-list'),\n\n    menu = new ModalMessage({\n        title: gettext('Actions'),\n        visible: false,\n        events: {\n            show: function () {\n                app.activePanelSet.blur();\n                this.children[0].focus();\n            },\n            hide: function () {\n                setTimeout(function () {\n                    app.activePanelSet.focus();\n                }, 0);\n            }\n        }\n    }),\n\n    layoutItems;\n\n\nif ( TARGET === 'android-stb' ) {\n    layoutItems = [\n        {\n            className: 'title',\n            value: gettext('Save new settings')\n        }\n    ];\n} else {\n    layoutItems = [\n        {\n            className: 'theme-icon theme-icon-rc-f1'\n        },\n        {\n            className: 'title',\n            value: gettext('Save new settings')\n        }\n    ];\n}\n\n\nmenu.add(new LayoutList({\n    className: 'padded',\n    size: 1,\n    focusIndex: 0,\n    data: [\n        {\n            items: layoutItems,\n            click: function () {\n                require('./main.panel').save();\n                // popup hide\n                menu.hide();\n            }\n        }\n    ],\n    events: {\n        keydown: function ( event ) {\n            LayoutList.prototype.defaultEvents.keydown.call(this, event);\n            if ( event.code === keys.back ) {\n                event.stop = true;\n                // popup hide\n                menu.hide();\n            }\n        }\n    }\n}));\n\n\nmodule.exports = menu;\n","/**\n * Main application entry point.\n */\n\n'use strict';\n\n\n/* eslint vars-on-top: 0 */\nvar app  = require('mag-app'),\n    keys = require('stb-keys');\n\n\nif ( TARGET === 'android-stb' || TARGET === 'android-app' ) {\n    window.removeEventListener('keydown', require('spa-app/lib/events').keydown);\n    require('../../../helpers/longpress')(app, {code: keys.ok, emitCode: keys.menu});\n}\n\n\n// everything is ready\napp.once('load', function () {\n    require('spa-gettext').load({name: core.environment.language}, function () {\n        // load pages\n        app.pages = {\n            main: require('./pages/main')\n        };\n\n        // current active panel set\n        app.activePanelSet = null;\n\n        core.plugins.settings.init(require('./modules/application.api'), function ( error, data ) {\n            if ( error ) {\n                app.route(app.pages.main, []);\n            } else {\n                app.route(app.pages.main, data);\n            }\n\n            app.ready();\n\n            core.once('exit', function () {\n                var actions = require('./modules/application.api').actions;\n\n                if ( actions.saveSettings ) {\n                    actions.saveSettings();\n                }\n            });\n        });\n    });\n});\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app    = require('spa-app/lib/core'),\n    events = require('spa-app/lib/events');\n\n\n// get instance\nwindow.core = window.parent.getCoreInstance(window, app);\n\n// shims\nrequire('stb-shim-classlist');\n\n// apply geometry\nrequire('stb-app/lib/metrics');\n\n// load sdk css\nrequire('stb-app/lib/css')('sdk');\n\n// load theme css\nrequire('./css');\n\n// load app css\nrequire('stb-app/lib/css')('app');\n\n/**\n * Specify platform name\n *\n * @type {string}\n */\napp.platform = 'mag';\n\n/**\n * Show app.\n */\napp.ready = function () {\n    // if ( this.events['show'] ) {\n    //     this.emit('show');\n    // }\n    window.core.call('app:ready');\n};\n\n\n/**\n * Exit from app.\n * Destroy all application instance.\n * If callback function provided, and callback returns boolean 'true', application will stay alive.\n *\n * @fires module:/stb/app#exit\n */\napp.exit = function () {\n    if ( app.events['exit'] ) {\n        app.emit('exit');\n    }\n\n    core.call('exit');\n};\n\n\nevents.load = function ( event ) {\n    //window.core = window.parent.getCoreInstanse(window, app);\n    document.body.setAttribute('platform', app.platform);\n\n    if ( core.ready ) {\n        if ( app.events['load'] ) {\n            // notify listeners\n            app.emit('load', {});\n        }\n    } else {\n        core.once('load', function () {\n            //core.ready = true;\n            if ( app.events[event.type] ) {\n                // notify listeners\n                app.emit(event.type, event);\n            }\n        });\n    }\n};\n\n\n// activate development mechanisms and tools\nif ( DEVELOP ) {\n    //require('stb-develop');\n    require('./develop/main');\n} else {\n    // disable context menu\n    events.contextmenu = function ( event ) {\n        event.preventDefault();\n    };\n}\n\n\n//apply DOM events\nObject.keys(events).forEach(function ( name ) {\n    window.addEventListener(name, events[name]);\n});\n\n\n// new way of string handling\n// all strings are in UTF-16\n// since stbapp 2.18\n// if ( window.gSTB && gSTB.SetNativeStringMode ) {\n//     /* eslint new-cap: 0 */\n//     gSTB.SetNativeStringMode(true);\n// }\n\n// public\nmodule.exports = app;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\nmodule.exports = {\n    /**\n     * Parse the given location search string into object.\n     *\n     * @param {string} query string to parse\n     *\n     * @return {Object.<string, string>} result data\n     */\n    parse: function ( query ) {\n        var data = {};\n\n        // parse and fill the data\n        query.split('&').forEach(function ( part ) {\n            part = part.split('=');\n            // valid number on params\n            if ( part.length === 2 ) {\n                data[part[0]] = decodeURIComponent(part[1]);\n            }\n        });\n\n        return data;\n    },\n\n\n    /**\n     * Make uri query part in a string form.\n     *\n     * @param {Object} params data to stringify\n     *\n     * @return {string} query string\n     */\n    stringify: function ( params ) {\n        var data = [];\n\n        Object.keys(params).forEach(function ( name ) {\n            data.push(name + '=' + encodeURIComponent(params[name]));\n        });\n\n        return data.join('&');\n    }\n};\n","/**\n * Global application configuration.\n * Can store run-time options, API urls, paths, execution flags and so on.\n * Automatically loaded on application initialization and available as app.config.\n */\n\n'use strict';\n\n// public\nmodule.exports = {};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint-disable */\n\n'use strict';\n\n\nif ( !document.documentElement.classList ) {\n    var prototype = Array.prototype,\n        indexOf   = prototype.indexOf,\n        slice     = prototype.slice,\n        push      = prototype.push,\n        splice    = prototype.splice,\n        join      = prototype.join;\n\n    window.DOMTokenList = function ( el ) {\n        this._element = el;\n        if (el.className !== this._classCache) {\n            this._classCache = el.className;\n            if (!this._classCache) { return; }\n            var classes = this._classCache.replace(/^\\s+|\\s+$/g,'').split(/\\s+/),\n                i;\n            for (i = 0; i < classes.length; i++) {\n                push.call(this, classes[i]);\n            }\n        }\n    };\n\n    window.DOMTokenList.prototype = {\n        add: function ( token ) {\n            if(this.contains(token)) { return; }\n            push.call(this, token);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        contains: function ( token ) {\n            return indexOf.call(this, token) !== -1;\n        },\n\n        item: function ( index ) {\n            return this[index] || null;\n        },\n\n        remove: function ( token ) {\n            var i = indexOf.call(this, token);\n            if (i === -1) {\n                return;\n            }\n            splice.call(this, i, 1);\n            this._element.className = slice.call(this, 0).join(' ');\n        },\n\n        toString: function () {\n            return join.call(this, ' ');\n        },\n\n        toggle: function ( token ) {\n            if (!this.contains(token)) {\n                this.add(token);\n            } else {\n                this.remove(token);\n            }\n            return this.contains(token);\n        }\n    };\n\n    Object.defineProperty(Element.prototype, 'classList', {\n        get: function () {\n            return new window.DOMTokenList(this);\n        }\n    });\n}\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app     = require('spa-app/lib/core'),\n    metrics = require('app:metrics');\n\n\n// global link\napp.metrics = metrics[app.query.screenHeight] || metrics[screen.height] || metrics[720];\n\n// calculate and extend\napp.metrics.availHeight = app.metrics.height - (app.metrics.availTop  + app.metrics.availBottom);\napp.metrics.availWidth  = app.metrics.width  - (app.metrics.availLeft + app.metrics.availRight);\n\n\n// public\n//module.exports = app;\n","/**\n * Application geometry options.\n * Automatically loaded on application initialization and available as app.metrics.\n */\n\n'use strict';\n\n// public\nmodule.exports = {\n    480: {\n        // screen base dimension\n        height: 480,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  32,\n        availLeft:   48\n        // project-specific vars\n        // put here ...\n    },\n\n    576: {\n        // screen base dimension\n        height: 576,\n        width:  720,\n        // safe zone margins\n        availTop:    24,\n        availBottom: 24,\n        availRight:  26,\n        availLeft:   54\n        // project-specific vars\n        // put here ...\n    },\n\n    720: {\n        // screen base dimension\n        height: 720,\n        width:  1280,\n        // safe zone margins\n        availTop:    30,\n        availBottom: 30,\n        availRight:  40,\n        availLeft:   40\n        // project-specific vars\n        // put here ...\n    },\n\n    1080: {\n        // screen base dimension\n        height: 1080,\n        width:  1920,\n        // safe zone margins\n        availTop:    45,\n        availBottom: 45,\n        availRight:  60,\n        availLeft:   60\n        // project-specific vars\n        // put here ...\n    }\n};\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar app = require('spa-app/lib/core'),\n    //metrics = require('app:metrics'),\n    linkCSS;\n\n\n//window.core = window.parent.getCoreInstance(window, app);\n\n\nlinkCSS = document.createElement('link');\nlinkCSS.rel  = 'stylesheet';\nlinkCSS.href = window.core.theme.path + app.metrics.height + '.css' + (DEVELOP ? '?' + Date.now() : '');\ndocument.head.appendChild(linkCSS);\n\n\n// public\nmodule.exports = linkCSS;\n","/**\n *\n * @author Aleynikov Boris <aleynikov.boris@gmail.com>.\n */\n\n'use strict';\n\nvar longClick = {\n        timer: 0,\n        pressed: false,\n        fired: false\n    },\n    LONG_CLICK_TIMEOUT = 600;\n\n\nmodule.exports = function ( app, config ) {\n    var keyToChange = config.code,\n        emitKeyCode = config.emitCode;\n\n\n    function emitKeydown ( event, redefine ) {\n        var page = app.activePage,\n            eventLocal = {\n                code: event.keyCode,\n                stop: false\n            },\n            eventType,\n            activeComponent;\n\n        redefine = redefine || {};\n\n        eventType = redefine.type || event.type;\n\n        // apply key modifiers\n        if ( event.ctrlKey )  { eventLocal.code += 'c'; }\n        if ( event.altKey )   { eventLocal.code += 'a'; }\n        if ( event.shiftKey ) { eventLocal.code += 's'; }\n        if ( redefine.code )  { eventLocal.code = redefine.code; }\n\n        console.log('app event: ' + eventType + ' - ' + eventLocal.code, event);\n\n        // page.activeComponent can be set to null in event handles\n        activeComponent = page.activeComponent;\n\n        // current component handler\n        if ( activeComponent && activeComponent !== page ) {\n            // component is available and not page itself\n            if ( activeComponent.events[eventType] ) {\n                // there are some listeners\n                activeComponent.emit(eventType, eventLocal, event);\n            }\n\n            // todo: bubble event recursively\n            // bubbling\n            if (\n                !eventLocal.stop\n                && activeComponent.propagate\n                && activeComponent.parent\n                && activeComponent.parent.events[event.type]\n            ) {\n                activeComponent.parent.emit(eventType, eventLocal, event);\n            }\n        }\n\n        // page handler\n        if ( !eventLocal.stop ) {\n            // not prevented\n            if ( page.events[eventType] ) {\n                // there are some listeners\n                page.emit(eventType, eventLocal, event);\n            }\n\n            // global app handler\n            if ( !event.stop ) {\n                // not prevented\n                if ( app.events[eventType] ) {\n                    // there are some listeners\n                    app.emit(eventType, eventLocal, event);\n                }\n            }\n        }\n    }\n\n    function keydownHandler ( event ) {\n        var page = app.activePage;\n\n        if ( DEVELOP ) {\n            if ( !page ) {\n                throw new Error(__filename + ': app should have at least one page');\n            }\n        }\n\n        if ( event.keyCode === keyToChange && !longClick.pressed ) {\n            if ( longClick.fired ) {\n                longClick.fired = false;\n            }\n            longClick.pressed = true;\n            clearTimeout(longClick.timer);\n            longClick.timer = setTimeout(function () {\n                emitKeydown(event, {code: emitKeyCode});\n                longClick.fired = true;\n\n            }, LONG_CLICK_TIMEOUT);\n        } else if ( event.keyCode !== keyToChange ) {\n            emitKeydown(event);\n        }\n    }\n\n    function keyupHandler ( event ) {\n        if ( event.keyCode === keyToChange ) {\n            if  ( !longClick.fired && longClick.pressed ) {\n                clearTimeout(longClick.timer);\n                emitKeydown(event, {type: 'keydown'});\n            }\n            longClick.pressed = false;\n        }\n    }\n\n    window.addEventListener('keydown', keydownHandler);\n    window.addEventListener('keyup', keyupHandler);\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter = require('cjs-emitter'),\n    Gettext = require('cjs-gettext'),\n    loader  = new Emitter();\n\n\n/**\n * Wrap the given data with gettext instance\n * and export methods to the global scope.\n *\n * @param {Object} [data] localization data\n *\n * @return {Gettext} gettext instance\n */\nfunction prepare ( data ) {\n    var gettext = new Gettext(data);\n\n    // make it global\n    window.gettext  = window._ = gettext.gettext;\n    window.pgettext = gettext.pgettext;\n    window.ngettext = gettext.ngettext;\n\n    return gettext;\n}\n\n\n/**\n * Main application language\n */\nloader.defaultLanguage = 'en';\n\n\n/**\n * Simple gettext implementation.\n *\n * @param {Object} config options\n * @param {string} [config.path=lang] relative path to project root\n * @param {string} config.name language name\n * @param {string} [config.ext=json] language file extension\n * @param {function} callback hook on ready\n *\n * @return {boolean} flag is ajax request was made\n */\nloader.load = function ( config, callback ) {\n    var xhr;\n\n    if ( DEVELOP ) {\n        if ( !config.name || typeof config.name !== 'string' ) {\n            throw new Error(__filename + ': config.name must be a nonempty string');\n        }\n        if ( typeof callback !== 'function' ) {\n            throw new Error(__filename + ': wrong callback type');\n        }\n    }\n\n    // defaults\n    config.ext  = config.ext  || 'json';\n    config.path = config.path || 'lang';\n\n    // is it necessary to request a localization file?\n    if ( config.name === loader.defaultLanguage ) {\n        // no\n        prepare();\n        callback(null);\n\n        return false;\n    }\n\n    // yes\n    xhr = new XMLHttpRequest();\n\n    xhr.onload = function () {\n        var json;\n\n        try {\n            json = JSON.parse(xhr.responseText);\n\n            prepare(json);\n            callback(null);\n\n            // there are some listeners\n            if ( loader.events['load'] ) {\n                // notify listeners\n                loader.emit('load');\n            }\n        } catch ( error ) {\n            xhr.onerror(error);\n        }\n    };\n\n    xhr.ontimeout = xhr.onerror = function ( error ) {\n        prepare();\n        callback(error);\n\n        // there are some listeners\n        if ( loader.events['error'] ) {\n            // notify listeners\n            loader.emit('error', error);\n        }\n    };\n\n    xhr.open('GET', config.path + '/' + config.name + '.' + config.ext, true);\n    xhr.send(null);\n\n    return true;\n};\n\n\n// public\nmodule.exports = loader;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\n\n/**\n * Translations handler.\n *\n * @constructor\n *\n * @param {Object} config init parameters\n */\nfunction Gettext ( config ) {\n    var data, meta;\n\n    // sanitize\n    config   = config || {};\n    data     = config.data || {};\n    data[''] = data[''] || {};\n\n    // shortcut\n    meta = config.meta;\n\n    /**\n     * Display the native language translation of a textual message.\n     *\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.gettext = function ( msgId ) {\n        return data[''][msgId] || msgId;\n    };\n\n\n    /**\n     * The \"p\" in \"pgettext\" stands for \"particular\": fetches a particular translation of the textual message.\n     *\n     * @param {string} context message context\n     * @param {string} msgId textual message\n     *\n     * @return {string} translated text\n     */\n    this.pgettext = function ( context, msgId ) {\n        return data[context] && data[context][msgId] || msgId;\n    };\n\n\n    /**\n     * Display the native language translation of a textual message whose grammatical form depends on a number.\n     *\n     * @param {string} msgId textual message in a singular form\n     * @param {string} plural textual message in a plural form\n     * @param {number} value message number\n     *\n     * @return {string} translated text\n     */\n    this.ngettext = function ( msgId, plural, value ) {\n        /* eslint no-unused-vars: 0 */\n        /* eslint no-eval: 0 */\n        /* eslint id-length: 0 */\n        var n, evalResult;\n\n        if ( DEVELOP ) {\n            if ( Number(value) !== value ) {\n                throw new Error(__filename + ': value must be a number');\n            }\n        }\n\n        if ( data && meta && data[''][msgId] ) {\n            evalResult = eval('n = ' + value + '; ' + meta.plural);\n\n            if ( typeof evalResult === 'boolean' ) {\n                evalResult = +evalResult;\n            }\n\n            // translation\n            return data[''][msgId][evalResult];\n        }\n\n        // english\n        return value === 1 ? msgId : plural;\n    };\n}\n\n\n// correct constructor name\nGettext.prototype.constructor = Gettext;\n\n\n// public\nmodule.exports = Gettext;\n","/**\n * Main page implementation.\n */\n\n'use strict';\n\nvar app  = require('mag-app'),\n    keys = require('stb-keys'),\n\n    Page     = require('stb-component-page'),\n    PanelSet = require('mag-component-panel-set'),\n    //Footer   = require('mag-component-footer'),\n\n    leftPanel  = require('../components/page.main/left.panel'),\n    mainPanel  = require('../components/page.main/main.panel'),\n    rightPanel = require('../components/page.main/right.panel'),\n    footer = require('../components/page.main/footer'),\n\n    exitConfirm = require('../components/widgets/exit.confirm'),\n\n    page     = new Page({$node: window.pageMain}),\n    panelSet = new PanelSet({\n        $node: window.panelSetMain,\n        visible: true,\n        focusIndex: 0,\n        panels: [leftPanel, mainPanel, rightPanel],\n        parent: page\n    }),\n\n    popupMenu = require('../components/page.main/popup.menu'),\n\n    lastReceivedIntent = null;\n\n\npage.addListener('keydown', function ( event ) {\n    switch ( event.code ) {\n        case keys.back:\n            if ( panelSet.focusIndex === 1 ) {\n                // mainPanel in focus\n                if ( mainPanel.back() ) {\n                    return;\n                }\n            }\n\n            if ( lastReceivedIntent === null ) {\n                panelSet.blur();\n                core.call('stop');\n            } else {\n                lastReceivedIntent.close();\n                lastReceivedIntent = null;\n            }\n            break;\n\n            // case keys.menu:\n            //     console.log(!footer.instance.tabs[0].$body.classList.contains('hidden'))\n            //     if ( !footer.instance.tabs[0].$body.classList.contains('hidden') ) {\n            //         popupMenu.show();\n            //     }\n            // break;\n\n        default:\n            break;\n    }\n});\n\n\npage.once('show', function ( event ) {\n    footer.prepare(page);\n    page.add(popupMenu);\n    mainPanel.focus();\n\n    mainPanel.setData(event.data, function () {\n        // do something\n    });\n});\n\n\npage.addListener('show', function () {\n    app.activePanelSet = panelSet;\n});\n\n\nexitConfirm.addListener('hide', function () {\n    if ( app.activePage === page ) {\n        panelSet.focus();\n    }\n});\n\n\ncore.addListener('intent', function ( intent, callback ) {\n    if ( intent.action === 'setup' ) {\n        mainPanel.reset();\n        lastReceivedIntent = intent;\n        callback(false, {});\n    }\n});\n\n// public\nmodule.exports = page;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-page');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-page';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base page implementation.\n *\n * A full-screen top-level layer that can operate as an independent separate entity.\n * It is added to the document body on creation if not already linked.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n *\n * @example\n * var Page = require('stb/ui/page'),\n *     page = new Page({\n *         $node: document.getElementById(id)\n *     });\n *\n * page.addListener('show', function show () {\n *     // page is visible now\n * });\n */\nfunction Page ( config ) {\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    /**\n     * Page visibility/active state flag.\n     *\n     * @readonly\n     * @type {boolean}\n     */\n    this.active = false;\n\n    /**\n     * Link to the currently active component with focus.\n     *\n     * @readonly\n     * @type {Component}\n     */\n    this.activeComponent = null;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'page ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // state flag\n    this.active = this.$node.classList.contains('active');\n\n    // correct DOM parent/child connection if necessary\n    if ( this.$node.parentNode === null ) {\n        document.body.appendChild(this.$node);\n    }\n\n    // always itself\n    this.page = this;\n}\n\n\n// inheritance\nPage.prototype = Object.create(Component.prototype);\nPage.prototype.constructor = Page;\n\n// set component name\nPage.prototype.name = 'spa-component-page';\n\n\n// public\nmodule.exports = Page;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n/**\n * Magsdk panel set implementation\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {Array} [config.panels] array of panels to use\n * @param {Array} [config.focusIndex=0] focus panel index\n * @constructor\n * @extends Component\n */\nfunction PanelSet ( config ) {\n    var self = this,\n        index;\n\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.panels && !Array.isArray(config.panels) || !config.panels.length ) {\n            throw new Error(__filename + ': wrong config.panels type');\n        }\n    }\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'panelSet ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    this.panels = config.panels;\n\n    /**\n     * Index of current active panel\n     *\n     * @type {number}\n     */\n    this.focusIndex = 0;\n\n    // set special panels classes\n    if ( config.panels && !config.panels[0].main ) {\n        config.panels[0].$node.classList.add('left');\n        // small resolution special class\n        config.panels[0].$node.classList.add('expand');\n    }\n\n    if (  config.panels && config.panels[1] && config.panels[1].main ) {\n        // small resolution special class\n        config.panels[1].$node.classList.add('position-right');\n    }\n\n    if ( config.panels && config.panels[2] && config.panels[1].main ) {\n        config.panels[2].$node.classList.add('right');\n    }\n\n    // add panels\n    if ( config.panels ) {\n        this.add.apply(this, config.panels);\n    }\n\n    // panel keydown handler to set focus panel\n    function keydownHandler ( event ) {\n        switch ( event.code ) {\n            case keys.left:\n                if ( self.focusIndex > 0 ) {\n                    self.panels[self.focusIndex - 1].focus();\n                }\n                break;\n            case keys.right:\n                if ( self.focusIndex < self.panels.length - 1 ) {\n                    self.panels[self.focusIndex + 1].focus();\n                }\n                break;\n        }\n    }\n\n    // add special listener\n    for ( index = 0; index < this.panels.length; index++ ) {\n        this.panels[index].addListeners({\n            keydown: keydownHandler\n        });\n        // set panels indexes\n        this.panels[index].index = index;\n    }\n\n    /*if ( config.focusIndex && config.focusIndex < this.panels.length ) {\n     this.panels[config.focusIndex].focus();\n     } else {\n     if ( config.panels.length > 1 ) {\n     this.panels[1].focus();\n     } else {\n     this.panels[0].focus();\n     }\n     }*/\n}\n\nPanelSet.prototype = Object.create(Component.prototype);\nPanelSet.prototype.constructor = PanelSet;\n\n// set component name\nPanelSet.prototype.name = 'mag-component-panel-set';\n\n\n/**\n *\n */\nPanelSet.prototype.focus = function () {\n    Component.prototype.focus.call(this);\n    this.panels[this.focusIndex].focus();\n};\n\n/**\n *\n */\nPanelSet.prototype.blur = function () {\n    this.panels[this.focusIndex].blur();\n};\n\nmodule.exports = PanelSet;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n/* eslint complexity: [error, 37] */\n/* eslint max-lines-per-function: 1 */\n/* eslint no-fallthrough: 1 */\n/* eslint complexity: 1 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys');\n\n\n/**\n * Mouse click event.\n *\n * @event module:stb/ui/list~List#click:item\n *\n * @type {Object}\n * @property {Element} $item clicked HTML item\n * @property {Event} event click event data\n */\n\n\n/**\n * Base list implementation.\n *\n * Each data item can be either a primitive value or an object with these fields:\n *\n *  Name    | Description\n * ---------|-------------\n *  value   | actual cell value to render\n *  mark    | is it necessary or not to render this cell as marked\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array}    [config.data=[]]     component data to visualize\n * @param {function} [config.render]      method to build each grid cell content\n * @param {function} [config.navigate]    method to move focus according to pressed keys\n * @param {number}   [config.size=5]      amount of visible items on a page\n * @param {number}   [config.viewIndex=0] move view window to this position on init\n * @param {number}   [config.focusIndex]  list item index to make item focused (move view window to this position)\n * @param {boolean}  [config.cycle=true]  allow or not to jump to the opposite side of a list when there is nowhere to go next\n * @param {boolean}  [config.scroll=null] associated ScrollBar component link\n * @param {Object}   [config.provider]    data provider\n *\n * @fires module:stb/ui/list~List#click:item\n */\nfunction List ( config ) {\n    // current execution context\n    //var self = this;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Link to the currently focused DOM element.\n     *\n     * @type {Element}\n     */\n    this.$focusItem = null;\n\n    /**\n     * Position of the visible window to render.\n     *\n     * @type {number}\n     */\n    this.viewIndex = null;\n\n    /**\n     * Component data to visualize.\n     *\n     * @type {Array}\n     */\n    this.data = [];\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Amount of visible items on a page.\n     *\n     * @type {number}\n     */\n    this.size = 5;\n\n    /**\n     * Allow or not to jump to the opposite side of a list when there is nowhere to go next.\n     *\n     * @type {boolean}\n     */\n    this.cycle = false;\n\n    /**\n     * Associated ScrollBar component link.\n     *\n     * @type {ScrollBar}\n     */\n    this.scroll = null;\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    /**\n     * Associated data provider\n     *\n     * @type {Provider}\n     */\n    this.provider = null;\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    //config.className += ' theme-main';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // component setup\n    this.init(config);\n\n    // custom navigation method\n    //if ( config.navigate ) {\n    //    if ( DEVELOP ) {\n    //        if ( typeof config.navigate !== 'function' ) { throw new Error(__filename + ': wrong config.navigate type'); }\n    //    }\n    //    // apply\n    //    this.navigate = config.navigate;\n    //}\n\n    // navigation by keyboard\n    //this.addListener('keydown', this.navigate);\n\n    // navigation by mouse\n    //this.$body.addEventListener('mousewheel', function ( event ) {\n    //    // scrolling by Y axis\n    //    if ( self.type === self.TYPE_VERTICAL && event.wheelDeltaY ) {\n    //        self.move(event.wheelDeltaY > 0 ? 38 : keys.down);\n    //    }\n    //\n    //    // scrolling by X axis\n    //    if ( self.type === self.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n    //        self.move(event.wheelDeltaX > 0 ? 37 : 39);\n    //    }\n    //});\n}\n\n\n// inheritance\nList.prototype = Object.create(Component.prototype);\nList.prototype.constructor = List;\n\n// set component name\nList.prototype.name = 'mag-component-list';\n\nList.prototype.TYPE_VERTICAL   = 1;\nList.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Fill the given item with data.\n *\n * @param {Element} $item item DOM link\n * @param {*} data associated with this item data\n */\nList.prototype.renderItemDefault = function ( $item, data ) {\n    $item.innerText = data.value;\n};\n\n\n/**\n * Method to build each list item content.\n * Can be redefined to provide custom rendering.\n *\n * @type {function}\n */\nList.prototype.renderItem = List.prototype.renderItemDefault;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nList.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse wheel events.\n     *\n     * @param {Event} event generated event\n     */\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        if ( this.type === this.TYPE_VERTICAL && event.wheelDeltaY ) {\n            this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n        }\n\n        // scrolling by X axis\n        if ( this.type === this.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n            this.move(event.wheelDeltaX > 0 ? keys.left : keys.right);\n        }\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n            case keys.right:\n            case keys.left:\n            case keys.pageUp:\n            case keys.pageDown:\n            case keys.home:\n            case keys.end:\n                // cursor move only on arrow keys\n                this.move(event.code);\n                break;\n            case keys.enter:\n                // there are some listeners\n                if ( this.events['click:item'] && this.$focusItem ) {\n                    // notify listeners\n                    this.emit('click:item', {$item: this.$focusItem, event: event});\n                }\n                break;\n        }\n    }\n};\n\n\n/**\n * Default method to move focus according to pressed keys.\n *\n * @param {Object} event generated event source of movement\n */\n//List.prototype.navigateDefault = function ( event ) {\n//    switch ( event.code ) {\n//        case 38:\n//        case 40:\n//        case 39:\n//        case 37:\n//        case 33:\n//        case 34:\n//        case 36:\n//        case 35:\n//            // cursor move only on arrow keys\n//            this.move(event.code);\n//            break;\n//        case 13:\n//            // there are some listeners\n//            if ( this.events['click:item'] ) {\n//                // notify listeners\n//                this.emit('click:item', {$item: this.$focusItem, event: event});\n//            }\n//            break;\n//    }\n//};\n\n\n/**\n * Current active method to move focus according to pressed keys.\n * Can be redefined to provide custom navigation.\n *\n * @type {function}\n */\n//List.prototype.navigate = List.prototype.navigateDefault;\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var idx, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( idx = 0; idx < data.length; idx++ ) {\n        // cell value\n        item = data[idx];\n        // primitive value\n        if ( typeof item !== 'object' ) {\n            // wrap with defaults\n            item = data[idx] = {\n                value: data[idx]\n            };\n        }\n\n        if ( DEVELOP ) {\n            //if ( !('value' in item) ) { throw new Error(__filename + ': field \"value\" is missing'); }\n            if ( ('mark' in item) && Boolean(item.mark) !== item.mark ) {\n                throw new Error(__filename + ': item.mark must be boolean');\n            }\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.init = function ( config ) {\n    var self     = this,\n        currSize = this.$body.children.length,\n        /**\n         * Item mouse click handler.\n         *\n         * @param {Event} event click event data\n         *\n         * @this Element\n         *\n         * @fires module:stb/ui/list~List#click:item\n         */\n        onClick = function ( event ) {\n            if ( this.data ) {\n                self.focusItem(this);\n\n                // there are some listeners\n                if ( self.events['click:item'] ) {\n                    // notify listeners\n                    self.emit('click:item', {$item: this, event: event});\n                }\n            }\n        },\n        item, idx;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // apply cycle behaviour\n    if ( config.cycle !== undefined ) { this.cycle = config.cycle; }\n\n    // apply ScrollBar link\n    if ( config.scroll ) { this.scroll = config.scroll; }\n\n    // apply data provider\n    if ( config.provider ) { this.provider = config.provider; }\n\n\n    // custom render method\n    if ( config.render ) {\n        if ( DEVELOP ) {\n            if ( typeof config.render !== 'function' ) {\n                throw new Error(__filename + ': wrong config.render type');\n            }\n        }\n\n        // apply\n        this.renderItem = config.render;\n    }\n\n    // list items amount on page\n    if ( config.size ) {\n        if ( DEVELOP ) {\n            if ( Number(config.size) !== config.size ) {\n                throw new Error(__filename + ': config.size must be a number');\n            }\n            if ( config.size <= 0 ) {\n                throw new Error(__filename + ': config.size should be positive');\n            }\n        }\n\n        // apply\n        this.size = config.size;\n    }\n\n    if ( config.events ) {\n        // apply all given events\n        Object.keys(config.events).forEach(function ( name ) {\n            self.events[name] = null;\n            self.addListener(name, config.events[name]);\n        });\n    }\n\n    // geometry has changed or initial draw\n    if ( this.size !== currSize ) {\n        // non-empty list\n        if ( currSize > 0 ) {\n            // clear old items\n            this.$body.innerText = null;\n        }\n\n        // create new items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            item = document.createElement('div');\n            item.index = idx;\n            //item.className = 'item theme-list-item';\n            item.className = 'item';\n\n            item.addEventListener('click', onClick);\n            this.$body.appendChild(item);\n        }\n    }\n\n    if ( this.provider ) {\n        if ( this.provider.blocked ) {\n            return;\n        }\n\n        this.provider.get( null, function ( error, data ) {\n            if ( error ) {\n                if ( self.events['data:error'] ) {\n                    /**\n                     * Provider get error while take new data\n                     *\n                     * @event module:stb/ui/list~List#data:error\n                     */\n                    self.emit('data:error', error);\n                }\n            } else {\n                if ( data ) {\n                    config.data = data;\n                    self.setData(config);\n                    if ( self.scroll ) {\n                        self.scroll.init({\n                            realSize: self.provider.maxCount,\n                            viewSize: self.provider.size,\n                            value: self.provider.head + self.provider.pos\n                        });\n                    }\n                }\n                if ( self.events['data:get'] ) {\n                    /**\n                     * Provider request new data\n                     *\n                     * @event module:stb/ui/list~List#data:get\n                     *\n                     * @type {Object}\n                     */\n                    self.emit('data:get');\n                }\n            }\n        });\n    } else if ( config.data ) {\n        this.setData(config);\n    }\n};\n\n/**\n * Set data and render inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.setData = function ( config ) {\n    // apply list of items\n\n    if ( config.data ) {\n        if ( DEVELOP ) {\n            if ( !Array.isArray(config.data) ) { throw new Error(__filename + ': wrong config.data type'); }\n        }\n        // prepare user data\n        this.data = normalize(config.data);\n    }\n\n    // view window position\n    if ( DEVELOP ) {\n        if ( config.viewIndex !== undefined ) {\n            if ( Number(config.viewIndex) !== config.viewIndex ) {\n                throw new Error(__filename + ': config.viewIndex must be a number');\n            }\n            if ( config.viewIndex < 0 ) {\n                throw new Error(__filename + ': config.viewIndex should be positive');\n            }\n        }\n    }\n\n    // reset current view window position\n    this.viewIndex = null;\n\n    if ( this.$focusItem ) {\n        this.blurItem(this.$focusItem);\n    }\n\n    if ( this.scroll ) {\n        if ( this.provider ) {\n            if ( this.scroll.realSize !== this.provider.maxCount ) {\n                this.scroll.init({\n                    realSize: this.provider.maxCount,\n                    viewSize: this.provider.size,\n                    value: this.provider.head + this.provider.pos\n                });\n            }\n        } else {\n            this.scroll.init({\n                realSize: this.data.length,\n                viewSize: this.size,\n                value: config.viewIndex || 0\n            });\n        }\n    }\n\n    // set focus item\n    if ( config.focusIndex !== undefined && this.data.length ) {\n        if ( DEVELOP ) {\n            if ( Number(config.focusIndex) !== config.focusIndex ) {\n                throw new Error(__filename + ': config.focusIndex must be a number');\n            }\n            if ( config.focusIndex < 0 ) {\n                throw new Error(__filename + ': config.focusIndex should be positive');\n            }\n            // if ( config.focusIndex > this.data.length - 1 ) {\n            //     throw new Error(__filename + ': config.focusIndex should be less than data size');\n            // }\n        }\n\n        // jump to the necessary item\n        this.focusIndex(config.focusIndex);\n    } else {\n        // go to the first page\n        this.renderView(config.viewIndex || 0);\n    }\n};\n\n\n/**\n * Shift the visible view window event.\n *\n * @event module:stb/ui/list~List#move:view\n *\n * @type {Object}\n * @property {number} prevIndex previous view window position\n * @property {number} currIndex current view window position\n */\n\n\n/**\n * Draw the visible window.\n *\n * @param {number} index start position to render\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#move:view\n */\nList.prototype.renderView = function ( index ) {\n    var $item, idx, itemData, prevIndex, currIndex;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be more than zero');\n        }\n        // if ( index >= this.data.length ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // has the view window position changed\n    if ( this.viewIndex !== index ) {\n        // save for emit\n        prevIndex = this.viewIndex;\n        // sync global pointer\n        this.viewIndex = currIndex = index;\n\n        // rebuild all visible items\n        for ( idx = 0; idx < this.size; idx++ ) {\n            // shortcuts\n            $item    = this.$body.children[idx];\n            itemData = this.data[index];\n\n            // real item or stub\n            if ( itemData ) {\n                // correct inner data/index and render\n                $item.data  = itemData;\n                $item.index = index;\n                this.renderItem($item, itemData);\n\n                // apply CSS\n                if ( itemData.mark ) {\n                    $item.classList.add('mark');\n                } else {\n                    $item.classList.remove('mark');\n                }\n            } else {\n                // nothing to render\n                $item.data = $item.index = undefined;\n                $item.innerHTML = '&nbsp;';\n                $item.ready = false;\n            }\n            index++;\n        }\n\n        // there are some listeners\n        if ( this.events['move:view'] ) {\n            // notify listeners\n            this.emit('move:view', {prevIndex: prevIndex, currIndex: currIndex});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            this.emit('select:item', {$item: $item});\n        }\n\n        // update a linked scroll component\n        if ( this.scroll ) {\n            this.scroll.scrollTo(this.provider ? this.provider.head + this.provider.pos : this.viewIndex);\n        }\n\n        // full rebuild\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Move focus to the given direction.\n *\n * @param {number} direction arrow key code\n *\n * @fires module:stb/ui/list~List#cycle\n * @fires module:stb/ui/list~List#overflow\n */\nList.prototype.move = function ( direction ) {\n    var self = this,\n        force = false;\n\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(direction) !== direction ) {\n            throw new Error(__filename + ': direction must be a number');\n        }\n    }\n\n    // empty list\n    if ( !this.data.length ) {\n        return;\n    }\n\n    switch ( direction ) {\n        case keys.left:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.up:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index > 0 ) {\n                    if ( this.$focusItem === this.$body.firstChild ) {\n                        this.renderView(this.viewIndex - 1);\n                    } else {\n                        this.focusItem(this.$focusItem.previousSibling);\n                    }\n                } else if ( this.provider ) {\n                    if ( this.provider.blocked ) {\n                        return;\n                    }\n\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the end of the list\n                        this.move(keys.end);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.right:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.down:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index < this.data.length - 1 ) {\n                    if ( this.$focusItem === this.$body.lastChild ) {\n                        this.renderView(this.viewIndex + 1);\n                    } else {\n                        this.focusItem(this.$focusItem.nextSibling);\n                    }\n                } else if ( this.provider ) {\n                    if ( this.provider.blocked ) {\n                        return;\n                    }\n\n                    this.provider.get(direction, function ( error, data, pos ) {\n                        if ( error ) {\n                            if ( self.events['data:error'] ) {\n                                /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                self.emit('data:error', error);\n                            }\n                        } else if ( data ) {\n                            self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                        }\n                    });\n                } else {\n                    // already at the beginning\n                    if ( this.cycle ) {\n                        // jump to the beginning of the list\n                        this.move(keys.home);\n                    }\n                    if ( this.events['overflow'] ) {\n                        // notify listeners\n                        this.emit('overflow', {direction: direction, cycle: this.cycle});\n                    }\n                }\n            }\n            break;\n        case keys.pageUp:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n\n                return;\n            }\n            if ( this.viewIndex < this.size ) {\n                // first page\n                this.renderView(0);\n            } else {\n                // second page and further\n                this.renderView(this.viewIndex - this.size + 1);\n            }\n\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.pageDown:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            // data is bigger then one page\n            if ( this.data.length > this.size ) {\n                // determine jump size\n                if ( this.viewIndex > this.data.length - this.size * 2 ) {\n                    // last page\n                    this.renderView(this.data.length - this.size);\n                } else {\n                    // before the last page\n                    this.renderView(this.viewIndex + this.size - 1);\n                }\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n        case keys.home:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        self.setData({data: data, focusIndex: pos ? pos : 0});\n                    }\n                });\n                break;\n            }\n            this.renderView(0);\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.end:\n            if ( this.provider ) {\n                if ( this.provider.blocked ) {\n                    return;\n                }\n\n                this.provider.get(direction, function ( error, data, pos ) {\n                    var focusIndex;\n\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else if ( data ) {\n                        if ( pos || pos === 0 ) {\n                            focusIndex = pos;\n                        } else {\n                            focusIndex = data.length < self.size ?  data.length - 1 : self.size - 1;\n                        }\n\n                        self.setData({data: data, focusIndex: focusIndex});\n                    }\n                });\n                break;\n            }\n            if ( this.data.length > this.size ) {\n                this.renderView(this.data.length - this.size);\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n    }\n};\n\n\n/**\n * Highlight the given DOM element as focused.\n * Remove focus from the previously focused item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.focusItem = function ( $item ) {\n    var $prev = this.$focusItem;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n    }\n\n    // different element\n    if ( $item && $prev !== $item ) {\n        if ( DEVELOP ) {\n            if ( !($item instanceof Element) ) {\n                throw new Error(__filename + ': wrong $item type');\n            }\n            if ( $item.parentNode !== this.$body ) {\n                throw new Error(__filename + ': wrong $item parent element');\n            }\n        }\n\n        // some item is focused already\n        if ( $prev !== null ) {\n            if ( DEVELOP ) {\n                if ( !($prev instanceof Element) ) {\n                    throw new Error(__filename + ': wrong $prev type');\n                }\n            }\n\n            // style\n            $prev.classList.remove('focus');\n            //$prev.classList.remove('theme-focus');\n\n            // there are some listeners\n            if ( this.events['blur:item'] ) {\n                /**\n                 * Remove focus from an element.\n                 *\n                 * @event module:stb/ui/list~List#blur:item\n                 *\n                 * @type {Object}\n                 * @property {Element} $item previously focused HTML element\n                 */\n                this.emit('blur:item', {$item: $prev});\n            }\n        }\n        // reassign\n        this.$focusItem = $item;\n\n        this.$focusItem.data = this.data[this.$focusItem.index];\n\n        // correct CSS\n        $item.classList.add('focus');\n        //$item.classList.add('theme-focus');\n\n        // there are some listeners\n        if ( this.events['focus:item'] ) {\n            /**\n             * Set focus to a DOM element.\n             *\n             * @event module:stb/ui/list~List#focus:item\n             *\n             * @type {Object}\n             * @property {Element} $prev old/previous focused HTML element\n             * @property {Element} $curr new/current focused HTML element\n             */\n            this.emit('focus:item', {$prev: $prev, $curr: $item});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            /**\n             * Set focus to a list item.\n             *\n             * @event module:stb/ui/list~List#select:item\n             *\n             * @type {Object}\n             * @property {Element} $item new/current focused item\n             */\n            this.emit('select:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Highlight the given DOM element as blur.\n * Remove focus from the item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.blurItem = function ( $item ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) { throw new Error(__filename + ': wrong arguments number'); }\n    }\n\n    // different element\n    if ( $item ) {\n        if ( $item === this.$focusItem ) {\n            this.$focusItem = null;\n        }\n\n        $item.classList.remove('focus');\n        //$item.classList.remove('theme-focus');\n\n        // there are some listeners\n        if ( this.events['blur:item'] ) {\n            /**\n             * Remove focus from an element.\n             *\n             * @event module:stb/ui/list~List#blur:item\n             *\n             * @type {Object}\n             * @property {Element} $item previously focused HTML element\n             */\n            this.emit('blur:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Set the given item focused by item index.\n *\n * @param {number} index item data index\n */\nList.prototype.focusIndex = function ( index ) {\n    var viewIndex = this.viewIndex || 0;\n\n    if ( DEVELOP ) {\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be positive');\n        }\n        // if ( index > this.data.length - 1 ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // determine direction\n    if ( index >= viewIndex + this.size ) {\n        // check range\n        index = index < this.data.length - 1 ? index : this.data.length - 1;\n        // move down\n        this.renderView(index - this.size + 1);\n        this.focusItem(this.$body.lastChild);\n    } else if ( index < viewIndex ) {\n        // check range\n        index = index > 0 ? index : 0;\n        // move up\n        this.renderView(index);\n        this.focusItem(this.$body.firstChild);\n    } else {\n        // no move\n        if ( this.viewIndex === null ) {\n            // first attempt\n            this.renderView(0);\n        }\n        this.focusItem(this.$body.children[index - viewIndex]);\n    }\n};\n\n\n/**\n * Set item state and appearance as marked.\n *\n * @param {Node|Element} $item element to focus\n * @param {boolean} state true - marked, false - not marked\n */\nList.prototype.markItem = function ( $item, state ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 2 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !($item instanceof Element) ) {\n            throw new Error(__filename + ': wrong $item type');\n        }\n        if ( $item.parentNode !== this.$body ) {\n            throw new Error(__filename + ': wrong $item parent element');\n        }\n        if ( Boolean(state) !== state ) {\n            throw new Error(__filename + ': state must be boolean');\n        }\n    }\n\n    // correct CSS\n    if ( state ) {\n        $item.classList.add('mark');\n    } else {\n        $item.classList.remove('mark');\n    }\n\n    // apply flag\n    $item.data.mark = state;\n};\n\n\n// public\nmodule.exports = List;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base widget implementation.\n *\n * A part-screen top-level layer that can operate as an independent separate entity.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {boolean} [config.visible=false] component initial visibility state flag\n * @param {boolean} [config.focusable=false] component can accept focus or not\n */\nfunction Widget ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // hidden\n    config.visible = config.visible || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'widget ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n}\n\n\n// inheritance\nWidget.prototype = Object.create(Component.prototype);\nWidget.prototype.constructor = Widget;\n\n// set component name\nWidget.prototype.name = 'spa-component-widget';\n\n\n// public\nmodule.exports = Widget;\n","/**\n * @license The MIT License (MIT)\n * @copyright Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = require('spa-component-modal');\n\n// correct component name\nmodule.exports.prototype.name = 'stb-component-modal';\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base modal window implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n */\nfunction Modal ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.$body ) {\n            throw new Error(__filename + ': config.$body should not be provided manually');\n        }\n    }\n\n    // create centered div\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // add table-cell wrapper\n    this.$node.appendChild(document.createElement('div').appendChild(this.$body).parentNode);\n}\n\n\n// inheritance\nModal.prototype = Object.create(Component.prototype);\nModal.prototype.constructor = Modal;\n\n// set component name\nModal.prototype.name = 'spa-component-modal';\n\n\n// public\nmodule.exports = Modal;\n","/**\n * @license The MIT License (MIT)\n * @copyright Igor Zaporozhets Kalashnik <deadbyelpy@gmail.com>\n */\n\n'use strict';\n\n// public\nmodule.exports = function ( func, wait ) {\n    var timeout;\n\n    return function () {\n        var self = this,\n            args = arguments;\n\n        clearTimeout(timeout);\n\n        // Set the new timeout\n        timeout = setTimeout(function () {\n            timeout = null;\n            func.apply(self, args);\n        }, wait);\n    };\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base scroll bar implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {number} [config.value=0] initial thumb position\n * @param {number} [config.realSize=100] actual scroll size\n * @param {number} [config.viewSize=10] visible area size\n * @param {number} [config.type] direction\n *\n * @example\n * var ScrollBar = require('stb/ui/scroll.bar'),\n *     scrollBar = new ScrollBar({\n *         viewSize: 5,\n *         realSize: 25,\n *         events: {\n *             done: function () {\n *                 debug.log('ScrollBar: done');\n *             },\n *             change: function ( data ) {\n *                 debug.log('ScrollBar: change to ' + data.curr + ' from ' + data.prev);\n *             }\n *         }\n *     });\n */\nfunction ScrollBar ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Visible area size.\n     *\n     * @type {number}\n     */\n    this.viewSize = 10;\n\n    /**\n     * Scroll area actual height or width (if scroll is horizontal).\n     *\n     * @type {number}\n     */\n    this.realSize = 100;\n\n    /**\n     * Scroll thumb position.\n     *\n     * @type {number}\n     */\n    this.value = 0;\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Geometry of the scroll thumb element.\n     *\n     * @type {ClientRect}\n     */\n    this.thumbRect = null;\n\n    /**\n     * Geometry of the scroll track element.\n     *\n     * @type {ClientRect}\n     */\n    this.trackRect = null;\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'scrollBar ' + (config.className || '');\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // insert thumb line\n    this.$thumb = this.$body.appendChild(document.createElement('div'));\n\n    // correct CSS class name\n    this.$thumb.className = 'thumb';\n\n    // component setup\n    this.init(config);\n}\n\n\n// inheritance\nScrollBar.prototype = Object.create(Component.prototype);\nScrollBar.prototype.constructor = ScrollBar;\n\n// set component name\nScrollBar.prototype.name = 'spa-component-scrollbar';\n\nScrollBar.prototype.TYPE_VERTICAL   = 1;\nScrollBar.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Init or re-init realSize/viewSize/value parameters.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nScrollBar.prototype.init = function ( config ) {\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // set actual scroll size\n    if ( config.realSize !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.realSize) !== config.realSize ) {\n                throw new Error(__filename + ': config.realSize value must be a number');\n            }\n        }\n\n        // apply\n        this.realSize = config.realSize;\n    }\n\n    // set visible area size\n    if ( config.viewSize !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.viewSize) !== config.viewSize ) {\n                throw new Error(__filename + ': config.viewSize value must be a number');\n            }\n            if ( config.viewSize < 0 ) {\n                throw new Error(__filename + ': config.viewSize value must be greater than 0');\n            }\n        }\n\n        // apply\n        this.viewSize = config.viewSize;\n    }\n\n    // show or hide thumb\n    if ( this.viewSize >= this.realSize ) {\n        this.$thumb.classList.add('hidden');\n    } else {\n        this.$thumb.classList.remove('hidden');\n    }\n\n    // set thumb position\n    if ( config.value !== undefined ) {\n        // apply\n        this.scrollTo(config.value);\n    }\n\n    // set thumb size\n    if ( this.type === this.TYPE_VERTICAL ) {\n        this.$thumb.style.height = (this.viewSize / this.realSize * 100) + '%';\n    } else {\n        this.$thumb.style.width = (this.viewSize / this.realSize * 100) + '%';\n    }\n\n    // geometry\n    this.thumbRect = this.$thumb.getBoundingClientRect();\n    this.trackRect = this.$node.getBoundingClientRect();\n};\n\n\n/**\n * Set position of the given value.\n * Does nothing in case when scroll is in the end and passed value is more than scroll bar length.\n *\n * @param {number} value new value to set\n * @return {boolean} operation result\n *\n * @fires module:stb/ui/scroll.bar~ScrollBar#done\n * @fires module:stb/ui/scroll.bar~ScrollBar#change\n */\nScrollBar.prototype.scrollTo = function ( value ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(value) !== value ) {\n            throw new Error(__filename + ': value must be a number');\n        }\n        if ( this.realSize > this.viewSize && value > this.realSize - this.viewSize ) {\n            throw new Error(__filename + ': value is greater than this.realSize-this.viewSize');\n        }\n        if ( value < 0 ) {\n            throw new Error(__filename + ': value is less then 0');\n        }\n    }\n\n    // value has changed\n    if ( this.value !== value ) {\n        // track and thumb geometry was not set\n        if ( this.thumbRect.height === 0 || this.thumbRect.width === 0 ) {\n            // apply\n            this.trackRect = this.$node.getBoundingClientRect();\n            this.thumbRect = this.$thumb.getBoundingClientRect();\n        }\n\n        // set scroll bar width\n        if ( this.type === this.TYPE_VERTICAL ) {\n            this.$thumb.style.marginTop = ((this.trackRect.height - this.thumbRect.height) * value / (this.realSize - this.viewSize)) + 'px';\n        } else {\n            this.$thumb.style.marginLeft = ((this.trackRect.width - this.thumbRect.width) * value / (this.realSize - this.viewSize)) + 'px';\n        }\n\n        // there are some listeners\n        if ( this.events['change'] ) {\n            /**\n             * Update scroll value.\n             *\n             * @event module:stb/ui/scroll.bar~ScrollBar#change\n             *\n             * @type {Object}\n             * @property {number} prev old/previous scroll value\n             * @property {number} curr new/current scroll value\n             */\n            this.emit('change', {curr: value, prev: this.value});\n        }\n\n        // is it the end?\n        if ( value >= this.realSize ) {\n            value = this.realSize;\n\n            // there are some listeners\n            if ( this.events['done'] ) {\n                /**\n                 * Set scroll to its maximum value.\n                 *\n                 * @event module:stb/ui/scroll.bar~ScrollBar#done\n                 */\n                this.emit('done');\n            }\n        }\n\n        // set new value\n        this.value = value;\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n// public\nmodule.exports = ScrollBar;\n","'use strict';\n\nvar List = require('stb-component-list'),\n\n    Option = require('../modules/models/option'),\n\n    nodeMap = require('../modules/node.map.js');\n\n\nfunction SettingsList ( config ) {\n    var $panelHint = document.createElement('div'),\n        $hint = document.createElement('div');\n\n    this.renderCount = 0;\n\n    config.$node = document.createElement('div');\n    config.$node.className = 'body';\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    config.$node.appendChild(config.$body);\n\n    config.cycle = true;\n\n    this.itemIndex = null;\n\n    this.empty = true;\n\n    $panelHint.className = 'panelHint';\n    $hint.className = 'hint';\n    $hint.innerText = gettext('Settings not found');\n    $panelHint.appendChild($hint);\n\n    this.$emptyLabel = document.createElement('div');\n    this.$emptyLabel.appendChild($panelHint);\n    this.$emptyLabel.className = 'noData hidden';\n\n    this.navigationDisabled = true;\n\n    this.unsavedOptions = {};\n    this.unsavedOptionsCounter = 0;\n\n    this.onRenderEnd = null;\n\n    List.call(this, config);\n    this.$node.appendChild(this.$emptyLabel);\n}\n\n\n// inheritance\nSettingsList.prototype = Object.create(List.prototype);\nSettingsList.prototype.constructor = SettingsList;\n\nSettingsList.prototype.name = 'mag-component-layout-list';\n\n\nSettingsList.prototype.move = function ( code ) {\n    if ( this.navigationDisabled ) {\n        return;\n    }\n\n    List.prototype.move.call(this, code);\n};\n\nSettingsList.prototype.renderItem = function ( $node, data ) {\n    var self = this;\n\n    /* eslint no-useless-call: 0 */\n\n    $node.listInstance = this;\n    $node.onclick = null;\n    // $node.onenter = null;\n    $node.render = data.render;\n    nodeMap.data[data.id] = $node;\n\n    data.refresh = data.get = data.enable = data.disable = data.set = function () {\n        if ( DEVELOP ) {\n            console.log('NOT IMPLEMENTED');\n        }\n    };\n\n    if ( data instanceof Option ) {\n        if ( data.getter ) {\n            console.log('data.getter ' + data.getter.toString());\n            console.log(data.cached);\n            if ( data.cached === null ) {\n                console.log('not cached ' + data.id);\n                data.getter.call(data, function ( error, value ) {\n                    if ( error ) {\n                        console.log('getter error ' + data.id);\n                        self.onRenderItem();\n                    } else if ( typeof data.prepareForRender === 'function' ) {\n                        data.prepareForRender.call(data, value, function ( preparedData ) {\n                            data.cached = preparedData;\n                            data.render.call(data, preparedData, function () {\n                                self.onRenderItem();\n                            });\n                        });\n                    } else {\n                        data.cached = value;\n                        console.log('render cached value ' + data.cached + ' now ' + data.id);\n                        data.render.call(data, value, function () {\n                            self.onRenderItem();\n                        });\n                    }\n                });\n            } else {\n                console.log('render cached ' + data.id);\n                data.render.call(data, data.cached, function () {\n                    self.onRenderItem();\n                });\n            }\n        } else {\n            console.log('simple render ' + data.id);\n            data.render.call(data, null, function () {\n                self.onRenderItem();\n            });\n        }\n    } else {\n        // section\n        console.log('the simplest render ' + data.id);\n        data.render({}, function () {\n            self.onRenderItem();\n        });\n    }\n};\n\n\nSettingsList.prototype.$nodeChange = function ( isChanged, option, value ) {\n    // console.log('node changed? ' + isChanged + ' ' + option.id);\n    if ( isChanged ) {\n        this.unsavedOptions[option.id] = {\n            option: option,\n            value: value\n        };\n        // console.log(option);\n        ++this.unsavedOptionsCounter;\n    } else if ( this.unsavedOptionsCounter > 0 ) {\n        this.unsavedOptions[option.id] = null;\n        --this.unsavedOptionsCounter;\n    }\n    // console.log('this.unsavedOptions ' + this.unsavedOptionsCounter)\n    // console.log('this.unsavedOptions ' + this.unsavedOptionsCounter !== 0)\n\n    this.emit('change', this.unsavedOptionsCounter !== 0);\n};\n\n/* eslint no-loop-func: 0 */\nSettingsList.prototype.save = function ( callback ) {\n    var self = this,\n        savedSections = {};\n\n    if ( this.unsavedOptionsCounter !== 0 ) {\n        Object.keys(this.unsavedOptions).forEach(function ( optionId ) {\n            var data;\n\n            if ( self.unsavedOptions[optionId] === null ) {\n                // skip already saved options\n                return;\n            }\n\n            data = self.unsavedOptions[optionId];\n            // console.log(typeof data.option.prepareForSave === 'function')\n            if ( typeof data.option.prepareForSave === 'function' ) {\n                // console.log('onsave ' + data.option.section.onsave)\n                if ( data.option.section.onsave ) {\n                    savedSections[data.option.section.id] = data.option.section;\n                }\n                data.option.prepareForSave.call(data.option, data.value, function ( error, afterSave ) {\n                    // console.log(!error && typeof data.option.saver === 'function')\n                    if ( !error && typeof data.option.saver === 'function' ) {\n                        data.option.saver.call(data.option, function ( error, saverCallback ) {\n                            if ( !error ) {\n                                self.unsavedOptions[optionId].option.emit('saved', self.unsavedOptions[optionId].value);\n                                self.unsavedOptions[optionId] = null;\n                                --self.unsavedOptionsCounter;\n\n                                if ( self.unsavedOptionsCounter === 0 ) {\n                                    self.emit('change', false);\n                                    Object.keys(savedSections).forEach(function ( id ) {\n                                        savedSections[id].onsave();\n                                    });\n                                    callback();\n                                }\n\n                                if ( typeof afterSave === 'function' ) {\n                                    afterSave.call(data.option);\n                                }\n                            }\n\n                            if ( typeof saverCallback === 'function') {\n                                saverCallback.call(data.option, error);\n                            }\n                        });\n                    } else {\n                        self.unsavedOptions[optionId].option.emit('saved', self.unsavedOptions[optionId].value);\n                        self.unsavedOptions[optionId] = null;\n                        --self.unsavedOptionsCounter;\n\n                        if ( self.unsavedOptionsCounter === 0 ) {\n                            self.emit('change', false);\n                            Object.keys(savedSections).forEach(function ( id ) {\n                                savedSections[id].onsave();\n                            });\n                            callback();\n                        }\n                    }\n                });\n            } else {\n                // console.log('onsave ' + data.option.section.onsave)\n                if ( data.option.section.onsave ) {\n                    savedSections[data.option.section.id] = data.option.section;\n                }\n                data.option.saver.call(data.option, function ( error, saverCallback ) {\n                    // console.log('saved? ' + !error);\n                    if ( !error ) {\n                        self.unsavedOptions[optionId] = null;\n                        --self.unsavedOptionsCounter;\n\n                        // console.log('saved');\n                        if ( self.unsavedOptionsCounter === 0 ) {\n                            self.emit('change', false);\n                            Object.keys(savedSections).forEach(function ( id ) {\n                                savedSections[id].onsave();\n                            });\n                            callback();\n                        }\n                    }\n\n                    if ( typeof saverCallback === 'function' ) {\n                        saverCallback.call(data.option, error);\n                    }\n                });\n            }\n        });\n    }\n};\n\n\nSettingsList.prototype.getSaveRequirements = function (  ) {\n    var self = this,\n        requirements = {\n            reload: false\n        },\n        data;\n\n    if ( this.unsavedOptionsCounter !== 0 ) {\n        Object.keys(this.unsavedOptions).forEach(function ( optionId ) {\n            if ( self.unsavedOptions[optionId] !== null ) {\n                data = self.unsavedOptions[optionId];\n\n                if ( data.option.requirePortalReboot ) {\n                    requirements.reload = requirements.reload || {};\n                    requirements.reload.portal = true;\n                }\n\n                if ( data.option.requireDeviceReboot ) {\n                    requirements.reload = requirements.reload || {};\n                    requirements.reload.device = true;\n                }\n            }\n        });\n    }\n\n    return requirements;\n};\n\n\nSettingsList.prototype.onRenderItem = function () {\n    --this.renderCount;\n\n    // console.log(this.renderCount);\n    if ( this.renderCount === 0 ) {\n        if ( this.onRenderEnd !== null ) {\n            this.onRenderEnd();\n            this.onRenderEnd = null;\n        }\n\n        if ( this.itemIndex !== null && !isNaN(this.itemIndex) ) {\n            this.focusIndex(this.itemIndex);\n        }\n    }\n};\n\n\nSettingsList.prototype.renderView = function ( index ) {\n    var focusIndex;\n\n    if ( this.$focusItem ) {\n        focusIndex = this.$focusItem.index;\n    }\n\n    console.log('viewIndex ' + this.viewIndex);\n    console.log(index);\n\n    this.blurItem(this.$focusItem);\n\n    if ( this.viewIndex === -1 || this.viewIndex === null ) {\n        nodeMap.data = {};\n        this.itemIndex = null;\n        this.data.forEach(function ( item ) {\n            item.cached = null;\n        });\n    } else {\n        this.itemIndex = this.viewIndex < index ? focusIndex + 1 : focusIndex - 1;\n        console.log(JSON.stringify([this.data.length, index, this.size]));\n        if ( index === 0 ) {\n            this.itemIndex = 0;\n        } else if ( this.data.length === index + this.size && this.viewIndex <= this.size ) {\n            this.itemIndex = this.data.length - 1;\n        } else if ( this.viewIndex < index ) {\n            // going down\n            console.log('going down');\n        } else {\n            // going up\n            console.log('going up');\n        }\n    }\n\n\n    this.renderCount = this.data.length < this.size ? this.data.length : this.size;\n    console.log(' this.renderCount ' + this.renderCount);\n\n    if  ( this.renderCount === 0 ) {\n        this.renderCount = this.size;\n        this.data = new Array(this.size);\n        this.$body.classList.add('hidden');\n        this.$emptyLabel.classList.remove('hidden');\n        this.navigationDisabled = true;\n        this.empty = true;\n        List.prototype.renderView.call(this, index);\n    } else {\n        if ( this.empty ) {\n            this.$body.classList.remove('hidden');\n            this.$emptyLabel.classList.add('hidden');\n            this.navigationDisabled = false;\n            this.empty = false;\n        }\n        List.prototype.renderView.call(this, index);\n    }\n};\n\n\nSettingsList.prototype.render = function ( data, callback ) {\n    this.viewIndex = -1;\n    this.data = data;\n\n    if ( callback ) {\n        this.onRenderEnd = callback;\n    }\n\n    this.renderView(0);\n};\n\n\nSettingsList.prototype.refresh = function () {\n    var self = this,\n        focusIndex = self.viewIndex;\n\n    if ( self.$focusItem ) {\n        focusIndex = self.$focusItem.index;\n    }\n\n    self.render(self.data, function () {\n        self.focusIndex(focusIndex);\n    });\n};\n\n\nSettingsList.prototype.initialize = function ( backItem, config ) {\n    var self = this,\n        focusIndex = self.viewIndex;\n\n\n    if ( config.focusIndex ) {\n        focusIndex = config.focusIndex;\n    } else {\n        focusIndex = self.$focusItem.index;\n    }\n\n    if ( config.data ) {\n        self.data = config.data;\n    }\n\n    if ( backItem !== null ) {\n        self.data.unshift(backItem);\n    }\n\n    self.render(self.data, function () {\n        if ( config.viewIndex ) {\n            self.renderView(config.viewIndex);\n        } else if ( self.data[focusIndex] ) {\n            self.focusIndex(focusIndex);\n        } else {\n            self.focusIndex(0);\n        }\n    });\n};\n\n\n// correct component name\nmodule.exports = SettingsList;\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint-disable */\n\n'use strict';\n\nvar Component = require('spa-component'),\n    keys      = require('spa-keys');\n\n\n/**\n * Mouse click event.\n *\n * @event module:stb/ui/list~List#click:item\n *\n * @type {Object}\n * @property {Element} $item clicked HTML item\n * @property {Event} event click event data\n */\n\n\n/**\n * Base list implementation.\n *\n * Each data item can be either a primitive value or an object with these fields:\n *\n *  Name    | Description\n * ---------|-------------\n *  value   | actual cell value to render\n *  mark    | is it necessary or not to render this cell as marked\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}   [config={}]          init parameters (all inherited from the parent)\n * @param {Array}    [config.data=[]]     component data to visualize\n * @param {function} [config.render]      method to build each grid cell content\n * @param {function} [config.navigate]    method to move focus according to pressed keys\n * @param {number}   [config.size=5]      amount of visible items on a page\n * @param {number}   [config.viewIndex=0] move view window to this position on init\n * @param {number}   [config.focusIndex]  list item index to make item focused (move view window to this position)\n * @param {boolean}  [config.cycle=true]  allow or not to jump to the opposite side of a list when there is nowhere to go next\n * @param {boolean}  [config.scroll=null] associated ScrollBar component link\n * @param {Object}   [config.provider]      data provider\n *\n * @fires module:stb/ui/list~List#click:item\n */\nfunction List ( config ) {\n    // current execution context\n    //var self = this;\n\n    // sanitize\n    config = config || {};\n\n    console.assert(typeof this === 'object', 'must be constructed via new');\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n        if ( config.type && Number(config.type) !== config.type ) {\n            throw new Error(__filename + ': config.type must be a number');\n        }\n    }\n\n    /**\n     * Link to the currently focused DOM element.\n     *\n     * @type {Element}\n     */\n    this.$focusItem = null;\n\n    /**\n     * Position of the visible window to render.\n     *\n     * @type {number}\n     */\n    this.viewIndex = null;\n\n    /**\n     * Component data to visualize.\n     *\n     * @type {Array}\n     */\n    this.data = [];\n\n    /**\n     * Component orientation.\n     *\n     * @type {number}\n     */\n    this.type = this.TYPE_VERTICAL;\n\n    /**\n     * Amount of visible items on a page.\n     *\n     * @type {number}\n     */\n    this.size = 5;\n\n    /**\n     * Allow or not to jump to the opposite side of a list when there is nowhere to go next.\n     *\n     * @type {boolean}\n     */\n    this.cycle = false;\n\n    /**\n     * Associated ScrollBar component link.\n     *\n     * @type {ScrollBar}\n     */\n    this.scroll = null;\n\n    // horizontal or vertical\n    if ( config.type ) {\n        // apply\n        this.type = config.type;\n    }\n\n    /**\n     * Associated data provider\n     *\n     * @type {Provider}\n     */\n    this.provider = null;\n\n\n    // set default className if classList property empty or undefined\n    //config.className = 'list ' + (config.className || '');\n\n    if ( this.type === this.TYPE_HORIZONTAL ) {\n        config.className += ' horizontal';\n    }\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // component setup\n    this.init(config);\n}\n\n\n// inheritance\nList.prototype = Object.create(Component.prototype);\nList.prototype.constructor = List;\n\n// set component name\nList.prototype.name = 'spa-component-list';\n\nList.prototype.TYPE_VERTICAL   = 1;\nList.prototype.TYPE_HORIZONTAL = 2;\n\n\n/**\n * Fill the given item with data.\n *\n * @param {Element} $item item DOM link\n * @param {*} data associated with this item data\n */\nList.prototype.renderItemDefault = function ( $item, data ) {\n    $item.innerText = data.value;\n};\n\n\n/**\n * Method to build each list item content.\n * Can be redefined to provide custom rendering.\n *\n * @type {function}\n */\nList.prototype.renderItem = List.prototype.renderItemDefault;\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nList.prototype.defaultEvents = {\n    /**\n     * Default method to handle mouse wheel events.\n     *\n     * @param {Event} event generated event\n     */\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        if ( this.type === this.TYPE_VERTICAL && event.wheelDeltaY ) {\n            this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n        }\n\n        // scrolling by X axis\n        if ( this.type === this.TYPE_HORIZONTAL && event.wheelDeltaX ) {\n            this.move(event.wheelDeltaX > 0 ? keys.left : keys.right);\n        }\n    },\n\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n            case keys.right:\n            case keys.left:\n            case keys.pageUp:\n            case keys.pageDown:\n            case keys.home:\n            case keys.end:\n                // cursor move only on arrow keys\n                this.move(event.code);\n                break;\n            case keys.enter:\n                // there are some listeners\n                if ( this.events['click:item'] && this.$focusItem ) {\n                    // notify listeners\n                    this.emit('click:item', {$item: this.$focusItem, event: event});\n                }\n                break;\n        }\n    }\n};\n\n\n/**\n * Make all the data items identical.\n * Wrap to objects if necessary.\n *\n * @param {Array} data incoming array\n * @return {Array} reworked incoming data\n */\nfunction normalize ( data ) {\n    var i, item;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !Array.isArray(data) ) {\n            throw new Error(__filename + ': wrong data type');\n        }\n    }\n\n    // rows\n    for ( i = 0; i < data.length; i++ ) {\n        // cell value\n        item = data[i];\n        // primitive value\n        if ( typeof item !== 'object' ) {\n            // wrap with defaults\n            item = data[i] = {\n                value: data[i]\n            };\n        }\n\n        if ( DEVELOP ) {\n            // if ( !('value' in item) ) {\n            //     throw new Error(__filename + ': field \"value\" is missing');\n            // }\n            if ( ('mark' in item) && Boolean(item.mark) !== item.mark ) {\n                throw new Error(__filename + ': item.mark must be boolean');\n            }\n        }\n    }\n\n    return data;\n}\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.init = function ( config ) {\n    var self     = this,\n        currSize = this.$body.children.length,\n        /**\n         * Item mouse click handler.\n         *\n         * @param {Event} event click event data\n         *\n         * @this Element\n         *\n         * @fires module:stb/ui/list~List#click:item\n         */\n        onClick = function ( event ) {\n            if ( this.data ) {\n                self.focusItem(this);\n\n                // there are some listeners\n                if ( self.events['click:item'] ) {\n                    // notify listeners\n                    self.emit('click:item', {$item: this, event: event});\n                }\n            }\n        },\n        item, i;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // apply cycle behaviour\n    if ( config.cycle !== undefined ) { this.cycle = config.cycle; }\n\n    // apply ScrollBar link\n    if ( config.scroll ) { this.scroll = config.scroll; }\n\n    // apply data provider\n    if ( config.provider ) { this.provider = config.provider; }\n\n\n    // custom render method\n    if ( config.render ) {\n        if ( DEVELOP ) {\n            if ( typeof config.render !== 'function' ) {\n                throw new Error(__filename + ': wrong config.render type');\n            }\n        }\n\n        // apply\n        this.renderItem = config.render;\n    }\n\n    // list items amount on page\n    if ( config.size ) {\n        if ( DEVELOP ) {\n            if ( Number(config.size) !== config.size ) {\n                throw new Error(__filename + ': config.size must be a number');\n            }\n            if ( config.size <= 0 ) {\n                throw new Error(__filename + ': config.size should be positive');\n            }\n        }\n\n        // apply\n        this.size = config.size;\n    }\n\n    // geometry has changed or initial draw\n    if ( this.size !== currSize ) {\n        // non-empty list\n        if ( currSize > 0 ) {\n            // clear old items\n            this.$body.innerText = null;\n        }\n\n        // create new items\n        for ( i = 0; i < this.size; i++ ) {\n            item = document.createElement('div');\n            item.index = i;\n            item.className = 'item';\n\n            item.addEventListener('click', onClick);\n            this.$body.appendChild(item);\n        }\n    }\n\n    if ( this.provider ) {\n        this.provider.get( null, function ( error, data ) {\n            if ( error ) {\n                if ( self.events['data:error'] ) {\n                    /**\n                     * Provider get error while take new data\n                     *\n                     * @event module:stb/ui/list~List#data:error\n                     */\n                    self.emit('data:error', error);\n                }\n            } else {\n                if ( data ) {\n                    config.data = data;\n                    self.setData(config);\n                    if ( self.scroll ) {\n                        self.scroll.init({\n                            realSize: self.provider.maxCount,\n                            viewSize: self.provider.size,\n                            value: self.provider.head + self.provider.pos\n                        });\n                    }\n                }\n                if ( self.events['data:get'] ) {\n                    /**\n                     * Provider request new data\n                     *\n                     * @event module:stb/ui/list~List#data:get\n                     *\n                     * @type {Object}\n                     */\n                    self.emit('data:get');\n                }\n            }\n        });\n    } else if ( config.data ) {\n        this.setData(config);\n    }\n\n};\n\n/**\n * Set data and render inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nList.prototype.setData = function ( config ) {\n    // apply list of items\n\n    if ( config.data ) {\n        if ( DEVELOP ) {\n            if ( !Array.isArray(config.data) ) {\n                throw new Error(__filename + ': wrong config.data type');\n            }\n        }\n\n        // prepare user data\n        this.data = normalize(config.data);\n    }\n\n    // view window position\n    if ( DEVELOP ) {\n        if ( config.viewIndex !== undefined ) {\n            if ( Number(config.viewIndex) !== config.viewIndex ) {\n                throw new Error(__filename + ': config.viewIndex must be a number');\n            }\n            if ( config.viewIndex < 0 ) {\n                throw new Error(__filename + ': config.viewIndex should be positive');\n            }\n        }\n    }\n\n    // reset current view window position\n    this.viewIndex = null;\n\n    if ( this.$focusItem ) {\n        this.blurItem(this.$focusItem);\n    }\n\n    if ( this.scroll ) {\n        if ( this.provider ) {\n            if ( this.scroll.realSize !== this.provider.maxCount ) {\n                this.scroll.init({\n                    realSize: this.provider.maxCount,\n                    viewSize: this.provider.size,\n                    value: this.provider.head + this.provider.pos\n                });\n            }\n        } else {\n            this.scroll.init({\n                realSize: this.data.length,\n                viewSize: this.size,\n                value: config.viewIndex || 0\n            });\n        }\n    }\n\n    // set focus item\n    if ( config.focusIndex !== undefined && this.data.length ) {\n        if ( DEVELOP ) {\n            if ( Number(config.focusIndex) !== config.focusIndex ) {\n                throw new Error(__filename + ': config.focusIndex must be a number');\n            }\n            if ( config.focusIndex < 0 ) {\n                throw new Error(__filename + ': config.focusIndex should be positive');\n            }\n            // if ( config.focusIndex > this.data.length - 1 ) {\n            //     throw new Error(__filename + ': config.focusIndex should be less than data size');\n            // }\n        }\n\n        // jump to the necessary item\n        this.focusIndex(config.focusIndex);\n    } else {\n        // go to the first page\n        this.renderView(config.viewIndex || 0);\n    }\n};\n\n\n/**\n * Shift the visible view window event.\n *\n * @event module:stb/ui/list~List#move:view\n *\n * @type {Object}\n * @property {number} prevIndex previous view window position\n * @property {number} currIndex current view window position\n */\n\n\n/**\n * Draw the visible window.\n *\n * @param {number} index start position to render\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#move:view\n */\nList.prototype.renderView = function ( index ) {\n    var $item, i, itemData, prevIndex, currIndex;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be more than zero');\n        }\n        // if ( index >= this.data.length ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // has the view window position changed\n    if ( this.viewIndex !== index ) {\n        // save for emit\n        prevIndex = this.viewIndex;\n        // sync global pointer\n        this.viewIndex = currIndex = index;\n\n        // rebuild all visible items\n        for ( i = 0; i < this.size; i++ ) {\n            // shortcuts\n            $item    = this.$body.children[i];\n            itemData = this.data[index];\n\n            // real item or stub\n            if ( itemData ) {\n                // correct inner data/index and render\n                $item.data  = itemData;\n                $item.index = index;\n                this.renderItem($item, itemData);\n\n                // apply CSS\n                if ( itemData.mark ) {\n                    $item.classList.add('mark');\n                } else {\n                    $item.classList.remove('mark');\n                }\n            } else {\n                // nothing to render\n                $item.data = $item.index = undefined;\n                $item.innerHTML = '&nbsp;';\n                $item.ready = false;\n            }\n            index++;\n        }\n\n        // there are some listeners\n        if ( this.events['move:view'] ) {\n            // notify listeners\n            this.emit('move:view', {prevIndex: prevIndex, currIndex: currIndex});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            this.emit('select:item', {$item: $item});\n        }\n\n        // update a linked scroll component\n        if ( this.scroll ) {\n            this.scroll.scrollTo(this.provider ? this.provider.head + this.provider.pos : this.viewIndex);\n        }\n\n        // full rebuild\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Jump to the opposite side.\n *\n * @event module:stb/ui/list~List#cycle\n *\n * @type {Object}\n * @property {number} direction key code initiator of movement\n */\n\n\n/**\n * Attempt to go beyond the edge of the list.\n *\n * @event module:stb/ui/list~List#overflow\n *\n * @type {Object}\n * @property {number} direction key code initiator of movement\n */\n\n\n/**\n * Move focus to the given direction.\n *\n * @param {number} direction arrow key code\n *\n * @fires module:stb/ui/list~List#cycle\n * @fires module:stb/ui/list~List#overflow\n */\nList.prototype.move = function ( direction ) {\n    var self = this,\n        force = false;\n\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(direction) !== direction ) {\n            throw new Error(__filename + ': direction must be a number');\n        }\n    }\n\n    // empty list\n    if ( !this.data.length ) {\n        return;\n    }\n    switch ( direction ) {\n        case keys.left:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.up:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index > 0 ) {\n                    if ( this.$focusItem === this.$body.firstChild ) {\n                        this.renderView(this.viewIndex - 1);\n                    } else {\n                        this.focusItem(this.$focusItem.previousSibling);\n                    }\n                } else {\n                    if ( this.provider ) {\n                        this.provider.get(direction, function ( error, data, pos ) {\n                            if ( error ) {\n                                if ( self.events['data:error'] ) {\n                                    /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                    self.emit('data:error', error);\n                                }\n                            } else {\n                                if ( data ) {\n                                    self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                                }\n                            }\n                        });\n                    } else {\n                        // already at the beginning\n                        if ( this.cycle ) {\n                            // jump to the end of the list\n                            this.move(keys.end);\n                        }\n                        if ( this.events['overflow'] ) {\n                            // notify listeners\n                            this.emit('overflow', {direction: direction, cycle: this.cycle});\n                        }\n                    }\n                }\n            }\n            break;\n        case keys.right:\n            if ( this.type === this.TYPE_HORIZONTAL ) {\n                force = true;\n            } else {\n                break;\n            }\n        case keys.down:\n            if ( force || this.type === this.TYPE_VERTICAL ) {\n                if ( this.$focusItem && this.$focusItem.index < this.data.length - 1 ) {\n                    if ( this.$focusItem === this.$body.lastChild ) {\n                        this.renderView(this.viewIndex + 1);\n                    } else {\n                        this.focusItem(this.$focusItem.nextSibling);\n                    }\n                } else {\n                    if ( this.provider ) {\n                        this.provider.get(direction, function ( error, data, pos ) {\n                            if ( error ) {\n                                if ( self.events['data:error'] ) {\n                                    /**\n                                     * Provider get error while take new data\n                                     *\n                                     * @event module:stb/ui/list~List#data:error\n                                     */\n                                    self.emit('data:error', error);\n                                }\n                            } else {\n                                if ( data ) {\n                                    self.setData({data: data, focusIndex: pos || pos === 0 ? pos : self.$focusItem.index});\n                                }\n                            }\n                        });\n                    } else {\n                        // already at the beginning\n                        if ( this.cycle ) {\n                            // jump to the beginning of the list\n                            this.move(keys.home);\n                        }\n                        if ( this.events['overflow'] ) {\n                            // notify listeners\n                            this.emit('overflow', {direction: direction, cycle: this.cycle});\n                        }\n                    }\n                }\n            }\n            break;\n        case keys.pageUp:\n            if ( this.provider ) {\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else {\n                        if ( data ) {\n                            self.setData({data: data, focusIndex: pos ? pos : 0});\n                        }\n                    }\n                });\n                return;\n            }\n            if ( this.viewIndex < this.size ) {\n                // first page\n                this.renderView(0);\n            } else {\n                // second page and further\n                this.renderView(this.viewIndex - this.size + 1);\n            }\n\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.pageDown:\n            if ( this.provider ) {\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else {\n                        if ( data ) {\n                            self.setData({\n                                data: data,\n                                focusIndex: pos || pos === 0 ? pos : data.length < self.size ?  data.length - 1 : self.size - 1\n                            });\n                        }\n                    }\n                });\n                break;\n            }\n            // data is bigger then one page\n            if ( this.data.length > this.size ) {\n                // determine jump size\n                if ( this.viewIndex > this.data.length - this.size * 2 ) {\n                    // last page\n                    this.renderView(this.data.length - this.size);\n                } else {\n                    // before the last page\n                    this.renderView(this.viewIndex + this.size - 1);\n                }\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n        case keys.home:\n            if ( this.provider ) {\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else {\n                        if ( data ) {\n                            self.setData({data: data, focusIndex: pos ? pos : 0});\n                        }\n                    }\n                });\n                break;\n            }\n            this.renderView(0);\n            this.focusItem(this.$body.firstChild);\n            break;\n        case keys.end:\n            if ( this.provider ) {\n                this.provider.get(direction, function ( error, data, pos ) {\n                    if ( error ) {\n                        if ( self.events['data:error'] ) {\n                            /**\n                             * Provider get error while take new data\n                             *\n                             * @event module:stb/ui/list~List#data:error\n                             */\n                            self.emit('data:error', error);\n                        }\n                    } else {\n                        if ( data ) {\n                            self.setData({\n                                data: data,\n                                focusIndex: pos || pos === 0 ? pos : data.length < self.size ?  data.length - 1 : self.size - 1\n                            });\n                        }\n                    }\n                });\n                break;\n            }\n            if ( this.data.length > this.size ) {\n                this.renderView(this.data.length - this.size);\n                this.focusItem(this.$body.lastChild);\n            } else {\n                // not the last item on the page\n                this.focusItem(this.$body.children[this.data.length - 1]);\n            }\n            break;\n    }\n};\n\n\n/**\n * Highlight the given DOM element as focused.\n * Remove focus from the previously focused item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.focusItem = function ( $item ) {\n    var $prev = this.$focusItem;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n    }\n\n    // different element\n    if ( $item && $prev !== $item ) {\n        if ( DEVELOP ) {\n            if ( !($item instanceof Element) ) {\n                throw new Error(__filename + ': wrong $item type');\n            }\n            if ( $item.parentNode !== this.$body ) {\n                throw new Error(__filename + ': wrong $item parent element');\n            }\n        }\n\n        // some item is focused already\n        if ( $prev !== null ) {\n            if ( DEVELOP ) {\n                if ( !($prev instanceof Element) ) {\n                    throw new Error(__filename + ': wrong $prev type');\n                }\n            }\n\n            // style\n            $prev.classList.remove('focus');\n\n            // there are some listeners\n            if ( this.events['blur:item'] ) {\n                /**\n                 * Remove focus from an element.\n                 *\n                 * @event module:stb/ui/list~List#blur:item\n                 *\n                 * @type {Object}\n                 * @property {Element} $item previously focused HTML element\n                 */\n                this.emit('blur:item', {$item: $prev});\n            }\n        }\n        // reassign\n        this.$focusItem = $item;\n\n        this.$focusItem.data = this.data[this.$focusItem.index];\n\n        // correct CSS\n        $item.classList.add('focus');\n\n        // there are some listeners\n        if ( this.events['focus:item'] ) {\n            /**\n             * Set focus to a DOM element.\n             *\n             * @event module:stb/ui/list~List#focus:item\n             *\n             * @type {Object}\n             * @property {Element} $prev old/previous focused HTML element\n             * @property {Element} $curr new/current focused HTML element\n             */\n            this.emit('focus:item', {$prev: $prev, $curr: $item});\n        }\n\n        // there are some listeners\n        if ( this.events['select:item'] ) {\n            /**\n             * Set focus to a list item.\n             *\n             * @event module:stb/ui/list~List#select:item\n             *\n             * @type {Object}\n             * @property {Element} $item new/current focused item\n             */\n            this.emit('select:item', {$item: $item});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Highlight the given DOM element as blur.\n * Remove focus from the item and generate associated event.\n *\n * @param {Node|Element} $item element to focus\n *\n * @return {boolean} operation status\n *\n * @fires module:stb/ui/list~List#focus:item\n * @fires module:stb/ui/list~List#blur:item\n */\nList.prototype.blurItem = function ( $item ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n    }\n\n    // different element\n    if ( $item ) {\n        if ( $item === this.$focusItem ) {\n            this.$focusItem = null;\n        }\n\n        $item.classList.remove('focus');\n\n        // there are some listeners\n        if ( this.events['blur:item'] ) {\n            /**\n             * Remove focus from an element.\n             *\n             * @event module:stb/ui/list~List#blur:item\n             *\n             * @type {Object}\n             * @property {Element} $item previously focused HTML element\n             */\n            this.emit('blur:item', {$item: $item});\n        }\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n/**\n * Set the given item focused by item index.\n *\n * @param {number} index item data index\n */\nList.prototype.focusIndex = function ( index ) {\n    var viewIndex = this.viewIndex || 0;\n\n    if ( DEVELOP ) {\n        if ( Number(index) !== index ) {\n            throw new Error(__filename + ': index must be a number');\n        }\n        if ( index < 0 ) {\n            throw new Error(__filename + ': index should be positive');\n        }\n        // if ( index > this.data.length - 1 ) {\n        //     throw new Error(__filename + ': index should be less than data size');\n        // }\n    }\n\n    // determine direction\n    if ( index >= viewIndex + this.size ) {\n        // check range\n        index = index < this.data.length - 1 ? index : this.data.length - 1;\n        // move down\n        this.renderView(index - this.size + 1);\n        this.focusItem(this.$body.lastChild);\n    } else if ( index < viewIndex ) {\n        // check range\n        index = index > 0 ? index : 0;\n        // move up\n        this.renderView(index);\n        this.focusItem(this.$body.firstChild);\n    } else {\n        // no move\n        if ( this.viewIndex === null ) {\n            // first attempt\n            this.renderView(0);\n        }\n        this.focusItem(this.$body.children[index - viewIndex]);\n    }\n};\n\n\n/**\n * Set item state and appearance as marked.\n *\n * @param {Node|Element} $item element to focus\n * @param {boolean} state true - marked, false - not marked\n */\nList.prototype.markItem = function ( $item, state ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 2 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( !($item instanceof Element) ) {\n            throw new Error(__filename + ': wrong $item type');\n        }\n        if ( $item.parentNode !== this.$body ) {\n            throw new Error(__filename + ': wrong $item parent element');\n        }\n        if ( Boolean(state) !== state ) {\n            throw new Error(__filename + ': state must be boolean');\n        }\n    }\n\n    // correct CSS\n    if ( state ) {\n        $item.classList.add('mark');\n    } else {\n        $item.classList.remove('mark');\n    }\n\n    // apply flag\n    $item.data.mark = state;\n};\n\n\n// public\nmodule.exports = List;\n","'use strict';\n\n\nvar Emitter = require('cjs-emitter');\n\n\nfunction Section ( config ) {\n    var keys     = Object.keys(config),\n        keysSize = keys.length,\n        index    = 0,\n        events   = config.events,\n        event;\n\n    while ( index < keysSize ) {\n        this[keys[index]] = config[keys[index]];\n        ++index;\n    }\n\n    /*\n     * this.saveImmediate;\n     * this.requirePortalReboot;\n     * this.requireDeviceReboot;\n     */\n\n    this.events = {};\n\n    Emitter.call(this, config);\n\n    for ( event in events ) {\n        this.addListener(event, events[event]);\n    }\n\n    this.render = require('../renders/list.item');\n\n    this.type = 'section';\n    this.advanced = !!config.advanced;\n}\n\n\n// inheritance\nSection.prototype = Object.create(Emitter.prototype);\nSection.prototype.constructor = Section;\n\n\nmodule.exports = Section;\n","/**\n *\n * @author Igor Zapororzhets <deadbyelpy@gmail.com>.\n */\n\n'use strict';\n\n\n/* eslint no-use-before-define: 0*/\n/* eslint no-useless-call: 0 */\n\n\nvar app  = require('mag-app'),\n    keys = require('stb-keys'),\n\n    Modal = require('mag-component-modal'),\n    List  = require('stb-component-list'),\n    Scroll    = require('stb-component-scrollbar'),\n\n    nodeMap = require('../node.map.js'),\n    listItemRender = require('./list.item'),\n\n    scroll = new Scroll(),\n    list = new List({\n        size: 5,\n        data: [1],\n        $node: document.createElement('div'),\n        $body: document.createElement('div'),\n        scroll: scroll,\n        render: function ( $node, data ) {\n            console.log('renderCalled');\n            if ( !$node.$layout ) {\n                $node.innerText = '';\n\n                while ( $node.firstChild ) {\n                    $node.removeChild($node.firstChild);\n                }\n\n                $node.$layout = $node.appendChild(document.createElement('div'));\n                $node.$layout.className = 'mag-component-layout';\n\n                $node.$text = document.createElement('div');\n\n                $node.$layout.appendChild($node.$text);\n            }\n\n            $node.$text.innerText = data.name || data.value;\n        },\n        events: {\n            keydown: function ( event ) {\n                List.prototype.defaultEvents.keydown.call(this, event);\n\n                console.log(event && event.code);\n                console.log('keydown');\n                if ( event.code === keys.back ) {\n                    event.stop = true;\n                    modal.hide();\n                }\n            },\n            'click:item': function ( event ) {\n                var self = this;\n\n                console.log('CLICK ITEM!!!!');\n\n                if ( event.$item.data.selected ) {\n                    if ( !currentOption.saveImmediate ) {\n                        nodeMap.data[currentOption.id].listInstance.$nodeChange(\n                            event.$item.value !== nodeMap.data[currentOption.id].initialValue,\n                            currentOption,\n                            event.$item.data.value\n                        );\n                        currentOption.emit('select:item', event.$item.data);\n                    }\n\n                    setTimeout(function () {\n                        modal.hide();\n                    }, 0);\n                } else {\n                    if ( currentOption.saveImmediate ) {\n                        if ( typeof currentOption.prepareForSave === 'function' ) {\n                            currentOption.prepareForSave.call(currentOption, event.$item.data.value, function ( error, afterSave ) {\n                                if ( !error ) {\n                                    currentOption.saver.call(currentOption, function ( error, callback ) {\n                                        if ( !error ) {\n                                            nodeMap.data[currentOption.id].initialValue = event.$item.data.value;\n\n                                            self.data.forEach(function ( item ) {\n                                                item.selected = false;\n                                            });\n                                            event.$item.data.selected = true;\n                                            if ( typeof afterSave === 'function' ) {\n                                                afterSave.call(currentOption);\n                                            }\n                                        }\n\n                                        if ( typeof callback === 'function') {\n                                            callback.call(currentOption, error);\n                                        }\n                                    });\n                                }\n                            });\n                        } else {\n                            currentOption.saver.call(currentOption, function ( error, callback ) {\n                                if ( !error ) {\n                                    self.data.forEach(function ( item ) {\n                                        item.selected = false;\n                                    });\n                                    event.$item.data.selected = true;\n                                    nodeMap.data[currentOption.id].initialValue = event.$item.data.value;\n                                }\n\n                                if ( typeof callback === 'function') {\n                                    callback.call(currentOption, error);\n                                }\n                            });\n                        }\n                    } else {\n                        nodeMap.data[currentOption.id].listInstance.$nodeChange(\n                            event.$item.data.value !== nodeMap.data[currentOption.id].initialValue,\n                            currentOption,\n                            event.$item.data.value\n                        );\n                        currentOption.emit('select:item', event.$item.data);\n                    }\n\n                    setTimeout(function () {\n                        modal.hide();\n                    }, 0);\n                }\n            },\n            'focus:item': function ( event ) {\n                if ( currentOption ) {\n                    currentOption.emit('focus:item', event.$curr.data);\n                }\n            },\n            focus: function () {\n                console.log('FOCUS ME');\n            }\n        }\n    }),\n    modal = new Modal({\n        title: 'Choose',\n        children: [\n            list,\n            scroll\n        ],\n        events: {\n            show: function () {\n                app.activePanelSet.blur();\n\n                setTimeout(function () {\n                    // bug: http://192.168.1.220:3000/issues/21124\n                    // can't explaint why modal window displaying over it's body\n                    // move list node to top of the elements\n                    list.$node.style.zIndex = 9999;\n                    console.log('timeout');\n                    list.focus();\n                }, 0);\n            },\n            hide: function () {\n                list.$node.style.zIndex = '';\n                app.activePanelSet.focus();\n            },\n            click: function () {\n                // TODO: add check into mag-component-modal\n                console.log('click on modal, ' + (app.activePage.activeComponent === list));\n                console.log(list.$focusItem.innerHTML);\n                if ( app.activePage.activeComponent === list ) {\n                    list.emit('click:item', {\n                        $item: list.$focusItem\n                    });\n                }\n            }\n        }\n    }),\n    currentOption;\n\n\nmodal.$node.classList.add('select-list');\n\nlist.$node.className = 'mag-component-layout-list padded';\nlist.$node.appendChild(list.$body);\nlist.$body.className = 'body';\nlist.$body.title = '';\n\nmodal.$counter = modal.$text.parentNode.appendChild(document.createElement('div'));\nmodal.$counter.className = 'theme-counter';\nmodal.$counter.appendChild(document.createElement('div'));\nmodal.$counter.firstChild.className = '';\n\n\nif ( window.top.stbEvent ) {\n    window.top.stbEvent.addListener('message', self.onDeviceStorageListChange = function ( evt ) {\n        if ( !modal.visible ) {\n            return;\n        }\n\n        if ( currentOption.refreshEvent === 'deviceStorageListChange' ) {\n            if ( evt.broadcast && (evt.message === 'storage.mount' || evt.message === 'storage.unmount') ) {\n                currentOption.getter.call(currentOption, function ( value ) {\n                    currentOption.prepareForRender(value, function ( data ) {\n                        var focusIndex = 0;\n\n                        data.forEach(function ( item, index ) {\n                            if ( item.selected ) {\n                                focusIndex = index;\n                            }\n                        });\n\n                        list.init({\n                            focusIndex: focusIndex,\n                            data: data,\n                            size: data.length > 5 ? 5 : data.length\n                        });\n                    });\n                });\n            }\n        }\n    });\n}\n\n\n// function setCurrentValue ( value ) {\n\n// }\n\n// function getCurrentValue (  ) {\n\n// }\n\n/* eslint no-invalid-this: 0 */\nfunction refreshCurrentList ( data ) {\n    console.log('refreshCurrentList ' + this.id);\n    console.log(data.length);\n    this.list = data;\n}\n\n\nmodule.exports = function ( data, callback ) {\n    var self = this;\n\n    self.focusIndex = 0;\n\n    self.events['saved'] = [\n        function ( value ) {\n            self.list.forEach(function ( item ) {\n                item.selected = item.value === value;\n            });\n            nodeMap.data[currentOption.id].initialValue = value;\n        }\n    ];\n\n    data.forEach(function ( item, index ) {\n        if ( item.selected ) {\n            self.focusIndex = index;\n        }\n    });\n    self.list = data;\n    // self.set = setCurrentValue;\n    // self.get = getCurrentValue;\n    self.refresh = refreshCurrentList;\n\n    listItemRender.call(this, null, function () {\n        nodeMap.data[self.id].onclick = function () {\n            currentOption = self;\n            currentOption.list.forEach(function ( item, index ) {\n                if ( item.selected ) {\n                    currentOption.focusIndex = index;\n                }\n            });\n\n            modal.$text.innerText = self.title || gettext('Choose option');\n\n            modal.$counter.firstChild.innerText = currentOption.list.length;\n\n            if ( modal.parent ) {\n                if ( app.activePage !== modal.parent ) {\n                    modal.parent.remove(modal);\n                    app.activePage.add(modal);\n                }\n            } else {\n                app.activePage.add(modal);\n            }\n\n            list.init({\n                focusIndex: currentOption.focusIndex,\n                data: currentOption.list,\n                size: currentOption.list.length > 5 ? 5 : currentOption.list.length\n            });\n\n            setTimeout(function () {\n                modal.show();\n            }, 0);\n        };\n\n        callback();\n    });\n};\n","/**\n *\n * @author Igor Zapororzhets <deadbyelpy@gmail.com>.\n */\n\n'use strict';\n\n\n/* eslint no-use-before-define: 0*/\n/* eslint no-useless-call: 0 */\n\nvar app  = require('mag-app'),\n    keys = require('stb-keys'),\n\n    Modal = require('mag-component-modal'),\n    List  = require('mag-component-layout-list'),\n    Scroll          = require('stb-component-scrollbar'),\n    // ScrollArea      = require('mag-component-scroll-area'),\n\n    nodeMap = require('../node.map.js'),\n    listItemRender = require('./list.item'),\n\n    scroll = new Scroll({}),\n    // textArea = new ScrollArea({\n    //     propagate: true,\n    //     step: 5,\n    //     scroll: scroll\n    // }),\n\n\n    list = new List({\n        propagate: true,\n        size: 7,\n        focusIndex: 0,\n        scroll: scroll,\n        noData: 'No channels',\n        // data: [[1]],\n        // render: function ( $node, data ) {\n        //     if ( !$node.$layout ) {\n        //         $node.innerText = '';\n\n        //         while ( $node.firstChild ) {\n        //             $node.removeChild($node.firstChild);\n        //         }\n\n        //         $node.$layout = $node.appendChild(document.createElement('div'));\n        //         $node.$layout.className = 'mag-component-layout';\n\n        //         $node.$text = document.createElement('div');\n\n        //         $node.$layout.appendChild($node.$text);\n        //     }\n\n        //     $node.$text.innerText = data.name || data.value;\n        // },\n        events: {\n            keydown: function ( event ) {\n                // List.prototype.defaultEvents.keydown.call(this, event);\n\n                switch ( event.code ) {\n                    case keys.back:\n                        event.stop = true;\n                        modal.hide();\n                        break;\n\n                    default:\n                        if ( this.highlightFocus ) {\n                            List.prototype.defaultEvents.keydown.call(this, event);\n                        } else if ( event.code === keys.down ) {\n                            this.move(keys.pageDown);\n                        } else if ( event.code === keys.up ) {\n                            this.move(keys.pageUp);\n                        } else {\n                            this.move(event.code);\n                        }\n                        break;\n                }\n            },\n            'focus:item': function ( event ) {\n                if ( !this.highlightFocus ) {\n                    // if ( event.$prev ) {\n                    //     event.$prev.classList.remove('focus');\n                    // }\n                    event.$curr.classList.remove('focus');\n                }\n            },\n            'move:view': function () {\n                modal.$counter.firstChild.innerText = this.data.length;\n            }\n        }\n    }),\n    modal = new Modal({\n        title: 'Choose',\n        children: [\n            list,\n            scroll\n        ],\n        events: {\n            show: function () {\n                app.activePanelSet.blur();\n                list.focus();\n                list.focusIndex(0);\n            },\n            hide: function () {\n                app.activePanelSet.focus();\n            }\n        }\n    }),\n    currentOption;\n\n\n// textArea.add(list);\nmodal.$node.classList.add('select-list');\n// list.$node.className = 'mag-component-layout-list padded';\n// list.$node.appendChild(list.$body);\n// list.$body.className = 'body';\n// list.$body.title = '';\n\nmodal.$counter = modal.$text.parentNode.appendChild(document.createElement('div'));\nmodal.$counter.className = 'theme-counter';\nmodal.$counter.appendChild(document.createElement('div'));\nmodal.$counter.firstChild.className = '';\nlist.$node.className = 'mag-component-layout-list padded table-like';\n\n\nfunction showModal ( option, data ) {\n    currentOption = option;\n    // currentOption.list.forEach(function ( item, index ) {\n    //     if ( item.selected ) {\n    //         currentOption.focusIndex = index;\n    //     }\n    // });\n\n\n    modal.$text.innerText = self.title || gettext('Choose option');\n\n    modal.$counter.firstChild.innerText = data.length;\n    console.log(modal.$counter.innerHTML);\n\n    if ( modal.parent ) {\n        if ( app.activePage !== modal.parent ) {\n            modal.parent.remove(modal);\n            app.activePage.add(modal);\n        }\n    } else {\n        app.activePage.add(modal);\n    }\n\n    list.init({\n        size: data.length > 5 ? 5 : data.length,\n        data: data\n    });\n\n    if ( currentOption.events.click && currentOption.events.click.length > 0  ) {\n        currentOption.events.click[0].call(list);\n    }\n    list.highlightFocus = currentOption.config.focusable;\n\n    setTimeout(function () {\n        modal.show();\n    }, 0);\n}\n\n\nmodule.exports = function ( data, callback ) {\n    var self = this;\n\n    // self.focusIndex = 0;\n\n    // data.forEach(function ( item, index ) {\n    //     if ( item.selected ) {\n    //         self.focusIndex = index;\n    //     }\n    // });\n    // self.list = data;\n\n    if ( !this.config ) {\n        this.config = {\n            focusable: true\n        };\n    }\n\n    listItemRender.call(this, null, function () {\n        nodeMap.data[self.id].onclick = function () {\n            if ( self.warningText ) {\n                require('../utils/confirm')(self.warningText, function ( result ) {\n                    if ( result ) {\n                        showModal(self, data);\n                    }\n                });\n            } else {\n                showModal(self, data);\n            }\n        };\n\n        callback();\n    });\n};\n","/**\n *\n * @author Igor Zapororzhets <deadbyelpy@gmail.com>.\n */\n\n'use strict';\n\n\n/* eslint no-use-before-define: 0*/\n/* eslint no-useless-call: 0 */\n\n\nvar app  = require('mag-app'),\n    keys = require('stb-keys'),\n\n    Modal = require('mag-component-modal'),\n    ProgressBar  = require('spa-component-progress-bar'),\n\n    nodeMap = require('../node.map.js'),\n    listItemRender = require('./list.item'),\n\n    progressBar = new ProgressBar({\n        focusable: true,\n        events: {\n            keydown: function ( event ) {\n                switch ( event.code ) {\n                    case keys.right:\n                        this.set(this.value + currentOption.config.step);\n                        break;\n\n                    case keys.left:\n                        this.set(this.value - currentOption.config.step);\n                        break;\n\n                    case keys.back:\n                        event.stop = true;\n                        modal.hide();\n                        break;\n\n                    case keys.ok:\n                        if ( currentOption.saveImmediate ) {\n                            if ( typeof currentOption.prepareForSave === 'function' ) {\n                                currentOption.prepareForSave.call(currentOption, progressBar.value, function ( error, afterSave ) {\n                                    if ( !error ) {\n                                        currentOption.saver.call(currentOption, function ( error, callback ) {\n                                            if ( !error ) {\n                                                currentOption.config.value = progressBar.value;\n                                                if ( typeof afterSave === 'function' ) {\n                                                    afterSave.call(currentOption);\n                                                }\n                                            }\n\n                                            if ( typeof callback === 'function' ) {\n                                                callback.call(currentOption, error);\n                                            }\n                                        });\n                                    }\n                                });\n                            } else {\n                                currentOption.saver.call(currentOption, function ( error, callback ) {\n                                    if ( !error ) {\n                                        currentOption.config.value = progressBar.value;\n                                    }\n\n                                    if ( typeof callback === 'function' ) {\n                                        callback.call(currentOption, error);\n                                    }\n                                });\n                            }\n                        } else {\n                            nodeMap.data[currentOption.id].listInstance.$nodeChange(\n                                currentOption.config.value !== progressBar.value,\n                                currentOption,\n                                progressBar.value\n                            );\n                        }\n                        event.stop = true;\n                        modal.hide();\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        }\n    }),\n    modal = new Modal({\n        title: 'Choose',\n        children: [progressBar],\n        events: {\n            show: function () {\n                app.activePanelSet.blur();\n                progressBar.focus();\n            },\n            hide: function () {\n                app.activePanelSet.focus();\n            }\n        }\n    }),\n    $progressValue = document.createElement('div'),\n    $rangeInput = document.createElement('div'),\n    currentOption = null;\n\n\n$rangeInput.className = 'range-input';\nprogressBar.$value.classList.add('osdFocusItem');\n$rangeInput.appendChild(progressBar.$node);\n$rangeInput.appendChild($progressValue);\nmodal.$body.appendChild($rangeInput);\n$progressValue.className = 'textValue';\n\nprogressBar.addListener('change', function ( event ) {\n    $progressValue.innerText = event.curr;\n});\n\nmodule.exports = function ( value, callback ) {\n    var self = this;\n\n    self.config.value = +value;\n\n    listItemRender.call(this, null, function () {\n        nodeMap.data[self.id].onclick = function () {\n            modal.$text.innerText = self.name;\n\n            if ( modal.parent ) {\n                if ( app.activePage !== modal.parent ) {\n                    modal.parent.remove(modal);\n                    app.activePage.add(modal);\n                }\n            } else {\n                app.activePage.add(modal);\n            }\n\n            currentOption = self;\n            progressBar.init({\n                min: self.config.min,\n                max: self.config.max,\n                value: self.config.value\n            });\n            currentOption.config.step = self.config.step || 1;\n            $progressValue.innerText = self.config.value;\n            setTimeout(function () {\n                modal.show();\n            }, 0);\n        };\n\n        callback();\n    });\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component');\n\n\n/**\n * Base progress bar implementation.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} [config={}] init parameters (all inherited from the parent)\n * @param {number} [config.value=0] initial value\n * @param {number} [config.max=100] max progress value\n * @param {number} [config.min=0] min progress value\n */\nfunction ProgressBar ( config ) {\n    // sanitize\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    /**\n     * Max progress value.\n     *\n     * @type {number}\n     */\n    this.max = 100;\n\n    /**\n     * Min progress value.\n     *\n     * @type {number}\n     */\n    this.min = 0;\n\n    /**\n     * Initial progress position.\n     *\n     * @type {number}\n     */\n    this.value = 0;\n\n    /**\n     * Value of the one percent step\n     *\n     * @type {number}\n     */\n    this.step = 1;\n\n    // can't accept focus\n    config.focusable = config.focusable || false;\n\n    // set default className if classList property empty or undefined\n    //config.className = 'progressBar ' + (config.className || '');\n\n    // parent constructor call\n    Component.call(this, config);\n\n    // insert bar line\n    this.$value = this.$body.appendChild(document.createElement('div'));\n\n    // correct CSS class name\n    this.$value.className = 'value';\n\n    // component setup\n    this.init(config);\n}\n\n\n// inheritance\nProgressBar.prototype = Object.create(Component.prototype);\nProgressBar.prototype.constructor = ProgressBar;\n\n// set component name\nProgressBar.prototype.name = 'spa-component-progress-bar';\n\n\n/**\n * Set position of the given value.\n * Does nothing in case when progress is end and passed value is more than max value.\n *\n * @param {number} value new value to set\n * @return {boolean} operation result\n *\n * @fires module:stb/ui/progress.bar~ProgressBar#done\n * @fires module:stb/ui/progress.bar~ProgressBar#change\n */\nProgressBar.prototype.set = function ( value ) {\n    var prevValue = this.value;\n\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( Number(value) !== value ) {\n            throw new Error(__filename + ': value must be a number');\n        }\n    }\n\n    // value changed but in the given range\n    if ( this.value !== value && value <= this.max && value >= this.min ) {\n        // set new value\n        this.value = value;\n\n        // get value in percents\n        value = Math.abs(this.value - this.min) / this.step;\n\n        if ( value === 100 ) {\n            // there are some listeners\n            if ( this.events['done'] ) {\n                /**\n                 * Set progress to its maximum value.\n                 *\n                 * @event module:stb/ui/progress.bar~ProgressBar#done\n                 */\n                this.emit('done');\n            }\n        }\n\n        // set progress bar width\n        this.$value.style.width = value + '%';\n\n        // there are some listeners\n        if ( this.events['change'] ) {\n            /**\n             * Update progress value.\n             *\n             * @event module:stb/ui/progress.bar~ProgressBar#change\n             *\n             * @type {Object}\n             * @property {number} prev old/previous progress value\n             * @property {number} curr new/current progress value\n             */\n            this.emit('change', {curr: this.value, prev: prevValue});\n        }\n\n        return true;\n    }\n\n    // nothing was done\n    return false;\n};\n\n\n/**\n * Init or re-init current max or/and min or/and value.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nProgressBar.prototype.init = function ( config ) {\n    if ( DEVELOP ) {\n        if ( arguments.length !== 1 ) {\n            throw new Error(__filename + ': wrong arguments number');\n        }\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n    }\n\n    // set max progress value\n    if ( config.max !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.max) !== config.max ) {\n                throw new Error(__filename + ': config.max value must be a number');\n            }\n        }\n\n        // apply\n        this.max = config.max;\n    }\n\n    // set min progress value\n    if ( config.min !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.min) !== config.min ) {\n                throw new Error(__filename + ': config.min value must be a number');\n            }\n        }\n\n        // apply\n        this.min = config.min;\n    }\n\n    if ( DEVELOP ) {\n        if ( this.min >= this.max ) {\n            throw new Error(__filename + ': this.min value must be less than this.max');\n        }\n    }\n\n    // set actual progress value\n    if ( config.value !== undefined ) {\n        if ( DEVELOP ) {\n            if ( Number(config.value) !== config.value ) {\n                throw new Error(__filename + ': config.value must be a number');\n            }\n            if ( config.value > this.max ) {\n                throw new Error(__filename + ': config.value more than config.maximum');\n            }\n            if ( config.value < this.min ) {\n                throw new Error(__filename + ': config.value less than config.minimum');\n            }\n        }\n\n        // apply\n        this.value = config.value;\n    }\n\n    this.step = Math.abs(this.max - this.min) / 100;\n\n    // init bar size, (this.min - this.value) - calculate distance from start\n    this.$value.style.width = (Math.abs(this.min - this.value) / this.step) + '%';\n};\n\n\n// public\nmodule.exports = ProgressBar;\n","'use strict';\n\n\nvar nodeMap = require('../node.map.js');\n\n/* eslint no-useless-call: 0 */\n/* eslint no-path-concat: 0 */\nmodule.exports = function ( value, callback ) {\n    var self      = this,\n        $node     = nodeMap.data[this.id],\n        $layout   = document.createElement('div'),\n        $icon     = document.createElement('div'),\n        $checkbox = document.createElement('div'),\n        $text     = document.createElement('div'),\n        state     = !!value;\n\n    if ( self.cached !== null ) {\n        state = self.cached;\n    }\n\n    console.log('toggle render initial state: ' + state);\n\n    self.events['saved'] = [\n        function () {\n            console.log('saved');\n            state = self.cached;\n            self.cached = null;\n        }\n    ];\n\n    while ( $node.firstChild ) {\n        $node.removeChild($node.firstChild);\n    }\n\n    console.log('toggle render ' + state);\n\n    $text.innerText = this.name;\n\n    $icon.className = 'theme-icon ' + this.icon;\n    $text.className = 'wrappedText';\n    $checkbox.className = 'theme-icon theme-icon-checkbox' + (state ? '-active' : '');\n\n    $layout.className = 'mag-component-layout';\n\n    $layout.appendChild($icon);\n    $layout.appendChild($text);\n    $layout.appendChild($checkbox);\n\n    // $node here\n    $node.appendChild($layout);\n\n    // $node here\n    $node.onclick = function ( event ) {\n        // very bad hack cause in main.panel 'click:item' - is bad handler\n        // task #20082\n        // TODO: remove this check after removing wrong event\n        if ( event !== true  ) {\n            return;\n        }\n\n        console.log(event, 'onclick event');\n        if ( self.saveImmediate ) {\n            if ( typeof self.prepareForSave === 'function' ) {\n                console.log('state: ' + state);\n                self.prepareForSave.call(self, !state, function ( error, afterSave ) {\n                    if ( error ) {\n                        console.log(error);\n                    } else {\n                        self.saver.call(self, function ( error, done ) {\n                            if ( error ) {\n                                console.log(error);\n                            } else {\n                                state = !state;\n                                self.cached = null;\n                                console.log('state: ' + state);\n                                $checkbox.className = 'theme-icon theme-icon-checkbox' + (state ? '-active' : '');\n\n                                if ( typeof afterSave === 'function' ) {\n                                    afterSave.call(self);\n                                }\n                            }\n\n                            if ( typeof done === 'function' ) {\n                                done.call(self, error);\n                            }\n                        });\n                    }\n                });\n            } else {\n                throw Error(__filename + ' saveImmediate: true for toggle render must use prepareForSave method');\n                // self.saver.call(self, function ( error, callback ) {\n                //     if ( !error ) {\n                //         state = self.cached;\n                //         self.cached = null;\n                //         $checkbox.className = 'theme-icon theme-icon-checkbox' + (state ? '-active' : '');\n                //     }\n\n                //     if ( typeof callback === 'function' ) {\n                //         callback.call(self, error);\n                //     }\n                // });\n            }\n        } else {\n            if ( self.cached === null ) {\n                self.cached = state;\n            }\n            self.cached = !self.cached;\n            $checkbox.className = 'theme-icon theme-icon-checkbox' + (self.cached ? '-active' : '');\n            nodeMap.data[self.id].listInstance.$nodeChange(self.cached !== state, self, self.cached);\n        }\n    };\n\n    callback();\n};\n","'use strict';\n\n\nvar nodeMap = require('../node.map.js'),\n    listItemRender = require('./list.item');\n\n\nmodule.exports = function ( value, callback ) {\n    var self = this;\n\n    listItemRender.call(this, null, function () {\n        nodeMap.data[self.id].onclick = function () {\n            require('../utils/confirm')(self.confirmation.title, function ( result ) {\n                self.confirmation.callback.call(self, result);\n            });\n        };\n    });\n\n    callback();\n};\n","'use strict';\n\n\nvar nodeMap = require('../node.map.js'),\n    listItemRender = require('./list.item');\n\n\n/* eslint no-useless-call: 0 */\n\n\nmodule.exports = function ( value, callback ) {\n    var self = this;\n\n    nodeMap.data[self.id].value = value;\n    listItemRender.call(this, null, function () {\n        nodeMap.data[self.id].onclick = function () {\n            self.config.value = nodeMap.data[self.id].value;\n            window.core.intent({\n                action: 'keyboard',\n                data: self.config,\n                events: {\n                    done: function ( event ) {\n                        if ( self.saveImmediate ) {\n                            if ( typeof self.prepareForSave === 'function' ) {\n                                self.prepareForSave.call(self, event.value, function ( error, afterSave ) {\n                                    if ( !error ) {\n                                        self.saver.call(self, function ( error, done ) {\n                                            if ( !error ) {\n                                                nodeMap.data[self.id].value = event.value;\n                                                if ( typeof afterSave === 'function' ) {\n                                                    afterSave.call(self, error);\n                                                }\n                                            }\n\n                                            if ( typeof done === 'function' ) {\n                                                done.call(self, error);\n                                            }\n                                        });\n                                    }\n                                });\n                            } else {\n                                self.saver.call(self, function ( error, done ) {\n                                    if ( !error ) {\n                                        nodeMap.data[self.id].value = event.value;\n                                    }\n                                    if ( typeof done === 'function' ) {\n                                        done.call(self, error);\n                                    }\n                                });\n                            }\n                        } else {\n                            nodeMap.data[self.id].listInstance.$nodeChange(event.value !== self.value, self, event.value);\n                        }\n                    }\n                }\n            }, function ( error ) {\n                console.log(error);\n            });\n        };\n    });\n\n    callback();\n};\n","'use strict';\n\n\nvar nodeMap = require('../node.map.js'),\n    group = {\n        name: '',\n        list: [],\n        active: null\n    };\n\n\nmodule.exports = function ( value, callback ) {\n    var self = this,\n        $layout = document.createElement('div'),\n        $icon = document.createElement('div'),\n        $text = document.createElement('div');\n\n\n    while ( nodeMap.data[this.id].firstChild ) {\n        nodeMap.data[this.id].removeChild(nodeMap.data[this.id].firstChild);\n    }\n\n    $text.innerText = this.name;\n\n    $icon.className = 'theme-icon ' + this.icon;\n    $text.className = '';\n\n    $layout.className = 'mag-component-layout';\n\n    $layout.appendChild($icon);\n    $layout.appendChild($text);\n\n    if ( this.config && this.config.group ) {\n        if ( group.name !== this.config.group ) {\n            group.name = this.config.group;\n            group.list.splice(0);\n            group.active = null;\n        }\n\n        $icon = document.createElement('div');\n        $layout.appendChild($icon);\n\n        group.list.push(this);\n\n        if ( this.config.enabled  ) {\n            group.active = this;\n            $icon.className = 'theme-icon theme-icon theme-icon-ok';\n        }\n    }\n\n    // $node here\n    nodeMap.data[this.id].appendChild($layout);\n\n    nodeMap.data[this.id].onclick = function () {\n        if ( self.config.group ) {\n            if ( group.active !== self ) {\n                self.emit('check', function ( result ) {\n                    if ( result ) {\n                        group.active.config.enabled = !!group.active.config.enabled;\n                        nodeMap.data[group.active.id].firstChild.lastChild.className = 'theme-icon theme-icon';\n                        group.active = self;\n                        self.config.enabled = !!self.config.enabled;\n                        $icon.className = 'theme-icon theme-icon theme-icon-ok';\n                    }\n                });\n            }\n        } else {\n            self.emit('check', function ( result ) {\n                if ( result ) {\n                    if ( self.config.enabled ) {\n                        $icon.className = 'theme-icon theme-icon theme-icon-ok';\n                    } else {\n                        $icon.className = 'theme-icon theme-icon';\n                    }\n                    self.config.enabled = !!self.config.enabled;\n                }\n            });\n        }\n    };\n\n    callback();\n};\n","/**\n * @license The MIT License (MIT)\n * @author Stanislav Kalashnik <darkpark.main@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Emitter   = require('cjs-emitter'),\n    preloader = new Emitter(),\n    queueSize = 0,\n    groups    = {},\n    verbose   = false;\n\n\n/**\n * One of the links is loaded.\n *\n * @event module:stb/preloader#link\n *\n * @type {Object}\n * @property {string} url link address\n * @property {string} group group name\n */\n\n/**\n * The whole group of links is loaded.\n *\n * @event module:stb/preloader#group\n *\n * @type {Object}\n * @property {string} name group name\n */\n\n/**\n * Everything is loaded.\n *\n * @event module:stb/preloader#done\n */\n\n\n/**\n * Handler of image loading process.\n *\n * @param {Event} event load event\n *\n * @fires module:stb/preloader#link\n * @fires module:stb/preloader#group\n * @fires module:stb/preloader#done\n */\nfunction handler ( event ) {\n    /* eslint no-invalid-this: 0 */\n\n    // report\n    if ( event.type === 'error' ) {\n        debug.log('[preloader] group \"' + this.group + '\" link \"' + this.src + '\"', 'red');\n    } else if ( verbose ) {\n        debug.log('[preloader] group \"' + this.group + '\" link \"' + this.src + '\" (' + this.width + 'x' + this.height + ')');\n    }\n\n    queueSize--;\n    groups[this.group]--;\n\n    // one link is done\n    if ( preloader.events['link'] ) {\n        // notify listeners\n        preloader.emit('link', {url: this.src, group: this.group});\n    }\n\n    // the whole group is done\n    if ( groups[this.group] === 0 ) {\n        debug.log('[preloader] group \"' + this.group + '\" loaded');\n        // one link is done\n        if ( preloader.events['group'] ) {\n            // notify listeners\n            preloader.emit('group', {name: this.group});\n        }\n    }\n\n    // everything is done\n    if ( queueSize === 0 ) {\n        debug.log('[preloader] done');\n        // all links are done\n        if ( preloader.events['done'] ) {\n            // notify listeners\n            preloader.emit('done');\n        }\n    }\n}\n\n\n/**\n * Clear and fill the router with the given list of pages.\n *\n * @param {Array} links list of urls to load\n *\n * @example\n * preloader.addListener('link', function ( data ) { console.log(data.url, data.group); });\n * preloader.addListener('group', function ( data ) { console.log(data.name); });\n * preloader.addListener('done', function () { console.log('ok'); });\n *\n * preloader.add([\n *     'http://pic.uuhy.com/uploads/2011/09/01/Painting-Of-Nature.png',\n *     'https://perishablepress.com/wp/wp-content/themes/wire/img/jeff-starr.jpg',\n *     {url: 'http://www.phpied.com/files/reflow/dyna1.png', group:'qwe'},\n *     {url: 'http://www.phpied.com/files/reflow/dyna3.png', group:'qwe'},\n *     'http://www.phpied.com/files/reflow/render.wrong.extension'\n * ]);\n */\npreloader.add = function ( links ) {\n    if ( DEVELOP ) {\n        if ( !Array.isArray(links) ) {\n            throw new Error(__filename + ': wrong argument links');\n        }\n    }\n\n    // walk through all the given links\n    links.forEach(function ( item ) {\n        var img   = new Image(),\n            url   = item.url   || item,\n            group = item.group || '';\n\n        if ( DEVELOP ) {\n            if ( typeof url !== 'string' ) {\n                throw new Error(__filename + ': wrong url type');\n            }\n            if ( typeof group !== 'string' ) {\n                throw new Error(__filename + ': wrong group type');\n            }\n            if ( url.trim() === '' ) {\n                throw new Error(__filename + ': empty url');\n            }\n        }\n\n        // increase counters\n        queueSize++;\n        groups[group] = groups[group] === undefined ? 1 : groups[group] + 1;\n\n        // build tag\n        img.src    = url;\n        img.group  = group;\n        img.onload = img.onerror = img.ontimeout = handler;\n    });\n\n};\n\n\n// public\nmodule.exports = preloader;\n","/**\n * @license The MIT License (MIT)\n * @copyright Boris Aleynikov <aleynikov.boris@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('spa-component'),\n    keys      = require('stb-keys');\n\n\n/**\n * Scroll area implementation\n *\n * @constructor\n * @extends Component\n *\n * @param {Object} config object\n * @param {number} [config.step] step in % of screen height to scroll area\n */\nfunction ScrollArea ( config ) {\n\n    config = config || {};\n\n    if ( DEVELOP ) {\n        if ( typeof config !== 'object' ) {\n            throw new Error(__filename + ': wrong config type');\n        }\n        // init parameters checks\n        if ( 'className' in config && (!config.className || typeof config.className !== 'string') ) {\n            throw new Error(__filename + ': wrong or empty config.className');\n        }\n    }\n\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    /**\n     * Step to scroll area in % of screen height\n     *\n     * @type {number}\n     */\n    this.step = 5;\n\n    /**\n     * Real height of scroll area\n     *\n     * @type {number}\n     */\n    this.realHeight = 0;\n\n    /**\n     * Visible height of area\n     *\n     * @type {number}\n     */\n    this.viewHeight = 0;\n\n    /**\n     * Top position of scroll container\n     *\n     * @type {number}\n     */\n    this.topPosition = 0;\n\n    /**\n     * Associated ScrollBar component link.\n     *\n     * @type {ScrollBar}\n     */\n    this.scroll = null;\n\n    Component.call(this, config);\n\n    this.$node.appendChild(this.$body);\n\n    // component setup\n    this.init(config);\n}\n\n\nScrollArea.prototype = Object.create(Component.prototype);\nScrollArea.prototype.constructor = ScrollArea;\n\n// set component name\nScrollArea.prototype.name = 'mag-component-scroll-area';\n\n\n/**\n * List of all default event callbacks.\n *\n * @type {Object.<string, function>}\n */\nScrollArea.prototype.defaultEvents = {\n    /**\n     * Default method to handle keyboard keydown events.\n     *\n     * @param {Object} event generated event\n     */\n    keydown: function ( event ) {\n        switch ( event.code ) {\n            case keys.up:\n            case keys.down:\n                this.move(event.code);\n                break;\n        }\n    },\n    mousewheel: function ( event ) {\n        // scrolling by Y axis\n        this.move(event.wheelDeltaY > 0 ? keys.up : keys.down);\n    }\n};\n\n\n/**\n * Attempt to go beyond the edge of the list.\n *\n * @event\n *\n * @type {Object}\n * @property {number} direction key code initiator of movement\n */\n\n\n/**\n * Move ScrollArea content\n *\n * @param {number} direction to move\n */\nScrollArea.prototype.move = function ( direction ) {\n    var height = screen.height,\n        delta  = this.viewHeight - this.realHeight;\n\n    // run logic only if it's reasonable to navigate\n    if ( delta < 0 ) {\n        switch ( direction ) {\n            case keys.down:\n                if ( this.topPosition - this.step * height / 100 < delta ) {\n                    this.scroll.scrollTo(-delta);\n                    this.$body.style.top = delta + 'px';\n                    this.emit('overflow', {direction: direction});\n\n                    return;\n                }\n\n                this.topPosition -= Math.ceil(this.step * height / 100);\n\n                if ( this.scroll ) {\n                    this.scroll.scrollTo(-this.topPosition);\n                }\n                this.$body.style.top = this.topPosition + 'px';\n                break;\n            case keys.up:\n                if ( this.topPosition + this.step * height / 100 > 0 ) {\n                    this.scroll.scrollTo(0);\n                    this.$body.style.top = '0px';\n                    this.emit('overflow', {direction: direction});\n\n                    return;\n                }\n                this.topPosition += Math.ceil(this.step * height / 100);\n\n                if ( this.scroll ) {\n                    this.scroll.scrollTo(-this.topPosition);\n                }\n                this.$body.style.top = this.topPosition + 'px';\n                break;\n        }\n    } else {\n        this.emit('overflow', {direction: direction});\n    }\n};\n\n\n/**\n * Init or re-init of the component inner structures and HTML.\n *\n * @param {Object} config init parameters (subset of constructor config params)\n */\nScrollArea.prototype.init = function ( config ) {\n\n    config = config || {};\n\n    this.realHeight = this.$body.offsetHeight;\n    this.viewHeight = this.$node.offsetHeight;\n    this.topPosition = 0;\n    this.$body.style.top = this.topPosition + 'px';\n\n    if ( config.scroll ) {\n        this.scroll = config.scroll;\n    }\n\n    if ( config.step ) {\n        this.step = config.step;\n    }\n\n    if ( this.scroll ) {\n        this.scroll.init({\n            realSize: this.realHeight,\n            viewSize: this.viewHeight,\n            value: this.topPosition\n        });\n    }\n};\n\nmodule.exports = ScrollArea;\n","/**\n * @license The MIT License (MIT)\n * @copyright Dmitry Fedotov <bas.jsdev@gmail.com>\n */\n\n/* eslint no-path-concat: 0 */\n\n'use strict';\n\nvar Component = require('stb-component'),\n    keys      = require('stb-keys'),\n    classes   = {};\n\n\n// initialize classes\nclasses[keys.f1] = 'theme-icon-rc-f1';\nclasses[keys.f2] = 'theme-icon-rc-f2';\nclasses[keys.f3] = 'theme-icon-rc-f3';\nclasses[keys.f4] = 'theme-icon-rc-f4';\nclasses[keys.menu] = 'theme-icon-rc-menu';\nclasses[keys.ok] = 'theme-icon-rc-ok';\nclasses[keys.info] = 'theme-icon-rc-info';\nclasses[keys.playPause] = 'theme-icon-rc-play-pause';\nclasses[keys.back] = 'theme-icon-rc-back';\nclasses[keys.exit] = 'theme-icon-rc-home';\nclasses[keys.keyboard] = 'theme-icon-rc-vk';\nclasses[keys.refresh] = 'theme-icon-rc-refresh';\nclasses[keys.frame] = 'theme-icon-rc-aspect';\n\n/**\n * Footer.\n *\n * @constructor\n * @extends Component\n *\n * @param {Object}  config={} - init parameters\n * @param {Object}  config.parent - parent page\n * @param {boolean} [config.visible] - visibility flag\n * @param {Object}  [config.data] - footer buttons config\n * @param {Object}  [config.data.left] - left button config\n * @param {Object}  [config.data.middle] - middle buttons config\n * @param {Object}  [config.data.right] - right button config\n * @param {number}  [config.data.middle.code] - button key code\n * @param {Object}  [config.data.middle.title] - button title\n * @param {Object}  [config.data.middle.action] - button press (click) action\n * @param {Object}  [config.data.label] - button config (for remote control with long press)\n * @param {number}  [config.data.label.code] - button key code\n * @param {Object}  [config.data.label.title] - button title\n * @param {Object}  [config.data.label.action] - button press (click) action\n *\n * @example\n * page.footer = new Footer({\n *     parent: page,\n *     data: {\n *         left: {\n *             code: keys.menu, action: function () {}\n *         },\n *         middle: [\n *             {code: 55, action: function () {}},\n *             {code: keys.f1, title: 'stop', action: function () {}},\n *             {code: 9000, className: 'customIcon', title: 'start', action: function () {}},\n *             {code: keys.f4, title: 'end', action: function () {}}\n *         ],\n *         right: {\n *             code: 65, action: function () {}\n *         },\n *         label: {\n *             code: keys.menu, title: 'Hold OK button to open the task options', action: function () {}\n *         }\n *     }\n * });\n */\n\n/* eslint max-statements: 0 */\nfunction Footer ( config ) {\n    var currentTab = 0,\n        self       = this,\n        $body;\n\n    // sanitize\n    config = config || {};\n    // can't accept focus\n    config.focusable = false;\n    // hide by default\n    config.visible = config.visible || false;\n    // create centered div\n    config.$body = document.createElement('div');\n    config.$body.className = 'body';\n\n    // parent constructor call\n    Component.call(this, config);\n\n    this.tabs = [\n        {codes: {}},\n        {codes: {}},\n        {codes: {}},\n        {codes: {}}\n    ];\n\n    this.tab = 0;\n\n    this.$table = this.$node.appendChild(document.createElement('table'));\n    this.$table.insertRow();\n    this.$table.rows[0].insertCell(-1);\n\n    if ( TARGET !== 'android-stb' && TARGET !== 'android-app' ) {\n        this.$table.rows[0].insertCell(-1);\n        this.$table.rows[0].insertCell(-1);\n\n        this.$left = this.$table.rows[0].cells[0].appendChild(document.createElement('div'));\n        this.$left.className = 'theme-icon';\n\n        this.$table.rows[0].cells[1].className = 'central';\n        $body = this.tabs[currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n    } else {\n        this.$table.rows[0].cells[0].className = 'central noButtons';\n        $body = this.tabs[currentTab].$body = this.$table.rows[0].cells[0].appendChild(document.createElement('div'));\n    }\n\n    $body.className = 'wrapper hidden';\n    $body.appendChild(document.createElement('div'));\n    $body.lastChild.className = 'button';\n    $body.lastChild.appendChild(document.createElement('div'));\n\n    if ( TARGET !== 'android-stb' && TARGET !== 'android-app' ) {\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n        $body = this.tabs[++currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n        $body.className = 'wrapper hidden';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n\n        $body = this.tabs[++currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n        $body.className = 'wrapper hidden';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n\n        $body = this.tabs[++currentTab].$body = this.$table.rows[0].cells[1].appendChild(document.createElement('div'));\n        $body.className = 'wrapper hidden';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n        $body.appendChild(document.createElement('div'));\n        $body.lastChild.className = 'button';\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.appendChild(document.createElement('div'));\n        $body.lastChild.lastChild.className = 'title';\n\n\n        this.$right = this.$table.rows[0].cells[2].appendChild(document.createElement('div'));\n        this.$right.className = 'theme-icon';\n    } else {\n        $body.lastChild.lastChild.className = 'title label';\n    }\n\n    this.init(config.data);\n\n    this.parent.addListener('keydown', function ( event ) {\n        var currTab = self.tabs[self.tab];\n\n        if ( self.visible ) {\n            if ( currTab.codes[event.code] && typeof currTab.codes[event.code].action === 'function' ) {\n                currTab.codes[event.code].action();\n            }\n        }\n    });\n}\n\n\n// inheritance\nFooter.prototype = Object.create(Component.prototype);\nFooter.prototype.constructor = Footer;\n\n// set component name\nFooter.prototype.name = 'mag-component-footer';\n\n\nif ( TARGET !== 'android-stb' && TARGET !== 'android-app' ) {\n    /**\n     * Redefine buttons\n     *\n     * @param {Object} [config] - footer buttons config\n     * @param {Object} [config.left] - left button config\n     * @param {number} [config.left.code] - left button key code\n     * @param {boolean} [config.left.disabled] - left button is disabled\n     * @param {Object} [config.left.action] - left button press (click) action\n     * @param {Object} [config.middle] - middle buttons config\n     * @param {Object} [config.right] - right button config\n     * @param {number} [config.right.code] - right button key code\n     * @param {boolean} [config.right.disabled] - right button is disabled\n     * @param {Object} [config.right.action] - right button press (click) action\n     * @param {number} [config.middle.code] - button key code\n     * @param {Object} [config.middle.title] - button title\n     * @param {boolean} [config.middle.disabled] - button is disabled\n     * @param {Object} [config.middle.action] - button press (click) action\n     * @param {Object} [config.label] - button config\n     * @param {number} [config.label.code] - button key code\n     * @param {Object} [config.label.title] - button title\n     * @param {Object} [config.label.action] - button press (click) action\n     *\n     * page.Footer.init({\n     *     left: {\n     *         code: keys.menu, action: function () {}\n     *     },\n     *     middle: [\n     *         {code: 55, action: function () {}},\n     *         {code: keys.f1, title: 'stop', action: function () {}},\n     *         {code: 9000, className: 'customIcon', title: 'start', action: function () {}},\n     *         {code: keys.f4, title: 'end', disabled: true}\n     *     ],\n     *     right: {\n     *         code: 65, action: function () {}\n     *     }\n     * });\n     *\n     */\n    Footer.prototype.init = function ( config ) {\n        var index, $tab, $tabChildren;\n\n        config = config || {};\n\n        if ( DEVELOP ) {\n            if ( config.middle && config.middle.length > 4 ) {\n                throw new Error(__filename + ': only 4 buttons allowed in footer');\n            }\n            if ( config.middle && Array.isArray(config.middle) ) {\n                for ( index = 0; index < config.middle.length; index++ ) {\n                    if ( typeof config.middle[index].action !== 'function' && !config.middle[index].disabled ) {\n                        throw new Error(__filename + ': action must be a function');\n                    }\n                    ++index;\n                }\n            }\n            if ( config.left && typeof config.left.action !== 'function' && !config.left.disabled ) {\n                throw new Error(__filename + ': action must be a function');\n            }\n            if ( config.right && typeof config.right.action !== 'function' && !config.right.disabled ) {\n                throw new Error(__filename + ': action must be a function');\n            }\n        }\n\n        // hide old tab\n        this.tabs[this.tab].$body.classList.add('hidden');\n        this.tab = config.middle && config.middle.length ? config.middle.length - 1 : 0;\n        // current tab shortcut\n        $tab = this.tabs[this.tab];\n        // reset all actions\n        $tab.codes = {};\n\n        // left button\n        if ( config.left ) {\n            this.$left.className = config.left.className || ('theme-icon ' + (classes[config.left.code] || 'theme-icon-warning'));\n            if ( config.left.disabled ) {\n                this.$left.classList.add('disabled');\n            } else {\n                $tab.codes[config.left.code] = {action: config.left.action};\n                this.$left.style.visibility = 'inherit';\n                this.$left.onclick = function () {\n                    if ( typeof config.left.action === 'function' ) {\n                        config.left.action();\n                    }\n                };\n            }\n        } else if ( this.$left.style.visibility !== 'hidden' ) {\n            this.$left.style.visibility = 'hidden';\n        }\n\n        // right button\n        if ( config.right ) {\n            this.$right.className = config.right.className || ('theme-icon ' + (classes[config.right.code] || 'theme-icon-warning'));\n            if ( config.right.disabled ) {\n                this.$right.classList.add('disabled');\n            } else {\n                $tab.codes[config.right.code] = {action: config.right.action};\n                this.$right.style.visibility = 'inherit';\n                this.$right.onclick = function () {\n                    if ( typeof config.right.action === 'function' ) {\n                        config.right.action();\n                    }\n                };\n            }\n        } else if ( this.$right.style.visibility !== 'hidden' ) {\n            this.$right.style.visibility = 'hidden';\n        }\n\n        function addClick ( ind ) {\n            return function () {\n                if ( typeof config.middle[ind].action === 'function' ) {\n                    config.middle[ind].action();\n                }\n            };\n        }\n\n        // middle buttons\n        if ( config.middle && config.middle.length ) {\n            for ( index = 0; index < config.middle.length; index++ ) {\n                $tab.codes[config.middle[index].code] = {action: config.middle[index].action};\n                if ( config.middle[index].disabled ) {\n                    $tab.$body.children[index].classList.add('disabled');\n                } else {\n                    $tab.$body.children[index].classList.remove('disabled');\n                    $tab.$body.children[index].onclick = addClick(index);\n                }\n                // shortcut\n                $tabChildren = $tab.$body.children[index].children;\n                $tabChildren[0].className = 'iconImg ' +\n                    (config.middle[index].className || ('theme-icon ' + (classes[config.middle[index].code] || 'theme-icon-warning')));\n\n                $tabChildren[1].innerText = config.middle[index].title || '';\n            }\n            $tab.$body.classList.remove('hidden');\n        }\n    };\n} else {\n    /**\n     * Redefine buttons for android\n     *\n     * @param {Object} [config] - footer config\n     * @param {Object} [config.label] - button config\n     * @param {number} [config.label.code] - button key code\n     * @param {Object} [config.label.title] - button title\n     * @param {Object} [config.label.action] - button press (click) action\n     *\n     * initLongPressMode({\n     *     label: {code: keys.menu, title: 'Hold OK button to open the task options', action: function () {}}\n     * });\n     *\n     */\n    Footer.prototype.init = function ( config ) {\n        var $tab, $tabChildren;\n\n        config = config || {};\n\n        // current tab shortcut\n        $tab = this.tabs[0];\n        // reset\n        $tab.codes = {};\n        $tab.$body.classList.add('hidden');\n\n        if ( config.label && typeof config.label.action === 'function' ) {\n            // label button\n            $tab.codes[config.label.code] = {action: config.label.action};\n            $tab.$body.children[0].onclick = function () {\n                if ( typeof config.label.action === 'function' ) {\n                    config.label.action();\n                }\n            };\n            // shortcut\n            $tabChildren = $tab.$body.children[0].children;\n            // $tabChildren[0].className = '';\n            $tabChildren[0].innerText = config.label.title || '';\n\n            $tab.$body.classList.remove('hidden');\n        }\n    };\n}\n\n\n// public\nmodule.exports = Footer;\n"],"sourceRoot":""}